(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Config = function() { };
$hxClasses["Config"] = Config;
Config.__name__ = "Config";
Config.init = function() {
	utils_FileLoader.loadText("./assets/config.yaml",function(s) {
		Config.dict = utils_PlainYamlParser.parse(s);
	});
};
var DateTools = function() { };
$hxClasses["DateTools"] = DateTools;
DateTools.__name__ = "DateTools";
DateTools.__format_get = function(d,e) {
	switch(e) {
	case "%":
		return "%";
	case "A":
		return DateTools.DAY_NAMES[d.getDay()];
	case "B":
		return DateTools.MONTH_NAMES[d.getMonth()];
	case "C":
		return StringTools.lpad(Std.string(d.getFullYear() / 100 | 0),"0",2);
	case "D":
		return DateTools.__format(d,"%m/%d/%y");
	case "F":
		return DateTools.__format(d,"%Y-%m-%d");
	case "I":case "l":
		var hour = d.getHours() % 12;
		return StringTools.lpad(Std.string(hour == 0 ? 12 : hour),e == "I" ? "0" : " ",2);
	case "M":
		return StringTools.lpad(Std.string(d.getMinutes()),"0",2);
	case "R":
		return DateTools.__format(d,"%H:%M");
	case "S":
		return StringTools.lpad(Std.string(d.getSeconds()),"0",2);
	case "T":
		return DateTools.__format(d,"%H:%M:%S");
	case "Y":
		return Std.string(d.getFullYear());
	case "a":
		return DateTools.DAY_SHORT_NAMES[d.getDay()];
	case "b":case "h":
		return DateTools.MONTH_SHORT_NAMES[d.getMonth()];
	case "d":
		return StringTools.lpad(Std.string(d.getDate()),"0",2);
	case "e":
		return Std.string(d.getDate());
	case "H":case "k":
		return StringTools.lpad(Std.string(d.getHours()),e == "H" ? "0" : " ",2);
	case "m":
		return StringTools.lpad(Std.string(d.getMonth() + 1),"0",2);
	case "n":
		return "\n";
	case "p":
		if(d.getHours() > 11) {
			return "PM";
		} else {
			return "AM";
		}
		break;
	case "r":
		return DateTools.__format(d,"%I:%M:%S %p");
	case "s":
		return Std.string(d.getTime() / 1000 | 0);
	case "t":
		return "\t";
	case "u":
		var t = d.getDay();
		if(t == 0) {
			return "7";
		} else if(t == null) {
			return "null";
		} else {
			return "" + t;
		}
		break;
	case "w":
		return Std.string(d.getDay());
	case "y":
		return StringTools.lpad(Std.string(d.getFullYear() % 100),"0",2);
	default:
		throw new haxe_exceptions_NotImplementedException("Date.format %" + e + "- not implemented yet.",null,{ fileName : "DateTools.hx", lineNumber : 101, className : "DateTools", methodName : "__format_get"});
	}
};
DateTools.__format = function(d,f) {
	var r_b = "";
	var p = 0;
	while(true) {
		var np = f.indexOf("%",p);
		if(np < 0) {
			break;
		}
		var len = np - p;
		r_b += len == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len);
		r_b += Std.string(DateTools.__format_get(d,HxOverrides.substr(f,np + 1,1)));
		p = np + 2;
	}
	var len = f.length - p;
	r_b += len == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len);
	return r_b;
};
DateTools.format = function(d,f) {
	return DateTools.__format(d,f);
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = "EReg";
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw haxe_Exception.thrown("EReg::matched");
		}
	}
	,matchedLeft: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		return HxOverrides.substr(this.r.s,0,this.r.m.index);
	}
	,matchedRight: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		var sz = this.r.m.index + this.r.m[0].length;
		return HxOverrides.substr(this.r.s,sz,this.r.s.length - sz);
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0 ? s : HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b;
		}
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var FollowManager = function() { };
$hxClasses["FollowManager"] = FollowManager;
FollowManager.__name__ = "FollowManager";
FollowManager.followPlayer = function(login) {
	if(login == null) {
		throw haxe_Exception.thrown("login can't be null");
	}
	login = login.toLowerCase();
	if(FollowManager.followedLogin == login) {
		return;
	}
	FollowManager.followedLogin = login;
	net_Requests.followPlayer(login);
	GlobalBroadcaster.broadcast(GlobalEvent.FollowedPlayerUpdated(login));
};
FollowManager.stopFollowing = function() {
	if(FollowManager.followedLogin == null) {
		return;
	}
	FollowManager.followedLogin = null;
	Networker.emitEvent(net_shared_ClientEvent.StopFollowing);
	GlobalBroadcaster.broadcast(GlobalEvent.FollowedPlayerUpdated(null));
};
FollowManager.isFollowing = function() {
	return FollowManager.followedLogin != null;
};
FollowManager.getFollowedPlayerLogin = function() {
	return FollowManager.followedLogin;
};
var GlobalEvent = $hxEnums["GlobalEvent"] = { __ename__:"GlobalEvent",__constructs__:null
	,LoggedIn: {_hx_name:"LoggedIn",_hx_index:0,__enum__:"GlobalEvent",toString:$estr}
	,LoggedOut: {_hx_name:"LoggedOut",_hx_index:1,__enum__:"GlobalEvent",toString:$estr}
	,IncomingChallengesBatch: ($_=function(incomingChallenges) { return {_hx_index:2,incomingChallenges:incomingChallenges,__enum__:"GlobalEvent",toString:$estr}; },$_._hx_name="IncomingChallengesBatch",$_.__params__ = ["incomingChallenges"],$_)
	,FollowedPlayerUpdated: ($_=function(followedLogin) { return {_hx_index:3,followedLogin:followedLogin,__enum__:"GlobalEvent",toString:$estr}; },$_._hx_name="FollowedPlayerUpdated",$_.__params__ = ["followedLogin"],$_)
	,PreferenceUpdated: ($_=function(name) { return {_hx_index:4,name:name,__enum__:"GlobalEvent",toString:$estr}; },$_._hx_name="PreferenceUpdated",$_.__params__ = ["name"],$_)
};
GlobalEvent.__constructs__ = [GlobalEvent.LoggedIn,GlobalEvent.LoggedOut,GlobalEvent.IncomingChallengesBatch,GlobalEvent.FollowedPlayerUpdated,GlobalEvent.PreferenceUpdated];
GlobalEvent.__empty_constructs__ = [GlobalEvent.LoggedIn,GlobalEvent.LoggedOut];
var IGlobalEventObserver = function() { };
$hxClasses["IGlobalEventObserver"] = IGlobalEventObserver;
IGlobalEventObserver.__name__ = "IGlobalEventObserver";
IGlobalEventObserver.__isInterface__ = true;
IGlobalEventObserver.prototype = {
	handleGlobalEvent: null
	,__class__: IGlobalEventObserver
};
var GlobalBroadcaster = function() { };
$hxClasses["GlobalBroadcaster"] = GlobalBroadcaster;
GlobalBroadcaster.__name__ = "GlobalBroadcaster";
GlobalBroadcaster.broadcast = function(event) {
	var _g = 0;
	var _g1 = GlobalBroadcaster.observers;
	while(_g < _g1.length) {
		var obs = _g1[_g];
		++_g;
		obs.handleGlobalEvent(event);
	}
};
GlobalBroadcaster.addObserver = function(obs) {
	GlobalBroadcaster.observers.push(obs);
};
GlobalBroadcaster.removeObserver = function(obs) {
	HxOverrides.remove(GlobalBroadcaster.observers,obs);
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = "HxOverrides";
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k = s.split("-");
		return new Date(k[0],k[1] - 1,k[2],0,0,0);
	case 19:
		var k = s.split(" ");
		var y = k[0].split("-");
		var t = k[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw haxe_Exception.thrown("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.now = function() {
	return Date.now();
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = "Lambda";
Lambda.has = function(it,elt) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
Lambda.exists = function(it,f) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			return true;
		}
	}
	return false;
};
Lambda.count = function(it,pred) {
	var n = 0;
	if(pred == null) {
		var _ = $getIterator(it);
		while(_.hasNext()) {
			var _1 = _.next();
			++n;
		}
	} else {
		var x = $getIterator(it);
		while(x.hasNext()) {
			var x1 = x.next();
			if(pred(x1)) {
				++n;
			}
		}
	}
	return n;
};
Lambda.empty = function(it) {
	return !$getIterator(it).hasNext();
};
Lambda.find = function(it,f) {
	var v = $getIterator(it);
	while(v.hasNext()) {
		var v1 = v.next();
		if(f(v1)) {
			return v1;
		}
	}
	return null;
};
Lambda.findIndex = function(it,f) {
	var i = 0;
	var v = $getIterator(it);
	while(v.hasNext()) {
		var v1 = v.next();
		if(f(v1)) {
			return i;
		}
		++i;
	}
	return -1;
};
var CredentialsPreservation = $hxEnums["CredentialsPreservation"] = { __ename__:"CredentialsPreservation",__constructs__:null
	,LongTerm: {_hx_name:"LongTerm",_hx_index:0,__enum__:"CredentialsPreservation",toString:$estr}
	,ShortTerm: {_hx_name:"ShortTerm",_hx_index:1,__enum__:"CredentialsPreservation",toString:$estr}
	,None: {_hx_name:"None",_hx_index:2,__enum__:"CredentialsPreservation",toString:$estr}
};
CredentialsPreservation.__constructs__ = [CredentialsPreservation.LongTerm,CredentialsPreservation.ShortTerm,CredentialsPreservation.None];
CredentialsPreservation.__empty_constructs__ = [CredentialsPreservation.LongTerm,CredentialsPreservation.ShortTerm,CredentialsPreservation.None];
var LoginManager = function() { };
$hxClasses["LoginManager"] = LoginManager;
LoginManager.__name__ = "LoginManager";
LoginManager.getLogin = function() {
	return LoginManager.login;
};
LoginManager.getPassword = function() {
	return LoginManager.password;
};
LoginManager.getRef = function() {
	if(LoginManager.login != null) {
		return LoginManager.login;
	} else {
		return "_" + Networker.getSessionID();
	}
};
LoginManager.imitateLoggedState = function(assumedLogin) {
	if(assumedLogin == null) {
		assumedLogin = "Tester";
	}
	LoginManager.login = assumedLogin;
};
LoginManager.assignCredentials = function(login,password,preservation) {
	LoginManager.login = login;
	LoginManager.password = password;
	if(preservation == CredentialsPreservation.LongTerm) {
		browser_CredentialCookies.saveLoginDetails(login,password,false);
	} else if(preservation == CredentialsPreservation.ShortTerm) {
		browser_CredentialCookies.saveLoginDetails(login,password,true);
	}
	GlobalBroadcaster.broadcast(GlobalEvent.LoggedIn);
};
LoginManager.removeCredentials = function() {
	LoginManager.login = null;
	LoginManager.password = null;
	browser_CredentialCookies.removeLoginDetails();
	GlobalBroadcaster.broadcast(GlobalEvent.LoggedOut);
};
LoginManager.isLogged = function() {
	return LoginManager.login != null;
};
LoginManager.isPlayer = function(suspectedRef) {
	if(suspectedRef.charAt(0) == "_") {
		return Networker.getSessionID() == Std.parseInt(HxOverrides.substr(suspectedRef,1,null));
	} else if(LoginManager.login != null) {
		return LoginManager.login.toLowerCase() == suspectedRef.toLowerCase();
	} else {
		return false;
	}
};
var Main = function() { };
$hxClasses["Main"] = Main;
Main.__name__ = "Main";
Main.main = function() {
	Main.app = new haxe_ui_HaxeUIApp();
	Main.app.preloaderClass = gfx_preloader_DefaultPreloader;
	Main.app.set_icon("assets/favicons/normal.png");
	Main.app.ready(Main.onAppReady);
};
Main.onAppReady = function() {
	Main.init();
	Main.deriveLanguage();
};
Main.init = function() {
	window.onpopstate = gfx_ScreenNavigator.navigate;
	window.document.addEventListener("contextmenu",function(event) {
		return event.preventDefault();
	});
	window.document.addEventListener("wheel",function(event) {
		if(event.ctrlKey) {
			event.preventDefault();
		}
	},true);
	browser_Blinker.init();
	openings_OpeningTree.init();
	utils_Changelog.init();
	Config.init();
	var scene = gfx_SceneManager.launch();
	Main.app.addComponent(scene);
	Main.app.start();
};
Main.deriveLanguage = function() {
	var langInitializedFromCookie = Preferences.language.load();
	if(langInitializedFromCookie) {
		Main.onLanguageReady();
	} else {
		gfx_SceneManager.toScreen(gfx_ScreenType.LanguageSelectIntro(Main.onLanguageReady));
	}
};
Main.onLanguageReady = function() {
	if(Preferences.language.get() == dict_Language.RU) {
		haxe_ui_locale_LocaleManager.get_instance().set_language("ru");
	} else {
		haxe_ui_locale_LocaleManager.get_instance().set_language("en");
	}
	Networker.launch();
};
Main.test = function() {
	Networker.ignoreEmitCalls = true;
	LoginManager.imitateLoggedState("gulvan");
};
Math.__name__ = "Math";
var net_EventProcessingQueue = function() {
	this.handlers = [];
	this.observers = [];
};
$hxClasses["net.EventProcessingQueue"] = net_EventProcessingQueue;
net_EventProcessingQueue.__name__ = "net.EventProcessingQueue";
net_EventProcessingQueue.prototype = {
	observers: null
	,handlers: null
	,processEvent: function(event) {
		var _g = 0;
		var _g1 = this.handlers;
		while(_g < _g1.length) {
			var handler = _g1[_g];
			++_g;
			var destroy = handler(event);
			if(destroy) {
				this.removeHandler(handler);
			}
		}
		var _g = 0;
		var _g1 = this.observers;
		while(_g < _g1.length) {
			var obs = _g1[_g];
			++_g;
			obs.handleNetEvent(event);
		}
	}
	,addHandler: function(handler) {
		this.handlers.push(handler);
	}
	,removeHandler: function(handler) {
		HxOverrides.remove(this.handlers,handler);
	}
	,removeObserver: function(observer) {
		HxOverrides.remove(this.observers,observer);
	}
	,addObserver: function(observer) {
		this.observers.push(observer);
	}
	,flush: function() {
		this.observers = [];
		this.handlers = [];
	}
	,__class__: net_EventProcessingQueue
};
var Networker = function() { };
$hxClasses["Networker"] = Networker;
Networker.__name__ = "Networker";
Networker.getSessionID = function() {
	return Networker.sid;
};
Networker.isConnectedToServer = function() {
	return Networker.isConnected;
};
Networker.createWS = function() {
	Networker._ws = new hx_ws_WebSocket(Networker.address,false);
};
Networker.launch = function() {
	haxe_Serializer.USE_ENUM_INDEX = true;
	if(Config.dict.getBool("secure")) {
		Networker.address = "wss://";
	} else {
		Networker.address = "ws://";
	}
	Networker.address += Config.dict.getString("host") + ":" + Config.dict.getString("port");
	Networker.createWS();
	var navigateByURL = true;
	var tmp = function() {
		Networker.onConnectionOpen(navigateByURL);
	};
	Networker._ws.set_onopen(tmp);
	Networker._ws.set_onerror(Networker.onErrorBeforeOpen);
	Networker._ws.open();
};
Networker.onErrorBeforeOpen = function(e) {
	gfx_ScreenNavigator.toAnalysis();
	gfx_Dialogs.info(dict_Phrase.SERVER_UNAVAILABLE_DIALOG_TEXT,dict_Phrase.SERVER_UNAVAILABLE_DIALOG_TITLE);
	var navigateByURL = false;
	Networker.startReconnectionAttempts(function() {
		Networker.onConnectionOpen(navigateByURL);
	});
};
Networker.dropConnection = function() {
	if(Networker._ws != null) {
		Networker.suppressAlert = true;
		Networker.isConnected = false;
		Networker._ws.close();
		Networker._ws = null;
	}
};
Networker.onConnectionOpen = function(navigateByURL) {
	if(navigateByURL == null) {
		navigateByURL = true;
	}
	if(Networker.isConnected) {
		return;
	}
	Networker.suppressAlert = false;
	Networker.isConnected = true;
	Networker._ws.set_onmessage(Networker.onMessageRecieved);
	Networker._ws.set_onclose(Networker.onConnectionClosed);
	Networker._ws.set_onerror(Networker.onConnectionError);
	if(Networker._ws._ws.readyState == 1) {
		if(browser_CredentialCookies.hasLoginDetails()) {
			var tmp = net_shared_dataobj_Greeting.Login(browser_CredentialCookies.getLogin(),browser_CredentialCookies.getPassword());
			var dontLeave = !navigateByURL;
			net_Requests.greet(tmp,function(data) {
				Networker.onGreetingAnswered(data,dontLeave);
			});
		} else {
			var dontLeave1 = !navigateByURL;
			net_Requests.greet(net_shared_dataobj_Greeting.Simple,function(data) {
				Networker.onGreetingAnswered(data,dontLeave1);
			});
		}
	} else {
		haxe_Timer.delay(function() {
			if(browser_CredentialCookies.hasLoginDetails()) {
				var tmp = net_shared_dataobj_Greeting.Login(browser_CredentialCookies.getLogin(),browser_CredentialCookies.getPassword());
				var dontLeave = !navigateByURL;
				net_Requests.greet(tmp,function(data) {
					Networker.onGreetingAnswered(data,dontLeave);
				});
			} else {
				var dontLeave1 = !navigateByURL;
				net_Requests.greet(net_shared_dataobj_Greeting.Simple,function(data) {
					Networker.onGreetingAnswered(data,dontLeave1);
				});
			}
		},100);
	}
};
Networker.onMessageRecieved = function(msg) {
	var event;
	switch(msg._hx_index) {
	case 0:
		var content = msg.content;
		haxe_Log.trace("Unexpected bytes: " + content.readAllAvailableBytes().toString(),{ fileName : "src/Networker.hx", lineNumber : 132, className : "Networker", methodName : "onMessageRecieved"});
		return;
	case 1:
		var content = msg.content;
		try {
			event = haxe_Unserializer.run(content);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g);
			haxe_Log.trace("Failed to deserialize message: " + content,{ fileName : "src/Networker.hx", lineNumber : 141, className : "Networker", methodName : "onMessageRecieved"});
			haxe_Log.trace(e,{ fileName : "src/Networker.hx", lineNumber : 142, className : "Networker", methodName : "onMessageRecieved"});
			return;
		}
		break;
	}
	switch(event._hx_index) {
	case 57:
		Networker.doNotReconnect = true;
		Networker.suppressAlert = true;
		gfx_Dialogs.alert(dict_Phrase.SESSION_CLOSED_ALERT_TEXT,dict_Phrase.SESSION_CLOSED_ALERT_TITLE);
		break;
	case 58:
		var message = event.message;
		gfx_Dialogs.alert(dict_Phrase.SERVER_ERROR_DIALOG_TITLE,dict_Phrase.SERVER_ERROR_DIALOG_TEXT(utils_StringUtils.shorten(message,500)));
		break;
	default:
		Networker.eventQueue.processEvent(event);
	}
};
Networker.onConnectionClosed = function() {
	Networker.isConnected = false;
	if(Networker.doNotReconnect) {
		gfx_SceneManager.clearScreen();
		if(!Networker.suppressAlert) {
			gfx_Dialogs.alert(dict_Phrase.CONNECTION_LOST_ERROR,dict_Phrase.CONNECTION_ERROR_DIALOG_TITLE);
			Networker.suppressAlert = true;
		} else {
			haxe_Log.trace("Connection closed",{ fileName : "src/Networker.hx", lineNumber : 174, className : "Networker", methodName : "onConnectionClosed"});
		}
	} else {
		gfx_SceneManager.onDisconnected();
		gfx_Dialogs.getQueue().add(new gfx_popups_ReconnectionDialog());
		Networker.startReconnectionAttempts(Networker.onConnectionReopened);
	}
};
Networker.onConnectionError = function(err) {
	Networker.isConnected = false;
	haxe_Log.trace("Connection error: " + err.type,{ fileName : "src/Networker.hx", lineNumber : 187, className : "Networker", methodName : "onConnectionError"});
};
Networker.onConnectionReopened = function() {
	Networker.isConnected = true;
	Networker._ws.set_onmessage(Networker.onMessageRecieved);
	Networker._ws.set_onclose(Networker.onConnectionClosed);
	Networker._ws.set_onerror(Networker.onConnectionError);
	Networker.suppressAlert = false;
	var dontLeave = true;
	var tmp = function(data) {
		Networker.onGreetingAnswered(data,dontLeave);
	};
	net_Requests.greet(net_shared_dataobj_Greeting.Reconnect(Networker.reconnectionToken),tmp);
};
Networker.onGreetingAnswered = function(data,dontLeave) {
	if(dontLeave == null) {
		dontLeave = false;
	}
	switch(data._hx_index) {
	case 0:
		var sessionID = data.sessionID;
		var token = data.token;
		var invalidCredentials = data.invalidCredentials;
		var isShuttingDown = data.isShuttingDown;
		gfx_SceneManager.onConnected();
		Networker.reconnectionToken = token;
		Networker.sid = sessionID;
		if(invalidCredentials) {
			browser_CredentialCookies.removeLoginDetails();
		}
		if(!dontLeave) {
			gfx_ScreenNavigator.navigate();
		}
		if(isShuttingDown) {
			gfx_Dialogs.alert(dict_Phrase.SERVER_IS_SHUTTING_DOWN_WARNING_TEXT,dict_Phrase.SERVER_IS_SHUTTING_DOWN_WARNING_TITLE);
		}
		break;
	case 1:
		var sessionID = data.sessionID;
		var token = data.token;
		var incomingChallenges = data.incomingChallenges;
		var ongoingFiniteGame = data.ongoingFiniteGame;
		var isShuttingDown = data.isShuttingDown;
		gfx_SceneManager.onConnected();
		Networker.reconnectionToken = token;
		Networker.sid = sessionID;
		LoginManager.assignCredentials(browser_CredentialCookies.getLogin(),browser_CredentialCookies.getPassword(),CredentialsPreservation.None);
		GlobalBroadcaster.broadcast(GlobalEvent.IncomingChallengesBatch(incomingChallenges));
		if(ongoingFiniteGame != null) {
			var parsedData = serialization_GameLogParser.parse(ongoingFiniteGame.currentLog);
			gfx_SceneManager.toScreen(gfx_ScreenType.LiveGame(ongoingFiniteGame.id,gfx_game_LiveGameConstructor.Ongoing(parsedData,ongoingFiniteGame.timeData,null)));
		} else {
			if(!dontLeave) {
				gfx_ScreenNavigator.navigate();
			}
			if(isShuttingDown) {
				gfx_Dialogs.alert(dict_Phrase.SERVER_IS_SHUTTING_DOWN_WARNING_TEXT,dict_Phrase.SERVER_IS_SHUTTING_DOWN_WARNING_TITLE);
			}
		}
		break;
	case 2:
		var missedEvents = data.missedEvents;
		gfx_Dialogs.getQueue().closeGroup(gfx_basic_$components_utils_DialogGroup.ReconnectionPopUp);
		gfx_SceneManager.onConnected();
		var _g = 0;
		while(_g < missedEvents.length) {
			var missedEvent = missedEvents[_g];
			++_g;
			Networker.eventQueue.processEvent(missedEvent);
		}
		break;
	case 3:
		$global.location.reload(false);
		break;
	case 4:
		if(browser_Url.isFallback()) {
			window.location.replace(browser_Url.toActual());
		} else {
			gfx_Dialogs.alert(dict_Phrase.OUTDATED_CLIENT_ERROR_TEXT,dict_Phrase.OUTDATED_CLIENT_ERROR_TITLE);
		}
		break;
	case 5:
		if(!browser_Url.isFallback()) {
			window.location.replace(browser_Url.toFallback());
		} else {
			gfx_Dialogs.alert(dict_Phrase.OUTDATED_SERVER_ERROR_TEXT,dict_Phrase.OUTDATED_SERVER_ERROR_TITLE);
		}
		break;
	}
};
Networker.retryConnecting = function(onOpen) {
	Networker._ws.close();
	Networker.isConnected = false;
	Networker.createWS();
	Networker._ws.set_onopen(onOpen);
	Networker._ws.set_onerror(function(e) {
		Networker.retryConnecting(onOpen);
	});
	haxe_Timer.delay(($_=Networker._ws,$bind($_,$_.open)),Math.round(Networker.backoffDelay));
	if(Networker.backoffDelay < 16000) {
		Networker.backoffDelay += Networker.backoffDelay * (Math.random() - 0.5);
	} else {
		Networker.backoffDelay += 1000 * (Math.random() - 0.5);
	}
};
Networker.startReconnectionAttempts = function(onOpen) {
	Networker.backoffDelay = 1000;
	Networker.retryConnecting(onOpen);
};
Networker.addHandler = function(handler) {
	Networker.eventQueue.addHandler(handler);
};
Networker.removeHandler = function(handler) {
	Networker.eventQueue.removeHandler(handler);
};
Networker.removeObserver = function(observer) {
	Networker.eventQueue.removeObserver(observer);
};
Networker.addObserver = function(observer) {
	Networker.eventQueue.addObserver(observer);
};
Networker.emitEvent = function(event) {
	if(Networker.ignoreEmitCalls) {
		haxe_Log.trace($hxEnums[event.__enum__].__constructs__[event._hx_index]._hx_name,{ fileName : "src/Networker.hx", lineNumber : 305, className : "Networker", methodName : "emitEvent", customParams : [Type.enumParameters(event)]});
	} else {
		Networker._ws.send(haxe_Serializer.run(event));
	}
};
var BranchingTabType = $hxEnums["BranchingTabType"] = { __ename__:"BranchingTabType",__constructs__:null
	,Tree: {_hx_name:"Tree",_hx_index:0,__enum__:"BranchingTabType",toString:$estr}
	,Outline: {_hx_name:"Outline",_hx_index:1,__enum__:"BranchingTabType",toString:$estr}
	,PlainText: {_hx_name:"PlainText",_hx_index:2,__enum__:"BranchingTabType",toString:$estr}
};
BranchingTabType.__constructs__ = [BranchingTabType.Tree,BranchingTabType.Outline,BranchingTabType.PlainText];
BranchingTabType.__empty_constructs__ = [BranchingTabType.Tree,BranchingTabType.Outline,BranchingTabType.PlainText];
var AutoScrollType = $hxEnums["AutoScrollType"] = { __ename__:"AutoScrollType",__constructs__:null
	,Always: {_hx_name:"Always",_hx_index:0,__enum__:"AutoScrollType",toString:$estr}
	,OwnGameOnly: {_hx_name:"OwnGameOnly",_hx_index:1,__enum__:"AutoScrollType",toString:$estr}
	,Never: {_hx_name:"Never",_hx_index:2,__enum__:"AutoScrollType",toString:$estr}
};
AutoScrollType.__constructs__ = [AutoScrollType.Always,AutoScrollType.OwnGameOnly,AutoScrollType.Never];
AutoScrollType.__empty_constructs__ = [AutoScrollType.Always,AutoScrollType.OwnGameOnly,AutoScrollType.Never];
var _$Preferences_Preference = function(name,defaultValue,delayLoading) {
	if(delayLoading == null) {
		delayLoading = false;
	}
	this.name = name;
	var tmp;
	switch(name._hx_index) {
	case 0:
		tmp = "lang";
		break;
	case 1:
		tmp = "marking";
		break;
	default:
		tmp = $hxEnums[name.__enum__].__constructs__[name._hx_index]._hx_name;
	}
	this.cookieName = tmp;
	this.defaultValue = defaultValue;
	this.value = defaultValue;
	if(Reflect.isEnumValue(defaultValue)) {
		this.kind = "enum";
	} else if(typeof(defaultValue) == "boolean") {
		this.kind = "bool";
	} else if(typeof(defaultValue) == "number" && ((defaultValue | 0) === defaultValue)) {
		this.kind = "int";
	} else if(typeof(defaultValue) == "number") {
		this.kind = "float";
	} else if(typeof(defaultValue) == "string") {
		this.kind = "str";
	} else {
		var c = js_Boot.getClass(defaultValue);
		throw haxe_Exception.thrown("Unsupported preference class: " + c.__name__);
	}
	if(!delayLoading) {
		this.load();
	}
};
$hxClasses["_Preferences.Preference"] = _$Preferences_Preference;
_$Preferences_Preference.__name__ = "_Preferences.Preference";
_$Preferences_Preference.prototype = {
	name: null
	,cookieName: null
	,kind: null
	,defaultValue: null
	,value: null
	,get: function() {
		return this.value;
	}
	,set: function(v,suppressBroadcasting) {
		if(suppressBroadcasting == null) {
			suppressBroadcasting = false;
		}
		this.value = v;
		js_Cookie.set(this.cookieName,Std.string(this.value),_$Preferences_Preference.FIVE_YEARS);
		if(!suppressBroadcasting) {
			GlobalBroadcaster.broadcast(GlobalEvent.PreferenceUpdated(this.name));
		}
	}
	,resetToDefault: function() {
		this.set(this.defaultValue);
	}
	,load: function() {
		if(!js_Cookie.exists(this.cookieName)) {
			return false;
		}
		var rawValue = js_Cookie.get(this.cookieName);
		if(this.kind == "int") {
			this.value = Std.parseInt(rawValue);
		} else if(this.kind == "float") {
			this.value = parseFloat(rawValue);
		} else if(this.kind == "str") {
			this.value = rawValue;
		} else if(this.kind == "enum") {
			this.value = Type.createEnum(Type.getEnum(this.defaultValue),rawValue);
		} else if(this.kind == "bool") {
			this.value = rawValue == "true";
		} else {
			throw haxe_Exception.thrown("Unsupported preference kind: " + this.kind);
		}
		return true;
	}
	,__class__: _$Preferences_Preference
};
var PreferenceName = $hxEnums["PreferenceName"] = { __ename__:"PreferenceName",__constructs__:null
	,Language: {_hx_name:"Language",_hx_index:0,__enum__:"PreferenceName",toString:$estr}
	,Marking: {_hx_name:"Marking",_hx_index:1,__enum__:"PreferenceName",toString:$estr}
	,Premoves: {_hx_name:"Premoves",_hx_index:2,__enum__:"PreferenceName",toString:$estr}
	,BranchingType: {_hx_name:"BranchingType",_hx_index:3,__enum__:"PreferenceName",toString:$estr}
	,BranchingShowTurnColor: {_hx_name:"BranchingShowTurnColor",_hx_index:4,__enum__:"PreferenceName",toString:$estr}
	,SilentChallenges: {_hx_name:"SilentChallenges",_hx_index:5,__enum__:"PreferenceName",toString:$estr}
	,AutoScrollOnMoveReceived: {_hx_name:"AutoScrollOnMoveReceived",_hx_index:6,__enum__:"PreferenceName",toString:$estr}
};
PreferenceName.__constructs__ = [PreferenceName.Language,PreferenceName.Marking,PreferenceName.Premoves,PreferenceName.BranchingType,PreferenceName.BranchingShowTurnColor,PreferenceName.SilentChallenges,PreferenceName.AutoScrollOnMoveReceived];
PreferenceName.__empty_constructs__ = [PreferenceName.Language,PreferenceName.Marking,PreferenceName.Premoves,PreferenceName.BranchingType,PreferenceName.BranchingShowTurnColor,PreferenceName.SilentChallenges,PreferenceName.AutoScrollOnMoveReceived];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = "Reflect";
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( _g ) {
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
Reflect.copy = function(o) {
	if(o == null) {
		return null;
	}
	var o2 = { };
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		o2[f] = Reflect.field(o,f);
	}
	return o2;
};
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var con = e.__constructs__[o._hx_index];
			var n = con._hx_name;
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__implements = function(o,iface) {
	return js_Boot.__interfLoop(js_Boot.getClass(o),iface);
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw haxe_Exception.thrown("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var dict_Language = $hxEnums["dict.Language"] = { __ename__:"dict.Language",__constructs__:null
	,EN: {_hx_name:"EN",_hx_index:0,__enum__:"dict.Language",toString:$estr}
	,RU: {_hx_name:"RU",_hx_index:1,__enum__:"dict.Language",toString:$estr}
};
dict_Language.__constructs__ = [dict_Language.EN,dict_Language.RU];
dict_Language.__empty_constructs__ = [dict_Language.EN,dict_Language.RU];
var gameboard_util_Marking = $hxEnums["gameboard.util.Marking"] = { __ename__:"gameboard.util.Marking",__constructs__:null
	,None: {_hx_name:"None",_hx_index:0,__enum__:"gameboard.util.Marking",toString:$estr}
	,Side: {_hx_name:"Side",_hx_index:1,__enum__:"gameboard.util.Marking",toString:$estr}
	,Over: {_hx_name:"Over",_hx_index:2,__enum__:"gameboard.util.Marking",toString:$estr}
};
gameboard_util_Marking.__constructs__ = [gameboard_util_Marking.None,gameboard_util_Marking.Side,gameboard_util_Marking.Over];
gameboard_util_Marking.__empty_constructs__ = [gameboard_util_Marking.None,gameboard_util_Marking.Side,gameboard_util_Marking.Over];
var Preferences = function() { };
$hxClasses["Preferences"] = Preferences;
Preferences.__name__ = "Preferences";
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	if(x != null) {
		var _g = 0;
		var _g1 = x.length;
		while(_g < _g1) {
			var i = _g++;
			var c = x.charCodeAt(i);
			if(c <= 8 || c >= 14 && c != 32 && c != 45) {
				var nc = x.charCodeAt(i + 1);
				var v = parseInt(x,nc == 120 || nc == 88 ? 16 : 10);
				if(isNaN(v)) {
					return null;
				} else {
					return v;
				}
			}
		}
	}
	return null;
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = "StringBuf";
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = "StringTools";
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return s.lastIndexOf(start,0) == 0;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return s.indexOf(end,slen - elen) == slen - elen;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	l -= s.length;
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	buf_b += s == null ? "null" : "" + s;
	return buf_b;
};
StringTools.rpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	buf_b += s == null ? "null" : "" + s;
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	return buf_b;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var Telegram = function() { };
$hxClasses["Telegram"] = Telegram;
Telegram.__name__ = "Telegram";
Telegram.notifyAdmin = function(message) {
	var _g = new haxe_ds_StringMap();
	var value = Config.dict.getString("admin-tg-chat-id");
	_g.h["chat_id"] = value;
	_g.h["text"] = message;
	_g.h["parse_mode"] = "MarkdownV2";
	Telegram.useMethod("sendMessage",_g);
};
Telegram.useMethod = function(methodName,params) {
	var token = Config.dict.getString("bot-token");
	var requestUrl = "https://api.telegram.org/bot" + token + "/" + methodName;
	var http = new haxe_http_HttpJs(requestUrl);
	var h = params.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g1_key = key;
		var _g1_value = _g_h[key];
		var paramName = _g1_key;
		var paramValue = _g1_value;
		var escaped = StringTools.replace(StringTools.replace(paramValue,"{","\\{"),"}","\\}");
		http.addParameter(paramName,escaped);
	}
	http.request();
};
var ValueType = $hxEnums["ValueType"] = { __ename__:"ValueType",__constructs__:null
	,TNull: {_hx_name:"TNull",_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_name:"TInt",_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_name:"TFloat",_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_name:"TBool",_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_name:"TObject",_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_name:"TFunction",_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TClass",$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TEnum",$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_name:"TUnknown",_hx_index:8,__enum__:"ValueType",toString:$estr}
};
ValueType.__constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TClass,ValueType.TEnum,ValueType.TUnknown];
ValueType.__empty_constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TUnknown];
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = "Type";
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return $hxEnums[o.__enum__];
};
Type.createInstance = function(cl,args) {
	var ctor = Function.prototype.bind.apply(cl,[null].concat(args));
	return new (ctor);
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw haxe_Exception.thrown("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw haxe_Exception.thrown("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw haxe_Exception.thrown("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.createEnumIndex = function(e,index,params) {
	var c;
	var _g = e.__constructs__[index];
	if(_g == null) {
		c = null;
	} else {
		var ctor = _g;
		c = ctor._hx_name;
	}
	if(c == null) {
		throw haxe_Exception.thrown(index + " is not a valid enum constructor index");
	}
	return Type.createEnum(e,c,params);
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type.typeof = function(v) {
	switch(typeof(v)) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum($hxEnums[e]);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumParameters = function(e) {
	var enm = $hxEnums[e.__enum__];
	var params = enm.__constructs__[e._hx_index].__params__;
	if(params != null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < params.length) {
			var p = params[_g1];
			++_g1;
			_g.push(e[p]);
		}
		return _g;
	} else {
		return [];
	}
};
var assets_Audio = function() { };
$hxClasses["assets.Audio"] = assets_Audio;
assets_Audio.__name__ = "assets.Audio";
assets_Audio.playPlySound = function(ply) {
	var soundName;
	switch(ply._hx_index) {
	case 0:
		var _g = ply.from;
		var _g = ply.to;
		var _g = ply.movingPiece;
		soundName = "move";
		break;
	case 1:
		var _g = ply.from;
		var _g = ply.to;
		var _g = ply.capturingPiece;
		var _g = ply.capturedPiece;
		soundName = "capture";
		break;
	case 2:
		var _g = ply.from;
		var _g = ply.to;
		var _g = ply.capturingPiece;
		var _g = ply.capturedPiece;
		soundName = "capture";
		break;
	case 3:
		var _g = ply.from;
		var _g = ply.to;
		var _g = ply.promotedTo;
		soundName = "move";
		break;
	case 4:
		var _g = ply.from;
		var _g = ply.to;
		var _g = ply.capturedPiece;
		var _g = ply.promotedTo;
		soundName = "capture";
		break;
	case 5:
		var _g = ply.from;
		var _g = ply.to;
		soundName = "move";
		break;
	}
	assets_Audio.playSound(soundName);
};
assets_Audio.playSound = function(soundName) {
	var options = { };
	options.src = ["sounds/" + soundName + ".mp3"];
	var snd = new Howl(options);
	snd.play();
};
var assets_Paths = function() { };
$hxClasses["assets.Paths"] = assets_Paths;
assets_Paths.__name__ = "assets.Paths";
assets_Paths.status = function(status) {
	return "assets/symbols/profile/user_status_indicators/" + $hxEnums[status.__enum__].__constructs__[status._hx_index]._hx_name.toLowerCase() + ".svg";
};
assets_Paths.piece = function(type,color) {
	return "assets/pieces/" + $hxEnums[type.__enum__].__constructs__[type._hx_index]._hx_name + "_" + $hxEnums[color.__enum__].__constructs__[color._hx_index]._hx_name + ".svg";
};
assets_Paths.editModeIcon = function(mode) {
	switch(mode._hx_index) {
	case 0:
		return "assets/symbols/analysis/move.svg";
	case 1:
		return "assets/symbols/analysis/delete.svg";
	case 2:
		var type = mode.type;
		var color = mode.color;
		return "assets/pieces/" + $hxEnums[type.__enum__].__constructs__[type._hx_index]._hx_name + "_" + $hxEnums[color.__enum__].__constructs__[color._hx_index]._hx_name + ".svg";
	}
};
assets_Paths.timeControl = function(type) {
	var filename;
	switch(type._hx_index) {
	case 0:
		filename = "hyperbullet";
		break;
	case 1:
		filename = "bullet";
		break;
	case 2:
		filename = "blitz";
		break;
	case 3:
		filename = "rapid";
		break;
	case 4:
		filename = "classic";
		break;
	case 5:
		filename = "correspondence";
		break;
	}
	return "assets/symbols/time_controls/" + filename + ".svg";
};
assets_Paths.challengeColor = function(ownerOpponentColor) {
	var filename;
	if(ownerOpponentColor == null) {
		filename = "random";
	} else {
		switch(ownerOpponentColor._hx_index) {
		case 0:
			filename = "white";
			break;
		case 1:
			filename = "black";
			break;
		}
	}
	return "assets/symbols/main_menu/challenge_modes/" + filename + ".svg";
};
assets_Paths.challengesMenuIcon = function(mode) {
	var filename;
	switch(mode._hx_index) {
	case 0:
		filename = "none";
		break;
	case 1:
		filename = "in";
		break;
	case 2:
		filename = "out";
		break;
	case 3:
		filename = "both";
		break;
	}
	return "assets/symbols/upper_menu/challenges/button_icon/" + filename + ".svg";
};
assets_Paths.challengesMenuItemArrow = function(isIncoming) {
	var filename = isIncoming ? "incoming" : "outgoing";
	return "assets/symbols/upper_menu/challenges/item_arrow_img/" + filename + ".svg";
};
assets_Paths.sound = function(soundName) {
	return "sounds/" + soundName + ".mp3";
};
var browser_BlinkerNotification = $hxEnums["browser.BlinkerNotification"] = { __ename__:"browser.BlinkerNotification",__constructs__:null
	,IncomingChallenge: {_hx_name:"IncomingChallenge",_hx_index:0,__enum__:"browser.BlinkerNotification",toString:$estr}
	,GameStarted: {_hx_name:"GameStarted",_hx_index:1,__enum__:"browser.BlinkerNotification",toString:$estr}
};
browser_BlinkerNotification.__constructs__ = [browser_BlinkerNotification.IncomingChallenge,browser_BlinkerNotification.GameStarted];
browser_BlinkerNotification.__empty_constructs__ = [browser_BlinkerNotification.IncomingChallenge,browser_BlinkerNotification.GameStarted];
var browser_Blinker = function() { };
$hxClasses["browser.Blinker"] = browser_Blinker;
browser_Blinker.__name__ = "browser.Blinker";
browser_Blinker.setIcon = function(path) {
	var link = window.document.querySelector("link[rel~='icon']");
	if(link == null) {
		link = window.document.createElement("link");
		link.rel = "icon";
		window.document.getElementsByTagName("head")[0].appendChild(link);
	}
	link.href = path;
};
browser_Blinker.onBlinked = function() {
	if(browser_Blinker.specialTitleDisplayed) {
		browser_Blinker.setIcon("assets/favicons/normal.png");
		haxe_ui_core_Screen.get_instance().set_title(browser_Url.getCurrentTitle());
	} else {
		browser_Blinker.setIcon("assets/favicons/notification.png");
		haxe_ui_core_Screen.get_instance().set_title(browser_Blinker.notificationTitle);
	}
	browser_Blinker.specialTitleDisplayed = !browser_Blinker.specialTitleDisplayed;
};
browser_Blinker.init = function() {
	window.document.onvisibilitychange = function() {
		if(window.document.visibilityState == "visible") {
			browser_Blinker.resetBlinking();
		}
	};
};
browser_Blinker.blink = function(notification) {
	if(window.document.visibilityState != "hidden") {
		return;
	}
	browser_Blinker.notificationTitle = dict_Dictionary.getPhrase(dict_Phrase.NOTIFICATION_BROWSER_TAB_TITLE(notification));
	if(browser_Blinker.blinkTimer == null) {
		browser_Blinker.blinkTimer = new haxe_Timer(1000);
		browser_Blinker.blinkTimer.run = browser_Blinker.onBlinked;
	}
};
browser_Blinker.resetBlinking = function() {
	if(browser_Blinker.blinkTimer != null) {
		browser_Blinker.blinkTimer.stop();
	}
	browser_Blinker.blinkTimer = null;
	browser_Blinker.setIcon("assets/favicons/normal.png");
	haxe_ui_core_Screen.get_instance().set_title(browser_Url.getCurrentTitle());
	browser_Blinker.specialTitleDisplayed = false;
};
var browser_Clipboard = function() { };
$hxClasses["browser.Clipboard"] = browser_Clipboard;
browser_Clipboard.__name__ = "browser.Clipboard";
browser_Clipboard.copy = function(text,onSuccess) {
	if(onSuccess != null) {
		$global.navigator.clipboard.writeText(text).catch(browser_Clipboard.onCopyError).finally(onSuccess);
	} else {
		$global.navigator.clipboard.writeText(text).catch(browser_Clipboard.onCopyError);
	}
};
browser_Clipboard.onCopyError = function(e) {
	gfx_Dialogs.alert(dict_Phrase.CLIPBOARD_ERROR_ALERT_TEXT,dict_Phrase.CLIPBOARD_ERROR_ALERT_TITLE,["" + e]);
};
var browser_CredentialCookies = function() { };
$hxClasses["browser.CredentialCookies"] = browser_CredentialCookies;
browser_CredentialCookies.__name__ = "browser.CredentialCookies";
browser_CredentialCookies.hasLoginDetails = function() {
	if(js_Cookie.exists(browser_CredentialCookies.LOGIN_COOKIE)) {
		return js_Cookie.exists(browser_CredentialCookies.PASSWORD_COOKIE);
	} else {
		return false;
	}
};
browser_CredentialCookies.getLogin = function() {
	return js_Cookie.get(browser_CredentialCookies.LOGIN_COOKIE);
};
browser_CredentialCookies.getPassword = function() {
	return js_Cookie.get(browser_CredentialCookies.PASSWORD_COOKIE);
};
browser_CredentialCookies.saveLoginDetails = function(login,password,expirable) {
	if(expirable == null) {
		expirable = false;
	}
	var duration = expirable ? 21600 : 157680000;
	js_Cookie.set(browser_CredentialCookies.LOGIN_COOKIE,login == null ? LoginManager.getLogin() : login,duration,"/");
	js_Cookie.set(browser_CredentialCookies.PASSWORD_COOKIE,password == null ? LoginManager.getPassword() : password,duration,"/");
};
browser_CredentialCookies.removeLoginDetails = function() {
	while(js_Cookie.exists(browser_CredentialCookies.LOGIN_COOKIE)) {
		js_Cookie.remove(browser_CredentialCookies.LOGIN_COOKIE);
		js_Cookie.remove(browser_CredentialCookies.LOGIN_COOKIE,"/");
	}
	while(js_Cookie.exists(browser_CredentialCookies.PASSWORD_COOKIE)) {
		js_Cookie.remove(browser_CredentialCookies.PASSWORD_COOKIE);
		js_Cookie.remove(browser_CredentialCookies.PASSWORD_COOKIE,"/");
	}
};
var browser_Url = function() { };
$hxClasses["browser.Url"] = browser_Url;
browser_Url.__name__ = "browser.Url";
browser_Url.getCurrentTitle = function() {
	return browser_Url.currentTitle;
};
browser_Url.clear = function() {
	browser_Url.setPath("");
};
browser_Url.setPathByScreen = function(type) {
	var newPath = browser_Url.getURLPath(type);
	if(newPath != null) {
		browser_Url.setPath(newPath,dict_Utils.getScreenTitle(type));
	}
};
browser_Url.setPath = function(path,title) {
	if(StringTools.startsWith(path,"/")) {
		path = HxOverrides.substr(path,1,null);
	}
	var fullTitle = title != null ? title + " - Intellector" : "Intellector";
	if(new URLSearchParams($global.location.search).get("p") != path) {
		var tmp = window.history;
		var tmp1 = browser_Url.ingameToUrlPath(path);
		tmp.pushState({ },fullTitle,tmp1);
	}
	window.document.title = fullTitle;
	browser_Url.currentTitle = fullTitle;
};
browser_Url.getChallengeLink = function(id) {
	return $global.location.host + browser_Url.ingameToUrlPath("join/" + id);
};
browser_Url.getGameLink = function(id) {
	return $global.location.host + browser_Url.ingameToUrlPath("live/" + id);
};
browser_Url.isFallback = function() {
	var actualVerPathPrefix = Config.dict.getString("actual-path-prefix");
	var prevVerPathPrefix = Config.dict.getString("prev-path-prefix");
	if(actualVerPathPrefix != null && prevVerPathPrefix != null) {
		return hx_strings_Strings.startsWith(window.location.pathname,prevVerPathPrefix);
	} else {
		return false;
	}
};
browser_Url.toFallback = function() {
	var actualVerPathPrefix = Config.dict.getString("actual-path-prefix");
	var prevVerPathPrefix = Config.dict.getString("prev-path-prefix");
	if(actualVerPathPrefix != null && prevVerPathPrefix != null) {
		return hx_strings_Strings.replaceFirstIgnoreCase(window.location.href,actualVerPathPrefix,prevVerPathPrefix);
	} else {
		return window.location.href;
	}
};
browser_Url.toActual = function() {
	var actualVerPathPrefix = Config.dict.getString("actual-path-prefix");
	var prevVerPathPrefix = Config.dict.getString("prev-path-prefix");
	if(actualVerPathPrefix != null && prevVerPathPrefix != null) {
		return hx_strings_Strings.replaceFirstIgnoreCase(window.location.href,prevVerPathPrefix,actualVerPathPrefix);
	} else {
		return window.location.href;
	}
};
browser_Url.getURLPath = function(type) {
	switch(type._hx_index) {
	case 0:
		return "home";
	case 1:
		var _g = type.initialVariantStr;
		var _g = type.selectedMainlineMove;
		var exploredStudyData = type.exploredStudyData;
		if(exploredStudyData == null) {
			return "analysis";
		} else {
			return "study/" + exploredStudyData.id;
		}
		break;
	case 2:
		var _g = type.languageReadyCallback;
		return null;
	case 3:
		var _g = type.constructor;
		var gameID = type.gameID;
		return "live/" + gameID;
	case 4:
		var _g = type.data;
		var ownerLogin = type.ownerLogin;
		return "player/" + ownerLogin;
	case 5:
		var data = type.data;
		return "join/" + data.id;
	}
};
browser_Url.ingameToUrlPath = function(ingamePath) {
	return browser_Url.basepath() + "?p=" + ingamePath;
};
browser_Url.basepath = function() {
	return hx_strings_Strings.appendIfMissing($global.location.pathname,"/");
};
var dict_Dictionary = function() { };
$hxClasses["dict.Dictionary"] = dict_Dictionary;
dict_Dictionary.__name__ = "dict.Dictionary";
dict_Dictionary.getTranslations = function(phrase) {
	switch(phrase._hx_index) {
	case 0:
		return ["English","Русский"];
	case 1:
		switch(phrase.color._hx_index) {
		case 0:
			return ["White to move","Ход белых"];
		case 1:
			return ["Black to move","Ход черных"];
		}
		break;
	case 2:
		return ["Custom starting position","Нестандартная начальная расстановка"];
	case 3:
		return ["Overview","Обзор"];
	case 4:
		return ["Set position","Задать позицию"];
	case 5:
		return ["Share","Поделиться"];
	case 6:
		return ["Branches","Ветви"];
	case 7:
		return ["Branching Help","Справка по дереву вариантов"];
	case 8:
		return ["Branching Help","Справка (дерево вариантов)"];
	case 9:
		return ["<p><u><b>General</b></u></p><br><p><em>Use branching tab to navigate between different variations of the study. You can change the mode in settings.</em></p><br><p><b>LMB (Click):</b> Switch to branch</p><br><p><b>CTRL + LMB (Click):</b> Remove branch</p><br><p><b>Mouse wheel:</b> Scroll vertically</p><br><p><b>SHIFT + Mouse wheel:</b> Scroll horizontally</p><br><p>Alternatively, <b>Click &amp; Hold LMB</b> while moving the mouse to drag</p><br><p><u><b>Tree Mode</b></u></p><br><p><b>CTRL + Mouse wheel:</b> Zoom in / out</p>","<p><u><b>Общее</b></u></p><br><p><em>Вкладка \"Ветви\" используется для перемещения между различными линиями студии. Вид ветвей можно изменить в настройках.</em></p><br><p><b>ЛКМ:</b> Переключиться на ветвь</p><br><p><b>CTRL + ЛКМ:</b> Удалить ветвь</p><br><p><b>Колесо мыши:</b> Вертикальная прокрутка</p><br><p><b>SHIFT + Колесо мыши:</b> Горизонтальная прокрутка</p><br><p>Для перетаскивания <b>Нажмите и удерживайте ЛКМ</b>, передвигая мышь</p><br><p><u><b>Вид дерева</b></u></p><br><p><b>CTRL + Колесо мыши:</b> Приблизить / отдалить</p>"];
	case 10:
		return ["Openings","Дебюты"];
	case 11:
		return ["Coming soon","Скоро"];
	case 12:
		return ["Clear","Очистить"];
	case 13:
		return ["Reset","Заново"];
	case 14:
		return ["To starting position","К начальной расстановке"];
	case 15:
		return ["Flip board","Перевернуть доску"];
	case 16:
		return ["Import from SIP","Импорт из SIP"];
	case 17:
		return ["White to Move","Ход белых"];
	case 18:
		return ["Black to Move","Ход черных"];
	case 19:
		return ["Apply changes","Применить изменения"];
	case 20:
		return ["Discard changes","Отклонить изменения"];
	case 21:
		return ["Input SIP","Введите SIP"];
	case 22:
		return ["Warning: Invalid SIP","Ошибка: Недопустимый SIP"];
	case 23:
		return ["The specified SIP is invalid","Введенная вами строка не является допустимым SIP"];
	case 24:
		return ["Share","Поделиться"];
	case 25:
		return ["Share Position","Поделиться позицией"];
	case 26:
		return ["SIP","SIP"];
	case 27:
		return ["Image","Картинка"];
	case 28:
		return ["Download PNG","Скачать PNG"];
	case 29:
		return ["Add Marking","Добавить разметку"];
	case 30:
		return ["Dimensions: ","Размер: "];
	case 31:
		return ["Keep Aspect Ratio","Сохранять пропорции"];
	case 32:
		return ["Background Color: ","Цвет фона: "];
	case 33:
		return ["Transparent Background","Прозрачный фон"];
	case 34:
		return ["Share Game","Поделиться игрой"];
	case 35:
		return ["Link","Ссылка"];
	case 36:
		return ["PIN","PIN"];
	case 37:
		return ["Animated GIF","Анимированная GIF"];
	case 38:
		return ["Width: ","Ширина: "];
	case 39:
		return ["Interval (ms): ","Интервал (мс): "];
	case 40:
		return ["Export & Download","Скачать"];
	case 41:
		return ["Export","Экспорт"];
	case 42:
		return ["Export as Study","Экспорт студии"];
	case 43:
		return ["Export Study","Экспортировать студию"];
	case 44:
		return ["Export as ???","Экспорт ???"];
	case 45:
		return ["Coming soon!","Скоро!"];
	case 46:
		return ["Challenge by $0","Вызов $0"];
	case 47:
		return ["$0 will play as White","$0 играет белыми"];
	case 48:
		return ["$0 will play as Black","$0 играет черными"];
	case 49:
		return ["Random color","Случайный цвет"];
	case 50:
		return ["Rated","Рейтинговая"];
	case 51:
		return ["Unrated","Товарищеская"];
	case 52:
		return ["Accept Challenge","Принять вызов"];
	case 53:
		return ["Features:","Особенности:"];
	case 54:
		return ["Play","Играть"];
	case 55:
		return ["Create Game","Создать игру"];
	case 56:
		return ["Open Challenges","Открытые вызовы"];
	case 57:
		return ["Spectate","Смотреть"];
	case 58:
		return ["Current Games","Текущие партии"];
	case 59:
		return ["Follow Player","Наблюдать за игроком"];
	case 60:
		return ["Learn","Учёба"];
	case 61:
		return ["Analysis Board","Доска анализа"];
	case 62:
		return ["Social","Сообщество"];
	case 63:
		return ["Player Profile","Профиль игрока"];
	case 64:
		return ["No challenges","Нет вызовов"];
	case 65:
		return ["Incoming Challenge","Входящий вызов"];
	case 66:
		return ["Outgoing Challenge","Исходящий вызов"];
	case 67:
		return ["From: $0","От: $0"];
	case 68:
		return ["To: $0","Кому: $0"];
	case 69:
		return ["Copy Link","Копировать ссылку"];
	case 70:
		return ["Accept","Принять"];
	case 71:
		return ["Decline","Отклонить"];
	case 72:
		return ["Cancel challenge","Отменить вызов"];
	case 73:
		return ["Log In","Войти"];
	case 74:
		return ["My Profile","Мой профиль"];
	case 75:
		return ["Settings","Настройки"];
	case 76:
		return ["Log Out","Выйти"];
	case 77:
		return ["Guest","Гость"];
	case 78:
		return ["Changelog","Список изменений"];
	case 79:
		return ["Authorization","Авторизация"];
	case 80:
		return ["Log In","Вход"];
	case 81:
		return ["Sign Up","Регистрация"];
	case 82:
		return ["Login","Логин"];
	case 83:
		return ["Password","Пароль"];
	case 84:
		return ["Repeat password","Повторите пароль"];
	case 85:
		return ["Remember me","Запомнить"];
	case 86:
		return ["Stay logged in","Оставаться в сети"];
	case 87:
		return ["Authorization failed","Ошибка авторизации"];
	case 88:
		return ["Invalid login or password","Неверный логин или пароль"];
	case 89:
		return ["Passwords do not match","Введенные пароли не совпадают"];
	case 90:
		return ["An user with this login already exists","Пользователь с таким логином уже существует"];
	case 91:
		return ["Login is not specified!","Не указан логин!"];
	case 92:
		return ["Password is not specified!","Не указан пароль!"];
	case 93:
		return ["\"Repeat Password\" field is empty!","Поле \"Повторите пароль\" не заполнено!"];
	case 94:
		return ["Login must contain between 2 and 16 characters","Длина логина должна быть в диапазоне 2-16 символов"];
	case 95:
		return ["Password must contain at least 6 characters","Длина пароля должна составлять не менее 6 символов"];
	case 96:
		return ["Settings","Настройки"];
	case 97:
		return ["General","Основные"];
	case 98:
		return ["Appearance","Внешний вид"];
	case 99:
		return ["Controls","Управление"];
	case 100:
		return ["Integrations","Интеграции"];
	case 101:
		return ["Language","Язык"];
	case 102:
		return ["Coordinates","Координаты"];
	case 103:
		return ["Premoves","Предходы"];
	case 104:
		return ["Branching mode","Вид ветвей"];
	case 105:
		return ["Display turn color in Tree mode","Отображать цвет хода в режиме Дерева"];
	case 106:
		return ["Ignore incoming challenges","Не уведомлять о входящих вызовах"];
	case 107:
		return ["Return to the updated current position","Возвращаться к обновленной текущей позиции"];
	case 108:
		return ["All","Все"];
	case 109:
		return ["Files only","Только вертикали"];
	case 110:
		return ["None","Нет"];
	case 111:
		return ["Tree","Дерево"];
	case 112:
		return ["Outline","Список"];
	case 113:
		return ["Plain text","Текст"];
	case 114:
		return ["Always","Всегда"];
	case 115:
		return ["Own games only","Только в своих партиях"];
	case 116:
		return ["Never","Никогда"];
	case 117:
		return ["Disabled","Нет"];
	case 118:
		return ["Enabled","Да"];
	case 119:
		switch(phrase.role._hx_index) {
		case 0:
			return ["Main Developer","Главный разработчик"];
		case 1:
			return ["Anaconda Developer","Создатель Анаконды"];
		}
		break;
	case 120:
		var _g = phrase.status;
		switch(_g._hx_index) {
		case 0:
			var _g1 = _g.secondsSinceLastAction;
			return ["Last seen: $0","Был в сети: $0"];
		case 1:
			return ["Online now","В сети"];
		case 2:
			return ["Playing now","Играет партию"];
		}
		break;
	case 121:
		return ["Send Challenge","Отправить вызов"];
	case 122:
		return ["Follow","Следить за игрой"];
	case 123:
		return ["Add friend","Добавить в друзья"];
	case 124:
		return ["Remove friend","Удалить из друзей"];
	case 125:
		return ["Friends: ","Друзья: "];
	case 126:
		return ["no friends","друзей нет"];
	case 127:
		return ["Games","Игры"];
	case 128:
		return ["Studies","Студии"];
	case 129:
		return ["Ongoing","Текущие партии"];
	case 130:
		return ["All Games","Все игры"];
	case 131:
		var cnt = phrase.cnt;
		return ["Games: " + cnt,"Игр: " + cnt];
	case 132:
		var elo = phrase.elo;
		var tmp;
		switch(elo._hx_index) {
		case 0:
			tmp = "−";
			break;
		case 1:
			var elo1 = elo.elo;
			tmp = "" + elo1 + "?";
			break;
		case 2:
			var elo1 = elo.elo;
			tmp = "" + elo1;
			break;
		}
		var tmp1 = "ELO: " + tmp;
		var tmp;
		switch(elo._hx_index) {
		case 0:
			tmp = "−";
			break;
		case 1:
			var elo1 = elo.elo;
			tmp = "" + elo1 + "?";
			break;
		case 2:
			var elo1 = elo.elo;
			tmp = "" + elo1;
			break;
		}
		return [tmp1,"ELO: " + tmp];
	case 133:
		return ["Tags: ","Теги: "];
	case 134:
		return ["<none>","<нет>"];
	case 135:
		return ["Edit study","Редактировать студию"];
	case 136:
		return ["Remove study","Удалить студию"];
	case 137:
		return ["Load more","Загрузить больше"];
	case 138:
		return ["Reload","Обновить"];
	case 139:
		return ["Filter by tags:","Фильтровать по тегам:"];
	case 140:
		return ["<none selected>","<не выбраны>"];
	case 141:
		return ["Remove tag from filters","Убрать тег из фильтров"];
	case 142:
		return ["Add filter","Добавить фильтр"];
	case 143:
		return ["Clear","Очистить"];
	case 144:
		return ["Input tag:","Введите тег:"];
	case 145:
		var ownerLogin = phrase.ownerLogin;
		return ["Player info: " + ownerLogin,"Данные игрока: " + ownerLogin];
	case 146:
		return ["Follow","Отслеживать"];
	case 147:
		return ["Stop following","Перестать отслеживать"];
	case 148:
		return ["Add friend","Добавить в друзья"];
	case 149:
		return ["Remove friend","Удалить из друзей"];
	case 150:
		return ["Send challenge","Вызвать на игру"];
	case 151:
		return ["To profile","Открыть профиль"];
	case 152:
		return ["Create Game","Создать игру"];
	case 153:
		return ["Read full changelog","Полный список изменений"];
	case 154:
		return ["Reload","Обновить"];
	case 155:
		return ["Mode","Режим"];
	case 156:
		return ["Time","Контроль"];
	case 157:
		return ["Player","Игрок"];
	case 158:
		return ["Players","Игроки"];
	case 159:
		return ["Bracket","Тип"];
	case 160:
		if(phrase.rated) {
			return ["Unrated","Товарищеская"];
		} else {
			return ["Rated","На рейтинг"];
		}
		break;
	case 161:
		return ["Now Playing","Текущие игры"];
	case 162:
		return ["Recent Games","Недавние партии"];
	case 163:
		return ["Open Challenges","Открытые вызовы"];
	case 164:
		var _g = phrase.color;
		if(_g == null) {
			return ["Your color will be selected randomly","Цвет будет выбран случайным образом"];
		} else {
			switch(_g._hx_index) {
			case 0:
				return ["You will play as White","Вы будете играть за белых"];
			case 1:
				return ["You will play as Black","Вы будете играть за черных"];
			}
		}
		break;
	case 165:
		return ["Invalid move","Недопустимый ход"];
	case 166:
		return ["Server refused to process your move. Please reload the page and try again","Ход, сделанный вами, не прошел проверку сервера. Перезагрузите страницу и попробуйте снова"];
	case 167:
		return ["Game over","Игра окончена"];
	case 168:
		var watchedPlayerLogin = phrase.watchedPlayerLogin;
		return ["Watching " + watchedPlayerLogin,"Наблюдение за " + watchedPlayerLogin];
	case 169:
		return ["You follow this player. Each time he/she starts a new game, you'll be automatically redirected to watch it. To unfollow, simply leave this screen.","Вы наблюдаете за этим игроком. Если игрок начнет новую игру, вы автоматически последуете за ним. Чтобы прекратить наблюдение, просто покиньте этот экран"];
	case 170:
		return ["Input player's username","Введите ник игрока"];
	case 171:
		return ["Save Study","Сохранить студию"];
	case 172:
		return ["Edit Study Parameters","Изменить параметры студии"];
	case 173:
		return ["Name: ","Название: "];
	case 174:
		return ["Access: ","Доступ: "];
	case 175:
		var textCharsLimit = phrase.textCharsLimit;
		return ["Description (max " + textCharsLimit + " chars):","Описание (до " + textCharsLimit + " символов):"];
	case 176:
		var tagCntLimit = phrase.tagCntLimit;
		return ["Tags (up to " + tagCntLimit + "):","Теги (не более " + tagCntLimit + "):"];
	case 177:
		switch(phrase.option._hx_index) {
		case 0:
			return ["Public","Публичный"];
		case 1:
			return ["From profile only","Только из профиля"];
		case 2:
			return ["Private","Приватный"];
		}
		break;
	case 178:
		return ["",""];
	case 179:
		return ["<no tags>","<нет>"];
	case 180:
		return ["Add","Добавить"];
	case 181:
		return ["Remove","Убрать"];
	case 182:
		return ["Clear","Очистить"];
	case 183:
		return ["Input tag:","Введите тег:"];
	case 184:
		return ["Create Study","Создать студию"];
	case 185:
		var overwrittenStudyName = phrase.overwrittenStudyName;
		return ["Overwrite " + overwrittenStudyName,"Перезаписать " + overwrittenStudyName];
	case 186:
		return ["Create New Study","Создать новую студию"];
	case 187:
		return ["Save Changes","Сохранить изменения"];
	case 188:
		return ["Cancel","Отмена"];
	case 189:
		return ["Incoming Challenge","Входящий вызов"];
	case 190:
		return ["$0 challenges you to play a game!","$0 вызывает вас на игру!"];
	case 191:
		return ["Accept","Принять"];
	case 192:
		return ["Decline","Отклонить"];
	case 193:
		return ["Challenge Acceptance Error","Ошибка принятия вызова"];
	case 194:
		return ["Failed to accept challenge: $0 is offline","Не удалось принять вызов: $0 не в сети"];
	case 195:
		return ["Failed to accept challenge: $0 has already started another game","Не удалось принять вызов: $0 уже участвует в другой партии"];
	case 196:
		return ["Failed to accept challenge: the challenge was cancelled","Не удалось принять вызов: вызов был отменен"];
	case 197:
		return ["Failed to accept challenge: server is restarting","Не удалось принять вызов: сервер перезапускается"];
	case 198:
		return ["Challenge sent!","Вызов отправлен!"];
	case 199:
		var opponentRef = phrase.opponentRef;
		if(opponentRef.charAt(0) != "_") {
			return ["Your challenge has been successfully sent to " + opponentRef + ". You may cancel it at any time using the challenge menu at the top-right corner of your screen.","Вызов успешно отправлен игроку " + opponentRef + ". Чтобы отменить его, воспользуйтесь меню вызовов в правом верхнем углу экрана."];
		} else {
			return ["Your challenge has been successfully sent. You may cancel it at any time using the challenge menu at the top-right corner of your screen.","Вызов успешно отправлен. Чтобы отменить его, воспользуйтесь меню вызовов в правом верхнем углу экрана."];
		}
		break;
	case 200:
		return ["Challenge created!","Вызов создан!"];
	case 201:
		return ["Your open challenge has been created. To invite your friends directly, you may send them the link below. To cancel the challenge or to copy this link once again, use the challenge menu at the top-right corner of your screen.","Ваш открытый вызов создан. Чтобы пригласить друзей напрямую, отправьте им ссылку ниже. Вы в любой момент можете отменить вызов или заново скопировать ссылку на него, воспользовавшись меню вызовов в правом верхнем углу экрана."];
	case 202:
		return ["Challenge Creation Error","Ошибка создания вызова"];
	case 203:
		return ["Failed to create challenge: cannot send challenge to oneself","Не удалось создать вызов: вызов не может быть адресован самому себе"];
	case 204:
		return ["Failed to create challenge: player not found","Не удалось создать вызов: игрок не найден"];
	case 205:
		return ["Failed to create challenge: you have already sent another challenge to this player. To create a new challenge, you should cancel the previous one first","Не удалось создать вызов: вызов, адресованный данному игроку уже существует. Для создания нового вызова, сперва отмените предыдущий"];
	case 206:
		return ["Failed to create challenge: you have already created another similar challenge","Не удалось создать вызов: вы уже создавали подобный вызов"];
	case 207:
		return ["Failed to create challenge: rematch time has expired. Create a new challenge instead","Не удалось создать вызов: время на предложение реванша истекло. Создайте новый вызов"];
	case 208:
		return ["Failed to create challenge: impossible challenge. Please try again","Не удалось создать вызов: невозможный вызов. Попробуйте снова"];
	case 209:
		return ["Server is restarting. Creating new challenges is disabled until the restart is complete. Please try later","Сервер перезапускается. Создание новых вызовов отключено до завершения перезапуска. Попробуйте позже"];
	case 210:
		return ["Challenge Parameters","Параметры Вызова"];
	case 211:
		return ["Type","Тип"];
	case 212:
		return ["Direct","Прямой"];
	case 213:
		return ["Open","Открытый"];
	case 214:
		return ["Username","Ник"];
	case 215:
		return ["Visibility","Видимость"];
	case 216:
		return ["Public","Публичный"];
	case 217:
		return ["Link only","Только по ссылке"];
	case 218:
		return ["Link","Ссылка"];
	case 219:
		return ["Time Control","Контроль времени"];
	case 220:
		return ["Initial Time","На партию"];
	case 221:
		return ["Bonus per Turn","Бонус за ход"];
	case 222:
		return ["m","м"];
	case 223:
		return ["s","с"];
	case 224:
		return ["No control","Без контроля"];
	case 225:
		return ["Rated","На рейтинг"];
	case 226:
		return ["Any opponent","Любой противник"];
	case 227:
		return ["Max ELO difference","Макс. разница ELO"];
	case 228:
		return ["I Play","Я играю"];
	case 229:
		return ["Random color","Случайным цветом"];
	case 230:
		return ["White","Белыми"];
	case 231:
		return ["Black","Черными"];
	case 232:
		return ["Starting Position","Начальная позиция"];
	case 233:
		return ["Default","Стандартная"];
	case 234:
		return ["Custom","Особая"];
	case 235:
		return ["SIP","SIP"];
	case 236:
		return ["Create Challenge","Создать вызов"];
	case 237:
		return ["The specified SIP is invalid","Введенная вами строка не является допустимым SIP"];
	case 238:
		return ["Warning: Invalid SIP","Ошибка: Недопустимый SIP"];
	case 239:
		return ["Custom starting position should contain one Intellector of each color. Additionally, none of them may be placed on the final rank","Стартовая позиция должна содержать по одному Интеллектору каждого цвета, при этом ни один из Интов не может находиться на последней горизонтали"];
	case 240:
		return ["Warning: Invalid position","Ошибка: Недопустимая позиция"];
	case 241:
		return ["Error","Ошибка"];
	case 242:
		return ["Challenge not found","Вызов не найден"];
	case 243:
		return ["Player not found","Игрок не найден"];
	case 244:
		return ["Study not found","Студия не найдена"];
	case 245:
		return ["This player is offline","Игрок не в сети"];
	case 246:
		return ["This player is not in the game","В настоящий момент игрок не участвует в партии"];
	case 247:
		return ["You started following this player. Whenever he/she starts a new game, you will become the spectator automatically","Теперь вы отслеживаете этого игрока. Когда он начнет партию, вы будете автоматически добавлены в число наблюдателей"];
	case 248:
		return ["Success","Успех"];
	case 249:
		return ["Connection lost","Потеряно соединение"];
	case 250:
		return ["Connection error","Ошибка подключения"];
	case 251:
		return ["Server error","Ошибка сервера"];
	case 252:
		var errorMessage = phrase.errorMessage;
		return ["A server error occured while processing your request. Details:\n" + errorMessage,"Во время исполнения вашего запроса возникла серверная ошибка. Подробности:\n" + errorMessage];
	case 253:
		return ["Failed to connect to the server. You may use the analysis board while the server is unreachable. Once the connection is restored, the upper menu will become active","Не удалось подключиться к серверу. На время переподключения открыта доска анализа. Верхнее меню станет вновь активным, когда подключение восстановится"];
	case 254:
		return ["Server unavailable","Сервер недоступен"];
	case 255:
		return ["Connection Closed","Соединение закрыто"];
	case 256:
		return ["Connection was closed. Either you logged from another tab, browser or device or you were inactive for too long. Reload the page to reconnect","Соединение было разорвано. Либо вы подключились из другой вкладки, из другого браузера или с другого устройства, либо же вы были неактивны слишком долго. Перезагрузите страницу для переподключения"];
	case 257:
		return ["Reconnecting...","Восстанавливаем соединение..."];
	case 258:
		return ["Connection lost","Потеряно соединение"];
	case 259:
		return ["Server is shutting down","Сервер перезапускается"];
	case 260:
		return ["Server is restarting. Challenges are disabled until the restart is complete.","Сервер перезапускается. Вызовы отключены до окончания перезагрузки."];
	case 261:
		return ["Outdated client","Клиент устарел"];
	case 262:
		return ["Outdated client. Try forceful reload (Ctrl+F5). If a problem persists, please contact the administrator (Telegram: @gulvan).","Клиент устарел. Попробуйте перезагрузить страницу с очисткой кэша (Ctrl+F5). Если проблема сохраняется, пожалуйста, сообщите администратору (Telegram: @gulvan)."];
	case 263:
		return ["Outdated server","Сервер устарел"];
	case 264:
		return ["Outdated server. Please contact the administrator (Telegram: @gulvan).","Сервер устарел. Пожалуйста, сообщите администратору (Telegram: @gulvan)."];
	case 265:
		return ["Message text...","Сообщение..."];
	case 266:
		var displayName = phrase.displayName;
		return ["" + displayName + " is now spectating","" + displayName + " стал наблюдателем"];
	case 267:
		var displayName = phrase.displayName;
		return ["" + displayName + " stopped spectating","" + displayName + " прекратил наблюдение"];
	case 268:
		var color = phrase.color;
		return ["" + dict_Utils.getColorName(color,dict_Language.EN) + " disconnected","" + dict_Utils.getColorName(color,dict_Language.RU) + " отключились"];
	case 269:
		var color = phrase.color;
		return ["" + dict_Utils.getColorName(color,dict_Language.EN) + " reconnected","" + dict_Utils.getColorName(color,dict_Language.RU) + " переподключились"];
	case 270:
		var color = phrase.color;
		if(color != null) {
			return ["" + dict_Utils.getColorName(color,dict_Language.EN) + " offered a draw","" + dict_Utils.getColorName(color,dict_Language.RU) + " предлагают ничью"];
		} else {
			return ["Draw offered","Ничья предложена"];
		}
		break;
	case 271:
		var _g = phrase.color;
		return ["Draw request cancelled","Предложение ничьи отменено"];
	case 272:
		var _g = phrase.color;
		return ["Draw accepted","Ничья принята"];
	case 273:
		var _g = phrase.color;
		return ["Draw declined","Ничья отклонена"];
	case 274:
		var color = phrase.color;
		if(color != null) {
			return ["" + dict_Utils.getColorName(color,dict_Language.EN) + " requested a takeback","" + dict_Utils.getColorName(color,dict_Language.RU) + " запросили тейкбек"];
		} else {
			return ["Takeback requested","Тейкбек запрошен"];
		}
		break;
	case 275:
		var _g = phrase.color;
		return ["Takeback cancelled","Запрос тейкбека отменен"];
	case 276:
		var _g = phrase.color;
		return ["Takeback accepted","Тейкбек принят"];
	case 277:
		var _g = phrase.color;
		return ["Takeback declined","Тейкбек отклонен"];
	case 278:
		var color = phrase.color;
		var secsAdded = Math.round(15.);
		return ["" + dict_Utils.getColorName(color,dict_Language.EN) + ": +" + secsAdded + " seconds","" + dict_Utils.getColorName(color,dict_Language.RU) + ": +" + secsAdded + " секунд"];
	case 279:
		return ["Starting position","Начальная позиция"];
	case 280:
		return ["Promotion selection","Превращение"];
	case 281:
		return ["Select a piece to which you want to promote","Выберите фигуру, в которую хотите превратиться"];
	case 282:
		return ["Chameleon confirmation","Хамелеон"];
	case 283:
		return ["Morph into an eaten piece?","Превратиться в съеденную фигуру?"];
	case 284:
		return ["Flip board","Перевернуть доску"];
	case 285:
		return ["Resign","Сдаться"];
	case 286:
		return ["Abort","Прервать"];
	case 287:
		return ["Are you sure you want to resign?","Вы уверены, что хотите сдаться?"];
	case 288:
		return ["Are you sure you want to abort the game?","Вы уверены, что хотите прервать игру?"];
	case 289:
		return ["Offer draw","Ничья"];
	case 290:
		return ["Takeback","Запросить возврат хода"];
	case 291:
		return ["Cancel draw","Отменить ничью"];
	case 292:
		return ["Cancel takeback","Отменить возврат хода"];
	case 293:
		return ["Accept draw?","Принять ничью?"];
	case 294:
		return ["Accept takeback?","Дать переходить?"];
	case 295:
		return ["Explore on analysis board","На доску анализа"];
	case 296:
		return ["Rematch","Реванш"];
	case 297:
		return ["Add time","Добавить время"];
	case 298:
		return ["Share","Поделиться"];
	case 299:
		return ["Play from here","Доиграть отсюда"];
	case 300:
		return ["Copy","Копировать"];
	case 301:
		return ["Copied!","Скопировано!"];
	case 302:
		return ["Clipboard Error","Ошибка буфера обмена"];
	case 303:
		return ["Failed to copy: $0","Копирование не удалось: $0"];
	case 304:
		return ["Correspondence","По переписке"];
	case 305:
		var notification = phrase.notification;
		switch(notification._hx_index) {
		case 0:
			return ["New Challenge!","Новый вызов!"];
		case 1:
			return ["Game Started!","Игра началась!"];
		}
		break;
	}
};
dict_Dictionary.getPhrase = function(phrase,substitutions) {
	var translations = dict_Dictionary.getTranslations(phrase);
	var translation = dict_Dictionary.chooseTranslation(translations);
	if(substitutions != null) {
		var _g = 0;
		var _g1 = substitutions.length;
		while(_g < _g1) {
			var i = _g++;
			translation = StringTools.replace(translation,"$" + i,substitutions[i]);
		}
	}
	return translation;
};
dict_Dictionary.chooseTranslation = function(translations) {
	return translations[Preferences.language.get()._hx_index];
};
dict_Dictionary.getLanguageName = function(lang) {
	return dict_Dictionary.getTranslations(dict_Phrase.LANGUAGE_NAME)[lang._hx_index];
};
var dict_Phrase = $hxEnums["dict.Phrase"] = { __ename__:"dict.Phrase",__constructs__:null
	,LANGUAGE_NAME: {_hx_name:"LANGUAGE_NAME",_hx_index:0,__enum__:"dict.Phrase",toString:$estr}
	,TURN_COLOR: ($_=function(color) { return {_hx_index:1,color:color,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="TURN_COLOR",$_.__params__ = ["color"],$_)
	,CUSTOM_STARTING_POSITION: {_hx_name:"CUSTOM_STARTING_POSITION",_hx_index:2,__enum__:"dict.Phrase",toString:$estr}
	,ANALYSIS_OVERVIEW_TAB_NAME: {_hx_name:"ANALYSIS_OVERVIEW_TAB_NAME",_hx_index:3,__enum__:"dict.Phrase",toString:$estr}
	,ANALYSIS_SET_POSITION_BTN_TOOLTIP: {_hx_name:"ANALYSIS_SET_POSITION_BTN_TOOLTIP",_hx_index:4,__enum__:"dict.Phrase",toString:$estr}
	,ANALYSIS_SHARE_BTN_TOOLTIP: {_hx_name:"ANALYSIS_SHARE_BTN_TOOLTIP",_hx_index:5,__enum__:"dict.Phrase",toString:$estr}
	,ANALYSIS_BRANCHING_TAB_NAME: {_hx_name:"ANALYSIS_BRANCHING_TAB_NAME",_hx_index:6,__enum__:"dict.Phrase",toString:$estr}
	,ANALYSIS_BRANCHING_HELP_LINK_TEXT: {_hx_name:"ANALYSIS_BRANCHING_HELP_LINK_TEXT",_hx_index:7,__enum__:"dict.Phrase",toString:$estr}
	,ANALYSIS_BRANCHING_HELP_DIALOG_TITLE: {_hx_name:"ANALYSIS_BRANCHING_HELP_DIALOG_TITLE",_hx_index:8,__enum__:"dict.Phrase",toString:$estr}
	,ANALYSIS_BRANCHING_HELP_DIALOG_TEXT: {_hx_name:"ANALYSIS_BRANCHING_HELP_DIALOG_TEXT",_hx_index:9,__enum__:"dict.Phrase",toString:$estr}
	,ANALYSIS_OPENINGS_TAB_NAME: {_hx_name:"ANALYSIS_OPENINGS_TAB_NAME",_hx_index:10,__enum__:"dict.Phrase",toString:$estr}
	,ANALYSIS_OPENINGS_TEASER_TEXT: {_hx_name:"ANALYSIS_OPENINGS_TEASER_TEXT",_hx_index:11,__enum__:"dict.Phrase",toString:$estr}
	,ANALYSIS_CLEAR_BTN_TOOLTIP: {_hx_name:"ANALYSIS_CLEAR_BTN_TOOLTIP",_hx_index:12,__enum__:"dict.Phrase",toString:$estr}
	,ANALYSIS_RESET_BTN_TOOLTIP: {_hx_name:"ANALYSIS_RESET_BTN_TOOLTIP",_hx_index:13,__enum__:"dict.Phrase",toString:$estr}
	,ANALYSIS_TO_STARTPOS_BTN_TOOLTIP: {_hx_name:"ANALYSIS_TO_STARTPOS_BTN_TOOLTIP",_hx_index:14,__enum__:"dict.Phrase",toString:$estr}
	,ANALYSIS_FLIP_BOARD_BTN_TOOLTIP: {_hx_name:"ANALYSIS_FLIP_BOARD_BTN_TOOLTIP",_hx_index:15,__enum__:"dict.Phrase",toString:$estr}
	,ANALYSIS_IMPORT_BTN_TOOLTIP: {_hx_name:"ANALYSIS_IMPORT_BTN_TOOLTIP",_hx_index:16,__enum__:"dict.Phrase",toString:$estr}
	,ANALYSIS_WHITE_TO_MOVE_OPTION_TEXT: {_hx_name:"ANALYSIS_WHITE_TO_MOVE_OPTION_TEXT",_hx_index:17,__enum__:"dict.Phrase",toString:$estr}
	,ANALYSIS_BLACK_TO_MOVE_OPTION_TEXT: {_hx_name:"ANALYSIS_BLACK_TO_MOVE_OPTION_TEXT",_hx_index:18,__enum__:"dict.Phrase",toString:$estr}
	,ANALYSIS_APPLY_CHANGES_BTN_TEXT: {_hx_name:"ANALYSIS_APPLY_CHANGES_BTN_TEXT",_hx_index:19,__enum__:"dict.Phrase",toString:$estr}
	,ANALYSIS_DISCARD_CHANGES_BTN_TEXT: {_hx_name:"ANALYSIS_DISCARD_CHANGES_BTN_TEXT",_hx_index:20,__enum__:"dict.Phrase",toString:$estr}
	,ANALYSIS_INPUT_SIP_PROMPT_TEXT: {_hx_name:"ANALYSIS_INPUT_SIP_PROMPT_TEXT",_hx_index:21,__enum__:"dict.Phrase",toString:$estr}
	,ANALYSIS_INVALID_SIP_WARNING_TITLE: {_hx_name:"ANALYSIS_INVALID_SIP_WARNING_TITLE",_hx_index:22,__enum__:"dict.Phrase",toString:$estr}
	,ANALYSIS_INVALID_SIP_WARNING_TEXT: {_hx_name:"ANALYSIS_INVALID_SIP_WARNING_TEXT",_hx_index:23,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_DIALOG_TITLE: {_hx_name:"SHARE_DIALOG_TITLE",_hx_index:24,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_POSITION_TAB_NAME: {_hx_name:"SHARE_POSITION_TAB_NAME",_hx_index:25,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_SIP_HEADER: {_hx_name:"SHARE_SIP_HEADER",_hx_index:26,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_IMAGE_HEADER: {_hx_name:"SHARE_IMAGE_HEADER",_hx_index:27,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_DOWNLOAD_PNG_BTN_TEXT: {_hx_name:"SHARE_DOWNLOAD_PNG_BTN_TEXT",_hx_index:28,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_DOWNLOAD_PNG_MARKUP_CHECKBOX_TEXT: {_hx_name:"SHARE_DOWNLOAD_PNG_MARKUP_CHECKBOX_TEXT",_hx_index:29,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_DOWNLOAD_PNG_DIMENSIONS_LABEL_TEXT: {_hx_name:"SHARE_DOWNLOAD_PNG_DIMENSIONS_LABEL_TEXT",_hx_index:30,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_DOWNLOAD_PNG_KEEP_RATIO_CHECKBOX_TEXT: {_hx_name:"SHARE_DOWNLOAD_PNG_KEEP_RATIO_CHECKBOX_TEXT",_hx_index:31,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_DOWNLOAD_PNG_BGCOLOR_LABEL_TEXT: {_hx_name:"SHARE_DOWNLOAD_PNG_BGCOLOR_LABEL_TEXT",_hx_index:32,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_DOWNLOAD_PNG_TRANSPARENT_BG_CHECKBOX_TEXT: {_hx_name:"SHARE_DOWNLOAD_PNG_TRANSPARENT_BG_CHECKBOX_TEXT",_hx_index:33,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_GAME_TAB_NAME: {_hx_name:"SHARE_GAME_TAB_NAME",_hx_index:34,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_LINK_HEADER: {_hx_name:"SHARE_LINK_HEADER",_hx_index:35,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_PIN_HEADER: {_hx_name:"SHARE_PIN_HEADER",_hx_index:36,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_ANIMATED_GIF_HEADER: {_hx_name:"SHARE_ANIMATED_GIF_HEADER",_hx_index:37,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_DOWNLOAD_GIF_WIDTH_LABEL_TEXT: {_hx_name:"SHARE_DOWNLOAD_GIF_WIDTH_LABEL_TEXT",_hx_index:38,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_DOWNLOAD_GIF_INTERVAL_LABEL_TEXT: {_hx_name:"SHARE_DOWNLOAD_GIF_INTERVAL_LABEL_TEXT",_hx_index:39,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_EXPORT_AND_DOWNLOAD_BTN_TEXT: {_hx_name:"SHARE_EXPORT_AND_DOWNLOAD_BTN_TEXT",_hx_index:40,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_EXPORT_TAB_NAME: {_hx_name:"SHARE_EXPORT_TAB_NAME",_hx_index:41,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_EXPORT_AS_STUDY_HEADER: {_hx_name:"SHARE_EXPORT_AS_STUDY_HEADER",_hx_index:42,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_EXPORT_AS_STUDY_BTN_TEXT: {_hx_name:"SHARE_EXPORT_AS_STUDY_BTN_TEXT",_hx_index:43,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_EXPORT_AS_QUESTION_MARKS_TEASER: {_hx_name:"SHARE_EXPORT_AS_QUESTION_MARKS_TEASER",_hx_index:44,__enum__:"dict.Phrase",toString:$estr}
	,SHARE_COMING_SOON: {_hx_name:"SHARE_COMING_SOON",_hx_index:45,__enum__:"dict.Phrase",toString:$estr}
	,OPENJOIN_CHALLENGE_BY_HEADER: {_hx_name:"OPENJOIN_CHALLENGE_BY_HEADER",_hx_index:46,__enum__:"dict.Phrase",toString:$estr}
	,OPENJOIN_COLOR_WHITE_OWNER: {_hx_name:"OPENJOIN_COLOR_WHITE_OWNER",_hx_index:47,__enum__:"dict.Phrase",toString:$estr}
	,OPENJOIN_COLOR_BLACK_OWNER: {_hx_name:"OPENJOIN_COLOR_BLACK_OWNER",_hx_index:48,__enum__:"dict.Phrase",toString:$estr}
	,OPENJOIN_COLOR_RANDOM: {_hx_name:"OPENJOIN_COLOR_RANDOM",_hx_index:49,__enum__:"dict.Phrase",toString:$estr}
	,OPENJOIN_RATED: {_hx_name:"OPENJOIN_RATED",_hx_index:50,__enum__:"dict.Phrase",toString:$estr}
	,OPENJOIN_UNRATED: {_hx_name:"OPENJOIN_UNRATED",_hx_index:51,__enum__:"dict.Phrase",toString:$estr}
	,OPENJOIN_ACCEPT_BTN_TEXT: {_hx_name:"OPENJOIN_ACCEPT_BTN_TEXT",_hx_index:52,__enum__:"dict.Phrase",toString:$estr}
	,OPENJOIN_ESSENTIAL_PARAMS_LABEL_TEXT: {_hx_name:"OPENJOIN_ESSENTIAL_PARAMS_LABEL_TEXT",_hx_index:53,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_PLAY_MENU_TITLE: {_hx_name:"MENUBAR_PLAY_MENU_TITLE",_hx_index:54,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_PLAY_MENU_CREATE_GAME_ITEM: {_hx_name:"MENUBAR_PLAY_MENU_CREATE_GAME_ITEM",_hx_index:55,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_PLAY_MENU_OPEN_CHALLENGES_ITEM: {_hx_name:"MENUBAR_PLAY_MENU_OPEN_CHALLENGES_ITEM",_hx_index:56,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_SPECTATE_MENU_TITLE: {_hx_name:"MENUBAR_SPECTATE_MENU_TITLE",_hx_index:57,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_SPECTATE_MENU_CURRENT_GAMES_ITEM: {_hx_name:"MENUBAR_SPECTATE_MENU_CURRENT_GAMES_ITEM",_hx_index:58,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_SPECTATE_MENU_FOLLOW_PLAYER_ITEM: {_hx_name:"MENUBAR_SPECTATE_MENU_FOLLOW_PLAYER_ITEM",_hx_index:59,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_LEARN_MENU_TITLE: {_hx_name:"MENUBAR_LEARN_MENU_TITLE",_hx_index:60,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_LEARN_MENU_ANALYSIS_BOARD_ITEM: {_hx_name:"MENUBAR_LEARN_MENU_ANALYSIS_BOARD_ITEM",_hx_index:61,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_SOCIAL_MENU_TITLE: {_hx_name:"MENUBAR_SOCIAL_MENU_TITLE",_hx_index:62,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_SOCIAL_MENU_PLAYER_PROFILE_ITEM: {_hx_name:"MENUBAR_SOCIAL_MENU_PLAYER_PROFILE_ITEM",_hx_index:63,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_CHALLENGES_NO_CHALLENGES_PLACEHOLDER: {_hx_name:"MENUBAR_CHALLENGES_NO_CHALLENGES_PLACEHOLDER",_hx_index:64,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_CHALLENGES_HEADER_INCOMING_CHALLENGE: {_hx_name:"MENUBAR_CHALLENGES_HEADER_INCOMING_CHALLENGE",_hx_index:65,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_CHALLENGES_HEADER_OUTGOING_CHALLENGE: {_hx_name:"MENUBAR_CHALLENGES_HEADER_OUTGOING_CHALLENGE",_hx_index:66,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_CHALLENGES_FROM_LINE_TEXT: {_hx_name:"MENUBAR_CHALLENGES_FROM_LINE_TEXT",_hx_index:67,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_CHALLENGES_TO_LINE_TEXT: {_hx_name:"MENUBAR_CHALLENGES_TO_LINE_TEXT",_hx_index:68,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_CHALLENGES_COPY_LINK_TEXT: {_hx_name:"MENUBAR_CHALLENGES_COPY_LINK_TEXT",_hx_index:69,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_CHALLENGES_ACCEPT_BUTTON_TEXT: {_hx_name:"MENUBAR_CHALLENGES_ACCEPT_BUTTON_TEXT",_hx_index:70,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_CHALLENGES_DECLINE_BUTTON_TEXT: {_hx_name:"MENUBAR_CHALLENGES_DECLINE_BUTTON_TEXT",_hx_index:71,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_CHALLENGES_CANCEL_BUTTON_TEXT: {_hx_name:"MENUBAR_CHALLENGES_CANCEL_BUTTON_TEXT",_hx_index:72,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_ACCOUNT_MENU_LOGIN_ITEM: {_hx_name:"MENUBAR_ACCOUNT_MENU_LOGIN_ITEM",_hx_index:73,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_ACCOUNT_MENU_MY_PROFILE_ITEM: {_hx_name:"MENUBAR_ACCOUNT_MENU_MY_PROFILE_ITEM",_hx_index:74,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_ACCOUNT_MENU_SETTINGS_ITEM: {_hx_name:"MENUBAR_ACCOUNT_MENU_SETTINGS_ITEM",_hx_index:75,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_ACCOUNT_MENU_LOGOUT_ITEM: {_hx_name:"MENUBAR_ACCOUNT_MENU_LOGOUT_ITEM",_hx_index:76,__enum__:"dict.Phrase",toString:$estr}
	,MENUBAR_ACCOUNT_MENU_GUEST_DISPLAY_NAME: {_hx_name:"MENUBAR_ACCOUNT_MENU_GUEST_DISPLAY_NAME",_hx_index:77,__enum__:"dict.Phrase",toString:$estr}
	,CHANGELOG_DIALOG_TITLE: {_hx_name:"CHANGELOG_DIALOG_TITLE",_hx_index:78,__enum__:"dict.Phrase",toString:$estr}
	,LOGIN_DIALOG_TITLE: {_hx_name:"LOGIN_DIALOG_TITLE",_hx_index:79,__enum__:"dict.Phrase",toString:$estr}
	,LOGIN_LOG_IN_MODE_TITLE: {_hx_name:"LOGIN_LOG_IN_MODE_TITLE",_hx_index:80,__enum__:"dict.Phrase",toString:$estr}
	,LOGIN_REGISTER_MODE_TITLE: {_hx_name:"LOGIN_REGISTER_MODE_TITLE",_hx_index:81,__enum__:"dict.Phrase",toString:$estr}
	,LOGIN_LOGIN_FIELD_NAME: {_hx_name:"LOGIN_LOGIN_FIELD_NAME",_hx_index:82,__enum__:"dict.Phrase",toString:$estr}
	,LOGIN_PASSWORD_FIELD_NAME: {_hx_name:"LOGIN_PASSWORD_FIELD_NAME",_hx_index:83,__enum__:"dict.Phrase",toString:$estr}
	,LOGIN_REPEAT_PASSWORD_FIELD_NAME: {_hx_name:"LOGIN_REPEAT_PASSWORD_FIELD_NAME",_hx_index:84,__enum__:"dict.Phrase",toString:$estr}
	,LOGIN_REMEMBER_ME: {_hx_name:"LOGIN_REMEMBER_ME",_hx_index:85,__enum__:"dict.Phrase",toString:$estr}
	,LOGIN_REMAIN_LOGGED: {_hx_name:"LOGIN_REMAIN_LOGGED",_hx_index:86,__enum__:"dict.Phrase",toString:$estr}
	,LOGIN_WARNING_MESSAGEBOX_TITLE: {_hx_name:"LOGIN_WARNING_MESSAGEBOX_TITLE",_hx_index:87,__enum__:"dict.Phrase",toString:$estr}
	,LOGIN_INVALID_PASSWORD_WARNING_TEXT: {_hx_name:"LOGIN_INVALID_PASSWORD_WARNING_TEXT",_hx_index:88,__enum__:"dict.Phrase",toString:$estr}
	,LOGIN_PASSWORDS_DO_NOT_MATCH: {_hx_name:"LOGIN_PASSWORDS_DO_NOT_MATCH",_hx_index:89,__enum__:"dict.Phrase",toString:$estr}
	,LOGIN_ALREADY_REGISTERED_WARNING_TEXT: {_hx_name:"LOGIN_ALREADY_REGISTERED_WARNING_TEXT",_hx_index:90,__enum__:"dict.Phrase",toString:$estr}
	,LOGIN_LOGIN_NOT_SPECIFIED_WARNING_TEXT: {_hx_name:"LOGIN_LOGIN_NOT_SPECIFIED_WARNING_TEXT",_hx_index:91,__enum__:"dict.Phrase",toString:$estr}
	,LOGIN_PASSWORD_NOT_SPECIFIED_WARNING_TEXT: {_hx_name:"LOGIN_PASSWORD_NOT_SPECIFIED_WARNING_TEXT",_hx_index:92,__enum__:"dict.Phrase",toString:$estr}
	,LOGIN_REPEATED_PASSWORD_NOT_SPECIFIED_WARNING_TEXT: {_hx_name:"LOGIN_REPEATED_PASSWORD_NOT_SPECIFIED_WARNING_TEXT",_hx_index:93,__enum__:"dict.Phrase",toString:$estr}
	,LOGIN_BAD_LOGIN_LENGTH_WARNING_TEXT: {_hx_name:"LOGIN_BAD_LOGIN_LENGTH_WARNING_TEXT",_hx_index:94,__enum__:"dict.Phrase",toString:$estr}
	,LOGIN_BAD_PASSWORD_LENGTH_WARNING_TEXT: {_hx_name:"LOGIN_BAD_PASSWORD_LENGTH_WARNING_TEXT",_hx_index:95,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_DIALOG_TITLE: {_hx_name:"SETTINGS_DIALOG_TITLE",_hx_index:96,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_GENERAL_TAB_TITLE: {_hx_name:"SETTINGS_GENERAL_TAB_TITLE",_hx_index:97,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_APPEARANCE_TAB_TITLE: {_hx_name:"SETTINGS_APPEARANCE_TAB_TITLE",_hx_index:98,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_CONTROLS_TAB_TITLE: {_hx_name:"SETTINGS_CONTROLS_TAB_TITLE",_hx_index:99,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_INTEGRATIONS_TAB_TITLE: {_hx_name:"SETTINGS_INTEGRATIONS_TAB_TITLE",_hx_index:100,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_LANGUAGE_OPTION_NAME: {_hx_name:"SETTINGS_LANGUAGE_OPTION_NAME",_hx_index:101,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_MARKUP_OPTION_NAME: {_hx_name:"SETTINGS_MARKUP_OPTION_NAME",_hx_index:102,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_PREMOVES_OPTION_NAME: {_hx_name:"SETTINGS_PREMOVES_OPTION_NAME",_hx_index:103,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_BRANCHING_TYPE_OPTION_NAME: {_hx_name:"SETTINGS_BRANCHING_TYPE_OPTION_NAME",_hx_index:104,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_BRANCHING_SHOW_TURN_COLOR_OPTION_NAME: {_hx_name:"SETTINGS_BRANCHING_SHOW_TURN_COLOR_OPTION_NAME",_hx_index:105,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_SILENT_CHALLENGES_OPTION_NAME: {_hx_name:"SETTINGS_SILENT_CHALLENGES_OPTION_NAME",_hx_index:106,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_AUTOSCROLL_OPTION_NAME: {_hx_name:"SETTINGS_AUTOSCROLL_OPTION_NAME",_hx_index:107,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_MARKUP_ALL_OPTION_VALUE: {_hx_name:"SETTINGS_MARKUP_ALL_OPTION_VALUE",_hx_index:108,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_MARKUP_LETTERS_OPTION_VALUE: {_hx_name:"SETTINGS_MARKUP_LETTERS_OPTION_VALUE",_hx_index:109,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_MARKUP_NONE_OPTION_VALUE: {_hx_name:"SETTINGS_MARKUP_NONE_OPTION_VALUE",_hx_index:110,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_BRANCHING_TYPE_TREE_OPTION_VALUE: {_hx_name:"SETTINGS_BRANCHING_TYPE_TREE_OPTION_VALUE",_hx_index:111,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_BRANCHING_TYPE_OUTLINE_OPTION_VALUE: {_hx_name:"SETTINGS_BRANCHING_TYPE_OUTLINE_OPTION_VALUE",_hx_index:112,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_BRANCHING_TYPE_PLAIN_OPTION_VALUE: {_hx_name:"SETTINGS_BRANCHING_TYPE_PLAIN_OPTION_VALUE",_hx_index:113,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_AUTOSCROLL_ALWAYS_OPTION_VALUE: {_hx_name:"SETTINGS_AUTOSCROLL_ALWAYS_OPTION_VALUE",_hx_index:114,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_AUTOSCROLL_OWN_OPTION_VALUE: {_hx_name:"SETTINGS_AUTOSCROLL_OWN_OPTION_VALUE",_hx_index:115,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_AUTOSCROLL_NEVER_OPTION_VALUE: {_hx_name:"SETTINGS_AUTOSCROLL_NEVER_OPTION_VALUE",_hx_index:116,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_DISABLED_OPTION_VALUE: {_hx_name:"SETTINGS_DISABLED_OPTION_VALUE",_hx_index:117,__enum__:"dict.Phrase",toString:$estr}
	,SETTINGS_ENABLED_OPTION_VALUE: {_hx_name:"SETTINGS_ENABLED_OPTION_VALUE",_hx_index:118,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_ROLE_TEXT: ($_=function(role) { return {_hx_index:119,role:role,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="PROFILE_ROLE_TEXT",$_.__params__ = ["role"],$_)
	,PROFILE_STATUS_TEXT: ($_=function(status) { return {_hx_index:120,status:status,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="PROFILE_STATUS_TEXT",$_.__params__ = ["status"],$_)
	,PROFILE_QUICK_ACTION_SEND_CHALLENGE_TOOLTIP: {_hx_name:"PROFILE_QUICK_ACTION_SEND_CHALLENGE_TOOLTIP",_hx_index:121,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_QUICK_ACTION_FOLLOW_TOOLTIP: {_hx_name:"PROFILE_QUICK_ACTION_FOLLOW_TOOLTIP",_hx_index:122,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_ACTION_ADD_FRIEND_TOOLTIP: {_hx_name:"PROFILE_ACTION_ADD_FRIEND_TOOLTIP",_hx_index:123,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_ACTION_REMOVE_FRIEND_TOOLTIP: {_hx_name:"PROFILE_ACTION_REMOVE_FRIEND_TOOLTIP",_hx_index:124,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_FRIENDS_PREPENDER: {_hx_name:"PROFILE_FRIENDS_PREPENDER",_hx_index:125,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_NO_FRIENDS_PLACEHOLDER: {_hx_name:"PROFILE_NO_FRIENDS_PLACEHOLDER",_hx_index:126,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_GAMES_TAB_TITLE: {_hx_name:"PROFILE_GAMES_TAB_TITLE",_hx_index:127,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_STUDIES_TAB_TITLE: {_hx_name:"PROFILE_STUDIES_TAB_TITLE",_hx_index:128,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_ONGOING_MATCHES_TAB_TITLE: {_hx_name:"PROFILE_ONGOING_MATCHES_TAB_TITLE",_hx_index:129,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_GAMES_TCFILTER_ALL_GAMES_OPTION_NAME: {_hx_name:"PROFILE_GAMES_TCFILTER_ALL_GAMES_OPTION_NAME",_hx_index:130,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_GAMES_TCFILTER_GAMECNT_LABEL_TEXT: ($_=function(cnt) { return {_hx_index:131,cnt:cnt,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="PROFILE_GAMES_TCFILTER_GAMECNT_LABEL_TEXT",$_.__params__ = ["cnt"],$_)
	,PROFILE_GAMES_TCFILTER_ELO_LABEL_TEXT: ($_=function(elo) { return {_hx_index:132,elo:elo,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="PROFILE_GAMES_TCFILTER_ELO_LABEL_TEXT",$_.__params__ = ["elo"],$_)
	,PROFILE_STUDY_TAG_LABELS_PREPENDER: {_hx_name:"PROFILE_STUDY_TAG_LABELS_PREPENDER",_hx_index:133,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_STUDY_NO_TAGS_PLACEHOLDER: {_hx_name:"PROFILE_STUDY_NO_TAGS_PLACEHOLDER",_hx_index:134,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_STUDY_EDIT_BTN_TOOLTIP: {_hx_name:"PROFILE_STUDY_EDIT_BTN_TOOLTIP",_hx_index:135,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_STUDY_REMOVE_BTN_TOOLTIP: {_hx_name:"PROFILE_STUDY_REMOVE_BTN_TOOLTIP",_hx_index:136,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_LOAD_MORE_BTN_TEXT: {_hx_name:"PROFILE_LOAD_MORE_BTN_TEXT",_hx_index:137,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_ONGOING_RELOAD_BTN_TEXT: {_hx_name:"PROFILE_ONGOING_RELOAD_BTN_TEXT",_hx_index:138,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_TAG_FILTERS_PREPENDER: {_hx_name:"PROFILE_TAG_FILTERS_PREPENDER",_hx_index:139,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_TAG_NO_FILTERS_PLACEHOLDER_TEXT: {_hx_name:"PROFILE_TAG_NO_FILTERS_PLACEHOLDER_TEXT",_hx_index:140,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_REMOVE_TAG_FILTER_BTN_TOOLTIP: {_hx_name:"PROFILE_REMOVE_TAG_FILTER_BTN_TOOLTIP",_hx_index:141,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_ADD_TAG_FILTER_BTN_TEXT: {_hx_name:"PROFILE_ADD_TAG_FILTER_BTN_TEXT",_hx_index:142,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_CLEAR_TAG_FILTERS_BTN_TEXT: {_hx_name:"PROFILE_CLEAR_TAG_FILTERS_BTN_TEXT",_hx_index:143,__enum__:"dict.Phrase",toString:$estr}
	,PROFILE_TAG_FILTER_PROMPT_QUESTION_TEXT: {_hx_name:"PROFILE_TAG_FILTER_PROMPT_QUESTION_TEXT",_hx_index:144,__enum__:"dict.Phrase",toString:$estr}
	,MINIPROFILE_DIALOG_TITLE: ($_=function(ownerLogin) { return {_hx_index:145,ownerLogin:ownerLogin,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="MINIPROFILE_DIALOG_TITLE",$_.__params__ = ["ownerLogin"],$_)
	,MINIPROFILE_FOLLOW_BTN_TOOLTIP: {_hx_name:"MINIPROFILE_FOLLOW_BTN_TOOLTIP",_hx_index:146,__enum__:"dict.Phrase",toString:$estr}
	,MINIPROFILE_UNFOLLOW_BTN_TOOLTIP: {_hx_name:"MINIPROFILE_UNFOLLOW_BTN_TOOLTIP",_hx_index:147,__enum__:"dict.Phrase",toString:$estr}
	,MINIPROFILE_FRIEND_BTN_TOOLTIP: {_hx_name:"MINIPROFILE_FRIEND_BTN_TOOLTIP",_hx_index:148,__enum__:"dict.Phrase",toString:$estr}
	,MINIPROFILE_UNFRIEND_BTN_TOOLTIP: {_hx_name:"MINIPROFILE_UNFRIEND_BTN_TOOLTIP",_hx_index:149,__enum__:"dict.Phrase",toString:$estr}
	,MINIPROFILE_CHALLENGE_BTN_TOOLTIP: {_hx_name:"MINIPROFILE_CHALLENGE_BTN_TOOLTIP",_hx_index:150,__enum__:"dict.Phrase",toString:$estr}
	,MINIPROFILE_TO_PROFILE_BTN_TOOLTIP: {_hx_name:"MINIPROFILE_TO_PROFILE_BTN_TOOLTIP",_hx_index:151,__enum__:"dict.Phrase",toString:$estr}
	,MAIN_MENU_CREATE_GAME_BTN_TEXT: {_hx_name:"MAIN_MENU_CREATE_GAME_BTN_TEXT",_hx_index:152,__enum__:"dict.Phrase",toString:$estr}
	,READ_FULL_CHANGELOG_TOOLTIP: {_hx_name:"READ_FULL_CHANGELOG_TOOLTIP",_hx_index:153,__enum__:"dict.Phrase",toString:$estr}
	,TABLEVIEW_RELOAD_BTN_TEXT: {_hx_name:"TABLEVIEW_RELOAD_BTN_TEXT",_hx_index:154,__enum__:"dict.Phrase",toString:$estr}
	,TABLEVIEW_MODE_COLUMN_NAME: {_hx_name:"TABLEVIEW_MODE_COLUMN_NAME",_hx_index:155,__enum__:"dict.Phrase",toString:$estr}
	,TABLEVIEW_TIME_COLUMN_NAME: {_hx_name:"TABLEVIEW_TIME_COLUMN_NAME",_hx_index:156,__enum__:"dict.Phrase",toString:$estr}
	,TABLEVIEW_PLAYER_COLUMN_NAME: {_hx_name:"TABLEVIEW_PLAYER_COLUMN_NAME",_hx_index:157,__enum__:"dict.Phrase",toString:$estr}
	,TABLEVIEW_PLAYERS_COLUMN_NAME: {_hx_name:"TABLEVIEW_PLAYERS_COLUMN_NAME",_hx_index:158,__enum__:"dict.Phrase",toString:$estr}
	,TABLEVIEW_BRACKET_COLUMN_NAME: {_hx_name:"TABLEVIEW_BRACKET_COLUMN_NAME",_hx_index:159,__enum__:"dict.Phrase",toString:$estr}
	,TABLEVIEW_BRACKET_RANKED: ($_=function(rated) { return {_hx_index:160,rated:rated,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="TABLEVIEW_BRACKET_RANKED",$_.__params__ = ["rated"],$_)
	,CURRENT_GAMES_TABLE_HEADER: {_hx_name:"CURRENT_GAMES_TABLE_HEADER",_hx_index:161,__enum__:"dict.Phrase",toString:$estr}
	,PAST_GAMES_TABLE_HEADER: {_hx_name:"PAST_GAMES_TABLE_HEADER",_hx_index:162,__enum__:"dict.Phrase",toString:$estr}
	,OPEN_CHALLENGES_TABLE_HEADER: {_hx_name:"OPEN_CHALLENGES_TABLE_HEADER",_hx_index:163,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_COLOR_ICON_TOOLTIP: ($_=function(color) { return {_hx_index:164,color:color,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="CHALLENGE_COLOR_ICON_TOOLTIP",$_.__params__ = ["color"],$_)
	,INVALID_MOVE_DIALOG_TITLE: {_hx_name:"INVALID_MOVE_DIALOG_TITLE",_hx_index:165,__enum__:"dict.Phrase",toString:$estr}
	,INVALID_MOVE_DIALOG_MESSAGE: {_hx_name:"INVALID_MOVE_DIALOG_MESSAGE",_hx_index:166,__enum__:"dict.Phrase",toString:$estr}
	,GAME_ENDED_DIALOG_TITLE: {_hx_name:"GAME_ENDED_DIALOG_TITLE",_hx_index:167,__enum__:"dict.Phrase",toString:$estr}
	,LIVE_WATCHING_LABEL_TEXT: ($_=function(watchedPlayerLogin) { return {_hx_index:168,watchedPlayerLogin:watchedPlayerLogin,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="LIVE_WATCHING_LABEL_TEXT",$_.__params__ = ["watchedPlayerLogin"],$_)
	,LIVE_WATCHING_LABEL_TOOLTIP: {_hx_name:"LIVE_WATCHING_LABEL_TOOLTIP",_hx_index:169,__enum__:"dict.Phrase",toString:$estr}
	,INPUT_PLAYER_LOGIN: {_hx_name:"INPUT_PLAYER_LOGIN",_hx_index:170,__enum__:"dict.Phrase",toString:$estr}
	,STUDY_PARAMS_DIALOG_CREATE_TITLE: {_hx_name:"STUDY_PARAMS_DIALOG_CREATE_TITLE",_hx_index:171,__enum__:"dict.Phrase",toString:$estr}
	,STUDY_PARAMS_DIALOG_EDIT_TITLE: {_hx_name:"STUDY_PARAMS_DIALOG_EDIT_TITLE",_hx_index:172,__enum__:"dict.Phrase",toString:$estr}
	,STUDY_PARAMS_DIALOG_PARAM_NAME: {_hx_name:"STUDY_PARAMS_DIALOG_PARAM_NAME",_hx_index:173,__enum__:"dict.Phrase",toString:$estr}
	,STUDY_PARAMS_DIALOG_PARAM_ACCESS: {_hx_name:"STUDY_PARAMS_DIALOG_PARAM_ACCESS",_hx_index:174,__enum__:"dict.Phrase",toString:$estr}
	,STUDY_PARAMS_DIALOG_PARAM_DESCRIPTION: ($_=function(textCharsLimit) { return {_hx_index:175,textCharsLimit:textCharsLimit,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="STUDY_PARAMS_DIALOG_PARAM_DESCRIPTION",$_.__params__ = ["textCharsLimit"],$_)
	,STUDY_PARAMS_DIALOG_PARAM_TAGS: ($_=function(tagCntLimit) { return {_hx_index:176,tagCntLimit:tagCntLimit,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="STUDY_PARAMS_DIALOG_PARAM_TAGS",$_.__params__ = ["tagCntLimit"],$_)
	,STUDY_PARAMS_DIALOG_ACCESS_OPTION: ($_=function(option) { return {_hx_index:177,option:option,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="STUDY_PARAMS_DIALOG_ACCESS_OPTION",$_.__params__ = ["option"],$_)
	,STUDY_PARAMS_DIALOG_TAG_LIST_PREPENDER: {_hx_name:"STUDY_PARAMS_DIALOG_TAG_LIST_PREPENDER",_hx_index:178,__enum__:"dict.Phrase",toString:$estr}
	,STUDY_PARAMS_DIALOG_NO_TAGS_PLACEHOLDER: {_hx_name:"STUDY_PARAMS_DIALOG_NO_TAGS_PLACEHOLDER",_hx_index:179,__enum__:"dict.Phrase",toString:$estr}
	,STUDY_PARAMS_DIALOG_ADD_TAG_BUTTON_TOOLTIP: {_hx_name:"STUDY_PARAMS_DIALOG_ADD_TAG_BUTTON_TOOLTIP",_hx_index:180,__enum__:"dict.Phrase",toString:$estr}
	,STUDY_PARAMS_DIALOG_REMOVE_TAG_BUTTON_TOOLTIP: {_hx_name:"STUDY_PARAMS_DIALOG_REMOVE_TAG_BUTTON_TOOLTIP",_hx_index:181,__enum__:"dict.Phrase",toString:$estr}
	,STUDY_PARAMS_DIALOG_CLEAR_TAGS_BUTTON_TOOLTIP: {_hx_name:"STUDY_PARAMS_DIALOG_CLEAR_TAGS_BUTTON_TOOLTIP",_hx_index:182,__enum__:"dict.Phrase",toString:$estr}
	,STUDY_PARAMS_DIALOG_TAG_PROMPT_QUESTION: {_hx_name:"STUDY_PARAMS_DIALOG_TAG_PROMPT_QUESTION",_hx_index:183,__enum__:"dict.Phrase",toString:$estr}
	,STUDY_PARAMS_DIALOG_CREATE_BUTTON_TEXT: {_hx_name:"STUDY_PARAMS_DIALOG_CREATE_BUTTON_TEXT",_hx_index:184,__enum__:"dict.Phrase",toString:$estr}
	,STUDY_PARAMS_DIALOG_OVERWRITE_BUTTON_TEXT: ($_=function(overwrittenStudyName) { return {_hx_index:185,overwrittenStudyName:overwrittenStudyName,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="STUDY_PARAMS_DIALOG_OVERWRITE_BUTTON_TEXT",$_.__params__ = ["overwrittenStudyName"],$_)
	,STUDY_PARAMS_DIALOG_CREATE_AS_NEW_BUTTON_TEXT: {_hx_name:"STUDY_PARAMS_DIALOG_CREATE_AS_NEW_BUTTON_TEXT",_hx_index:186,__enum__:"dict.Phrase",toString:$estr}
	,STUDY_PARAMS_DIALOG_SAVE_CHANGES_BUTTON_TEXT: {_hx_name:"STUDY_PARAMS_DIALOG_SAVE_CHANGES_BUTTON_TEXT",_hx_index:187,__enum__:"dict.Phrase",toString:$estr}
	,STUDY_PARAMS_DIALOG_CANCEL_BUTTON_TEXT: {_hx_name:"STUDY_PARAMS_DIALOG_CANCEL_BUTTON_TEXT",_hx_index:188,__enum__:"dict.Phrase",toString:$estr}
	,INCOMING_CHALLENGE_DIALOG_TITLE: {_hx_name:"INCOMING_CHALLENGE_DIALOG_TITLE",_hx_index:189,__enum__:"dict.Phrase",toString:$estr}
	,INCOMING_CHALLENGE_CHALLENGE_BY_LABEL_TEXT: {_hx_name:"INCOMING_CHALLENGE_CHALLENGE_BY_LABEL_TEXT",_hx_index:190,__enum__:"dict.Phrase",toString:$estr}
	,INCOMING_CHALLENGE_ACCEPT_BTN_TEXT: {_hx_name:"INCOMING_CHALLENGE_ACCEPT_BTN_TEXT",_hx_index:191,__enum__:"dict.Phrase",toString:$estr}
	,INCOMING_CHALLENGE_DECLINE_BTN_TEXT: {_hx_name:"INCOMING_CHALLENGE_DECLINE_BTN_TEXT",_hx_index:192,__enum__:"dict.Phrase",toString:$estr}
	,INCOMING_CHALLENGE_ACCEPT_ERROR_DIALOG_TITLE: {_hx_name:"INCOMING_CHALLENGE_ACCEPT_ERROR_DIALOG_TITLE",_hx_index:193,__enum__:"dict.Phrase",toString:$estr}
	,INCOMING_CHALLENGE_ACCEPT_ERROR_CALLER_OFFLINE: {_hx_name:"INCOMING_CHALLENGE_ACCEPT_ERROR_CALLER_OFFLINE",_hx_index:194,__enum__:"dict.Phrase",toString:$estr}
	,INCOMING_CHALLENGE_ACCEPT_ERROR_CALLER_INGAME: {_hx_name:"INCOMING_CHALLENGE_ACCEPT_ERROR_CALLER_INGAME",_hx_index:195,__enum__:"dict.Phrase",toString:$estr}
	,INCOMING_CHALLENGE_ACCEPT_ERROR_CHALLENGE_CANCELLED: {_hx_name:"INCOMING_CHALLENGE_ACCEPT_ERROR_CHALLENGE_CANCELLED",_hx_index:196,__enum__:"dict.Phrase",toString:$estr}
	,INCOMING_CHALLENGE_ACCEPT_ERROR_SERVER_SHUTDOWN: {_hx_name:"INCOMING_CHALLENGE_ACCEPT_ERROR_SERVER_SHUTDOWN",_hx_index:197,__enum__:"dict.Phrase",toString:$estr}
	,SEND_DIRECT_CHALLENGE_SUCCESS_DIALOG_TITLE: {_hx_name:"SEND_DIRECT_CHALLENGE_SUCCESS_DIALOG_TITLE",_hx_index:198,__enum__:"dict.Phrase",toString:$estr}
	,SEND_DIRECT_CHALLENGE_SUCCESS_DIALOG_TEXT: ($_=function(opponentRef) { return {_hx_index:199,opponentRef:opponentRef,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="SEND_DIRECT_CHALLENGE_SUCCESS_DIALOG_TEXT",$_.__params__ = ["opponentRef"],$_)
	,SEND_OPEN_CHALLENGE_SUCCESS_DIALOG_TITLE: {_hx_name:"SEND_OPEN_CHALLENGE_SUCCESS_DIALOG_TITLE",_hx_index:200,__enum__:"dict.Phrase",toString:$estr}
	,SEND_OPEN_CHALLENGE_SUCCESS_DIALOG_TEXT: {_hx_name:"SEND_OPEN_CHALLENGE_SUCCESS_DIALOG_TEXT",_hx_index:201,__enum__:"dict.Phrase",toString:$estr}
	,SEND_CHALLENGE_ERROR_DIALOG_TITLE: {_hx_name:"SEND_CHALLENGE_ERROR_DIALOG_TITLE",_hx_index:202,__enum__:"dict.Phrase",toString:$estr}
	,SEND_CHALLENGE_ERROR_TO_ONESELF: {_hx_name:"SEND_CHALLENGE_ERROR_TO_ONESELF",_hx_index:203,__enum__:"dict.Phrase",toString:$estr}
	,SEND_CHALLENGE_ERROR_NOT_FOUND: {_hx_name:"SEND_CHALLENGE_ERROR_NOT_FOUND",_hx_index:204,__enum__:"dict.Phrase",toString:$estr}
	,SEND_CHALLENGE_ERROR_ALREADY_EXISTS: {_hx_name:"SEND_CHALLENGE_ERROR_ALREADY_EXISTS",_hx_index:205,__enum__:"dict.Phrase",toString:$estr}
	,SEND_CHALLENGE_ERROR_DUPLICATE: {_hx_name:"SEND_CHALLENGE_ERROR_DUPLICATE",_hx_index:206,__enum__:"dict.Phrase",toString:$estr}
	,SEND_CHALLENGE_ERROR_REMATCH_EXPIRED: {_hx_name:"SEND_CHALLENGE_ERROR_REMATCH_EXPIRED",_hx_index:207,__enum__:"dict.Phrase",toString:$estr}
	,SEND_CHALLENGE_ERROR_IMPOSSIBLE: {_hx_name:"SEND_CHALLENGE_ERROR_IMPOSSIBLE",_hx_index:208,__enum__:"dict.Phrase",toString:$estr}
	,SEND_CHALLENGE_ERROR_SERVER_SHUTDOWN: {_hx_name:"SEND_CHALLENGE_ERROR_SERVER_SHUTDOWN",_hx_index:209,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_DIALOG_TITLE: {_hx_name:"CHALLENGE_PARAMS_DIALOG_TITLE",_hx_index:210,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_TYPE_OPTION_NAME: {_hx_name:"CHALLENGE_PARAMS_TYPE_OPTION_NAME",_hx_index:211,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_TYPE_DIRECT: {_hx_name:"CHALLENGE_PARAMS_TYPE_DIRECT",_hx_index:212,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_TYPE_OPEN: {_hx_name:"CHALLENGE_PARAMS_TYPE_OPEN",_hx_index:213,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_DIRECT_USERNAME_OPTION_NAME: {_hx_name:"CHALLENGE_PARAMS_DIRECT_USERNAME_OPTION_NAME",_hx_index:214,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_OPEN_VISIBILITY: {_hx_name:"CHALLENGE_PARAMS_OPEN_VISIBILITY",_hx_index:215,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_OPEN_VISIBILITY_ALL: {_hx_name:"CHALLENGE_PARAMS_OPEN_VISIBILITY_ALL",_hx_index:216,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_OPEN_VISIBILITY_BY_LINK: {_hx_name:"CHALLENGE_PARAMS_OPEN_VISIBILITY_BY_LINK",_hx_index:217,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_OPEN_LINK_HEADER: {_hx_name:"CHALLENGE_PARAMS_OPEN_LINK_HEADER",_hx_index:218,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_TIME_CONTROL_OPTION_NAME: {_hx_name:"CHALLENGE_PARAMS_TIME_CONTROL_OPTION_NAME",_hx_index:219,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_TIME_CONTROL_START_OPTION_NAME: {_hx_name:"CHALLENGE_PARAMS_TIME_CONTROL_START_OPTION_NAME",_hx_index:220,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_TIME_CONTROL_INCREMENT_OPTION_NAME: {_hx_name:"CHALLENGE_PARAMS_TIME_CONTROL_INCREMENT_OPTION_NAME",_hx_index:221,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_TIME_CONTROL_MINS_APPENDIX: {_hx_name:"CHALLENGE_PARAMS_TIME_CONTROL_MINS_APPENDIX",_hx_index:222,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_TIME_CONTROL_SECS_APPENDIX: {_hx_name:"CHALLENGE_PARAMS_TIME_CONTROL_SECS_APPENDIX",_hx_index:223,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_TIME_CONTROL_CORRESPONDENCE_CHECK_NAME: {_hx_name:"CHALLENGE_PARAMS_TIME_CONTROL_CORRESPONDENCE_CHECK_NAME",_hx_index:224,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_RANKED_CHECK_NAME: {_hx_name:"CHALLENGE_PARAMS_RANKED_CHECK_NAME",_hx_index:225,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_RATED_ANY_ELO_CHECK_NAME: {_hx_name:"CHALLENGE_PARAMS_RATED_ANY_ELO_CHECK_NAME",_hx_index:226,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_RATED_MAXDIFF_OPTION_NAME: {_hx_name:"CHALLENGE_PARAMS_RATED_MAXDIFF_OPTION_NAME",_hx_index:227,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_COLOR_OPTION_NAME: {_hx_name:"CHALLENGE_PARAMS_COLOR_OPTION_NAME",_hx_index:228,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_COLOR_RANDOM: {_hx_name:"CHALLENGE_PARAMS_COLOR_RANDOM",_hx_index:229,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_COLOR_WHITE: {_hx_name:"CHALLENGE_PARAMS_COLOR_WHITE",_hx_index:230,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_COLOR_BLACK: {_hx_name:"CHALLENGE_PARAMS_COLOR_BLACK",_hx_index:231,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_STARTPOS_OPTION_NAME: {_hx_name:"CHALLENGE_PARAMS_STARTPOS_OPTION_NAME",_hx_index:232,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_STARTPOS_DEFAULT: {_hx_name:"CHALLENGE_PARAMS_STARTPOS_DEFAULT",_hx_index:233,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_STARTPOS_CUSTOM: {_hx_name:"CHALLENGE_PARAMS_STARTPOS_CUSTOM",_hx_index:234,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_STARTPOS_SIP_OPTION_NAME: {_hx_name:"CHALLENGE_PARAMS_STARTPOS_SIP_OPTION_NAME",_hx_index:235,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_CONFIRM_BTN_TEXT: {_hx_name:"CHALLENGE_PARAMS_CONFIRM_BTN_TEXT",_hx_index:236,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_INVALID_SIP_WARNING_TEXT: {_hx_name:"CHALLENGE_PARAMS_INVALID_SIP_WARNING_TEXT",_hx_index:237,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_INVALID_SIP_WARNING_TITLE: {_hx_name:"CHALLENGE_PARAMS_INVALID_SIP_WARNING_TITLE",_hx_index:238,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_INVALID_STARTPOS_WARNING_TEXT: {_hx_name:"CHALLENGE_PARAMS_INVALID_STARTPOS_WARNING_TEXT",_hx_index:239,__enum__:"dict.Phrase",toString:$estr}
	,CHALLENGE_PARAMS_INVALID_STARTPOS_WARNING_TITLE: {_hx_name:"CHALLENGE_PARAMS_INVALID_STARTPOS_WARNING_TITLE",_hx_index:240,__enum__:"dict.Phrase",toString:$estr}
	,REQUESTS_ERROR_DIALOG_TITLE: {_hx_name:"REQUESTS_ERROR_DIALOG_TITLE",_hx_index:241,__enum__:"dict.Phrase",toString:$estr}
	,REQUESTS_ERROR_CHALLENGE_NOT_FOUND: {_hx_name:"REQUESTS_ERROR_CHALLENGE_NOT_FOUND",_hx_index:242,__enum__:"dict.Phrase",toString:$estr}
	,REQUESTS_ERROR_PLAYER_NOT_FOUND: {_hx_name:"REQUESTS_ERROR_PLAYER_NOT_FOUND",_hx_index:243,__enum__:"dict.Phrase",toString:$estr}
	,REQUESTS_ERROR_STUDY_NOT_FOUND: {_hx_name:"REQUESTS_ERROR_STUDY_NOT_FOUND",_hx_index:244,__enum__:"dict.Phrase",toString:$estr}
	,REQUESTS_ERROR_PLAYER_OFFLINE: {_hx_name:"REQUESTS_ERROR_PLAYER_OFFLINE",_hx_index:245,__enum__:"dict.Phrase",toString:$estr}
	,REQUESTS_ERROR_PLAYER_NOT_IN_GAME: {_hx_name:"REQUESTS_ERROR_PLAYER_NOT_IN_GAME",_hx_index:246,__enum__:"dict.Phrase",toString:$estr}
	,REQUESTS_FOLLOW_PLAYER_SUCCESS_DIALOG_TEXT: {_hx_name:"REQUESTS_FOLLOW_PLAYER_SUCCESS_DIALOG_TEXT",_hx_index:247,__enum__:"dict.Phrase",toString:$estr}
	,REQUESTS_FOLLOW_PLAYER_SUCCESS_DIALOG_TITLE: {_hx_name:"REQUESTS_FOLLOW_PLAYER_SUCCESS_DIALOG_TITLE",_hx_index:248,__enum__:"dict.Phrase",toString:$estr}
	,CONNECTION_LOST_ERROR: {_hx_name:"CONNECTION_LOST_ERROR",_hx_index:249,__enum__:"dict.Phrase",toString:$estr}
	,CONNECTION_ERROR_DIALOG_TITLE: {_hx_name:"CONNECTION_ERROR_DIALOG_TITLE",_hx_index:250,__enum__:"dict.Phrase",toString:$estr}
	,SERVER_ERROR_DIALOG_TITLE: {_hx_name:"SERVER_ERROR_DIALOG_TITLE",_hx_index:251,__enum__:"dict.Phrase",toString:$estr}
	,SERVER_ERROR_DIALOG_TEXT: ($_=function(errorMessage) { return {_hx_index:252,errorMessage:errorMessage,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="SERVER_ERROR_DIALOG_TEXT",$_.__params__ = ["errorMessage"],$_)
	,SERVER_UNAVAILABLE_DIALOG_TEXT: {_hx_name:"SERVER_UNAVAILABLE_DIALOG_TEXT",_hx_index:253,__enum__:"dict.Phrase",toString:$estr}
	,SERVER_UNAVAILABLE_DIALOG_TITLE: {_hx_name:"SERVER_UNAVAILABLE_DIALOG_TITLE",_hx_index:254,__enum__:"dict.Phrase",toString:$estr}
	,SESSION_CLOSED_ALERT_TITLE: {_hx_name:"SESSION_CLOSED_ALERT_TITLE",_hx_index:255,__enum__:"dict.Phrase",toString:$estr}
	,SESSION_CLOSED_ALERT_TEXT: {_hx_name:"SESSION_CLOSED_ALERT_TEXT",_hx_index:256,__enum__:"dict.Phrase",toString:$estr}
	,RECONNECTION_POP_UP_TEXT: {_hx_name:"RECONNECTION_POP_UP_TEXT",_hx_index:257,__enum__:"dict.Phrase",toString:$estr}
	,RECONNECTION_POP_UP_TITLE: {_hx_name:"RECONNECTION_POP_UP_TITLE",_hx_index:258,__enum__:"dict.Phrase",toString:$estr}
	,SERVER_IS_SHUTTING_DOWN_WARNING_TITLE: {_hx_name:"SERVER_IS_SHUTTING_DOWN_WARNING_TITLE",_hx_index:259,__enum__:"dict.Phrase",toString:$estr}
	,SERVER_IS_SHUTTING_DOWN_WARNING_TEXT: {_hx_name:"SERVER_IS_SHUTTING_DOWN_WARNING_TEXT",_hx_index:260,__enum__:"dict.Phrase",toString:$estr}
	,OUTDATED_CLIENT_ERROR_TITLE: {_hx_name:"OUTDATED_CLIENT_ERROR_TITLE",_hx_index:261,__enum__:"dict.Phrase",toString:$estr}
	,OUTDATED_CLIENT_ERROR_TEXT: {_hx_name:"OUTDATED_CLIENT_ERROR_TEXT",_hx_index:262,__enum__:"dict.Phrase",toString:$estr}
	,OUTDATED_SERVER_ERROR_TITLE: {_hx_name:"OUTDATED_SERVER_ERROR_TITLE",_hx_index:263,__enum__:"dict.Phrase",toString:$estr}
	,OUTDATED_SERVER_ERROR_TEXT: {_hx_name:"OUTDATED_SERVER_ERROR_TEXT",_hx_index:264,__enum__:"dict.Phrase",toString:$estr}
	,CHATBOX_MESSAGE_PLACEHOLDER: {_hx_name:"CHATBOX_MESSAGE_PLACEHOLDER",_hx_index:265,__enum__:"dict.Phrase",toString:$estr}
	,SPECTATOR_JOINED_MESSAGE: ($_=function(displayName) { return {_hx_index:266,displayName:displayName,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="SPECTATOR_JOINED_MESSAGE",$_.__params__ = ["displayName"],$_)
	,SPECTATOR_LEFT_MESSAGE: ($_=function(displayName) { return {_hx_index:267,displayName:displayName,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="SPECTATOR_LEFT_MESSAGE",$_.__params__ = ["displayName"],$_)
	,PLAYER_DISCONNECTED_MESSAGE: ($_=function(color) { return {_hx_index:268,color:color,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="PLAYER_DISCONNECTED_MESSAGE",$_.__params__ = ["color"],$_)
	,PLAYER_RECONNECTED_MESSAGE: ($_=function(color) { return {_hx_index:269,color:color,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="PLAYER_RECONNECTED_MESSAGE",$_.__params__ = ["color"],$_)
	,DRAW_OFFERED_MESSAGE: ($_=function(color) { return {_hx_index:270,color:color,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="DRAW_OFFERED_MESSAGE",$_.__params__ = ["color"],$_)
	,DRAW_CANCELLED_MESSAGE: ($_=function(color) { return {_hx_index:271,color:color,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="DRAW_CANCELLED_MESSAGE",$_.__params__ = ["color"],$_)
	,DRAW_ACCEPTED_MESSAGE: ($_=function(color) { return {_hx_index:272,color:color,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="DRAW_ACCEPTED_MESSAGE",$_.__params__ = ["color"],$_)
	,DRAW_DECLINED_MESSAGE: ($_=function(color) { return {_hx_index:273,color:color,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="DRAW_DECLINED_MESSAGE",$_.__params__ = ["color"],$_)
	,TAKEBACK_OFFERED_MESSAGE: ($_=function(color) { return {_hx_index:274,color:color,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="TAKEBACK_OFFERED_MESSAGE",$_.__params__ = ["color"],$_)
	,TAKEBACK_CANCELLED_MESSAGE: ($_=function(color) { return {_hx_index:275,color:color,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="TAKEBACK_CANCELLED_MESSAGE",$_.__params__ = ["color"],$_)
	,TAKEBACK_ACCEPTED_MESSAGE: ($_=function(color) { return {_hx_index:276,color:color,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="TAKEBACK_ACCEPTED_MESSAGE",$_.__params__ = ["color"],$_)
	,TAKEBACK_DECLINED_MESSAGE: ($_=function(color) { return {_hx_index:277,color:color,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="TAKEBACK_DECLINED_MESSAGE",$_.__params__ = ["color"],$_)
	,TIME_ADDED_MESSAGE: ($_=function(color) { return {_hx_index:278,color:color,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="TIME_ADDED_MESSAGE",$_.__params__ = ["color"],$_)
	,OPENING_STARTING_POSITION: {_hx_name:"OPENING_STARTING_POSITION",_hx_index:279,__enum__:"dict.Phrase",toString:$estr}
	,PROMOTION_DIALOG_TITLE: {_hx_name:"PROMOTION_DIALOG_TITLE",_hx_index:280,__enum__:"dict.Phrase",toString:$estr}
	,PROMOTION_DIALOG_QUESTION: {_hx_name:"PROMOTION_DIALOG_QUESTION",_hx_index:281,__enum__:"dict.Phrase",toString:$estr}
	,CHAMELEON_DIALOG_TITLE: {_hx_name:"CHAMELEON_DIALOG_TITLE",_hx_index:282,__enum__:"dict.Phrase",toString:$estr}
	,CHAMELEON_DIALOG_QUESTION: {_hx_name:"CHAMELEON_DIALOG_QUESTION",_hx_index:283,__enum__:"dict.Phrase",toString:$estr}
	,CHANGE_ORIENTATION_BTN_TOOLTIP: {_hx_name:"CHANGE_ORIENTATION_BTN_TOOLTIP",_hx_index:284,__enum__:"dict.Phrase",toString:$estr}
	,RESIGN_BTN_TOOLTIP: {_hx_name:"RESIGN_BTN_TOOLTIP",_hx_index:285,__enum__:"dict.Phrase",toString:$estr}
	,RESIGN_BTN_ABORT_TOOLTIP: {_hx_name:"RESIGN_BTN_ABORT_TOOLTIP",_hx_index:286,__enum__:"dict.Phrase",toString:$estr}
	,RESIGN_CONFIRMATION_MESSAGE: {_hx_name:"RESIGN_CONFIRMATION_MESSAGE",_hx_index:287,__enum__:"dict.Phrase",toString:$estr}
	,ABORT_CONFIRMATION_MESSAGE: {_hx_name:"ABORT_CONFIRMATION_MESSAGE",_hx_index:288,__enum__:"dict.Phrase",toString:$estr}
	,OFFER_DRAW_BTN_TOOLTIP: {_hx_name:"OFFER_DRAW_BTN_TOOLTIP",_hx_index:289,__enum__:"dict.Phrase",toString:$estr}
	,TAKEBACK_BTN_TOOLTIP: {_hx_name:"TAKEBACK_BTN_TOOLTIP",_hx_index:290,__enum__:"dict.Phrase",toString:$estr}
	,CANCEL_DRAW_BTN_TOOLTIP: {_hx_name:"CANCEL_DRAW_BTN_TOOLTIP",_hx_index:291,__enum__:"dict.Phrase",toString:$estr}
	,CANCEL_TAKEBACK_BTN_TOOLTIP: {_hx_name:"CANCEL_TAKEBACK_BTN_TOOLTIP",_hx_index:292,__enum__:"dict.Phrase",toString:$estr}
	,DRAW_QUESTION_TEXT: {_hx_name:"DRAW_QUESTION_TEXT",_hx_index:293,__enum__:"dict.Phrase",toString:$estr}
	,TAKEBACK_QUESTION_TEXT: {_hx_name:"TAKEBACK_QUESTION_TEXT",_hx_index:294,__enum__:"dict.Phrase",toString:$estr}
	,EXPLORE_IN_ANALYSIS_BTN_TOOLTIP: {_hx_name:"EXPLORE_IN_ANALYSIS_BTN_TOOLTIP",_hx_index:295,__enum__:"dict.Phrase",toString:$estr}
	,REMATCH_BTN_TOOLTIP: {_hx_name:"REMATCH_BTN_TOOLTIP",_hx_index:296,__enum__:"dict.Phrase",toString:$estr}
	,ADD_TIME_BTN_TOOLTIP: {_hx_name:"ADD_TIME_BTN_TOOLTIP",_hx_index:297,__enum__:"dict.Phrase",toString:$estr}
	,LIVE_SHARE_BTN_TOOLTIP: {_hx_name:"LIVE_SHARE_BTN_TOOLTIP",_hx_index:298,__enum__:"dict.Phrase",toString:$estr}
	,PLAY_FROM_POS_BTN_TOOLTIP: {_hx_name:"PLAY_FROM_POS_BTN_TOOLTIP",_hx_index:299,__enum__:"dict.Phrase",toString:$estr}
	,COPY_BTN_TOOLTIP: {_hx_name:"COPY_BTN_TOOLTIP",_hx_index:300,__enum__:"dict.Phrase",toString:$estr}
	,COPY_BTN_SUCCESS_TOOLTIP: {_hx_name:"COPY_BTN_SUCCESS_TOOLTIP",_hx_index:301,__enum__:"dict.Phrase",toString:$estr}
	,CLIPBOARD_ERROR_ALERT_TITLE: {_hx_name:"CLIPBOARD_ERROR_ALERT_TITLE",_hx_index:302,__enum__:"dict.Phrase",toString:$estr}
	,CLIPBOARD_ERROR_ALERT_TEXT: {_hx_name:"CLIPBOARD_ERROR_ALERT_TEXT",_hx_index:303,__enum__:"dict.Phrase",toString:$estr}
	,CORRESPONDENCE_TIME_CONTROL_NAME: {_hx_name:"CORRESPONDENCE_TIME_CONTROL_NAME",_hx_index:304,__enum__:"dict.Phrase",toString:$estr}
	,NOTIFICATION_BROWSER_TAB_TITLE: ($_=function(notification) { return {_hx_index:305,notification:notification,__enum__:"dict.Phrase",toString:$estr}; },$_._hx_name="NOTIFICATION_BROWSER_TAB_TITLE",$_.__params__ = ["notification"],$_)
};
dict_Phrase.__constructs__ = [dict_Phrase.LANGUAGE_NAME,dict_Phrase.TURN_COLOR,dict_Phrase.CUSTOM_STARTING_POSITION,dict_Phrase.ANALYSIS_OVERVIEW_TAB_NAME,dict_Phrase.ANALYSIS_SET_POSITION_BTN_TOOLTIP,dict_Phrase.ANALYSIS_SHARE_BTN_TOOLTIP,dict_Phrase.ANALYSIS_BRANCHING_TAB_NAME,dict_Phrase.ANALYSIS_BRANCHING_HELP_LINK_TEXT,dict_Phrase.ANALYSIS_BRANCHING_HELP_DIALOG_TITLE,dict_Phrase.ANALYSIS_BRANCHING_HELP_DIALOG_TEXT,dict_Phrase.ANALYSIS_OPENINGS_TAB_NAME,dict_Phrase.ANALYSIS_OPENINGS_TEASER_TEXT,dict_Phrase.ANALYSIS_CLEAR_BTN_TOOLTIP,dict_Phrase.ANALYSIS_RESET_BTN_TOOLTIP,dict_Phrase.ANALYSIS_TO_STARTPOS_BTN_TOOLTIP,dict_Phrase.ANALYSIS_FLIP_BOARD_BTN_TOOLTIP,dict_Phrase.ANALYSIS_IMPORT_BTN_TOOLTIP,dict_Phrase.ANALYSIS_WHITE_TO_MOVE_OPTION_TEXT,dict_Phrase.ANALYSIS_BLACK_TO_MOVE_OPTION_TEXT,dict_Phrase.ANALYSIS_APPLY_CHANGES_BTN_TEXT,dict_Phrase.ANALYSIS_DISCARD_CHANGES_BTN_TEXT,dict_Phrase.ANALYSIS_INPUT_SIP_PROMPT_TEXT,dict_Phrase.ANALYSIS_INVALID_SIP_WARNING_TITLE,dict_Phrase.ANALYSIS_INVALID_SIP_WARNING_TEXT,dict_Phrase.SHARE_DIALOG_TITLE,dict_Phrase.SHARE_POSITION_TAB_NAME,dict_Phrase.SHARE_SIP_HEADER,dict_Phrase.SHARE_IMAGE_HEADER,dict_Phrase.SHARE_DOWNLOAD_PNG_BTN_TEXT,dict_Phrase.SHARE_DOWNLOAD_PNG_MARKUP_CHECKBOX_TEXT,dict_Phrase.SHARE_DOWNLOAD_PNG_DIMENSIONS_LABEL_TEXT,dict_Phrase.SHARE_DOWNLOAD_PNG_KEEP_RATIO_CHECKBOX_TEXT,dict_Phrase.SHARE_DOWNLOAD_PNG_BGCOLOR_LABEL_TEXT,dict_Phrase.SHARE_DOWNLOAD_PNG_TRANSPARENT_BG_CHECKBOX_TEXT,dict_Phrase.SHARE_GAME_TAB_NAME,dict_Phrase.SHARE_LINK_HEADER,dict_Phrase.SHARE_PIN_HEADER,dict_Phrase.SHARE_ANIMATED_GIF_HEADER,dict_Phrase.SHARE_DOWNLOAD_GIF_WIDTH_LABEL_TEXT,dict_Phrase.SHARE_DOWNLOAD_GIF_INTERVAL_LABEL_TEXT,dict_Phrase.SHARE_EXPORT_AND_DOWNLOAD_BTN_TEXT,dict_Phrase.SHARE_EXPORT_TAB_NAME,dict_Phrase.SHARE_EXPORT_AS_STUDY_HEADER,dict_Phrase.SHARE_EXPORT_AS_STUDY_BTN_TEXT,dict_Phrase.SHARE_EXPORT_AS_QUESTION_MARKS_TEASER,dict_Phrase.SHARE_COMING_SOON,dict_Phrase.OPENJOIN_CHALLENGE_BY_HEADER,dict_Phrase.OPENJOIN_COLOR_WHITE_OWNER,dict_Phrase.OPENJOIN_COLOR_BLACK_OWNER,dict_Phrase.OPENJOIN_COLOR_RANDOM,dict_Phrase.OPENJOIN_RATED,dict_Phrase.OPENJOIN_UNRATED,dict_Phrase.OPENJOIN_ACCEPT_BTN_TEXT,dict_Phrase.OPENJOIN_ESSENTIAL_PARAMS_LABEL_TEXT,dict_Phrase.MENUBAR_PLAY_MENU_TITLE,dict_Phrase.MENUBAR_PLAY_MENU_CREATE_GAME_ITEM,dict_Phrase.MENUBAR_PLAY_MENU_OPEN_CHALLENGES_ITEM,dict_Phrase.MENUBAR_SPECTATE_MENU_TITLE,dict_Phrase.MENUBAR_SPECTATE_MENU_CURRENT_GAMES_ITEM,dict_Phrase.MENUBAR_SPECTATE_MENU_FOLLOW_PLAYER_ITEM,dict_Phrase.MENUBAR_LEARN_MENU_TITLE,dict_Phrase.MENUBAR_LEARN_MENU_ANALYSIS_BOARD_ITEM,dict_Phrase.MENUBAR_SOCIAL_MENU_TITLE,dict_Phrase.MENUBAR_SOCIAL_MENU_PLAYER_PROFILE_ITEM,dict_Phrase.MENUBAR_CHALLENGES_NO_CHALLENGES_PLACEHOLDER,dict_Phrase.MENUBAR_CHALLENGES_HEADER_INCOMING_CHALLENGE,dict_Phrase.MENUBAR_CHALLENGES_HEADER_OUTGOING_CHALLENGE,dict_Phrase.MENUBAR_CHALLENGES_FROM_LINE_TEXT,dict_Phrase.MENUBAR_CHALLENGES_TO_LINE_TEXT,dict_Phrase.MENUBAR_CHALLENGES_COPY_LINK_TEXT,dict_Phrase.MENUBAR_CHALLENGES_ACCEPT_BUTTON_TEXT,dict_Phrase.MENUBAR_CHALLENGES_DECLINE_BUTTON_TEXT,dict_Phrase.MENUBAR_CHALLENGES_CANCEL_BUTTON_TEXT,dict_Phrase.MENUBAR_ACCOUNT_MENU_LOGIN_ITEM,dict_Phrase.MENUBAR_ACCOUNT_MENU_MY_PROFILE_ITEM,dict_Phrase.MENUBAR_ACCOUNT_MENU_SETTINGS_ITEM,dict_Phrase.MENUBAR_ACCOUNT_MENU_LOGOUT_ITEM,dict_Phrase.MENUBAR_ACCOUNT_MENU_GUEST_DISPLAY_NAME,dict_Phrase.CHANGELOG_DIALOG_TITLE,dict_Phrase.LOGIN_DIALOG_TITLE,dict_Phrase.LOGIN_LOG_IN_MODE_TITLE,dict_Phrase.LOGIN_REGISTER_MODE_TITLE,dict_Phrase.LOGIN_LOGIN_FIELD_NAME,dict_Phrase.LOGIN_PASSWORD_FIELD_NAME,dict_Phrase.LOGIN_REPEAT_PASSWORD_FIELD_NAME,dict_Phrase.LOGIN_REMEMBER_ME,dict_Phrase.LOGIN_REMAIN_LOGGED,dict_Phrase.LOGIN_WARNING_MESSAGEBOX_TITLE,dict_Phrase.LOGIN_INVALID_PASSWORD_WARNING_TEXT,dict_Phrase.LOGIN_PASSWORDS_DO_NOT_MATCH,dict_Phrase.LOGIN_ALREADY_REGISTERED_WARNING_TEXT,dict_Phrase.LOGIN_LOGIN_NOT_SPECIFIED_WARNING_TEXT,dict_Phrase.LOGIN_PASSWORD_NOT_SPECIFIED_WARNING_TEXT,dict_Phrase.LOGIN_REPEATED_PASSWORD_NOT_SPECIFIED_WARNING_TEXT,dict_Phrase.LOGIN_BAD_LOGIN_LENGTH_WARNING_TEXT,dict_Phrase.LOGIN_BAD_PASSWORD_LENGTH_WARNING_TEXT,dict_Phrase.SETTINGS_DIALOG_TITLE,dict_Phrase.SETTINGS_GENERAL_TAB_TITLE,dict_Phrase.SETTINGS_APPEARANCE_TAB_TITLE,dict_Phrase.SETTINGS_CONTROLS_TAB_TITLE,dict_Phrase.SETTINGS_INTEGRATIONS_TAB_TITLE,dict_Phrase.SETTINGS_LANGUAGE_OPTION_NAME,dict_Phrase.SETTINGS_MARKUP_OPTION_NAME,dict_Phrase.SETTINGS_PREMOVES_OPTION_NAME,dict_Phrase.SETTINGS_BRANCHING_TYPE_OPTION_NAME,dict_Phrase.SETTINGS_BRANCHING_SHOW_TURN_COLOR_OPTION_NAME,dict_Phrase.SETTINGS_SILENT_CHALLENGES_OPTION_NAME,dict_Phrase.SETTINGS_AUTOSCROLL_OPTION_NAME,dict_Phrase.SETTINGS_MARKUP_ALL_OPTION_VALUE,dict_Phrase.SETTINGS_MARKUP_LETTERS_OPTION_VALUE,dict_Phrase.SETTINGS_MARKUP_NONE_OPTION_VALUE,dict_Phrase.SETTINGS_BRANCHING_TYPE_TREE_OPTION_VALUE,dict_Phrase.SETTINGS_BRANCHING_TYPE_OUTLINE_OPTION_VALUE,dict_Phrase.SETTINGS_BRANCHING_TYPE_PLAIN_OPTION_VALUE,dict_Phrase.SETTINGS_AUTOSCROLL_ALWAYS_OPTION_VALUE,dict_Phrase.SETTINGS_AUTOSCROLL_OWN_OPTION_VALUE,dict_Phrase.SETTINGS_AUTOSCROLL_NEVER_OPTION_VALUE,dict_Phrase.SETTINGS_DISABLED_OPTION_VALUE,dict_Phrase.SETTINGS_ENABLED_OPTION_VALUE,dict_Phrase.PROFILE_ROLE_TEXT,dict_Phrase.PROFILE_STATUS_TEXT,dict_Phrase.PROFILE_QUICK_ACTION_SEND_CHALLENGE_TOOLTIP,dict_Phrase.PROFILE_QUICK_ACTION_FOLLOW_TOOLTIP,dict_Phrase.PROFILE_ACTION_ADD_FRIEND_TOOLTIP,dict_Phrase.PROFILE_ACTION_REMOVE_FRIEND_TOOLTIP,dict_Phrase.PROFILE_FRIENDS_PREPENDER,dict_Phrase.PROFILE_NO_FRIENDS_PLACEHOLDER,dict_Phrase.PROFILE_GAMES_TAB_TITLE,dict_Phrase.PROFILE_STUDIES_TAB_TITLE,dict_Phrase.PROFILE_ONGOING_MATCHES_TAB_TITLE,dict_Phrase.PROFILE_GAMES_TCFILTER_ALL_GAMES_OPTION_NAME,dict_Phrase.PROFILE_GAMES_TCFILTER_GAMECNT_LABEL_TEXT,dict_Phrase.PROFILE_GAMES_TCFILTER_ELO_LABEL_TEXT,dict_Phrase.PROFILE_STUDY_TAG_LABELS_PREPENDER,dict_Phrase.PROFILE_STUDY_NO_TAGS_PLACEHOLDER,dict_Phrase.PROFILE_STUDY_EDIT_BTN_TOOLTIP,dict_Phrase.PROFILE_STUDY_REMOVE_BTN_TOOLTIP,dict_Phrase.PROFILE_LOAD_MORE_BTN_TEXT,dict_Phrase.PROFILE_ONGOING_RELOAD_BTN_TEXT,dict_Phrase.PROFILE_TAG_FILTERS_PREPENDER,dict_Phrase.PROFILE_TAG_NO_FILTERS_PLACEHOLDER_TEXT,dict_Phrase.PROFILE_REMOVE_TAG_FILTER_BTN_TOOLTIP,dict_Phrase.PROFILE_ADD_TAG_FILTER_BTN_TEXT,dict_Phrase.PROFILE_CLEAR_TAG_FILTERS_BTN_TEXT,dict_Phrase.PROFILE_TAG_FILTER_PROMPT_QUESTION_TEXT,dict_Phrase.MINIPROFILE_DIALOG_TITLE,dict_Phrase.MINIPROFILE_FOLLOW_BTN_TOOLTIP,dict_Phrase.MINIPROFILE_UNFOLLOW_BTN_TOOLTIP,dict_Phrase.MINIPROFILE_FRIEND_BTN_TOOLTIP,dict_Phrase.MINIPROFILE_UNFRIEND_BTN_TOOLTIP,dict_Phrase.MINIPROFILE_CHALLENGE_BTN_TOOLTIP,dict_Phrase.MINIPROFILE_TO_PROFILE_BTN_TOOLTIP,dict_Phrase.MAIN_MENU_CREATE_GAME_BTN_TEXT,dict_Phrase.READ_FULL_CHANGELOG_TOOLTIP,dict_Phrase.TABLEVIEW_RELOAD_BTN_TEXT,dict_Phrase.TABLEVIEW_MODE_COLUMN_NAME,dict_Phrase.TABLEVIEW_TIME_COLUMN_NAME,dict_Phrase.TABLEVIEW_PLAYER_COLUMN_NAME,dict_Phrase.TABLEVIEW_PLAYERS_COLUMN_NAME,dict_Phrase.TABLEVIEW_BRACKET_COLUMN_NAME,dict_Phrase.TABLEVIEW_BRACKET_RANKED,dict_Phrase.CURRENT_GAMES_TABLE_HEADER,dict_Phrase.PAST_GAMES_TABLE_HEADER,dict_Phrase.OPEN_CHALLENGES_TABLE_HEADER,dict_Phrase.CHALLENGE_COLOR_ICON_TOOLTIP,dict_Phrase.INVALID_MOVE_DIALOG_TITLE,dict_Phrase.INVALID_MOVE_DIALOG_MESSAGE,dict_Phrase.GAME_ENDED_DIALOG_TITLE,dict_Phrase.LIVE_WATCHING_LABEL_TEXT,dict_Phrase.LIVE_WATCHING_LABEL_TOOLTIP,dict_Phrase.INPUT_PLAYER_LOGIN,dict_Phrase.STUDY_PARAMS_DIALOG_CREATE_TITLE,dict_Phrase.STUDY_PARAMS_DIALOG_EDIT_TITLE,dict_Phrase.STUDY_PARAMS_DIALOG_PARAM_NAME,dict_Phrase.STUDY_PARAMS_DIALOG_PARAM_ACCESS,dict_Phrase.STUDY_PARAMS_DIALOG_PARAM_DESCRIPTION,dict_Phrase.STUDY_PARAMS_DIALOG_PARAM_TAGS,dict_Phrase.STUDY_PARAMS_DIALOG_ACCESS_OPTION,dict_Phrase.STUDY_PARAMS_DIALOG_TAG_LIST_PREPENDER,dict_Phrase.STUDY_PARAMS_DIALOG_NO_TAGS_PLACEHOLDER,dict_Phrase.STUDY_PARAMS_DIALOG_ADD_TAG_BUTTON_TOOLTIP,dict_Phrase.STUDY_PARAMS_DIALOG_REMOVE_TAG_BUTTON_TOOLTIP,dict_Phrase.STUDY_PARAMS_DIALOG_CLEAR_TAGS_BUTTON_TOOLTIP,dict_Phrase.STUDY_PARAMS_DIALOG_TAG_PROMPT_QUESTION,dict_Phrase.STUDY_PARAMS_DIALOG_CREATE_BUTTON_TEXT,dict_Phrase.STUDY_PARAMS_DIALOG_OVERWRITE_BUTTON_TEXT,dict_Phrase.STUDY_PARAMS_DIALOG_CREATE_AS_NEW_BUTTON_TEXT,dict_Phrase.STUDY_PARAMS_DIALOG_SAVE_CHANGES_BUTTON_TEXT,dict_Phrase.STUDY_PARAMS_DIALOG_CANCEL_BUTTON_TEXT,dict_Phrase.INCOMING_CHALLENGE_DIALOG_TITLE,dict_Phrase.INCOMING_CHALLENGE_CHALLENGE_BY_LABEL_TEXT,dict_Phrase.INCOMING_CHALLENGE_ACCEPT_BTN_TEXT,dict_Phrase.INCOMING_CHALLENGE_DECLINE_BTN_TEXT,dict_Phrase.INCOMING_CHALLENGE_ACCEPT_ERROR_DIALOG_TITLE,dict_Phrase.INCOMING_CHALLENGE_ACCEPT_ERROR_CALLER_OFFLINE,dict_Phrase.INCOMING_CHALLENGE_ACCEPT_ERROR_CALLER_INGAME,dict_Phrase.INCOMING_CHALLENGE_ACCEPT_ERROR_CHALLENGE_CANCELLED,dict_Phrase.INCOMING_CHALLENGE_ACCEPT_ERROR_SERVER_SHUTDOWN,dict_Phrase.SEND_DIRECT_CHALLENGE_SUCCESS_DIALOG_TITLE,dict_Phrase.SEND_DIRECT_CHALLENGE_SUCCESS_DIALOG_TEXT,dict_Phrase.SEND_OPEN_CHALLENGE_SUCCESS_DIALOG_TITLE,dict_Phrase.SEND_OPEN_CHALLENGE_SUCCESS_DIALOG_TEXT,dict_Phrase.SEND_CHALLENGE_ERROR_DIALOG_TITLE,dict_Phrase.SEND_CHALLENGE_ERROR_TO_ONESELF,dict_Phrase.SEND_CHALLENGE_ERROR_NOT_FOUND,dict_Phrase.SEND_CHALLENGE_ERROR_ALREADY_EXISTS,dict_Phrase.SEND_CHALLENGE_ERROR_DUPLICATE,dict_Phrase.SEND_CHALLENGE_ERROR_REMATCH_EXPIRED,dict_Phrase.SEND_CHALLENGE_ERROR_IMPOSSIBLE,dict_Phrase.SEND_CHALLENGE_ERROR_SERVER_SHUTDOWN,dict_Phrase.CHALLENGE_PARAMS_DIALOG_TITLE,dict_Phrase.CHALLENGE_PARAMS_TYPE_OPTION_NAME,dict_Phrase.CHALLENGE_PARAMS_TYPE_DIRECT,dict_Phrase.CHALLENGE_PARAMS_TYPE_OPEN,dict_Phrase.CHALLENGE_PARAMS_DIRECT_USERNAME_OPTION_NAME,dict_Phrase.CHALLENGE_PARAMS_OPEN_VISIBILITY,dict_Phrase.CHALLENGE_PARAMS_OPEN_VISIBILITY_ALL,dict_Phrase.CHALLENGE_PARAMS_OPEN_VISIBILITY_BY_LINK,dict_Phrase.CHALLENGE_PARAMS_OPEN_LINK_HEADER,dict_Phrase.CHALLENGE_PARAMS_TIME_CONTROL_OPTION_NAME,dict_Phrase.CHALLENGE_PARAMS_TIME_CONTROL_START_OPTION_NAME,dict_Phrase.CHALLENGE_PARAMS_TIME_CONTROL_INCREMENT_OPTION_NAME,dict_Phrase.CHALLENGE_PARAMS_TIME_CONTROL_MINS_APPENDIX,dict_Phrase.CHALLENGE_PARAMS_TIME_CONTROL_SECS_APPENDIX,dict_Phrase.CHALLENGE_PARAMS_TIME_CONTROL_CORRESPONDENCE_CHECK_NAME,dict_Phrase.CHALLENGE_PARAMS_RANKED_CHECK_NAME,dict_Phrase.CHALLENGE_PARAMS_RATED_ANY_ELO_CHECK_NAME,dict_Phrase.CHALLENGE_PARAMS_RATED_MAXDIFF_OPTION_NAME,dict_Phrase.CHALLENGE_PARAMS_COLOR_OPTION_NAME,dict_Phrase.CHALLENGE_PARAMS_COLOR_RANDOM,dict_Phrase.CHALLENGE_PARAMS_COLOR_WHITE,dict_Phrase.CHALLENGE_PARAMS_COLOR_BLACK,dict_Phrase.CHALLENGE_PARAMS_STARTPOS_OPTION_NAME,dict_Phrase.CHALLENGE_PARAMS_STARTPOS_DEFAULT,dict_Phrase.CHALLENGE_PARAMS_STARTPOS_CUSTOM,dict_Phrase.CHALLENGE_PARAMS_STARTPOS_SIP_OPTION_NAME,dict_Phrase.CHALLENGE_PARAMS_CONFIRM_BTN_TEXT,dict_Phrase.CHALLENGE_PARAMS_INVALID_SIP_WARNING_TEXT,dict_Phrase.CHALLENGE_PARAMS_INVALID_SIP_WARNING_TITLE,dict_Phrase.CHALLENGE_PARAMS_INVALID_STARTPOS_WARNING_TEXT,dict_Phrase.CHALLENGE_PARAMS_INVALID_STARTPOS_WARNING_TITLE,dict_Phrase.REQUESTS_ERROR_DIALOG_TITLE,dict_Phrase.REQUESTS_ERROR_CHALLENGE_NOT_FOUND,dict_Phrase.REQUESTS_ERROR_PLAYER_NOT_FOUND,dict_Phrase.REQUESTS_ERROR_STUDY_NOT_FOUND,dict_Phrase.REQUESTS_ERROR_PLAYER_OFFLINE,dict_Phrase.REQUESTS_ERROR_PLAYER_NOT_IN_GAME,dict_Phrase.REQUESTS_FOLLOW_PLAYER_SUCCESS_DIALOG_TEXT,dict_Phrase.REQUESTS_FOLLOW_PLAYER_SUCCESS_DIALOG_TITLE,dict_Phrase.CONNECTION_LOST_ERROR,dict_Phrase.CONNECTION_ERROR_DIALOG_TITLE,dict_Phrase.SERVER_ERROR_DIALOG_TITLE,dict_Phrase.SERVER_ERROR_DIALOG_TEXT,dict_Phrase.SERVER_UNAVAILABLE_DIALOG_TEXT,dict_Phrase.SERVER_UNAVAILABLE_DIALOG_TITLE,dict_Phrase.SESSION_CLOSED_ALERT_TITLE,dict_Phrase.SESSION_CLOSED_ALERT_TEXT,dict_Phrase.RECONNECTION_POP_UP_TEXT,dict_Phrase.RECONNECTION_POP_UP_TITLE,dict_Phrase.SERVER_IS_SHUTTING_DOWN_WARNING_TITLE,dict_Phrase.SERVER_IS_SHUTTING_DOWN_WARNING_TEXT,dict_Phrase.OUTDATED_CLIENT_ERROR_TITLE,dict_Phrase.OUTDATED_CLIENT_ERROR_TEXT,dict_Phrase.OUTDATED_SERVER_ERROR_TITLE,dict_Phrase.OUTDATED_SERVER_ERROR_TEXT,dict_Phrase.CHATBOX_MESSAGE_PLACEHOLDER,dict_Phrase.SPECTATOR_JOINED_MESSAGE,dict_Phrase.SPECTATOR_LEFT_MESSAGE,dict_Phrase.PLAYER_DISCONNECTED_MESSAGE,dict_Phrase.PLAYER_RECONNECTED_MESSAGE,dict_Phrase.DRAW_OFFERED_MESSAGE,dict_Phrase.DRAW_CANCELLED_MESSAGE,dict_Phrase.DRAW_ACCEPTED_MESSAGE,dict_Phrase.DRAW_DECLINED_MESSAGE,dict_Phrase.TAKEBACK_OFFERED_MESSAGE,dict_Phrase.TAKEBACK_CANCELLED_MESSAGE,dict_Phrase.TAKEBACK_ACCEPTED_MESSAGE,dict_Phrase.TAKEBACK_DECLINED_MESSAGE,dict_Phrase.TIME_ADDED_MESSAGE,dict_Phrase.OPENING_STARTING_POSITION,dict_Phrase.PROMOTION_DIALOG_TITLE,dict_Phrase.PROMOTION_DIALOG_QUESTION,dict_Phrase.CHAMELEON_DIALOG_TITLE,dict_Phrase.CHAMELEON_DIALOG_QUESTION,dict_Phrase.CHANGE_ORIENTATION_BTN_TOOLTIP,dict_Phrase.RESIGN_BTN_TOOLTIP,dict_Phrase.RESIGN_BTN_ABORT_TOOLTIP,dict_Phrase.RESIGN_CONFIRMATION_MESSAGE,dict_Phrase.ABORT_CONFIRMATION_MESSAGE,dict_Phrase.OFFER_DRAW_BTN_TOOLTIP,dict_Phrase.TAKEBACK_BTN_TOOLTIP,dict_Phrase.CANCEL_DRAW_BTN_TOOLTIP,dict_Phrase.CANCEL_TAKEBACK_BTN_TOOLTIP,dict_Phrase.DRAW_QUESTION_TEXT,dict_Phrase.TAKEBACK_QUESTION_TEXT,dict_Phrase.EXPLORE_IN_ANALYSIS_BTN_TOOLTIP,dict_Phrase.REMATCH_BTN_TOOLTIP,dict_Phrase.ADD_TIME_BTN_TOOLTIP,dict_Phrase.LIVE_SHARE_BTN_TOOLTIP,dict_Phrase.PLAY_FROM_POS_BTN_TOOLTIP,dict_Phrase.COPY_BTN_TOOLTIP,dict_Phrase.COPY_BTN_SUCCESS_TOOLTIP,dict_Phrase.CLIPBOARD_ERROR_ALERT_TITLE,dict_Phrase.CLIPBOARD_ERROR_ALERT_TEXT,dict_Phrase.CORRESPONDENCE_TIME_CONTROL_NAME,dict_Phrase.NOTIFICATION_BROWSER_TAB_TITLE];
dict_Phrase.__empty_constructs__ = [dict_Phrase.LANGUAGE_NAME,dict_Phrase.CUSTOM_STARTING_POSITION,dict_Phrase.ANALYSIS_OVERVIEW_TAB_NAME,dict_Phrase.ANALYSIS_SET_POSITION_BTN_TOOLTIP,dict_Phrase.ANALYSIS_SHARE_BTN_TOOLTIP,dict_Phrase.ANALYSIS_BRANCHING_TAB_NAME,dict_Phrase.ANALYSIS_BRANCHING_HELP_LINK_TEXT,dict_Phrase.ANALYSIS_BRANCHING_HELP_DIALOG_TITLE,dict_Phrase.ANALYSIS_BRANCHING_HELP_DIALOG_TEXT,dict_Phrase.ANALYSIS_OPENINGS_TAB_NAME,dict_Phrase.ANALYSIS_OPENINGS_TEASER_TEXT,dict_Phrase.ANALYSIS_CLEAR_BTN_TOOLTIP,dict_Phrase.ANALYSIS_RESET_BTN_TOOLTIP,dict_Phrase.ANALYSIS_TO_STARTPOS_BTN_TOOLTIP,dict_Phrase.ANALYSIS_FLIP_BOARD_BTN_TOOLTIP,dict_Phrase.ANALYSIS_IMPORT_BTN_TOOLTIP,dict_Phrase.ANALYSIS_WHITE_TO_MOVE_OPTION_TEXT,dict_Phrase.ANALYSIS_BLACK_TO_MOVE_OPTION_TEXT,dict_Phrase.ANALYSIS_APPLY_CHANGES_BTN_TEXT,dict_Phrase.ANALYSIS_DISCARD_CHANGES_BTN_TEXT,dict_Phrase.ANALYSIS_INPUT_SIP_PROMPT_TEXT,dict_Phrase.ANALYSIS_INVALID_SIP_WARNING_TITLE,dict_Phrase.ANALYSIS_INVALID_SIP_WARNING_TEXT,dict_Phrase.SHARE_DIALOG_TITLE,dict_Phrase.SHARE_POSITION_TAB_NAME,dict_Phrase.SHARE_SIP_HEADER,dict_Phrase.SHARE_IMAGE_HEADER,dict_Phrase.SHARE_DOWNLOAD_PNG_BTN_TEXT,dict_Phrase.SHARE_DOWNLOAD_PNG_MARKUP_CHECKBOX_TEXT,dict_Phrase.SHARE_DOWNLOAD_PNG_DIMENSIONS_LABEL_TEXT,dict_Phrase.SHARE_DOWNLOAD_PNG_KEEP_RATIO_CHECKBOX_TEXT,dict_Phrase.SHARE_DOWNLOAD_PNG_BGCOLOR_LABEL_TEXT,dict_Phrase.SHARE_DOWNLOAD_PNG_TRANSPARENT_BG_CHECKBOX_TEXT,dict_Phrase.SHARE_GAME_TAB_NAME,dict_Phrase.SHARE_LINK_HEADER,dict_Phrase.SHARE_PIN_HEADER,dict_Phrase.SHARE_ANIMATED_GIF_HEADER,dict_Phrase.SHARE_DOWNLOAD_GIF_WIDTH_LABEL_TEXT,dict_Phrase.SHARE_DOWNLOAD_GIF_INTERVAL_LABEL_TEXT,dict_Phrase.SHARE_EXPORT_AND_DOWNLOAD_BTN_TEXT,dict_Phrase.SHARE_EXPORT_TAB_NAME,dict_Phrase.SHARE_EXPORT_AS_STUDY_HEADER,dict_Phrase.SHARE_EXPORT_AS_STUDY_BTN_TEXT,dict_Phrase.SHARE_EXPORT_AS_QUESTION_MARKS_TEASER,dict_Phrase.SHARE_COMING_SOON,dict_Phrase.OPENJOIN_CHALLENGE_BY_HEADER,dict_Phrase.OPENJOIN_COLOR_WHITE_OWNER,dict_Phrase.OPENJOIN_COLOR_BLACK_OWNER,dict_Phrase.OPENJOIN_COLOR_RANDOM,dict_Phrase.OPENJOIN_RATED,dict_Phrase.OPENJOIN_UNRATED,dict_Phrase.OPENJOIN_ACCEPT_BTN_TEXT,dict_Phrase.OPENJOIN_ESSENTIAL_PARAMS_LABEL_TEXT,dict_Phrase.MENUBAR_PLAY_MENU_TITLE,dict_Phrase.MENUBAR_PLAY_MENU_CREATE_GAME_ITEM,dict_Phrase.MENUBAR_PLAY_MENU_OPEN_CHALLENGES_ITEM,dict_Phrase.MENUBAR_SPECTATE_MENU_TITLE,dict_Phrase.MENUBAR_SPECTATE_MENU_CURRENT_GAMES_ITEM,dict_Phrase.MENUBAR_SPECTATE_MENU_FOLLOW_PLAYER_ITEM,dict_Phrase.MENUBAR_LEARN_MENU_TITLE,dict_Phrase.MENUBAR_LEARN_MENU_ANALYSIS_BOARD_ITEM,dict_Phrase.MENUBAR_SOCIAL_MENU_TITLE,dict_Phrase.MENUBAR_SOCIAL_MENU_PLAYER_PROFILE_ITEM,dict_Phrase.MENUBAR_CHALLENGES_NO_CHALLENGES_PLACEHOLDER,dict_Phrase.MENUBAR_CHALLENGES_HEADER_INCOMING_CHALLENGE,dict_Phrase.MENUBAR_CHALLENGES_HEADER_OUTGOING_CHALLENGE,dict_Phrase.MENUBAR_CHALLENGES_FROM_LINE_TEXT,dict_Phrase.MENUBAR_CHALLENGES_TO_LINE_TEXT,dict_Phrase.MENUBAR_CHALLENGES_COPY_LINK_TEXT,dict_Phrase.MENUBAR_CHALLENGES_ACCEPT_BUTTON_TEXT,dict_Phrase.MENUBAR_CHALLENGES_DECLINE_BUTTON_TEXT,dict_Phrase.MENUBAR_CHALLENGES_CANCEL_BUTTON_TEXT,dict_Phrase.MENUBAR_ACCOUNT_MENU_LOGIN_ITEM,dict_Phrase.MENUBAR_ACCOUNT_MENU_MY_PROFILE_ITEM,dict_Phrase.MENUBAR_ACCOUNT_MENU_SETTINGS_ITEM,dict_Phrase.MENUBAR_ACCOUNT_MENU_LOGOUT_ITEM,dict_Phrase.MENUBAR_ACCOUNT_MENU_GUEST_DISPLAY_NAME,dict_Phrase.CHANGELOG_DIALOG_TITLE,dict_Phrase.LOGIN_DIALOG_TITLE,dict_Phrase.LOGIN_LOG_IN_MODE_TITLE,dict_Phrase.LOGIN_REGISTER_MODE_TITLE,dict_Phrase.LOGIN_LOGIN_FIELD_NAME,dict_Phrase.LOGIN_PASSWORD_FIELD_NAME,dict_Phrase.LOGIN_REPEAT_PASSWORD_FIELD_NAME,dict_Phrase.LOGIN_REMEMBER_ME,dict_Phrase.LOGIN_REMAIN_LOGGED,dict_Phrase.LOGIN_WARNING_MESSAGEBOX_TITLE,dict_Phrase.LOGIN_INVALID_PASSWORD_WARNING_TEXT,dict_Phrase.LOGIN_PASSWORDS_DO_NOT_MATCH,dict_Phrase.LOGIN_ALREADY_REGISTERED_WARNING_TEXT,dict_Phrase.LOGIN_LOGIN_NOT_SPECIFIED_WARNING_TEXT,dict_Phrase.LOGIN_PASSWORD_NOT_SPECIFIED_WARNING_TEXT,dict_Phrase.LOGIN_REPEATED_PASSWORD_NOT_SPECIFIED_WARNING_TEXT,dict_Phrase.LOGIN_BAD_LOGIN_LENGTH_WARNING_TEXT,dict_Phrase.LOGIN_BAD_PASSWORD_LENGTH_WARNING_TEXT,dict_Phrase.SETTINGS_DIALOG_TITLE,dict_Phrase.SETTINGS_GENERAL_TAB_TITLE,dict_Phrase.SETTINGS_APPEARANCE_TAB_TITLE,dict_Phrase.SETTINGS_CONTROLS_TAB_TITLE,dict_Phrase.SETTINGS_INTEGRATIONS_TAB_TITLE,dict_Phrase.SETTINGS_LANGUAGE_OPTION_NAME,dict_Phrase.SETTINGS_MARKUP_OPTION_NAME,dict_Phrase.SETTINGS_PREMOVES_OPTION_NAME,dict_Phrase.SETTINGS_BRANCHING_TYPE_OPTION_NAME,dict_Phrase.SETTINGS_BRANCHING_SHOW_TURN_COLOR_OPTION_NAME,dict_Phrase.SETTINGS_SILENT_CHALLENGES_OPTION_NAME,dict_Phrase.SETTINGS_AUTOSCROLL_OPTION_NAME,dict_Phrase.SETTINGS_MARKUP_ALL_OPTION_VALUE,dict_Phrase.SETTINGS_MARKUP_LETTERS_OPTION_VALUE,dict_Phrase.SETTINGS_MARKUP_NONE_OPTION_VALUE,dict_Phrase.SETTINGS_BRANCHING_TYPE_TREE_OPTION_VALUE,dict_Phrase.SETTINGS_BRANCHING_TYPE_OUTLINE_OPTION_VALUE,dict_Phrase.SETTINGS_BRANCHING_TYPE_PLAIN_OPTION_VALUE,dict_Phrase.SETTINGS_AUTOSCROLL_ALWAYS_OPTION_VALUE,dict_Phrase.SETTINGS_AUTOSCROLL_OWN_OPTION_VALUE,dict_Phrase.SETTINGS_AUTOSCROLL_NEVER_OPTION_VALUE,dict_Phrase.SETTINGS_DISABLED_OPTION_VALUE,dict_Phrase.SETTINGS_ENABLED_OPTION_VALUE,dict_Phrase.PROFILE_QUICK_ACTION_SEND_CHALLENGE_TOOLTIP,dict_Phrase.PROFILE_QUICK_ACTION_FOLLOW_TOOLTIP,dict_Phrase.PROFILE_ACTION_ADD_FRIEND_TOOLTIP,dict_Phrase.PROFILE_ACTION_REMOVE_FRIEND_TOOLTIP,dict_Phrase.PROFILE_FRIENDS_PREPENDER,dict_Phrase.PROFILE_NO_FRIENDS_PLACEHOLDER,dict_Phrase.PROFILE_GAMES_TAB_TITLE,dict_Phrase.PROFILE_STUDIES_TAB_TITLE,dict_Phrase.PROFILE_ONGOING_MATCHES_TAB_TITLE,dict_Phrase.PROFILE_GAMES_TCFILTER_ALL_GAMES_OPTION_NAME,dict_Phrase.PROFILE_STUDY_TAG_LABELS_PREPENDER,dict_Phrase.PROFILE_STUDY_NO_TAGS_PLACEHOLDER,dict_Phrase.PROFILE_STUDY_EDIT_BTN_TOOLTIP,dict_Phrase.PROFILE_STUDY_REMOVE_BTN_TOOLTIP,dict_Phrase.PROFILE_LOAD_MORE_BTN_TEXT,dict_Phrase.PROFILE_ONGOING_RELOAD_BTN_TEXT,dict_Phrase.PROFILE_TAG_FILTERS_PREPENDER,dict_Phrase.PROFILE_TAG_NO_FILTERS_PLACEHOLDER_TEXT,dict_Phrase.PROFILE_REMOVE_TAG_FILTER_BTN_TOOLTIP,dict_Phrase.PROFILE_ADD_TAG_FILTER_BTN_TEXT,dict_Phrase.PROFILE_CLEAR_TAG_FILTERS_BTN_TEXT,dict_Phrase.PROFILE_TAG_FILTER_PROMPT_QUESTION_TEXT,dict_Phrase.MINIPROFILE_FOLLOW_BTN_TOOLTIP,dict_Phrase.MINIPROFILE_UNFOLLOW_BTN_TOOLTIP,dict_Phrase.MINIPROFILE_FRIEND_BTN_TOOLTIP,dict_Phrase.MINIPROFILE_UNFRIEND_BTN_TOOLTIP,dict_Phrase.MINIPROFILE_CHALLENGE_BTN_TOOLTIP,dict_Phrase.MINIPROFILE_TO_PROFILE_BTN_TOOLTIP,dict_Phrase.MAIN_MENU_CREATE_GAME_BTN_TEXT,dict_Phrase.READ_FULL_CHANGELOG_TOOLTIP,dict_Phrase.TABLEVIEW_RELOAD_BTN_TEXT,dict_Phrase.TABLEVIEW_MODE_COLUMN_NAME,dict_Phrase.TABLEVIEW_TIME_COLUMN_NAME,dict_Phrase.TABLEVIEW_PLAYER_COLUMN_NAME,dict_Phrase.TABLEVIEW_PLAYERS_COLUMN_NAME,dict_Phrase.TABLEVIEW_BRACKET_COLUMN_NAME,dict_Phrase.CURRENT_GAMES_TABLE_HEADER,dict_Phrase.PAST_GAMES_TABLE_HEADER,dict_Phrase.OPEN_CHALLENGES_TABLE_HEADER,dict_Phrase.INVALID_MOVE_DIALOG_TITLE,dict_Phrase.INVALID_MOVE_DIALOG_MESSAGE,dict_Phrase.GAME_ENDED_DIALOG_TITLE,dict_Phrase.LIVE_WATCHING_LABEL_TOOLTIP,dict_Phrase.INPUT_PLAYER_LOGIN,dict_Phrase.STUDY_PARAMS_DIALOG_CREATE_TITLE,dict_Phrase.STUDY_PARAMS_DIALOG_EDIT_TITLE,dict_Phrase.STUDY_PARAMS_DIALOG_PARAM_NAME,dict_Phrase.STUDY_PARAMS_DIALOG_PARAM_ACCESS,dict_Phrase.STUDY_PARAMS_DIALOG_TAG_LIST_PREPENDER,dict_Phrase.STUDY_PARAMS_DIALOG_NO_TAGS_PLACEHOLDER,dict_Phrase.STUDY_PARAMS_DIALOG_ADD_TAG_BUTTON_TOOLTIP,dict_Phrase.STUDY_PARAMS_DIALOG_REMOVE_TAG_BUTTON_TOOLTIP,dict_Phrase.STUDY_PARAMS_DIALOG_CLEAR_TAGS_BUTTON_TOOLTIP,dict_Phrase.STUDY_PARAMS_DIALOG_TAG_PROMPT_QUESTION,dict_Phrase.STUDY_PARAMS_DIALOG_CREATE_BUTTON_TEXT,dict_Phrase.STUDY_PARAMS_DIALOG_CREATE_AS_NEW_BUTTON_TEXT,dict_Phrase.STUDY_PARAMS_DIALOG_SAVE_CHANGES_BUTTON_TEXT,dict_Phrase.STUDY_PARAMS_DIALOG_CANCEL_BUTTON_TEXT,dict_Phrase.INCOMING_CHALLENGE_DIALOG_TITLE,dict_Phrase.INCOMING_CHALLENGE_CHALLENGE_BY_LABEL_TEXT,dict_Phrase.INCOMING_CHALLENGE_ACCEPT_BTN_TEXT,dict_Phrase.INCOMING_CHALLENGE_DECLINE_BTN_TEXT,dict_Phrase.INCOMING_CHALLENGE_ACCEPT_ERROR_DIALOG_TITLE,dict_Phrase.INCOMING_CHALLENGE_ACCEPT_ERROR_CALLER_OFFLINE,dict_Phrase.INCOMING_CHALLENGE_ACCEPT_ERROR_CALLER_INGAME,dict_Phrase.INCOMING_CHALLENGE_ACCEPT_ERROR_CHALLENGE_CANCELLED,dict_Phrase.INCOMING_CHALLENGE_ACCEPT_ERROR_SERVER_SHUTDOWN,dict_Phrase.SEND_DIRECT_CHALLENGE_SUCCESS_DIALOG_TITLE,dict_Phrase.SEND_OPEN_CHALLENGE_SUCCESS_DIALOG_TITLE,dict_Phrase.SEND_OPEN_CHALLENGE_SUCCESS_DIALOG_TEXT,dict_Phrase.SEND_CHALLENGE_ERROR_DIALOG_TITLE,dict_Phrase.SEND_CHALLENGE_ERROR_TO_ONESELF,dict_Phrase.SEND_CHALLENGE_ERROR_NOT_FOUND,dict_Phrase.SEND_CHALLENGE_ERROR_ALREADY_EXISTS,dict_Phrase.SEND_CHALLENGE_ERROR_DUPLICATE,dict_Phrase.SEND_CHALLENGE_ERROR_REMATCH_EXPIRED,dict_Phrase.SEND_CHALLENGE_ERROR_IMPOSSIBLE,dict_Phrase.SEND_CHALLENGE_ERROR_SERVER_SHUTDOWN,dict_Phrase.CHALLENGE_PARAMS_DIALOG_TITLE,dict_Phrase.CHALLENGE_PARAMS_TYPE_OPTION_NAME,dict_Phrase.CHALLENGE_PARAMS_TYPE_DIRECT,dict_Phrase.CHALLENGE_PARAMS_TYPE_OPEN,dict_Phrase.CHALLENGE_PARAMS_DIRECT_USERNAME_OPTION_NAME,dict_Phrase.CHALLENGE_PARAMS_OPEN_VISIBILITY,dict_Phrase.CHALLENGE_PARAMS_OPEN_VISIBILITY_ALL,dict_Phrase.CHALLENGE_PARAMS_OPEN_VISIBILITY_BY_LINK,dict_Phrase.CHALLENGE_PARAMS_OPEN_LINK_HEADER,dict_Phrase.CHALLENGE_PARAMS_TIME_CONTROL_OPTION_NAME,dict_Phrase.CHALLENGE_PARAMS_TIME_CONTROL_START_OPTION_NAME,dict_Phrase.CHALLENGE_PARAMS_TIME_CONTROL_INCREMENT_OPTION_NAME,dict_Phrase.CHALLENGE_PARAMS_TIME_CONTROL_MINS_APPENDIX,dict_Phrase.CHALLENGE_PARAMS_TIME_CONTROL_SECS_APPENDIX,dict_Phrase.CHALLENGE_PARAMS_TIME_CONTROL_CORRESPONDENCE_CHECK_NAME,dict_Phrase.CHALLENGE_PARAMS_RANKED_CHECK_NAME,dict_Phrase.CHALLENGE_PARAMS_RATED_ANY_ELO_CHECK_NAME,dict_Phrase.CHALLENGE_PARAMS_RATED_MAXDIFF_OPTION_NAME,dict_Phrase.CHALLENGE_PARAMS_COLOR_OPTION_NAME,dict_Phrase.CHALLENGE_PARAMS_COLOR_RANDOM,dict_Phrase.CHALLENGE_PARAMS_COLOR_WHITE,dict_Phrase.CHALLENGE_PARAMS_COLOR_BLACK,dict_Phrase.CHALLENGE_PARAMS_STARTPOS_OPTION_NAME,dict_Phrase.CHALLENGE_PARAMS_STARTPOS_DEFAULT,dict_Phrase.CHALLENGE_PARAMS_STARTPOS_CUSTOM,dict_Phrase.CHALLENGE_PARAMS_STARTPOS_SIP_OPTION_NAME,dict_Phrase.CHALLENGE_PARAMS_CONFIRM_BTN_TEXT,dict_Phrase.CHALLENGE_PARAMS_INVALID_SIP_WARNING_TEXT,dict_Phrase.CHALLENGE_PARAMS_INVALID_SIP_WARNING_TITLE,dict_Phrase.CHALLENGE_PARAMS_INVALID_STARTPOS_WARNING_TEXT,dict_Phrase.CHALLENGE_PARAMS_INVALID_STARTPOS_WARNING_TITLE,dict_Phrase.REQUESTS_ERROR_DIALOG_TITLE,dict_Phrase.REQUESTS_ERROR_CHALLENGE_NOT_FOUND,dict_Phrase.REQUESTS_ERROR_PLAYER_NOT_FOUND,dict_Phrase.REQUESTS_ERROR_STUDY_NOT_FOUND,dict_Phrase.REQUESTS_ERROR_PLAYER_OFFLINE,dict_Phrase.REQUESTS_ERROR_PLAYER_NOT_IN_GAME,dict_Phrase.REQUESTS_FOLLOW_PLAYER_SUCCESS_DIALOG_TEXT,dict_Phrase.REQUESTS_FOLLOW_PLAYER_SUCCESS_DIALOG_TITLE,dict_Phrase.CONNECTION_LOST_ERROR,dict_Phrase.CONNECTION_ERROR_DIALOG_TITLE,dict_Phrase.SERVER_ERROR_DIALOG_TITLE,dict_Phrase.SERVER_UNAVAILABLE_DIALOG_TEXT,dict_Phrase.SERVER_UNAVAILABLE_DIALOG_TITLE,dict_Phrase.SESSION_CLOSED_ALERT_TITLE,dict_Phrase.SESSION_CLOSED_ALERT_TEXT,dict_Phrase.RECONNECTION_POP_UP_TEXT,dict_Phrase.RECONNECTION_POP_UP_TITLE,dict_Phrase.SERVER_IS_SHUTTING_DOWN_WARNING_TITLE,dict_Phrase.SERVER_IS_SHUTTING_DOWN_WARNING_TEXT,dict_Phrase.OUTDATED_CLIENT_ERROR_TITLE,dict_Phrase.OUTDATED_CLIENT_ERROR_TEXT,dict_Phrase.OUTDATED_SERVER_ERROR_TITLE,dict_Phrase.OUTDATED_SERVER_ERROR_TEXT,dict_Phrase.CHATBOX_MESSAGE_PLACEHOLDER,dict_Phrase.OPENING_STARTING_POSITION,dict_Phrase.PROMOTION_DIALOG_TITLE,dict_Phrase.PROMOTION_DIALOG_QUESTION,dict_Phrase.CHAMELEON_DIALOG_TITLE,dict_Phrase.CHAMELEON_DIALOG_QUESTION,dict_Phrase.CHANGE_ORIENTATION_BTN_TOOLTIP,dict_Phrase.RESIGN_BTN_TOOLTIP,dict_Phrase.RESIGN_BTN_ABORT_TOOLTIP,dict_Phrase.RESIGN_CONFIRMATION_MESSAGE,dict_Phrase.ABORT_CONFIRMATION_MESSAGE,dict_Phrase.OFFER_DRAW_BTN_TOOLTIP,dict_Phrase.TAKEBACK_BTN_TOOLTIP,dict_Phrase.CANCEL_DRAW_BTN_TOOLTIP,dict_Phrase.CANCEL_TAKEBACK_BTN_TOOLTIP,dict_Phrase.DRAW_QUESTION_TEXT,dict_Phrase.TAKEBACK_QUESTION_TEXT,dict_Phrase.EXPLORE_IN_ANALYSIS_BTN_TOOLTIP,dict_Phrase.REMATCH_BTN_TOOLTIP,dict_Phrase.ADD_TIME_BTN_TOOLTIP,dict_Phrase.LIVE_SHARE_BTN_TOOLTIP,dict_Phrase.PLAY_FROM_POS_BTN_TOOLTIP,dict_Phrase.COPY_BTN_TOOLTIP,dict_Phrase.COPY_BTN_SUCCESS_TOOLTIP,dict_Phrase.CLIPBOARD_ERROR_ALERT_TITLE,dict_Phrase.CLIPBOARD_ERROR_ALERT_TEXT,dict_Phrase.CORRESPONDENCE_TIME_CONTROL_NAME];
var dict_Utils = function() { };
$hxClasses["dict.Utils"] = dict_Utils;
dict_Utils.__name__ = "dict.Utils";
dict_Utils.getColorName = function(color,lang) {
	if(lang == null) {
		lang = Preferences.language.get();
	}
	switch(lang._hx_index) {
	case 0:
		return $hxEnums[color.__enum__].__constructs__[color._hx_index]._hx_name;
	case 1:
		if(color == net_shared_PieceColor.White) {
			return "Белые";
		} else {
			return "Черные";
		}
		break;
	}
};
dict_Utils.guestName = function(guestID) {
	return "Guest " + guestID;
};
dict_Utils.playerRef = function(ref) {
	if(ref.charAt(0) == "_") {
		return dict_Utils.guestName(HxOverrides.substr(ref,1,null));
	} else {
		return ref;
	}
};
dict_Utils.opponentRef = function(whiteRef,blackRef) {
	if(LoginManager.isPlayer(whiteRef)) {
		return dict_Utils.playerRef(blackRef);
	} else {
		return dict_Utils.playerRef(whiteRef);
	}
};
dict_Utils.getTimeControlName = function(type) {
	if(type._hx_index == 5) {
		return dict_Dictionary.getPhrase(dict_Phrase.CORRESPONDENCE_TIME_CONTROL_NAME);
	} else {
		return $hxEnums[type.__enum__].__constructs__[type._hx_index]._hx_name;
	}
};
dict_Utils.getUserStatusText = function(status) {
	switch(status._hx_index) {
	case 0:
		var secondsSinceLastAction = status.secondsSinceLastAction;
		var activityStr = dict_Utils.getTimePassedString(secondsSinceLastAction);
		return dict_Dictionary.getPhrase(dict_Phrase.PROFILE_STATUS_TEXT(status),[activityStr]);
	case 1:case 2:
		return dict_Dictionary.getPhrase(dict_Phrase.PROFILE_STATUS_TEXT(status));
	}
};
dict_Utils.getTimePassedString = function(secsPassed) {
	return dict_utils_TimePhrases.getTimePassedString(secsPassed);
};
dict_Utils.getLiveGameScreenTitle = function(id,constructor) {
	switch(constructor._hx_index) {
	case 0:
		var _g = constructor.playerElos;
		var _g = constructor.timeControl;
		var _g = constructor.startingSituation;
		var _g = constructor.startDatetime;
		var whiteRef = constructor.whiteRef;
		var blackRef = constructor.blackRef;
		var opponent = dict_Utils.opponentRef(whiteRef,blackRef);
		return ["Playing vs " + opponent,"Игра против " + opponent];
	case 1:
		var _g = constructor.timeData;
		var _g = constructor.followedPlayerLogin;
		var parsedData = constructor.parsedData;
		if(!parsedData.isPlayerParticipant()) {
			var whiteStr = dict_Utils.playerRef(parsedData.whiteRef);
			var blackStr = dict_Utils.playerRef(parsedData.blackRef);
			return ["Spectating: " + whiteStr + " vs " + blackStr,"Наблюдение: " + whiteStr + " против " + blackStr];
		} else {
			var opponent = dict_Utils.opponentRef(parsedData.whiteRef,parsedData.blackRef);
			return ["Playing vs " + opponent,"Игра против " + opponent];
		}
		break;
	case 2:
		var _g = constructor.watchedPlyerLogin;
		var parsedData = constructor.parsedData;
		var whiteStr = dict_Utils.playerRef(parsedData.whiteRef);
		var blackStr = dict_Utils.playerRef(parsedData.blackRef);
		return ["Game " + id + ": " + whiteStr + " vs " + blackStr,"Игра " + id + ": " + whiteStr + " против " + blackStr];
	}
};
dict_Utils.getScreenTitle = function(type) {
	var translations = [null,null];
	switch(type._hx_index) {
	case 0:
		translations = ["Home","Главная"];
		break;
	case 1:
		var _g = type.initialVariantStr;
		var _g = type.selectedMainlineMove;
		var exploredStudyData = type.exploredStudyData;
		if(exploredStudyData != null) {
			var shortenedName = utils_StringUtils.shorten(exploredStudyData.info.name);
			translations = ["Study " + shortenedName + " (" + exploredStudyData.id + ") | Analysis Board","Студия " + shortenedName + " (" + exploredStudyData.id + ") | Доска анализа"];
		} else {
			translations = ["Analysis Board","Доска анализа"];
		}
		break;
	case 3:
		var gameID = type.gameID;
		var constructor = type.constructor;
		translations = dict_Utils.getLiveGameScreenTitle(gameID,constructor);
		break;
	case 4:
		var _g = type.data;
		var ownerLogin = type.ownerLogin;
		translations = ["" + ownerLogin + "'s profile","Профиль " + ownerLogin];
		break;
	case 5:
		var data = type.data;
		translations = ["Challenge by " + data.ownerLogin,"Вызов " + data.ownerLogin];
		break;
	default:
	}
	return dict_Dictionary.chooseTranslation(translations);
};
dict_Utils.getSpectatorGameOverDialogMessage = function(outcome,whiteRef,blackRef) {
	return dict_utils_OutcomePhrases.getSpectatorGameOverDialogMessage(outcome,dict_Utils.playerRef(whiteRef),dict_Utils.playerRef(blackRef));
};
dict_Utils.getPlayerGameOverDialogMessage = function(outcome,playerColor,newPersonalElo) {
	return dict_utils_OutcomePhrases.getPlayerGameOverDialogMessage(outcome,playerColor,newPersonalElo);
};
dict_Utils.getResolution = function(outcome) {
	return dict_utils_OutcomePhrases.getResolution(outcome);
};
dict_Utils.chatboxGameOverMessage = function(outcome) {
	return dict_utils_OutcomePhrases.chatboxGameOverMessage(outcome);
};
var dict_utils_OutcomePhrases = function() { };
$hxClasses["dict.utils.OutcomePhrases"] = dict_utils_OutcomePhrases;
dict_utils_OutcomePhrases.__name__ = "dict.utils.OutcomePhrases";
dict_utils_OutcomePhrases.getWinningGameOverDialogMessageTL = function(outcomeType) {
	switch(outcomeType._hx_index) {
	case 0:
		return ["Your opponent's Intellector has been captured. You won!","Интеллектор противника пал. Вы победили!"];
	case 1:
		return ["Your Intellector has reached the last rank. You won!","Ваш Интеллектор достиг последней горизонтали. Вы победили!"];
	case 2:
		return ["Your opponent has run out of time. You won!","У вашего противника закончилось время. Вы победили!"];
	case 3:
		return ["Your opponent has resigned. You won!","Ваш противник сдался. Вы победили!"];
	case 4:
		return ["Your opponent has abandoned the game. You won!","Ваш противник покинул партию. Вы победили!"];
	}
};
dict_utils_OutcomePhrases.getLosingGameOverDialogMessageTL = function(outcomeType) {
	switch(outcomeType._hx_index) {
	case 0:
		return ["Your Intellector has been captured. You lost.","Ваш Интеллектор пал. Вы проиграли."];
	case 1:
		return ["Your opponent's Intellector has reached the last rank. You lost.","Вражеский Интеллектор достиг последней горизонтали. Вы проиграли."];
	case 2:
		return ["You lost on time.","У вас закончилось время. Вы проиграли."];
	case 3:
		return ["You lost by resignation.","Вы сдались; в игре засчитано поражение"];
	case 4:
		return ["You lost (game abandoned).","Игра покинута. Вы проиграли."];
	}
};
dict_utils_OutcomePhrases.getDecisiveSpectatorGameOverDialogMessageTL = function(outcomeType,winner,loser) {
	switch(outcomeType._hx_index) {
	case 0:
		return ["" + loser + "'s Intellector has been captured. " + winner + " won.","Интеллектор игрока " + loser + " повержен. Победитель: " + winner + "."];
	case 1:
		return ["" + winner + "'s Intellector has reached the last rank. " + winner + " won.","Интеллектор игрока " + winner + " достиг последней горизонтали. Победитель: " + winner + "."];
	case 2:
		return ["" + loser + " has lost on time. " + winner + " won.","Игрок " + loser + " просрочил время. Победитель: " + winner + "."];
	case 3:
		return ["" + loser + " has resigned. " + winner + " won.","Игрок " + loser + " сдался. Победитель: " + winner + "."];
	case 4:
		return ["" + loser + " has left the game. " + winner + " won.","Игрок " + loser + " покинул партию. Победитель: " + winner + "."];
	}
};
dict_utils_OutcomePhrases.getDrawishGameOverDialogMessageTL = function(outcomeType) {
	switch(outcomeType._hx_index) {
	case 0:
		return ["Game has ended up in a draw. Reason: mutual agreement.","Игра завершена вничью. Причина: взаимное согласие"];
	case 1:
		return ["Game has ended up in a draw. Reason: threefold repetition.","Игра завершена вничью. Причина: троекратное повторение"];
	case 2:
		return ["Game has ended up in a draw. Reason: sixty-move rule.","Игра завершена вничью. Причина: правило 60 ходов"];
	case 3:
		return ["Game aborted.","Игра прервана."];
	}
};
dict_utils_OutcomePhrases.getSpectatorGameOverDialogMessage = function(outcome,whitePlayer,blackPlayer) {
	var translations;
	switch(outcome._hx_index) {
	case 0:
		var type = outcome.type;
		var winnerColor = outcome.winnerColor;
		var winner = winnerColor == net_shared_PieceColor.White ? whitePlayer : blackPlayer;
		var loser = winnerColor == net_shared_PieceColor.Black ? whitePlayer : blackPlayer;
		translations = dict_utils_OutcomePhrases.getDecisiveSpectatorGameOverDialogMessageTL(type,winner,loser);
		break;
	case 1:
		var type = outcome.type;
		translations = dict_utils_OutcomePhrases.getDrawishGameOverDialogMessageTL(type);
		break;
	}
	return dict_Dictionary.chooseTranslation(translations);
};
dict_utils_OutcomePhrases.getPlayerGameOverDialogMessage = function(outcome,playerColor,newPersonalElo) {
	var personalOutcome = net_shared_Outcome_toPersonal(outcome,playerColor);
	var translations;
	switch(personalOutcome._hx_index) {
	case 0:
		var type = personalOutcome.type;
		translations = dict_utils_OutcomePhrases.getWinningGameOverDialogMessageTL(type);
		break;
	case 1:
		var type = personalOutcome.type;
		translations = dict_utils_OutcomePhrases.getLosingGameOverDialogMessageTL(type);
		break;
	case 2:
		var type = personalOutcome.type;
		translations = dict_utils_OutcomePhrases.getDrawishGameOverDialogMessageTL(type);
		break;
	}
	if(newPersonalElo != null) {
		var eloStr;
		switch(newPersonalElo._hx_index) {
		case 0:
			eloStr = "−";
			break;
		case 1:
			var elo = newPersonalElo.elo;
			eloStr = "" + elo + "?";
			break;
		case 2:
			var elo = newPersonalElo.elo;
			eloStr = "" + elo;
			break;
		}
		translations[0] += " Your new rating: " + eloStr;
		translations[1] += " Ваш новый рейтинг: " + eloStr;
	}
	return dict_Dictionary.chooseTranslation(translations);
};
dict_utils_OutcomePhrases.getDecisiveResolution = function(outcomeType,winnerColor) {
	var winnerStr = dict_Utils.getColorName(winnerColor);
	var loserStr = dict_Utils.getColorName(winnerColor == net_shared_PieceColor.White ? net_shared_PieceColor.Black : net_shared_PieceColor.White);
	var dot = "•";
	var halfBakedTranslations;
	switch(outcomeType._hx_index) {
	case 0:
		halfBakedTranslations = ["Fatum " + dot + " " + winnerStr + " is victorious","Фатум " + dot + " " + winnerStr + " победили"];
		break;
	case 1:
		halfBakedTranslations = ["Breakthrough " + dot + " " + winnerStr + " is victorious","Прорыв " + dot + " " + winnerStr + " победили"];
		break;
	case 2:
		halfBakedTranslations = ["" + loserStr + " lost on time " + dot + " " + winnerStr + " is victorious","" + loserStr + " просрочили время " + dot + " " + winnerStr + " победили"];
		break;
	case 3:
		halfBakedTranslations = ["" + loserStr + " resigned " + dot + " " + winnerStr + " is victorious","" + loserStr + " сдались " + dot + " " + winnerStr + " победили"];
		break;
	case 4:
		halfBakedTranslations = ["" + loserStr + " left the game " + dot + " " + winnerStr + " is victorious","" + loserStr + " покинули игру " + dot + " " + winnerStr + " победили"];
		break;
	}
	return dict_Dictionary.chooseTranslation(halfBakedTranslations);
};
dict_utils_OutcomePhrases.getDrawishResolution = function(outcomeType) {
	var translations;
	switch(outcomeType._hx_index) {
	case 0:
		translations = ["Draw by agreement","Ничья по согласию"];
		break;
	case 1:
		translations = ["Draw by repetition","Ничья по троекратному повторению"];
		break;
	case 2:
		translations = ["Draw by sixty-move rule","Ничья по правилу 60 ходов"];
		break;
	case 3:
		translations = ["Game aborted","Игра прервана"];
		break;
	}
	return dict_Dictionary.chooseTranslation(translations);
};
dict_utils_OutcomePhrases.getResolution = function(outcome) {
	if(outcome == null) {
		return dict_Dictionary.chooseTranslation(["Game is in progress","Идет игра"]);
	} else {
		switch(outcome._hx_index) {
		case 0:
			var type = outcome.type;
			var winnerColor = outcome.winnerColor;
			return dict_utils_OutcomePhrases.getDecisiveResolution(type,winnerColor);
		case 1:
			var type = outcome.type;
			return dict_utils_OutcomePhrases.getDrawishResolution(type);
		}
	}
};
dict_utils_OutcomePhrases.getDecisiveChatboxGameOverMessageTL = function(outcomeType,winnerColor) {
	var winnerStr = dict_Utils.getColorName(winnerColor);
	var loserStr = dict_Utils.getColorName(winnerColor == net_shared_PieceColor.White ? net_shared_PieceColor.Black : net_shared_PieceColor.White);
	switch(outcomeType._hx_index) {
	case 0:
		return ["" + winnerStr + " won","" + winnerStr + " победили"];
	case 1:
		return ["" + winnerStr + " won","" + winnerStr + " победили"];
	case 2:
		return ["" + loserStr + " lost on time","" + loserStr + " просрочили время"];
	case 3:
		return ["" + loserStr + " resigned","" + loserStr + " сдались"];
	case 4:
		return ["" + loserStr + " left the game","" + loserStr + " покинули игру"];
	}
};
dict_utils_OutcomePhrases.getDrawishChatboxGameOverMessageTL = function(outcomeType) {
	switch(outcomeType._hx_index) {
	case 0:
		return ["Game ended with a draw (mutual agreement)","Игра окончена вничью (по договоренности)"];
	case 1:
		return ["Game ended with a draw (threefold repetition)","Игра окончена вничью (по троекратному повторению)"];
	case 2:
		return ["Game ended with a draw (sixty-move rule)","Игра окончена вничью (по правилу 60 ходов)"];
	case 3:
		return ["Game aborted","Игра прервана"];
	}
};
dict_utils_OutcomePhrases.chatboxGameOverMessage = function(outcome) {
	var translations;
	switch(outcome._hx_index) {
	case 0:
		var type = outcome.type;
		var winnerColor = outcome.winnerColor;
		translations = dict_utils_OutcomePhrases.getDecisiveChatboxGameOverMessageTL(type,winnerColor);
		break;
	case 1:
		var type = outcome.type;
		translations = dict_utils_OutcomePhrases.getDrawishChatboxGameOverMessageTL(type);
		break;
	}
	return dict_Dictionary.chooseTranslation(translations);
};
var dict_utils__$TimePhrases_SimpleTimeInterval = $hxEnums["dict.utils._TimePhrases.SimpleTimeInterval"] = { __ename__:"dict.utils._TimePhrases.SimpleTimeInterval",__constructs__:null
	,LessThanASecond: {_hx_name:"LessThanASecond",_hx_index:0,__enum__:"dict.utils._TimePhrases.SimpleTimeInterval",toString:$estr}
	,Seconds: ($_=function(cnt) { return {_hx_index:1,cnt:cnt,__enum__:"dict.utils._TimePhrases.SimpleTimeInterval",toString:$estr}; },$_._hx_name="Seconds",$_.__params__ = ["cnt"],$_)
	,Minutes: ($_=function(cnt) { return {_hx_index:2,cnt:cnt,__enum__:"dict.utils._TimePhrases.SimpleTimeInterval",toString:$estr}; },$_._hx_name="Minutes",$_.__params__ = ["cnt"],$_)
	,Hours: ($_=function(cnt) { return {_hx_index:3,cnt:cnt,__enum__:"dict.utils._TimePhrases.SimpleTimeInterval",toString:$estr}; },$_._hx_name="Hours",$_.__params__ = ["cnt"],$_)
	,Days: ($_=function(cnt) { return {_hx_index:4,cnt:cnt,__enum__:"dict.utils._TimePhrases.SimpleTimeInterval",toString:$estr}; },$_._hx_name="Days",$_.__params__ = ["cnt"],$_)
	,Years: ($_=function(cnt) { return {_hx_index:5,cnt:cnt,__enum__:"dict.utils._TimePhrases.SimpleTimeInterval",toString:$estr}; },$_._hx_name="Years",$_.__params__ = ["cnt"],$_)
};
dict_utils__$TimePhrases_SimpleTimeInterval.__constructs__ = [dict_utils__$TimePhrases_SimpleTimeInterval.LessThanASecond,dict_utils__$TimePhrases_SimpleTimeInterval.Seconds,dict_utils__$TimePhrases_SimpleTimeInterval.Minutes,dict_utils__$TimePhrases_SimpleTimeInterval.Hours,dict_utils__$TimePhrases_SimpleTimeInterval.Days,dict_utils__$TimePhrases_SimpleTimeInterval.Years];
dict_utils__$TimePhrases_SimpleTimeInterval.__empty_constructs__ = [dict_utils__$TimePhrases_SimpleTimeInterval.LessThanASecond];
var dict_utils_TimePhrases = function() { };
$hxClasses["dict.utils.TimePhrases"] = dict_utils_TimePhrases;
dict_utils_TimePhrases.__name__ = "dict.utils.TimePhrases";
dict_utils_TimePhrases.getTimePassedString = function(secsPassed) {
	var interval = dict_utils_TimePhrases.secsToInterval(secsPassed);
	switch(Preferences.language.get()._hx_index) {
	case 0:
		return dict_utils_TimePhrases.getTimePassedEnglish(interval);
	case 1:
		return dict_utils_TimePhrases.getTimePassedRussian(interval);
	}
};
dict_utils_TimePhrases.secsToInterval = function(secs) {
	if(secs < 1) {
		return dict_utils__$TimePhrases_SimpleTimeInterval.LessThanASecond;
	}
	var seconds = Math.floor(secs);
	if(seconds < 60) {
		return dict_utils__$TimePhrases_SimpleTimeInterval.Seconds(seconds);
	}
	var mins = Math.floor(seconds / 60);
	if(mins < 60) {
		return dict_utils__$TimePhrases_SimpleTimeInterval.Minutes(mins);
	}
	var hours = Math.floor(mins / 60);
	if(hours < 24) {
		return dict_utils__$TimePhrases_SimpleTimeInterval.Hours(hours);
	}
	var days = Math.floor(hours / 24);
	if(days < 365) {
		return dict_utils__$TimePhrases_SimpleTimeInterval.Days(days);
	}
	var years = Math.floor(days / 365);
	return dict_utils__$TimePhrases_SimpleTimeInterval.Years(years);
};
dict_utils_TimePhrases.getTimePassedEnglish = function(interval) {
	switch(interval._hx_index) {
	case 0:
		return "Just now";
	case 1:
		var _g = interval.cnt;
		if(_g == 1) {
			return "A second ago";
		} else {
			var cnt = _g;
			return "" + cnt + " seconds ago";
		}
		break;
	case 2:
		var _g = interval.cnt;
		if(_g == 1) {
			return "A minute ago";
		} else {
			var cnt = _g;
			return "" + cnt + " minutes ago";
		}
		break;
	case 3:
		var _g = interval.cnt;
		if(_g == 1) {
			return "An hour ago";
		} else {
			var cnt = _g;
			return "" + cnt + " hours ago";
		}
		break;
	case 4:
		var _g = interval.cnt;
		if(_g == 1) {
			return "Yesterday";
		} else {
			var cnt = _g;
			return "" + cnt + " days ago";
		}
		break;
	case 5:
		var _g = interval.cnt;
		if(_g == 1) {
			return "A year ago";
		} else {
			var cnt = _g;
			return "" + cnt + " years ago";
		}
		break;
	}
};
dict_utils_TimePhrases.getTimePassedRussian = function(interval) {
	switch(interval._hx_index) {
	case 0:
		return "Только что";
	case 1:
		var _g = interval.cnt;
		if(_g == 1) {
			return "Секунду назад";
		} else {
			var cnt = _g;
			if(cnt % 100 >= 11 && cnt % 100 <= 14) {
				return "" + cnt + " секунд назад";
			} else {
				var cnt = _g;
				if(cnt % 10 == 1) {
					return "" + cnt + " секунду назад";
				} else {
					var cnt = _g;
					if(cnt % 10 >= 2 && cnt % 10 <= 4) {
						return "" + cnt + " секунды назад";
					} else {
						var cnt = _g;
						return "" + cnt + " секунд назад";
					}
				}
			}
		}
		break;
	case 2:
		var _g = interval.cnt;
		if(_g == 1) {
			return "Минуту назад";
		} else {
			var cnt = _g;
			if(cnt % 100 >= 11 && cnt % 100 <= 14) {
				return "" + cnt + " минут назад";
			} else {
				var cnt = _g;
				if(cnt % 10 == 1) {
					return "" + cnt + " минуту назад";
				} else {
					var cnt = _g;
					if(cnt % 10 >= 2 && cnt % 10 <= 4) {
						return "" + cnt + " минуты назад";
					} else {
						var cnt = _g;
						return "" + cnt + " минут назад";
					}
				}
			}
		}
		break;
	case 3:
		var _g = interval.cnt;
		if(_g == 1) {
			return "Час назад";
		} else {
			var cnt = _g;
			if(cnt % 100 >= 11 && cnt % 100 <= 14) {
				return "" + cnt + " часов назад";
			} else {
				var cnt = _g;
				if(cnt % 10 == 1) {
					return "" + cnt + " час назад";
				} else {
					var cnt = _g;
					if(cnt % 10 >= 2 && cnt % 10 <= 4) {
						return "" + cnt + " часа назад";
					} else {
						var cnt = _g;
						return "" + cnt + " часов назад";
					}
				}
			}
		}
		break;
	case 4:
		var _g = interval.cnt;
		if(_g == 1) {
			return "Вчера";
		} else {
			var cnt = _g;
			if(cnt % 100 >= 11 && cnt % 100 <= 14) {
				return "" + cnt + " дней назад";
			} else {
				var cnt = _g;
				if(cnt % 10 == 1) {
					return "" + cnt + " день назад";
				} else {
					var cnt = _g;
					if(cnt % 10 >= 2 && cnt % 10 <= 4) {
						return "" + cnt + " дня назад";
					} else {
						var cnt = _g;
						return "" + cnt + " дней назад";
					}
				}
			}
		}
		break;
	case 5:
		var _g = interval.cnt;
		if(_g == 1) {
			return "Год назад";
		} else {
			var cnt = _g;
			if(cnt % 100 >= 11 && cnt % 100 <= 14) {
				return "" + cnt + " лет назад";
			} else {
				var cnt = _g;
				if(cnt % 10 == 1) {
					return "" + cnt + " год назад";
				} else {
					var cnt = _g;
					if(cnt % 10 >= 2 && cnt % 10 <= 4) {
						return "" + cnt + " года назад";
					} else {
						var cnt = _g;
						return "" + cnt + " лет назад";
					}
				}
			}
		}
		break;
	}
};
var ds_Cloneable = function() { };
$hxClasses["ds.Cloneable"] = ds_Cloneable;
ds_Cloneable.__name__ = "ds.Cloneable";
ds_Cloneable.__isInterface__ = true;
ds_Cloneable.prototype = {
	clone: null
	,__class__: ds_Cloneable
};
var ds_Hashable = function() { };
$hxClasses["ds.Hashable"] = ds_Hashable;
ds_Hashable.__name__ = "ds.Hashable";
ds_Hashable.__isInterface__ = true;
ds_Hashable.prototype = {
	key: null
	,__class__: ds_Hashable
};
var ds_Collection = function() { };
$hxClasses["ds.Collection"] = ds_Collection;
ds_Collection.__name__ = "ds.Collection";
ds_Collection.__isInterface__ = true;
ds_Collection.__interfaces__ = [ds_Hashable];
ds_Collection.prototype = {
	get_size: null
	,free: null
	,contains: null
	,remove: null
	,clear: null
	,iterator: null
	,isEmpty: null
	,toArray: null
	,clone: null
	,__class__: ds_Collection
	,__properties__: {get_size:"get_size"}
};
var ds_HashKey = function() { };
$hxClasses["ds.HashKey"] = ds_HashKey;
ds_HashKey.__name__ = "ds.HashKey";
ds_HashKey.next = function() {
	if(ds_HashKey._counter == null) {
		ds_HashKey._counter = 0;
	}
	return ds_HashKey._counter++;
};
var ds_Set = function() { };
$hxClasses["ds.Set"] = ds_Set;
ds_Set.__name__ = "ds.Set";
ds_Set.__isInterface__ = true;
ds_Set.__interfaces__ = [ds_Collection];
ds_Set.prototype = {
	has: null
	,set: null
	,unset: null
	,__class__: ds_Set
};
var ds_IntHashSet = function(slotCount,initialCapacity) {
	if(initialCapacity == null) {
		initialCapacity = -1;
	}
	this.mSize = 0;
	this.mFree = 0;
	this.reuseIterator = false;
	this.growthRate = -3;
	this.key = ds_HashKey.next();
	if(initialCapacity == -1) {
		initialCapacity = slotCount;
	}
	if(2 > initialCapacity) {
		initialCapacity = 2;
	}
	this.mMinCapacity = this.capacity = initialCapacity;
	this.slotCount = slotCount;
	this.mMask = slotCount - 1;
	this.mHash = ds_tools_NativeArrayTools.init(new Array(slotCount),-1);
	this.mData = new Array(this.capacity << 1);
	this.mNext = new Array(this.capacity);
	var j = 1;
	var t = this.mData;
	var _g = 0;
	var _g1 = this.capacity;
	while(_g < _g1) {
		var i = _g++;
		t[j - 1] = -2147483648;
		t[j] = -1;
		j += 2;
	}
	t = this.mNext;
	var _g = 0;
	var _g1 = this.capacity - 1;
	while(_g < _g1) {
		var i = _g++;
		t[i] = i + 1;
	}
	t[this.capacity - 1] = -1;
};
$hxClasses["ds.IntHashSet"] = ds_IntHashSet;
ds_IntHashSet.__name__ = "ds.IntHashSet";
ds_IntHashSet.__interfaces__ = [ds_Set];
ds_IntHashSet.prototype = {
	key: null
	,capacity: null
	,growthRate: null
	,reuseIterator: null
	,get_loadFactor: function() {
		return this.mSize / this.slotCount;
	}
	,slotCount: null
	,mHash: null
	,mData: null
	,mNext: null
	,mMask: null
	,mFree: null
	,mSize: null
	,mMinCapacity: null
	,mIterator: null
	,getCollisionCount: function() {
		var c = 0;
		var j;
		var d = this.mData;
		var h = this.mHash;
		var _g = 0;
		var _g1 = this.slotCount;
		while(_g < _g1) {
			var i = _g++;
			j = h[i];
			if(j == -1) {
				continue;
			}
			j = d[j + 1];
			while(j != -1) {
				j = d[j + 1];
				++c;
			}
		}
		return c;
	}
	,hasFront: function(val) {
		var h = this.mHash;
		var b = val * 73856093 & this.mMask;
		var i = h[b];
		if(i == -1) {
			return false;
		} else {
			var d = this.mData;
			if(d[i] == val) {
				return true;
			} else {
				var exists = false;
				var first = i;
				var i0 = first;
				i = d[i + 1];
				while(i != -1) {
					if(d[i] == val) {
						d[i0 + 1] = d[i + 1];
						d[i + 1] = first;
						d[b] = i;
						exists = true;
						break;
					}
					i0 = i;
					i = d[i0 + 1];
				}
				return exists;
			}
		}
	}
	,rehash: function(slotCount) {
		if(this.slotCount == slotCount) {
			return this;
		}
		var t = new ds_IntHashSet(slotCount,this.capacity);
		var d = this.mData;
		var _g = 0;
		var _g1 = this.capacity;
		while(_g < _g1) {
			var i = _g++;
			var v = d[i << 1];
			if(v != -2147483648) {
				var b = v * 73856093 & t.mMask;
				var d1 = t.mData;
				var j = t.mHash[b];
				if(j == -1) {
					if(t.mSize == t.capacity) {
						t.grow();
						d1 = t.mData;
					}
					j = t.mFree << 1;
					t.mFree = t.mNext[t.mFree];
					t.mHash[b] = j;
					d1[j] = v;
					t.mSize++;
				} else if(d1[j] != v) {
					var p = d1[j + 1];
					while(p != -1) {
						if(d1[p] == v) {
							j = -1;
							break;
						}
						j = p;
						p = d1[p + 1];
					}
					if(j != -1) {
						if(t.mSize == t.capacity) {
							t.grow();
							d1 = t.mData;
						}
						p = t.mFree << 1;
						t.mFree = t.mNext[t.mFree];
						d1[p] = v;
						d1[j + 1] = p;
						t.mSize++;
					}
				}
			}
		}
		this.mHash = t.mHash;
		this.mData = t.mData;
		this.mNext = t.mNext;
		this.slotCount = slotCount;
		this.mMask = t.mMask;
		this.mFree = t.mFree;
		return this;
	}
	,pack: function() {
		if(this.capacity == this.mMinCapacity) {
			return this;
		}
		var x = this.mSize;
		var y = this.mMinCapacity;
		this.capacity = x > y ? x : y;
		var src = this.mData;
		var e = 0;
		var t = this.mHash;
		var j;
		var dst = new Array(this.capacity << 1);
		var _g = 0;
		var _g1 = this.slotCount;
		while(_g < _g1) {
			var i = _g++;
			j = t[i];
			if(j == -1) {
				continue;
			}
			t[i] = e;
			dst[e++] = src[j];
			dst[e++] = -1;
			j = src[j + 1];
			while(j != -1) {
				dst[e - 1] = e;
				dst[e++] = src[j];
				dst[e++] = -1;
				j = src[j + 1];
			}
		}
		this.mData = dst;
		this.mNext = new Array(this.capacity);
		var n = this.mNext;
		var _g = 0;
		var _g1 = this.capacity - 1;
		while(_g < _g1) {
			var i = _g++;
			n[i] = i + 1;
		}
		n[this.capacity - 1] = -1;
		this.mFree = -1;
		return this;
	}
	,iter: function(f) {
		var d = this.mData;
		var j;
		var v;
		var _g = 0;
		var _g1 = this.capacity;
		while(_g < _g1) {
			var i = _g++;
			j = i << 1;
			v = d[j];
			if(v != -2147483648) {
				f(d[j]);
			}
		}
		return this;
	}
	,toString: function() {
		var b_b = "";
		b_b += Std.string(ds_Printf.format("[ IntHashSet size=" + this.mSize + " capacity=" + this.capacity + " load=%.2f",[this.get_loadFactor()]));
		if(this.mSize == 0) {
			b_b += " ]";
			return b_b;
		}
		b_b += "\n";
		var x = this.iterator();
		while(x.hasNext()) {
			var x1 = x.next();
			b_b += Std.string("  " + x1 + "\n");
		}
		b_b += "]";
		return b_b;
	}
	,hashCode: function(x) {
		return x * 73856093 & this.mMask;
	}
	,grow: function() {
		var oldCapacity = this.capacity;
		this.capacity = ds_tools_GrowthRate.compute(this.growthRate,this.capacity);
		var t = new Array(this.capacity);
		ds_tools_NativeArrayTools.blit(this.mNext,0,t,0,oldCapacity);
		this.mNext = t;
		t = new Array(this.capacity << 1);
		ds_tools_NativeArrayTools.blit(this.mData,0,t,0,oldCapacity << 1);
		this.mData = t;
		t = this.mNext;
		var _g = oldCapacity - 1;
		var _g1 = this.capacity - 1;
		while(_g < _g1) {
			var i = _g++;
			t[i] = i + 1;
		}
		t[this.capacity - 1] = -1;
		this.mFree = oldCapacity;
		var j = oldCapacity << 1;
		t = this.mData;
		var _g = 0;
		var _g1 = this.capacity - oldCapacity;
		while(_g < _g1) {
			var i = _g++;
			t[j] = -2147483648;
			t[j + 1] = -1;
			j += 2;
		}
	}
	,has: function(val) {
		var i = this.mHash[val * 73856093 & this.mMask];
		if(i == -1) {
			return false;
		} else {
			var d = this.mData;
			if(d[i] == val) {
				return true;
			} else {
				var exists = false;
				i = d[i + 1];
				while(i != -1) {
					if(d[i] == val) {
						exists = true;
						break;
					}
					i = d[i + 1];
				}
				return exists;
			}
		}
	}
	,set: function(val) {
		var b = val * 73856093 & this.mMask;
		var d = this.mData;
		var j = this.mHash[b];
		if(j == -1) {
			if(this.mSize == this.capacity) {
				this.grow();
				d = this.mData;
			}
			j = this.mFree << 1;
			this.mFree = this.mNext[this.mFree];
			this.mHash[b] = j;
			d[j] = val;
			this.mSize++;
			return true;
		} else if(d[j] == val) {
			return false;
		} else {
			var p = d[j + 1];
			while(p != -1) {
				if(d[p] == val) {
					j = -1;
					break;
				}
				j = p;
				p = d[p + 1];
			}
			if(j == -1) {
				return false;
			} else {
				if(this.mSize == this.capacity) {
					this.grow();
					d = this.mData;
				}
				p = this.mFree << 1;
				this.mFree = this.mNext[this.mFree];
				d[p] = val;
				d[j + 1] = p;
				this.mSize++;
				return true;
			}
		}
	}
	,unset: function(val) {
		var b = val * 73856093 & this.mMask;
		var i = this.mHash[b];
		if(i == -1) {
			return false;
		} else {
			var d = this.mData;
			if(val == d[i]) {
				if(d[i + 1] == -1) {
					this.mHash[b] = -1;
				} else {
					this.mHash[b] = d[i + 1];
				}
				var j = i >> 1;
				this.mNext[j] = this.mFree;
				this.mFree = j;
				d[i] = -2147483648;
				d[i + 1] = -1;
				this.mSize--;
				return true;
			} else {
				var exists = false;
				var i0 = i;
				i = d[i + 1];
				while(i != -1) {
					if(d[i] == val) {
						exists = true;
						break;
					}
					i0 = i;
					i = d[i0 + 1];
				}
				if(exists) {
					d[i0 + 1] = d[i + 1];
					var j = i >> 1;
					this.mNext[j] = this.mFree;
					this.mFree = j;
					d[i] = -2147483648;
					d[i + 1] = -1;
					--this.mSize;
					return true;
				} else {
					return false;
				}
			}
		}
	}
	,get_size: function() {
		return this.mSize;
	}
	,free: function() {
		this.mHash = null;
		this.mData = null;
		this.mNext = null;
		if(this.mIterator != null) {
			this.mIterator.free();
			this.mIterator = null;
		}
	}
	,contains: function(val) {
		var i = this.mHash[val * 73856093 & this.mMask];
		if(i == -1) {
			return false;
		} else {
			var d = this.mData;
			if(d[i] == val) {
				return true;
			} else {
				var exists = false;
				i = d[i + 1];
				while(i != -1) {
					if(d[i] == val) {
						exists = true;
						break;
					}
					i = d[i + 1];
				}
				return exists;
			}
		}
	}
	,remove: function(val) {
		var b = val * 73856093 & this.mMask;
		var i = this.mHash[b];
		if(i == -1) {
			return false;
		} else {
			var d = this.mData;
			if(val == d[i]) {
				if(d[i + 1] == -1) {
					this.mHash[b] = -1;
				} else {
					this.mHash[b] = d[i + 1];
				}
				var j = i >> 1;
				this.mNext[j] = this.mFree;
				this.mFree = j;
				d[i] = -2147483648;
				d[i + 1] = -1;
				this.mSize--;
				return true;
			} else {
				var exists = false;
				var i0 = i;
				i = d[i + 1];
				while(i != -1) {
					if(d[i] == val) {
						exists = true;
						break;
					}
					i0 = i;
					i = d[i0 + 1];
				}
				if(exists) {
					d[i0 + 1] = d[i + 1];
					var j = i >> 1;
					this.mNext[j] = this.mFree;
					this.mFree = j;
					d[i] = -2147483648;
					d[i + 1] = -1;
					--this.mSize;
					return true;
				} else {
					return false;
				}
			}
		}
	}
	,clear: function(gc) {
		if(gc == null) {
			gc = false;
		}
		var h = this.mHash;
		var _g = 0;
		var _g1 = this.slotCount;
		while(_g < _g1) {
			var i = _g++;
			h[i] = -1;
		}
		var j = 1;
		var t = this.mData;
		var _g = 0;
		var _g1 = this.capacity;
		while(_g < _g1) {
			var i = _g++;
			t[j - 1] = -2147483648;
			t[j] = -1;
			j += 2;
		}
		t = this.mNext;
		var _g = 0;
		var _g1 = this.capacity - 1;
		while(_g < _g1) {
			var i = _g++;
			t[i] = i + 1;
		}
		t[this.capacity - 1] = -1;
		this.mFree = 0;
		this.mSize = 0;
	}
	,iterator: function() {
		if(this.reuseIterator) {
			if(this.mIterator == null) {
				this.mIterator = new ds_IntHashSetIterator(this);
			} else {
				this.mIterator.reset();
			}
			return this.mIterator;
		} else {
			return new ds_IntHashSetIterator(this);
		}
	}
	,isEmpty: function() {
		return this.mSize == 0;
	}
	,toArray: function() {
		if(this.mSize == 0) {
			return [];
		}
		var a = new Array(this.mSize);
		var out = a;
		var j = 0;
		var v;
		var d = this.mData;
		var _g = 0;
		var _g1 = this.capacity;
		while(_g < _g1) {
			var i = _g++;
			v = d[i << 1];
			if(v != -2147483648) {
				out[j++] = v;
			}
		}
		return out;
	}
	,clone: function(byRef,copier) {
		if(byRef == null) {
			byRef = true;
		}
		var c = new ds_IntHashSet(this.slotCount,this.mSize);
		ds_tools_NativeArrayTools.blit(this.mHash,0,c.mHash,0,this.slotCount);
		ds_tools_NativeArrayTools.blit(this.mData,0,c.mData,0,this.mSize << 1);
		ds_tools_NativeArrayTools.blit(this.mNext,0,c.mNext,0,this.mSize);
		c.mMask = this.mMask;
		c.slotCount = this.slotCount;
		c.capacity = this.capacity;
		c.mFree = this.mFree;
		c.mSize = this.mSize;
		return c;
	}
	,__class__: ds_IntHashSet
	,__properties__: {get_size:"get_size",get_loadFactor:"get_loadFactor"}
};
var ds_Itr = function() { };
$hxClasses["ds.Itr"] = ds_Itr;
ds_Itr.__name__ = "ds.Itr";
ds_Itr.__isInterface__ = true;
ds_Itr.prototype = {
	hasNext: null
	,next: null
	,remove: null
	,reset: null
	,__class__: ds_Itr
};
var ds_IntHashSetIterator = function(x) {
	this.mObject = x;
	this.mData = x.mData;
	this.mI = 0;
	this.mS = x.capacity;
	this.scan();
};
$hxClasses["ds.IntHashSetIterator"] = ds_IntHashSetIterator;
ds_IntHashSetIterator.__name__ = "ds.IntHashSetIterator";
ds_IntHashSetIterator.__interfaces__ = [ds_Itr];
ds_IntHashSetIterator.prototype = {
	mObject: null
	,mI: null
	,mS: null
	,mData: null
	,free: function() {
		this.mObject = null;
		this.mData = null;
	}
	,reset: function() {
		this.mData = this.mObject.mData;
		this.mI = 0;
		this.mS = this.mObject.capacity;
		this.scan();
		return this;
	}
	,hasNext: function() {
		return this.mI < this.mS;
	}
	,next: function() {
		var x = this.mData[this.mI++ << 1];
		this.scan();
		return x;
	}
	,remove: function() {
		throw haxe_Exception.thrown("unsupported operation");
	}
	,scan: function() {
		while(this.mI < this.mS && this.mData[this.mI << 1] == -2147483648) this.mI++;
	}
	,__class__: ds_IntHashSetIterator
};
var ds_ListSet = function(initialCapacity,source) {
	if(initialCapacity == null) {
		initialCapacity = 16;
	}
	this.mIterator = null;
	this.mSize = 0;
	this.reuseIterator = false;
	this.growthRate = -2;
	this.key = ds_HashKey.next();
	this.mInitialCapacity = 1 > initialCapacity ? 1 : initialCapacity;
	this.capacity = this.mInitialCapacity;
	if(source != null) {
		this.capacity = source.length;
	}
	this.mData = new Array(this.capacity);
	if(source != null) {
		var _g = 0;
		while(_g < source.length) {
			var i = source[_g];
			++_g;
			this.set(i);
		}
	}
};
$hxClasses["ds.ListSet"] = ds_ListSet;
ds_ListSet.__name__ = "ds.ListSet";
ds_ListSet.__interfaces__ = [ds_Set];
ds_ListSet.prototype = {
	key: null
	,capacity: null
	,growthRate: null
	,reuseIterator: null
	,mData: null
	,mInitialCapacity: null
	,mSize: null
	,mIterator: null
	,reserve: function(n) {
		if(n > this.capacity) {
			this.capacity = n;
			this.resizeContainer(n);
		}
		return this;
	}
	,pack: function() {
		if(this.capacity > this.mInitialCapacity) {
			var x = this.mInitialCapacity;
			var y = this.mSize;
			this.capacity = x > y ? x : y;
			this.resizeContainer(this.capacity);
		} else {
			var d = this.mData;
			var _g = this.mSize;
			var _g1 = this.capacity;
			while(_g < _g1) {
				var i = _g++;
				d[i] = null;
			}
		}
		return this;
	}
	,iter: function(f) {
		var d = this.mData;
		var _g = 0;
		var _g1 = this.mSize;
		while(_g < _g1) {
			var i = _g++;
			f(d[i]);
		}
		return this;
	}
	,toString: function() {
		var b_b = "";
		b_b += Std.string("[ ListSet size=" + this.mSize);
		if(this.isEmpty()) {
			b_b += " ]";
			return b_b;
		}
		b_b += "\n";
		var _g = 0;
		var _g1 = this.mSize;
		while(_g < _g1) {
			var i = _g++;
			b_b += "  ";
			b_b += Std.string(Std.string(this.mData[i]));
			b_b += "\n";
		}
		b_b += "]";
		return b_b;
	}
	,has: function(val) {
		if(this.isEmpty()) {
			return false;
		}
		var d = this.mData;
		var _g = 0;
		var _g1 = this.mSize;
		while(_g < _g1) {
			var i = _g++;
			if(d[i] == val) {
				return true;
			}
		}
		return false;
	}
	,set: function(val) {
		var d = this.mData;
		var _g = 0;
		var _g1 = this.mSize;
		while(_g < _g1) {
			var i = _g++;
			if(d[i] == val) {
				return false;
			}
		}
		if(this.mSize == this.capacity) {
			this.grow();
			d = this.mData;
		}
		d[this.mSize++] = val;
		return true;
	}
	,unset: function(val) {
		return this.remove(val);
	}
	,merge: function(set,assign,copier) {
		if(assign) {
			var val = set.iterator();
			while(val.hasNext()) {
				var val1 = val.next();
				this.set(val1);
			}
		} else if(copier != null) {
			var val = set.iterator();
			while(val.hasNext()) {
				var val1 = val.next();
				this.set(copier(val1));
			}
		} else {
			var val = set.iterator();
			while(val.hasNext()) {
				var val1 = val.next();
				this.set((js_Boot.__cast(val1 , ds_Cloneable)).clone());
			}
		}
	}
	,get_size: function() {
		return this.mSize;
	}
	,free: function() {
		ds_tools_NativeArrayTools.nullify(this.mData);
		this.mData = null;
		if(this.mIterator != null) {
			this.mIterator.free();
			this.mIterator = null;
		}
	}
	,contains: function(val) {
		return this.has(val);
	}
	,remove: function(val) {
		var d = this.mData;
		var _g = 0;
		var _g1 = this.mSize;
		while(_g < _g1) {
			var i = _g++;
			if(d[i] == val) {
				d[i] = this.mData[--this.mSize];
				return true;
			}
		}
		return false;
	}
	,clear: function(gc) {
		if(gc == null) {
			gc = false;
		}
		if(gc) {
			ds_tools_NativeArrayTools.nullify(this.mData);
		}
		this.mSize = 0;
	}
	,iterator: function() {
		if(this.reuseIterator) {
			if(this.mIterator == null) {
				this.mIterator = new ds_ListSetIterator(this);
			} else {
				var _this = this.mIterator;
				_this.mData = _this.mObject.mData;
				_this.mS = _this.mObject.mSize;
				_this.mI = 0;
			}
			return this.mIterator;
		} else {
			return new ds_ListSetIterator(this);
		}
	}
	,isEmpty: function() {
		return this.mSize == 0;
	}
	,toArray: function() {
		return ds_tools_NativeArrayTools.toArray(this.mData,0,this.mSize,[]);
	}
	,clone: function(byRef,copier) {
		if(byRef == null) {
			byRef = true;
		}
		var out = new ds_ListSet();
		out.capacity = this.mSize;
		out.mSize = this.mSize;
		out.mData = new Array(this.mSize);
		var src = this.mData;
		var dst = out.mData;
		if(byRef) {
			ds_tools_NativeArrayTools.blit(src,0,dst,0,this.mSize);
		} else if(copier == null) {
			var _g = 0;
			var _g1 = this.mSize;
			while(_g < _g1) {
				var i = _g++;
				dst[i] = (js_Boot.__cast(src[i] , ds_Cloneable)).clone();
			}
		} else {
			var _g = 0;
			var _g1 = this.mSize;
			while(_g < _g1) {
				var i = _g++;
				dst[i] = copier(src[i]);
			}
		}
		return out;
	}
	,grow: function() {
		this.capacity = ds_tools_GrowthRate.compute(this.growthRate,this.capacity);
		this.resizeContainer(this.capacity);
	}
	,resizeContainer: function(newSize) {
		var t = new Array(newSize);
		ds_tools_NativeArrayTools.blit(this.mData,0,t,0,this.mSize);
		this.mData = t;
	}
	,__class__: ds_ListSet
	,__properties__: {get_size:"get_size"}
};
var ds_ListSetIterator = function(x) {
	this.mObject = x;
	this.mData = this.mObject.mData;
	this.mS = this.mObject.mSize;
	this.mI = 0;
};
$hxClasses["ds.ListSetIterator"] = ds_ListSetIterator;
ds_ListSetIterator.__name__ = "ds.ListSetIterator";
ds_ListSetIterator.__interfaces__ = [ds_Itr];
ds_ListSetIterator.prototype = {
	mObject: null
	,mData: null
	,mI: null
	,mS: null
	,free: function() {
		this.mObject = null;
		this.mData = null;
	}
	,reset: function() {
		this.mData = this.mObject.mData;
		this.mS = this.mObject.mSize;
		this.mI = 0;
		return this;
	}
	,hasNext: function() {
		return this.mI < this.mS;
	}
	,next: function() {
		return this.mData[this.mI++];
	}
	,remove: function() {
		this.mData[this.mI] = this.mData[--this.mS];
	}
	,__class__: ds_ListSetIterator
};
var ds_Printf = function() { };
$hxClasses["ds.Printf"] = ds_Printf;
ds_Printf.__name__ = "ds.Printf";
ds_Printf.init = function() {
	var this1 = new Array(40);
	ds_Printf._padChars = this1;
	ds_Printf._padChars[0] = StringTools.rpad("","0",0);
	ds_Printf._padChars[1] = StringTools.rpad("","0",1);
	ds_Printf._padChars[2] = StringTools.rpad("","0",2);
	ds_Printf._padChars[3] = StringTools.rpad("","0",3);
	ds_Printf._padChars[4] = StringTools.rpad("","0",4);
	ds_Printf._padChars[5] = StringTools.rpad("","0",5);
	ds_Printf._padChars[6] = StringTools.rpad("","0",6);
	ds_Printf._padChars[7] = StringTools.rpad("","0",7);
	ds_Printf._padChars[8] = StringTools.rpad("","0",8);
	ds_Printf._padChars[9] = StringTools.rpad("","0",9);
	ds_Printf._padChars[10] = StringTools.rpad("","0",10);
	ds_Printf._padChars[11] = StringTools.rpad("","0",11);
	ds_Printf._padChars[12] = StringTools.rpad("","0",12);
	ds_Printf._padChars[13] = StringTools.rpad("","0",13);
	ds_Printf._padChars[14] = StringTools.rpad("","0",14);
	ds_Printf._padChars[15] = StringTools.rpad("","0",15);
	ds_Printf._padChars[16] = StringTools.rpad("","0",16);
	ds_Printf._padChars[17] = StringTools.rpad("","0",17);
	ds_Printf._padChars[18] = StringTools.rpad("","0",18);
	ds_Printf._padChars[19] = StringTools.rpad("","0",19);
	var _g = 0;
	while(_g < 20) {
		var i = _g++;
		ds_Printf._padChars[i + 20] = StringTools.rpad(""," ",i);
	}
	var this1 = new Array(64);
	ds_Printf._tmp = this1;
};
ds_Printf.format = function(fmt,args) {
	if(!ds_Printf._initialized) {
		ds_Printf._initialized = true;
		ds_Printf.init();
	}
	var output = new StringBuf();
	var argIndex = 0;
	var tokens = [];
	var _g = 0;
	var _g1 = ds_Printf.tokenize(fmt,tokens);
	while(_g < _g1) {
		var i = _g++;
		var _g2 = tokens[i];
		switch(_g2._hx_index) {
		case 0:
			var string = _g2.string;
			output.b += string == null ? "null" : "" + string;
			break;
		case 1:
			var type = _g2.type;
			var tagArgs = _g2.args;
			if(tagArgs.width == null) {
				if(!js_Boot.__instanceof(args[argIndex],Int)) {
					throw haxe_Exception.thrown(new ds_PrintfError("invalid 'width' argument"));
				}
				tagArgs.width = args[argIndex++];
			}
			if(tagArgs.precision == null) {
				if(!js_Boot.__instanceof(args[argIndex],Int)) {
					throw haxe_Exception.thrown(new ds_PrintfError("invalid 'precision' argument"));
				}
				tagArgs.precision = args[argIndex++];
			}
			var value;
			if(tagArgs.pos > -1) {
				if(tagArgs.pos > args.length - 1) {
					throw haxe_Exception.thrown(new ds_PrintfError("argument index out of range"));
				}
				value = args[tagArgs.pos];
			} else {
				value = args[argIndex++];
			}
			if(value == null) {
				value = "null";
			}
			switch(type._hx_index) {
			case 0:
				var intType = type.type;
				switch(intType._hx_index) {
				case 0:
					ds_Printf.formatCharacter(value,tagArgs,output);
					break;
				case 1:
					ds_Printf.formatSignedDecimal(value,tagArgs,output);
					break;
				case 2:
					ds_Printf.formatUnsignedDecimal(value,tagArgs,output);
					break;
				case 3:
					ds_Printf.formatOctal(value,tagArgs,output);
					break;
				case 4:
					ds_Printf.formatHexadecimal(value,tagArgs,output);
					break;
				case 5:
					ds_Printf.formatBinary(value,tagArgs,output);
					break;
				}
				break;
			case 1:
				var floatType = type.floatType;
				switch(floatType._hx_index) {
				case 0:
					ds_Printf.formatFloat(value,tagArgs,output);
					break;
				case 1:
					ds_Printf.formatScientific(value,tagArgs,output);
					break;
				case 2:
					ds_Printf.formatNaturalFloat(value,tagArgs,output);
					break;
				}
				break;
			case 2:
				ds_Printf.formatString(value,tagArgs,output);
				break;
			case 3:
				throw haxe_Exception.thrown(new ds_PrintfError("specifier 'p' is not supported"));
			case 4:
				throw haxe_Exception.thrown(new ds_PrintfError("specifier 'n' is not supported"));
			}
			break;
		case 2:
			var name = _g2.name;
			if(!Object.prototype.hasOwnProperty.call(args[0],name)) {
				throw haxe_Exception.thrown(new ds_PrintfError("no field named \"" + name + "\" found"));
			}
			output.b += Std.string(Std.string(Reflect.field(args[0],name)));
			++argIndex;
			break;
		case 3:
			var _g3 = _g2.string;
			var _g4 = _g2.pos;
			throw haxe_Exception.thrown(new ds_PrintfError("Invalid format specifier."));
		}
	}
	return output.b;
};
ds_Printf.tokenize = function(fmt,output) {
	var i = 0;
	var c = 0;
	var n = 0;
	var buf = new StringBuf();
	var k = fmt.length;
	while(i < k) {
		c = fmt.charCodeAt(i++);
		if(c == 37) {
			c = fmt.charCodeAt(i++);
			if(c == 37) {
				buf.b += String.fromCodePoint(c);
				continue;
			}
			if(buf.b.length > 0) {
				output[n++] = ds__$Printf_FormatToken.Raw(buf.b);
				buf = new StringBuf();
			}
			var token;
			if(c == 40) {
				var endPos = fmt.indexOf(")",i);
				if(endPos == -1) {
					token = ds__$Printf_FormatToken.Unknown("named parameter",i);
				} else {
					var paramName = HxOverrides.substr(fmt,i,endPos - i);
					i = endPos + 1;
					token = ds__$Printf_FormatToken.Property(paramName);
				}
			} else {
				var i1 = 0;
				if(i1 == null) {
					i1 = 0;
				}
				var this1 = i1;
				var params = new ds__$Printf_FormatArgs(this1,-1,-1,-1);
				_hx_loop2: while(c >= 32 && c <= 48) switch(c) {
				case 32:
					c = fmt.charCodeAt(i++);
					params.flags |= 1 << ds__$Printf_FormatFlag.Space._hx_index;
					break;
				case 35:
					c = fmt.charCodeAt(i++);
					params.flags |= 1 << ds__$Printf_FormatFlag.Sharp._hx_index;
					break;
				case 43:
					c = fmt.charCodeAt(i++);
					params.flags |= 1 << ds__$Printf_FormatFlag.Plus._hx_index;
					break;
				case 45:
					c = fmt.charCodeAt(i++);
					params.flags |= 1 << ds__$Printf_FormatFlag.Minus._hx_index;
					break;
				case 48:
					c = fmt.charCodeAt(i++);
					params.flags |= 1 << ds__$Printf_FormatFlag.Zero._hx_index;
					break;
				default:
					break _hx_loop2;
				}
				if((params.flags & 1 << ds__$Printf_FormatFlag.Minus._hx_index) != 0 && (params.flags & 1 << ds__$Printf_FormatFlag.Zero._hx_index) != 0) {
					params.flags &= -1 - (1 << ds__$Printf_FormatFlag.Zero._hx_index);
				}
				if((params.flags & 1 << ds__$Printf_FormatFlag.Space._hx_index) != 0 && (params.flags & 1 << ds__$Printf_FormatFlag.Plus._hx_index) != 0) {
					params.flags &= -1 - (1 << ds__$Printf_FormatFlag.Space._hx_index);
				}
				if(c == 42) {
					params.width = null;
					c = fmt.charCodeAt(i++);
				} else if(c >= 48 && c <= 57) {
					var w = 0;
					while(c >= 48 && c <= 57) {
						w = c - 48 + w * 10;
						c = fmt.charCodeAt(i++);
					}
					params.width = w;
					if(c == 36) {
						params.pos = w - 1;
						params.width = -1;
						c = fmt.charCodeAt(i++);
						if(c == 42) {
							params.width = null;
							c = fmt.charCodeAt(i++);
						} else if(c >= 48 && c <= 57) {
							var w1 = 0;
							while(c >= 48 && c <= 57) {
								w1 = c - 48 + w1 * 10;
								c = fmt.charCodeAt(i++);
							}
							params.width = w1;
						}
					}
				}
				if(c == 46) {
					c = fmt.charCodeAt(i++);
					if(c == 42) {
						params.precision = null;
						c = fmt.charCodeAt(i++);
					} else {
						var p = 0;
						if(c >= 48 && c <= 57) {
							while(c >= 48 && c <= 57) {
								p = c - 48 + p * 10;
								c = fmt.charCodeAt(i++);
							}
						}
						params.precision = p;
					}
				}
				_hx_loop6: while(c >= 76 && c <= 108) switch(c) {
				case 76:
					c = fmt.charCodeAt(i++);
					params.flags |= 1 << ds__$Printf_FormatFlag.LengthUpperCaseL._hx_index;
					break;
				case 104:
					c = fmt.charCodeAt(i++);
					params.flags |= 1 << ds__$Printf_FormatFlag.LengthH._hx_index;
					break;
				case 108:
					c = fmt.charCodeAt(i++);
					params.flags |= 1 << ds__$Printf_FormatFlag.LengthLowerCaseL._hx_index;
					break;
				default:
					break _hx_loop6;
				}
				if(c >= 69 && c <= 120) {
					var type;
					switch(c) {
					case 69:
						params.flags |= 1 << ds__$Printf_FormatFlag.UpperCase._hx_index;
						type = ds__$Printf_FormatDataType.FmtFloat(ds__$Printf_FloatType.FScientific);
						break;
					case 71:
						params.flags |= 1 << ds__$Printf_FormatFlag.UpperCase._hx_index;
						type = ds__$Printf_FormatDataType.FmtFloat(ds__$Printf_FloatType.FNatural);
						break;
					case 88:
						params.flags |= 1 << ds__$Printf_FormatFlag.UpperCase._hx_index;
						type = ds__$Printf_FormatDataType.FmtInt(ds__$Printf_IntType.IHex);
						break;
					case 98:
						type = ds__$Printf_FormatDataType.FmtInt(ds__$Printf_IntType.IBin);
						break;
					case 99:
						type = ds__$Printf_FormatDataType.FmtInt(ds__$Printf_IntType.ICharacter);
						break;
					case 100:
						type = ds__$Printf_FormatDataType.FmtInt(ds__$Printf_IntType.ISignedDecimal);
						break;
					case 101:
						type = ds__$Printf_FormatDataType.FmtFloat(ds__$Printf_FloatType.FScientific);
						break;
					case 102:
						type = ds__$Printf_FormatDataType.FmtFloat(ds__$Printf_FloatType.FNormal);
						break;
					case 103:
						type = ds__$Printf_FormatDataType.FmtFloat(ds__$Printf_FloatType.FNatural);
						break;
					case 105:
						type = ds__$Printf_FormatDataType.FmtInt(ds__$Printf_IntType.ISignedDecimal);
						break;
					case 110:
						type = ds__$Printf_FormatDataType.FmtNothing;
						break;
					case 111:
						type = ds__$Printf_FormatDataType.FmtInt(ds__$Printf_IntType.IOctal);
						break;
					case 112:
						type = ds__$Printf_FormatDataType.FmtPointer;
						break;
					case 115:
						type = ds__$Printf_FormatDataType.FmtString;
						break;
					case 117:
						type = ds__$Printf_FormatDataType.FmtInt(ds__$Printf_IntType.IUnsignedDecimal);
						break;
					case 120:
						type = ds__$Printf_FormatDataType.FmtInt(ds__$Printf_IntType.IHex);
						break;
					default:
						type = null;
					}
					token = type == null ? ds__$Printf_FormatToken.Unknown(String.fromCodePoint(c),i) : ds__$Printf_FormatToken.Tag(type,params);
				} else {
					token = ds__$Printf_FormatToken.Unknown(String.fromCodePoint(c),i);
				}
			}
			output[n++] = token;
		} else {
			buf.b += String.fromCodePoint(c);
		}
	}
	if(buf.b.length > 0) {
		output[n++] = ds__$Printf_FormatToken.Raw(buf.b);
	}
	return n;
};
ds_Printf.formatBinary = function(value,args,buf) {
	var f = args.flags;
	var p = args.precision;
	var w = args.width;
	if((f & 1 << ds__$Printf_FormatFlag.LengthH._hx_index) != 0) {
		value &= 65535;
	}
	if(value == 0) {
		if(p == 0) {
			return;
		}
		f &= -1 - (1 << ds__$Printf_FormatFlag.Sharp._hx_index);
	}
	if(p == -1) {
		p = 1;
	}
	var tmp = ds_Printf._tmp;
	var l = 0;
	while(true) {
		tmp[l++] = value & 1;
		value >>>= 1;
		if(!(value > 0)) {
			break;
		}
	}
	var m = l;
	if((f & 1 << ds__$Printf_FormatFlag.Minus._hx_index) != 0) {
		if((f & 1 << ds__$Printf_FormatFlag.Sharp._hx_index) != 0) {
			buf.b += "0b";
		}
		if(p > l) {
			var _g = 0;
			var _g1 = p - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += "0";
			}
		}
		while(--m > -1) buf.b += String.fromCodePoint((48 + tmp[m]));
		if((f & 1 << ds__$Printf_FormatFlag.Sharp._hx_index) != 0) {
			w -= 2;
		}
		if(p > l) {
			l = p;
		}
		if(w > l) {
			var _g = 0;
			var _g1 = w - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += " ";
			}
		}
	} else {
		var k = l;
		if(p > k) {
			k = p;
		}
		if((f & 1 << ds__$Printf_FormatFlag.Sharp._hx_index) != 0) {
			w -= 2;
		}
		if(w > k) {
			if((f & 1 << ds__$Printf_FormatFlag.Zero._hx_index) != 0 && p == 1) {
				var _g = 0;
				var _g1 = w - k;
				while(_g < _g1) {
					var i = _g++;
					buf.b += "0";
				}
			} else {
				var _g = 0;
				var _g1 = w - k;
				while(_g < _g1) {
					var i = _g++;
					buf.b += " ";
				}
			}
		}
		if((f & 1 << ds__$Printf_FormatFlag.Sharp._hx_index) != 0) {
			buf.b += "0b";
		}
		if(p > l) {
			var _g = 0;
			var _g1 = p - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += "0";
			}
		}
		while(--m > -1) buf.b += String.fromCodePoint((48 + tmp[m]));
	}
};
ds_Printf.formatOctal = function(value,args,buf) {
	var f = args.flags;
	var p = args.precision;
	var w = args.width;
	if((f & 1 << ds__$Printf_FormatFlag.LengthH._hx_index) != 0) {
		value &= 65535;
	}
	if(value == 0) {
		if(p == 0) {
			buf.b += Std.string((f & 1 << ds__$Printf_FormatFlag.Sharp._hx_index) != 0 ? "0" : "");
			return;
		}
		f &= -1 - (1 << ds__$Printf_FormatFlag.Sharp._hx_index);
	}
	var tmp = ds_Printf._tmp;
	var l = 0;
	while(true) {
		tmp[l++] = value & 7;
		value >>>= 3;
		if(!(value > 0)) {
			break;
		}
	}
	var m = l;
	if(p != -1) {
		if((f & 1 << ds__$Printf_FormatFlag.Zero._hx_index) != 0) {
			f &= -1 - (1 << ds__$Printf_FormatFlag.Zero._hx_index);
			f |= 1 << ds__$Printf_FormatFlag.Space._hx_index;
		}
	} else {
		p = 1;
	}
	if((f & 1 << ds__$Printf_FormatFlag.Minus._hx_index) != 0) {
		if((f & 1 << ds__$Printf_FormatFlag.Sharp._hx_index) != 0) {
			buf.b += "0";
			++l;
		}
		if(p > l) {
			var _g = 0;
			var _g1 = p - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += "0";
			}
		}
		while(--m > -1) {
			var x = String.fromCodePoint((48 + tmp[m]));
			buf.b += Std.string(x);
		}
		if(p > l) {
			l = p;
		}
		if(w > l) {
			var _g = 0;
			var _g1 = w - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += " ";
			}
		}
	} else {
		if((f & 1 << ds__$Printf_FormatFlag.Sharp._hx_index) != 0) {
			++l;
		}
		var k = l;
		if(p > k) {
			k = p;
		}
		if(w > k) {
			if((f & 1 << ds__$Printf_FormatFlag.Zero._hx_index) != 0) {
				var _g = 0;
				var _g1 = w - k;
				while(_g < _g1) {
					var i = _g++;
					buf.b += "0";
				}
			} else {
				var _g = 0;
				var _g1 = w - k;
				while(_g < _g1) {
					var i = _g++;
					buf.b += " ";
				}
			}
		}
		if((f & 1 << ds__$Printf_FormatFlag.Sharp._hx_index) != 0) {
			buf.b += "0";
		}
		if(p > l) {
			var _g = 0;
			var _g1 = p - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += "0";
			}
		}
		while(--m > -1) {
			var x = String.fromCodePoint((48 + tmp[m]));
			buf.b += Std.string(x);
		}
	}
};
ds_Printf.formatHexadecimal = function(value,args,buf) {
	var f = args.flags;
	var p = args.precision;
	var w = args.width;
	if((f & 1 << ds__$Printf_FormatFlag.LengthH._hx_index) != 0) {
		value &= 65535;
	}
	if(value == 0) {
		if(p == 0) {
			return;
		}
		f &= -1 - (1 << ds__$Printf_FormatFlag.Sharp._hx_index);
	}
	if(p == -1) {
		p = 1;
	}
	var tmp = ds_Printf._tmp;
	var l = 0;
	while(true) {
		tmp[l++] = value & 15;
		value >>>= 4;
		if(!(value > 0)) {
			break;
		}
	}
	var m = l;
	if((f & 1 << ds__$Printf_FormatFlag.Minus._hx_index) != 0) {
		if((f & 1 << ds__$Printf_FormatFlag.Sharp._hx_index) != 0) {
			if((f & 1 << ds__$Printf_FormatFlag.UpperCase._hx_index) != 0) {
				buf.b += "0X";
			} else {
				buf.b += "0x";
			}
		}
		if(p > l) {
			var _g = 0;
			var _g1 = p - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += "0";
			}
		}
		var a = (f & 1 << ds__$Printf_FormatFlag.UpperCase._hx_index) != 0 ? 65 : 97;
		while(--m > -1) {
			var v = tmp[m];
			if(v < 10) {
				var x = String.fromCodePoint((48 + v));
				buf.b += Std.string(x);
			} else {
				var x1 = String.fromCodePoint((a + (v - 10)));
				buf.b += Std.string(x1);
			}
		}
		if((f & 1 << ds__$Printf_FormatFlag.Sharp._hx_index) != 0) {
			w -= 2;
		}
		if(p > l) {
			l = p;
		}
		if(w > l) {
			var _g = 0;
			var _g1 = w - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += " ";
			}
		}
	} else {
		var k = l;
		if(p > k) {
			k = p;
		}
		if((f & 1 << ds__$Printf_FormatFlag.Sharp._hx_index) != 0) {
			w -= 2;
		}
		if(w > k) {
			if((f & 1 << ds__$Printf_FormatFlag.Zero._hx_index) != 0 && p == 1) {
				var _g = 0;
				var _g1 = w - k;
				while(_g < _g1) {
					var i = _g++;
					buf.b += "0";
				}
			} else {
				var _g = 0;
				var _g1 = w - k;
				while(_g < _g1) {
					var i = _g++;
					buf.b += " ";
				}
			}
		}
		if((f & 1 << ds__$Printf_FormatFlag.Sharp._hx_index) != 0) {
			if((f & 1 << ds__$Printf_FormatFlag.UpperCase._hx_index) != 0) {
				buf.b += "0X";
			} else {
				buf.b += "0x";
			}
		}
		if(p > l) {
			var _g = 0;
			var _g1 = p - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += "0";
			}
		}
		var a = (f & 1 << ds__$Printf_FormatFlag.UpperCase._hx_index) != 0 ? 65 : 97;
		while(--m > -1) {
			var v = tmp[m];
			if(v < 10) {
				var x = String.fromCodePoint((48 + v));
				buf.b += Std.string(x);
			} else {
				var x1 = String.fromCodePoint((a + (v - 10)));
				buf.b += Std.string(x1);
			}
		}
	}
};
ds_Printf.formatSignedDecimal = function(value,args,buf) {
	var f = args.flags;
	var p = args.precision;
	var w = args.width;
	if(p == 0 && value == 0) {
		return;
	}
	if((f & 1 << ds__$Printf_FormatFlag.LengthH._hx_index) != 0) {
		value &= 65535;
	}
	var s = Std.string(value < 0 ? -value : value);
	var l = s.length;
	var sign = value < 0 ? "-" : (f & 1 << ds__$Printf_FormatFlag.Plus._hx_index) != 0 ? "+" : (f & 1 << ds__$Printf_FormatFlag.Space._hx_index) != 0 ? " " : null;
	var hasSign = sign != null;
	if((f & 1 << ds__$Printf_FormatFlag.Minus._hx_index) != 0) {
		if(hasSign) {
			buf.b += sign == null ? "null" : "" + sign;
		}
		if(p > l) {
			var _g = 0;
			var _g1 = p - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += "0";
			}
		}
		buf.b += Std.string(s);
		if(p > l) {
			l = p;
		}
		l += hasSign ? 1 : 0;
		if(w > l) {
			var _g = 0;
			var _g1 = w - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += " ";
			}
		}
	} else {
		var k = l + (hasSign ? 1 : 0);
		if(p > k) {
			k = p;
		}
		if(w > k) {
			if((f & 1 << ds__$Printf_FormatFlag.Zero._hx_index) != 0) {
				if(hasSign) {
					buf.b += sign == null ? "null" : "" + sign;
				}
				var _g = 0;
				var _g1 = w - k;
				while(_g < _g1) {
					var i = _g++;
					buf.b += "0";
				}
			} else {
				var _g = 0;
				var _g1 = w - k;
				while(_g < _g1) {
					var i = _g++;
					buf.b += " ";
				}
			}
		}
		if(hasSign && (f & 1 << ds__$Printf_FormatFlag.Zero._hx_index) == 0) {
			buf.b += sign == null ? "null" : "" + sign;
		}
		if(p > l) {
			var _g = 0;
			var _g1 = p - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += "0";
			}
		}
		buf.b += Std.string(s);
	}
};
ds_Printf.formatUnsignedDecimal = function(value,args,buf) {
	if(value >= 0) {
		ds_Printf.formatSignedDecimal(value,args,buf);
		return;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(0,value);
	var s = haxe_Int64.toString(this1);
	var l = s.length;
	var f = args.flags;
	var p = args.precision;
	var w = args.width;
	if((f & 1 << ds__$Printf_FormatFlag.Minus._hx_index) != 0) {
		if(p > l) {
			var _g = 0;
			var _g1 = p - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += "0";
			}
		}
		buf.b += s == null ? "null" : "" + s;
		if(p > l) {
			l = p;
		}
		if(w > l) {
			var _g = 0;
			var _g1 = w - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += " ";
			}
		}
	} else {
		var k = l;
		if(p > k) {
			k = p;
		}
		if(w > k) {
			if((f & 1 << ds__$Printf_FormatFlag.Zero._hx_index) != 0) {
				var _g = 0;
				var _g1 = w - k;
				while(_g < _g1) {
					var i = _g++;
					buf.b += "0";
				}
			} else {
				var _g = 0;
				var _g1 = w - k;
				while(_g < _g1) {
					var i = _g++;
					buf.b += " ";
				}
			}
		}
		if(p > l) {
			var _g = 0;
			var _g1 = p - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += "0";
			}
		}
		buf.b += s == null ? "null" : "" + s;
	}
};
ds_Printf.formatNaturalFloat = function(value,args,buf) {
	var tmp = new StringBuf();
	ds_Printf.formatFloat(value,args,tmp);
	var formatedFloat = tmp.b;
	haxe_Log.trace("formatedFloat " + formatedFloat,{ fileName : "ds/Printf.hx", lineNumber : 674, className : "ds.Printf", methodName : "formatNaturalFloat"});
	tmp = new StringBuf();
	ds_Printf.formatScientific(value,args,tmp);
	var formatedScientific = tmp.b;
	haxe_Log.trace("formatedScientific " + formatedScientific,{ fileName : "ds/Printf.hx", lineNumber : 680, className : "ds.Printf", methodName : "formatNaturalFloat"});
	var s = formatedFloat.length <= formatedScientific.length ? formatedFloat : formatedScientific;
	buf.b += s == null ? "null" : "" + s;
};
ds_Printf.formatScientific = function(value,args,buf) {
	var f = args.flags;
	var p = args.precision;
	if(p == -1) {
		p = ds_Printf.DEFAULT_PRECISION;
	}
	var sign;
	var exponent;
	var s = "";
	if(value == 0) {
		sign = 0;
		exponent = 0;
		s += "0";
		if(p > 0) {
			s += ".";
			var _g = 0;
			var _g1 = p;
			while(_g < _g1) {
				var i = _g++;
				s += "0";
			}
		}
	} else {
		var m = Math;
		sign = value > 0. ? 1 : value < 0. ? -1 : 0;
		value = m.abs(value);
		exponent = m.floor(Math.log(value) / 2.302585092994046);
		value /= m.pow(10,exponent);
		var y = m.pow(0.1,p);
		value = Math.round(value / y) * y;
	}
	if(value != 0) {
		s += HxOverrides.substr(value == null ? "null" : "" + value,0,p + 2);
	}
	s += (f & 1 << ds__$Printf_FormatFlag.UpperCase._hx_index) != 0 ? "E" : "e";
	s += exponent >= 0 ? "+" : "-";
	var s1 = Std.string(exponent < 0 ? -exponent : exponent);
	var c = ds_Printf.DEFAULT_NUM_EXP_DIGITS - s1.length;
	var s2;
	if(c < 1) {
		s2 = s1;
	} else {
		var t;
		if(c > 30) {
			var char = "0";
			t = char;
			var _g = 0;
			var _g1 = c - 1;
			while(_g < _g1) {
				var i = _g++;
				t += char;
			}
		} else {
			t = ds_Printf._padChars[c];
		}
		s2 = t + s1;
	}
	s += s2;
	var printSign = sign == -1 || ((f & 1 << ds__$Printf_FormatFlag.Plus._hx_index) != 0 || (f & 1 << ds__$Printf_FormatFlag.Space._hx_index) != 0);
	if(printSign && (f & 1 << ds__$Printf_FormatFlag.Zero._hx_index) == 0) {
		s = (sign == -1 ? "-" : (f & 1 << ds__$Printf_FormatFlag.Plus._hx_index) != 0 ? "+" : " ") + s;
	}
	if(args.width > 0) {
		var w = args.width;
		if(printSign && (f & 1 << ds__$Printf_FormatFlag.Zero._hx_index) != 0) {
			--w;
		}
		var type = (f & 1 << ds__$Printf_FormatFlag.Zero._hx_index) != 0 ? 0 : 20;
		var c = w - s.length;
		if(c >= 1) {
			var t;
			if(c > 30) {
				var char = type == 0 ? "0" : " ";
				t = char;
				var _g = 0;
				var _g1 = c - 1;
				while(_g < _g1) {
					var i = _g++;
					t += char;
				}
			} else {
				t = ds_Printf._padChars[type + c];
			}
			s = t + s;
		}
	}
	if(printSign && (f & 1 << ds__$Printf_FormatFlag.Zero._hx_index) != 0) {
		s = (sign == -1 ? "-" : (f & 1 << ds__$Printf_FormatFlag.Plus._hx_index) != 0 ? "+" : " ") + s;
	}
	buf.b += s == null ? "null" : "" + s;
};
ds_Printf.formatFloat = function(value,args,buf) {
	var f = args.flags;
	var p = args.precision;
	if(p == -1) {
		p = ds_Printf.DEFAULT_PRECISION;
	}
	var w = args.width;
	var isNegative = value < 0;
	var s;
	if(p == 0) {
		s = Std.string(Math.round(value));
		if((f & 1 << ds__$Printf_FormatFlag.Sharp._hx_index) != 0) {
			s += ".";
		}
	} else {
		s = value.toFixed(p);
	}
	var l = s.length;
	if(isNegative && s.indexOf("-") > -1) {
		s = HxOverrides.substr(s,1,null);
	}
	var sign = null;
	if((f & 1 << ds__$Printf_FormatFlag.Plus._hx_index) != 0 && !isNegative) {
		sign = "+";
		++l;
	} else if((f & 1 << ds__$Printf_FormatFlag.Space._hx_index) != 0) {
		sign = " ";
		++l;
	} else if(isNegative) {
		sign = "-";
	}
	var hasSign = sign != null;
	if((f & 1 << ds__$Printf_FormatFlag.Minus._hx_index) != 0) {
		if(hasSign) {
			buf.b += sign == null ? "null" : "" + sign;
		}
		buf.b += s == null ? "null" : "" + s;
		if(w > l) {
			var _g = 0;
			var _g1 = w - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += " ";
			}
		}
	} else {
		if(w > l) {
			if((f & 1 << ds__$Printf_FormatFlag.Zero._hx_index) != 0) {
				if(hasSign) {
					buf.b += sign == null ? "null" : "" + sign;
					hasSign = false;
				}
				var _g = 0;
				var _g1 = w - l;
				while(_g < _g1) {
					var i = _g++;
					buf.b += "0";
				}
			} else {
				var _g = 0;
				var _g1 = w - l;
				while(_g < _g1) {
					var i = _g++;
					buf.b += " ";
				}
			}
		}
		if(hasSign) {
			buf.b += sign == null ? "null" : "" + sign;
		}
		buf.b += s == null ? "null" : "" + s;
	}
};
ds_Printf.formatCharacter = function(x,args,buf) {
	if((args.flags & 1 << ds__$Printf_FormatFlag.Minus._hx_index) != 0) {
		var x1 = String.fromCodePoint(x);
		buf.b += Std.string(x1);
		var _g = 0;
		var _g1 = args.width - 1;
		while(_g < _g1) {
			var i = _g++;
			buf.b += " ";
		}
	} else {
		var _g = 0;
		var _g1 = args.width - 1;
		while(_g < _g1) {
			var i = _g++;
			buf.b += " ";
		}
		var x1 = String.fromCodePoint(x);
		buf.b += Std.string(x1);
	}
};
ds_Printf.formatString = function(value,args,buf) {
	var l = value.length;
	var p = args.precision;
	if((args.flags & 1 << ds__$Printf_FormatFlag.Minus._hx_index) != 0) {
		if(p != -1) {
			buf.b += p == null ? HxOverrides.substr(value,0,null) : HxOverrides.substr(value,0,p);
			l = p;
		} else {
			buf.b += value == null ? "null" : "" + value;
		}
		var _g = 0;
		var _g1 = args.width - l;
		while(_g < _g1) {
			var i = _g++;
			buf.b += " ";
		}
	} else {
		if(p != -1) {
			l = p;
		}
		var _g = 0;
		var _g1 = args.width - l;
		while(_g < _g1) {
			var i = _g++;
			buf.b += " ";
		}
		if(p != -1) {
			buf.b += p == null ? HxOverrides.substr(value,0,null) : HxOverrides.substr(value,0,p);
		} else {
			buf.b += value == null ? "null" : "" + value;
		}
	}
};
ds_Printf.pad = function(s,l,type,dir) {
	var c = l - s.length;
	if(c < 1) {
		return s;
	} else {
		var t;
		if(c > 30) {
			var char = type == 0 ? "0" : " ";
			t = char;
			var _g = 0;
			var _g1 = c - 1;
			while(_g < _g1) {
				var i = _g++;
				t += char;
			}
		} else {
			t = ds_Printf._padChars[type + c];
		}
		if(dir > 0) {
			return s + t;
		} else {
			return t + s;
		}
	}
};
var ds_PrintfError = function(message) {
	this.message = message;
};
$hxClasses["ds.PrintfError"] = ds_PrintfError;
ds_PrintfError.__name__ = "ds.PrintfError";
ds_PrintfError.prototype = {
	message: null
	,toString: function() {
		return this.message;
	}
	,__class__: ds_PrintfError
};
var ds__$Printf_FormatArgs = function(flags,pos,width,precision) {
	this.flags = flags;
	this.pos = pos;
	this.width = width;
	this.precision = precision;
};
$hxClasses["ds._Printf.FormatArgs"] = ds__$Printf_FormatArgs;
ds__$Printf_FormatArgs.__name__ = "ds._Printf.FormatArgs";
ds__$Printf_FormatArgs.prototype = {
	flags: null
	,pos: null
	,width: null
	,precision: null
	,__class__: ds__$Printf_FormatArgs
};
var ds__$Printf_FormatFlag = $hxEnums["ds._Printf.FormatFlag"] = { __ename__:"ds._Printf.FormatFlag",__constructs__:null
	,Minus: {_hx_name:"Minus",_hx_index:0,__enum__:"ds._Printf.FormatFlag",toString:$estr}
	,Plus: {_hx_name:"Plus",_hx_index:1,__enum__:"ds._Printf.FormatFlag",toString:$estr}
	,Space: {_hx_name:"Space",_hx_index:2,__enum__:"ds._Printf.FormatFlag",toString:$estr}
	,Sharp: {_hx_name:"Sharp",_hx_index:3,__enum__:"ds._Printf.FormatFlag",toString:$estr}
	,Zero: {_hx_name:"Zero",_hx_index:4,__enum__:"ds._Printf.FormatFlag",toString:$estr}
	,LengthH: {_hx_name:"LengthH",_hx_index:5,__enum__:"ds._Printf.FormatFlag",toString:$estr}
	,LengthUpperCaseL: {_hx_name:"LengthUpperCaseL",_hx_index:6,__enum__:"ds._Printf.FormatFlag",toString:$estr}
	,LengthLowerCaseL: {_hx_name:"LengthLowerCaseL",_hx_index:7,__enum__:"ds._Printf.FormatFlag",toString:$estr}
	,UpperCase: {_hx_name:"UpperCase",_hx_index:8,__enum__:"ds._Printf.FormatFlag",toString:$estr}
};
ds__$Printf_FormatFlag.__constructs__ = [ds__$Printf_FormatFlag.Minus,ds__$Printf_FormatFlag.Plus,ds__$Printf_FormatFlag.Space,ds__$Printf_FormatFlag.Sharp,ds__$Printf_FormatFlag.Zero,ds__$Printf_FormatFlag.LengthH,ds__$Printf_FormatFlag.LengthUpperCaseL,ds__$Printf_FormatFlag.LengthLowerCaseL,ds__$Printf_FormatFlag.UpperCase];
ds__$Printf_FormatFlag.__empty_constructs__ = [ds__$Printf_FormatFlag.Minus,ds__$Printf_FormatFlag.Plus,ds__$Printf_FormatFlag.Space,ds__$Printf_FormatFlag.Sharp,ds__$Printf_FormatFlag.Zero,ds__$Printf_FormatFlag.LengthH,ds__$Printf_FormatFlag.LengthUpperCaseL,ds__$Printf_FormatFlag.LengthLowerCaseL,ds__$Printf_FormatFlag.UpperCase];
var ds__$Printf_FormatToken = $hxEnums["ds._Printf.FormatToken"] = { __ename__:"ds._Printf.FormatToken",__constructs__:null
	,Raw: ($_=function(string) { return {_hx_index:0,string:string,__enum__:"ds._Printf.FormatToken",toString:$estr}; },$_._hx_name="Raw",$_.__params__ = ["string"],$_)
	,Tag: ($_=function(type,args) { return {_hx_index:1,type:type,args:args,__enum__:"ds._Printf.FormatToken",toString:$estr}; },$_._hx_name="Tag",$_.__params__ = ["type","args"],$_)
	,Property: ($_=function(name) { return {_hx_index:2,name:name,__enum__:"ds._Printf.FormatToken",toString:$estr}; },$_._hx_name="Property",$_.__params__ = ["name"],$_)
	,Unknown: ($_=function(string,pos) { return {_hx_index:3,string:string,pos:pos,__enum__:"ds._Printf.FormatToken",toString:$estr}; },$_._hx_name="Unknown",$_.__params__ = ["string","pos"],$_)
};
ds__$Printf_FormatToken.__constructs__ = [ds__$Printf_FormatToken.Raw,ds__$Printf_FormatToken.Tag,ds__$Printf_FormatToken.Property,ds__$Printf_FormatToken.Unknown];
ds__$Printf_FormatToken.__empty_constructs__ = [];
var ds__$Printf_FormatDataType = $hxEnums["ds._Printf.FormatDataType"] = { __ename__:"ds._Printf.FormatDataType",__constructs__:null
	,FmtInt: ($_=function(type) { return {_hx_index:0,type:type,__enum__:"ds._Printf.FormatDataType",toString:$estr}; },$_._hx_name="FmtInt",$_.__params__ = ["type"],$_)
	,FmtFloat: ($_=function(floatType) { return {_hx_index:1,floatType:floatType,__enum__:"ds._Printf.FormatDataType",toString:$estr}; },$_._hx_name="FmtFloat",$_.__params__ = ["floatType"],$_)
	,FmtString: {_hx_name:"FmtString",_hx_index:2,__enum__:"ds._Printf.FormatDataType",toString:$estr}
	,FmtPointer: {_hx_name:"FmtPointer",_hx_index:3,__enum__:"ds._Printf.FormatDataType",toString:$estr}
	,FmtNothing: {_hx_name:"FmtNothing",_hx_index:4,__enum__:"ds._Printf.FormatDataType",toString:$estr}
};
ds__$Printf_FormatDataType.__constructs__ = [ds__$Printf_FormatDataType.FmtInt,ds__$Printf_FormatDataType.FmtFloat,ds__$Printf_FormatDataType.FmtString,ds__$Printf_FormatDataType.FmtPointer,ds__$Printf_FormatDataType.FmtNothing];
ds__$Printf_FormatDataType.__empty_constructs__ = [ds__$Printf_FormatDataType.FmtString,ds__$Printf_FormatDataType.FmtPointer,ds__$Printf_FormatDataType.FmtNothing];
var ds__$Printf_IntType = $hxEnums["ds._Printf.IntType"] = { __ename__:"ds._Printf.IntType",__constructs__:null
	,ICharacter: {_hx_name:"ICharacter",_hx_index:0,__enum__:"ds._Printf.IntType",toString:$estr}
	,ISignedDecimal: {_hx_name:"ISignedDecimal",_hx_index:1,__enum__:"ds._Printf.IntType",toString:$estr}
	,IUnsignedDecimal: {_hx_name:"IUnsignedDecimal",_hx_index:2,__enum__:"ds._Printf.IntType",toString:$estr}
	,IOctal: {_hx_name:"IOctal",_hx_index:3,__enum__:"ds._Printf.IntType",toString:$estr}
	,IHex: {_hx_name:"IHex",_hx_index:4,__enum__:"ds._Printf.IntType",toString:$estr}
	,IBin: {_hx_name:"IBin",_hx_index:5,__enum__:"ds._Printf.IntType",toString:$estr}
};
ds__$Printf_IntType.__constructs__ = [ds__$Printf_IntType.ICharacter,ds__$Printf_IntType.ISignedDecimal,ds__$Printf_IntType.IUnsignedDecimal,ds__$Printf_IntType.IOctal,ds__$Printf_IntType.IHex,ds__$Printf_IntType.IBin];
ds__$Printf_IntType.__empty_constructs__ = [ds__$Printf_IntType.ICharacter,ds__$Printf_IntType.ISignedDecimal,ds__$Printf_IntType.IUnsignedDecimal,ds__$Printf_IntType.IOctal,ds__$Printf_IntType.IHex,ds__$Printf_IntType.IBin];
var ds__$Printf_FloatType = $hxEnums["ds._Printf.FloatType"] = { __ename__:"ds._Printf.FloatType",__constructs__:null
	,FNormal: {_hx_name:"FNormal",_hx_index:0,__enum__:"ds._Printf.FloatType",toString:$estr}
	,FScientific: {_hx_name:"FScientific",_hx_index:1,__enum__:"ds._Printf.FloatType",toString:$estr}
	,FNatural: {_hx_name:"FNatural",_hx_index:2,__enum__:"ds._Printf.FloatType",toString:$estr}
};
ds__$Printf_FloatType.__constructs__ = [ds__$Printf_FloatType.FNormal,ds__$Printf_FloatType.FScientific,ds__$Printf_FloatType.FNatural];
ds__$Printf_FloatType.__empty_constructs__ = [ds__$Printf_FloatType.FNormal,ds__$Printf_FloatType.FScientific,ds__$Printf_FloatType.FNatural];
var ds_tools_ArrayTools = function() { };
$hxClasses["ds.tools.ArrayTools"] = ds_tools_ArrayTools;
ds_tools_ArrayTools.__name__ = "ds.tools.ArrayTools";
ds_tools_ArrayTools.alloc = function(len) {
	var a = new Array(len);
	return a;
};
ds_tools_ArrayTools.trim = function(a,len) {
	if(a.length > len) {
		a.length = len;
		return a;
	} else {
		return a;
	}
};
ds_tools_ArrayTools.swap = function(array,a,b) {
	if(a != b) {
		var x = array[a];
		array[a] = array[b];
		array[b] = x;
	}
};
ds_tools_ArrayTools.getFront = function(array,index) {
	if(index != 0) {
		var x = array[index];
		array[index] = array[0];
		array[0] = x;
	}
	return array[0];
};
ds_tools_ArrayTools.init = function(a,val,first,n) {
	if(n == null) {
		n = 0;
	}
	if(first == null) {
		first = 0;
	}
	var min = first;
	var max = n <= 0 ? a.length : min + n;
	while(min < max) a[min++] = val;
	return a;
};
ds_tools_ArrayTools.blit = function(src,srcPos,dst,dstPos,n) {
	if(n > 0) {
		if(src == dst) {
			if(srcPos < dstPos) {
				var i = srcPos + n;
				var j = dstPos + n;
				var _g = 0;
				var _g1 = n;
				while(_g < _g1) {
					var k = _g++;
					--i;
					--j;
					src[j] = src[i];
				}
			} else if(srcPos > dstPos) {
				var i = srcPos;
				var j = dstPos;
				var _g = 0;
				var _g1 = n;
				while(_g < _g1) {
					var k = _g++;
					src[j] = src[i];
					++i;
					++j;
				}
			}
		} else if(srcPos == 0 && dstPos == 0) {
			var _g = 0;
			var _g1 = n;
			while(_g < _g1) {
				var i = _g++;
				dst[i] = src[i];
			}
		} else if(srcPos == 0) {
			var _g = 0;
			var _g1 = n;
			while(_g < _g1) {
				var i = _g++;
				dst[dstPos + i] = src[i];
			}
		} else if(dstPos == 0) {
			var _g = 0;
			var _g1 = n;
			while(_g < _g1) {
				var i = _g++;
				dst[i] = src[srcPos + i];
			}
		} else {
			var _g = 0;
			var _g1 = n;
			while(_g < _g1) {
				var i = _g++;
				dst[dstPos + i] = src[srcPos + i];
			}
		}
	}
};
ds_tools_ArrayTools.iter = function(src,f,n) {
	if(n == null) {
		n = 0;
	}
	if(n == 0) {
		n = src.length;
	}
	var _g = 0;
	var _g1 = n;
	while(_g < _g1) {
		var i = _g++;
		f(src[i]);
	}
};
ds_tools_ArrayTools.forEach = function(src,f) {
	var n = src.length;
	var _g = 0;
	var _g1 = n;
	while(_g < _g1) {
		var i = _g++;
		src[i] = f(src[i],i);
	}
};
ds_tools_ArrayTools.binarySearchCmp = function(a,x,min,max,comparator) {
	var l = min;
	var m;
	var h = max + 1;
	while(l < h) {
		m = l + (h - l >> 1);
		if(comparator(a[m],x) < 0) {
			l = m + 1;
		} else {
			h = m;
		}
	}
	if(l <= max && comparator(a[l],x) == 0) {
		return l;
	} else {
		return ~l;
	}
};
ds_tools_ArrayTools.binarySearchf = function(a,x,min,max) {
	var l = min;
	var m;
	var h = max + 1;
	while(l < h) {
		m = l + (h - l >> 1);
		if(a[m] < x) {
			l = m + 1;
		} else {
			h = m;
		}
	}
	if(l <= max && a[l] == x) {
		return l;
	} else {
		return ~l;
	}
};
ds_tools_ArrayTools.binarySearchi = function(a,x,min,max) {
	var l = min;
	var m;
	var h = max + 1;
	while(l < h) {
		m = l + (h - l >> 1);
		if(a[m] < x) {
			l = m + 1;
		} else {
			h = m;
		}
	}
	if(l <= max && a[l] == x) {
		return l;
	} else {
		return ~l;
	}
};
ds_tools_ArrayTools.shuffle = function(a,rvals) {
	var s = a.length;
	if(rvals == null) {
		while(--s > 1) {
			var i = ds_tools_Shuffle.f() * s | 0;
			var t = a[s];
			a[s] = a[i];
			a[i] = t;
		}
	} else {
		var j = 0;
		while(--s > 1) {
			var i = rvals[j++] * s | 0;
			var t = a[s];
			a[s] = a[i];
			a[i] = t;
		}
	}
};
ds_tools_ArrayTools.random = function(a) {
	var k = a.length;
	if(k < 2) {
		return a[0];
	} else {
		return a[ds_tools_Shuffle.f() * k | 0];
	}
};
ds_tools_ArrayTools.sortRange = function(a,cmp,useInsertionSort,first,n) {
	var k = a.length;
	if(k > 1) {
		if(useInsertionSort) {
			var _g = first + 1;
			var _g1 = first + n;
			while(_g < _g1) {
				var i = _g++;
				var x = a[i];
				var j = i;
				while(j > first) {
					var y = a[j - 1];
					if(cmp(y,x) > 0) {
						a[j] = y;
						--j;
					} else {
						break;
					}
				}
				a[j] = x;
			}
		} else {
			ds_tools_ArrayTools._quickSort(a,first,n,cmp);
		}
	}
};
ds_tools_ArrayTools.quickPerm = function(n) {
	var results = [];
	var a = [];
	var p = [];
	var j;
	var t;
	var i = 0;
	while(i < n) {
		a[i] = i + 1;
		p[i] = 0;
		++i;
	}
	results.push(a.slice());
	i = 1;
	while(i < n) if(p[i] < i) {
		j = i % 2 * p[i];
		t = a[j];
		a[j] = a[i];
		a[i] = t;
		results.push(a.slice());
		p[i]++;
		i = 1;
	} else {
		p[i] = 0;
		++i;
	}
	return results;
};
ds_tools_ArrayTools.equals = function(a,b,eq) {
	if(a.length != b.length) {
		return false;
	}
	var i = 0;
	var k = a.length;
	while(i < k) {
		if(!eq(a[i],b[i])) {
			return false;
		}
		++i;
	}
	return true;
};
ds_tools_ArrayTools.split = function(a,n,k) {
	var out = [];
	var b = null;
	var _g = 0;
	var _g1 = n;
	while(_g < _g1) {
		var i = _g++;
		if(i % k == 0) {
			b = [];
			out[i / k | 0] = b;
		}
		b.push(a[i]);
	}
	return out;
};
ds_tools_ArrayTools.pairwise = function(input,visit,max) {
	var i = 0;
	while(i < max) {
		visit(i,input[i],input[i + 1]);
		i += 2;
	}
};
ds_tools_ArrayTools.bruteforce = function(input,visit) {
	var i = 0;
	var j;
	var k = input.length;
	var l = k - 1;
	var t;
	while(i < l) {
		t = input[i];
		j = i + 1;
		while(j < k) {
			visit(t,input[j]);
			++j;
		}
		++i;
	}
};
ds_tools_ArrayTools._quickSort = function(a,first,n,cmp) {
	var last = first + n - 1;
	var lo = first;
	var hi = last;
	if(n > 1) {
		var i0 = first;
		var i1 = i0 + (n >> 1);
		var i2 = i0 + n - 1;
		var t0 = a[i0];
		var t1 = a[i1];
		var t2 = a[i2];
		var mid;
		var t = cmp(t0,t2);
		if(t < 0 && cmp(t0,t1) < 0) {
			mid = cmp(t1,t2) < 0 ? i1 : i2;
		} else if(cmp(t1,t0) < 0 && cmp(t1,t2) < 0) {
			mid = t < 0 ? i0 : i2;
		} else {
			mid = cmp(t2,t0) < 0 ? i1 : i0;
		}
		var pivot = a[mid];
		a[mid] = a[first];
		while(lo < hi) {
			while(cmp(pivot,a[hi]) < 0 && lo < hi) --hi;
			if(hi != lo) {
				a[lo] = a[hi];
				++lo;
			}
			while(cmp(pivot,a[lo]) > 0 && lo < hi) ++lo;
			if(hi != lo) {
				a[hi] = a[lo];
				--hi;
			}
		}
		a[lo] = pivot;
		ds_tools_ArrayTools._quickSort(a,first,lo - first,cmp);
		ds_tools_ArrayTools._quickSort(a,lo + 1,last - lo,cmp);
	}
};
var ds_tools_Assert = function() { };
$hxClasses["ds.tools.Assert"] = ds_tools_Assert;
ds_tools_Assert.__name__ = "ds.tools.Assert";
var ds_tools_GrowthRate = function() { };
$hxClasses["ds.tools.GrowthRate"] = ds_tools_GrowthRate;
ds_tools_GrowthRate.__name__ = "ds.tools.GrowthRate";
ds_tools_GrowthRate.compute = function(rate,capacity) {
	if(rate > 0) {
		capacity += rate;
	} else {
		switch(rate) {
		case -3:
			capacity <<= 1;
			break;
		case -2:
			capacity = (capacity * 3 >> 1) + 1;
			break;
		case -1:
			var newSize = capacity + 1;
			capacity = (newSize >> 3) + (newSize < 9 ? 3 : 6);
			capacity += newSize;
			break;
		case 0:
			throw haxe_Exception.thrown("out of space");
		}
	}
	return capacity;
};
var ds_tools_NativeArrayTools = function() { };
$hxClasses["ds.tools.NativeArrayTools"] = ds_tools_NativeArrayTools;
ds_tools_NativeArrayTools.__name__ = "ds.tools.NativeArrayTools";
ds_tools_NativeArrayTools.alloc = function(len) {
	return new Array(len);
};
ds_tools_NativeArrayTools.get = function(src,index) {
	return src[index];
};
ds_tools_NativeArrayTools.set = function(dst,index,val) {
	dst[index] = val;
};
ds_tools_NativeArrayTools.size = function(a) {
	return a.length;
};
ds_tools_NativeArrayTools.toArray = function(src,first,len,dst) {
	if(len == 0) {
		return [];
	}
	var a = new Array(len);
	var out = a;
	if(first == 0) {
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			out[i] = src[i];
		}
	} else {
		var _g = first;
		var _g1 = first + len;
		while(_g < _g1) {
			var i = _g++;
			out[i - first] = src[i];
		}
	}
	return out;
};
ds_tools_NativeArrayTools.ofArray = function(src) {
	return src.slice(0,src.length);
};
ds_tools_NativeArrayTools.blit = function(src,srcPos,dst,dstPos,n) {
	if(n > 0) {
		if(src == dst) {
			if(srcPos < dstPos) {
				var i = srcPos + n;
				var j = dstPos + n;
				var _g = 0;
				var _g1 = n;
				while(_g < _g1) {
					var k = _g++;
					--i;
					--j;
					src[j] = src[i];
				}
			} else if(srcPos > dstPos) {
				var i = srcPos;
				var j = dstPos;
				var _g = 0;
				var _g1 = n;
				while(_g < _g1) {
					var k = _g++;
					src[j] = src[i];
					++i;
					++j;
				}
			}
		} else if(srcPos == 0 && dstPos == 0) {
			var _g = 0;
			var _g1 = n;
			while(_g < _g1) {
				var i = _g++;
				dst[i] = src[i];
			}
		} else if(srcPos == 0) {
			var _g = 0;
			var _g1 = n;
			while(_g < _g1) {
				var i = _g++;
				dst[dstPos + i] = src[i];
			}
		} else if(dstPos == 0) {
			var _g = 0;
			var _g1 = n;
			while(_g < _g1) {
				var i = _g++;
				dst[i] = src[srcPos + i];
			}
		} else {
			var _g = 0;
			var _g1 = n;
			while(_g < _g1) {
				var i = _g++;
				dst[dstPos + i] = src[srcPos + i];
			}
		}
	}
};
ds_tools_NativeArrayTools.copy = function(src) {
	return src.slice(0);
};
ds_tools_NativeArrayTools.zero = function(dst,first,n) {
	if(n == null) {
		n = 0;
	}
	if(first == null) {
		first = 0;
	}
	var min = first;
	var max = n <= 0 ? dst.length : min + n;
	var val = 0;
	while(min < max) dst[min++] = val;
	return dst;
};
ds_tools_NativeArrayTools.init = function(a,val,first,n) {
	if(n == null) {
		n = 0;
	}
	if(first == null) {
		first = 0;
	}
	var min = first;
	var max = n <= 0 ? a.length : min + n;
	while(min < max) a[min++] = val;
	return a;
};
ds_tools_NativeArrayTools.nullify = function(a,first,n) {
	if(n == null) {
		n = 0;
	}
	if(first == null) {
		first = 0;
	}
	var min = first;
	var max = n <= 0 ? a.length : min + n;
	while(min < max) a[min++] = null;
	return a;
};
ds_tools_NativeArrayTools.binarySearchCmp = function(a,val,min,max,cmp) {
	var l = min;
	var m;
	var h = max + 1;
	while(l < h) {
		m = l + (h - l >> 1);
		if(cmp(a[m],val) < 0) {
			l = m + 1;
		} else {
			h = m;
		}
	}
	if(l <= max && cmp(a[l],val) == 0) {
		return l;
	} else {
		return ~l;
	}
};
ds_tools_NativeArrayTools.binarySearchf = function(a,val,min,max) {
	var l = min;
	var m;
	var h = max + 1;
	while(l < h) {
		m = l + (h - l >> 1);
		if(a[m] < val) {
			l = m + 1;
		} else {
			h = m;
		}
	}
	if(l <= max && a[l] == val) {
		return l;
	} else {
		return ~l;
	}
};
ds_tools_NativeArrayTools.binarySearchi = function(a,val,min,max) {
	var l = min;
	var m;
	var h = max + 1;
	while(l < h) {
		m = l + (h - l >> 1);
		if(a[m] < val) {
			l = m + 1;
		} else {
			h = m;
		}
	}
	if(l <= max && a[l] == val) {
		return l;
	} else {
		return ~l;
	}
};
var ds_tools_Shuffle = function() { };
$hxClasses["ds.tools.Shuffle"] = ds_tools_Shuffle;
ds_tools_Shuffle.__name__ = "ds.tools.Shuffle";
ds_tools_Shuffle.f = function() {
	return Math.random();
};
ds_tools_Shuffle.setRandom = function(f) {
	ds_tools_Shuffle.f = f;
};
ds_tools_Shuffle.frand = function() {
	return ds_tools_Shuffle.f();
};
var gameboard__$Board_ResizeData = function(renderedForWidth,renderedForHeight,lastResized) {
	this.delayedResizeTimer = null;
	this.renderedForWidth = renderedForWidth;
	this.renderedForHeight = renderedForHeight;
	this.lastResized = lastResized;
};
$hxClasses["gameboard._Board.ResizeData"] = gameboard__$Board_ResizeData;
gameboard__$Board_ResizeData.__name__ = "gameboard._Board.ResizeData";
gameboard__$Board_ResizeData.prototype = {
	renderedForWidth: null
	,renderedForHeight: null
	,lastResized: null
	,delayedResizeTimer: null
	,__class__: gameboard__$Board_ResizeData
};
var haxe_ui_backend_ComponentSurface = function() {
};
$hxClasses["haxe.ui.backend.ComponentSurface"] = haxe_ui_backend_ComponentSurface;
haxe_ui_backend_ComponentSurface.__name__ = "haxe.ui.backend.ComponentSurface";
haxe_ui_backend_ComponentSurface.prototype = {
	__class__: haxe_ui_backend_ComponentSurface
};
var haxe_ui_core_ComponentCommon = function() {
	haxe_ui_backend_ComponentSurface.call(this);
};
$hxClasses["haxe.ui.core.ComponentCommon"] = haxe_ui_core_ComponentCommon;
haxe_ui_core_ComponentCommon.__name__ = "haxe.ui.core.ComponentCommon";
haxe_ui_core_ComponentCommon.__super__ = haxe_ui_backend_ComponentSurface;
haxe_ui_core_ComponentCommon.prototype = $extend(haxe_ui_backend_ComponentSurface.prototype,{
	handleDisabled: function(show) {
	}
	,getTextDisplay: function() {
		return null;
	}
	,hasTextDisplay: function() {
		return false;
	}
	,getTextInput: function() {
		return null;
	}
	,hasTextInput: function() {
		return false;
	}
	,getImageDisplay: function() {
		return null;
	}
	,hasImageDisplay: function() {
		return false;
	}
	,__class__: haxe_ui_core_ComponentCommon
});
var haxe_ui_core_IClonable = function() { };
$hxClasses["haxe.ui.core.IClonable"] = haxe_ui_core_IClonable;
haxe_ui_core_IClonable.__name__ = "haxe.ui.core.IClonable";
haxe_ui_core_IClonable.__isInterface__ = true;
haxe_ui_core_IClonable.prototype = {
	cloneComponent: null
	,self: null
	,postCloneComponent: null
	,__class__: haxe_ui_core_IClonable
};
var haxe_ui_core_ComponentContainer = function() {
	this._id = null;
	this._style = null;
	this._layoutLocked = false;
	this._layout = null;
	this._ready = false;
	this.parentComponent = null;
	haxe_ui_core_ComponentCommon.call(this);
	this.behaviours = new haxe_ui_behaviours_Behaviours(js_Boot.__cast(this , haxe_ui_core_Component));
};
$hxClasses["haxe.ui.core.ComponentContainer"] = haxe_ui_core_ComponentContainer;
haxe_ui_core_ComponentContainer.__name__ = "haxe.ui.core.ComponentContainer";
haxe_ui_core_ComponentContainer.__interfaces__ = [haxe_ui_core_IClonable];
haxe_ui_core_ComponentContainer.__super__ = haxe_ui_core_ComponentCommon;
haxe_ui_core_ComponentContainer.prototype = $extend(haxe_ui_core_ComponentCommon.prototype,{
	behaviours: null
	,parentComponent: null
	,dispatch: function(event) {
	}
	,_ready: null
	,isReady: null
	,get_isReady: function() {
		return this._ready;
	}
	,_children: null
	,childComponents: null
	,get_childComponents: function() {
		if(this._children == null) {
			return [];
		}
		return this._children;
	}
	,registerBehaviours: function() {
		this.behaviours.register("disabled",haxe_ui_core_ComponentDisabledBehaviour);
		this.behaviours.register("tooltip",haxe_ui_core_ComponentToolTipBehaviour,null);
		this.behaviours.register("tooltipRenderer",haxe_ui_core_ComponentToolTipRendererBehaviour,null);
		this.behaviours.register("text",haxe_ui_core_ComponentTextBehaviour);
		this.behaviours.register("value",haxe_ui_core_ComponentValueBehaviour);
	}
	,addComponent: function(child) {
		return null;
	}
	,addComponentAt: function(child,index) {
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,moveComponentToBack: function() {
		if(this.parentComponent == null || this.parentComponent.get_numComponents() <= 1) {
			return;
		}
		this.parentComponent.setComponentIndex(this,0);
	}
	,moveComponentBackward: function() {
		if(this.parentComponent == null || this.parentComponent.get_numComponents() <= 1) {
			return;
		}
		var index = this.parentComponent.getComponentIndex(this);
		if(index == 0) {
			return;
		}
		this.parentComponent.setComponentIndex(this,index - 1);
	}
	,moveComponentToFront: function() {
		if(this.parentComponent == null || this.parentComponent.get_numComponents() <= 1) {
			return;
		}
		this.parentComponent.setComponentIndex(this,this.parentComponent.get_numComponents() - 1);
	}
	,moveComponentFrontward: function() {
		if(this.parentComponent == null || this.parentComponent.get_numComponents() <= 1) {
			return;
		}
		var index = this.parentComponent.getComponentIndex(this);
		if(index == this.parentComponent.get_numComponents() - 1) {
			return;
		}
		this.parentComponent.setComponentIndex(this,index + 1);
	}
	,bottomComponent: null
	,get_bottomComponent: function() {
		if(this._children == null || this._children.length == 0) {
			return null;
		}
		return this._children[0];
	}
	,topComponent: null
	,get_topComponent: function() {
		if(this._children == null || this._children.length == 0) {
			return null;
		}
		return this._children[this._children.length - 1];
	}
	,postCloneComponent: function(c) {
	}
	,_layout: null
	,_layoutLocked: null
	,_style: null
	,_id: null
	,get_id: function() {
		return this._id;
	}
	,set_id: function(value) {
		if(this._id != value) {
			this._id = value;
		}
		return this._id;
	}
	,get_disabled: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("disabled"));
	}
	,set_disabled: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("disabled",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"disabled"));
		return value;
	}
	,get_tooltip: function() {
		return this.behaviours.getDynamic("tooltip");
	}
	,set_tooltip: function(value) {
		this.behaviours.setDynamic("tooltip",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"tooltip"));
		return value;
	}
	,get_tooltipRenderer: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("tooltipRenderer"));
	}
	,set_tooltipRenderer: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("tooltipRenderer",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"tooltipRenderer"));
		return value;
	}
	,get_text: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("text"));
	}
	,set_text: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"text",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("text",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"text"));
		return value;
	}
	,get_value: function() {
		return this.behaviours.getDynamic("value");
	}
	,set_value: function(value) {
		this.behaviours.setDynamic("value",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,cloneComponent: function() {
		var c = this.self();
		if(this.get_id() != null) {
			c.set_id(this.get_id());
		}
		c.set_disabled(this.get_disabled());
		if(this.get_tooltip() != null) {
			c.set_tooltip(this.get_tooltip());
		}
		if(this.get_tooltipRenderer() != null) {
			c.set_tooltipRenderer(this.get_tooltipRenderer());
		}
		if(this.get_text() != null) {
			c.set_text(this.get_text());
		}
		if(this.get_value() != null) {
			c.set_value(this.get_value());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentContainer();
	}
	,__class__: haxe_ui_core_ComponentContainer
	,__properties__: {set_value:"set_value",get_value:"get_value",set_text:"set_text",get_text:"get_text",set_tooltipRenderer:"set_tooltipRenderer",get_tooltipRenderer:"get_tooltipRenderer",set_tooltip:"set_tooltip",get_tooltip:"get_tooltip",set_disabled:"set_disabled",get_disabled:"get_disabled",set_id:"set_id",get_id:"get_id",get_topComponent:"get_topComponent",get_bottomComponent:"get_bottomComponent",get_childComponents:"get_childComponents",get_isReady:"get_isReady"}
});
var haxe_ui_core_ComponentEvents = function() {
	this._pausedEvents = null;
	this._lastCursor = null;
	this._interactivityDisabledCounter = 0;
	this._interactivityDisabled = false;
	this._internalEventsClass = null;
	this._internalEvents = null;
	haxe_ui_core_ComponentContainer.call(this);
};
$hxClasses["haxe.ui.core.ComponentEvents"] = haxe_ui_core_ComponentEvents;
haxe_ui_core_ComponentEvents.__name__ = "haxe.ui.core.ComponentEvents";
haxe_ui_core_ComponentEvents.__super__ = haxe_ui_core_ComponentContainer;
haxe_ui_core_ComponentEvents.prototype = $extend(haxe_ui_core_ComponentContainer.prototype,{
	_internalEvents: null
	,_internalEventsClass: null
	,registerInternalEvents: function(eventsClass,reregister) {
		if(reregister == null) {
			reregister = false;
		}
		if(this._internalEvents == null && eventsClass != null) {
			this._internalEvents = Type.createInstance(eventsClass,[this]);
			this._internalEvents.register();
		}
		if(reregister == true && this._internalEvents != null) {
			this._internalEvents.register();
		}
	}
	,unregisterInternalEvents: function() {
		if(this._internalEvents == null) {
			return;
		}
		this._internalEvents.unregister();
		this._internalEvents = null;
	}
	,__events: null
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if((js_Boot.__cast(this , haxe_ui_core_Component)).classes.indexOf(":mobile") != -1 && (type == "mouseover" || type == "mouseout")) {
			return;
		}
		if(this.get_disabled() == true && this.isInteractiveEvent(type) == true) {
			if(this._disabledEvents == null) {
				this._disabledEvents = new haxe_ui_util_EventMap();
			}
			this._disabledEvents.add(type,listener,priority);
			return;
		}
		if(this.__events == null) {
			this.__events = new haxe_ui_util_EventMap();
		}
		if(this.__events.add(type,listener,priority) == true) {
			this.mapEvent(type,$bind(this,this._onMappedEvent));
		}
	}
	,hasEvent: function(type,listener) {
		if(this.__events == null) {
			return false;
		}
		return this.__events.contains(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this._disabledEvents != null && !this._interactivityDisabled) {
			this._disabledEvents.remove(type,listener);
		}
		if(this.__events != null) {
			if(this.__events.remove(type,listener) == true) {
				this.unmapEvent(type,$bind(this,this._onMappedEvent));
			}
		}
	}
	,dispatch: function(event) {
		if(event != null) {
			if(this.__events != null) {
				this.__events.invoke(event.type,event,js_Boot.__cast(this , haxe_ui_core_Component));
			}
			if(event.bubble == true && event.canceled == false && this.parentComponent != null) {
				this.parentComponent.dispatch(event);
			}
		}
	}
	,dispatchRecursively: function(event) {
		this.dispatch(event);
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.dispatchRecursively(event);
		}
	}
	,dispatchRecursivelyWhen: function(event,condition) {
		if(condition(this) == true) {
			this.dispatch(event);
		}
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(condition(child) == true) {
				child.dispatchRecursivelyWhen(event,condition);
			}
		}
	}
	,_onMappedEvent: function(event) {
		this.dispatch(event);
	}
	,_disabledEvents: null
	,isInteractiveEvent: function(type) {
		return haxe_ui_core_ComponentEvents.INTERACTIVE_EVENTS.indexOf(type) != -1;
	}
	,disableInteractiveEvents: function(disable) {
		if(disable == true) {
			if(this.__events != null) {
				var eventType = this.__events.keys();
				while(eventType.hasNext()) {
					var eventType1 = eventType.next();
					if(!this.isInteractiveEvent(eventType1)) {
						continue;
					}
					var listeners = this.__events.listeners(eventType1);
					if(listeners != null) {
						var listener = listeners.copy().iterator();
						while(listener.hasNext()) {
							var listener1 = listener.next();
							if(this._disabledEvents == null) {
								this._disabledEvents = new haxe_ui_util_EventMap();
							}
							this._disabledEvents.add(eventType1,haxe_ui_util_Listener.toFunc(listener1));
							this.unregisterEvent(eventType1,haxe_ui_util_Listener.toFunc(listener1));
						}
					}
				}
			}
		} else if(this._disabledEvents != null) {
			var eventType = this._disabledEvents.keys();
			while(eventType.hasNext()) {
				var eventType1 = eventType.next();
				var listeners = this._disabledEvents.listeners(eventType1);
				if(listeners != null) {
					var listener = listeners.copy().iterator();
					while(listener.hasNext()) {
						var listener1 = listener.next();
						this.registerEvent(eventType1,haxe_ui_util_Listener.toFunc(listener1));
					}
				}
			}
			this._disabledEvents = null;
		}
	}
	,_interactivityDisabled: null
	,_interactivityDisabledCounter: null
	,_lastCursor: null
	,disableInteractivity: function(disable,recursive,updateStyle,force) {
		if(force == null) {
			force = false;
		}
		if(updateStyle == null) {
			updateStyle = false;
		}
		if(recursive == null) {
			recursive = true;
		}
		if(force == true) {
			this._interactivityDisabledCounter = 0;
		}
		if(disable == true) {
			this._interactivityDisabledCounter++;
		} else {
			this._interactivityDisabledCounter--;
		}
		if(this._interactivityDisabledCounter > 0 && this._interactivityDisabled == false) {
			this._interactivityDisabled = true;
			if(updateStyle == true) {
				(js_Boot.__cast(this , haxe_ui_core_Component)).swapClass(":disabled",":hover");
			}
			this.handleDisabled(true);
			this.disableInteractiveEvents(true);
			this.dispatch(new haxe_ui_events_UIEvent("disabled"));
			this._lastCursor = (js_Boot.__cast(this , haxe_ui_core_Component)).element.style.cursor;
			(js_Boot.__cast(this , haxe_ui_core_Component)).element.style.removeProperty("cursor");
		} else if(this._interactivityDisabledCounter < 1 && this._interactivityDisabled == true) {
			this._interactivityDisabled = false;
			if(updateStyle == true) {
				(js_Boot.__cast(this , haxe_ui_core_Component)).removeClass(":disabled");
			}
			this.handleDisabled(false);
			this.disableInteractiveEvents(false);
			this.dispatch(new haxe_ui_events_UIEvent("enabled"));
			if(this._lastCursor != null) {
				(js_Boot.__cast(this , haxe_ui_core_Component)).element.style.cursor = this._lastCursor;
			}
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.disableInteractivity(disable,recursive,updateStyle);
			}
		}
	}
	,unregisterEvents: function() {
		if(this.__events != null) {
			var copy = [];
			var eventType = this.__events.keys();
			while(eventType.hasNext()) {
				var eventType1 = eventType.next();
				copy.push(eventType1);
			}
			var _g = 0;
			while(_g < copy.length) {
				var eventType = copy[_g];
				++_g;
				var listeners = this.__events.listeners(eventType);
				if(listeners != null) {
					var listener = listeners.iterator();
					while(listener.hasNext()) {
						var listener1 = listener.next();
						if(listener1 != null) {
							if(this.__events.remove(eventType,haxe_ui_util_Listener.toFunc(listener1)) == true) {
								this.unmapEvent(eventType,$bind(this,this._onMappedEvent));
							}
						}
					}
				}
			}
		}
	}
	,_pausedEvents: null
	,pauseEvent: function(type,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this.__events == null || this.__events.contains(type) == false) {
			return;
		}
		if(this._pausedEvents == null) {
			this._pausedEvents = new haxe_ds_StringMap();
		}
		var pausedList = this._pausedEvents.h[type];
		if(pausedList == null) {
			pausedList = [];
			this._pausedEvents.h[type] = pausedList;
		}
		var listeners = this.__events.listeners(type).copy();
		var l = listeners.iterator();
		while(l.hasNext()) {
			var l1 = l.next();
			pausedList.push(haxe_ui_util_Listener.toFunc(l1));
			this.unregisterEvent(type,haxe_ui_util_Listener.toFunc(l1));
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.pauseEvent(type,recursive);
			}
		}
	}
	,resumeEvent: function(type,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		var _gthis = this;
		if(this.__events == null) {
			return;
		}
		if(this._pausedEvents == null) {
			return;
		}
		if(Object.prototype.hasOwnProperty.call(this._pausedEvents.h,type) == false) {
			return;
		}
		haxe_ui_Toolkit.callLater(function() {
			var pausedList = _gthis._pausedEvents.h[type];
			var _g = 0;
			while(_g < pausedList.length) {
				var l = pausedList[_g];
				++_g;
				_gthis.registerEvent(type,l);
			}
			var _this = _gthis._pausedEvents;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
		});
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.resumeEvent(type,recursive);
			}
		}
	}
	,mapEvent: function(type,listener) {
	}
	,unmapEvent: function(type,listener) {
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentContainer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentContainer.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentEvents();
	}
	,__class__: haxe_ui_core_ComponentEvents
});
var haxe_ui_core_ComponentValidation = function() {
	this._depth = -1;
	this._invalidateCount = 0;
	this._isDisposed = false;
	this._isInitialized = false;
	this._isValidating = false;
	this._isAllInvalid = false;
	this._delayedInvalidationFlags = new haxe_ds_StringMap();
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_core_ComponentEvents.call(this);
};
$hxClasses["haxe.ui.core.ComponentValidation"] = haxe_ui_core_ComponentValidation;
haxe_ui_core_ComponentValidation.__name__ = "haxe.ui.core.ComponentValidation";
haxe_ui_core_ComponentValidation.__super__ = haxe_ui_core_ComponentEvents;
haxe_ui_core_ComponentValidation.prototype = $extend(haxe_ui_core_ComponentEvents.prototype,{
	_invalidationFlags: null
	,_delayedInvalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,_isInitialized: null
	,_isDisposed: null
	,_invalidateCount: null
	,_depth: null
	,get_depth: function() {
		return this._depth;
	}
	,set_depth: function(value) {
		if(this._depth == value) {
			return value;
		}
		this._depth = value;
		return value;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var h = this._invalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				return true;
			}
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	,invalidateComponent: function(flag,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(flag == null) {
			flag = "all";
		}
		if(this._ready == false) {
			return;
		}
		var isAlreadyInvalid = this.isComponentInvalid(flag);
		var isAlreadyDelayedInvalid = false;
		if(this._isValidating == true) {
			var h = this._delayedInvalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				isAlreadyDelayedInvalid = true;
				break;
			}
		}
		if(flag == "all") {
			if(this._isValidating == true) {
				this._delayedInvalidationFlags.h["all"] = true;
			} else {
				this._isAllInvalid = true;
			}
		} else if(this._isValidating == true) {
			this._delayedInvalidationFlags.h[flag] = true;
		} else if(flag != "all" && !Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
		}
		if(this._isValidating == true) {
			if(isAlreadyDelayedInvalid == true) {
				return;
			}
			this._invalidateCount++;
			if(this._invalidateCount >= 10) {
				throw haxe_Exception.thrown("The validation queue returned too many times during validation. This may be an infinite loop. Try to avoid doing anything that calls invalidate() during validation.");
			}
			haxe_ui_validation_ValidationManager.get_instance().add(js_Boot.__cast(this , haxe_ui_core_Component));
			return;
		} else if(isAlreadyInvalid == true) {
			if(recursive == true) {
				var _g = 0;
				var _g1 = this._children == null ? [] : this._children;
				while(_g < _g1.length) {
					var child = _g1[_g];
					++_g;
					child.invalidateComponent(flag,recursive);
				}
			}
			return;
		}
		this._invalidateCount = 0;
		haxe_ui_validation_ValidationManager.get_instance().add(js_Boot.__cast(this , haxe_ui_core_Component));
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.invalidateComponent(flag,recursive);
			}
		}
	}
	,invalidateComponentData: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		this.invalidateComponent("data",recursive);
	}
	,invalidateComponentLayout: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this._layout == null || this._layoutLocked == true) {
			return;
		}
		this.invalidateComponent("layout",recursive);
	}
	,invalidateComponentPosition: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		this.invalidateComponent("position",recursive);
	}
	,invalidateComponentDisplay: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		this.invalidateComponent("display",recursive);
	}
	,invalidateComponentStyle: function(force,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(force == null) {
			force = false;
		}
		this.invalidateComponent("style",recursive);
		if(force == true) {
			this._style = null;
		}
	}
	,validateComponent: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._ready == false || this._isDisposed == true || this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		var isInitialized = this._isInitialized;
		if(isInitialized == false) {
			this.initializeComponent();
		}
		this._isValidating = true;
		this.validateComponentInternal(nextFrame);
		this.validateInitialSize(isInitialized);
		this._invalidationFlags.h = Object.create(null);
		this._isAllInvalid = false;
		var h = this._delayedInvalidationFlags.h;
		var flag_h = h;
		var flag_keys = Object.keys(h);
		var flag_length = flag_keys.length;
		var flag_current = 0;
		while(flag_current < flag_length) {
			var flag = flag_keys[flag_current++];
			if(flag == "all") {
				this._isAllInvalid = true;
			} else {
				this._invalidationFlags.h[flag] = true;
			}
		}
		this._delayedInvalidationFlags.h = Object.create(null);
		this._isValidating = false;
	}
	,validateNow: function() {
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.validateNow();
		}
		this.invalidateComponent();
		this.syncComponentValidation(false);
	}
	,syncComponentValidation: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		var count = 0;
		while(this.isComponentInvalid()) {
			this.validateComponent(nextFrame);
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.syncComponentValidation(nextFrame);
			}
			if(++count >= 10) {
				if(this._isDisposed) {
					var c = js_Boot.getClass(this);
					throw haxe_Exception.thrown("There was a problem validating this component as it has already been destroyed (" + c.__name__ + "#" + this.get_id() + ")");
				} else {
					var c1 = js_Boot.getClass(this);
					throw haxe_Exception.thrown("The syncValidation returned too many times during validation. This may be an infinite loop. Try to avoid doing anything that calls invalidate() during validation (" + c1.__name__ + "#" + this.get_id() + ").");
				}
			}
		}
	}
	,validateComponentInternal: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		var dataInvalid = this.isComponentInvalid("data");
		var styleInvalid = this.isComponentInvalid("style");
		var textDisplayInvalid = this.isComponentInvalid("textDisplay") && this.hasTextDisplay();
		var textInputInvalid = this.isComponentInvalid("textInput") && this.hasTextInput();
		var imageDisplayInvalid = this.isComponentInvalid("imageDisplay") && this.hasImageDisplay();
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		var layoutInvalid = this.isComponentInvalid("layout") && this._layoutLocked == false;
		if(dataInvalid) {
			this.validateComponentData();
		}
		if(styleInvalid) {
			this.validateComponentStyle();
		}
		if(textDisplayInvalid) {
			this.getTextDisplay().validateComponent();
		}
		if(textInputInvalid) {
			this.getTextInput().validateComponent();
		}
		if(imageDisplayInvalid) {
			this.getImageDisplay().validateComponent();
		}
		if(positionInvalid) {
			this.validateComponentPosition();
		}
		if(layoutInvalid) {
			if(this.validateComponentLayout()) {
				displayInvalid = true;
			}
		}
		if(displayInvalid || styleInvalid) {
			haxe_ui_validation_ValidationManager.get_instance().addDisplay(js_Boot.__cast(this , haxe_ui_core_Component),nextFrame);
		}
	}
	,initializeComponent: function() {
	}
	,validateInitialSize: function(isInitialized) {
	}
	,validateComponentData: function() {
	}
	,validateComponentLayout: function() {
		return false;
	}
	,validateComponentStyle: function() {
	}
	,validateComponentPosition: function() {
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentEvents.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentEvents.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentValidation();
	}
	,__class__: haxe_ui_core_ComponentValidation
	,__properties__: $extend(haxe_ui_core_ComponentEvents.prototype.__properties__,{set_depth:"set_depth",get_depth:"get_depth"})
});
var haxe_ui_core_ComponentLayout = function() {
	haxe_ui_core_ComponentValidation.call(this);
};
$hxClasses["haxe.ui.core.ComponentLayout"] = haxe_ui_core_ComponentLayout;
haxe_ui_core_ComponentLayout.__name__ = "haxe.ui.core.ComponentLayout";
haxe_ui_core_ComponentLayout.__super__ = haxe_ui_core_ComponentValidation;
haxe_ui_core_ComponentLayout.prototype = $extend(haxe_ui_core_ComponentValidation.prototype,{
	get_style: function() {
		return this._style;
	}
	,set_style: function(value) {
		this._style = value;
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentValidation.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentValidation.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentLayout();
	}
	,__class__: haxe_ui_core_ComponentLayout
	,__properties__: $extend(haxe_ui_core_ComponentValidation.prototype.__properties__,{set_style:"set_style",get_style:"get_style"})
});
var haxe_ui_core_ComponentBounds = function() {
	this._componentClipRect = null;
	this._top = 0;
	this._left = 0;
	this._hasScreen = null;
	this._cachedPercentHeight = null;
	this._cachedPercentWidth = null;
	haxe_ui_core_ComponentLayout.call(this);
};
$hxClasses["haxe.ui.core.ComponentBounds"] = haxe_ui_core_ComponentBounds;
haxe_ui_core_ComponentBounds.__name__ = "haxe.ui.core.ComponentBounds";
haxe_ui_core_ComponentBounds.__super__ = haxe_ui_core_ComponentLayout;
haxe_ui_core_ComponentBounds.prototype = $extend(haxe_ui_core_ComponentLayout.prototype,{
	autoWidth: null
	,get_autoWidth: function() {
		if(this._percentWidth != null || this._width != null) {
			return false;
		}
		if(this.get_style() == null) {
			return true;
		}
		if(this.get_style().autoWidth == null) {
			return false;
		}
		return this.get_style().autoWidth;
	}
	,autoHeight: null
	,get_autoHeight: function() {
		if(this._percentHeight != null || this._height != null || this.get_style() == null) {
			return false;
		}
		if(this.get_style().autoHeight == null) {
			return false;
		}
		return this.get_style().autoHeight;
	}
	,resizeComponent: function(w,h) {
		var invalidate = false;
		if(w != null && this._componentWidth != w) {
			this._componentWidth = w;
			invalidate = true;
		}
		if(h != null && this._componentHeight != h) {
			this._componentHeight = h;
			invalidate = true;
		}
		if(invalidate == true && this.isComponentInvalid("layout") == false) {
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
	}
	,actualComponentWidth: null
	,get_actualComponentWidth: function() {
		return this.get_componentWidth() * haxe_ui_Toolkit.get_scaleX();
	}
	,actualComponentHeight: null
	,get_actualComponentHeight: function() {
		return this.get_componentHeight() * haxe_ui_Toolkit.get_scaleY();
	}
	,_componentWidth: null
	,get_componentWidth: function() {
		if(this._componentWidth == null) {
			return 0;
		}
		return this._componentWidth;
	}
	,set_componentWidth: function(value) {
		this.resizeComponent(value,null);
		return value;
	}
	,_componentHeight: null
	,get_componentHeight: function() {
		if(this._componentHeight == null) {
			return 0;
		}
		return this._componentHeight;
	}
	,set_componentHeight: function(value) {
		this.resizeComponent(null,value);
		return value;
	}
	,_percentWidth: null
	,get_percentWidth: function() {
		return this._percentWidth;
	}
	,set_percentWidth: function(value) {
		if(this._percentWidth == value) {
			return value;
		}
		this._percentWidth = value;
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		} else {
			haxe_ui_core_Screen.get_instance().resizeRootComponents();
		}
		return value;
	}
	,_percentHeight: null
	,get_percentHeight: function() {
		return this._percentHeight;
	}
	,set_percentHeight: function(value) {
		if(this._percentHeight == value) {
			return value;
		}
		this._percentHeight = value;
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		} else {
			haxe_ui_core_Screen.get_instance().resizeRootComponents();
		}
		return value;
	}
	,_cachedPercentWidth: null
	,_cachedPercentHeight: null
	,cachePercentSizes: function(clearExisting) {
		if(clearExisting == null) {
			clearExisting = true;
		}
		if(this._percentWidth != null) {
			this._cachedPercentWidth = this._percentWidth;
			if(clearExisting == true) {
				this._percentWidth = null;
			}
		}
		if(this._percentHeight != null) {
			this._cachedPercentHeight = this._percentHeight;
			if(clearExisting == true) {
				this._percentHeight = null;
			}
		}
	}
	,restorePercentSizes: function() {
		if(this._cachedPercentWidth != null) {
			this.set_percentWidth(this._cachedPercentWidth);
		}
		if(this._cachedPercentHeight != null) {
			this.set_percentHeight(this._cachedPercentHeight);
		}
	}
	,_width: null
	,set_width: function(value) {
		if(this._width == value) {
			return value;
		}
		this._width = value;
		this.set_componentWidth(value);
		return value;
	}
	,get_width: function() {
		var f = this.get_componentWidth();
		return f;
	}
	,_height: null
	,set_height: function(value) {
		if(this._height == value) {
			return value;
		}
		this._height = value;
		this.set_componentHeight(value);
		return value;
	}
	,get_height: function() {
		var f = this.get_componentHeight();
		return f;
	}
	,_actualWidth: null
	,_actualHeight: null
	,_hasScreen: null
	,hasScreen: null
	,get_hasScreen: function() {
		var p = this;
		while(p != null) {
			if(p._hasScreen == false) {
				return false;
			}
			p = p.parentComponent;
		}
		return true;
	}
	,hitTest: function(left,top,allowZeroSized) {
		if(allowZeroSized == null) {
			allowZeroSized = false;
		}
		if(this.get_hasScreen() == false) {
			return false;
		}
		left *= haxe_ui_Toolkit.get_scale();
		top *= haxe_ui_Toolkit.get_scale();
		var b = false;
		var sx = this.get_screenLeft();
		var sy = this.get_screenTop();
		var cx = 0;
		if(this.get_componentWidth() != null) {
			cx = this.get_actualComponentWidth();
		}
		var cy = 0;
		if(this.get_componentHeight() != null) {
			cy = this.get_actualComponentHeight();
		}
		if(allowZeroSized == true) {
			if(this.get_width() <= 0 || this.get_height() <= 0) {
				return true;
			}
		}
		if(left >= sx && left < sx + cx && top >= sy && top < sy + cy) {
			b = true;
		}
		return b;
	}
	,autoSize: function() {
		if(this._ready == false || this._layout == null) {
			return false;
		}
		return this._layout.autoSize();
	}
	,moveComponent: function(left,top) {
		var invalidate = false;
		if(left != null && this._left != left) {
			this._left = left;
			invalidate = true;
		}
		if(top != null && this._top != top) {
			this._top = top;
			invalidate = true;
		}
		if(invalidate == true && this.isComponentInvalid("position") == false) {
			this.invalidateComponent("position",false);
		}
	}
	,_left: null
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		this.moveComponent(value,null);
		return value;
	}
	,_top: null
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		this.moveComponent(null,value);
		return value;
	}
	,screenLeft: null
	,get_screenLeft: function() {
		var c = this;
		var xpos = 0;
		while(c != null) {
			var l = c.get_left();
			if(c.parentComponent != null) {
				l *= haxe_ui_Toolkit.get_scale();
			}
			xpos += l;
			if(c.get_componentClipRect() != null) {
				xpos -= c.get_componentClipRect().left * haxe_ui_Toolkit.get_scaleX();
			}
			c = c.parentComponent;
		}
		return xpos;
	}
	,screenTop: null
	,get_screenTop: function() {
		var c = this;
		var ypos = 0;
		while(c != null) {
			var t = c.get_top();
			if(c.parentComponent != null) {
				t *= haxe_ui_Toolkit.get_scale();
			}
			ypos += t;
			if(c.get_componentClipRect() != null) {
				ypos -= c.get_componentClipRect().top * haxe_ui_Toolkit.get_scaleY();
			}
			c = c.parentComponent;
		}
		return ypos;
	}
	,_componentClipRect: null
	,get_componentClipRect: function() {
		if(this.get_style() != null && this.get_style().clip != null && this.get_style().clip == true) {
			return new haxe_ui_geom_Rectangle(0,0,this.get_componentWidth(),this.get_componentHeight());
		}
		return this._componentClipRect;
	}
	,set_componentClipRect: function(value) {
		this._componentClipRect = value;
		this.invalidateComponent("display",false);
		return value;
	}
	,isComponentClipped: null
	,get_isComponentClipped: function() {
		return this.get_componentClipRect() != null;
	}
	,isComponentOffscreen: null
	,get_isComponentOffscreen: function() {
		if(this.get_width() == 0 && this.get_height() == 0) {
			return false;
		}
		var x = this.get_screenLeft();
		var y = this.get_screenTop();
		var w = this.get_width();
		var h = this.get_height();
		var thisRect = new haxe_ui_geom_Rectangle(x,y,w,h);
		var screenRect = new haxe_ui_geom_Rectangle(0,0,haxe_ui_core_Screen.get_instance().get_width(),haxe_ui_core_Screen.get_instance().get_height());
		return !screenRect.intersects(thisRect);
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentLayout.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentLayout.prototype.cloneComponent.call(this);
		if(this.get_componentWidth() != null) {
			c.set_componentWidth(this.get_componentWidth());
		}
		if(this.get_componentHeight() != null) {
			c.set_componentHeight(this.get_componentHeight());
		}
		if(this.get_percentWidth() != null) {
			c.set_percentWidth(this.get_percentWidth());
		}
		if(this.get_percentHeight() != null) {
			c.set_percentHeight(this.get_percentHeight());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentBounds();
	}
	,__class__: haxe_ui_core_ComponentBounds
	,__properties__: $extend(haxe_ui_core_ComponentLayout.prototype.__properties__,{get_isComponentOffscreen:"get_isComponentOffscreen",get_isComponentClipped:"get_isComponentClipped",set_componentClipRect:"set_componentClipRect",get_componentClipRect:"get_componentClipRect",get_screenTop:"get_screenTop",get_screenLeft:"get_screenLeft",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left",get_hasScreen:"get_hasScreen",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_percentHeight:"set_percentHeight",get_percentHeight:"get_percentHeight",set_percentWidth:"set_percentWidth",get_percentWidth:"get_percentWidth",set_componentHeight:"set_componentHeight",get_componentHeight:"get_componentHeight",set_componentWidth:"set_componentWidth",get_componentWidth:"get_componentWidth",get_actualComponentHeight:"get_actualComponentHeight",get_actualComponentWidth:"get_actualComponentWidth",get_autoHeight:"get_autoHeight",get_autoWidth:"get_autoWidth"})
});
var haxe_ui_backend_ComponentBase = function() {
	this._nativeClassName = null;
	this._nodeName = null;
	this._className = null;
	haxe_ui_core_ComponentBounds.call(this);
};
$hxClasses["haxe.ui.backend.ComponentBase"] = haxe_ui_backend_ComponentBase;
haxe_ui_backend_ComponentBase.__name__ = "haxe.ui.backend.ComponentBase";
haxe_ui_backend_ComponentBase.__super__ = haxe_ui_core_ComponentBounds;
haxe_ui_backend_ComponentBase.prototype = $extend(haxe_ui_core_ComponentBounds.prototype,{
	handleCreate: function(native) {
	}
	,handlePosition: function(left,top,style) {
	}
	,handleSize: function(width,height,style) {
	}
	,handleReady: function() {
	}
	,handleClipRect: function(value) {
	}
	,handleVisibility: function(show) {
	}
	,getComponentOffset: function() {
		return new haxe_ui_geom_Point(0,0);
	}
	,isNativeScroller: null
	,get_isNativeScroller: function() {
		return false;
	}
	,isScroller: null
	,get_isScroller: function() {
		return false;
	}
	,handleFrameworkProperty: function(id,value) {
	}
	,handleSetComponentIndex: function(child,index) {
	}
	,handleAddComponent: function(child) {
		return child;
	}
	,handleAddComponentAt: function(child,index) {
		return child;
	}
	,handleRemoveComponent: function(child,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return child;
	}
	,handleRemoveComponentAt: function(index,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,applyStyle: function(style) {
	}
	,mapEvent: function(type,listener) {
	}
	,unmapEvent: function(type,listener) {
	}
	,_textDisplay: null
	,createTextDisplay: function(text) {
		if(this._textDisplay == null) {
			this._textDisplay = new haxe_ui_core_TextDisplay();
			this._textDisplay.parentComponent = js_Boot.__cast(this , haxe_ui_core_Component);
		}
		if(text != null) {
			this._textDisplay.set_text(text);
		}
		return this._textDisplay;
	}
	,getTextDisplay: function() {
		return this.createTextDisplay();
	}
	,hasTextDisplay: function() {
		return this._textDisplay != null;
	}
	,_textInput: null
	,createTextInput: function(text) {
		if(this._textInput == null) {
			this._textInput = new haxe_ui_core_TextInput();
			this._textInput.parentComponent = js_Boot.__cast(this , haxe_ui_core_Component);
		}
		if(text != null) {
			this._textInput.set_text(text);
		}
		return this._textInput;
	}
	,getTextInput: function() {
		return this.createTextInput();
	}
	,hasTextInput: function() {
		return this._textInput != null;
	}
	,_imageDisplay: null
	,createImageDisplay: function() {
		if(this._imageDisplay == null) {
			this._imageDisplay = new haxe_ui_core_ImageDisplay();
			this._imageDisplay.parentComponent = js_Boot.__cast(this , haxe_ui_core_Component);
		}
		return this._imageDisplay;
	}
	,getImageDisplay: function() {
		return this.createImageDisplay();
	}
	,hasImageDisplay: function() {
		return this._imageDisplay != null;
	}
	,removeImageDisplay: function() {
		if(this._imageDisplay != null) {
			this._imageDisplay.dispose();
			this._imageDisplay = null;
		}
	}
	,handlePreReposition: function() {
	}
	,handlePostReposition: function() {
	}
	,getClassProperty: function(name) {
		var v = null;
		if(this._classProperties != null) {
			v = this._classProperties.h[name];
		}
		if(v == null) {
			var c = js_Boot.getClass(this);
			var c1 = c.__name__.toLowerCase() + "." + name;
			v = haxe_ui_Toolkit.properties.h[c1];
		}
		return v;
	}
	,_classProperties: null
	,setClassProperty: function(name,value) {
		if(this._classProperties == null) {
			this._classProperties = new haxe_ds_StringMap();
		}
		this._classProperties.h[name] = value;
	}
	,_hasNativeEntry: null
	,hasNativeEntry: null
	,get_hasNativeEntry: function() {
		if(this._hasNativeEntry == null) {
			this._hasNativeEntry = this.getNativeConfigProperty(".@id") != null;
		}
		return this._hasNativeEntry;
	}
	,getNativeConfigProperty: function(query,defaultValue) {
		query = "component[id=" + this.get_nativeClassName() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.query(query,defaultValue,this);
	}
	,getNativeConfigPropertyBool: function(query,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		query = "component[id=" + this.get_nativeClassName() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.queryBool(query,defaultValue,this);
	}
	,getNativeConfigProperties: function(query) {
		if(query == null) {
			query = "";
		}
		query = "component[id=" + this.get_nativeClassName() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.queryValues(query,this);
	}
	,_className: null
	,className: null
	,get_className: function() {
		if(this._className != null) {
			return this._className;
		}
		var c = js_Boot.getClass(this);
		this._className = c.__name__;
		return this._className;
	}
	,_nodeName: null
	,nodeName: null
	,get_nodeName: function() {
		if(this._nodeName != null) {
			return this._nodeName;
		}
		this._nodeName = this.get_className().split(".").pop().toLowerCase();
		return this._nodeName;
	}
	,_nativeClassName: null
	,nativeClassName: null
	,get_nativeClassName: function() {
		if(this._nativeClassName != null) {
			return this._nativeClassName;
		}
		var r = js_Boot.getClass(this);
		while(r != null) {
			var c = r.__name__;
			var t = haxe_ui_Toolkit.nativeConfig.query("component[id=" + c + "].@class",null,this);
			if(t != null) {
				this._nativeClassName = c;
				break;
			}
			r = r.__super__;
			if(r == haxe_ui_core_Component) {
				break;
			}
		}
		if(this._nativeClassName == null) {
			this._nativeClassName = this.get_className();
		}
		return this._nativeClassName;
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentBounds.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentBounds.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_backend_ComponentBase();
	}
	,__class__: haxe_ui_backend_ComponentBase
	,__properties__: $extend(haxe_ui_core_ComponentBounds.prototype.__properties__,{get_nativeClassName:"get_nativeClassName",get_nodeName:"get_nodeName",get_className:"get_className",get_hasNativeEntry:"get_hasNativeEntry",get_isScroller:"get_isScroller",get_isNativeScroller:"get_isNativeScroller"})
});
var haxe_ui_backend_ComponentImpl = function() {
	this._over = false;
	this._contextMenuDisabledCount = 0;
	this._canvas = null;
	haxe_ui_backend_ComponentBase.call(this);
	this._eventMap = new haxe_ds_StringMap();
	if(haxe_ui_backend_ComponentImpl._mutationObserver == null) {
		haxe_ui_backend_ComponentImpl._mutationObserver = new MutationObserver(haxe_ui_backend_ComponentImpl.onMutationEvent);
		haxe_ui_backend_ComponentImpl._mutationObserver.observe(haxe_ui_core_Screen.get_instance().get_container(),{ childList : true});
	}
	if(window.document.styleSheets.length == 0) {
		var style = window.document.createElement("style");
		style.appendChild(window.document.createTextNode(""));
		window.document.head.appendChild(style);
	}
	if(haxe_ui_backend_ComponentImpl._stylesAdded == false) {
		haxe_ui_backend_ComponentImpl._stylesAdded = true;
		var sheet = haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet();
		sheet.insertRule("#haxeui-container .haxeui-component, .haxeui-component:focus {\r\n                position: absolute;\r\n                box-sizing: border-box;\r\n                -webkit-touch-callout: none;\r\n                -webkit-user-select: none;\r\n                -khtml-user-select: none;\r\n                -moz-user-select: none;\r\n                -ms-user-select: none;\r\n                user-select: none;\r\n                -webkit-tap-highlight-color: transparent;\r\n                webkit-user-select;\r\n                outline: none !important;\r\n            }",sheet.cssRules.length);
		haxe_ui_core_Screen.get_instance().get_container().classList.add("haxeui-theme-" + haxe_ui_Toolkit.get_theme());
	}
};
$hxClasses["haxe.ui.backend.ComponentImpl"] = haxe_ui_backend_ComponentImpl;
haxe_ui_backend_ComponentImpl.__name__ = "haxe.ui.backend.ComponentImpl";
haxe_ui_backend_ComponentImpl.onMutationEvent = function(records,o) {
	var done = false;
	var _g = 0;
	while(_g < records.length) {
		var record = records[_g];
		++_g;
		var _g1 = 0;
		var _g2 = record.addedNodes.length;
		while(_g1 < _g2) {
			var i = _g1++;
			var node = record.addedNodes.item(i);
			var c = haxe_ui_backend_ComponentImpl.elementToComponent.h[node.__id__];
			if(c != null) {
				c.recursiveReady();
			}
		}
		if(done == true) {
			break;
		}
	}
};
haxe_ui_backend_ComponentImpl.__super__ = haxe_ui_backend_ComponentBase;
haxe_ui_backend_ComponentImpl.prototype = $extend(haxe_ui_backend_ComponentBase.prototype,{
	element: null
	,_eventMap: null
	,get_isNativeScroller: function() {
		return false;
	}
	,recursiveReady: function() {
		haxe_ui_backend_ComponentImpl.elementToComponent.remove(this.element);
		var component = js_Boot.__cast(this , haxe_ui_core_Component);
		if(!(component._layout == null || component._layoutLocked == true)) {
			component.invalidateComponent("layout",false);
		}
		component.ready();
		var _g = 0;
		var _g1 = component._children == null ? [] : component._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.recursiveReady();
		}
	}
	,handleCreate: function(native) {
		if(this.get_isScroller()) {
			if(this.element == null) {
				this.element = window.document.createElement("div");
			}
			this.element.scrollTop = 0;
			this.element.scrollLeft = 0;
			this.element.classList.add("haxeui-component");
			haxe_ui_backend_ComponentImpl.elementToComponent.set(this.element,js_Boot.__cast(this , haxe_ui_core_Component));
			return;
		}
		var newElement = window.document.createElement("div");
		newElement.classList.add("haxeui-component");
		if(((this) instanceof haxe_ui_components_Image)) {
			newElement.style.boxSizing = "initial";
		}
		if(this.element != null) {
			var p = this.element.parentElement;
			if(p != null) {
				haxe_ui_backend_ComponentImpl.elementToComponent.remove(this.element);
				p.replaceChild(newElement,this.element);
			}
		}
		this.element = newElement;
		haxe_ui_backend_ComponentImpl.elementToComponent.set(this.element,js_Boot.__cast(this , haxe_ui_core_Component));
		this.remapEvents();
	}
	,remapEvents: function() {
		if(this._eventMap == null) {
			return;
		}
		var copy_h = Object.create(null);
		var h = this._eventMap.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			var fn = this._eventMap.h[k];
			copy_h[k] = fn;
			this.unmapEvent(k,fn);
		}
		this._eventMap = new haxe_ds_StringMap();
		var h = copy_h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			this.mapEvent(k,copy_h[k]);
		}
	}
	,handlePosition: function(left,top,style) {
		if(this.element == null) {
			return;
		}
		if(left != null) {
			this.element.style.left = "" + left + "px";
		}
		if(top != null) {
			this.element.style.top = "" + top + "px";
		}
	}
	,handleSize: function(width,height,style) {
		if(width == null || height == null || width <= 0 || height <= 0) {
			return;
		}
		if(this.element == null) {
			return;
		}
		var c = js_Boot.__cast(this , haxe_ui_core_Component);
		var css = this.element.style;
		haxe_ui_backend_html5_StyleHelper.apply(this,width,height,style);
		var parent = c.parentComponent;
		if(parent != null && parent.element.style.borderWidth != null) {
			css.marginTop = "-" + parent.element.style.borderWidth;
			css.marginLeft = "-" + parent.element.style.borderWidth;
		} else if(parent != null) {
			css.marginTop = "";
			css.marginLeft = "";
		}
		var _g = 0;
		var _this = js_Boot.__cast(this , haxe_ui_core_Component);
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(style.borderLeftSize != null && style.borderLeftSize > 0) {
				child.element.style.marginLeft = "-" + style.borderLeftSize + "px";
			} else {
				child.element.style.marginLeft = "";
			}
			if(style.borderTopSize != null && style.borderTopSize > 0) {
				child.element.style.marginTop = "-" + style.borderTopSize + "px";
			} else {
				child.element.style.marginTop = "";
			}
		}
	}
	,handleReady: function() {
		if((js_Boot.__cast(this , haxe_ui_core_Component)).get_id() != null) {
			this.element.id = (js_Boot.__cast(this , haxe_ui_core_Component)).get_id();
		}
	}
	,handleFrameworkProperty: function(id,value) {
		if(id == "allowMouseInteraction") {
			if(value == true && this.element.style.getPropertyValue("pointer-events") != null) {
				this.element.style.removeProperty("pointer-events");
			} else if(this.element.style.getPropertyValue("pointer-events") != "none") {
				this.element.style.setProperty("pointer-events","none");
				this.setCursor(null);
			}
		}
	}
	,handleClipRect: function(value) {
		var c = js_Boot.__cast(this , haxe_ui_core_Component);
		var parent = c.parentComponent;
		value.toInts();
		if(value != null && parent != null) {
			var tmp = "rect(" + ("" + value.top + "px") + "," + ("" + value.get_right() + "px") + "," + ("" + value.get_bottom() + "px") + ",";
			this.element.style.clip = tmp + ("" + value.left + "px") + ")";
			var tmp = "" + (c.get_left() - value.left | 0) + "px";
			this.element.style.left = "" + tmp;
			var tmp = "" + (c.get_top() - value.top | 0) + "px";
			this.element.style.top = "" + tmp;
		} else {
			this.element.style.removeProperty("clip");
		}
	}
	,handleVisibility: function(show) {
		this.element.style.display = show == true ? "" : "none";
	}
	,createTextDisplay: function(text) {
		if(this._textDisplay == null) {
			haxe_ui_backend_ComponentBase.prototype.createTextDisplay.call(this,text);
			this.element.appendChild(this._textDisplay.element);
		}
		return this._textDisplay;
	}
	,createTextInput: function(text) {
		if(this._textInput == null) {
			haxe_ui_backend_ComponentBase.prototype.createTextInput.call(this,text);
			this.element.appendChild(this._textInput.element);
		}
		return this._textInput;
	}
	,createImageDisplay: function() {
		if(this._imageDisplay == null) {
			haxe_ui_backend_ComponentBase.prototype.createImageDisplay.call(this);
			this.element.appendChild(this._imageDisplay.element);
		}
		return this._imageDisplay;
	}
	,handleSetComponentIndex: function(child,index) {
		if(index == (this._children == null ? [] : this._children).length - 1) {
			this.element.appendChild(child.element);
		} else if(index == (this._children == null ? [] : this._children).indexOf(child) - 1) {
			var before = (this._children == null ? [] : this._children)[index];
			haxe_ui_backend_html5_HtmlUtils.insertBefore(before.element,child.element);
		} else {
			var before = (this._children == null ? [] : this._children)[index + 1];
			haxe_ui_backend_html5_HtmlUtils.insertBefore(before.element,child.element);
		}
	}
	,handleAddComponent: function(child) {
		this.element.appendChild(child.element);
		return child;
	}
	,handleAddComponentAt: function(child,index) {
		this.handleAddComponent(child);
		this.handleSetComponentIndex(child,index);
		return child;
	}
	,handleRemoveComponent: function(child,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		haxe_ui_backend_html5_HtmlUtils.removeElement(child.element);
		return child;
	}
	,handleRemoveComponentAt: function(index,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		var child = (js_Boot.__cast(this , haxe_ui_core_Component))._children[index];
		haxe_ui_backend_html5_HtmlUtils.removeElement(child.element);
		return child;
	}
	,applyStyle: function(style) {
		if(this.element == null) {
			return;
		}
		this.setCursor(style.cursor);
		if(style.filter != null) {
			if(((style.filter[0]) instanceof haxe_ui_filters_DropShadow)) {
				var dropShadow = style.filter[0];
				if(dropShadow.inner == false) {
					var tmp = "" + dropShadow.distance + "px " + (dropShadow.distance + 2) + "px " + (dropShadow.blurX - 1) + "px " + (dropShadow.blurY - 1) + "px ";
					var tmp1 = haxe_ui_backend_html5_HtmlUtils.rgba(dropShadow.color,dropShadow.alpha);
					this.element.style.boxShadow = tmp + tmp1;
				} else {
					var tmp = "inset " + dropShadow.distance + "px " + dropShadow.distance + "px " + dropShadow.blurX + "px 0px ";
					var tmp1 = haxe_ui_backend_html5_HtmlUtils.rgba(dropShadow.color,dropShadow.alpha);
					this.element.style.boxShadow = tmp + tmp1;
				}
			} else if(((style.filter[0]) instanceof haxe_ui_filters_Blur)) {
				var blur = style.filter[0];
				this.element.style.setProperty("-webkit-filter","blur(" + blur.amount + "px)");
				this.element.style.setProperty("-moz-filter","blur(" + blur.amount + "px)");
				this.element.style.setProperty("-o-filter","blur(" + blur.amount + "px)");
				this.element.style.setProperty("filter","blur(" + blur.amount + "px)");
			} else if(((style.filter[0]) instanceof haxe_ui_filters_Grayscale)) {
				var grayscale = style.filter[0];
				this.element.style.setProperty("-webkit-filter","grayscale(" + grayscale.amount + "%)");
				this.element.style.setProperty("-moz-filter","grayscale(" + grayscale.amount + "%)");
				this.element.style.setProperty("-o-filter","grayscale(" + grayscale.amount + "%)");
				this.element.style.setProperty("filter","grayscale(" + grayscale.amount + "%)");
			}
		} else {
			this.element.style.filter = null;
			this.element.style.boxShadow = null;
			this.element.style.removeProperty("box-shadow");
			this.element.style.removeProperty("-webkit-filter");
			this.element.style.removeProperty("-moz-filter");
			this.element.style.removeProperty("-o-filter");
			this.element.style.removeProperty("filter");
		}
		if(style.backdropFilter != null) {
			if(((style.backdropFilter[0]) instanceof haxe_ui_filters_Blur)) {
				var blur = style.backdropFilter[0];
				this.element.style.setProperty("backdrop-filter","blur(" + blur.amount + "px)");
			}
		} else {
			this.element.style.removeProperty("backdrop-filter");
		}
		if(style.opacity != null) {
			this.element.style.opacity = "" + style.opacity;
		}
		if(style.fontName != null) {
			this.element.style.fontFamily = style.fontName;
		}
		if(style.fontSize != null) {
			this.element.style.fontSize = "" + style.fontSize + "px";
		}
		if(style.color != null) {
			this.element.style.color = haxe_ui_backend_html5_HtmlUtils.color(style.color);
		}
		if(this.hasImageDisplay()) {
			this._imageDisplay.applyStyle();
		}
	}
	,setCursor: function(cursor) {
		var tmp = cursor == null;
		if(cursor == null) {
			this.element.style.removeProperty("cursor");
			if(this.hasImageDisplay()) {
				this.getImageDisplay().element.style.removeProperty("cursor");
			}
			if(this.hasTextDisplay()) {
				this.getTextDisplay().element.style.removeProperty("cursor");
			}
		} else {
			this.element.style.cursor = cursor;
			if(this.hasImageDisplay()) {
				this.getImageDisplay().element.style.cursor = cursor;
			}
			if(this.hasTextDisplay()) {
				this.getTextDisplay().element.style.cursor = cursor;
			}
		}
		var _g = 0;
		var _this = js_Boot.__cast(this , haxe_ui_core_Component);
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.element.style.cursor == null) {
				c.setCursor("inherit");
			}
		}
	}
	,_canvas: null
	,getCanvas: function(width,height) {
		if(this._canvas == null) {
			this._canvas = window.document.createElement("canvas");
			this._canvas.style.setProperty("-webkit-backface-visibility","hidden");
			this._canvas.style.setProperty("-moz-backface-visibility","hidden");
			this._canvas.style.setProperty("-ms-backface-visibility","hidden");
			this._canvas.style.position = "absolute";
			this._canvas.style.setProperty("pointer-events","none");
			this._canvas.width = width;
			this._canvas.height = height;
			this.element.insertBefore(this._canvas,this.element.firstChild);
		}
		if(width != this._canvas.width) {
			this._canvas.width = width;
		}
		if(height != this._canvas.height) {
			this._canvas.height = height;
		}
		return this._canvas;
	}
	,hasCanvas: function() {
		return this._canvas != null;
	}
	,removeCanvas: function() {
		if(this._canvas != null && this.element.contains(this._canvas)) {
			this.element.removeChild(this._canvas);
			this._canvas = null;
		}
	}
	,mapEvent: function(type,listener) {
		switch(type) {
		case "change":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,type) == false) {
				if(this.hasTextInput() == true) {
					this._eventMap.h[type] = listener;
					var tmp = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h["keyup"];
					this.getTextInput().element.addEventListener(tmp,$bind(this,this.__onTextFieldChangeEvent));
				}
			}
			break;
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":case "rightmousedown":case "rightmouseup":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,type) == false) {
				if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
					var passive = false;
					if(passive == null) {
						passive = true;
					}
					this.element.addEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],$bind(this,this.__onMouseEvent),{ passive : passive});
				}
				this._eventMap.h[type] = listener;
				this.element.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onMouseEvent));
				if(type == "rightmousedown" || type == "rightmouseup") {
					this.disableContextMenu(true);
				}
			}
			break;
		case "keydown":case "keyup":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,type) == false) {
				this._eventMap.h[type] = listener;
				this.element.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onKeyboardEvent));
			}
			break;
		case "mousewheel":
			this._eventMap.h[type] = listener;
			if(haxe_ui_backend_html5_UserAgent.get_instance().get_firefox() == true) {
				this.element.addEventListener("DOMMouseScroll",$bind(this,this.__onMouseWheelEvent));
			} else {
				this.element.addEventListener("mousewheel",$bind(this,this.__onMouseWheelEvent));
			}
			break;
		case "rightclick":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,type) == false) {
				this._eventMap.h[type] = listener;
				this.element.addEventListener("contextmenu",$bind(this,this.__onContextMenu));
			}
			break;
		case "scrollchange":
			this._eventMap.h[type] = listener;
			this.element.addEventListener("scroll",$bind(this,this.__onScrollEvent));
			break;
		}
	}
	,unmapEvent: function(type,listener) {
		switch(type) {
		case "change":
			if(this.hasTextInput()) {
				var _this = this._eventMap;
				if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
					delete(_this.h[type]);
				}
				var tmp = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h["keyup"];
				this.getTextInput().element.removeEventListener(tmp,$bind(this,this.__onTextFieldChangeEvent));
			}
			break;
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":case "rightmousedown":case "rightmouseup":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			this.element.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onMouseEvent));
			if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
				this.element.removeEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],$bind(this,this.__onMouseEvent));
			}
			if(type == "rightmousedown" || type == "rightmouseup") {
				this.disableContextMenu(false);
			}
			break;
		case "keydown":case "keyup":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			this.element.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onKeyboardEvent));
			break;
		case "mousewheel":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			if(haxe_ui_backend_html5_UserAgent.get_instance().get_firefox() == true) {
				this.element.removeEventListener("DOMMouseScroll",$bind(this,this.__onMouseWheelEvent));
			} else {
				this.element.removeEventListener("mousewheel",$bind(this,this.__onMouseWheelEvent));
			}
			break;
		case "rightclick":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			this.element.removeEventListener("contextmenu",$bind(this,this.__onContextMenu));
			break;
		}
	}
	,_contextMenuDisabledCount: null
	,disableContextMenu: function(disable) {
		if(disable == true) {
			this._contextMenuDisabledCount++;
		} else {
			this._contextMenuDisabledCount--;
			if(this._contextMenuDisabledCount < 0) {
				this._contextMenuDisabledCount = 0;
			}
		}
		if(this._contextMenuDisabledCount == 1) {
			this.element.addEventListener("contextmenu",$bind(this,this.__preventContextMenu));
		} else if(this._contextMenuDisabledCount == 0) {
			this.element.removeEventListener("contextmenu",$bind(this,this.__preventContextMenu));
		}
	}
	,__preventContextMenu: function(event) {
		event.preventDefault();
		return false;
	}
	,__onContextMenu: function(event) {
		event.preventDefault();
		var type = "rightclick";
		if(type != null) {
			var fn = this._eventMap.h[type];
			if(fn != null) {
				var uiEvent = new haxe_ui_events_MouseEvent(type);
				uiEvent.screenX = event.pageX;
				uiEvent.screenY = event.pageY;
				fn(uiEvent);
			}
		}
		return false;
	}
	,__onChangeEvent: function(event) {
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type != null) {
			var fn = this._eventMap.h[type];
			if(fn != null) {
				var uiEvent = new haxe_ui_events_UIEvent(type);
				fn(uiEvent);
			}
		}
	}
	,__onTextFieldChangeEvent: function(event) {
		var fn = this._eventMap.h["change"];
		if(fn != null) {
			var uiEvent = new haxe_ui_events_UIEvent("change");
			fn(uiEvent);
		}
	}
	,_over: null
	,__onMouseEvent: function(event) {
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type != null) {
			if(event.type == "mousedown") {
				var which = Reflect.field(event,"which");
				switch(which) {
				case 1:
					type = "mousedown";
					break;
				case 2:
					type = "mousedown";
					break;
				case 3:
					type = "rightmousedown";
					break;
				}
			} else if(event.type == "mouseup") {
				var which = Reflect.field(event,"which");
				switch(which) {
				case 1:
					type = "mouseup";
					break;
				case 2:
					type = "mouseup";
					break;
				case 3:
					type = "rightmouseup";
					break;
				}
			}
			try {
				var tmp = type == "mousedown";
			} catch( _g ) {
			}
			var tmp = type == "rightmousedown";
			var fn = this._eventMap.h[type];
			if(fn != null) {
				var mouseEvent = new haxe_ui_events_MouseEvent(type);
				mouseEvent._originalEvent = event;
				var touchEvent = false;
				try {
					touchEvent = ((event) instanceof TouchEvent);
				} catch( _g ) {
				}
				if(touchEvent == true) {
					var te = js_Boot.__cast(event , TouchEvent);
					mouseEvent.screenX = (te.changedTouches[0].pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = (te.changedTouches[0].pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.touchEvent = true;
				} else if(((event) instanceof MouseEvent)) {
					var me = js_Boot.__cast(event , MouseEvent);
					mouseEvent.buttonDown = me.buttons != 0;
					mouseEvent.screenX = (me.pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = (me.pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.ctrlKey = me.ctrlKey;
					mouseEvent.shiftKey = me.shiftKey;
				}
				if(type == "mouseover") {
					this._over = true;
				} else if(type == "mouseout") {
					this._over = false;
				}
				fn(mouseEvent);
			}
		}
	}
	,getComponentOffset: function() {
		return new haxe_ui_geom_Point(0,0);
	}
	,__onMouseWheelEvent: function(event) {
		var fn = this._eventMap.h["mousewheel"];
		if(fn == null) {
			return;
		}
		var delta = 0;
		if(Reflect.field(event,"wheelDelta") != null) {
			delta = Reflect.field(event,"wheelDelta");
		} else if(((event) instanceof WheelEvent)) {
			delta = (js_Boot.__cast(event , WheelEvent)).deltaY;
		} else {
			delta = -event.detail;
		}
		delta = Math.max(-1,Math.min(1,delta));
		var mouseEvent = new haxe_ui_events_MouseEvent("mousewheel");
		mouseEvent._originalEvent = event;
		mouseEvent.screenX = (event.pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
		mouseEvent.screenY = (event.pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
		mouseEvent.ctrlKey = event.ctrlKey;
		mouseEvent.shiftKey = event.shiftKey;
		mouseEvent.delta = delta;
		fn(mouseEvent);
	}
	,__onKeyboardEvent: function(event) {
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type != null) {
			var fn = this._eventMap.h[type];
			if(fn != null) {
				var keyboardEvent = new haxe_ui_events_KeyboardEvent(type);
				keyboardEvent._originalEvent = event;
				if(((event) instanceof KeyboardEvent)) {
					var me = js_Boot.__cast(event , KeyboardEvent);
					keyboardEvent.keyCode = me.keyCode;
					keyboardEvent.altKey = me.altKey;
					keyboardEvent.ctrlKey = me.ctrlKey;
					keyboardEvent.shiftKey = me.shiftKey;
				}
				fn(keyboardEvent);
			}
		}
	}
	,__onScrollEvent: function(event) {
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		var fn = this._eventMap.h[type];
		if(fn != null) {
			var scrollEvent = new haxe_ui_events_ScrollEvent("scrollchange");
			fn(scrollEvent);
		}
	}
	,registerBehaviours: function() {
		haxe_ui_backend_ComponentBase.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_backend_ComponentBase.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_backend_ComponentImpl();
	}
	,__class__: haxe_ui_backend_ComponentImpl
});
var haxe_ui_validation_IValidating = function() { };
$hxClasses["haxe.ui.validation.IValidating"] = haxe_ui_validation_IValidating;
haxe_ui_validation_IValidating.__name__ = "haxe.ui.validation.IValidating";
haxe_ui_validation_IValidating.__isInterface__ = true;
haxe_ui_validation_IValidating.prototype = {
	get_depth: null
	,set_depth: null
	,get_id: null
	,set_id: null
	,get_isComponentOffscreen: null
	,validateComponent: null
	,updateComponentDisplay: null
	,isComponentOffscreen: null
	,__class__: haxe_ui_validation_IValidating
	,__properties__: {get_isComponentOffscreen:"get_isComponentOffscreen",set_id:"set_id",get_id:"get_id",set_depth:"set_depth",get_depth:"get_depth"}
};
var haxe_ui_core_Component = function() {
	this._pauseAnimationStyleChanges = false;
	this._initialSizeApplied = false;
	this._scriptAccess = true;
	this._includeInLayout = true;
	this._styleSheet = null;
	this._cachedStyleSheetRef = null;
	this._useCachedStyleSheetRef = false;
	this._styleNamesList = null;
	this._styleNames = null;
	this.cascadeActive = false;
	this.classes = [];
	this._customStyle = null;
	this._hidden = false;
	this.bindingRoot = false;
	this._dragOptions = null;
	this._dragInitiator = null;
	this.userData = null;
	this._animatable = true;
	this._native = null;
	this._defaultLayoutClass = null;
	this.componentTabIndex = 0;
	haxe_ui_backend_ComponentImpl.call(this);
	this.addClass(haxe_ui_Backend.get_id(),false);
	var c = js_Boot.getClass(this);
	while(c != null) {
		var css = c.__name__;
		var className = css.split(".").pop();
		this.addClass(className.toLowerCase(),false);
		this.addClass(haxe_ui_util_StringUtil.toDashes(className),false);
		if(className.toLowerCase() == "component") {
			break;
		}
		c = c.__super__;
	}
	var s = haxe_ui_Toolkit.styleSheet.buildStyleFor(this);
	if(s.native != null && this.get_hasNativeEntry() == true) {
		this.set_native(s.native);
	} else {
		this.create();
	}
	if(haxe_ui_Toolkit.get_initialized() == false) {
		haxe_Log.trace("WARNING: You are trying to create a component before the toolkit has been initialized. This could have undefined results.",{ fileName : "haxe/ui/core/Component.hx", lineNumber : 82, className : "haxe.ui.core.Component", methodName : "new"});
	}
};
$hxClasses["haxe.ui.core.Component"] = haxe_ui_core_Component;
haxe_ui_core_Component.__name__ = "haxe.ui.core.Component";
haxe_ui_core_Component.__interfaces__ = [haxe_ui_validation_IValidating];
haxe_ui_core_Component.addNamedComponentsFrom = function(parent,list) {
	if(parent == null) {
		return;
	}
	if(parent.get_id() != null) {
		list.push(parent);
	}
	var _g = 0;
	var _g1 = parent._children == null ? [] : parent._children;
	while(_g < _g1.length) {
		var child = _g1[_g];
		++_g;
		haxe_ui_core_Component.addNamedComponentsFrom(child,list);
	}
};
haxe_ui_core_Component.__super__ = haxe_ui_backend_ComponentImpl;
haxe_ui_core_Component.prototype = $extend(haxe_ui_backend_ComponentImpl.prototype,{
	componentTabIndex: null
	,_defaultLayoutClass: null
	,create: function() {
		if(this.get_native() == false || this.get_native() == null) {
			this.registerComposite();
		}
		this.createDefaults();
		this.handleCreate(this.get_native());
		this.destroyChildren();
		this.registerBehaviours();
		this.behaviours.replaceNative();
		if(this.get_native() == false || this.get_native() == null) {
			if(this._compositeBuilderClass != null) {
				if(this._compositeBuilder == null) {
					this._compositeBuilder = Type.createInstance(this._compositeBuilderClass,[this]);
				}
				this._compositeBuilder.create();
			}
			this.createChildren();
			if(this._internalEventsClass != null && this._internalEvents == null) {
				this.registerInternalEvents(this._internalEventsClass);
			}
		} else {
			var builderClass = this.getNativeConfigProperty(".builder.@class");
			if(builderClass != null) {
				if(this._compositeBuilder == null) {
					this._compositeBuilder = Type.createInstance($hxClasses[builderClass],[this]);
				}
				this._compositeBuilder.create();
			}
		}
		this.behaviours.applyDefaults();
	}
	,_compositeBuilderClass: null
	,_compositeBuilder: null
	,registerComposite: function() {
	}
	,createDefaults: function() {
	}
	,createChildren: function() {
	}
	,destroyChildren: function() {
		this.unregisterInternalEvents();
	}
	,createLayout: function() {
		var l = null;
		if(this.get_native() == true) {
			var sizeProps = this.getNativeConfigProperties(".size");
			if(sizeProps != null && Object.prototype.hasOwnProperty.call(sizeProps.h,"class")) {
				var name = sizeProps.h["class"];
				var size = Type.createInstance($hxClasses[name],[]);
				size.config = sizeProps;
				l = new haxe_ui_layouts_DelegateLayout(size);
			} else {
				var layoutProps = this.getNativeConfigProperties(".layout");
				if(layoutProps != null && Object.prototype.hasOwnProperty.call(layoutProps.h,"class")) {
					var name = layoutProps.h["class"];
					l = Type.createInstance($hxClasses[name],[]);
				}
			}
		}
		if(l == null) {
			if(this._defaultLayoutClass != null) {
				l = Type.createInstance(this._defaultLayoutClass,[]);
			} else {
				l = new haxe_ui_layouts_DefaultLayout();
			}
		}
		return l;
	}
	,_native: null
	,get_native: function() {
		if(this._native == null) {
			return false;
		}
		if(this.get_hasNativeEntry() == false) {
			return false;
		}
		return this._native;
	}
	,set_native: function(value) {
		if(this.get_hasNativeEntry() == false) {
			return value;
		}
		if(this._native == value) {
			return value;
		}
		this._native = value;
		this.get_customStyle().native = value;
		if(this._native == true && this.get_hasNativeEntry()) {
			this.addClass(":native");
		} else {
			this.removeClass(":native");
		}
		this.behaviours.cache();
		this.behaviours.detatch();
		this.create();
		if(this.get_layout() != null) {
			this.set_layout(this.createLayout());
		}
		this.behaviours.restore();
		return value;
	}
	,_animatable: null
	,get_animatable: function() {
		return false;
	}
	,set_animatable: function(value) {
		if(this._animatable != value) {
			if(value == false && this._componentAnimation != null) {
				this._componentAnimation.stop();
				this._componentAnimation = null;
			}
			this._animatable = value;
		}
		this._animatable = value;
		return value;
	}
	,_componentAnimation: null
	,get_componentAnimation: function() {
		return this._componentAnimation;
	}
	,set_componentAnimation: function(value) {
		if(this._componentAnimation != value && this._animatable == true) {
			if(this._componentAnimation != null) {
				this._componentAnimation.stop();
			}
			this._componentAnimation = value;
		}
		return value;
	}
	,userData: null
	,screen: null
	,get_screen: function() {
		return haxe_ui_Toolkit.get_screen();
	}
	,get_draggable: function() {
		return haxe_ui_dragdrop_DragManager.get_instance().isRegisteredDraggable(this);
	}
	,set_draggable: function(value) {
		if(value == true) {
			haxe_ui_dragdrop_DragManager.get_instance().registerDraggable(this,this.get_dragOptions());
		} else {
			haxe_ui_dragdrop_DragManager.get_instance().unregisterDraggable(this);
		}
		return value;
	}
	,_dragInitiator: null
	,get_dragInitiator: function() {
		return this._dragInitiator;
	}
	,set_dragInitiator: function(value) {
		this._dragInitiator = value;
		if(value != null) {
			if(this._dragOptions != null) {
				this._dragOptions.mouseTarget = value;
			}
			this.set_draggable(true);
		} else {
			this.set_draggable(false);
		}
		return value;
	}
	,_dragOptions: null
	,get_dragOptions: function() {
		if(this._dragOptions == null) {
			this._dragOptions = { mouseTarget : this._dragInitiator};
		}
		return this._dragOptions;
	}
	,set_dragOptions: function(value) {
		this._dragOptions = value;
		this.set_draggable(true);
		return value;
	}
	,bindingRoot: null
	,get_rootComponent: function() {
		var r = this;
		while(r.parentComponent != null) r = r.parentComponent;
		return r;
	}
	,get_numComponents: function() {
		var n = 0;
		if(this._compositeBuilder != null) {
			var builderCount = this._compositeBuilder.get_numComponents();
			if(builderCount != null) {
				n = builderCount;
			} else if(this._children != null) {
				n = this._children.length;
			}
		} else if(this._children != null) {
			n = this._children.length;
		}
		return n;
	}
	,addComponent: function(child) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.addComponent(child);
			if(v != null) {
				v.set_scriptAccess(this.get_scriptAccess());
				return v;
			}
		}
		if(this.get_native() == true) {
			var allowChildren = this.getNativeConfigPropertyBool(".@allowChildren",true);
			if(allowChildren == false) {
				return child;
			}
		}
		child.parentComponent = this;
		child._isDisposed = false;
		if(this._children == null) {
			this._children = [];
		}
		this._children.push(child);
		this.handleAddComponent(child);
		if(this._ready) {
			child.ready();
		}
		this.assignPositionClasses();
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		if(this.get_disabled()) {
			child.set_disabled(true);
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentAdded(child);
		}
		this.onComponentAdded(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentadded"));
		child.dispatch(new haxe_ui_events_UIEvent("componentaddedtoparent"));
		child.set_scriptAccess(this.get_scriptAccess());
		return child;
	}
	,containsComponent: function(child) {
		if(child == null) {
			return false;
		}
		var contains = false;
		this.walkComponents(function(c) {
			if(child == c) {
				contains = true;
			}
			return !contains;
		});
		return contains;
	}
	,addComponentAt: function(child,index) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.addComponentAt(child,index);
			if(v != null) {
				v.set_scriptAccess(this.get_scriptAccess());
				return v;
			}
		}
		if(this.get_native() == true) {
			var allowChildren = this.getNativeConfigPropertyBool(".@allowChildren",true);
			if(allowChildren == false) {
				return child;
			}
		}
		child.parentComponent = this;
		child._isDisposed = false;
		if(this._children == null) {
			this._children = [];
		}
		this._children.splice(index,0,child);
		this.handleAddComponentAt(child,index);
		if(this._ready) {
			child.ready();
		}
		this.assignPositionClasses();
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		if(this.get_disabled()) {
			child.set_disabled(true);
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentAdded(child);
		}
		this.onComponentAdded(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentadded"));
		child.dispatch(new haxe_ui_events_UIEvent("componentaddedtoparent"));
		child.set_scriptAccess(this.get_scriptAccess());
		return child;
	}
	,onComponentAdded: function(child) {
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(child == null) {
			return null;
		}
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.removeComponent(child,dispose,invalidate);
			if(v != null) {
				return v;
			}
		}
		if(this._children != null) {
			if(this._children.indexOf(child) == -1) {
				var childId = child.get_className();
				if(child.get_id() != null) {
					childId += "#" + child.get_id();
				}
				var thisId = this.get_className();
				if(this.get_id() != null) {
					thisId += "#" + this.get_id();
				}
				haxe_Log.trace("WARNING: trying to remove a child (" + childId + ") that is not a child of this component (" + thisId + ")",{ fileName : "haxe/ui/core/Component.hx", lineNumber : 540, className : "haxe.ui.core.Component", methodName : "removeComponent"});
				return child;
			}
			if(HxOverrides.remove(this._children,child)) {
				child.parentComponent = null;
				child.set_depth(-1);
			}
			if(dispose == true) {
				child.disposeComponent();
			} else {
				child.dispatch(new haxe_ui_events_UIEvent("hidden"));
				child.removeClass(":hover",false,true);
			}
		}
		this.handleRemoveComponent(child,dispose);
		this.assignPositionClasses(invalidate);
		if(this._children != null && invalidate == true) {
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentRemoved(child);
		}
		this.onComponentRemoved(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentremoved"));
		child.dispatch(new haxe_ui_events_UIEvent("componentremovedfromparent"));
		return child;
	}
	,disposeComponent: function() {
		this._isDisposed = true;
		this.removeAllComponents(true);
		this.destroyComponent();
		this.unregisterEvents();
		if(this.hasTextDisplay()) {
			this.getTextDisplay().dispose();
		}
		if(this.hasTextInput()) {
			this.getTextInput().dispose();
		}
		if(this.hasImageDisplay()) {
			this.getImageDisplay().dispose();
		}
		if(this.behaviours != null) {
			this.behaviours.dispose();
			this.behaviours = null;
		}
		if(this._layout != null) {
			this._layout.set_component(null);
			this._layout = null;
		}
		if(this._internalEvents != null) {
			this._internalEvents._target = null;
			this._internalEvents = null;
		}
		this.parentComponent = null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(this._children == null) {
			return null;
		}
		var childCount = this._children.length;
		if(this._compositeBuilder != null) {
			var compositeChildCount = this._compositeBuilder.get_numComponents();
			if(compositeChildCount != null) {
				childCount = compositeChildCount;
			}
		}
		if(index < 0 || index > childCount - 1) {
			return null;
		}
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.removeComponentAt(index,dispose,invalidate);
			if(v != null) {
				return v;
			}
		}
		var child = this._children[index];
		if(child == null) {
			return null;
		}
		if(dispose == true) {
			child._isDisposed = true;
			child.removeAllComponents(true);
		} else {
			child.dispatch(new haxe_ui_events_UIEvent("hidden"));
			child.removeClass(":hover",false,true);
		}
		this.handleRemoveComponentAt(index,dispose);
		if(HxOverrides.remove(this._children,child)) {
			child.parentComponent = null;
			child.set_depth(-1);
		}
		if(dispose == true) {
			child.destroyComponent();
			child.unregisterEvents();
		}
		this.assignPositionClasses(invalidate);
		if(invalidate == true) {
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentRemoved(child);
		}
		this.onComponentRemoved(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentremoved"));
		child.dispatch(new haxe_ui_events_UIEvent("componentremovedfromparent"));
		return child;
	}
	,onComponentRemoved: function(child) {
	}
	,assignPositionClasses: function(invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if((this._children == null ? [] : this._children).length == 1) {
			(this._children == null ? [] : this._children)[0].addClasses(["first","last"],invalidate);
			return;
		}
		var _g = 0;
		var _g1 = (this._children == null ? [] : this._children).length;
		while(_g < _g1) {
			var i = _g++;
			var c = (this._children == null ? [] : this._children)[i];
			if(i == 0) {
				c.swapClass("first","last",invalidate);
			} else if((this._children == null ? [] : this._children).length > 1 && i == (this._children == null ? [] : this._children).length - 1) {
				c.swapClass("last","first",invalidate);
			} else {
				c.removeClasses(["first","last"],invalidate);
			}
		}
	}
	,destroyComponent: function() {
		if(this._compositeBuilder != null) {
			this._compositeBuilder.destroy();
		}
		haxe_ui_locale_LocaleManager.get_instance().unregisterComponent(this);
		this.onDestroy();
	}
	,onDestroy: function() {
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.onDestroy();
		}
		this.dispatch(new haxe_ui_events_UIEvent("hidden"));
		this.dispatch(new haxe_ui_events_UIEvent("destroy"));
	}
	,walkComponents: function(callback) {
		if(callback(this) == false) {
			return;
		}
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			var cont = [true];
			child.walkComponents((function(cont) {
				return function(c) {
					cont[0] = callback(c);
					return cont[0];
				};
			})(cont));
			if(cont[0] == false) {
				break;
			}
		}
	}
	,removeAllComponents: function(dispose) {
		if(dispose == null) {
			dispose = true;
		}
		if(this._compositeBuilder != null) {
			var b = this._compositeBuilder.removeAllComponents(dispose);
			if(b == true) {
				return;
			}
		}
		if(this._children != null) {
			while(this._children.length > 0) {
				this._children[0].removeAllComponents(dispose);
				this.removeComponent(this._children[0],dispose,false);
			}
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
	}
	,matchesSearch: function(criteria,type,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(criteria != null) {
			if(searchType == "id" && this.get_id() == criteria || searchType == "css" && this.classes.indexOf(criteria) != -1 == true) {
				if(type != null) {
					return js_Boot.__instanceof(this,type);
				}
				return true;
			}
		} else if(type != null) {
			return js_Boot.__instanceof(this,type);
		}
		return false;
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(recursive == null && criteria != null && searchType == "id") {
			recursive = true;
		}
		var match = null;
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.matchesSearch(criteria,type,searchType)) {
				match = child;
				break;
			}
		}
		if(match == null && recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				var temp = child.findComponent(criteria,type,recursive,searchType);
				if(temp != null) {
					match = temp;
					break;
				}
			}
			if(match == null && this._compositeBuilder != null) {
				match = this._compositeBuilder.findComponent(criteria,type,recursive,searchType);
			}
		}
		return match;
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		if(maxDepth == -1) {
			maxDepth = 100;
		}
		if(maxDepth <= 0) {
			return [];
		}
		--maxDepth;
		var r = [];
		if(this._compositeBuilder != null) {
			var childArray = this._compositeBuilder.findComponents(styleName,type,maxDepth);
			if(childArray != null) {
				var _g = 0;
				while(_g < childArray.length) {
					var c = childArray[_g];
					++_g;
					r.push(c);
				}
			}
		}
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			var match = true;
			if(styleName != null && child.classes.indexOf(styleName) != -1 == false) {
				match = false;
			}
			if(type != null && js_Boot.__instanceof(child,type) == false) {
				match = false;
			}
			if(match == true) {
				r.push(child);
			} else {
				var childArray = child.findComponents(styleName,type,maxDepth);
				var _g2 = 0;
				while(_g2 < childArray.length) {
					var c = childArray[_g2];
					++_g2;
					r.push(c);
				}
			}
		}
		return r;
	}
	,findAncestor: function(criteria,type,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		var match = null;
		var p = this.parentComponent;
		while(p != null) if(p.matchesSearch(criteria,type,searchType)) {
			match = p;
			break;
		} else {
			p = p.parentComponent;
		}
		return match;
	}
	,findComponentsUnderPoint: function(screenX,screenY,type) {
		var c = [];
		if(this.hitTest(screenX,screenY,false)) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.hitTest(screenX,screenY,false)) {
					var match = true;
					if(type != null && js_Boot.__instanceof(child,type) == false) {
						match = false;
					}
					if(match == true) {
						c.push(child);
					}
					c = c.concat(child.findComponentsUnderPoint(screenX,screenY,type));
				}
			}
		}
		return c;
	}
	,hasComponentUnderPoint: function(screenX,screenY,type) {
		var b = false;
		if(this.hitTest(screenX,screenY,false)) {
			if(type == null) {
				return true;
			}
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.hitTest(screenX,screenY,false)) {
					var match = true;
					if(type != null && js_Boot.__instanceof(child,type) == false) {
						match = false;
					}
					if(match == false) {
						match = child.hasComponentUnderPoint(screenX,screenY,type);
					}
					if(match == true) {
						b = match;
						break;
					}
				}
			}
		}
		return b;
	}
	,getComponentIndex: function(child) {
		if(this._compositeBuilder != null) {
			var index = this._compositeBuilder.getComponentIndex(child);
			if(index != -2147483648) {
				return index;
			}
		}
		var index = -1;
		if(this._children != null && child != null) {
			index = this._children.indexOf(child);
		}
		return index;
	}
	,setComponentIndex: function(child,index) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.setComponentIndex(child,index);
			if(v != null) {
				return v;
			}
		}
		if(index >= 0 && index <= this._children.length && child.parentComponent == this) {
			this.handleSetComponentIndex(child,index);
			HxOverrides.remove(this._children,child);
			this._children.splice(index,0,child);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		return child;
	}
	,getComponentAt: function(index) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.getComponentAt(index);
			if(v != null) {
				return v;
			}
		}
		if(this._children == null) {
			return null;
		}
		return this._children[index];
	}
	,hide: function() {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.hide();
			if(v == true) {
				return;
			}
		}
		if(this._hidden == false) {
			this._hidden = true;
			this.handleVisibility(false);
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			this.dispatchRecursively(new haxe_ui_events_UIEvent("hidden"));
		}
	}
	,hideInternal: function(dispatchChildren) {
		if(dispatchChildren == null) {
			dispatchChildren = false;
		}
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.hide();
			if(v == true) {
				return;
			}
		}
		if(this._hidden == false) {
			this._hidden = true;
			this.handleVisibility(false);
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			if(dispatchChildren == true) {
				this.dispatchRecursively(new haxe_ui_events_UIEvent("hidden"));
			} else {
				this.dispatch(new haxe_ui_events_UIEvent("hidden"));
			}
		}
	}
	,show: function() {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.show();
			if(v == true) {
				return;
			}
		}
		if(this._hidden == true) {
			this._hidden = false;
			this.handleVisibility(true);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			this.dispatchRecursively(new haxe_ui_events_UIEvent("shown"));
		}
	}
	,showInternal: function(dispatchChildren) {
		if(dispatchChildren == null) {
			dispatchChildren = false;
		}
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.show();
			if(v == true) {
				return;
			}
		}
		if(this._hidden == true) {
			this._hidden = false;
			this.handleVisibility(true);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			if(dispatchChildren == true) {
				this.dispatchRecursively(new haxe_ui_events_UIEvent("shown"));
			} else {
				this.dispatch(new haxe_ui_events_UIEvent("shown"));
			}
		}
	}
	,fadeIn: function(onEnd,show) {
		if(show == null) {
			show = true;
		}
		var _gthis = this;
		if(onEnd != null || show == true) {
			var prevStart = this.onAnimationStart;
			var prevEnd = this.onAnimationEnd;
			if(show == true) {
				prevStart = this.onAnimationStart;
				this.set_onAnimationStart(function(e) {
					_gthis.show();
					_gthis.set_onAnimationStart(prevStart);
				});
			}
			this.set_onAnimationEnd(function(e) {
				if(onEnd != null) {
					onEnd();
				}
				_gthis.removeClass("fade-in");
				_gthis.set_onAnimationEnd(prevEnd);
			});
		}
		this.swapClass("fade-in","fade-out");
	}
	,fadeOut: function(onEnd,hide) {
		if(hide == null) {
			hide = true;
		}
		var _gthis = this;
		if(onEnd != null || hide == true) {
			var prevEnd = this.onAnimationEnd;
			this.set_onAnimationEnd(function(e) {
				if(hide == true) {
					_gthis.hide();
				}
				if(onEnd != null) {
					onEnd();
				}
				_gthis.set_onAnimationEnd(prevEnd);
				_gthis.removeClass("fade-out");
			});
		}
		this.swapClass("fade-out","fade-in");
	}
	,_hidden: null
	,get_hidden: function() {
		if(this._hidden == true) {
			return true;
		}
		if(this.parentComponent != null) {
			return this.parentComponent.get_hidden();
		}
		return false;
	}
	,set_hidden: function(value) {
		if(value == this._hidden) {
			return value;
		}
		if(value == true) {
			this.hide();
		} else {
			this.show();
		}
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"hidden"));
		return value;
	}
	,_customStyle: null
	,get_customStyle: function() {
		if(this._customStyle == null) {
			this._customStyle = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		return this._customStyle;
	}
	,set_customStyle: function(value) {
		if(value != this._customStyle) {
			this.invalidateComponent("style",false);
		}
		this._customStyle = value;
		return value;
	}
	,classes: null
	,cascadeActive: null
	,addClass: function(name,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		if(this.classes.indexOf(name) == -1) {
			this.classes.push(name);
			if(invalidate == true) {
				this.invalidateComponent("style",false);
			}
		}
		if(recursive == true || this.cascadeActive == true && name == ":active") {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.addClass(name,invalidate,recursive);
			}
		}
	}
	,addClasses: function(names,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		var needsInvalidate = false;
		var _g = 0;
		while(_g < names.length) {
			var name = names[_g];
			++_g;
			if(this.classes.indexOf(name) == -1) {
				this.classes.push(name);
				if(invalidate == true) {
					needsInvalidate = true;
				}
			}
		}
		if(needsInvalidate == true) {
			this.invalidateComponent("style",false);
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.addClasses(names,invalidate,recursive);
			}
		}
	}
	,removeClass: function(name,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		if(this.classes.indexOf(name) != -1) {
			HxOverrides.remove(this.classes,name);
			if(invalidate == true) {
				this.invalidateComponent("style",false);
			}
		}
		if(recursive == true || this.cascadeActive == true && name == ":active") {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.removeClass(name,invalidate,recursive);
			}
		}
	}
	,removeClasses: function(names,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		var needsInvalidate = false;
		var _g = 0;
		while(_g < names.length) {
			var name = names[_g];
			++_g;
			if(this.classes.indexOf(name) != -1) {
				HxOverrides.remove(this.classes,name);
				if(invalidate == true) {
					needsInvalidate = true;
				}
			}
		}
		if(needsInvalidate == true) {
			this.invalidateComponent("style",false);
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.removeClasses(names,invalidate,recursive);
			}
		}
	}
	,hasClass: function(name) {
		return this.classes.indexOf(name) != -1;
	}
	,swapClass: function(classToAdd,classToRemove,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		var needsInvalidate = false;
		if(classToAdd != null && this.classes.indexOf(classToAdd) == -1) {
			this.classes.push(classToAdd);
			needsInvalidate = true;
		}
		if(classToRemove != null && this.classes.indexOf(classToRemove) != -1) {
			HxOverrides.remove(this.classes,classToRemove);
			needsInvalidate = true;
		}
		if(invalidate == true && needsInvalidate == true) {
			this.invalidateComponent("style",false);
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.swapClass(classToAdd,classToRemove,invalidate,recursive);
			}
		}
	}
	,_styleNames: null
	,_styleNamesList: null
	,get_styleNames: function() {
		return this._styleNames;
	}
	,set_styleNames: function(value) {
		if(value == this._styleNames) {
			return value;
		}
		if(value == null) {
			value = "";
		}
		this._styleNames = value;
		var newStyleNamesList = [];
		var classesToAdd = [];
		var requiresInvalidation = false;
		var _g = 0;
		var _g1 = value.split(" ");
		while(_g < _g1.length) {
			var x = _g1[_g];
			++_g;
			x = StringTools.trim(x);
			if(x.length == 0) {
				continue;
			}
			newStyleNamesList.push(x);
			if(this._styleNamesList != null) {
				if(this._styleNamesList.indexOf(x) == -1) {
					classesToAdd.push(x);
					requiresInvalidation = true;
				}
			} else {
				classesToAdd.push(x);
				requiresInvalidation = true;
			}
		}
		var classesToRemove = [];
		if(this._styleNamesList != null) {
			var _g = 0;
			var _g1 = this._styleNamesList;
			while(_g < _g1.length) {
				var x = _g1[_g];
				++_g;
				if(newStyleNamesList.indexOf(x) == -1) {
					classesToRemove.push(x);
					requiresInvalidation = true;
				}
			}
		}
		this._styleNamesList = newStyleNamesList;
		if(requiresInvalidation) {
			var _g = 0;
			while(_g < classesToAdd.length) {
				var x = classesToAdd[_g];
				++_g;
				this.classes.push(x);
			}
			var _g = 0;
			while(_g < classesToRemove.length) {
				var x = classesToRemove[_g];
				++_g;
				HxOverrides.remove(this.classes,x);
			}
			this.invalidateComponent("all",true);
		}
		return value;
	}
	,_styleString: null
	,get_styleString: function() {
		return this._styleString;
	}
	,set_styleString: function(value) {
		if(value == null || value == this._styleString) {
			return value;
		}
		var cssString = StringTools.trim(value);
		if(cssString.length == 0) {
			return value;
		}
		if(StringTools.endsWith(cssString,";") == false) {
			cssString += ";";
		}
		cssString = "_ { " + cssString + "}";
		var s = new haxe_ui_styles_Parser().parse(cssString);
		this.get_customStyle().mergeDirectives(s.get_rules()[0].directives);
		this._styleString = value;
		this.invalidateComponent("style",false);
		return value;
	}
	,_useCachedStyleSheetRef: null
	,_cachedStyleSheetRef: null
	,_styleSheet: null
	,get_styleSheet: function() {
		if(this._useCachedStyleSheetRef == true) {
			return this._cachedStyleSheetRef;
		}
		var s = null;
		var ref = this;
		while(ref != null) {
			if(ref._styleSheet != null) {
				s = ref._styleSheet;
				break;
			}
			ref = ref.parentComponent;
		}
		this._useCachedStyleSheetRef = true;
		this._cachedStyleSheetRef = s;
		return s;
	}
	,set_styleSheet: function(value) {
		this._styleSheet = value;
		this.resetCachedStyleSheetRef();
		return value;
	}
	,resetCachedStyleSheetRef: function() {
		this._cachedStyleSheetRef = null;
		this._useCachedStyleSheetRef = false;
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.resetCachedStyleSheetRef();
		}
	}
	,_includeInLayout: null
	,get_includeInLayout: function() {
		if(this._hidden == true) {
			return false;
		}
		return this._includeInLayout;
	}
	,set_includeInLayout: function(value) {
		this._includeInLayout = value;
		return value;
	}
	,get_layout: function() {
		return this._layout;
	}
	,set_layout: function(value) {
		if(value == null) {
			return value;
		}
		var tmp;
		if(this._layout != null) {
			var c = js_Boot.getClass(value);
			var tmp1 = c.__name__;
			var c = js_Boot.getClass(this._layout);
			tmp = tmp1 == c.__name__;
		} else {
			tmp = false;
		}
		if(tmp) {
			return value;
		}
		this._layout = value;
		this._layout.set_component(this);
		return value;
	}
	,lockLayout: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this._layoutLocked == true) {
			return;
		}
		this._layoutLocked = true;
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.lockLayout(recursive);
			}
		}
	}
	,unlockLayout: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this._layoutLocked == false) {
			return;
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.unlockLayout(recursive);
			}
		}
		this._layoutLocked = false;
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
	}
	,ready: function() {
		var _gthis = this;
		this.set_depth(haxe_ui_util_ComponentUtil.getDepth(this));
		if(this.isComponentInvalid()) {
			this._invalidateCount = 0;
			haxe_ui_validation_ValidationManager.get_instance().add(this);
		}
		if(this._ready == false) {
			this._ready = true;
			this.handleReady();
			if((this._children == null ? [] : this._children) != null) {
				var _g = 0;
				var _g1 = this._children == null ? [] : this._children;
				while(_g < _g1.length) {
					var child = _g1[_g];
					++_g;
					child.ready();
				}
			}
			this.invalidateComponent();
			this.behaviours.ready();
			this.behaviours.update();
			haxe_ui_Toolkit.callLater(function() {
				_gthis.invalidateComponent("data",false);
				_gthis.invalidateComponent("style",false);
				if(_gthis._compositeBuilder != null) {
					_gthis._compositeBuilder.onReady();
				}
				_gthis.onReady();
				_gthis.dispatch(new haxe_ui_events_UIEvent("ready"));
				if(_gthis._hidden == false) {
					_gthis.dispatch(new haxe_ui_events_UIEvent("shown"));
				}
			});
		}
	}
	,onReady: function() {
	}
	,onInitialize: function() {
	}
	,onResized: function() {
	}
	,onMoved: function() {
	}
	,_scriptAccess: null
	,get_scriptAccess: function() {
		return this._scriptAccess;
	}
	,set_scriptAccess: function(value) {
		if(value == this._scriptAccess) {
			return value;
		}
		this._scriptAccess = value;
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.set_scriptAccess(value);
		}
		return value;
	}
	,namedComponents: null
	,get_namedComponents: function() {
		var list = [];
		haxe_ui_core_Component.addNamedComponentsFrom(this,list);
		return list;
	}
	,onThemeChanged: function() {
	}
	,initializeComponent: function() {
		if(this._isInitialized == true) {
			return;
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onInitialize();
		}
		this.onInitialize();
		if(this._layout == null) {
			this.set_layout(this.createLayout());
		}
		this._isInitialized = true;
		if(this.hasEvent("initialize")) {
			this.dispatch(new haxe_ui_events_UIEvent("initialize"));
		}
	}
	,_initialSizeApplied: null
	,validateInitialSize: function(isInitialized) {
		if(isInitialized == false && this._style != null && this._initialSizeApplied == false) {
			if((this._style.initialWidth != null || this._style.initialPercentWidth != null) && (this.get_width() <= 0 && this.get_percentWidth() == null)) {
				if(this._style.initialWidth != null) {
					this.set_width(this._style.initialWidth);
					this._initialSizeApplied = true;
				} else if(this._style.initialPercentWidth != null) {
					this.set_percentWidth(this._style.initialPercentWidth);
					this._initialSizeApplied = true;
				}
			}
			if((this._style.initialHeight != null || this._style.initialPercentHeight != null) && (this.get_height() <= 0 && this.get_percentHeight() == null)) {
				if(this._style.initialHeight != null) {
					this.set_height(this._style.initialHeight);
					this._initialSizeApplied = true;
				} else if(this._style.initialPercentHeight != null) {
					this.set_percentHeight(this._style.initialPercentHeight);
					this._initialSizeApplied = true;
				}
			}
		}
	}
	,validateComponentData: function() {
		this.behaviours.validateData();
		if(this._compositeBuilder != null) {
			this._compositeBuilder.validateComponentData();
		}
	}
	,validateComponentLayout: function() {
		this.get_layout().refresh();
		while(this.validateComponentAutoSize()) this.get_layout().refresh();
		var sizeChanged = false;
		if(this._componentWidth != this._actualWidth || this._componentHeight != this._actualHeight) {
			this._actualWidth = this._componentWidth;
			this._actualHeight = this._componentHeight;
			this.enforceSizeConstraints();
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			this.onResized();
			this.dispatch(new haxe_ui_events_UIEvent("resize"));
			sizeChanged = true;
		}
		if(this._compositeBuilder != null) {
			if(this._compositeBuilder.validateComponentLayout()) {
				sizeChanged = true;
			}
		}
		return sizeChanged;
	}
	,enforceSizeConstraints: function() {
		if(this.get_style() != null) {
			if(this.get_style().minWidth != null && this._componentWidth < this.get_style().minWidth) {
				this._componentWidth = this._actualWidth = this._width = this.get_style().minWidth;
			}
			if(this.get_style().maxWidth != null && this.get_style().maxPercentWidth == null && this._componentWidth > this.get_style().maxWidth) {
				this._componentWidth = this._actualWidth = this._width = this.get_style().maxWidth;
			} else if(this.get_style().maxWidth == null && this.get_style().maxPercentWidth != null) {
				var p = this;
				var max = 0;
				while(p != null) {
					if(p.get_style() != null && p.get_style().maxPercentWidth == null) {
						max += p.get_width();
						break;
					}
					if(p.get_style() != null && p != this) {
						max -= p.get_style().paddingLeft + p.get_style().paddingRight;
					}
					p = p.parentComponent;
				}
				max = max * this.get_style().maxPercentWidth / 100;
				if(max > 0 && this._componentWidth > max) {
					this._componentWidth = this._actualWidth = this._width = max;
				}
			}
			if(this.get_style().minHeight != null && this._componentHeight < this.get_style().minHeight) {
				this._componentHeight = this._actualHeight = this._height = this.get_style().minHeight;
			}
			if(this.get_style().maxHeight != null && this.get_style().maxPercentHeight == null && this._componentHeight > this.get_style().maxHeight) {
				this._componentHeight = this._actualHeight = this._height = this.get_style().maxHeight;
			} else if(this.get_style().maxHeight == null && this.get_style().maxPercentHeight != null) {
				var p = this;
				var max = 0;
				while(p != null) {
					if(p.get_style() != null && p.get_style().maxPercentHeight == null) {
						max += p.get_height();
						break;
					}
					if(p.get_style() != null && p != this) {
						max -= p.get_style().paddingTop + p.get_style().paddingBottom;
					}
					p = p.parentComponent;
				}
				max = max * this.get_style().maxPercentHeight / 100;
				if(max > 0 && this._componentHeight > max) {
					this._componentHeight = this._actualHeight = this._height = max;
				}
			}
		}
	}
	,validateComponentStyle: function() {
		var s = haxe_ui_Toolkit.styleSheet.buildStyleFor(this);
		if(this.get_styleSheet() != null) {
			var localStyle = this.get_styleSheet().buildStyleFor(this);
			s.apply(localStyle);
		}
		s.apply(this.get_customStyle());
		if(this._style == null || this._style.equalTo(s) == false) {
			var marginsChanged = false;
			if(this.parentComponent != null && this._style != null) {
				marginsChanged = this._style.marginLeft != s.marginLeft || this._style.marginRight != s.marginRight || this._style.marginTop != s.marginTop || this._style.marginBottom != s.marginBottom;
			}
			var bordersChanged = false;
			if(this._style != null && this._style.get_fullBorderSize() != s.get_fullBorderSize()) {
				bordersChanged = true;
			}
			this._style = s;
			this.applyStyle(s);
			if(bordersChanged == true) {
				if(!(this._layout == null || this._layoutLocked == true)) {
					this.invalidateComponent("layout",false);
				}
			}
			if(marginsChanged == true) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
		}
	}
	,validateComponentPosition: function() {
		this.handlePosition(this._left,this._top,this._style);
		this.onMoved();
		this.dispatch(new haxe_ui_events_UIEvent("move"));
	}
	,updateComponentDisplay: function() {
		if(this.get_componentWidth() == null || this.get_componentHeight() == null) {
			return;
		}
		this.handleSize(this.get_componentWidth(),this.get_componentHeight(),this._style);
		if(this._componentClipRect != null || this.get_style() != null && this.get_style().clip != null && this.get_style().clip == true) {
			this.handleClipRect(this._componentClipRect != null ? this._componentClipRect : new haxe_ui_geom_Rectangle(0,0,this.get_componentWidth(),this.get_componentHeight()));
		}
	}
	,validateComponentAutoSize: function() {
		var invalidate = false;
		if(this.get_autoWidth() == true || this.get_autoHeight() == true) {
			var s = this.get_layout().calcAutoSize();
			if(this.get_autoWidth() == true) {
				if(s.width != this._componentWidth) {
					this._componentWidth = s.width;
					invalidate = true;
				}
			}
			if(this.get_autoHeight() == true) {
				if(s.height != this._componentHeight) {
					this._componentHeight = s.height;
					invalidate = true;
				}
			}
		}
		return invalidate;
	}
	,_pauseAnimationStyleChanges: null
	,applyStyle: function(style) {
		haxe_ui_backend_ComponentImpl.prototype.applyStyle.call(this,style);
		if(style != null && this._initialSizeApplied == false) {
			if((style.initialWidth != null || style.initialPercentWidth != null) && (this.get_width() <= 0 && this.get_percentWidth() == null)) {
				if(style.initialWidth != null) {
					this.set_width(style.initialWidth);
					this._initialSizeApplied = true;
				} else if(style.initialPercentWidth != null) {
					this.set_percentWidth(style.initialPercentWidth);
					this._initialSizeApplied = true;
				}
			}
			if((style.initialHeight != null || style.initialPercentHeight != null) && (this.get_height() <= 0 && this.get_percentHeight() == null)) {
				if(style.initialHeight != null) {
					this.set_height(style.initialHeight);
					this._initialSizeApplied = true;
				} else if(style.initialPercentHeight != null) {
					this.set_percentHeight(style.initialPercentHeight);
					this._initialSizeApplied = true;
				}
			}
		}
		if(style.left != null) {
			this.set_left(style.left);
		}
		if(style.top != null) {
			this.set_top(style.top);
		}
		if(style.percentWidth != null) {
			this._width = null;
			this.set_componentWidth(null);
			this.set_percentWidth(style.percentWidth);
		}
		if(style.percentHeight != null) {
			this._height = null;
			this.set_componentHeight(null);
			this.set_percentHeight(style.percentHeight);
		}
		if(style.width != null) {
			this.set_percentWidth(null);
			this.set_width(style.width);
		}
		if(style.height != null) {
			this.set_percentHeight(null);
			this.set_height(style.height);
		}
		if(style.native != null) {
			this.set_native(style.native);
		}
		if(style.hidden != null) {
			this.set_hidden(style.hidden);
		}
		if(this._pauseAnimationStyleChanges == false) {
			if(style.animationName != null) {
				var animationKeyFrames = haxe_ui_Toolkit.styleSheet.get_animations().h[style.animationName];
				this.applyAnimationKeyFrame(animationKeyFrames,style.animationOptions);
			} else if(this.get_componentAnimation() != null) {
				this.set_componentAnimation(null);
			}
		}
		if(style.pointerEvents != null && style.pointerEvents != "none") {
			if(this.hasEvent("mouseover",$bind(this,this.onPointerEventsMouseOver)) == false) {
				if(style.cursor == null) {
					this.get_customStyle().cursor = "pointer";
				}
				this.registerEvent("mouseover",$bind(this,this.onPointerEventsMouseOver));
			}
			if(this.hasEvent("mouseout",$bind(this,this.onPointerEventsMouseOut)) == false) {
				this.registerEvent("mouseout",$bind(this,this.onPointerEventsMouseOut));
			}
			if(this.hasEvent("mousedown",$bind(this,this.onPointerEventsMouseDown)) == false) {
				this.registerEvent("mousedown",$bind(this,this.onPointerEventsMouseDown));
			}
			if(this.hasEvent("mouseup",$bind(this,this.onPointerEventsMouseUp)) == false) {
				this.registerEvent("mouseup",$bind(this,this.onPointerEventsMouseUp));
			}
			this.handleFrameworkProperty("allowMouseInteraction",true);
		} else if(style.pointerEvents != null) {
			if(this.hasEvent("mouseover",$bind(this,this.onPointerEventsMouseOver)) == true) {
				this.get_customStyle().cursor = null;
				this.unregisterEvent("mouseover",$bind(this,this.onPointerEventsMouseOver));
			}
			if(this.hasEvent("mouseout",$bind(this,this.onPointerEventsMouseOut)) == true) {
				this.unregisterEvent("mouseout",$bind(this,this.onPointerEventsMouseOut));
			}
			if(this.hasEvent("mousedown",$bind(this,this.onPointerEventsMouseDown)) == true) {
				this.unregisterEvent("mousedown",$bind(this,this.onPointerEventsMouseDown));
			}
			if(this.hasEvent("mouseup",$bind(this,this.onPointerEventsMouseUp)) == true) {
				this.unregisterEvent("mouseup",$bind(this,this.onPointerEventsMouseUp));
			}
			this.handleFrameworkProperty("allowMouseInteraction",false);
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.applyStyle(style);
		}
	}
	,onPointerEventsMouseOver: function(e) {
		this.addClass(":hover",true,true);
	}
	,onPointerEventsMouseOut: function(e) {
		this.removeClass(":hover",true,true);
	}
	,onPointerEventsMouseDown: function(e) {
		this.addClass(":down",true,true);
	}
	,onPointerEventsMouseUp: function(e) {
		this.removeClass(":down",true,true);
	}
	,applyAnimationKeyFrame: function(animationKeyFrames,options) {
		var _gthis = this;
		if(this._animatable == false || options == null || options.duration == 0 || this._componentAnimation != null && this._componentAnimation.name == animationKeyFrames.id && options.compareToAnimation(this._componentAnimation) == true) {
			return;
		}
		if(this.hasEvent("animationstart")) {
			this.dispatch(new haxe_ui_events_AnimationEvent("animationstart"));
		}
		this.set_componentAnimation(haxe_ui_styles_animation_Animation.createWithKeyFrames(animationKeyFrames,this,options));
		this.get_componentAnimation().run(function() {
			if(_gthis.hasEvent("animationend")) {
				_gthis.dispatch(new haxe_ui_events_AnimationEvent("animationend"));
			}
		});
	}
	,cloneComponent: function() {
		var c = haxe_ui_backend_ComponentImpl.prototype.cloneComponent.call(this);
		if(this.get_styleNames() != null) {
			c.set_styleNames(this.get_styleNames());
		}
		if(this.get_styleString() != null) {
			c.set_styleString(this.get_styleString());
		}
		var tmp = this._ready == false;
		if(this._hidden == true) {
			c.hide();
		}
		if(this.get_autoWidth() == false && this.get_width() > 0) {
			c.set_width(this.get_width());
		}
		if(this.get_autoHeight() == false && this.get_height() > 0) {
			c.set_height(this.get_height());
		}
		if(this.get_customStyle() != null) {
			if(c.get_customStyle() == null) {
				c.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
			}
			c.get_customStyle().apply(this.get_customStyle());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,get_isComponentClipped: function() {
		if(this._compositeBuilder != null) {
			return this._compositeBuilder.get_isComponentClipped();
		}
		return this.get_componentClipRect() != null;
	}
	,cssName: null
	,get_cssName: function() {
		var cssName = null;
		if(this._compositeBuilder != null) {
			cssName = this._compositeBuilder.get_cssName();
		}
		if(cssName == null) {
			var c = js_Boot.getClass(this);
			cssName = c.__name__.split(".").pop().toLowerCase();
		}
		return cssName;
	}
	,isComponentSolid: null
	,get_isComponentSolid: function() {
		if(this.get_style() == null) {
			return false;
		}
		if(this.get_style().backgroundColor != null || this.get_style().backgroundImage != null) {
			if(this.get_style().opacity == null || this.get_style().opacity > 0) {
				if(this.get_style().backgroundOpacity == null || this.get_style().backgroundOpacity > 0) {
					return true;
				}
			}
		}
		return false;
	}
	,registerBehaviours: function() {
		haxe_ui_backend_ComponentImpl.prototype.registerBehaviours.call(this);
	}
	,get_color: function() {
		if(this.get_customStyle().color != null) {
			return this.get_customStyle().color;
		}
		if(this.get_style() == null || this.get_style().color == null) {
			return null;
		}
		return this.get_style().color;
	}
	,set_color: function(value) {
		if(this.get_customStyle().color == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().color = null;
		} else {
			this.get_customStyle().color = haxe_ui_util_Color.toInt(value);
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_backgroundColor: function() {
		if(this.get_customStyle().backgroundColor != null) {
			return this.get_customStyle().backgroundColor;
		}
		if(this.get_style() == null || this.get_style().backgroundColor == null) {
			return null;
		}
		return this.get_style().backgroundColor;
	}
	,set_backgroundColor: function(value) {
		if(this.get_customStyle().backgroundColor == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().backgroundColor = null;
		} else {
			this.get_customStyle().backgroundColor = haxe_ui_util_Color.toInt(value);
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_backgroundColorEnd: function() {
		if(this.get_customStyle().backgroundColorEnd != null) {
			return this.get_customStyle().backgroundColorEnd;
		}
		if(this.get_style() == null || this.get_style().backgroundColorEnd == null) {
			return null;
		}
		return this.get_style().backgroundColorEnd;
	}
	,set_backgroundColorEnd: function(value) {
		if(this.get_customStyle().backgroundColorEnd == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().backgroundColorEnd = null;
		} else {
			this.get_customStyle().backgroundColorEnd = haxe_ui_util_Color.toInt(value);
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_backgroundImage: function() {
		if(this.get_customStyle().backgroundImage != null) {
			return this.get_customStyle().backgroundImage;
		}
		if(this.get_style() == null || this.get_style().backgroundImage == null) {
			return null;
		}
		return this.get_style().backgroundImage;
	}
	,set_backgroundImage: function(value) {
		if(haxe_ui_util_Variant.eq(this.get_customStyle().backgroundImage,value)) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().backgroundImage = null;
		} else {
			this.get_customStyle().backgroundImage = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_borderColor: function() {
		if(this.get_customStyle().borderColor != null) {
			return this.get_customStyle().borderColor;
		}
		if(this.get_style() == null || this.get_style().borderColor == null) {
			return null;
		}
		return this.get_style().borderColor;
	}
	,set_borderColor: function(value) {
		if(this.get_customStyle().borderColor == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().borderColor = null;
		} else {
			this.get_customStyle().borderColor = haxe_ui_util_Color.toInt(value);
		}
		this.get_customStyle().borderTopColor = haxe_ui_util_Color.toInt(value);
		this.get_customStyle().borderLeftColor = haxe_ui_util_Color.toInt(value);
		this.get_customStyle().borderBottomColor = haxe_ui_util_Color.toInt(value);
		this.get_customStyle().borderRightColor = haxe_ui_util_Color.toInt(value);
		this.invalidateComponent("style",false);
		return value;
	}
	,get_borderSize: function() {
		if(this.get_customStyle().borderSize != null) {
			return this.get_customStyle().borderSize;
		}
		if(this.get_style() == null || this.get_style().borderSize == null) {
			return null;
		}
		return this.get_style().borderSize;
	}
	,set_borderSize: function(value) {
		if(this.get_customStyle().borderSize == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().borderSize = null;
		} else {
			this.get_customStyle().borderSize = value;
		}
		this.get_customStyle().borderTopSize = value;
		this.get_customStyle().borderLeftSize = value;
		this.get_customStyle().borderBottomSize = value;
		this.get_customStyle().borderRightSize = value;
		this.invalidateComponent("style",false);
		return value;
	}
	,get_borderRadius: function() {
		if(this.get_customStyle().borderRadius != null) {
			return this.get_customStyle().borderRadius;
		}
		if(this.get_style() == null || this.get_style().borderRadius == null) {
			return null;
		}
		return this.get_style().borderRadius;
	}
	,set_borderRadius: function(value) {
		if(this.get_customStyle().borderRadius == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().borderRadius = null;
		} else {
			this.get_customStyle().borderRadius = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_padding: function() {
		if(this.get_customStyle().padding != null) {
			return this.get_customStyle().padding;
		}
		if(this.get_style() == null || this.get_style().padding == null) {
			return null;
		}
		return this.get_style().padding;
	}
	,set_padding: function(value) {
		if(this.get_customStyle().padding == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().set_padding(null);
		} else {
			this.get_customStyle().set_padding(value);
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_paddingLeft: function() {
		if(this.get_customStyle().paddingLeft != null) {
			return this.get_customStyle().paddingLeft;
		}
		if(this.get_style() == null || this.get_style().paddingLeft == null) {
			return null;
		}
		return this.get_style().paddingLeft;
	}
	,set_paddingLeft: function(value) {
		if(this.get_customStyle().paddingLeft == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().paddingLeft = null;
		} else {
			this.get_customStyle().paddingLeft = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_paddingRight: function() {
		if(this.get_customStyle().paddingRight != null) {
			return this.get_customStyle().paddingRight;
		}
		if(this.get_style() == null || this.get_style().paddingRight == null) {
			return null;
		}
		return this.get_style().paddingRight;
	}
	,set_paddingRight: function(value) {
		if(this.get_customStyle().paddingRight == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().paddingRight = null;
		} else {
			this.get_customStyle().paddingRight = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_paddingTop: function() {
		if(this.get_customStyle().paddingTop != null) {
			return this.get_customStyle().paddingTop;
		}
		if(this.get_style() == null || this.get_style().paddingTop == null) {
			return null;
		}
		return this.get_style().paddingTop;
	}
	,set_paddingTop: function(value) {
		if(this.get_customStyle().paddingTop == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().paddingTop = null;
		} else {
			this.get_customStyle().paddingTop = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_paddingBottom: function() {
		if(this.get_customStyle().paddingBottom != null) {
			return this.get_customStyle().paddingBottom;
		}
		if(this.get_style() == null || this.get_style().paddingBottom == null) {
			return null;
		}
		return this.get_style().paddingBottom;
	}
	,set_paddingBottom: function(value) {
		if(this.get_customStyle().paddingBottom == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().paddingBottom = null;
		} else {
			this.get_customStyle().paddingBottom = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_marginLeft: function() {
		if(this.get_customStyle().marginLeft != null) {
			return this.get_customStyle().marginLeft;
		}
		if(this.get_style() == null || this.get_style().marginLeft == null) {
			return null;
		}
		return this.get_style().marginLeft;
	}
	,set_marginLeft: function(value) {
		if(this.get_customStyle().marginLeft == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().marginLeft = null;
		} else {
			this.get_customStyle().marginLeft = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_marginRight: function() {
		if(this.get_customStyle().marginRight != null) {
			return this.get_customStyle().marginRight;
		}
		if(this.get_style() == null || this.get_style().marginRight == null) {
			return null;
		}
		return this.get_style().marginRight;
	}
	,set_marginRight: function(value) {
		if(this.get_customStyle().marginRight == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().marginRight = null;
		} else {
			this.get_customStyle().marginRight = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_marginTop: function() {
		if(this.get_customStyle().marginTop != null) {
			return this.get_customStyle().marginTop;
		}
		if(this.get_style() == null || this.get_style().marginTop == null) {
			return null;
		}
		return this.get_style().marginTop;
	}
	,set_marginTop: function(value) {
		if(this.get_customStyle().marginTop == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().marginTop = null;
		} else {
			this.get_customStyle().marginTop = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_marginBottom: function() {
		if(this.get_customStyle().marginBottom != null) {
			return this.get_customStyle().marginBottom;
		}
		if(this.get_style() == null || this.get_style().marginBottom == null) {
			return null;
		}
		return this.get_style().marginBottom;
	}
	,set_marginBottom: function(value) {
		if(this.get_customStyle().marginBottom == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().marginBottom = null;
		} else {
			this.get_customStyle().marginBottom = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_clip: function() {
		if(this.get_customStyle().clip != null) {
			return this.get_customStyle().clip;
		}
		if(this.get_style() == null || this.get_style().clip == null) {
			return null;
		}
		return this.get_style().clip;
	}
	,set_clip: function(value) {
		if(this.get_customStyle().clip == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().clip = null;
		} else {
			this.get_customStyle().clip = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_opacity: function() {
		if(this.get_customStyle().opacity != null) {
			return this.get_customStyle().opacity;
		}
		if(this.get_style() == null || this.get_style().opacity == null) {
			return null;
		}
		return this.get_style().opacity;
	}
	,set_opacity: function(value) {
		if(this.get_customStyle().opacity == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().opacity = null;
		} else {
			this.get_customStyle().opacity = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_horizontalAlign: function() {
		if(this.get_customStyle().horizontalAlign != null) {
			return this.get_customStyle().horizontalAlign;
		}
		if(this.get_style() == null || this.get_style().horizontalAlign == null) {
			return null;
		}
		return this.get_style().horizontalAlign;
	}
	,set_horizontalAlign: function(value) {
		if(this.get_customStyle().horizontalAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().horizontalAlign = null;
		} else {
			this.get_customStyle().horizontalAlign = value;
		}
		this.invalidateComponent("style",false);
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,get_verticalAlign: function() {
		if(this.get_customStyle().verticalAlign != null) {
			return this.get_customStyle().verticalAlign;
		}
		if(this.get_style() == null || this.get_style().verticalAlign == null) {
			return null;
		}
		return this.get_style().verticalAlign;
	}
	,set_verticalAlign: function(value) {
		if(this.get_customStyle().verticalAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().verticalAlign = null;
		} else {
			this.get_customStyle().verticalAlign = value;
		}
		this.invalidateComponent("style",false);
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,self: function() {
		return new haxe_ui_core_Component();
	}
	,_internal__onDragStart: null
	,onDragStart: null
	,set_onDragStart: function(value) {
		if(this._internal__onDragStart != null) {
			this.unregisterEvent("dragstart",this._internal__onDragStart);
			this._internal__onDragStart = null;
		}
		if(value != null) {
			this._internal__onDragStart = value;
			this.registerEvent("dragstart",value);
		}
		return value;
	}
	,_internal__onDrag: null
	,onDrag: null
	,set_onDrag: function(value) {
		if(this._internal__onDrag != null) {
			this.unregisterEvent("drag",this._internal__onDrag);
			this._internal__onDrag = null;
		}
		if(value != null) {
			this._internal__onDrag = value;
			this.registerEvent("drag",value);
		}
		return value;
	}
	,_internal__onDragEnd: null
	,onDragEnd: null
	,set_onDragEnd: function(value) {
		if(this._internal__onDragEnd != null) {
			this.unregisterEvent("dragend",this._internal__onDragEnd);
			this._internal__onDragEnd = null;
		}
		if(value != null) {
			this._internal__onDragEnd = value;
			this.registerEvent("dragend",value);
		}
		return value;
	}
	,_internal__onAnimationStart: null
	,onAnimationStart: null
	,set_onAnimationStart: function(value) {
		if(this._internal__onAnimationStart != null) {
			this.unregisterEvent("animationstart",this._internal__onAnimationStart);
			this._internal__onAnimationStart = null;
		}
		if(value != null) {
			this._internal__onAnimationStart = value;
			this.registerEvent("animationstart",value);
		}
		return value;
	}
	,_internal__onAnimationFrame: null
	,onAnimationFrame: null
	,set_onAnimationFrame: function(value) {
		if(this._internal__onAnimationFrame != null) {
			this.unregisterEvent("animationframe",this._internal__onAnimationFrame);
			this._internal__onAnimationFrame = null;
		}
		if(value != null) {
			this._internal__onAnimationFrame = value;
			this.registerEvent("animationframe",value);
		}
		return value;
	}
	,_internal__onAnimationEnd: null
	,onAnimationEnd: null
	,set_onAnimationEnd: function(value) {
		if(this._internal__onAnimationEnd != null) {
			this.unregisterEvent("animationend",this._internal__onAnimationEnd);
			this._internal__onAnimationEnd = null;
		}
		if(value != null) {
			this._internal__onAnimationEnd = value;
			this.registerEvent("animationend",value);
		}
		return value;
	}
	,_internal__onClick: null
	,onClick: null
	,set_onClick: function(value) {
		if(this._internal__onClick != null) {
			this.unregisterEvent("click",this._internal__onClick);
			this._internal__onClick = null;
		}
		if(value != null) {
			this._internal__onClick = value;
			this.registerEvent("click",value);
		}
		return value;
	}
	,_internal__onMouseOver: null
	,onMouseOver: null
	,set_onMouseOver: function(value) {
		if(this._internal__onMouseOver != null) {
			this.unregisterEvent("mouseover",this._internal__onMouseOver);
			this._internal__onMouseOver = null;
		}
		if(value != null) {
			this._internal__onMouseOver = value;
			this.registerEvent("mouseover",value);
		}
		return value;
	}
	,_internal__onMouseOut: null
	,onMouseOut: null
	,set_onMouseOut: function(value) {
		if(this._internal__onMouseOut != null) {
			this.unregisterEvent("mouseout",this._internal__onMouseOut);
			this._internal__onMouseOut = null;
		}
		if(value != null) {
			this._internal__onMouseOut = value;
			this.registerEvent("mouseout",value);
		}
		return value;
	}
	,_internal__onDblClick: null
	,onDblClick: null
	,set_onDblClick: function(value) {
		if(this._internal__onDblClick != null) {
			this.unregisterEvent("doubleclick",this._internal__onDblClick);
			this._internal__onDblClick = null;
		}
		if(value != null) {
			this._internal__onDblClick = value;
			this.registerEvent("doubleclick",value);
		}
		return value;
	}
	,_internal__onRightClick: null
	,onRightClick: null
	,set_onRightClick: function(value) {
		if(this._internal__onRightClick != null) {
			this.unregisterEvent("rightclick",this._internal__onRightClick);
			this._internal__onRightClick = null;
		}
		if(value != null) {
			this._internal__onRightClick = value;
			this.registerEvent("rightclick",value);
		}
		return value;
	}
	,_internal__onChange: null
	,onChange: null
	,set_onChange: function(value) {
		if(this._internal__onChange != null) {
			this.unregisterEvent("change",this._internal__onChange);
			this._internal__onChange = null;
		}
		if(value != null) {
			this._internal__onChange = value;
			this.registerEvent("change",value);
		}
		return value;
	}
	,__class__: haxe_ui_core_Component
	,__properties__: $extend(haxe_ui_backend_ComponentImpl.prototype.__properties__,{set_onChange:"set_onChange",set_onRightClick:"set_onRightClick",set_onDblClick:"set_onDblClick",set_onMouseOut:"set_onMouseOut",set_onMouseOver:"set_onMouseOver",set_onClick:"set_onClick",set_onAnimationEnd:"set_onAnimationEnd",set_onAnimationFrame:"set_onAnimationFrame",set_onAnimationStart:"set_onAnimationStart",set_onDragEnd:"set_onDragEnd",set_onDrag:"set_onDrag",set_onDragStart:"set_onDragStart",set_verticalAlign:"set_verticalAlign",get_verticalAlign:"get_verticalAlign",set_horizontalAlign:"set_horizontalAlign",get_horizontalAlign:"get_horizontalAlign",set_opacity:"set_opacity",get_opacity:"get_opacity",set_clip:"set_clip",get_clip:"get_clip",set_marginBottom:"set_marginBottom",get_marginBottom:"get_marginBottom",set_marginTop:"set_marginTop",get_marginTop:"get_marginTop",set_marginRight:"set_marginRight",get_marginRight:"get_marginRight",set_marginLeft:"set_marginLeft",get_marginLeft:"get_marginLeft",set_paddingBottom:"set_paddingBottom",get_paddingBottom:"get_paddingBottom",set_paddingTop:"set_paddingTop",get_paddingTop:"get_paddingTop",set_paddingRight:"set_paddingRight",get_paddingRight:"get_paddingRight",set_paddingLeft:"set_paddingLeft",get_paddingLeft:"get_paddingLeft",set_padding:"set_padding",get_padding:"get_padding",set_borderRadius:"set_borderRadius",get_borderRadius:"get_borderRadius",set_borderSize:"set_borderSize",get_borderSize:"get_borderSize",set_borderColor:"set_borderColor",get_borderColor:"get_borderColor",set_backgroundImage:"set_backgroundImage",get_backgroundImage:"get_backgroundImage",set_backgroundColorEnd:"set_backgroundColorEnd",get_backgroundColorEnd:"get_backgroundColorEnd",set_backgroundColor:"set_backgroundColor",get_backgroundColor:"get_backgroundColor",set_color:"set_color",get_color:"get_color",get_isComponentSolid:"get_isComponentSolid",get_cssName:"get_cssName",get_namedComponents:"get_namedComponents",set_scriptAccess:"set_scriptAccess",get_scriptAccess:"get_scriptAccess",set_layout:"set_layout",get_layout:"get_layout",set_includeInLayout:"set_includeInLayout",get_includeInLayout:"get_includeInLayout",set_styleSheet:"set_styleSheet",get_styleSheet:"get_styleSheet",set_styleString:"set_styleString",get_styleString:"get_styleString",set_styleNames:"set_styleNames",get_styleNames:"get_styleNames",set_customStyle:"set_customStyle",get_customStyle:"get_customStyle",set_hidden:"set_hidden",get_hidden:"get_hidden",get_numComponents:"get_numComponents",get_rootComponent:"get_rootComponent",set_dragOptions:"set_dragOptions",get_dragOptions:"get_dragOptions",set_dragInitiator:"set_dragInitiator",get_dragInitiator:"get_dragInitiator",set_draggable:"set_draggable",get_draggable:"get_draggable",get_screen:"get_screen",set_componentAnimation:"set_componentAnimation",get_componentAnimation:"get_componentAnimation",set_animatable:"set_animatable",get_animatable:"get_animatable",set_native:"set_native",get_native:"get_native"})
});
var haxe_ui_containers_Box = function() {
	this._direction = null;
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.containers.Box"] = haxe_ui_containers_Box;
haxe_ui_containers_Box.__name__ = "haxe.ui.containers.Box";
haxe_ui_containers_Box.__super__ = haxe_ui_core_Component;
haxe_ui_containers_Box.prototype = $extend(haxe_ui_core_Component.prototype,{
	_layoutName: null
	,get_layoutName: function() {
		return this._layoutName;
	}
	,set_layoutName: function(value) {
		if(this._layoutName == value) {
			return value;
		}
		this._layoutName = value;
		this.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(this.get_layoutName()));
		return value;
	}
	,createDefaults: function() {
		haxe_ui_core_Component.prototype.createDefaults.call(this);
		if(this._defaultLayoutClass == null) {
			this._defaultLayoutClass = haxe_ui_layouts_DefaultLayout;
		}
	}
	,_direction: null
	,applyStyle: function(style) {
		haxe_ui_core_Component.prototype.applyStyle.call(this,style);
		if(style.direction != null && style.direction != this._direction) {
			this._direction = style.direction;
			this.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(this._direction));
		}
	}
	,registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_layouts_DefaultLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("icon",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_icon: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.get("icon");
	}
	,set_icon: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("icon",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"icon"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_layoutName() != null) {
			c.set_layoutName(this.get_layoutName());
		}
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Box();
	}
	,__class__: haxe_ui_containers_Box
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_icon:"set_icon",get_icon:"get_icon",set_layoutName:"set_layoutName",get_layoutName:"get_layoutName"})
});
var haxe_ui_containers_Absolute = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_AbsoluteLayout());
};
$hxClasses["haxe.ui.containers.Absolute"] = haxe_ui_containers_Absolute;
haxe_ui_containers_Absolute.__name__ = "haxe.ui.containers.Absolute";
haxe_ui_containers_Absolute.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Absolute.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Absolute();
	}
	,__class__: haxe_ui_containers_Absolute
});
var gameboard_Board = function(situation,orientationColor,marking,initialWidth,initialHeight) {
	if(initialHeight == null) {
		initialHeight = 250;
	}
	if(initialWidth == null) {
		initialWidth = 250;
	}
	if(orientationColor == null) {
		orientationColor = net_shared_PieceColor.White;
	}
	this.letters = [];
	haxe_ui_containers_Absolute.call(this);
	this.set_width(initialWidth);
	this.set_height(initialHeight);
	this.resizeData = new gameboard__$Board_ResizeData(initialWidth,initialHeight,-1);
	if(marking == null) {
		marking = gameboard_util_Marking.None;
	}
	this.lettersEnabled = marking != gameboard_util_Marking.None;
	this.orientationColor = orientationColor;
	this._shownSituation = situation.copy();
	this.hexagonLayer = new haxe_ui_containers_Absolute();
	this.pieceLayer = new haxe_ui_containers_Absolute();
	this.dimensions = this.getDimensions();
	this.addComponent(this.hexagonLayer);
	this.addComponent(this.pieceLayer);
	this.produceHexagons(marking == gameboard_util_Marking.Over);
	this.producePieces();
	if(this.lettersEnabled) {
		this.drawLetters();
	}
	var c = this;
	if(c != null) {
		c.registerEvent("resize",$bind(this,this.resize));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "this" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gameboard.Board", methodName : "new"});
	}
};
$hxClasses["gameboard.Board"] = gameboard_Board;
gameboard_Board.__name__ = "gameboard.Board";
gameboard_Board.hexExists = function(p) {
	if(p != null) {
		return p.isValid();
	} else {
		return null;
	}
};
gameboard_Board.__super__ = haxe_ui_containers_Absolute;
gameboard_Board.prototype = $extend(haxe_ui_containers_Absolute.prototype,{
	dimensions: null
	,lettersEnabled: null
	,hexagons: null
	,pieces: null
	,orientationColor: null
	,_shownSituation: null
	,letters: null
	,hexagonLayer: null
	,pieceLayer: null
	,resizeData: null
	,get_shownSituation: function() {
		return this._shownSituation.copy();
	}
	,resize: function(e) {
		var now = HxOverrides.now() / 1000;
		var secsSinceLastResize = now - this.resizeData.lastResized;
		if(secsSinceLastResize < 0.5) {
			if(this.resizeData.delayedResizeTimer == null) {
				var _g = $bind(this,this.resize);
				var e = null;
				var tmp = function() {
					_g(e);
				};
				this.resizeData.delayedResizeTimer = haxe_Timer.delay(tmp,Math.ceil((0.5 - secsSinceLastResize) * 1000));
			}
			return;
		}
		if(this.get_width() == null || this.get_height() == null) {
			return;
		}
		if(this.resizeData.renderedForWidth == this.get_width() && this.resizeData.renderedForHeight == this.get_height()) {
			return;
		}
		this.dimensions = this.getDimensions();
		var _g1 = 0;
		var _g2 = net_shared_board_HexCoords.enumerateScalar();
		while(_g1 < _g2.length) {
			var s = _g2[_g1];
			++_g1;
			var location = net_shared_board_HexCoords.fromScalarCoord(s);
			var position = this.hexCoords(location);
			var hexagon = this.hexagons[s];
			var piece = this.pieces[s];
			hexagon.resize(this.dimensions,position);
			if(piece != null) {
				piece.resize(this.dimensions,position);
			}
		}
		if(this.lettersEnabled) {
			this.removeLetters();
			this.drawLetters();
		}
		this.resizeData = new gameboard__$Board_ResizeData(this.get_width(),this.get_height(),now);
	}
	,setOrientation: function(val) {
		if(val == this.orientationColor) {
			return;
		}
		this.orientationColor = val;
		var _g = 0;
		var _g1 = net_shared_board_HexCoords.enumerateScalar();
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var coords = this.hexCoords(net_shared_board_HexCoords.fromScalarCoord(s));
			var hexagon = this.hexagons[s];
			var piece = this.pieces[s];
			hexagon.setCenterAt(coords);
			if(piece != null) {
				piece.setCenterAt(coords);
			}
		}
		if(!Lambda.empty(this.letters)) {
			this.swapLetters();
		}
	}
	,setShownSituation: function(val) {
		var _g = 0;
		var _g1 = this.pieces;
		while(_g < _g1.length) {
			var piece = _g1[_g];
			++_g;
			this.pieceLayer.removeComponent(piece);
		}
		this.pieces = [];
		this._shownSituation = val.copy();
		this.producePieces();
	}
	,clearPieces: function() {
		this.setShownSituation(net_shared_board_Situation.empty());
	}
	,setHexDirectly: function(location,hex) {
		if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
			var oldIntellectorPosition = this._shownSituation.intellectorCoords(net_shared_board_Hex.color(hex));
			if(oldIntellectorPosition != null) {
				this.pieceLayer.removeComponent(this.getPiece(oldIntellectorPosition));
				this.pieces[oldIntellectorPosition.toScalarCoord()] = null;
				var _this = this._shownSituation;
				var hex1 = net_shared_board_InternalHex.Empty;
				if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(_this.pieces,oldIntellectorPosition)) == net_shared_PieceType.Intellector) {
					_this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(_this.pieces,oldIntellectorPosition)));
				}
				if(net_shared_board_Hex.type(hex1) == net_shared_PieceType.Intellector) {
					_this.intellectorPos.set(net_shared_board_Hex.color(hex1),oldIntellectorPosition);
				}
				net_shared_board_PieceArrangement.set(_this.pieces,oldIntellectorPosition,hex1);
			}
		}
		var formerPiece = this.getPiece(location);
		if(formerPiece != null) {
			this.pieceLayer.removeComponent(formerPiece);
		}
		this.producePiece(location,hex);
		var _this = this._shownSituation;
		if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(_this.pieces,location)) == net_shared_PieceType.Intellector) {
			_this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(_this.pieces,location)));
		}
		if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
			_this.intellectorPos.set(net_shared_board_Hex.color(hex),location);
		}
		net_shared_board_PieceArrangement.set(_this.pieces,location,hex);
	}
	,applyPremoveTransposition: function(ply) {
		var departurePiece = this.getPiece(ply.from);
		var destinationPiece = this.getPiece(ply.to);
		if(ply.morphInto != null) {
			this.pieceLayer.removeComponent(departurePiece);
			this.pieces[ply.from.toScalarCoord()] = null;
			var _this = this._shownSituation;
			var coords = ply.from;
			var hex = net_shared_board_InternalHex.Empty;
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(_this.pieces,coords)) == net_shared_PieceType.Intellector) {
				_this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(_this.pieces,coords)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				_this.intellectorPos.set(net_shared_board_Hex.color(hex),coords);
			}
			net_shared_board_PieceArrangement.set(_this.pieces,coords,hex);
			if(destinationPiece != null) {
				this.pieceLayer.removeComponent(destinationPiece);
			}
			this.producePiece(ply.to,net_shared_board_Hex.construct(ply.morphInto,departurePiece.pieceColor));
			var _this = this._shownSituation;
			var coords = ply.to;
			var hex = net_shared_board_Hex.construct(ply.morphInto,departurePiece.pieceColor);
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(_this.pieces,coords)) == net_shared_PieceType.Intellector) {
				_this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(_this.pieces,coords)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				_this.intellectorPos.set(net_shared_board_Hex.color(hex),coords);
			}
			net_shared_board_PieceArrangement.set(_this.pieces,coords,hex);
		} else {
			departurePiece.setCenterAt(this.hexCoords(ply.to));
			this.pieces[ply.to.toScalarCoord()] = departurePiece;
			var _this = this._shownSituation;
			var coords = ply.to;
			var hex = net_shared_board_Hex.construct(departurePiece.pieceType,departurePiece.pieceColor);
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(_this.pieces,coords)) == net_shared_PieceType.Intellector) {
				_this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(_this.pieces,coords)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				_this.intellectorPos.set(net_shared_board_Hex.color(hex),coords);
			}
			net_shared_board_PieceArrangement.set(_this.pieces,coords,hex);
			if(destinationPiece == null) {
				this.pieces[ply.from.toScalarCoord()] = null;
				var _this = this._shownSituation;
				var coords = ply.from;
				var hex = net_shared_board_InternalHex.Empty;
				if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(_this.pieces,coords)) == net_shared_PieceType.Intellector) {
					_this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(_this.pieces,coords)));
				}
				if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
					_this.intellectorPos.set(net_shared_board_Hex.color(hex),coords);
				}
				net_shared_board_PieceArrangement.set(_this.pieces,coords,hex);
			} else if(departurePiece.pieceColor == destinationPiece.pieceColor && (departurePiece.pieceType == net_shared_PieceType.Intellector && destinationPiece.pieceType == net_shared_PieceType.Defensor || departurePiece.pieceType == net_shared_PieceType.Defensor && destinationPiece.pieceType == net_shared_PieceType.Intellector)) {
				destinationPiece.setCenterAt(this.hexCoords(ply.from));
				this.pieces[ply.from.toScalarCoord()] = destinationPiece;
				var _this = this._shownSituation;
				var coords = ply.from;
				var hex = net_shared_board_Hex.construct(destinationPiece.pieceType,destinationPiece.pieceColor);
				if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(_this.pieces,coords)) == net_shared_PieceType.Intellector) {
					_this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(_this.pieces,coords)));
				}
				if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
					_this.intellectorPos.set(net_shared_board_Hex.color(hex),coords);
				}
				net_shared_board_PieceArrangement.set(_this.pieces,coords,hex);
			} else {
				this.pieceLayer.removeComponent(destinationPiece);
				this.pieces[ply.from.toScalarCoord()] = null;
				var _this = this._shownSituation;
				var coords = ply.from;
				var hex = net_shared_board_InternalHex.Empty;
				if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(_this.pieces,coords)) == net_shared_PieceType.Intellector) {
					_this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(_this.pieces,coords)));
				}
				if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
					_this.intellectorPos.set(net_shared_board_Hex.color(hex),coords);
				}
				net_shared_board_PieceArrangement.set(_this.pieces,coords,hex);
			}
		}
	}
	,applyMoveTransposition: function(ply,backInTime) {
		if(backInTime == null) {
			backInTime = false;
		}
		switch(ply._hx_index) {
		case 0:
			var _g = ply.movingPiece;
			var from = ply.from;
			var to = ply.to;
			if(!backInTime) {
				this.movePiece(from,to);
			} else {
				this.movePiece(to,from);
			}
			break;
		case 1:
			var _g = ply.capturingPiece;
			var from = ply.from;
			var to = ply.to;
			var capturedPiece = ply.capturedPiece;
			if(!backInTime) {
				this.movePiece(from,to);
			} else {
				this.movePiece(to,from);
				this.addPiece(to,net_shared_board_Hex.construct(capturedPiece,this._shownSituation.turnColor));
			}
			break;
		case 2:
			var from = ply.from;
			var to = ply.to;
			var capturingPiece = ply.capturingPiece;
			var capturedPiece = ply.capturedPiece;
			if(!backInTime) {
				this.movePiece(from,to,capturedPiece);
			} else {
				this.movePiece(to,from,capturingPiece);
				this.addPiece(to,net_shared_board_Hex.construct(capturedPiece,this._shownSituation.turnColor));
			}
			break;
		case 3:
			var from = ply.from;
			var to = ply.to;
			var promotedTo = ply.promotedTo;
			if(!backInTime) {
				this.movePiece(from,to,promotedTo);
			} else {
				this.movePiece(to,from,net_shared_PieceType.Progressor);
			}
			break;
		case 4:
			var from = ply.from;
			var to = ply.to;
			var capturedPiece = ply.capturedPiece;
			var promotedTo = ply.promotedTo;
			if(!backInTime) {
				this.movePiece(from,to,promotedTo);
			} else {
				this.movePiece(to,from,net_shared_PieceType.Progressor);
				this.addPiece(to,net_shared_board_Hex.construct(capturedPiece,this._shownSituation.turnColor));
			}
			break;
		case 5:
			var from = ply.from;
			var to = ply.to;
			this.swapPieces(from,to);
			break;
		}
		if(!backInTime) {
			this._shownSituation.performPly(ply);
		} else {
			this._shownSituation.revertPly(ply);
		}
	}
	,getHex: function(coords) {
		if(gameboard_Board.hexExists(coords)) {
			return this.hexagons[coords.toScalarCoord()];
		} else {
			return null;
		}
	}
	,getPiece: function(coords) {
		if(gameboard_Board.hexExists(coords)) {
			return this.pieces[coords.toScalarCoord()];
		} else {
			return null;
		}
	}
	,movePiece: function(coords,newCoords,newType) {
		var s = coords.toScalarCoord();
		var newS = newCoords.toScalarCoord();
		var piece = this.pieces[s];
		var capturedPiece = this.pieces[newS];
		if(piece == null) {
			return;
		}
		if(capturedPiece != null) {
			this.pieceLayer.removeComponent(capturedPiece);
		}
		this.pieces[s] = null;
		if(newType != null) {
			this.pieceLayer.removeComponent(piece);
			var hex = net_shared_board_Hex.construct(newType,piece.pieceColor);
			this.producePiece(newCoords,hex);
		} else {
			piece.setCenterAt(this.hexCoords(newCoords));
			this.pieces[newS] = piece;
		}
	}
	,swapPieces: function(coords1,coords2) {
		var piece1 = this.getPiece(coords1);
		var piece2 = this.getPiece(coords2);
		if(piece1 == null || piece2 == null) {
			return;
		}
		piece1.setCenterAt(this.hexCoords(coords2));
		piece2.setCenterAt(this.hexCoords(coords1));
		this.pieces[coords2.toScalarCoord()] = piece1;
		this.pieces[coords1.toScalarCoord()] = piece2;
	}
	,addPiece: function(coords,hex) {
		var s = coords.toScalarCoord();
		this.removePiece(coords);
		if(!net_shared_board_Hex.isEmpty(hex)) {
			this.producePiece(coords,hex);
		}
	}
	,removePiece: function(coords) {
		var s = coords.toScalarCoord();
		var piece = this.pieces[s];
		if(piece == null) {
			return;
		}
		this.pieceLayer.removeComponent(piece);
		this.pieces[s] = null;
	}
	,posToIndexes: function(localEventCoords) {
		var closest = null;
		var distanceSqr = this.dimensions.sideLength * this.dimensions.sideLength;
		var _g = 0;
		while(_g < 7) {
			var j = _g++;
			var _g1 = 0;
			while(_g1 < 9) {
				var i = _g1++;
				var loc = new net_shared_board_HexCoords(i,j);
				if(!gameboard_Board.hexExists(loc)) {
					continue;
				}
				var coords = this.hexCoords(loc);
				var currDistSqr = (coords.x - localEventCoords.x) * (coords.x - localEventCoords.x) + (coords.y - localEventCoords.y) * (coords.y - localEventCoords.y);
				if(distanceSqr > currDistSqr) {
					closest = loc;
					distanceSqr = currDistSqr;
				}
			}
		}
		return closest;
	}
	,hexCoords: function(location) {
		return this.absHexCoords(location.i,location.j,this.orientationColor == net_shared_PieceColor.White);
	}
	,absHexCoords: function(i,j,isOrientationNormal) {
		if(!isOrientationNormal) {
			j = 6 - j - i % 2;
			i = 8 - i;
		}
		var boardCenter = new haxe_ui_geom_Point(this.get_width() / 2,this.get_height() / 2);
		var di = i - 4;
		var dj = j - 3;
		var shiftX = 1.5 * di * this.dimensions.sideLength;
		var shiftY = dj * this.dimensions.height;
		if(Math.abs(di % 2) == 1) {
			shiftY += this.dimensions.height / 2;
		}
		var shift = new haxe_ui_geom_Point(shiftX,shiftY);
		return boardCenter.sum(shift);
	}
	,produceHexagons: function(displayRowNumbers) {
		this.hexagons = [];
		var _g = 0;
		var _g1 = net_shared_board_HexCoords.enumerateScalar();
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var location = net_shared_board_HexCoords.fromScalarCoord(s);
			var position = this.hexCoords(location);
			var displayedRowNumber = displayRowNumbers ? net_shared_converters_Notation.getRow(location.i,location.j) : null;
			var hexagon = new gameboard_components_Hexagon(this.dimensions,location.isDark(),displayedRowNumber,position);
			this.hexagonLayer.addComponent(hexagon);
			this.hexagons.push(hexagon);
		}
	}
	,producePieces: function() {
		this.pieces = [];
		var _g = 0;
		while(_g < 59) {
			var s = _g++;
			var p = net_shared_board_HexCoords.fromScalarCoord(s);
			this.producePiece(p,net_shared_board_PieceArrangement.get(this._shownSituation.pieces,p));
		}
	}
	,producePiece: function(location,hex) {
		var scalarCoord = location.toScalarCoord();
		switch(hex._hx_index) {
		case 0:
			this.pieces[scalarCoord] = null;
			break;
		case 1:
			var pieceData = hex.piece;
			var position = this.hexCoords(location);
			var piece = gameboard_components_Piece.fromData(pieceData,this.dimensions,position);
			this.pieceLayer.addComponent(piece);
			this.pieces[scalarCoord] = piece;
			break;
		}
	}
	,swapLetters: function() {
		var t = this.letters[0].get_text();
		this.letters[0].set_text(this.letters[8].get_text());
		this.letters[8].set_text(t);
		var t = this.letters[1].get_text();
		this.letters[1].set_text(this.letters[7].get_text());
		this.letters[7].set_text(t);
		var t = this.letters[2].get_text();
		this.letters[2].set_text(this.letters[6].get_text());
		this.letters[6].set_text(t);
		var t = this.letters[3].get_text();
		this.letters[3].set_text(this.letters[5].get_text());
		this.letters[5].set_text(t);
	}
	,drawLetters: function() {
		var _g = 0;
		while(_g < 9) {
			var i = _g++;
			var bottomHexLocation = new net_shared_board_HexCoords(i,this.orientationColor == net_shared_PieceColor.White ? 6 - i % 2 : 0);
			var bottomHexCoords = this.hexCoords(bottomHexLocation);
			var letter = this.createLetter(net_shared_converters_Notation.getColumn(i));
			letter.set_width(this.dimensions.width);
			letter.set_left(bottomHexCoords.x - this.dimensions.width / 2);
			letter.set_top(bottomHexCoords.y + this.dimensions.height / 2);
			this.letters.push(letter);
			this.hexagonLayer.addComponent(letter);
		}
	}
	,removeLetters: function() {
		var _g = 0;
		var _g1 = this.letters;
		while(_g < _g1.length) {
			var letter = _g1[_g];
			++_g;
			this.hexagonLayer.removeComponent(letter);
		}
		this.letters = [];
	}
	,createLetter: function(letter) {
		var tf = new haxe_ui_components_Label();
		var _g = 0.7 * this.dimensions.sideLength;
		tf.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,haxe_ui_util_Color.toInt(gfx_utils_Colors.border),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"center",null,null,null,null,_g,true,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
		tf.set_text(letter);
		return tf;
	}
	,getDimensions: function() {
		var sideLengthByWidth = this.get_width() / 14.15;
		var sideLengthByHeight = gameboard_util_HexDimensions.heightToSide(this.get_height() / (this.lettersEnabled ? 7.5 : 7)) / 1.15;
		var sideLength = Math.min(sideLengthByWidth,sideLengthByHeight);
		return new gameboard_util_HexDimensions(sideLength);
	}
	,updateMarking: function() {
		var marking = Preferences.marking.get();
		var lettersWerePresent = this.lettersEnabled;
		var lettersWillBePresent = marking != gameboard_util_Marking.None;
		if(lettersWerePresent && !lettersWillBePresent) {
			this.removeLetters();
		} else if(!lettersWerePresent && lettersWillBePresent) {
			this.drawLetters();
		}
		var _g_current = 0;
		var _g_array = this.hexagons;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var scalarCoord = _g1_key;
			var hexagon = _g1_value;
			if(marking == gameboard_util_Marking.Over) {
				var hexCoords = net_shared_board_HexCoords.fromScalarCoord(scalarCoord);
				var rowMark = net_shared_converters_Notation.getRow(hexCoords.i,hexCoords.j);
				hexagon.setDisplayedRowNumber(rowMark);
			} else {
				hexagon.setDisplayedRowNumber(null);
			}
		}
		this.lettersEnabled = lettersWillBePresent;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Absolute.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Absolute.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_situation: null
	,_constructorParam_orientationColor: null
	,_constructorParam_marking: null
	,_constructorParam_initialWidth: null
	,_constructorParam_initialHeight: null
	,self: function() {
		return new gameboard_Board(this._constructorParam_situation,this._constructorParam_orientationColor,this._constructorParam_marking,this._constructorParam_initialWidth,this._constructorParam_initialHeight);
	}
	,__class__: gameboard_Board
	,__properties__: $extend(haxe_ui_containers_Absolute.prototype.__properties__,{get_shownSituation:"get_shownSituation"})
});
var gameboard_GameBoardEvent = $hxEnums["gameboard.GameBoardEvent"] = { __ename__:"gameboard.GameBoardEvent",__constructs__:null
	,ContinuationMove: ($_=function(ply,plyStr,performedBy) { return {_hx_index:0,ply:ply,plyStr:plyStr,performedBy:performedBy,__enum__:"gameboard.GameBoardEvent",toString:$estr}; },$_._hx_name="ContinuationMove",$_.__params__ = ["ply","plyStr","performedBy"],$_)
	,SubsequentMove: ($_=function(plyStr,performedBy) { return {_hx_index:1,plyStr:plyStr,performedBy:performedBy,__enum__:"gameboard.GameBoardEvent",toString:$estr}; },$_._hx_name="SubsequentMove",$_.__params__ = ["plyStr","performedBy"],$_)
	,BranchingMove: ($_=function(ply,plyStr,performedBy,droppedMovesCount) { return {_hx_index:2,ply:ply,plyStr:plyStr,performedBy:performedBy,droppedMovesCount:droppedMovesCount,__enum__:"gameboard.GameBoardEvent",toString:$estr}; },$_._hx_name="BranchingMove",$_.__params__ = ["ply","plyStr","performedBy","droppedMovesCount"],$_)
	,ReturnedToCurrentPosition: {_hx_name:"ReturnedToCurrentPosition",_hx_index:3,__enum__:"gameboard.GameBoardEvent",toString:$estr}
};
gameboard_GameBoardEvent.__constructs__ = [gameboard_GameBoardEvent.ContinuationMove,gameboard_GameBoardEvent.SubsequentMove,gameboard_GameBoardEvent.BranchingMove,gameboard_GameBoardEvent.ReturnedToCurrentPosition];
gameboard_GameBoardEvent.__empty_constructs__ = [gameboard_GameBoardEvent.ReturnedToCurrentPosition];
var gameboard_IGameBoardObserver = function() { };
$hxClasses["gameboard.IGameBoardObserver"] = gameboard_IGameBoardObserver;
gameboard_IGameBoardObserver.__name__ = "gameboard.IGameBoardObserver";
gameboard_IGameBoardObserver.__isInterface__ = true;
gameboard_IGameBoardObserver.prototype = {
	handleGameBoardEvent: null
	,__class__: gameboard_IGameBoardObserver
};
var gameboard_SelectableBoard = function(initialSit,arrowMode,hexMode,orientation,marks,initialW,initialH) {
	if(orientation == null) {
		orientation = net_shared_PieceColor.White;
	}
	this.suppressRMBHandler = false;
	this.lastMoveSelectedHexes = [];
	this.redSelectedHexIndices = [];
	this.drawnArrows = new haxe_ds_StringMap();
	gameboard_Board.call(this,initialSit,orientation,marks,initialW,initialH);
	this.arrowMode = arrowMode;
	this.hexMode = hexMode;
	this.arrowLayer = new haxe_ui_containers_Absolute();
	this.addComponent(this.arrowLayer);
	var c = this;
	if(c != null) {
		c.registerEvent("shown",$bind(this,this.onAdded));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "this" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gameboard.SelectableBoard", methodName : "new"});
	}
	var c = this;
	if(c != null) {
		c.registerEvent("hidden",$bind(this,this.onRemoved));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "this" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gameboard.SelectableBoard", methodName : "new"});
	}
};
$hxClasses["gameboard.SelectableBoard"] = gameboard_SelectableBoard;
gameboard_SelectableBoard.__name__ = "gameboard.SelectableBoard";
gameboard_SelectableBoard.__super__ = gameboard_Board;
gameboard_SelectableBoard.prototype = $extend(gameboard_Board.prototype,{
	arrowMode: null
	,hexMode: null
	,arrowLayer: null
	,drawnArrows: null
	,arrowStartLocation: null
	,redSelectedHexIndices: null
	,lastMoveSelectedHexes: null
	,suppressRMBHandler: null
	,getAnyDrawnArrow: function() {
		var h = this.drawnArrows.h;
		var keys_h = h;
		var keys_keys = Object.keys(h);
		var keys_length = keys_keys.length;
		var keys_current = 0;
		if(keys_current < keys_length) {
			return this.decodeArrowKey(keys_keys[keys_current++]);
		} else {
			return null;
		}
	}
	,decodeArrowKey: function(code) {
		var from = new net_shared_board_HexCoords(Std.parseInt(code.charAt(0)),Std.parseInt(code.charAt(1)));
		var to = new net_shared_board_HexCoords(Std.parseInt(code.charAt(2)),Std.parseInt(code.charAt(3)));
		return { from : from, to : to};
	}
	,updateAllArrows: function() {
		var h = this.drawnArrows.h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g1_key = key;
			var _g1_value = _g_h[key];
			var code = _g1_key;
			var arrow = _g1_value;
			var decoded = this.decodeArrowKey(code);
			var fromPos = this.hexCoords(decoded.from);
			var toPos = this.hexCoords(decoded.to);
			arrow.redraw(this.dimensions,fromPos,toPos);
		}
	}
	,setOrientation: function(val) {
		gameboard_Board.prototype.setOrientation.call(this,val);
		this.updateAllArrows();
	}
	,resize: function(e) {
		gameboard_Board.prototype.resize.call(this,e);
		this.updateAllArrows();
	}
	,highlightMove: function(hexesCoords) {
		var _g = 0;
		var _g1 = this.lastMoveSelectedHexes;
		while(_g < _g1.length) {
			var hex = _g1[_g];
			++_g;
			hex.hideLayer(gameboard_util_HexagonSelectionState.LastMove);
		}
		var _g = [];
		var _g1 = 0;
		while(_g1 < hexesCoords.length) {
			var coords = hexesCoords[_g1];
			++_g1;
			_g.push(this.getHex(coords));
		}
		this.lastMoveSelectedHexes = _g;
		var _g = 0;
		var _g1 = this.lastMoveSelectedHexes;
		while(_g < _g1.length) {
			var hex = _g1[_g];
			++_g;
			hex.showLayer(gameboard_util_HexagonSelectionState.LastMove);
		}
	}
	,addMarkers: function(from) {
		var possibleDestinations = net_shared_board_Rules.getPossibleDestinations(from,this.get_shownSituation().pieces);
		var _g = 0;
		while(_g < possibleDestinations.length) {
			var destination = possibleDestinations[_g];
			++_g;
			if(net_shared_board_Hex.isEmpty(net_shared_board_PieceArrangement.get(this.get_shownSituation().pieces,destination))) {
				this.getHex(destination).addDot();
			} else {
				this.getHex(destination).addCircle();
			}
		}
	}
	,removeMarkers: function(from) {
		if(net_shared_board_Hex.isEmpty(net_shared_board_PieceArrangement.get(this.get_shownSituation().pieces,from))) {
			throw haxe_Exception.thrown("Only non-empty hex may be passed as a removeMarkers() argument");
		}
		var possibleDestinations = net_shared_board_Rules.getPossibleDestinations(from,this.get_shownSituation().pieces);
		var _g = 0;
		while(_g < possibleDestinations.length) {
			var destination = possibleDestinations[_g];
			++_g;
			this.getHex(destination).removeMarkers();
		}
	}
	,removeSingleMarker: function(location) {
		this.getHex(location).removeMarkers();
	}
	,removeArrowsAndSelections: function() {
		this.removeArrows();
		this.removeRedHexSelections();
	}
	,removeRedHexSelections: function() {
		var _g = 0;
		var _g1 = this.redSelectedHexIndices;
		while(_g < _g1.length) {
			var index = _g1[_g];
			++_g;
			this.hexagons[index].hideLayer(gameboard_util_HexagonSelectionState.RMB);
		}
		this.redSelectedHexIndices = [];
	}
	,removeArrows: function() {
		var h = this.drawnArrows.h;
		var arrow_h = h;
		var arrow_keys = Object.keys(h);
		var arrow_length = arrow_keys.length;
		var arrow_current = 0;
		while(arrow_current < arrow_length) {
			var arrow = arrow_h[arrow_keys[arrow_current++]];
			this.arrowLayer.removeComponent(arrow);
		}
		this.drawnArrows = new haxe_ds_StringMap();
	}
	,toLocalCoords: function(screenX,screenY,relativeTo) {
		if(relativeTo == null) {
			relativeTo = this;
		}
		return new haxe_ui_geom_Point(screenX - relativeTo.get_screenLeft(),screenY - relativeTo.get_screenTop());
	}
	,clickSelectableHandler: function(e) {
		if(this.suppressRMBHandler || gfx_Dialogs.getQueue().hasActiveDialog()) {
			return;
		}
		this.removeArrowsAndSelections();
	}
	,rightPressSelectableHandler: function(e) {
		if(this.suppressRMBHandler || gfx_Dialogs.getQueue().hasActiveDialog()) {
			return;
		}
		this.arrowStartLocation = this.posToIndexes(this.toLocalCoords(e.screenX,e.screenY));
	}
	,rightReleaseSelectableHandler: function(e) {
		if(this.suppressRMBHandler) {
			return;
		}
		var arrowEndLocation = this.posToIndexes(this.toLocalCoords(e.screenX,e.screenY));
		if(this.arrowStartLocation != null && arrowEndLocation != null) {
			if(this.arrowStartLocation.equals(arrowEndLocation)) {
				if(this.hexMode == gameboard_SelectionMode.Disabled) {
					return;
				}
				this.toggleHexSelection(this.arrowStartLocation);
			} else {
				if(this.arrowMode == gameboard_SelectionMode.Disabled) {
					return;
				}
				var code = "" + this.arrowStartLocation.i + this.arrowStartLocation.j + arrowEndLocation.i + arrowEndLocation.j;
				if(Object.prototype.hasOwnProperty.call(this.drawnArrows.h,code)) {
					this.arrowLayer.removeComponent(this.drawnArrows.h[code]);
					var _this = this.drawnArrows;
					if(Object.prototype.hasOwnProperty.call(_this.h,code)) {
						delete(_this.h[code]);
					}
				} else {
					this.drawArrow(this.arrowStartLocation,arrowEndLocation);
				}
			}
		}
		this.arrowStartLocation = null;
	}
	,toggleHexSelection: function(location) {
		var hexToSelect = this.getHex(location);
		var hexScalarIndex = location.toScalarCoord();
		if(Lambda.has(this.redSelectedHexIndices,hexScalarIndex)) {
			hexToSelect.hideLayer(gameboard_util_HexagonSelectionState.RMB);
			HxOverrides.remove(this.redSelectedHexIndices,hexScalarIndex);
		} else {
			if(this.hexMode == gameboard_SelectionMode.EnsureSingle) {
				this.removeRedHexSelections();
			}
			hexToSelect.showLayer(gameboard_util_HexagonSelectionState.RMB);
			this.redSelectedHexIndices.push(hexScalarIndex);
		}
	}
	,drawArrow: function(from,to) {
		if(this.arrowMode == gameboard_SelectionMode.EnsureSingle) {
			this.removeArrows();
		}
		var fromPos = this.hexCoords(from);
		var toPos = this.hexCoords(to);
		var code = "" + from.i + from.j + to.i + to.j;
		if(!Object.prototype.hasOwnProperty.call(this.drawnArrows.h,code)) {
			var arrow = new gameboard_components_graphics_ArrowCanvas(this.dimensions,fromPos,toPos);
			this.drawnArrows.h[code] = arrow;
			this.arrowLayer.addComponent(arrow);
		}
	}
	,onAdded: function(e) {
		this.registerEvent("click",$bind(this,this.clickSelectableHandler));
		haxe_ui_core_Screen.get_instance().registerEvent("rightmousedown",$bind(this,this.rightPressSelectableHandler));
		haxe_ui_core_Screen.get_instance().registerEvent("rightmouseup",$bind(this,this.rightReleaseSelectableHandler));
	}
	,onRemoved: function(e) {
		this.unregisterEvent("click",$bind(this,this.clickSelectableHandler));
		haxe_ui_core_Screen.get_instance().unregisterEvent("rightmousedown",$bind(this,this.rightPressSelectableHandler));
		haxe_ui_core_Screen.get_instance().unregisterEvent("rightmouseup",$bind(this,this.rightReleaseSelectableHandler));
	}
	,registerBehaviours: function() {
		gameboard_Board.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gameboard_Board.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_initialSit: null
	,_constructorParam_arrowMode: null
	,_constructorParam_hexMode: null
	,_constructorParam_orientation: null
	,_constructorParam_marks: null
	,_constructorParam_initialW: null
	,_constructorParam_initialH: null
	,self: function() {
		return new gameboard_SelectableBoard(this._constructorParam_initialSit,this._constructorParam_arrowMode,this._constructorParam_hexMode,this._constructorParam_orientation,this._constructorParam_marks,this._constructorParam_initialW,this._constructorParam_initialH);
	}
	,__class__: gameboard_SelectableBoard
});
var gfx_analysis_IAnalysisPeripheralEventObserver = function() { };
$hxClasses["gfx.analysis.IAnalysisPeripheralEventObserver"] = gfx_analysis_IAnalysisPeripheralEventObserver;
gfx_analysis_IAnalysisPeripheralEventObserver.__name__ = "gfx.analysis.IAnalysisPeripheralEventObserver";
gfx_analysis_IAnalysisPeripheralEventObserver.__isInterface__ = true;
gfx_analysis_IAnalysisPeripheralEventObserver.prototype = {
	handleAnalysisPeripheralEvent: null
	,__class__: gfx_analysis_IAnalysisPeripheralEventObserver
};
var net_INetObserver = function() { };
$hxClasses["net.INetObserver"] = net_INetObserver;
net_INetObserver.__name__ = "net.INetObserver";
net_INetObserver.__isInterface__ = true;
net_INetObserver.prototype = {
	handleNetEvent: null
	,__class__: net_INetObserver
};
var gameboard_GameBoard = function(constructor) {
	this.observers = [];
	this.suppressLMBHandler = false;
	this.plyHistory = new gameboard_PlyHistory();
	switch(constructor._hx_index) {
	case 0:
		var _g = constructor.constr;
		switch(_g._hx_index) {
		case 0:
			var _g1 = _g.playerElos;
			var _g1 = _g.timeControl;
			var _g1 = _g.startDatetime;
			var whiteRef = _g.whiteRef;
			var blackRef = _g.blackRef;
			var startingSituation = _g.startingSituation;
			this._startingSituation = startingSituation;
			this._currentSituation = this._startingSituation.copy();
			var playerColor = LoginManager.isPlayer(whiteRef) ? net_shared_PieceColor.White : net_shared_PieceColor.Black;
			gameboard_SelectableBoard.call(this,this._startingSituation,gameboard_SelectionMode.Free,gameboard_SelectionMode.Free,playerColor);
			this.set_state(new gameboard_states_NeutralState());
			this.set_behavior(this._startingSituation.turnColor == playerColor ? new gameboard_behaviors_PlayerMoveBehavior(playerColor) : new gameboard_behaviors_EnemyMoveBehavior(playerColor));
			break;
		case 1:
			var _g1 = _g.timeData;
			var parsedData = _g.parsedData;
			var followedPlayerLogin = _g.followedPlayerLogin;
			this._startingSituation = parsedData.startingSituation.copy();
			this._currentSituation = this._startingSituation.copy();
			var playerColor = parsedData.getPlayerColor();
			if(followedPlayerLogin != null) {
				gameboard_SelectableBoard.call(this,this._startingSituation,gameboard_SelectionMode.Free,gameboard_SelectionMode.Free,parsedData.getParticipantColor(followedPlayerLogin));
			} else {
				gameboard_SelectableBoard.call(this,this._startingSituation,gameboard_SelectionMode.Free,gameboard_SelectionMode.Free,playerColor);
			}
			var _g1 = 0;
			var _g2 = parsedData.movesPlayed;
			while(_g1 < _g2.length) {
				var ply = _g2[_g1];
				++_g1;
				this.makeMove(ply);
			}
			if(parsedData.isPlayerParticipant()) {
				if(this._currentSituation.turnColor == playerColor || Preferences.premoveEnabled.get()) {
					this.set_state(new gameboard_states_NeutralState());
				} else {
					this.set_state(new gameboard_states_StubState());
				}
				this.set_behavior(this._currentSituation.turnColor == playerColor ? new gameboard_behaviors_PlayerMoveBehavior(playerColor) : new gameboard_behaviors_EnemyMoveBehavior(playerColor));
			} else {
				this.set_state(new gameboard_states_StubState());
				this.set_behavior(new gameboard_behaviors_SpectatorBehavior());
			}
			break;
		case 2:
			var parsedData = _g.parsedData;
			var watchedPlayerLogin = _g.watchedPlyerLogin;
			this._startingSituation = parsedData.startingSituation.copy();
			this._currentSituation = this._startingSituation.copy();
			gameboard_SelectableBoard.call(this,this._startingSituation,gameboard_SelectionMode.Free,gameboard_SelectionMode.Free,watchedPlayerLogin != null ? parsedData.getParticipantColor(watchedPlayerLogin) : net_shared_PieceColor.White);
			var _g = 0;
			var _g1 = parsedData.movesPlayed;
			while(_g < _g1.length) {
				var ply = _g1[_g];
				++_g;
				this.makeMove(ply);
			}
			this.set_state(new gameboard_states_StubState());
			this.set_behavior(new gameboard_behaviors_StubBehavior());
			break;
		}
		break;
	case 1:
		var initialVariant = constructor.initialVariant;
		this._startingSituation = initialVariant.startingSituation.copy();
		this._currentSituation = this._startingSituation.copy();
		gameboard_SelectableBoard.call(this,this._startingSituation,gameboard_SelectionMode.Free,gameboard_SelectionMode.Free,this._startingSituation.turnColor);
		var _g = 0;
		var _g1 = initialVariant.getMainLineBranch();
		while(_g < _g1.length) {
			var ply = _g1[_g];
			++_g;
			this.makeMove(ply);
		}
		this.set_state(new gameboard_states_NeutralState());
		this.set_behavior(new gameboard_behaviors_AnalysisBehavior());
		break;
	}
	var c = this;
	if(c != null) {
		c.registerEvent("shown",$bind(this,this.onAddedGB));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "this" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gameboard.GameBoard", methodName : "new"});
	}
	var c = this;
	if(c != null) {
		c.registerEvent("hidden",$bind(this,this.onRemovedGB));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "this" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gameboard.GameBoard", methodName : "new"});
	}
};
$hxClasses["gameboard.GameBoard"] = gameboard_GameBoard;
gameboard_GameBoard.__name__ = "gameboard.GameBoard";
gameboard_GameBoard.__interfaces__ = [IGlobalEventObserver,gfx_analysis_IAnalysisPeripheralEventObserver,net_INetObserver];
gameboard_GameBoard.__super__ = gameboard_SelectableBoard;
gameboard_GameBoard.prototype = $extend(gameboard_SelectableBoard.prototype,{
	plyHistory: null
	,_currentSituation: null
	,_startingSituation: null
	,state: null
	,behavior: null
	,suppressLMBHandler: null
	,lastMouseMoveEvent: null
	,observers: null
	,get_currentSituation: function() {
		return this._currentSituation.copy();
	}
	,get_startingSituation: function() {
		return this._startingSituation.copy();
	}
	,set_state: function(value) {
		try {
			if(this.state != null) {
				value.init(this,this.state.cursorLocation);
			} else {
				value.init(this);
			}
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g);
			if(((_g1) instanceof utils_exceptions_AlreadyInitializedException)) {
				var e = _g1;
				throw new haxe_exceptions_PosException("You can't assign already initialized states to GameBoard",e,{ fileName : "src/gameboard/GameBoard.hx", lineNumber : 88, className : "gameboard.GameBoard", methodName : "set_state"});
			} else {
				throw _g;
			}
		}
		return this.state = value;
	}
	,set_behavior: function(value) {
		try {
			value.init(this);
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g);
			if(((_g1) instanceof utils_exceptions_AlreadyInitializedException)) {
				var e = _g1;
				throw new haxe_exceptions_PosException("You can't assign already initialized behaviours to GameBoard",e,{ fileName : "src/gameboard/GameBoard.hx", lineNumber : 101, className : "gameboard.GameBoard", methodName : "set_behavior"});
			} else {
				throw _g;
			}
		}
		return this.behavior = value;
	}
	,resize: function(e) {
		gameboard_SelectableBoard.prototype.resize.call(this,e);
		if(this.lastMouseMoveEvent != null) {
			this.onMouseMoved(this.lastMouseMoveEvent);
		}
	}
	,revertOrientation: function() {
		this.setOrientation(this.orientationColor == net_shared_PieceColor.White ? net_shared_PieceColor.Black : net_shared_PieceColor.White);
	}
	,revertPlys: function(cnt) {
		if(cnt < 1) {
			return;
		}
		this.end();
		var toRevert = this.plyHistory.dropLast(cnt);
		toRevert.reverse();
		var _g = 0;
		while(_g < toRevert.length) {
			var matPly = toRevert[_g];
			++_g;
			this._currentSituation.revertPly(matPly);
		}
		this.setShownSituation(this.get_currentSituation());
		this.highlightLastMove();
	}
	,revertToShown: function() {
		if(this.plyHistory.isAtEnd()) {
			return;
		}
		this.plyHistory.dropSinceShown();
		this._currentSituation = this.get_shownSituation().copy();
	}
	,removeLastMoveHighlighting: function() {
		this.highlightMove([]);
	}
	,highlightLastMove: function() {
		if(this.plyHistory.isAtBeginning()) {
			this.removeLastMoveHighlighting();
		} else {
			this.highlightMove(net_shared_board_MaterializedPly.affectedCoords(this.plyHistory.getLastMove()));
		}
	}
	,makeMove: function(ply) {
		var matPly = ply.toMaterialized(this.get_currentSituation());
		this.plyHistory.append(ply,matPly);
		this._currentSituation.performPly(matPly);
		if(this.plyHistory.isAtEnd()) {
			this.applyMoveTransposition(matPly);
			this.highlightMove([ply.from,ply.to]);
		}
	}
	,applyScrolling: function(type) {
		switch(type._hx_index) {
		case 0:case 1:
			if(this.plyHistory.isAtBeginning()) {
				return;
			}
			break;
		case 2:case 3:
			if(this.plyHistory.isAtEnd()) {
				return;
			}
			break;
		case 4:
			var plyNum = type.plyNum;
			if(this.plyHistory.pointer == plyNum) {
				return;
			}
			break;
		}
		this.state.exitToNeutral();
		if(this.plyHistory.isAtEnd()) {
			this.behavior.onAboutToScrollAway();
		}
		switch(type._hx_index) {
		case 0:
			this.home();
			break;
		case 1:
			this.prev();
			break;
		case 2:
			this.next();
			break;
		case 3:
			this.end();
			break;
		case 4:
			var plyNum = type.plyNum;
			while(this.plyHistory.pointer < plyNum) this.next();
			while(this.plyHistory.pointer > plyNum) this.prev();
			break;
		}
	}
	,home: function() {
		this.plyHistory.home();
		this.setShownSituation(this.get_startingSituation());
		this.removeLastMoveHighlighting();
	}
	,prev: function() {
		var matPly = this.plyHistory.prev();
		this.applyMoveTransposition(matPly,true);
		this.highlightLastMove();
	}
	,next: function() {
		var matPly = this.plyHistory.next();
		this.applyMoveTransposition(matPly);
		this.highlightMove(net_shared_board_MaterializedPly.affectedCoords(matPly));
	}
	,end: function() {
		this.plyHistory.end();
		this.setShownSituation(this.get_currentSituation().copy());
		this.highlightLastMove();
	}
	,onLMBPressed: function(e) {
		if(this.suppressLMBHandler || gfx_Dialogs.getQueue().hasActiveDialog()) {
			return;
		}
		if(e.screenX >= this.get_screenLeft() && e.screenX <= this.get_screenLeft() + this.get_width() && e.screenY >= this.get_screenTop() && e.screenY <= this.get_screenTop() + this.get_height()) {
			this.state.onLMBPressed(this.posToIndexes(this.toLocalCoords(e.screenX,e.screenY)),e.shiftKey,e.ctrlKey);
		}
	}
	,onMouseMoved: function(e) {
		if(this.suppressLMBHandler || gfx_Dialogs.getQueue().hasActiveDialog()) {
			return;
		}
		this.state.onMouseMoved(this.posToIndexes(this.toLocalCoords(e.screenX,e.screenY)));
		this.lastMouseMoveEvent = e;
	}
	,onLMBReleased: function(e) {
		if(this.suppressLMBHandler || gfx_Dialogs.getQueue().hasActiveDialog()) {
			return;
		}
		this.state.onLMBReleased(this.posToIndexes(this.toLocalCoords(e.screenX,e.screenY)),e.shiftKey,e.ctrlKey);
	}
	,handleNetEvent: function(event) {
		this.behavior.handleNetEvent(event);
	}
	,handleAnalysisPeripheralEvent: function(event) {
		this.behavior.handleAnalysisPeripheralEvent(event);
	}
	,handleGlobalEvent: function(event) {
		if(event._hx_index == 4) {
			switch(event.name._hx_index) {
			case 1:
				this.updateMarking();
				break;
			case 2:
				this.behavior.onPremovePreferenceUpdated();
				break;
			default:
			}
		}
	}
	,addObserver: function(obs) {
		this.observers.push(obs);
	}
	,emit: function(e) {
		var _g = 0;
		var _g1 = this.observers;
		while(_g < _g1.length) {
			var obs = _g1[_g];
			++_g;
			obs.handleGameBoardEvent(e);
		}
	}
	,onAddedGB: function(e) {
		haxe_ui_core_Screen.get_instance().registerEvent("mousedown",$bind(this,this.onLMBPressed));
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onMouseMoved));
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onLMBReleased));
	}
	,onRemovedGB: function(e) {
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousedown",$bind(this,this.onLMBPressed));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onMouseMoved));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onLMBReleased));
	}
	,registerBehaviours: function() {
		gameboard_SelectableBoard.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gameboard_SelectableBoard.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_constructor: null
	,self: function() {
		return new gameboard_GameBoard(this._constructorParam_constructor);
	}
	,__class__: gameboard_GameBoard
	,__properties__: $extend(gameboard_SelectableBoard.prototype.__properties__,{set_behavior:"set_behavior",set_state:"set_state",get_startingSituation:"get_startingSituation",get_currentSituation:"get_currentSituation"})
});
var gameboard_PlyHistory = function() {
	this.pointer = 0;
	this.matPlys = [];
	this.plys = [];
};
$hxClasses["gameboard.PlyHistory"] = gameboard_PlyHistory;
gameboard_PlyHistory.__name__ = "gameboard.PlyHistory";
gameboard_PlyHistory.prototype = {
	plys: null
	,matPlys: null
	,pointer: null
	,getPlySequence: function() {
		return this.plys.slice();
	}
	,clear: function() {
		this.plys = [];
		this.matPlys = [];
		this.pointer = 0;
	}
	,length: function() {
		return this.matPlys.length;
	}
	,isAtBeginning: function() {
		return this.pointer == 0;
	}
	,isAtEnd: function() {
		return this.pointer == this.length();
	}
	,equalsNextMove: function(ply) {
		if(!this.isAtEnd()) {
			return net_shared_board_MaterializedPly.equals(this.matPlys[this.pointer],ply);
		} else {
			return false;
		}
	}
	,getLastMove: function() {
		if(this.isAtBeginning()) {
			return null;
		} else {
			return this.matPlys[this.pointer - 1];
		}
	}
	,home: function() {
		var oldPointer = this.pointer;
		this.pointer = 0;
		return this.matPlys.slice(0,oldPointer);
	}
	,prev: function() {
		if(this.pointer > 0) {
			this.pointer--;
			return this.matPlys[this.pointer];
		} else {
			return null;
		}
	}
	,next: function() {
		if(this.pointer < this.matPlys.length) {
			this.pointer++;
			return this.matPlys[this.pointer - 1];
		} else {
			return null;
		}
	}
	,end: function() {
		var oldPointer = this.pointer;
		this.pointer = this.matPlys.length;
		return this.matPlys.slice(oldPointer);
	}
	,dropSinceShown: function() {
		this.plys = this.plys.slice(0,this.pointer);
		this.matPlys = this.matPlys.slice(0,this.pointer);
	}
	,dropLast: function(cnt) {
		var newLength = this.matPlys.length - cnt;
		if(this.pointer > newLength) {
			this.pointer = newLength;
		}
		this.plys.splice(newLength,cnt);
		return this.matPlys.splice(newLength,cnt);
	}
	,append: function(raw,materialized) {
		if(this.isAtEnd()) {
			this.pointer++;
		}
		this.plys.push(raw);
		this.matPlys.push(materialized);
	}
	,__class__: gameboard_PlyHistory
};
var gameboard_SelectionMode = $hxEnums["gameboard.SelectionMode"] = { __ename__:"gameboard.SelectionMode",__constructs__:null
	,Disabled: {_hx_name:"Disabled",_hx_index:0,__enum__:"gameboard.SelectionMode",toString:$estr}
	,EnsureSingle: {_hx_name:"EnsureSingle",_hx_index:1,__enum__:"gameboard.SelectionMode",toString:$estr}
	,Free: {_hx_name:"Free",_hx_index:2,__enum__:"gameboard.SelectionMode",toString:$estr}
};
gameboard_SelectionMode.__constructs__ = [gameboard_SelectionMode.Disabled,gameboard_SelectionMode.EnsureSingle,gameboard_SelectionMode.Free];
gameboard_SelectionMode.__empty_constructs__ = [gameboard_SelectionMode.Disabled,gameboard_SelectionMode.EnsureSingle,gameboard_SelectionMode.Free];
var gameboard_behaviors_IBehavior = function() { };
$hxClasses["gameboard.behaviors.IBehavior"] = gameboard_behaviors_IBehavior;
gameboard_behaviors_IBehavior.__name__ = "gameboard.behaviors.IBehavior";
gameboard_behaviors_IBehavior.__isInterface__ = true;
gameboard_behaviors_IBehavior.prototype = {
	init: null
	,handleNetEvent: null
	,handleAnalysisPeripheralEvent: null
	,movePossible: null
	,allowedToMove: null
	,returnToCurrentOnLMB: null
	,onMoveChosen: null
	,onHexChosen: null
	,onAboutToScrollAway: null
	,markersDisabled: null
	,hoverDisabled: null
	,onVoidClick: null
	,onPremovePreferenceUpdated: null
	,__class__: gameboard_behaviors_IBehavior
};
var gameboard_behaviors_AnalysisBehavior = function() {
};
$hxClasses["gameboard.behaviors.AnalysisBehavior"] = gameboard_behaviors_AnalysisBehavior;
gameboard_behaviors_AnalysisBehavior.__name__ = "gameboard.behaviors.AnalysisBehavior";
gameboard_behaviors_AnalysisBehavior.__interfaces__ = [gameboard_behaviors_IBehavior];
gameboard_behaviors_AnalysisBehavior.prototype = {
	boardInstance: null
	,handleNetEvent: function(event) {
	}
	,onPremovePreferenceUpdated: function() {
	}
	,handleAnalysisPeripheralEvent: function(event) {
		switch(event._hx_index) {
		case 0:
			var _g = event.branchStr;
			var branch = event.branch;
			var pointer = event.pointer;
			this.onBranchSelected(branch,pointer);
			break;
		case 1:
			var plyCnt = event.plyCnt;
			this.boardInstance.revertPlys(plyCnt);
			break;
		case 5:
			this.boardInstance.revertOrientation();
			break;
		case 11:
			this.boardInstance.removeArrowsAndSelections();
			this.boardInstance.removeLastMoveHighlighting();
			this.boardInstance.set_state(new gameboard_states_NeutralState());
			this.boardInstance.set_behavior(new gameboard_behaviors_EditorFreeMoveBehavior());
			break;
		case 13:
			var type = event.type;
			this.boardInstance.applyScrolling(type);
			break;
		default:
		}
	}
	,onBranchSelected: function(plySequence,selectedPlyNum) {
		this.boardInstance.removeArrowsAndSelections();
		this.boardInstance.plyHistory.clear();
		this.boardInstance._currentSituation = this.boardInstance.get_startingSituation();
		this.boardInstance.setShownSituation(this.boardInstance.get_startingSituation());
		var _g = 0;
		while(_g < plySequence.length) {
			var ply = plySequence[_g];
			++_g;
			this.boardInstance.makeMove(ply);
		}
		this.boardInstance.applyScrolling(gfx_utils_PlyScrollType.Precise(selectedPlyNum));
	}
	,movePossible: function(from,to) {
		return net_shared_board_Rules.isMovementPossible(from,to,this.boardInstance.get_shownSituation().pieces);
	}
	,allowedToMove: function(piece) {
		return piece.pieceColor == this.boardInstance.get_shownSituation().turnColor;
	}
	,returnToCurrentOnLMB: function() {
		return false;
	}
	,onVoidClick: function() {
	}
	,onMoveChosen: function(ply) {
		var plyStr = ply.toNotation(this.boardInstance.get_shownSituation());
		var performedBy = this.boardInstance.get_shownSituation().turnColor;
		var matPly = ply.toMaterialized(this.boardInstance.get_shownSituation());
		assets_Audio.playPlySound(matPly);
		if(this.boardInstance.plyHistory.isAtEnd()) {
			this.boardInstance.makeMove(ply);
			this.boardInstance.emit(gameboard_GameBoardEvent.ContinuationMove(ply,plyStr,performedBy));
		} else if(this.boardInstance.plyHistory.equalsNextMove(matPly)) {
			this.boardInstance.next();
			this.boardInstance.emit(gameboard_GameBoardEvent.SubsequentMove(plyStr,performedBy));
		} else {
			var droppedMovesCount = this.boardInstance.plyHistory.length() - this.boardInstance.plyHistory.pointer;
			this.boardInstance.revertToShown();
			this.boardInstance.makeMove(ply);
			this.boardInstance.emit(gameboard_GameBoardEvent.BranchingMove(ply,plyStr,performedBy,droppedMovesCount));
		}
		this.boardInstance.set_state(new gameboard_states_NeutralState());
	}
	,onHexChosen: function(coords) {
		throw haxe_Exception.thrown("onHexChosen() called while in AnalysisBehavior");
	}
	,markersDisabled: function() {
		return false;
	}
	,hoverDisabled: function() {
		return false;
	}
	,onAboutToScrollAway: function() {
	}
	,init: function(board) {
		if(this.boardInstance != null) {
			throw new utils_exceptions_AlreadyInitializedException(null,null,{ fileName : "src/gameboard/behaviors/AnalysisBehavior.hx", lineNumber : 136, className : "gameboard.behaviors.AnalysisBehavior", methodName : "init"});
		}
		this.boardInstance = board;
	}
	,__class__: gameboard_behaviors_AnalysisBehavior
};
var gameboard_behaviors_EditorBehavior = function() { };
$hxClasses["gameboard.behaviors.EditorBehavior"] = gameboard_behaviors_EditorBehavior;
gameboard_behaviors_EditorBehavior.__name__ = "gameboard.behaviors.EditorBehavior";
gameboard_behaviors_EditorBehavior.__interfaces__ = [gameboard_behaviors_IBehavior];
gameboard_behaviors_EditorBehavior.prototype = {
	onMoveChosen: null
	,onHexChosen: null
	,movePossible: null
	,boardInstance: null
	,handleNetEvent: function(event) {
	}
	,onPremovePreferenceUpdated: function() {
	}
	,handleAnalysisPeripheralEvent: function(event) {
		switch(event._hx_index) {
		case 2:
			this.boardInstance.setShownSituation(net_shared_board_Situation.empty());
			break;
		case 3:
			this.boardInstance.setShownSituation(this.boardInstance.get_currentSituation());
			break;
		case 4:
			this.boardInstance.setShownSituation(net_shared_board_Situation.defaultStarting());
			break;
		case 5:
			this.boardInstance.revertOrientation();
			break;
		case 6:
			var situation = event.situation;
			this.boardInstance.setShownSituation(situation);
			break;
		case 7:
			var newTurnColor = event.newTurnColor;
			var updatedSituation = this.boardInstance.get_shownSituation().copy(newTurnColor);
			this.boardInstance.setShownSituation(updatedSituation);
			break;
		case 8:
			this.onChangesApplied();
			break;
		case 9:
			this.onChangesDiscarded();
			break;
		case 10:
			var newEditMode = event.newEditMode;
			switch(newEditMode._hx_index) {
			case 0:
				this.boardInstance.set_state(new gameboard_states_NeutralState());
				this.boardInstance.set_behavior(new gameboard_behaviors_EditorFreeMoveBehavior());
				break;
			case 1:
				this.boardInstance.set_state(new gameboard_states_HexSelectionState(true));
				this.boardInstance.set_behavior(new gameboard_behaviors_EditorDeleteBehavior());
				break;
			case 2:
				var type = newEditMode.type;
				var color = newEditMode.color;
				this.boardInstance.set_state(new gameboard_states_HexSelectionState(false));
				this.boardInstance.set_behavior(new gameboard_behaviors_EditorSetBehavior(type,color));
				break;
			}
			break;
		default:
		}
	}
	,onChangesApplied: function() {
		this.boardInstance._startingSituation = this.boardInstance.get_shownSituation();
		this.boardInstance._currentSituation = this.boardInstance.get_shownSituation();
		this.boardInstance.plyHistory.clear();
		this.boardInstance.set_state(new gameboard_states_NeutralState());
		this.boardInstance.set_behavior(new gameboard_behaviors_AnalysisBehavior());
	}
	,onChangesDiscarded: function() {
		this.boardInstance.setShownSituation(this.boardInstance.get_currentSituation());
		this.boardInstance.highlightLastMove();
		this.boardInstance.set_state(new gameboard_states_NeutralState());
		this.boardInstance.set_behavior(new gameboard_behaviors_AnalysisBehavior());
	}
	,allowedToMove: function(piece) {
		return true;
	}
	,returnToCurrentOnLMB: function() {
		return false;
	}
	,onVoidClick: function() {
	}
	,onAboutToScrollAway: function() {
	}
	,markersDisabled: function() {
		return true;
	}
	,hoverDisabled: function() {
		return false;
	}
	,init: function(board) {
		if(this.boardInstance != null) {
			throw new utils_exceptions_AlreadyInitializedException(null,null,{ fileName : "src/gameboard/behaviors/EditorBehavior.hx", lineNumber : 117, className : "gameboard.behaviors.EditorBehavior", methodName : "init"});
		}
		this.boardInstance = board;
	}
	,__class__: gameboard_behaviors_EditorBehavior
};
var gameboard_behaviors_EditorDeleteBehavior = function() {
};
$hxClasses["gameboard.behaviors.EditorDeleteBehavior"] = gameboard_behaviors_EditorDeleteBehavior;
gameboard_behaviors_EditorDeleteBehavior.__name__ = "gameboard.behaviors.EditorDeleteBehavior";
gameboard_behaviors_EditorDeleteBehavior.__interfaces__ = [gameboard_behaviors_IBehavior];
gameboard_behaviors_EditorDeleteBehavior.__super__ = gameboard_behaviors_EditorBehavior;
gameboard_behaviors_EditorDeleteBehavior.prototype = $extend(gameboard_behaviors_EditorBehavior.prototype,{
	onMoveChosen: function(ply) {
	}
	,onHexChosen: function(coords) {
		this.boardInstance.setHexDirectly(coords,net_shared_board_InternalHex.Empty);
	}
	,movePossible: function(from,to) {
		return true;
	}
	,__class__: gameboard_behaviors_EditorDeleteBehavior
});
var gameboard_behaviors_EditorFreeMoveBehavior = function() {
};
$hxClasses["gameboard.behaviors.EditorFreeMoveBehavior"] = gameboard_behaviors_EditorFreeMoveBehavior;
gameboard_behaviors_EditorFreeMoveBehavior.__name__ = "gameboard.behaviors.EditorFreeMoveBehavior";
gameboard_behaviors_EditorFreeMoveBehavior.__interfaces__ = [gameboard_behaviors_IBehavior];
gameboard_behaviors_EditorFreeMoveBehavior.__super__ = gameboard_behaviors_EditorBehavior;
gameboard_behaviors_EditorFreeMoveBehavior.prototype = $extend(gameboard_behaviors_EditorBehavior.prototype,{
	onMoveChosen: function(ply) {
		var situation = this.boardInstance.get_shownSituation().copy();
		var coords = ply.to;
		var hex = net_shared_board_PieceArrangement.get(situation.pieces,ply.from);
		if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(situation.pieces,coords)) == net_shared_PieceType.Intellector) {
			situation.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(situation.pieces,coords)));
		}
		if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
			situation.intellectorPos.set(net_shared_board_Hex.color(hex),coords);
		}
		net_shared_board_PieceArrangement.set(situation.pieces,coords,hex);
		var coords = ply.from;
		var hex = net_shared_board_InternalHex.Empty;
		if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(situation.pieces,coords)) == net_shared_PieceType.Intellector) {
			situation.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(situation.pieces,coords)));
		}
		if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
			situation.intellectorPos.set(net_shared_board_Hex.color(hex),coords);
		}
		net_shared_board_PieceArrangement.set(situation.pieces,coords,hex);
		this.boardInstance.setShownSituation(situation);
	}
	,movePossible: function(from,to) {
		return !net_shared_board_HexCoords_equal(from,to);
	}
	,onHexChosen: function(coords) {
	}
	,__class__: gameboard_behaviors_EditorFreeMoveBehavior
});
var gameboard_behaviors_EditorSetBehavior = function(type,color) {
	this.prototypeHex = net_shared_board_Hex.construct(type,color);
};
$hxClasses["gameboard.behaviors.EditorSetBehavior"] = gameboard_behaviors_EditorSetBehavior;
gameboard_behaviors_EditorSetBehavior.__name__ = "gameboard.behaviors.EditorSetBehavior";
gameboard_behaviors_EditorSetBehavior.__interfaces__ = [gameboard_behaviors_IBehavior];
gameboard_behaviors_EditorSetBehavior.__super__ = gameboard_behaviors_EditorBehavior;
gameboard_behaviors_EditorSetBehavior.prototype = $extend(gameboard_behaviors_EditorBehavior.prototype,{
	prototypeHex: null
	,onMoveChosen: function(ply) {
	}
	,movePossible: function(from,to) {
		return true;
	}
	,onHexChosen: function(coords) {
		this.boardInstance.setHexDirectly(coords,this.prototypeHex);
	}
	,__class__: gameboard_behaviors_EditorSetBehavior
});
var gameboard_behaviors_EnemyMoveBehavior = function(playerColor) {
	this.playerColor = playerColor;
	this.premoves = [];
};
$hxClasses["gameboard.behaviors.EnemyMoveBehavior"] = gameboard_behaviors_EnemyMoveBehavior;
gameboard_behaviors_EnemyMoveBehavior.__name__ = "gameboard.behaviors.EnemyMoveBehavior";
gameboard_behaviors_EnemyMoveBehavior.__interfaces__ = [gameboard_behaviors_IBehavior];
gameboard_behaviors_EnemyMoveBehavior.prototype = {
	boardInstance: null
	,playerColor: null
	,premoves: null
	,resetPremoves: function() {
		var _g = 0;
		var _g1 = this.premoves;
		while(_g < _g1.length) {
			var premovePly = _g1[_g];
			++_g;
			this.boardInstance.getHex(premovePly.from).hideLayer(gameboard_util_HexagonSelectionState.Premove);
			this.boardInstance.getHex(premovePly.to).hideLayer(gameboard_util_HexagonSelectionState.Premove);
		}
		this.boardInstance.setShownSituation(this.boardInstance.get_currentSituation());
		this.premoves = [];
	}
	,handleOpponentMove: function(ply) {
		if(Preferences.autoScrollOnMove.get() != AutoScrollType.Never || !Lambda.empty(this.premoves)) {
			this.boardInstance.applyScrolling(gfx_utils_PlyScrollType.End);
		}
		if(Lambda.empty(this.premoves)) {
			assets_Audio.playPlySound(ply.toMaterialized(this.boardInstance.get_currentSituation()));
			this.boardInstance.makeMove(ply);
			this.boardInstance.set_behavior(new gameboard_behaviors_PlayerMoveBehavior(this.playerColor));
			this.boardInstance.set_state(new gameboard_states_NeutralState());
		} else {
			var activatedPremove = this.premoves[0];
			var followingPremoves = this.premoves.slice(1);
			this.resetPremoves();
			assets_Audio.playPlySound(ply.toMaterialized(this.boardInstance.get_currentSituation()));
			this.boardInstance.makeMove(ply);
			var premoveDeparture = net_shared_board_PieceArrangement.get(this.boardInstance.get_currentSituation().pieces,activatedPremove.from);
			if(net_shared_board_Hex.type(premoveDeparture) != net_shared_PieceType.Progressor && net_shared_board_Hex.type(premoveDeparture) != net_shared_PieceType.Intellector && activatedPremove.morphInto != null) {
				activatedPremove.morphInto = net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.boardInstance.get_currentSituation().pieces,activatedPremove.to));
			}
			if(net_shared_board_Hex.color(premoveDeparture) != this.playerColor || !net_shared_board_Rules.isPossible(activatedPremove,this.boardInstance.get_currentSituation())) {
				this.boardInstance.set_behavior(new gameboard_behaviors_PlayerMoveBehavior(this.playerColor));
				this.boardInstance.set_state(new gameboard_states_NeutralState());
			} else {
				assets_Audio.playPlySound(activatedPremove.toMaterialized(this.boardInstance.get_currentSituation()));
				this.boardInstance.emit(gameboard_GameBoardEvent.ContinuationMove(activatedPremove,activatedPremove.toNotation(this.boardInstance.get_currentSituation()),this.playerColor));
				this.boardInstance.makeMove(activatedPremove);
				var _g = 0;
				while(_g < followingPremoves.length) {
					var premove = followingPremoves[_g];
					++_g;
					this.displayPlannedPremove(premove);
				}
				this.premoves = followingPremoves;
				Networker.emitEvent(net_shared_ClientEvent.Move(activatedPremove));
				this.boardInstance.set_state(new gameboard_states_NeutralState());
			}
		}
	}
	,handleNetEvent: function(event) {
		switch(event._hx_index) {
		case 20:
			gfx_Dialogs.alert(dict_Phrase.INVALID_MOVE_DIALOG_MESSAGE,dict_Phrase.INVALID_MOVE_DIALOG_TITLE);
			break;
		case 24:
			var _g = event.timeData;
			var ply = event.ply;
			this.boardInstance.state.exitToNeutral();
			this.boardInstance.set_state(new gameboard_states_StubState());
			this.handleOpponentMove(ply);
			break;
		case 25:
			var _g = event.timeData;
			var plysToUndo = event.plysToUndo;
			this.boardInstance.state.exitToNeutral();
			this.resetPremoves();
			this.boardInstance.revertPlys(plysToUndo);
			if(plysToUndo % 2 == 1) {
				this.boardInstance.set_behavior(new gameboard_behaviors_PlayerMoveBehavior(this.playerColor));
				this.boardInstance.set_state(new gameboard_states_NeutralState());
			}
			break;
		case 27:
			var _g = event.outcome;
			var _g = event.rematchPossible;
			var _g = event.remainingTimeMs;
			var _g = event.newPersonalElo;
			this.boardInstance.state.exitToNeutral();
			this.resetPremoves();
			this.boardInstance.set_state(new gameboard_states_StubState());
			break;
		default:
		}
	}
	,onPremovePreferenceUpdated: function() {
		if(Preferences.premoveEnabled.get()) {
			this.boardInstance.set_state(new gameboard_states_NeutralState());
		} else {
			this.resetPremoves();
			this.boardInstance.set_state(new gameboard_states_StubState());
		}
	}
	,handleAnalysisPeripheralEvent: function(event) {
	}
	,movePossible: function(from,to) {
		return net_shared_board_Rules.isPremovePossible(from,to,this.boardInstance.get_shownSituation().pieces);
	}
	,allowedToMove: function(piece) {
		return piece.pieceColor == this.playerColor;
	}
	,returnToCurrentOnLMB: function() {
		return true;
	}
	,onVoidClick: function() {
		this.resetPremoves();
	}
	,onAboutToScrollAway: function() {
		this.resetPremoves();
	}
	,onMoveChosen: function(ply) {
		this.displayPlannedPremove(ply);
		this.premoves.push(ply);
		this.boardInstance.set_state(new gameboard_states_NeutralState());
	}
	,onHexChosen: function(coords) {
		throw haxe_Exception.thrown("onHexChosen() called while in EnemyMoveBehavior");
	}
	,displayPlannedPremove: function(ply) {
		this.boardInstance.applyPremoveTransposition(ply);
		this.boardInstance.getHex(ply.from).showLayer(gameboard_util_HexagonSelectionState.Premove);
		this.boardInstance.getHex(ply.to).showLayer(gameboard_util_HexagonSelectionState.Premove);
	}
	,markersDisabled: function() {
		return true;
	}
	,hoverDisabled: function() {
		if(Preferences.premoveEnabled.get()) {
			return !this.boardInstance.plyHistory.isAtEnd();
		} else {
			return true;
		}
	}
	,init: function(board) {
		if(this.boardInstance != null) {
			throw new utils_exceptions_AlreadyInitializedException(null,null,{ fileName : "src/gameboard/behaviors/EnemyMoveBehavior.hx", lineNumber : 191, className : "gameboard.behaviors.EnemyMoveBehavior", methodName : "init"});
		}
		this.boardInstance = board;
	}
	,__class__: gameboard_behaviors_EnemyMoveBehavior
};
var gameboard_behaviors_PlayerMoveBehavior = function(playerColor) {
	this.playerColor = playerColor;
};
$hxClasses["gameboard.behaviors.PlayerMoveBehavior"] = gameboard_behaviors_PlayerMoveBehavior;
gameboard_behaviors_PlayerMoveBehavior.__name__ = "gameboard.behaviors.PlayerMoveBehavior";
gameboard_behaviors_PlayerMoveBehavior.__interfaces__ = [gameboard_behaviors_IBehavior];
gameboard_behaviors_PlayerMoveBehavior.prototype = {
	boardInstance: null
	,playerColor: null
	,handleNetEvent: function(event) {
		switch(event._hx_index) {
		case 25:
			var _g = event.timeData;
			var plysToUndo = event.plysToUndo;
			this.boardInstance.state.exitToNeutral();
			this.boardInstance.revertPlys(plysToUndo);
			if(plysToUndo % 2 == 1) {
				this.boardInstance.set_behavior(new gameboard_behaviors_EnemyMoveBehavior(this.playerColor));
				if(!Preferences.premoveEnabled.get()) {
					this.boardInstance.set_state(new gameboard_states_StubState());
				}
			}
			break;
		case 27:
			var _g = event.outcome;
			var _g = event.rematchPossible;
			var _g = event.remainingTimeMs;
			var _g = event.newPersonalElo;
			this.boardInstance.state.exitToNeutral();
			this.boardInstance.set_state(new gameboard_states_StubState());
			break;
		default:
		}
	}
	,handleAnalysisPeripheralEvent: function(event) {
	}
	,onPremovePreferenceUpdated: function() {
	}
	,movePossible: function(from,to) {
		return net_shared_board_Rules.isMovementPossible(from,to,this.boardInstance.get_shownSituation().pieces);
	}
	,allowedToMove: function(piece) {
		return piece.pieceColor == this.playerColor;
	}
	,returnToCurrentOnLMB: function() {
		return true;
	}
	,onVoidClick: function() {
	}
	,onAboutToScrollAway: function() {
	}
	,onMoveChosen: function(ply) {
		assets_Audio.playPlySound(ply.toMaterialized(this.boardInstance.get_shownSituation()));
		this.boardInstance.emit(gameboard_GameBoardEvent.ContinuationMove(ply,ply.toNotation(this.boardInstance.get_shownSituation()),this.playerColor));
		Networker.emitEvent(net_shared_ClientEvent.Move(ply));
		this.boardInstance.makeMove(ply);
		if(Preferences.premoveEnabled.get()) {
			this.boardInstance.set_state(new gameboard_states_NeutralState());
		} else {
			this.boardInstance.set_state(new gameboard_states_StubState());
		}
		this.boardInstance.set_behavior(new gameboard_behaviors_EnemyMoveBehavior(this.playerColor));
	}
	,onHexChosen: function(coords) {
		throw haxe_Exception.thrown("onHexChosen() called while in PlayerMoveBehavior");
	}
	,markersDisabled: function() {
		return false;
	}
	,hoverDisabled: function() {
		return !this.boardInstance.plyHistory.isAtEnd();
	}
	,init: function(board) {
		if(this.boardInstance != null) {
			throw new utils_exceptions_AlreadyInitializedException(null,null,{ fileName : "src/gameboard/behaviors/PlayerMoveBehavior.hx", lineNumber : 109, className : "gameboard.behaviors.PlayerMoveBehavior", methodName : "init"});
		}
		this.boardInstance = board;
	}
	,__class__: gameboard_behaviors_PlayerMoveBehavior
};
var gameboard_behaviors_StubBehavior = function() {
};
$hxClasses["gameboard.behaviors.StubBehavior"] = gameboard_behaviors_StubBehavior;
gameboard_behaviors_StubBehavior.__name__ = "gameboard.behaviors.StubBehavior";
gameboard_behaviors_StubBehavior.__interfaces__ = [gameboard_behaviors_IBehavior];
gameboard_behaviors_StubBehavior.prototype = {
	init: function(board) {
	}
	,handleNetEvent: function(event) {
	}
	,handleAnalysisPeripheralEvent: function(event) {
	}
	,onPremovePreferenceUpdated: function() {
	}
	,onMoveChosen: function(ply) {
	}
	,onHexChosen: function(coords) {
	}
	,onAboutToScrollAway: function() {
	}
	,onVoidClick: function() {
	}
	,movePossible: function(from,to) {
		return false;
	}
	,allowedToMove: function(piece) {
		return false;
	}
	,returnToCurrentOnLMB: function() {
		return false;
	}
	,markersDisabled: function() {
		return true;
	}
	,hoverDisabled: function() {
		return true;
	}
	,__class__: gameboard_behaviors_StubBehavior
};
var gameboard_behaviors_SpectatorBehavior = function() {
	gameboard_behaviors_StubBehavior.call(this);
};
$hxClasses["gameboard.behaviors.SpectatorBehavior"] = gameboard_behaviors_SpectatorBehavior;
gameboard_behaviors_SpectatorBehavior.__name__ = "gameboard.behaviors.SpectatorBehavior";
gameboard_behaviors_SpectatorBehavior.__super__ = gameboard_behaviors_StubBehavior;
gameboard_behaviors_SpectatorBehavior.prototype = $extend(gameboard_behaviors_StubBehavior.prototype,{
	boardInstance: null
	,init: function(board) {
		if(this.boardInstance != null) {
			throw new utils_exceptions_AlreadyInitializedException(null,null,{ fileName : "src/gameboard/behaviors/SpectatorBehaviour.hx", lineNumber : 14, className : "gameboard.behaviors.SpectatorBehavior", methodName : "init"});
		}
		this.boardInstance = board;
	}
	,handleNetEvent: function(event) {
		switch(event._hx_index) {
		case 24:
			var _g = event.timeData;
			var rawPly = event.ply;
			if(Preferences.autoScrollOnMove.get() == AutoScrollType.Always) {
				this.boardInstance.applyScrolling(gfx_utils_PlyScrollType.End);
			}
			assets_Audio.playPlySound(rawPly.toMaterialized(this.boardInstance.get_currentSituation()));
			this.boardInstance.makeMove(rawPly);
			break;
		case 25:
			var _g = event.timeData;
			var plysToUndo = event.plysToUndo;
			this.boardInstance.revertPlys(plysToUndo);
			break;
		default:
		}
	}
	,__class__: gameboard_behaviors_SpectatorBehavior
});
var gameboard_components_Hexagon = function(dimensions,dark,displayedRowNumber,center) {
	this.layers = new haxe_ds_EnumValueMap();
	haxe_ui_containers_Absolute.call(this);
	this.dark = dark;
	this.dimensions = dimensions;
	this.displayedRowNumber = displayedRowNumber;
	this.drawChildren();
	if(center != null) {
		this.setCenterAt(center);
	}
};
$hxClasses["gameboard.components.Hexagon"] = gameboard_components_Hexagon;
gameboard_components_Hexagon.__name__ = "gameboard.components.Hexagon";
gameboard_components_Hexagon.__super__ = haxe_ui_containers_Absolute;
gameboard_components_Hexagon.prototype = $extend(haxe_ui_containers_Absolute.prototype,{
	layers: null
	,number: null
	,dot: null
	,circle: null
	,dimensions: null
	,dark: null
	,displayedRowNumber: null
	,center: null
	,setDisplayedRowNumber: function(displayedRowNumber) {
		this.displayedRowNumber = displayedRowNumber;
		this.number.set_text(displayedRowNumber != null ? displayedRowNumber : "");
		this.number.set_hidden(displayedRowNumber == null);
	}
	,showLayer: function(state) {
		this.layers.get(state).set_hidden(false);
		if(state == gameboard_util_HexagonSelectionState.StrongHover) {
			this.layers.get(gameboard_util_HexagonSelectionState.PaleHover).set_hidden(true);
		} else if(state == gameboard_util_HexagonSelectionState.PaleHover) {
			this.layers.get(gameboard_util_HexagonSelectionState.StrongHover).set_hidden(true);
		}
	}
	,hideLayer: function(state) {
		this.layers.get(state).set_hidden(true);
		if(state == gameboard_util_HexagonSelectionState.StrongHover) {
			this.layers.get(gameboard_util_HexagonSelectionState.PaleHover).set_hidden(true);
		} else if(state == gameboard_util_HexagonSelectionState.PaleHover) {
			this.layers.get(gameboard_util_HexagonSelectionState.StrongHover).set_hidden(true);
		}
	}
	,toggleLayer: function(state) {
		this.layers.get(state).set_hidden(!this.layers.get(state).get_hidden());
	}
	,refreshPosition: function() {
		this.set_left(this.center.x - this.dimensions.width / 2);
		this.set_top(this.center.y - this.dimensions.height / 2);
	}
	,resize: function(dimensions,newCenter) {
		this.removeAllComponents();
		this.dimensions = dimensions;
		this.drawChildren();
		if(newCenter != null) {
			this.setCenterAt(newCenter);
		} else {
			this.refreshPosition();
		}
	}
	,setCenterAt: function(position) {
		this.center = position;
		this.refreshPosition();
	}
	,addDot: function() {
		this.dot.set_hidden(false);
		this.circle.set_hidden(true);
	}
	,addCircle: function() {
		this.circle.set_hidden(false);
		this.dot.set_hidden(true);
	}
	,removeMarkers: function() {
		this.dot.set_hidden(true);
		this.circle.set_hidden(true);
	}
	,drawChildren: function() {
		var _g = 0;
		var _g1 = gameboard_util_HexagonSelectionState.__empty_constructs__.slice();
		while(_g < _g1.length) {
			var state = _g1[_g];
			++_g;
			var stateHexagon = new gameboard_components_graphics_HexagonCanvas(this.dimensions,state,this.dark);
			if(state != gameboard_util_HexagonSelectionState.Normal) {
				stateHexagon.set_hidden(true);
			}
			this.addComponent(stateHexagon);
			this.layers.set(state,stateHexagon);
		}
		this.set_width(this.layers.get(gameboard_util_HexagonSelectionState.Normal).get_width());
		this.set_height(this.layers.get(gameboard_util_HexagonSelectionState.Normal).get_height());
		this.number = new haxe_ui_components_Label();
		var _g = 0.35 * this.dimensions.sideLength;
		this.number.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,haxe_ui_util_Color.toInt(gfx_utils_Colors.hexRowNumber(this.dark)),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,_g,true,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
		this.number.set_left(this.dimensions.sideLength * 0.15);
		this.number.set_top((this.dimensions.height - this.number.get_customStyle().fontSize) / 2);
		this.setDisplayedRowNumber(this.displayedRowNumber);
		this.dot = new gameboard_components_graphics_HexagonDotCanvas(this.get_width(),this.get_height(),this.dimensions.sideLength);
		this.dot.set_hidden(true);
		this.circle = new gameboard_components_graphics_HexagonCircleCanvas(this.get_width(),this.get_height(),this.dimensions.sideLength);
		this.circle.set_hidden(true);
		this.addComponent(this.number);
		this.addComponent(this.dot);
		this.addComponent(this.circle);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Absolute.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Absolute.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_dimensions: null
	,_constructorParam_dark: null
	,_constructorParam_displayedRowNumber: null
	,_constructorParam_center: null
	,self: function() {
		return new gameboard_components_Hexagon(this._constructorParam_dimensions,this._constructorParam_dark,this._constructorParam_displayedRowNumber,this._constructorParam_center);
	}
	,__class__: gameboard_components_Hexagon
});
var haxe_ui_components_Image = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Image"] = haxe_ui_components_Image;
haxe_ui_components_Image.__name__ = "haxe.ui.components.Image";
haxe_ui_components_Image.__super__ = haxe_ui_core_Component;
haxe_ui_components_Image.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components__$Image_ImageLayout;
		this._compositeBuilderClass = haxe_ui_components__$Image_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("resource",haxe_ui_components__$Image_ResourceBehaviour);
		this.behaviours.register("scaleMode",haxe_ui_behaviours_InvalidatingBehaviour,haxe_ui_util_Variant.fromString("fill"));
		this.behaviours.register("imageHorizontalAlign",haxe_ui_behaviours_InvalidatingBehaviour,haxe_ui_util_Variant.fromString("center"));
		this.behaviours.register("imageVerticalAlign",haxe_ui_behaviours_InvalidatingBehaviour,haxe_ui_util_Variant.fromString("center"));
		this.behaviours.register("originalWidth",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("originalHeight",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("imageScale",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(1));
	}
	,get_resource: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.get("resource");
	}
	,set_resource: function(value) {
		this.behaviours.set("resource",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"resource"));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,get_scaleMode: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("scaleMode"));
	}
	,set_scaleMode: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("scaleMode",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"scaleMode"));
		return value;
	}
	,get_imageHorizontalAlign: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("imageHorizontalAlign"));
	}
	,set_imageHorizontalAlign: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("imageHorizontalAlign",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"imageHorizontalAlign"));
		return value;
	}
	,get_imageVerticalAlign: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("imageVerticalAlign"));
	}
	,set_imageVerticalAlign: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("imageVerticalAlign",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"imageVerticalAlign"));
		return value;
	}
	,get_originalWidth: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("originalWidth"));
	}
	,set_originalWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("originalWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"originalWidth"));
		return value;
	}
	,get_originalHeight: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("originalHeight"));
	}
	,set_originalHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("originalHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"originalHeight"));
		return value;
	}
	,get_imageScale: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("imageScale"));
	}
	,set_imageScale: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("imageScale",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"imageScale"));
		return value;
	}
	,get_value: function() {
		return haxe_ui_util_Variant.toDynamic(this.get_resource());
	}
	,set_value: function(value) {
		this.set_resource(haxe_ui_util_Variant.fromDynamic(value));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_resource() != null) {
			c.set_resource(this.get_resource());
		}
		if(this.get_scaleMode() != null) {
			c.set_scaleMode(this.get_scaleMode());
		}
		if(this.get_imageHorizontalAlign() != null) {
			c.set_imageHorizontalAlign(this.get_imageHorizontalAlign());
		}
		if(this.get_imageVerticalAlign() != null) {
			c.set_imageVerticalAlign(this.get_imageVerticalAlign());
		}
		c.set_originalWidth(this.get_originalWidth());
		c.set_originalHeight(this.get_originalHeight());
		c.set_imageScale(this.get_imageScale());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Image();
	}
	,__class__: haxe_ui_components_Image
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_imageScale:"set_imageScale",get_imageScale:"get_imageScale",set_originalHeight:"set_originalHeight",get_originalHeight:"get_originalHeight",set_originalWidth:"set_originalWidth",get_originalWidth:"get_originalWidth",set_imageVerticalAlign:"set_imageVerticalAlign",get_imageVerticalAlign:"get_imageVerticalAlign",set_imageHorizontalAlign:"set_imageHorizontalAlign",get_imageHorizontalAlign:"get_imageHorizontalAlign",set_scaleMode:"set_scaleMode",get_scaleMode:"get_scaleMode",set_resource:"set_resource",get_resource:"get_resource"})
});
var gameboard_components_Piece = function(type,color,hexDimensions,center) {
	haxe_ui_components_Image.call(this);
	this.pieceType = type;
	this.pieceColor = color;
	this.scalingCoefficient = 0.85 * gameboard_components_Piece.pieceRelativeScale(this.pieceType);
	this.hexDimensions = hexDimensions;
	if(center != null) {
		this.setCenterAt(center);
	}
	this.set_resource(haxe_ui_util_Variant.fromString("assets/pieces/" + Std.string(type) + "_" + Std.string(this.pieceColor) + ".svg"));
	var c = this;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onImageLoaded));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "this" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gameboard.components.Piece", methodName : "new"});
	}
};
$hxClasses["gameboard.components.Piece"] = gameboard_components_Piece;
gameboard_components_Piece.__name__ = "gameboard.components.Piece";
gameboard_components_Piece.pieceRelativeScale = function(pieceType) {
	switch(pieceType._hx_index) {
	case 0:
		return 0.7;
	case 3:case 4:
		return 0.9;
	default:
		return 1;
	}
};
gameboard_components_Piece.fromData = function(data,hexDimensions,center) {
	return new gameboard_components_Piece(data.type,data.color,hexDimensions,center);
};
gameboard_components_Piece.__super__ = haxe_ui_components_Image;
gameboard_components_Piece.prototype = $extend(haxe_ui_components_Image.prototype,{
	pieceType: null
	,pieceColor: null
	,scalingCoefficient: null
	,hexDimensions: null
	,aspectRatio: null
	,center: null
	,toHex: function() {
		return net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(this.pieceType,this.pieceColor));
	}
	,refreshPosition: function() {
		this.set_left(this.center.x - this.get_width() / 2);
		this.set_top(this.center.y - this.get_height() / 2);
	}
	,resize: function(dimensions,newCenter) {
		this.hexDimensions = dimensions;
		this.set_height(this.hexDimensions.height * this.scalingCoefficient);
		if(this.aspectRatio != null) {
			this.set_width(this.get_height() * this.aspectRatio);
		}
		if(newCenter != null) {
			this.setCenterAt(newCenter);
		} else {
			this.refreshPosition();
		}
	}
	,setCenterAt: function(position) {
		this.center = position;
		this.refreshPosition();
	}
	,onImageLoaded: function(e) {
		this.aspectRatio = this.get_originalWidth() / this.get_originalHeight();
		this.resize(this.hexDimensions);
	}
	,registerBehaviours: function() {
		haxe_ui_components_Image.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Image.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_type: null
	,_constructorParam_color: null
	,_constructorParam_hexDimensions: null
	,_constructorParam_center: null
	,self: function() {
		return new gameboard_components_Piece(this._constructorParam_type,this._constructorParam_color,this._constructorParam_hexDimensions,this._constructorParam_center);
	}
	,__class__: gameboard_components_Piece
});
var haxe_ui_core_IDataComponent = function() { };
$hxClasses["haxe.ui.core.IDataComponent"] = haxe_ui_core_IDataComponent;
haxe_ui_core_IDataComponent.__name__ = "haxe.ui.core.IDataComponent";
haxe_ui_core_IDataComponent.__isInterface__ = true;
haxe_ui_core_IDataComponent.prototype = {
	get_dataSource: null
	,set_dataSource: null
	,__class__: haxe_ui_core_IDataComponent
	,__properties__: {set_dataSource:"set_dataSource",get_dataSource:"get_dataSource"}
};
var haxe_ui_components_Canvas = function() {
	haxe_ui_core_Component.call(this);
	this.componentGraphics = new haxe_ui_graphics_ComponentGraphics(this);
};
$hxClasses["haxe.ui.components.Canvas"] = haxe_ui_components_Canvas;
haxe_ui_components_Canvas.__name__ = "haxe.ui.components.Canvas";
haxe_ui_components_Canvas.__interfaces__ = [haxe_ui_core_IDataComponent];
haxe_ui_components_Canvas.__super__ = haxe_ui_core_Component;
haxe_ui_components_Canvas.prototype = $extend(haxe_ui_core_Component.prototype,{
	componentGraphics: null
	,validateComponentLayout: function() {
		var b = haxe_ui_core_Component.prototype.validateComponentLayout.call(this);
		this.componentGraphics.resize(this.get_width(),this.get_height());
		return b;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_dataSource() != null) {
			c.set_dataSource(this.get_dataSource());
		}
		var tmp = this.componentGraphics._drawCommands.slice();
		c.componentGraphics._drawCommands = tmp;
		c.componentGraphics.replayDrawCommands();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("dataSource",haxe_ui_components__$Canvas_DataSourceBehaviour);
	}
	,get_dataSource: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDataSource(this.behaviours.get("dataSource"));
	}
	,set_dataSource: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dataSource",haxe_ui_util_Variant.fromDataSource(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"dataSource"));
		return value;
	}
	,self: function() {
		return new haxe_ui_components_Canvas();
	}
	,__class__: haxe_ui_components_Canvas
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_dataSource:"set_dataSource",get_dataSource:"get_dataSource"})
});
var gameboard_components_graphics_ArrowCanvas = function(dimensions,fromCenter,toCenter) {
	haxe_ui_components_Canvas.call(this);
	this.draw(dimensions,fromCenter,toCenter);
};
$hxClasses["gameboard.components.graphics.ArrowCanvas"] = gameboard_components_graphics_ArrowCanvas;
gameboard_components_graphics_ArrowCanvas.__name__ = "gameboard.components.graphics.ArrowCanvas";
gameboard_components_graphics_ArrowCanvas.__super__ = haxe_ui_components_Canvas;
gameboard_components_graphics_ArrowCanvas.prototype = $extend(haxe_ui_components_Canvas.prototype,{
	redraw: function(dimensions,fromCenter,toCenter) {
		this.componentGraphics.clear();
		this.draw(dimensions,fromCenter,toCenter);
	}
	,getBuilder: function() {
		return (js_Boot.__cast(this.componentGraphics._impl , haxe_ui_backend_html5_graphics_SVGGraphicsImpl))._svg;
	}
	,draw: function(dimensions,fromCenter,toCenter) {
		var trunkThickness = 0.375 * dimensions.sideLength;
		var capTriangleSide = 0.75 * dimensions.sideLength;
		var startRadius = dimensions.sideLength / 2;
		var direction = toCenter.diff(fromCenter);
		var orthogonalDirection = direction.orthogonalCW();
		var capSupportVector = direction.opposite().normalized(capTriangleSide);
		var sourceSupportVector = orthogonalDirection.normalized(trunkThickness / 2);
		var jointSupportVector = orthogonalDirection.normalized((capTriangleSide - trunkThickness) / 2);
		var capTopVertex = toCenter.copy();
		var capBottomCCWVertex = capTopVertex.sum(capSupportVector.rotated(-Math.PI / 6));
		var capBottomCWVertex = capTopVertex.sum(capSupportVector.rotated(Math.PI / 6));
		var trueSource = fromCenter.sum(direction.normalized(startRadius));
		var sourceCWVertex = trueSource.sum(sourceSupportVector);
		var sourceCCWVertex = trueSource.diff(sourceSupportVector);
		var jointCWVertex = capBottomCWVertex.diff(jointSupportVector);
		var jointCCWVertex = capBottomCCWVertex.sum(jointSupportVector);
		var interimVertexSequence = [capBottomCCWVertex,jointCCWVertex,sourceCCWVertex,sourceCWVertex,jointCWVertex,capBottomCWVertex];
		var topLeft = capTopVertex.copy();
		var bottomRight = capTopVertex.copy();
		var _g = 0;
		while(_g < interimVertexSequence.length) {
			var vertex = interimVertexSequence[_g];
			++_g;
			if(vertex.x < topLeft.x) {
				topLeft.x = vertex.x;
			} else if(vertex.x > bottomRight.x) {
				bottomRight.x = vertex.x;
			}
			if(vertex.y < topLeft.y) {
				topLeft.y = vertex.y;
			} else if(vertex.y > bottomRight.y) {
				bottomRight.y = vertex.y;
			}
		}
		this.set_left(topLeft.x);
		this.set_top(topLeft.y);
		this.set_width(bottomRight.x - topLeft.x);
		this.set_height(bottomRight.y - topLeft.y);
		var builder = this.getBuilder();
		var path = builder.path(capTopVertex.x - topLeft.x,capTopVertex.y - topLeft.y);
		path.fill({ color : haxe_ui_util_Color.toHex(gfx_utils_Colors.arrow), opacity : 0.75});
		var _g = 0;
		while(_g < interimVertexSequence.length) {
			var vertex = interimVertexSequence[_g];
			++_g;
			path.lineTo(vertex.x - topLeft.x,vertex.y - topLeft.y);
		}
		path.lineTo(capTopVertex.x - topLeft.x,capTopVertex.y - topLeft.y);
		path.close();
	}
	,registerBehaviours: function() {
		haxe_ui_components_Canvas.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Canvas.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_dimensions: null
	,_constructorParam_fromCenter: null
	,_constructorParam_toCenter: null
	,self: function() {
		return new gameboard_components_graphics_ArrowCanvas(this._constructorParam_dimensions,this._constructorParam_fromCenter,this._constructorParam_toCenter);
	}
	,__class__: gameboard_components_graphics_ArrowCanvas
});
var gameboard_components_graphics_HexagonCanvas = function(dimensions,state,dark,centerX,centerY) {
	haxe_ui_components_Canvas.call(this);
	var borderThickness = 0.075 * dimensions.sideLength;
	var borderColor = gfx_utils_Colors.border;
	var fillColor = gfx_utils_Colors.hexFill(state,dark);
	this.set_width(dimensions.width + Math.ceil(borderThickness));
	this.set_height(dimensions.height + Math.ceil(borderThickness));
	this.drawHexagon(dimensions,borderThickness,borderColor,fillColor);
	if(centerX != null && centerY != null) {
		this.setCenterAt(centerX,centerY);
	}
};
$hxClasses["gameboard.components.graphics.HexagonCanvas"] = gameboard_components_graphics_HexagonCanvas;
gameboard_components_graphics_HexagonCanvas.__name__ = "gameboard.components.graphics.HexagonCanvas";
gameboard_components_graphics_HexagonCanvas.__super__ = haxe_ui_components_Canvas;
gameboard_components_graphics_HexagonCanvas.prototype = $extend(haxe_ui_components_Canvas.prototype,{
	getCenter: function() {
		return new haxe_ui_geom_Point(this.get_left() + this.get_width() / 2,this.get_top() + this.get_height() / 2);
	}
	,setCenterAt: function(x,y) {
		this.set_left(x - this.get_width() / 2);
		this.set_top(y - this.get_height() / 2);
	}
	,getBuilder: function() {
		return (js_Boot.__cast(this.componentGraphics._impl , haxe_ui_backend_html5_graphics_SVGGraphicsImpl))._svg;
	}
	,drawHexagon: function(dimensions,borderThickness,borderColor,fillColor) {
		var currentPoint = new haxe_ui_geom_Point(borderThickness / 2,borderThickness / 2);
		currentPoint.addCoords(0,dimensions.height / 2);
		var builder = this.getBuilder();
		var path = builder.path(currentPoint.x,currentPoint.y);
		path.stroke({ color : haxe_ui_util_Color.toHex(borderColor), thickness : borderThickness});
		path.fill({ color : haxe_ui_util_Color.toHex(fillColor)});
		currentPoint.addCoords(dimensions.width / 4,-dimensions.height / 2);
		path.lineTo(currentPoint.x,currentPoint.y);
		currentPoint.addCoords(dimensions.width / 2,0);
		path.lineTo(currentPoint.x,currentPoint.y);
		currentPoint.addCoords(dimensions.width / 4,dimensions.height / 2);
		path.lineTo(currentPoint.x,currentPoint.y);
		currentPoint.addCoords(-dimensions.width / 4,dimensions.height / 2);
		path.lineTo(currentPoint.x,currentPoint.y);
		currentPoint.addCoords(-dimensions.width / 2,0);
		path.lineTo(currentPoint.x,currentPoint.y);
		currentPoint.addCoords(-dimensions.width / 4,-dimensions.height / 2);
		path.lineTo(currentPoint.x,currentPoint.y);
		path.close();
	}
	,registerBehaviours: function() {
		haxe_ui_components_Canvas.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Canvas.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_dimensions: null
	,_constructorParam_state: null
	,_constructorParam_dark: null
	,_constructorParam_centerX: null
	,_constructorParam_centerY: null
	,self: function() {
		return new gameboard_components_graphics_HexagonCanvas(this._constructorParam_dimensions,this._constructorParam_state,this._constructorParam_dark,this._constructorParam_centerX,this._constructorParam_centerY);
	}
	,__class__: gameboard_components_graphics_HexagonCanvas
});
var gameboard_components_graphics_HexagonCircleCanvas = function(boxWidth,boxHeight,hexSideLength) {
	haxe_ui_components_Canvas.call(this);
	this.set_width(boxWidth);
	this.set_height(boxHeight);
	this.componentGraphics.strokeStyle(3355443,hexSideLength / 10);
	this.componentGraphics.circle(boxWidth / 2,boxHeight / 2,0.8 * hexSideLength);
};
$hxClasses["gameboard.components.graphics.HexagonCircleCanvas"] = gameboard_components_graphics_HexagonCircleCanvas;
gameboard_components_graphics_HexagonCircleCanvas.__name__ = "gameboard.components.graphics.HexagonCircleCanvas";
gameboard_components_graphics_HexagonCircleCanvas.__super__ = haxe_ui_components_Canvas;
gameboard_components_graphics_HexagonCircleCanvas.prototype = $extend(haxe_ui_components_Canvas.prototype,{
	registerBehaviours: function() {
		haxe_ui_components_Canvas.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Canvas.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_boxWidth: null
	,_constructorParam_boxHeight: null
	,_constructorParam_hexSideLength: null
	,self: function() {
		return new gameboard_components_graphics_HexagonCircleCanvas(this._constructorParam_boxWidth,this._constructorParam_boxHeight,this._constructorParam_hexSideLength);
	}
	,__class__: gameboard_components_graphics_HexagonCircleCanvas
});
var gameboard_components_graphics_HexagonDotCanvas = function(boxWidth,boxHeight,hexSideLength) {
	haxe_ui_components_Canvas.call(this);
	this.set_width(boxWidth);
	this.set_height(boxHeight);
	this.componentGraphics.fillStyle(3355443);
	this.componentGraphics.circle(boxWidth / 2,boxHeight / 2,0.2 * hexSideLength);
};
$hxClasses["gameboard.components.graphics.HexagonDotCanvas"] = gameboard_components_graphics_HexagonDotCanvas;
gameboard_components_graphics_HexagonDotCanvas.__name__ = "gameboard.components.graphics.HexagonDotCanvas";
gameboard_components_graphics_HexagonDotCanvas.__super__ = haxe_ui_components_Canvas;
gameboard_components_graphics_HexagonDotCanvas.prototype = $extend(haxe_ui_components_Canvas.prototype,{
	registerBehaviours: function() {
		haxe_ui_components_Canvas.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Canvas.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_boxWidth: null
	,_constructorParam_boxHeight: null
	,_constructorParam_hexSideLength: null
	,self: function() {
		return new gameboard_components_graphics_HexagonDotCanvas(this._constructorParam_boxWidth,this._constructorParam_boxHeight,this._constructorParam_hexSideLength);
	}
	,__class__: gameboard_components_graphics_HexagonDotCanvas
});
var gameboard_states_BaseState = function() { };
$hxClasses["gameboard.states.BaseState"] = gameboard_states_BaseState;
gameboard_states_BaseState.__name__ = "gameboard.states.BaseState";
gameboard_states_BaseState.prototype = {
	boardInstance: null
	,cursorLocation: null
	,onEntered: null
	,exitToNeutral: null
	,onLMBPressed: null
	,updateHoverEffects: function() {
		var hoverLayer = this.isHoverStrong() ? gameboard_util_HexagonSelectionState.StrongHover : gameboard_util_HexagonSelectionState.PaleHover;
		if(this.cursorLocation != null) {
			if(!this.boardInstance.behavior.hoverDisabled() && this.reactsToHover(this.cursorLocation)) {
				this.boardInstance.getHex(this.cursorLocation).showLayer(hoverLayer);
			} else {
				this.boardInstance.getHex(this.cursorLocation).hideLayer(hoverLayer);
			}
		}
	}
	,onMouseMoved: function(newCursorLocation) {
		var hoverLayer = this.isHoverStrong() ? gameboard_util_HexagonSelectionState.StrongHover : gameboard_util_HexagonSelectionState.PaleHover;
		if(net_shared_board_HexCoords_equal(this.cursorLocation,newCursorLocation)) {
			return;
		}
		if(newCursorLocation != null && !this.boardInstance.behavior.hoverDisabled() && this.reactsToHover(newCursorLocation)) {
			this.boardInstance.getHex(newCursorLocation).showLayer(hoverLayer);
		}
		if(this.cursorLocation != null) {
			this.boardInstance.getHex(this.cursorLocation).hideLayer(hoverLayer);
		}
		this.cursorLocation = newCursorLocation;
	}
	,isHoverStrong: null
	,reactsToHover: null
	,onLMBReleased: null
	,init: function(board,cursorLocation) {
		if(this.boardInstance != null) {
			throw new utils_exceptions_AlreadyInitializedException(null,null,{ fileName : "src/gameboard/states/BaseState.hx", lineNumber : 55, className : "gameboard.states.BaseState", methodName : "init"});
		}
		this.boardInstance = board;
		this.cursorLocation = cursorLocation;
		this.onEntered();
		this.updateHoverEffects();
	}
	,__class__: gameboard_states_BaseState
};
var gameboard_states_BasePlayableState = function() { };
$hxClasses["gameboard.states.BasePlayableState"] = gameboard_states_BasePlayableState;
gameboard_states_BasePlayableState.__name__ = "gameboard.states.BasePlayableState";
gameboard_states_BasePlayableState.__super__ = gameboard_states_BaseState;
gameboard_states_BasePlayableState.prototype = $extend(gameboard_states_BaseState.prototype,{
	askMoveDetails: function(from,to,shiftPressed,ctrlPressed) {
		var _gthis = this;
		var departureHex = net_shared_board_PieceArrangement.get(this.boardInstance.get_shownSituation().pieces,from);
		var destinationHex = net_shared_board_PieceArrangement.get(this.boardInstance.get_shownSituation().pieces,to);
		var nearIntellector = net_shared_board_PieceArrangement.affectedByAura(this.boardInstance.get_shownSituation().pieces,from);
		var promotionPossible = to.isFinal(net_shared_board_Hex.color(departureHex)) && net_shared_board_Hex.type(departureHex) == net_shared_PieceType.Progressor && net_shared_board_Hex.color(destinationHex) != net_shared_board_Hex.color(departureHex) && net_shared_board_Hex.type(destinationHex) != net_shared_PieceType.Intellector;
		var chameleonPossible = nearIntellector && !net_shared_board_Hex.isEmpty(destinationHex) && net_shared_board_Hex.color(departureHex) != net_shared_board_Hex.color(destinationHex) && net_shared_board_Hex.type(departureHex) != net_shared_board_Hex.type(destinationHex) && net_shared_board_Hex.type(departureHex) != net_shared_PieceType.Progressor && net_shared_board_Hex.type(destinationHex) != net_shared_PieceType.Intellector;
		var simplePly = net_shared_board_RawPly.construct(from,to);
		var chameleonPly = net_shared_board_RawPly.construct(from,to,net_shared_board_Hex.type(destinationHex));
		var dominatorPromotionPly = net_shared_board_RawPly.construct(from,to,net_shared_PieceType.Dominator);
		var onChameleonDecisionMade = function(morph) {
			_gthis.onMoveChosen(morph ? chameleonPly : simplePly);
		};
		var onPromotionSelected = function(piece) {
			_gthis.onMoveChosen(net_shared_board_RawPly.construct(from,to,piece));
		};
		if(promotionPossible) {
			if(shiftPressed) {
				this.onMoveChosen(dominatorPromotionPly);
			} else {
				gfx_Dialogs.getQueue().add(new gfx_popups_PromotionSelect(net_shared_board_Hex.color(departureHex),onPromotionSelected));
			}
		} else if(chameleonPossible) {
			if(ctrlPressed) {
				this.onMoveChosen(simplePly);
			} else if(shiftPressed) {
				this.onMoveChosen(chameleonPly);
			} else {
				var _g = onChameleonDecisionMade;
				var morph = true;
				var _g1 = onChameleonDecisionMade;
				var morph1 = false;
				gfx_Dialogs.confirm(dict_Phrase.CHAMELEON_DIALOG_QUESTION,dict_Phrase.CHAMELEON_DIALOG_TITLE,function() {
					_g(morph);
				},function() {
					_g1(morph1);
				});
			}
		} else {
			this.onMoveChosen(simplePly);
		}
	}
	,onMoveChosen: function(ply) {
		this.boardInstance.behavior.onMoveChosen(ply);
		this.boardInstance.state.updateHoverEffects();
	}
	,__class__: gameboard_states_BasePlayableState
});
var gameboard_states__$DraggingState_Transition = $hxEnums["gameboard.states._DraggingState.Transition"] = { __ename__:"gameboard.states._DraggingState.Transition",__constructs__:null
	,ToNeutral: {_hx_name:"ToNeutral",_hx_index:0,__enum__:"gameboard.states._DraggingState.Transition",toString:$estr}
	,ToSelected: {_hx_name:"ToSelected",_hx_index:1,__enum__:"gameboard.states._DraggingState.Transition",toString:$estr}
};
gameboard_states__$DraggingState_Transition.__constructs__ = [gameboard_states__$DraggingState_Transition.ToNeutral,gameboard_states__$DraggingState_Transition.ToSelected];
gameboard_states__$DraggingState_Transition.__empty_constructs__ = [gameboard_states__$DraggingState_Transition.ToNeutral,gameboard_states__$DraggingState_Transition.ToSelected];
var gameboard_states_DraggingState = function(dragStartLocation) {
	this.dragStartLocation = dragStartLocation;
};
$hxClasses["gameboard.states.DraggingState"] = gameboard_states_DraggingState;
gameboard_states_DraggingState.__name__ = "gameboard.states.DraggingState";
gameboard_states_DraggingState.__super__ = gameboard_states_BasePlayableState;
gameboard_states_DraggingState.prototype = $extend(gameboard_states_BasePlayableState.prototype,{
	dragStartLocation: null
	,draggedPiece: null
	,dragOffset: null
	,dragBlocked: null
	,onEntered: function() {
		this.draggedPiece = this.boardInstance.getPiece(this.dragStartLocation);
		this.draggedPiece.moveComponentToFront();
		this.dragOffset = new haxe_ui_geom_Point(this.draggedPiece.get_left() - this.boardInstance.lastMouseMoveEvent.screenX,this.draggedPiece.get_top() - this.boardInstance.lastMouseMoveEvent.screenY);
		this.dragBlocked = false;
		this.boardInstance.getHex(this.dragStartLocation).showLayer(gameboard_util_HexagonSelectionState.LMB);
		if(!this.boardInstance.behavior.markersDisabled()) {
			this.boardInstance.addMarkers(this.dragStartLocation);
		}
	}
	,exit: function(transition) {
		this.dragBlocked = true;
		this.draggedPiece.setCenterAt(this.boardInstance.hexCoords(this.dragStartLocation));
		this.boardInstance.getHex(this.dragStartLocation).hideLayer(gameboard_util_HexagonSelectionState.LMB);
		if(!this.boardInstance.behavior.markersDisabled()) {
			this.boardInstance.removeMarkers(this.dragStartLocation);
		}
		switch(transition._hx_index) {
		case 0:
			this.boardInstance.set_state(new gameboard_states_NeutralState());
			break;
		case 1:
			this.boardInstance.set_state(new gameboard_states_SelectedState(this.dragStartLocation));
			break;
		}
	}
	,exitToNeutral: function() {
		this.exit(gameboard_states__$DraggingState_Transition.ToNeutral);
	}
	,onLMBPressed: function(location,shiftPressed,ctrlPressed) {
	}
	,onMouseMoved: function(newCursorLocation) {
		gameboard_states_BasePlayableState.prototype.onMouseMoved.call(this,newCursorLocation);
		if(!this.dragBlocked) {
			var newPos = this.dragOffset.sum(new haxe_ui_geom_Point(this.boardInstance.lastMouseMoveEvent.screenX,this.boardInstance.lastMouseMoveEvent.screenY));
			this.draggedPiece.set_left(newPos.x);
			this.draggedPiece.set_top(newPos.y);
		}
	}
	,onLMBReleased: function(location,shiftPressed,ctrlPressed) {
		if(location != null && location.equals(this.dragStartLocation)) {
			this.exit(gameboard_states__$DraggingState_Transition.ToSelected);
		} else {
			this.exit(gameboard_states__$DraggingState_Transition.ToNeutral);
		}
		if(location != null && this.boardInstance.behavior.movePossible(this.dragStartLocation,location)) {
			this.askMoveDetails(this.dragStartLocation,location,shiftPressed,ctrlPressed);
		}
	}
	,reactsToHover: function(location) {
		return this.boardInstance.behavior.movePossible(this.dragStartLocation,location);
	}
	,isHoverStrong: function() {
		return false;
	}
	,__class__: gameboard_states_DraggingState
});
var gameboard_states_HexSelectionState = function(occupiedOnly) {
	this.occupiedOnly = occupiedOnly;
};
$hxClasses["gameboard.states.HexSelectionState"] = gameboard_states_HexSelectionState;
gameboard_states_HexSelectionState.__name__ = "gameboard.states.HexSelectionState";
gameboard_states_HexSelectionState.__super__ = gameboard_states_BaseState;
gameboard_states_HexSelectionState.prototype = $extend(gameboard_states_BaseState.prototype,{
	occupiedOnly: null
	,possibleLocation: function(location) {
		if(location != null) {
			if(this.occupiedOnly) {
				return !net_shared_board_Hex.isEmpty(net_shared_board_PieceArrangement.get(this.boardInstance.get_shownSituation().pieces,location));
			} else {
				return true;
			}
		} else {
			return false;
		}
	}
	,onEntered: function() {
	}
	,exitToNeutral: function() {
		throw haxe_Exception.thrown("Invalid transition");
	}
	,onLMBPressed: function(location,shiftPressed,ctrlPressed) {
		if(this.possibleLocation(location)) {
			this.boardInstance.behavior.onHexChosen(location);
		}
	}
	,reactsToHover: function(location) {
		return this.possibleLocation(location);
	}
	,isHoverStrong: function() {
		return true;
	}
	,onLMBReleased: function(location,shiftPressed,ctrlPressed) {
	}
	,__class__: gameboard_states_HexSelectionState
});
var gameboard_states__$NeutralState_Transition = $hxEnums["gameboard.states._NeutralState.Transition"] = { __ename__:"gameboard.states._NeutralState.Transition",__constructs__:null
	,ToDragging: ($_=function(dragStartLocation) { return {_hx_index:0,dragStartLocation:dragStartLocation,__enum__:"gameboard.states._NeutralState.Transition",toString:$estr}; },$_._hx_name="ToDragging",$_.__params__ = ["dragStartLocation"],$_)
};
gameboard_states__$NeutralState_Transition.__constructs__ = [gameboard_states__$NeutralState_Transition.ToDragging];
gameboard_states__$NeutralState_Transition.__empty_constructs__ = [];
var gameboard_states_NeutralState = function() {
};
$hxClasses["gameboard.states.NeutralState"] = gameboard_states_NeutralState;
gameboard_states_NeutralState.__name__ = "gameboard.states.NeutralState";
gameboard_states_NeutralState.__super__ = gameboard_states_BasePlayableState;
gameboard_states_NeutralState.prototype = $extend(gameboard_states_BasePlayableState.prototype,{
	onEntered: function() {
	}
	,exitToNeutral: function() {
	}
	,exit: function(transition) {
		var dragStartLocation = transition.dragStartLocation;
		this.boardInstance.set_state(new gameboard_states_DraggingState(dragStartLocation));
	}
	,onLMBPressed: function(location,shiftPressed,ctrlPressed) {
		if(this.boardInstance.behavior.returnToCurrentOnLMB() && !this.boardInstance.plyHistory.isAtEnd()) {
			this.boardInstance.applyScrolling(gfx_utils_PlyScrollType.End);
			this.boardInstance.emit(gameboard_GameBoardEvent.ReturnedToCurrentPosition);
			return;
		}
		var pressedPiece = this.boardInstance.getPiece(location);
		if(pressedPiece != null && this.boardInstance.behavior.allowedToMove(pressedPiece)) {
			this.exit(gameboard_states__$NeutralState_Transition.ToDragging(location));
		} else {
			this.boardInstance.behavior.onVoidClick();
		}
	}
	,reactsToHover: function(location) {
		var piece = this.boardInstance.getPiece(location);
		if(piece == null) {
			return false;
		} else {
			return this.boardInstance.behavior.allowedToMove(piece);
		}
	}
	,isHoverStrong: function() {
		return true;
	}
	,onLMBReleased: function(location,shiftPressed,ctrlPressed) {
	}
	,__class__: gameboard_states_NeutralState
});
var gameboard_states__$SelectedState_Transition = $hxEnums["gameboard.states._SelectedState.Transition"] = { __ename__:"gameboard.states._SelectedState.Transition",__constructs__:null
	,ToNeutral: {_hx_name:"ToNeutral",_hx_index:0,__enum__:"gameboard.states._SelectedState.Transition",toString:$estr}
	,ToDragging: ($_=function(dragStartLocation) { return {_hx_index:1,dragStartLocation:dragStartLocation,__enum__:"gameboard.states._SelectedState.Transition",toString:$estr}; },$_._hx_name="ToDragging",$_.__params__ = ["dragStartLocation"],$_)
};
gameboard_states__$SelectedState_Transition.__constructs__ = [gameboard_states__$SelectedState_Transition.ToNeutral,gameboard_states__$SelectedState_Transition.ToDragging];
gameboard_states__$SelectedState_Transition.__empty_constructs__ = [gameboard_states__$SelectedState_Transition.ToNeutral];
var gameboard_states_SelectedState = function(selectedDepartureLocation) {
	this.selectedDepartureLocation = selectedDepartureLocation;
};
$hxClasses["gameboard.states.SelectedState"] = gameboard_states_SelectedState;
gameboard_states_SelectedState.__name__ = "gameboard.states.SelectedState";
gameboard_states_SelectedState.__super__ = gameboard_states_BasePlayableState;
gameboard_states_SelectedState.prototype = $extend(gameboard_states_BasePlayableState.prototype,{
	selectedDepartureLocation: null
	,onEntered: function() {
		this.boardInstance.getHex(this.selectedDepartureLocation).showLayer(gameboard_util_HexagonSelectionState.LMB);
		if(!this.boardInstance.behavior.markersDisabled()) {
			this.boardInstance.addMarkers(this.selectedDepartureLocation);
		}
	}
	,exit: function(transition) {
		this.boardInstance.getHex(this.selectedDepartureLocation).hideLayer(gameboard_util_HexagonSelectionState.LMB);
		if(!this.boardInstance.behavior.markersDisabled()) {
			this.boardInstance.removeMarkers(this.selectedDepartureLocation);
		}
		switch(transition._hx_index) {
		case 0:
			this.boardInstance.set_state(new gameboard_states_NeutralState());
			break;
		case 1:
			var dragStartLocation = transition.dragStartLocation;
			this.boardInstance.set_state(new gameboard_states_DraggingState(dragStartLocation));
			break;
		}
	}
	,exitToNeutral: function() {
		this.exit(gameboard_states__$SelectedState_Transition.ToNeutral);
	}
	,onLMBPressed: function(location,shiftPressed,ctrlPressed) {
		var pressedDestinationHex = location == null ? null : net_shared_board_PieceArrangement.get(this.boardInstance.get_shownSituation().pieces,location);
		var selectedDepartureHex = net_shared_board_PieceArrangement.get(this.boardInstance.get_shownSituation().pieces,this.selectedDepartureLocation);
		if(pressedDestinationHex == null || location.equals(this.selectedDepartureLocation)) {
			this.exit(gameboard_states__$SelectedState_Transition.ToNeutral);
		} else if(this.boardInstance.behavior.movePossible(this.selectedDepartureLocation,location)) {
			this.exit(gameboard_states__$SelectedState_Transition.ToNeutral);
			this.askMoveDetails(this.selectedDepartureLocation,location,shiftPressed,ctrlPressed);
		} else if(net_shared_board_Hex.color(pressedDestinationHex) == net_shared_board_Hex.color(selectedDepartureHex)) {
			this.exit(gameboard_states__$SelectedState_Transition.ToDragging(location));
		} else {
			this.exit(gameboard_states__$SelectedState_Transition.ToNeutral);
		}
	}
	,reactsToHover: function(location) {
		return this.boardInstance.behavior.movePossible(this.selectedDepartureLocation,location);
	}
	,isHoverStrong: function() {
		return false;
	}
	,onLMBReleased: function(location,shiftPressed,ctrlPressed) {
	}
	,__class__: gameboard_states_SelectedState
});
var gameboard_states_StubState = function() {
};
$hxClasses["gameboard.states.StubState"] = gameboard_states_StubState;
gameboard_states_StubState.__name__ = "gameboard.states.StubState";
gameboard_states_StubState.__super__ = gameboard_states_BaseState;
gameboard_states_StubState.prototype = $extend(gameboard_states_BaseState.prototype,{
	onEntered: function() {
	}
	,onLMBPressed: function(location,shiftPressed,ctrlPressed) {
	}
	,onLMBReleased: function(location,shiftPressed,ctrlPressed) {
	}
	,exitToNeutral: function() {
	}
	,reactsToHover: function(location) {
		return false;
	}
	,isHoverStrong: function() {
		return false;
	}
	,__class__: gameboard_states_StubState
});
var gameboard_util_BoardSize = function() { };
$hxClasses["gameboard.util.BoardSize"] = gameboard_util_BoardSize;
gameboard_util_BoardSize.__name__ = "gameboard.util.BoardSize";
gameboard_util_BoardSize.inverseAspectRatio = function(lettersEnabled) {
	if(lettersEnabled) {
		return net_shared_utils_MathUtils.HALF_SQRT3 * 1.0714285714285714;
	} else {
		return net_shared_utils_MathUtils.HALF_SQRT3;
	}
};
gameboard_util_BoardSize.widthToHexSideLength = function(w) {
	return w / 14;
};
var gameboard_util_HexDimensions = function(sideLength) {
	this.sideLength = sideLength;
	this.width = gameboard_util_HexDimensions.sideToWidth(sideLength);
	this.height = gameboard_util_HexDimensions.sideToHeight(sideLength);
};
$hxClasses["gameboard.util.HexDimensions"] = gameboard_util_HexDimensions;
gameboard_util_HexDimensions.__name__ = "gameboard.util.HexDimensions";
gameboard_util_HexDimensions.sideToWidth = function(sideLength) {
	return sideLength * 2;
};
gameboard_util_HexDimensions.sideToHeight = function(sideLength) {
	return sideLength * Math.sqrt(3);
};
gameboard_util_HexDimensions.widthToSide = function(w) {
	return w / 2;
};
gameboard_util_HexDimensions.heightToSide = function(h) {
	return h / Math.sqrt(3);
};
gameboard_util_HexDimensions.prototype = {
	sideLength: null
	,width: null
	,height: null
	,__class__: gameboard_util_HexDimensions
};
var gameboard_util_HexagonSelectionState = $hxEnums["gameboard.util.HexagonSelectionState"] = { __ename__:"gameboard.util.HexagonSelectionState",__constructs__:null
	,Normal: {_hx_name:"Normal",_hx_index:0,__enum__:"gameboard.util.HexagonSelectionState",toString:$estr}
	,LastMove: {_hx_name:"LastMove",_hx_index:1,__enum__:"gameboard.util.HexagonSelectionState",toString:$estr}
	,Premove: {_hx_name:"Premove",_hx_index:2,__enum__:"gameboard.util.HexagonSelectionState",toString:$estr}
	,LMB: {_hx_name:"LMB",_hx_index:3,__enum__:"gameboard.util.HexagonSelectionState",toString:$estr}
	,RMB: {_hx_name:"RMB",_hx_index:4,__enum__:"gameboard.util.HexagonSelectionState",toString:$estr}
	,PaleHover: {_hx_name:"PaleHover",_hx_index:5,__enum__:"gameboard.util.HexagonSelectionState",toString:$estr}
	,StrongHover: {_hx_name:"StrongHover",_hx_index:6,__enum__:"gameboard.util.HexagonSelectionState",toString:$estr}
};
gameboard_util_HexagonSelectionState.__constructs__ = [gameboard_util_HexagonSelectionState.Normal,gameboard_util_HexagonSelectionState.LastMove,gameboard_util_HexagonSelectionState.Premove,gameboard_util_HexagonSelectionState.LMB,gameboard_util_HexagonSelectionState.RMB,gameboard_util_HexagonSelectionState.PaleHover,gameboard_util_HexagonSelectionState.StrongHover];
gameboard_util_HexagonSelectionState.__empty_constructs__ = [gameboard_util_HexagonSelectionState.Normal,gameboard_util_HexagonSelectionState.LastMove,gameboard_util_HexagonSelectionState.Premove,gameboard_util_HexagonSelectionState.LMB,gameboard_util_HexagonSelectionState.RMB,gameboard_util_HexagonSelectionState.PaleHover,gameboard_util_HexagonSelectionState.StrongHover];
var gfx_SpaceRemoval = $hxEnums["gfx.SpaceRemoval"] = { __ename__:"gfx.SpaceRemoval",__constructs__:null
	,None: {_hx_name:"None",_hx_index:0,__enum__:"gfx.SpaceRemoval",toString:$estr}
	,Trim: {_hx_name:"Trim",_hx_index:1,__enum__:"gfx.SpaceRemoval",toString:$estr}
	,All: {_hx_name:"All",_hx_index:2,__enum__:"gfx.SpaceRemoval",toString:$estr}
};
gfx_SpaceRemoval.__constructs__ = [gfx_SpaceRemoval.None,gfx_SpaceRemoval.Trim,gfx_SpaceRemoval.All];
gfx_SpaceRemoval.__empty_constructs__ = [gfx_SpaceRemoval.None,gfx_SpaceRemoval.Trim,gfx_SpaceRemoval.All];
var gfx_utils_DialogQueue = function() {
	this.modalCount = 0;
	var _g = new haxe_ds_EnumValueMap();
	var _g1 = 0;
	var _g2 = gfx_basic_$components_utils_DialogGroup.__empty_constructs__.slice();
	while(_g1 < _g2.length) {
		var group = _g2[_g1];
		++_g1;
		_g.set(group,[]);
	}
	this.groupMap = _g;
	this.shownDialogs = [];
};
$hxClasses["gfx.utils.DialogQueue"] = gfx_utils_DialogQueue;
gfx_utils_DialogQueue.__name__ = "gfx.utils.DialogQueue";
gfx_utils_DialogQueue.prototype = {
	shownDialogs: null
	,groupMap: null
	,modalCount: null
	,hasActiveDialog: function() {
		return !Lambda.empty(this.shownDialogs);
	}
	,onDialogClosed: function(dialog) {
		HxOverrides.remove(this.shownDialogs,dialog);
		if(dialog.group != null) {
			HxOverrides.remove(this.groupMap.get(dialog.group),dialog);
		}
		if(dialog.modal) {
			this.modalCount--;
			if(this.modalCount == 0) {
				gfx_SceneManager.onModalDialogHidden();
			}
		}
		if(this.hasActiveDialog()) {
			this.shownDialogs[0].set_disabled(false);
		}
	}
	,onBasicDialogClosed: function(dialog) {
		HxOverrides.remove(this.shownDialogs,dialog);
		if(this.hasActiveDialog()) {
			this.shownDialogs[0].set_disabled(false);
		}
	}
	,add: function(dialog) {
		if(dialog.group == gfx_basic_$components_utils_DialogGroup.ReconnectionPopUp && !Lambda.empty(this.groupMap.get(gfx_basic_$components_utils_DialogGroup.ReconnectionPopUp))) {
			return;
		}
		if(this.hasActiveDialog()) {
			this.shownDialogs[0].set_disabled(true);
		}
		dialog.assignQueueCallback($bind(this,this.onDialogClosed));
		this.shownDialogs.unshift(dialog);
		if(dialog.group != null) {
			this.groupMap.get(dialog.group).push(dialog);
		}
		dialog.showDialog(dialog.modal);
		if(dialog.modal) {
			this.modalCount++;
			gfx_SceneManager.onModalDialogShown();
		}
	}
	,addBasic: function(dialog,closeHandler,addToStage,group) {
		if(addToStage == null) {
			addToStage = false;
		}
		var _gthis = this;
		if(this.hasActiveDialog()) {
			this.shownDialogs[0].set_disabled(true);
		}
		this.shownDialogs.unshift(dialog);
		if(group != null) {
			this.groupMap.get(group).push(dialog);
		}
		dialog.set_onDialogClosed(function(e) {
			_gthis.onBasicDialogClosed(dialog);
			if(closeHandler != null) {
				closeHandler(e.button);
			}
		});
		if(addToStage) {
			dialog.showDialog(dialog.modal);
		}
	}
	,closeGroup: function(group) {
		var _g = 0;
		var _g1 = this.groupMap.get(group).slice();
		while(_g < _g1.length) {
			var dialog = _g1[_g];
			++_g;
			dialog.hideDialog("{{cancel}}");
		}
	}
	,__class__: gfx_utils_DialogQueue
};
var gfx_Dialogs = function() { };
$hxClasses["gfx.Dialogs"] = gfx_Dialogs;
gfx_Dialogs.__name__ = "gfx.Dialogs";
gfx_Dialogs.getQueue = function() {
	return gfx_Dialogs.queue;
};
gfx_Dialogs.alertRaw = function(message,title) {
	if(title == null) {
		title = "Raw alert";
	}
	gfx_Dialogs.queue.addBasic(haxe_ui_containers_dialogs_Dialogs.messageBox(message,title,"warning",true));
};
gfx_Dialogs.alert = function(message,title,messageSubstitutions) {
	var messageStr = dict_Dictionary.getPhrase(message,messageSubstitutions);
	var titleStr = dict_Dictionary.getPhrase(title);
	gfx_Dialogs.alertRaw(messageStr,titleStr);
};
gfx_Dialogs.alertCallback = function(message,title,messageSubstitutions) {
	var message1 = message;
	var title1 = title;
	var messageSubstitutions1 = messageSubstitutions;
	return function() {
		gfx_Dialogs.alert(message1,title1,messageSubstitutions1);
	};
};
gfx_Dialogs.infoRaw = function(message,title,group) {
	gfx_Dialogs.queue.addBasic(haxe_ui_containers_dialogs_Dialogs.messageBox(message,title,"info",true),null,false,group);
};
gfx_Dialogs.info = function(message,title,messageSubstitutions,group) {
	gfx_Dialogs.infoRaw(dict_Dictionary.getPhrase(message,messageSubstitutions),dict_Dictionary.getPhrase(title),group);
};
gfx_Dialogs.confirmRaw = function(message,title,onConfirmed,onDeclined) {
	var dialog = haxe_ui_containers_dialogs_Dialogs.messageBox(message,title,"question",true);
	gfx_Dialogs.queue.addBasic(dialog,function(btn) {
		var larr = haxe_ui_containers_dialogs_DialogButton.toString(btn).split("|");
		if(larr.indexOf(haxe_ui_containers_dialogs_DialogButton.toString("{{yes}}")) != -1) {
			onConfirmed();
		} else {
			onDeclined();
		}
	});
};
gfx_Dialogs.confirm = function(message,title,onConfirmed,onDeclined) {
	gfx_Dialogs.confirmRaw(dict_Dictionary.getPhrase(message),dict_Dictionary.getPhrase(title),onConfirmed,onDeclined);
};
gfx_Dialogs.prompt = function(message,removeSpaces,onInput,onCancel,emptyIsCancel) {
	if(emptyIsCancel == null) {
		emptyIsCancel = true;
	}
	var res = window.prompt(dict_Dictionary.getPhrase(message));
	if(res == null) {
		if(onCancel != null) {
			onCancel();
		}
		return;
	}
	if(removeSpaces == gfx_SpaceRemoval.Trim) {
		res = StringTools.trim(res);
	} else if(removeSpaces == gfx_SpaceRemoval.All) {
		res = StringTools.replace(res," ","");
	}
	if(res == "" && emptyIsCancel) {
		onCancel();
	} else {
		onInput(res);
	}
};
var gfx_ResponsiveStyleProperty = $hxEnums["gfx.ResponsiveStyleProperty"] = { __ename__:"gfx.ResponsiveStyleProperty",__constructs__:null
	,VerticalSpacing: {_hx_name:"VerticalSpacing",_hx_index:0,__enum__:"gfx.ResponsiveStyleProperty",toString:$estr}
	,HorizontalSpacing: {_hx_name:"HorizontalSpacing",_hx_index:1,__enum__:"gfx.ResponsiveStyleProperty",toString:$estr}
	,FontSize: {_hx_name:"FontSize",_hx_index:2,__enum__:"gfx.ResponsiveStyleProperty",toString:$estr}
	,PaddingTop: {_hx_name:"PaddingTop",_hx_index:3,__enum__:"gfx.ResponsiveStyleProperty",toString:$estr}
	,PaddingLeft: {_hx_name:"PaddingLeft",_hx_index:4,__enum__:"gfx.ResponsiveStyleProperty",toString:$estr}
	,PaddingRight: {_hx_name:"PaddingRight",_hx_index:5,__enum__:"gfx.ResponsiveStyleProperty",toString:$estr}
	,PaddingBottom: {_hx_name:"PaddingBottom",_hx_index:6,__enum__:"gfx.ResponsiveStyleProperty",toString:$estr}
};
gfx_ResponsiveStyleProperty.__constructs__ = [gfx_ResponsiveStyleProperty.VerticalSpacing,gfx_ResponsiveStyleProperty.HorizontalSpacing,gfx_ResponsiveStyleProperty.FontSize,gfx_ResponsiveStyleProperty.PaddingTop,gfx_ResponsiveStyleProperty.PaddingLeft,gfx_ResponsiveStyleProperty.PaddingRight,gfx_ResponsiveStyleProperty.PaddingBottom];
gfx_ResponsiveStyleProperty.__empty_constructs__ = [gfx_ResponsiveStyleProperty.VerticalSpacing,gfx_ResponsiveStyleProperty.HorizontalSpacing,gfx_ResponsiveStyleProperty.FontSize,gfx_ResponsiveStyleProperty.PaddingTop,gfx_ResponsiveStyleProperty.PaddingLeft,gfx_ResponsiveStyleProperty.PaddingRight,gfx_ResponsiveStyleProperty.PaddingBottom];
var gfx_ResponsiveProperty = $hxEnums["gfx.ResponsiveProperty"] = { __ename__:"gfx.ResponsiveProperty",__constructs__:null
	,Width: {_hx_name:"Width",_hx_index:0,__enum__:"gfx.ResponsiveProperty",toString:$estr}
	,Height: {_hx_name:"Height",_hx_index:1,__enum__:"gfx.ResponsiveProperty",toString:$estr}
	,PercentWidth: {_hx_name:"PercentWidth",_hx_index:2,__enum__:"gfx.ResponsiveProperty",toString:$estr}
	,PercentHeight: {_hx_name:"PercentHeight",_hx_index:3,__enum__:"gfx.ResponsiveProperty",toString:$estr}
	,StyleProp: ($_=function(prop) { return {_hx_index:4,prop:prop,__enum__:"gfx.ResponsiveProperty",toString:$estr}; },$_._hx_name="StyleProp",$_.__params__ = ["prop"],$_)
	,IconWidth: {_hx_name:"IconWidth",_hx_index:5,__enum__:"gfx.ResponsiveProperty",toString:$estr}
	,IconHeight: {_hx_name:"IconHeight",_hx_index:6,__enum__:"gfx.ResponsiveProperty",toString:$estr}
};
gfx_ResponsiveProperty.__constructs__ = [gfx_ResponsiveProperty.Width,gfx_ResponsiveProperty.Height,gfx_ResponsiveProperty.PercentWidth,gfx_ResponsiveProperty.PercentHeight,gfx_ResponsiveProperty.StyleProp,gfx_ResponsiveProperty.IconWidth,gfx_ResponsiveProperty.IconHeight];
gfx_ResponsiveProperty.__empty_constructs__ = [gfx_ResponsiveProperty.Width,gfx_ResponsiveProperty.Height,gfx_ResponsiveProperty.PercentWidth,gfx_ResponsiveProperty.PercentHeight,gfx_ResponsiveProperty.IconWidth,gfx_ResponsiveProperty.IconHeight];
var gfx_Dimension = $hxEnums["gfx.Dimension"] = { __ename__:"gfx.Dimension",__constructs__:null
	,Exact: ($_=function(value) { return {_hx_index:0,value:value,__enum__:"gfx.Dimension",toString:$estr}; },$_._hx_name="Exact",$_.__params__ = ["value"],$_)
	,Percent: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"gfx.Dimension",toString:$estr}; },$_._hx_name="Percent",$_.__params__ = ["value"],$_)
	,VW: ($_=function(value) { return {_hx_index:2,value:value,__enum__:"gfx.Dimension",toString:$estr}; },$_._hx_name="VW",$_.__params__ = ["value"],$_)
	,VH: ($_=function(value) { return {_hx_index:3,value:value,__enum__:"gfx.Dimension",toString:$estr}; },$_._hx_name="VH",$_.__params__ = ["value"],$_)
	,VMIN: ($_=function(value) { return {_hx_index:4,value:value,__enum__:"gfx.Dimension",toString:$estr}; },$_._hx_name="VMIN",$_.__params__ = ["value"],$_)
};
gfx_Dimension.__constructs__ = [gfx_Dimension.Exact,gfx_Dimension.Percent,gfx_Dimension.VW,gfx_Dimension.VH,gfx_Dimension.VMIN];
gfx_Dimension.__empty_constructs__ = [];
var gfx_ResponsivenessRule = $hxEnums["gfx.ResponsivenessRule"] = { __ename__:"gfx.ResponsivenessRule",__constructs__:null
	,VW: ($_=function(value) { return {_hx_index:0,value:value,__enum__:"gfx.ResponsivenessRule",toString:$estr}; },$_._hx_name="VW",$_.__params__ = ["value"],$_)
	,VH: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"gfx.ResponsivenessRule",toString:$estr}; },$_._hx_name="VH",$_.__params__ = ["value"],$_)
	,VMIN: ($_=function(value) { return {_hx_index:2,value:value,__enum__:"gfx.ResponsivenessRule",toString:$estr}; },$_._hx_name="VMIN",$_.__params__ = ["value"],$_)
	,Min: ($_=function(values) { return {_hx_index:3,values:values,__enum__:"gfx.ResponsivenessRule",toString:$estr}; },$_._hx_name="Min",$_.__params__ = ["values"],$_)
	,Max: ($_=function(values) { return {_hx_index:4,values:values,__enum__:"gfx.ResponsivenessRule",toString:$estr}; },$_._hx_name="Max",$_.__params__ = ["values"],$_)
	,Clamp: ($_=function(value,min,max) { return {_hx_index:5,value:value,min:min,max:max,__enum__:"gfx.ResponsivenessRule",toString:$estr}; },$_._hx_name="Clamp",$_.__params__ = ["value","min","max"],$_)
};
gfx_ResponsivenessRule.__constructs__ = [gfx_ResponsivenessRule.VW,gfx_ResponsivenessRule.VH,gfx_ResponsivenessRule.VMIN,gfx_ResponsivenessRule.Min,gfx_ResponsivenessRule.Max,gfx_ResponsivenessRule.Clamp];
gfx_ResponsivenessRule.__empty_constructs__ = [];
var gfx_ResponsiveToolbox = function() { };
$hxClasses["gfx.ResponsiveToolbox"] = gfx_ResponsiveToolbox;
gfx_ResponsiveToolbox.__name__ = "gfx.ResponsiveToolbox";
gfx_ResponsiveToolbox.resizeComponent = function(comp,rules) {
	var newStyle = comp.get_customStyle().clone();
	var map = rules;
	var _g_map = map;
	var _g_keys = map.keys();
	while(_g_keys.hasNext()) {
		var key = _g_keys.next();
		var _g1_value = _g_map.get(key);
		var _g1_key = key;
		var property = _g1_key;
		var rule = _g1_value;
		switch(property._hx_index) {
		case 0:
			gfx_ResponsiveToolbox.recalcWidth(comp,rule);
			break;
		case 1:
			gfx_ResponsiveToolbox.recalcHeight(comp,rule);
			break;
		case 2:
			comp.set_percentWidth(gfx_ResponsiveToolbox.evaluateRule(rule));
			break;
		case 3:
			comp.set_percentHeight(gfx_ResponsiveToolbox.evaluateRule(rule));
			break;
		case 4:
			var prop = property.prop;
			gfx_ResponsiveToolbox.recalcStyle(newStyle,prop,rule);
			break;
		case 5:
			comp.findComponent(null,haxe_ui_components_Image).set_width(gfx_ResponsiveToolbox.evaluateRule(rule));
			break;
		case 6:
			comp.findComponent(null,haxe_ui_components_Image).set_height(gfx_ResponsiveToolbox.evaluateRule(rule));
			break;
		}
	}
	comp.set_customStyle(newStyle);
};
gfx_ResponsiveToolbox.fitComponent = function(comp) {
	if(comp.parentComponent == null) {
		return;
	}
	var parentRatio = comp.parentComponent.get_layout().get_usableWidth() / comp.parentComponent.get_layout().get_usableHeight();
	var compRatio = comp.get_width() / comp.get_height();
	if(parentRatio > compRatio) {
		comp.set_width(comp.parentComponent.get_layout().get_usableHeight() * compRatio);
		comp.set_height(comp.parentComponent.get_layout().get_usableHeight());
	} else {
		comp.set_width(comp.parentComponent.get_layout().get_usableWidth());
		comp.set_height(comp.parentComponent.get_layout().get_usableWidth() / compRatio);
	}
};
gfx_ResponsiveToolbox.recalcWidth = function(comp,rule) {
	var parent = comp.parentComponent;
	var parentWidth = parent != null ? parent.get_width() : null;
	comp.set_width(gfx_ResponsiveToolbox.evaluateRule(rule,parentWidth));
};
gfx_ResponsiveToolbox.recalcHeight = function(comp,rule) {
	var parent = comp.parentComponent;
	var parentHeight = parent != null ? parent.get_height() : null;
	comp.set_height(gfx_ResponsiveToolbox.evaluateRule(rule,parentHeight));
};
gfx_ResponsiveToolbox.recalcStyle = function(style,prop,rule) {
	switch(prop._hx_index) {
	case 0:
		style.verticalSpacing = gfx_ResponsiveToolbox.evaluateRule(rule);
		break;
	case 1:
		style.horizontalSpacing = gfx_ResponsiveToolbox.evaluateRule(rule);
		break;
	case 2:
		style.fontSize = gfx_ResponsiveToolbox.evaluateRule(rule);
		break;
	case 3:
		style.paddingTop = gfx_ResponsiveToolbox.evaluateRule(rule);
		break;
	case 4:
		style.paddingLeft = gfx_ResponsiveToolbox.evaluateRule(rule);
		break;
	case 5:
		style.paddingRight = gfx_ResponsiveToolbox.evaluateRule(rule);
		break;
	case 6:
		style.paddingBottom = gfx_ResponsiveToolbox.evaluateRule(rule);
		break;
	}
};
gfx_ResponsiveToolbox.evaluateRule = function(rule,parentVal) {
	switch(rule._hx_index) {
	case 0:
		var value = rule.value;
		return gfx_ResponsiveToolbox.evaluateDim(gfx_Dimension.VW(value));
	case 1:
		var value = rule.value;
		return gfx_ResponsiveToolbox.evaluateDim(gfx_Dimension.VH(value));
	case 2:
		var value = rule.value;
		return gfx_ResponsiveToolbox.evaluateDim(gfx_Dimension.VMIN(value));
	case 3:
		var values = rule.values;
		var parentVal1 = parentVal;
		var f = function(dim) {
			return gfx_ResponsiveToolbox.evaluateDim(dim,parentVal1);
		};
		var result = new Array(values.length);
		var _g = 0;
		var _g1 = values.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = f(values[i]);
		}
		return net_shared_utils_MathUtils.arrmin(result);
	case 4:
		var values = rule.values;
		var parentVal2 = parentVal;
		var f = function(dim) {
			return gfx_ResponsiveToolbox.evaluateDim(dim,parentVal2);
		};
		var result = new Array(values.length);
		var _g = 0;
		var _g1 = values.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = f(values[i]);
		}
		return net_shared_utils_MathUtils.arrmax(result);
	case 5:
		var value = rule.value;
		var min = rule.min;
		var max = rule.max;
		return net_shared_utils_MathUtils.clamp(gfx_ResponsiveToolbox.evaluateDim(value,parentVal),gfx_ResponsiveToolbox.evaluateDim(min,parentVal),gfx_ResponsiveToolbox.evaluateDim(max,parentVal));
	}
};
gfx_ResponsiveToolbox.evaluateDim = function(dim,parentVal) {
	var tmp;
	if(parentVal == null) {
		if(dim._hx_index == 1) {
			var _g = dim.value;
			tmp = true;
		} else {
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		throw haxe_Exception.thrown("Percent dim may only be used for Width/Height properties");
	}
	switch(dim._hx_index) {
	case 0:
		var value = dim.value;
		return value;
	case 1:
		var value = dim.value;
		return parentVal * value / 100;
	case 2:
		var value = dim.value;
		return haxe_ui_core_Screen.get_instance().get_actualWidth() * value / 100;
	case 3:
		var value = dim.value;
		return haxe_ui_core_Screen.get_instance().get_actualHeight() * value / 100;
	case 4:
		var value = dim.value;
		return Math.min(haxe_ui_core_Screen.get_instance().get_actualWidth(),haxe_ui_core_Screen.get_instance().get_actualHeight()) * value / 100;
	}
};
var haxe_ui_containers_SideBar = function() {
	this._position = null;
	this._modalOverlay = null;
	this._lastMethod = null;
	this.modal = false;
	this.method = "shift";
	var _gthis = this;
	haxe_ui_containers_Box.call(this);
	haxe_ui_containers_Box.prototype.hide.call(this);
	this.set_position("left");
	this.set_animatable(false);
	haxe_ui_core_Screen.get_instance().registerEvent("resize",function(_) {
		if(haxe_ui_containers_SideBar.activeSideBar == _gthis) {
			_gthis.setEndPos();
		}
	});
};
$hxClasses["haxe.ui.containers.SideBar"] = haxe_ui_containers_SideBar;
haxe_ui_containers_SideBar.__name__ = "haxe.ui.containers.SideBar";
haxe_ui_containers_SideBar.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_SideBar.prototype = $extend(haxe_ui_containers_Box.prototype,{
	method: null
	,modal: null
	,_lastMethod: null
	,_modalOverlay: null
	,_position: null
	,get_position: function() {
		return this._position;
	}
	,set_position: function(value) {
		if(this._position == value) {
			return value;
		}
		if(this._position != null) {
			this.removeClass(":" + this._position);
		}
		this._position = value;
		this.addClass(":" + this._position);
		return value;
	}
	,onReady: function() {
		var _gthis = this;
		haxe_ui_containers_Box.prototype.onReady.call(this);
		this.set_animatable(true);
		var closeButton = this.findComponent("closeSideBar",haxe_ui_core_Component);
		if(closeButton != null) {
			closeButton.registerEvent("click",function(_) {
				_gthis.hide();
			});
		}
		haxe_ui_Toolkit.callLater(function() {
			_gthis.invalidateComponent(null,true);
		});
	}
	,showModalOverlay: function() {
		if(this._modalOverlay == null) {
			this._modalOverlay = new haxe_ui_core_Component();
			this._modalOverlay.set_id("sidebar-modal-background");
			this._modalOverlay.addClass("sidebar-modal-background");
			this._modalOverlay.set_percentWidth(this._modalOverlay.set_percentHeight(100));
			haxe_ui_core_Screen.get_instance().addComponent(this._modalOverlay);
			this._modalOverlay.set_onClick(function(_) {
				if(haxe_ui_containers_SideBar.activeSideBar != null) {
					haxe_ui_containers_SideBar.activeSideBar.hide();
				}
			});
		}
		var i = haxe_ui_core_Screen.get_instance().rootComponents.indexOf(this);
		if(i != -1) {
			haxe_ui_core_Screen.get_instance().setComponentIndex(this._modalOverlay,i - 1);
		}
		this._modalOverlay.show();
	}
	,hideModalOverlay: function() {
		if(this._modalOverlay == null) {
			return;
		}
		this._modalOverlay.hide();
	}
	,setStartPos: function() {
		if(this.get_position() == "left") {
			this.set_left(-this.get_actualComponentWidth());
		} else if(this.get_position() == "right") {
			this.set_left(haxe_ui_core_Screen.get_instance().get_actualWidth());
		} else if(this.get_position() == "top") {
			this.set_top(-this.get_actualComponentHeight());
		} else if(this.get_position() == "bottom") {
			this.set_top(haxe_ui_core_Screen.get_instance().get_actualHeight());
		}
	}
	,setEndPos: function() {
		if(this.get_position() == "left") {
			this.set_left(0);
		} else if(this.get_position() == "right") {
			this.set_left(haxe_ui_core_Screen.get_instance().get_actualWidth() - this.get_actualComponentWidth());
		} else if(this.get_position() == "top") {
			this.set_top(0);
		} else if(this.get_position() == "bottom") {
			this.set_top(haxe_ui_core_Screen.get_instance().get_actualHeight() - this.get_actualComponentHeight());
		}
	}
	,show: function() {
		var _gthis = this;
		if(haxe_ui_containers_SideBar.activeSideBar == this) {
			return;
		}
		if(haxe_ui_core_Screen.get_instance().rootComponents.indexOf(this) == -1) {
			if(this.modal == true) {
				this.showModalOverlay();
			}
			haxe_ui_core_Screen.get_instance().addComponent(this);
			this.validateNow();
			haxe_ui_Toolkit.callLater(function() {
				_gthis.setStartPos();
				_gthis.show();
			});
			return;
		} else {
			if(this.modal == true) {
				this.showModalOverlay();
			}
			this.validateNow();
			this.setStartPos();
		}
		var animation = haxe_ui_Toolkit.styleSheet.findAnimation("sideBarModifyContent");
		var first = animation.get_keyFrames()[0];
		var last = animation.get_keyFrames()[animation.get_keyFrames().length - 1];
		var rootComponent = haxe_ui_core_Screen.get_instance().rootComponents[0];
		first.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_left()))));
		first.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_top()))));
		first.set(new haxe_ui_styles_elements_Directive("width",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_width()))));
		first.set(new haxe_ui_styles_elements_Directive("height",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_height()))));
		last.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_left()))));
		last.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_top()))));
		last.set(new haxe_ui_styles_elements_Directive("width",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_width()))));
		last.set(new haxe_ui_styles_elements_Directive("height",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_height()))));
		this._lastMethod = this.method;
		if(haxe_ui_containers_SideBar.activeSideBar != null && haxe_ui_containers_SideBar.activeSideBar != this) {
			haxe_ui_containers_SideBar.activeSideBar.buildHideContentAnimation(animation);
		}
		this.buildContentAnimation(animation);
		var showSideBarClass = null;
		var hideSideBarClass = null;
		if(this.get_position() == "left") {
			showSideBarClass = "showSideBarLeft";
			hideSideBarClass = "hideSideBarLeft";
			var animation = haxe_ui_Toolkit.styleSheet.findAnimation("showSideBarLeft");
			var first = animation.get_keyFrames()[0];
			var last = animation.get_keyFrames()[animation.get_keyFrames().length - 1];
			first.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(-this.get_actualComponentWidth() - this.getAppropriateMargin()))));
			last.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(0))));
		} else if(this.get_position() == "right") {
			showSideBarClass = "showSideBarRight";
			hideSideBarClass = "hideSideBarRight";
			var animation = haxe_ui_Toolkit.styleSheet.findAnimation("showSideBarRight");
			var first = animation.get_keyFrames()[0];
			var last = animation.get_keyFrames()[animation.get_keyFrames().length - 1];
			first.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_actualWidth() + this.getAppropriateMargin()))));
			last.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_actualWidth() - this.get_actualComponentWidth()))));
		} else if(this.get_position() == "top") {
			showSideBarClass = "showSideBarTop";
			hideSideBarClass = "hideSideBarTop";
			var animation = haxe_ui_Toolkit.styleSheet.findAnimation("showSideBarTop");
			var first = animation.get_keyFrames()[0];
			var last = animation.get_keyFrames()[animation.get_keyFrames().length - 1];
			first.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(-this.get_actualComponentHeight() - this.getAppropriateMargin()))));
			last.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(0))));
		} else if(this.get_position() == "bottom") {
			showSideBarClass = "showSideBarBottom";
			hideSideBarClass = "hideSideBarBottom";
			var animation = haxe_ui_Toolkit.styleSheet.findAnimation("showSideBarBottom");
			var first = animation.get_keyFrames()[0];
			var last = animation.get_keyFrames()[animation.get_keyFrames().length - 1];
			first.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_actualHeight() + this.getAppropriateMargin()))));
			last.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_actualHeight() - this.get_actualComponentHeight()))));
		}
		this.set_onAnimationEnd(function(_) {
			_gthis.removeClass(showSideBarClass);
			_gthis.onShowAnimationEnd();
		});
		if(haxe_ui_containers_SideBar.activeSideBar != null && haxe_ui_containers_SideBar.activeSideBar != this) {
			haxe_ui_containers_SideBar.activeSideBar.hideSideBar();
		}
		var _g = 0;
		var _g1 = haxe_ui_core_Screen.get_instance().rootComponents;
		while(_g < _g1.length) {
			var r = [_g1[_g]];
			++_g;
			if(r[0].classes.indexOf("sidebar") == -1) {
				r[0].cachePercentSizes();
				r[0].swapClass("sideBarModifyContent","sideBarRestoreContent");
				r[0].set_onAnimationEnd((function(r) {
					return function(_) {
						r[0].set_onAnimationEnd(null);
						rootComponent.removeClass("sideBarModifyContent");
					};
				})(r));
			}
		}
		this.swapClass(showSideBarClass,hideSideBarClass);
		haxe_ui_containers_SideBar.activeSideBar = this;
		haxe_ui_containers_Box.prototype.show.call(this);
	}
	,getAppropriateMargin: function() {
		return 0;
	}
	,buildHideContentAnimation: function(animation) {
		var last = animation.get_keyFrames()[animation.get_keyFrames().length - 1];
		if(this._lastMethod == "shift") {
			if(this.get_position() == "left") {
				last.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(0))));
			} else if(this.get_position() == "right") {
				last.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(0))));
			}
			if(this.get_position() == "top") {
				last.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(0))));
			} else if(this.get_position() == "bottom") {
				last.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(0))));
			}
		} else if(this._lastMethod == "squash") {
			if(this.get_position() == "left") {
				last.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(0))));
				last.set(new haxe_ui_styles_elements_Directive("width",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_width()))));
			} else if(this.get_position() == "right") {
				last.set(new haxe_ui_styles_elements_Directive("width",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_width()))));
			}
			if(this.get_position() == "top") {
				last.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(0))));
				last.set(new haxe_ui_styles_elements_Directive("height",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_height()))));
			} else if(this.get_position() == "bottom") {
				last.set(new haxe_ui_styles_elements_Directive("height",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_height()))));
			}
		}
	}
	,buildContentAnimation: function(animation) {
		var last = animation.get_keyFrames()[animation.get_keyFrames().length - 1];
		if(this.method == "shift") {
			if(this.get_position() == "left") {
				last.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(this.get_actualComponentWidth()))));
			} else if(this.get_position() == "right") {
				last.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(-this.get_actualComponentWidth()))));
			}
			if(this.get_position() == "top") {
				last.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(this.get_actualComponentHeight()))));
			} else if(this.get_position() == "bottom") {
				last.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(-this.get_actualComponentHeight()))));
			}
		} else if(this.method == "squash") {
			if(this.get_position() == "left") {
				last.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(this.get_actualComponentWidth()))));
				last.set(new haxe_ui_styles_elements_Directive("width",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_width() - this.get_width()))));
			} else if(this.get_position() == "right") {
				last.set(new haxe_ui_styles_elements_Directive("width",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_width() - this.get_width()))));
			}
			if(this.get_position() == "top") {
				last.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(this.get_actualComponentHeight()))));
				last.set(new haxe_ui_styles_elements_Directive("height",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_height() - this.get_height()))));
			} else if(this.get_position() == "bottom") {
				last.set(new haxe_ui_styles_elements_Directive("height",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_height() - this.get_height()))));
			}
		}
	}
	,hideSideBar: function() {
		var _gthis = this;
		var showSideBarClass = null;
		var hideSideBarClass = null;
		if(this.get_position() == "left") {
			showSideBarClass = "showSideBarLeft";
			hideSideBarClass = "hideSideBarLeft";
		} else if(this.get_position() == "right") {
			showSideBarClass = "showSideBarRight";
			hideSideBarClass = "hideSideBarRight";
		} else if(this.get_position() == "top") {
			showSideBarClass = "showSideBarTop";
			hideSideBarClass = "hideSideBarTop";
		} else if(this.get_position() == "bottom") {
			showSideBarClass = "showSideBarBottom";
			hideSideBarClass = "hideSideBarBottom";
		}
		this.set_onAnimationEnd(function(_) {
			_gthis.removeClass(hideSideBarClass);
			_gthis.onHideAnimationEnd();
		});
		this.swapClass(hideSideBarClass,showSideBarClass);
		if(this.modal == true) {
			this.hideModalOverlay();
		}
	}
	,onShowAnimationEnd: function() {
	}
	,onHideAnimationEnd: function() {
		haxe_ui_containers_Box.prototype.hide.call(this);
	}
	,hide: function() {
		if(haxe_ui_containers_SideBar.activeSideBar != null && haxe_ui_containers_SideBar.activeSideBar != this) {
			haxe_ui_containers_SideBar.activeSideBar.hide();
			return;
		}
		var animation = haxe_ui_Toolkit.styleSheet.findAnimation("sideBarRestoreContent");
		var first = animation.get_keyFrames()[0];
		var last = animation.get_keyFrames()[animation.get_keyFrames().length - 1];
		var rootComponent = haxe_ui_core_Screen.get_instance().rootComponents[0];
		first.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_left()))));
		first.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_top()))));
		first.set(new haxe_ui_styles_elements_Directive("width",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_width()))));
		first.set(new haxe_ui_styles_elements_Directive("height",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_height()))));
		last.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(0))));
		last.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(0))));
		last.set(new haxe_ui_styles_elements_Directive("width",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_width()))));
		last.set(new haxe_ui_styles_elements_Directive("height",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_height()))));
		var _g = 0;
		var _g1 = haxe_ui_core_Screen.get_instance().rootComponents;
		while(_g < _g1.length) {
			var r = [_g1[_g]];
			++_g;
			if(r[0].classes.indexOf("sidebar") == -1) {
				r[0].swapClass("sideBarRestoreContent","sideBarModifyContent");
				r[0].set_onAnimationEnd((function(r) {
					return function(_) {
						r[0].restorePercentSizes();
						r[0].set_onAnimationEnd(null);
						rootComponent.removeClass("sideBarRestoreContent");
					};
				})(r));
			}
		}
		this.hideSideBar();
		haxe_ui_containers_SideBar.activeSideBar = null;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_SideBar();
	}
	,__class__: haxe_ui_containers_SideBar
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_position:"set_position",get_position:"get_position"})
});
var gfx_SideMenu = function() {
	var _gthis = this;
	haxe_ui_containers_SideBar.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        .mobileMenuHeader {\r\n            font-italic: true;\r\n            margin-left: 10px;\r\n            color: #666666;\r\n        }\r\n        .mobileMenuItem {\r\n            margin-left: 30px;\r\n            color: #666666;\r\n            pointer-events:true;\r\n            background-color: yellow;\r\n            background-opacity: 0;\r\n        }\r\n        .mobileMenuItem:hover {\r\n            color: #999999;\r\n        }\r\n        #siteName {\r\n            pointer-events: true;\r\n            white-space: nowrap;\r\n            color: #333333;\r\n            font-name: 'assets/fonts/Futura.ttf';\r\n            font-weight: 600;\r\n            background-color: yellow;\r\n            background-opacity: 0;\r\n        }\r\n\r\n        #siteName:hover {\r\n            color: #428fd8;\r\n        }\r\n\r\n        #mobileMenuButton {\r\n            pointer-events: true;\r\n            background-color: yellow;\r\n            background-opacity: 0;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_containers_VBox();
	c0.set_styleString("spacing: 5px");
	var c1 = new haxe_ui_containers_HBox();
	var c2 = new haxe_ui_components_Image();
	c2.set_id("mobileMenuButton");
	c2.set_verticalAlign("center");
	c2.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/upper_menu/open_sidebar_btn.svg"));
	c1.addComponent(c2);
	var c3 = new haxe_ui_components_Label();
	c3.set_id("siteName");
	c3.set_text("Intellector.info");
	c3.set_verticalAlign("center");
	c1.addComponent(c3);
	c0.addComponent(c1);
	var c4 = new haxe_ui_components_Spacer();
	c4.set_id("mainSpacer");
	c0.addComponent(c4);
	var c5 = new haxe_ui_components_Label();
	c5.set_styleNames("mobileMenuHeader");
	c0.addComponent(c5);
	var c6 = new haxe_ui_components_Label();
	c6.set_id("createChallengeBtn");
	c6.set_styleNames("mobileMenuItem");
	c0.addComponent(c6);
	var c7 = new haxe_ui_components_Label();
	c7.set_id("openChallengesBtn");
	c7.set_styleNames("mobileMenuItem");
	c0.addComponent(c7);
	var c8 = new haxe_ui_components_Spacer();
	c8.set_styleNames("sectionSpacer");
	c0.addComponent(c8);
	var c9 = new haxe_ui_components_Label();
	c9.set_styleNames("mobileMenuHeader");
	c0.addComponent(c9);
	var c10 = new haxe_ui_components_Label();
	c10.set_id("currentGamesBtn");
	c10.set_styleNames("mobileMenuItem");
	c0.addComponent(c10);
	var c11 = new haxe_ui_components_Label();
	c11.set_id("watchPlayerBtn");
	c11.set_styleNames("mobileMenuItem");
	c0.addComponent(c11);
	var c12 = new haxe_ui_components_Spacer();
	c12.set_styleNames("sectionSpacer");
	c0.addComponent(c12);
	var c13 = new haxe_ui_components_Label();
	c13.set_styleNames("mobileMenuHeader");
	c0.addComponent(c13);
	var c14 = new haxe_ui_components_Label();
	c14.set_id("analysisBoardBtn");
	c14.set_styleNames("mobileMenuItem");
	c0.addComponent(c14);
	var c15 = new haxe_ui_components_Spacer();
	c15.set_styleNames("sectionSpacer");
	c0.addComponent(c15);
	var c16 = new haxe_ui_components_Label();
	c16.set_styleNames("mobileMenuHeader");
	c0.addComponent(c16);
	var c17 = new haxe_ui_components_Label();
	c17.set_id("playerProfileBtn");
	c17.set_styleNames("mobileMenuItem");
	c0.addComponent(c17);
	this.addComponent(c0);
	c2.registerEvent("click",function(event) {
		var __this__ = c2;
		_gthis.hide();
	});
	this.set_percentHeight(100.);
	this.set_position("left");
	this.modal = true;
	this.method = "float";
	this.bindingRoot = true;
	this.watchPlayerBtn = c11;
	this.siteName = c3;
	this.playerProfileBtn = c17;
	this.openChallengesBtn = c7;
	this.mobileMenuButton = c2;
	this.mainSpacer = c4;
	this.currentGamesBtn = c10;
	this.createChallengeBtn = c6;
	this.analysisBoardBtn = c14;
	c5.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_PLAY_MENU_TITLE)));
	c6.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_PLAY_MENU_CREATE_GAME_ITEM)));
	c7.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_PLAY_MENU_OPEN_CHALLENGES_ITEM)));
	c9.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_SPECTATE_MENU_TITLE)));
	c10.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_SPECTATE_MENU_CURRENT_GAMES_ITEM)));
	c11.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_SPECTATE_MENU_FOLLOW_PLAYER_ITEM)));
	c13.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_LEARN_MENU_TITLE)));
	c14.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_LEARN_MENU_ANALYSIS_BOARD_ITEM)));
	c16.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_SOCIAL_MENU_TITLE)));
	c17.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_SOCIAL_MENU_PLAYER_PROFILE_ITEM)));
};
$hxClasses["gfx.SideMenu"] = gfx_SideMenu;
gfx_SideMenu.__name__ = "gfx.SideMenu";
gfx_SideMenu.__super__ = haxe_ui_containers_SideBar;
gfx_SideMenu.prototype = $extend(haxe_ui_containers_SideBar.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_SideBar.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_SideBar.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_SideMenu();
	}
	,watchPlayerBtn: null
	,siteName: null
	,playerProfileBtn: null
	,openChallengesBtn: null
	,mobileMenuButton: null
	,mainSpacer: null
	,currentGamesBtn: null
	,createChallengeBtn: null
	,analysisBoardBtn: null
	,__class__: gfx_SideMenu
});
var haxe_ui_containers_VBox = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_VerticalLayout());
};
$hxClasses["haxe.ui.containers.VBox"] = haxe_ui_containers_VBox;
haxe_ui_containers_VBox.__name__ = "haxe.ui.containers.VBox";
haxe_ui_containers_VBox.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_VBox.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_VBox();
	}
	,__class__: haxe_ui_containers_VBox
});
var gfx_Scene = function() {
	this.currentScreen = null;
	var _gthis = this;
	haxe_ui_containers_VBox.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        .menubar-button {\r\n            font-weight: 300;\r\n            color: $normal-text-color;\r\n        }\r\n\r\n        .menubar-button:hover {\r\n            background-color: #eeeeee;\r\n            color: #333333;\r\n        }\r\n        \r\n        .menubar-button:disabled {\r\n            color: $disabled-text-color;\r\n        }\r\n\r\n        #siteName {\r\n            pointer-events: true;\r\n            white-space: nowrap;\r\n            color: #333333;\r\n            font-name: 'assets/fonts/Futura.ttf';\r\n            font-weight: 600;\r\n            background-color: yellow;\r\n            background-opacity: 0;\r\n        }\r\n\r\n        #siteName:hover {\r\n            color: #428fd8;\r\n        }\r\n\r\n        #siteName:disabled {\r\n            color: $disabled-text-color;\r\n        }\r\n\r\n        #mobileMenuButton {\r\n            pointer-events: true;\r\n            background-color: yellow;\r\n            background-opacity: 0;\r\n        }\r\n\r\n        .menuitem-icon {\r\n            width: 16px;\r\n            height: 16px;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_containers_menus_MenuBar();
	c0.set_id("menubar");
	c0.set_percentWidth(100.);
	c0.set_percentHeight(5.);
	var c1 = new haxe_ui_components_Image();
	c1.set_id("mobileMenuButton");
	c1.set_verticalAlign("center");
	c1.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/upper_menu/open_sidebar_btn.svg"));
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_Label();
	c2.set_id("siteName");
	c2.set_text("Intellector.info");
	c2.set_verticalAlign("center");
	c0.addComponent(c2);
	var c3 = new haxe_ui_containers_menus_Menu();
	c3.set_id("playMenu");
	var c4 = new haxe_ui_containers_menus_MenuItem();
	c4.set_id("createChallengeBtn");
	c4.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/upper_menu/menu_items/new_game.svg"));
	c3.addComponent(c4);
	var c5 = new haxe_ui_containers_menus_MenuItem();
	c5.set_id("openChallengesBtn");
	c5.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/upper_menu/menu_items/open_challenges.svg"));
	c3.addComponent(c5);
	c0.addComponent(c3);
	var c6 = new haxe_ui_containers_menus_Menu();
	c6.set_id("watchMenu");
	var c7 = new haxe_ui_containers_menus_MenuItem();
	c7.set_id("currentGamesBtn");
	c7.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/upper_menu/menu_items/current_games.svg"));
	c6.addComponent(c7);
	var c8 = new haxe_ui_containers_menus_MenuItem();
	c8.set_id("watchPlayerBtn");
	c8.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/upper_menu/menu_items/watch_player.svg"));
	c6.addComponent(c8);
	c0.addComponent(c6);
	var c9 = new haxe_ui_containers_menus_Menu();
	c9.set_id("learnMenu");
	var c10 = new haxe_ui_containers_menus_MenuItem();
	c10.set_id("analysisBoardBtn");
	c10.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/upper_menu/menu_items/analysis_board.svg"));
	c9.addComponent(c10);
	c0.addComponent(c9);
	var c11 = new haxe_ui_containers_menus_Menu();
	c11.set_id("socialMenu");
	var c12 = new haxe_ui_containers_menus_MenuItem();
	c12.set_id("playerProfileBtn");
	c12.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/upper_menu/menu_items/player_profile.svg"));
	c11.addComponent(c12);
	c0.addComponent(c11);
	var c13 = new haxe_ui_components_Spacer();
	c13.set_percentWidth(100.);
	c0.addComponent(c13);
	var c14 = new gfx_menubar_ChallengeList();
	c14.set_id("challengesMenu");
	c0.addComponent(c14);
	var c15 = new haxe_ui_containers_menus_Menu();
	c15.set_id("accountMenu");
	var c16 = new haxe_ui_containers_menus_MenuItem();
	c16.set_id("logInBtn");
	c16.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/upper_menu/account/log_in.svg"));
	c15.addComponent(c16);
	var c17 = new haxe_ui_containers_menus_MenuItem();
	c17.set_id("myProfileBtn");
	c17.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/upper_menu/account/my_profile.svg"));
	c15.addComponent(c17);
	var c18 = new haxe_ui_containers_menus_MenuItem();
	c18.set_id("settingsBtn");
	c18.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/upper_menu/account/settings.svg"));
	c15.addComponent(c18);
	var c19 = new haxe_ui_containers_menus_MenuItem();
	c19.set_id("logOutBtn");
	c19.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/upper_menu/account/log_out.svg"));
	c15.addComponent(c19);
	c0.addComponent(c15);
	this.addComponent(c0);
	var c20 = new haxe_ui_containers_Box();
	c20.set_id("content");
	c20.set_percentWidth(100.);
	c20.set_percentHeight(95.);
	c20.set_styleString("padding: 5 5 5 5");
	this.addComponent(c20);
	c1.registerEvent("click",function(event) {
		var __this__ = c1;
		_gthis.sidemenu.show();
	});
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.watchPlayerBtn = c8;
	this.watchMenu = c6;
	this.socialMenu = c11;
	this.siteName = c2;
	this.settingsBtn = c18;
	this.playerProfileBtn = c12;
	this.playMenu = c3;
	this.openChallengesBtn = c5;
	this.myProfileBtn = c17;
	this.mobileMenuButton = c1;
	this.menubar = c0;
	this.logOutBtn = c19;
	this.logInBtn = c16;
	this.learnMenu = c9;
	this.currentGamesBtn = c7;
	this.createChallengeBtn = c4;
	this.content = c20;
	this.challengesMenu = c14;
	this.analysisBoardBtn = c10;
	this.accountMenu = c15;
	c3.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_PLAY_MENU_TITLE)));
	c4.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_PLAY_MENU_CREATE_GAME_ITEM)));
	c5.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_PLAY_MENU_OPEN_CHALLENGES_ITEM)));
	c6.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_SPECTATE_MENU_TITLE)));
	c7.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_SPECTATE_MENU_CURRENT_GAMES_ITEM)));
	c8.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_SPECTATE_MENU_FOLLOW_PLAYER_ITEM)));
	c9.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_LEARN_MENU_TITLE)));
	c10.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_LEARN_MENU_ANALYSIS_BOARD_ITEM)));
	c11.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_SOCIAL_MENU_TITLE)));
	c12.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_SOCIAL_MENU_PLAYER_PROFILE_ITEM)));
	c16.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_ACCOUNT_MENU_LOGIN_ITEM)));
	c17.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_ACCOUNT_MENU_MY_PROFILE_ITEM)));
	c18.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_ACCOUNT_MENU_SETTINGS_ITEM)));
	c19.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_ACCOUNT_MENU_LOGOUT_ITEM)));
	this.refreshAccountElements();
	this.sidemenu = new gfx_SideMenu();
	this.siteName.set_onClick($bind(this,this.onSiteNamePressed));
	this.createChallengeBtn.set_onClick($bind(this,this.onCreateChallengePressed));
	this.openChallengesBtn.set_onClick($bind(this,this.onOpenChallengesPressed));
	this.currentGamesBtn.set_onClick($bind(this,this.onCurrentGamesPressed));
	this.watchPlayerBtn.set_onClick($bind(this,this.onWatchPlayerPressed));
	this.analysisBoardBtn.set_onClick($bind(this,this.onAnalysisBoardPressed));
	this.playerProfileBtn.set_onClick($bind(this,this.onPlayerProfilePressed));
	this.sidemenu.siteName.set_onClick(function(e) {
		_gthis.sidemenu.hide();
		_gthis.onSiteNamePressed(e);
	});
	this.sidemenu.createChallengeBtn.set_onClick(function(e) {
		_gthis.sidemenu.hide();
		_gthis.onCreateChallengePressed(e);
	});
	this.sidemenu.openChallengesBtn.set_onClick(function(e) {
		_gthis.sidemenu.hide();
		_gthis.onOpenChallengesPressed(e);
	});
	this.sidemenu.currentGamesBtn.set_onClick(function(e) {
		_gthis.sidemenu.hide();
		_gthis.onCurrentGamesPressed(e);
	});
	this.sidemenu.watchPlayerBtn.set_onClick(function(e) {
		_gthis.sidemenu.hide();
		_gthis.onWatchPlayerPressed(e);
	});
	this.sidemenu.analysisBoardBtn.set_onClick(function(e) {
		_gthis.sidemenu.hide();
		_gthis.onAnalysisBoardPressed(e);
	});
	this.sidemenu.playerProfileBtn.set_onClick(function(e) {
		_gthis.sidemenu.hide();
		_gthis.onPlayerProfilePressed(e);
	});
	this.logInBtn.set_onClick($bind(this,this.onLogInPressed));
	this.myProfileBtn.set_onClick($bind(this,this.onMyProfilePressed));
	this.settingsBtn.set_onClick($bind(this,this.onSettingsPressed));
	this.logOutBtn.set_onClick($bind(this,this.onLogOutPressed));
};
$hxClasses["gfx.Scene"] = gfx_Scene;
gfx_Scene.__name__ = "gfx.Scene";
gfx_Scene.__interfaces__ = [IGlobalEventObserver,net_INetObserver];
gfx_Scene.__super__ = haxe_ui_containers_VBox;
gfx_Scene.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	currentScreen: null
	,sidemenu: null
	,playerInGame: function() {
		return gfx_Scene.isPlayerInGame;
	}
	,resize: function() {
		var _g = new haxe_ds_EnumValueMap();
		_g.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.PaddingLeft),gfx_ResponsivenessRule.VH(1));
		_g.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.PaddingRight),gfx_ResponsivenessRule.VH(1));
		_g.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.FontSize),gfx_ResponsivenessRule.VH(3));
		var siteNameRules = _g;
		var _g = new haxe_ds_EnumValueMap();
		_g.set(gfx_ResponsiveProperty.Width,gfx_ResponsivenessRule.VH(2.6));
		_g.set(gfx_ResponsiveProperty.Height,gfx_ResponsivenessRule.VH(2.2));
		var mobileMenuButtonRules = _g;
		var _g = new haxe_ds_EnumValueMap();
		_g.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.FontSize),gfx_ResponsivenessRule.VH(1.75));
		var mobileMenuHeaderRules = _g;
		var _g = new haxe_ds_EnumValueMap();
		_g.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.FontSize),gfx_ResponsivenessRule.VH(1.5));
		var mobileMenuItemRules = _g;
		var compact = haxe_ui_core_Screen.get_instance().get_actualWidth() < haxe_ui_core_Screen.get_instance().get_actualHeight() * 0.7;
		gfx_ResponsiveToolbox.resizeComponent(this.sidemenu.siteName,siteNameRules);
		gfx_ResponsiveToolbox.resizeComponent(this.sidemenu.mobileMenuButton,mobileMenuButtonRules);
		var tmp = this.sidemenu.mainSpacer;
		var _g = new haxe_ds_EnumValueMap();
		_g.set(gfx_ResponsiveProperty.Height,gfx_ResponsivenessRule.VH(2));
		gfx_ResponsiveToolbox.resizeComponent(tmp,_g);
		var _g = 0;
		var _g1 = this.sidemenu.findComponents("mobileMenuHeader");
		while(_g < _g1.length) {
			var header = _g1[_g];
			++_g;
			gfx_ResponsiveToolbox.resizeComponent(header,mobileMenuHeaderRules);
		}
		var _g = 0;
		var _g1 = this.sidemenu.findComponents("mobileMenuItem");
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			gfx_ResponsiveToolbox.resizeComponent(item,mobileMenuItemRules);
		}
		var _g = 0;
		var _g1 = this.sidemenu.findComponents("sectionSpacer");
		while(_g < _g1.length) {
			var spacer = _g1[_g];
			++_g;
			var _g2 = new haxe_ds_EnumValueMap();
			_g2.set(gfx_ResponsiveProperty.Height,gfx_ResponsivenessRule.VH(1));
			gfx_ResponsiveToolbox.resizeComponent(spacer,_g2);
		}
		gfx_ResponsiveToolbox.resizeComponent(this.siteName,siteNameRules);
		gfx_ResponsiveToolbox.resizeComponent(this.mobileMenuButton,mobileMenuButtonRules);
		this.mobileMenuButton.set_hidden(!compact);
		var _g = 0;
		var _g1 = this.findComponents("menubar-button");
		while(_g < _g1.length) {
			var btn = _g1[_g];
			++_g;
			if(btn.get_text() != this.accountMenu.get_text() && btn.get_text() != this.challengesMenu.get_text()) {
				btn.set_hidden(compact);
			}
			if(btn.get_text() != this.challengesMenu.get_text()) {
				var _g2 = new haxe_ds_EnumValueMap();
				_g2.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.FontSize),gfx_ResponsivenessRule.VH(2));
				_g2.set(gfx_ResponsiveProperty.Height,gfx_ResponsivenessRule.VH(4));
				gfx_ResponsiveToolbox.resizeComponent(btn,_g2);
			} else {
				var _g3 = new haxe_ds_EnumValueMap();
				_g3.set(gfx_ResponsiveProperty.Height,gfx_ResponsivenessRule.VH(4));
				gfx_ResponsiveToolbox.resizeComponent(btn,_g3);
			}
		}
		var tmp = this.challengesMenu.flagIcon;
		var _g = new haxe_ds_EnumValueMap();
		_g.set(gfx_ResponsiveProperty.Width,gfx_ResponsivenessRule.VH(3));
		_g.set(gfx_ResponsiveProperty.Height,gfx_ResponsivenessRule.VH(3));
		gfx_ResponsiveToolbox.resizeComponent(tmp,_g);
	}
	,setIngameStatus: function(ingame) {
		gfx_Scene.isPlayerInGame = ingame;
		this.mobileMenuButton.set_disabled(ingame);
		this.siteName.set_disabled(ingame);
		this.playMenu.set_disabled(ingame);
		this.watchMenu.set_disabled(ingame);
		this.learnMenu.set_disabled(ingame);
		this.socialMenu.set_disabled(ingame);
		this.challengesMenu.set_disabled(ingame);
		this.logInBtn.set_disabled(ingame);
		this.myProfileBtn.set_disabled(ingame);
		this.logOutBtn.set_disabled(ingame);
		if(ingame) {
			window.onpopstate = function() {
				browser_Url.setPathByScreen(gfx_SceneManager.getCurrentScreenType());
			};
		} else {
			window.onpopstate = gfx_ScreenNavigator.navigate;
		}
	}
	,onIncomingChallenge: function(data) {
		this.challengesMenu.appendEntry(data);
		if(!gfx_Scene.isPlayerInGame && !Preferences.silentChallenges.get()) {
			browser_Blinker.blink(browser_BlinkerNotification.IncomingChallenge);
			var tmp = gfx_Dialogs.getQueue();
			var _g = ($_=this.challengesMenu,$bind($_,$_.removeEntryByID));
			var id = data.id;
			tmp.add(new gfx_popups_IncomingChallengeDialog(data,function() {
				_g(id);
			}));
			assets_Audio.playSound("social");
		}
	}
	,onSendChallengeResultReceived: function(result) {
		switch(result._hx_index) {
		case 0:
			var data = result.data;
			var challengeParams = struct_ChallengeParams.deserialize(data.serializedParams);
			this.challengesMenu.appendEntry(data);
			var _g = challengeParams.type;
			switch(_g._hx_index) {
			case 0:case 1:
				gfx_Dialogs.getQueue().add(new gfx_popups_OpenChallengeCreated(data.id));
				break;
			case 2:
				var calleeLogin = _g.calleeRef;
				gfx_Dialogs.info(dict_Phrase.SEND_DIRECT_CHALLENGE_SUCCESS_DIALOG_TEXT(calleeLogin),dict_Phrase.SEND_DIRECT_CHALLENGE_SUCCESS_DIALOG_TITLE,null,gfx_basic_$components_utils_DialogGroup.RemovedOnGameStarted);
				break;
			}
			assets_Audio.playSound("challenge_sent");
			break;
		case 1:
			gfx_Dialogs.info(dict_Phrase.SEND_CHALLENGE_ERROR_TO_ONESELF,dict_Phrase.SEND_CHALLENGE_ERROR_DIALOG_TITLE,null,gfx_basic_$components_utils_DialogGroup.RemovedOnGameStarted);
			break;
		case 2:
			gfx_Dialogs.info(dict_Phrase.SEND_CHALLENGE_ERROR_NOT_FOUND,dict_Phrase.SEND_CHALLENGE_ERROR_DIALOG_TITLE,null,gfx_basic_$components_utils_DialogGroup.RemovedOnGameStarted);
			break;
		case 3:
			gfx_Dialogs.info(dict_Phrase.SEND_CHALLENGE_ERROR_ALREADY_EXISTS,dict_Phrase.SEND_CHALLENGE_ERROR_DIALOG_TITLE,null,gfx_basic_$components_utils_DialogGroup.RemovedOnGameStarted);
			break;
		case 4:
			gfx_Dialogs.info(dict_Phrase.SEND_CHALLENGE_ERROR_DUPLICATE,dict_Phrase.SEND_CHALLENGE_ERROR_DIALOG_TITLE,null,gfx_basic_$components_utils_DialogGroup.RemovedOnGameStarted);
			break;
		case 5:
			gfx_Dialogs.info(dict_Phrase.SEND_CHALLENGE_ERROR_REMATCH_EXPIRED,dict_Phrase.SEND_CHALLENGE_ERROR_DIALOG_TITLE,null,gfx_basic_$components_utils_DialogGroup.RemovedOnGameStarted);
			break;
		case 6:
			gfx_Dialogs.info(dict_Phrase.SEND_CHALLENGE_ERROR_IMPOSSIBLE,dict_Phrase.SEND_CHALLENGE_ERROR_DIALOG_TITLE,null,gfx_basic_$components_utils_DialogGroup.RemovedOnGameStarted);
			break;
		case 7:
			break;
		case 8:
			gfx_Dialogs.info(dict_Phrase.SEND_CHALLENGE_ERROR_SERVER_SHUTDOWN,dict_Phrase.SEND_CHALLENGE_ERROR_DIALOG_TITLE,null,gfx_basic_$components_utils_DialogGroup.RemovedOnGameStarted);
			break;
		}
	}
	,handleNetEvent: function(event) {
		switch(event._hx_index) {
		case 0:
			var _g = event.data;
			if(_g._hx_index == 1) {
				var _g1 = _g.sessionID;
				var _g1 = _g.token;
				var _g1 = _g.incomingChallenges;
				var _g1 = _g.isShuttingDown;
				var ongoingFiniteGame = _g.ongoingFiniteGame;
				if(ongoingFiniteGame != null) {
					this.setIngameStatus(true);
				}
			}
			break;
		case 1:
			var _g = event.gameID;
			var logPreamble = event.logPreamble;
			gfx_Dialogs.getQueue().closeGroup(gfx_basic_$components_utils_DialogGroup.RemovedOnGameStarted);
			browser_Blinker.blink(browser_BlinkerNotification.GameStarted);
			this.setIngameStatus(true);
			var parsedData = serialization_GameLogParser.parse(logPreamble);
			var opponentLogin = parsedData.getPlayerOpponentRef();
			this.challengesMenu.removeOwnEntries();
			this.challengesMenu.removeEntriesByPlayer(opponentLogin);
			break;
		case 6:
			var result = event.result;
			this.onSendChallengeResultReceived(result);
			break;
		case 7:
			var data = event.data;
			this.onIncomingChallenge(data);
			break;
		case 8:
			var id = event.id;
			this.challengesMenu.removeEntryByID(id);
			break;
		case 9:
			var id = event.id;
			this.challengesMenu.removeEntryByID(id);
			break;
		case 10:
			gfx_Dialogs.info(dict_Phrase.INCOMING_CHALLENGE_ACCEPT_ERROR_CHALLENGE_CANCELLED,dict_Phrase.INCOMING_CHALLENGE_ACCEPT_ERROR_DIALOG_TITLE);
			break;
		case 11:
			var owner = event.owner;
			gfx_Dialogs.info(dict_Phrase.INCOMING_CHALLENGE_ACCEPT_ERROR_CALLER_OFFLINE,dict_Phrase.INCOMING_CHALLENGE_ACCEPT_ERROR_DIALOG_TITLE,[owner]);
			break;
		case 12:
			var owner = event.owner;
			gfx_Dialogs.info(dict_Phrase.INCOMING_CHALLENGE_ACCEPT_ERROR_CALLER_INGAME,dict_Phrase.INCOMING_CHALLENGE_ACCEPT_ERROR_DIALOG_TITLE,[owner]);
			break;
		case 13:
			gfx_Dialogs.info(dict_Phrase.INCOMING_CHALLENGE_ACCEPT_ERROR_SERVER_SHUTDOWN,dict_Phrase.INCOMING_CHALLENGE_ACCEPT_ERROR_DIALOG_TITLE);
			break;
		case 18:
			var _g = event.result;
			if(_g._hx_index == 1) {
				var _g1 = _g.incomingChallenges;
				var _g1 = _g.gameInfo;
				this.setIngameStatus(true);
			}
			break;
		case 27:
			var _g = event.outcome;
			var _g = event.rematchPossible;
			var _g = event.remainingTimeMs;
			var _g = event.newPersonalElo;
			this.setIngameStatus(false);
			break;
		default:
		}
	}
	,handleGlobalEvent: function(event) {
		switch(event._hx_index) {
		case 0:
			this.refreshAccountElements();
			break;
		case 1:
			this.refreshAccountElements();
			this.challengesMenu.clearEntries();
			break;
		case 2:
			var incomingChallenges = event.incomingChallenges;
			var _g = 0;
			while(_g < incomingChallenges.length) {
				var info = incomingChallenges[_g];
				++_g;
				this.challengesMenu.appendEntry(info);
			}
			break;
		default:
		}
	}
	,toScreen: function(type) {
		if(this.currentScreen != null) {
			this.currentScreen.onClosed();
			this.content.removeComponent(this.currentScreen);
		}
		if(type == null) {
			this.currentScreen = null;
		} else {
			this.currentScreen = gfx_Screen.build(type);
			this.menubar.set_hidden(this.currentScreen.menuHidden);
			this.content.addComponent(this.currentScreen);
			this.currentScreen.onEntered();
		}
	}
	,onSiteNamePressed: function(e) {
		gfx_SceneManager.toScreen(gfx_ScreenType.MainMenu);
	}
	,onCreateChallengePressed: function(e) {
		if(!LoginManager.isLogged()) {
			gfx_Dialogs.getQueue().add(new gfx_popups_LogIn($bind(this,this.displayChallengeParamsDialog)));
		} else {
			this.displayChallengeParamsDialog();
		}
	}
	,displayChallengeParamsDialog: function() {
		gfx_Dialogs.getQueue().add(new gfx_popups_ChallengeParamsDialog());
	}
	,onOpenChallengesPressed: function(e) {
		gfx_SceneManager.toScreen(gfx_ScreenType.MainMenu);
	}
	,onCurrentGamesPressed: function(e) {
		gfx_SceneManager.toScreen(gfx_ScreenType.MainMenu);
	}
	,onWatchPlayerPressed: function(e) {
		gfx_Dialogs.prompt(dict_Phrase.INPUT_PLAYER_LOGIN,gfx_SpaceRemoval.All,$bind(this,this.startSpectating));
	}
	,startSpectating: function(requestedLogin) {
		net_Requests.followPlayer(requestedLogin);
	}
	,onAnalysisBoardPressed: function(e) {
		gfx_SceneManager.toScreen(gfx_ScreenType.Analysis(null,null,null));
	}
	,onPlayerProfilePressed: function(e) {
		gfx_Dialogs.prompt(dict_Phrase.INPUT_PLAYER_LOGIN,gfx_SpaceRemoval.All,$bind(this,this.navigateToProfile));
	}
	,navigateToProfile: function(requestedLogin) {
		net_Requests.getPlayerProfile(requestedLogin);
	}
	,onLogInPressed: function(e) {
		gfx_Dialogs.getQueue().add(new gfx_popups_LogIn());
	}
	,onMyProfilePressed: function(e) {
		this.navigateToProfile(LoginManager.getLogin());
	}
	,onSettingsPressed: function(e) {
		gfx_Dialogs.getQueue().add(new gfx_popups_Settings());
	}
	,onLogOutPressed: function(e) {
		LoginManager.removeCredentials();
		Networker.emitEvent(net_shared_ClientEvent.LogOut);
	}
	,refreshAccountElements: function() {
		var logged = LoginManager.isLogged();
		this.accountMenu.set_text(logged ? utils_StringUtils.shorten(LoginManager.getLogin(),8) : dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_ACCOUNT_MENU_GUEST_DISPLAY_NAME));
		this.logInBtn.set_hidden(logged);
		this.myProfileBtn.set_hidden(!logged);
		this.logOutBtn.set_hidden(!logged);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_Scene();
	}
	,watchPlayerBtn: null
	,watchMenu: null
	,socialMenu: null
	,siteName: null
	,settingsBtn: null
	,playerProfileBtn: null
	,playMenu: null
	,openChallengesBtn: null
	,myProfileBtn: null
	,mobileMenuButton: null
	,menubar: null
	,logOutBtn: null
	,logInBtn: null
	,learnMenu: null
	,currentGamesBtn: null
	,createChallengeBtn: null
	,content: null
	,challengesMenu: null
	,analysisBoardBtn: null
	,accountMenu: null
	,__class__: gfx_Scene
});
var gfx_SceneManager = function() { };
$hxClasses["gfx.SceneManager"] = gfx_SceneManager;
gfx_SceneManager.__name__ = "gfx.SceneManager";
gfx_SceneManager.getCurrentScreenType = function() {
	return gfx_SceneManager.currentScreenType;
};
gfx_SceneManager.playerInGame = function() {
	return gfx_SceneManager.scene.playerInGame();
};
gfx_SceneManager.onDisconnected = function() {
	gfx_SceneManager.scene.menubar.set_disabled(true);
};
gfx_SceneManager.onConnected = function() {
	gfx_SceneManager.scene.menubar.set_disabled(false);
};
gfx_SceneManager.onModalDialogShown = function() {
	gfx_SceneManager.scene.set_disabled(true);
};
gfx_SceneManager.onModalDialogHidden = function() {
	gfx_SceneManager.scene.set_disabled(false);
};
gfx_SceneManager.toScreen = function(type) {
	gfx_SceneManager.scene.toScreen(type);
	gfx_SceneManager.currentScreenType = type;
	browser_Url.setPathByScreen(type);
	if(Networker.isConnectedToServer()) {
		Networker.emitEvent(net_shared_ClientEvent.PageUpdated(gfx_SceneManager.getPageByScreenType(type)));
	}
};
gfx_SceneManager.getPageByScreenType = function(type) {
	switch(type._hx_index) {
	case 0:
		return net_shared_dataobj_ViewedScreen.MainMenu;
	case 1:
		var _g = type.initialVariantStr;
		var _g = type.selectedMainlineMove;
		var _g = type.exploredStudyData;
		return net_shared_dataobj_ViewedScreen.Analysis;
	case 2:
		var _g = type.languageReadyCallback;
		return net_shared_dataobj_ViewedScreen.Other;
	case 3:
		var _g = type.constructor;
		var gameID = type.gameID;
		return net_shared_dataobj_ViewedScreen.Game(gameID);
	case 4:
		var _g = type.data;
		var ownerLogin = type.ownerLogin;
		return net_shared_dataobj_ViewedScreen.Profile(ownerLogin);
	case 5:
		var _g = type.data;
		return net_shared_dataobj_ViewedScreen.Other;
	}
};
gfx_SceneManager.clearScreen = function() {
	gfx_SceneManager.scene.toScreen(null);
	gfx_SceneManager.currentScreenType = null;
	browser_Url.clear();
};
gfx_SceneManager.addResizeHandler = function(handler) {
	gfx_SceneManager.resizeHandlers.push(handler);
};
gfx_SceneManager.removeResizeHandler = function(handler) {
	HxOverrides.remove(gfx_SceneManager.resizeHandlers,handler);
};
gfx_SceneManager.onResized = function(e) {
	var timestamp = new Date().getTime();
	var msSinceLastResize = timestamp - gfx_SceneManager.lastResizeTimestamp;
	if(msSinceLastResize > 100 && (gfx_SceneManager.cachedWidth != haxe_ui_core_Screen.get_instance().get_actualWidth() || gfx_SceneManager.cachedHeight != haxe_ui_core_Screen.get_instance().get_actualHeight())) {
		gfx_SceneManager.lastResizeTimestamp = timestamp;
		gfx_SceneManager.cachedWidth = haxe_ui_core_Screen.get_instance().get_actualWidth();
		gfx_SceneManager.cachedHeight = haxe_ui_core_Screen.get_instance().get_actualHeight();
		gfx_SceneManager.scene.resize();
		var _g = 0;
		var _g1 = gfx_SceneManager.resizeHandlers;
		while(_g < _g1.length) {
			var handler = _g1[_g];
			++_g;
			handler();
		}
	} else if(gfx_SceneManager.resizeTimeout == null) {
		gfx_SceneManager.resizeTimeout = haxe_Timer.delay(gfx_SceneManager.onDelayedResizeTimerFired,Math.ceil(100 - msSinceLastResize));
	}
};
gfx_SceneManager.onDelayedResizeTimerFired = function() {
	gfx_SceneManager.resizeTimeout = null;
	gfx_SceneManager.onResized();
};
gfx_SceneManager.updateAnalysisStudyInfo = function(studyData) {
	var _g = gfx_SceneManager.currentScreenType;
	if(_g == null) {
		throw haxe_Exception.thrown("Cannot update study info outside of analysis screen");
	} else if(_g._hx_index == 1) {
		var _g1 = _g.exploredStudyData;
		var initialVariantStr = _g.initialVariantStr;
		var selectedMainlineMove = _g.selectedMainlineMove;
		var newScreenType = gfx_ScreenType.Analysis(initialVariantStr,selectedMainlineMove,studyData);
		browser_Url.setPathByScreen(newScreenType);
		gfx_SceneManager.currentScreenType = newScreenType;
	} else {
		throw haxe_Exception.thrown("Cannot update study info outside of analysis screen");
	}
};
gfx_SceneManager.handleNetEvent = function(event) {
	if(event._hx_index == 1) {
		var gameID = event.gameID;
		var logPreamble = event.logPreamble;
		var parsedData = serialization_GameLogParser.parse(logPreamble);
		var constructor;
		if(parsedData.isPlayerParticipant()) {
			FollowManager.stopFollowing();
			constructor = gfx_game_LiveGameConstructor.New(parsedData.whiteRef,parsedData.blackRef,parsedData.elo,parsedData.timeControl,parsedData.startingSituation,parsedData.datetime);
		} else {
			constructor = gfx_game_LiveGameConstructor.Ongoing(parsedData,null,FollowManager.getFollowedPlayerLogin());
		}
		gfx_SceneManager.toScreen(gfx_ScreenType.LiveGame(gameID,constructor));
	}
	return false;
};
gfx_SceneManager.launch = function() {
	gfx_SceneManager.scene = new gfx_Scene();
	gfx_SceneManager.scene.menubar.set_disabled(true);
	GlobalBroadcaster.addObserver(gfx_SceneManager.scene);
	Networker.addHandler(gfx_SceneManager.handleNetEvent);
	Networker.addObserver(gfx_SceneManager.scene);
	gfx_SceneManager.lastResizeTimestamp = new Date().getTime();
	gfx_SceneManager.cachedWidth = haxe_ui_core_Screen.get_instance().get_actualWidth();
	gfx_SceneManager.cachedHeight = haxe_ui_core_Screen.get_instance().get_actualHeight();
	gfx_SceneManager.scene.resize();
	haxe_ui_core_Screen.get_instance().registerEvent("resize",gfx_SceneManager.onResized);
	return gfx_SceneManager.scene;
};
var gfx_Screen = function(menuHidden) {
	if(menuHidden == null) {
		menuHidden = false;
	}
	this.customCloseHandler = null;
	this.customEnterHandler = null;
	this.responsiveComponents = new haxe_ds_ObjectMap();
	haxe_ui_core_Component.call(this);
	this.menuHidden = menuHidden;
};
$hxClasses["gfx.Screen"] = gfx_Screen;
gfx_Screen.__name__ = "gfx.Screen";
gfx_Screen.build = function(type) {
	switch(type._hx_index) {
	case 0:
		return new gfx_screens_MainMenu();
	case 1:
		var _g = type.exploredStudyData;
		var initialVariantStr = type.initialVariantStr;
		var selectedMainlineMove = type.selectedMainlineMove;
		return new gfx_screens_Analysis(initialVariantStr,selectedMainlineMove);
	case 2:
		var languageReadyCallback = type.languageReadyCallback;
		return new gfx_screens_LanguageSelectIntro(languageReadyCallback);
	case 3:
		var id = type.gameID;
		var constructor = type.constructor;
		return new gfx_screens_LiveGame(id,constructor);
	case 4:
		var ownerLogin = type.ownerLogin;
		var data = type.data;
		return new gfx_screens_Profile(ownerLogin,data);
	case 5:
		var data = type.data;
		return new gfx_screens_OpenChallengeJoining(data);
	}
};
gfx_Screen.__super__ = haxe_ui_core_Component;
gfx_Screen.prototype = $extend(haxe_ui_core_Component.prototype,{
	menuHidden: null
	,responsiveComponents: null
	,customEnterHandler: null
	,customCloseHandler: null
	,onEntered: function() {
		if(!Lambda.empty(this.responsiveComponents)) {
			this.resize();
			gfx_SceneManager.addResizeHandler($bind(this,this.resize));
		}
		if(this.customEnterHandler != null) {
			this.customEnterHandler();
		}
	}
	,onClosed: function() {
		gfx_SceneManager.removeResizeHandler($bind(this,this.resize));
		if(this.customCloseHandler != null) {
			this.customCloseHandler();
		}
	}
	,resize: function() {
		var map = this.responsiveComponents;
		var _g_map = map;
		var _g_keys = map.keys();
		while(_g_keys.hasNext()) {
			var key = _g_keys.next();
			var _g1_value = _g_map.get(key);
			var _g1_key = key;
			var comp = _g1_key;
			var rules = _g1_value;
			gfx_ResponsiveToolbox.resizeComponent(comp,rules);
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_menuHidden: null
	,self: function() {
		return new gfx_Screen(this._constructorParam_menuHidden);
	}
	,__class__: gfx_Screen
});
var gfx_ScreenNavigator = function() { };
$hxClasses["gfx.ScreenNavigator"] = gfx_ScreenNavigator;
gfx_ScreenNavigator.__name__ = "gfx.ScreenNavigator";
gfx_ScreenNavigator.navigate = function() {
	var searcher = new URLSearchParams($global.location.search);
	if(searcher.has("p")) {
		var pagePathParts = searcher.get("p").split("/");
		var section = pagePathParts[0];
		gfx_ScreenNavigator.navigateToSection(section,pagePathParts.slice(1));
	} else if(searcher.has("id")) {
		gfx_ScreenNavigator.navigateToSection("live",[searcher.get("id")]);
	} else {
		gfx_ScreenNavigator.navigateToSection("home",[]);
	}
};
gfx_ScreenNavigator.navigateToSection = function(section,pathPartsAfter) {
	switch(section) {
	case "analysis":
		gfx_ScreenNavigator.toAnalysis();
		break;
	case "join":
		gfx_ScreenNavigator.toOpenChallengeJoining(pathPartsAfter[0]);
		break;
	case "live":
		gfx_ScreenNavigator.toGame(pathPartsAfter[0]);
		break;
	case "player":
		gfx_ScreenNavigator.toProfile(pathPartsAfter[0]);
		break;
	case "study":
		gfx_ScreenNavigator.toStudy(pathPartsAfter[0]);
		break;
	default:
		gfx_SceneManager.toScreen(gfx_ScreenType.MainMenu);
	}
};
gfx_ScreenNavigator.toAnalysis = function() {
	gfx_SceneManager.toScreen(gfx_ScreenType.Analysis(null,null,null));
};
gfx_ScreenNavigator.toOpenChallengeJoining = function(idStr) {
	var id = Std.parseInt(idStr);
	if(id != null) {
		net_Requests.getOpenChallenge(id);
	} else {
		gfx_SceneManager.toScreen(gfx_ScreenType.MainMenu);
	}
};
gfx_ScreenNavigator.toProfile = function(login) {
	net_Requests.getPlayerProfile(login,true);
};
gfx_ScreenNavigator.toStudy = function(idStr) {
	var id = Std.parseInt(idStr);
	if(id != null) {
		net_Requests.getStudy(id);
	} else {
		gfx_SceneManager.toScreen(gfx_ScreenType.MainMenu);
	}
};
gfx_ScreenNavigator.toGame = function(idStr) {
	var id = Std.parseInt(idStr);
	if(id != null) {
		net_Requests.getGame(id);
	} else {
		gfx_SceneManager.toScreen(gfx_ScreenType.MainMenu);
	}
};
var gfx_ScreenType = $hxEnums["gfx.ScreenType"] = { __ename__:"gfx.ScreenType",__constructs__:null
	,MainMenu: {_hx_name:"MainMenu",_hx_index:0,__enum__:"gfx.ScreenType",toString:$estr}
	,Analysis: ($_=function(initialVariantStr,selectedMainlineMove,exploredStudyData) { return {_hx_index:1,initialVariantStr:initialVariantStr,selectedMainlineMove:selectedMainlineMove,exploredStudyData:exploredStudyData,__enum__:"gfx.ScreenType",toString:$estr}; },$_._hx_name="Analysis",$_.__params__ = ["initialVariantStr","selectedMainlineMove","exploredStudyData"],$_)
	,LanguageSelectIntro: ($_=function(languageReadyCallback) { return {_hx_index:2,languageReadyCallback:languageReadyCallback,__enum__:"gfx.ScreenType",toString:$estr}; },$_._hx_name="LanguageSelectIntro",$_.__params__ = ["languageReadyCallback"],$_)
	,LiveGame: ($_=function(gameID,constructor) { return {_hx_index:3,gameID:gameID,constructor:constructor,__enum__:"gfx.ScreenType",toString:$estr}; },$_._hx_name="LiveGame",$_.__params__ = ["gameID","constructor"],$_)
	,PlayerProfile: ($_=function(ownerLogin,data) { return {_hx_index:4,ownerLogin:ownerLogin,data:data,__enum__:"gfx.ScreenType",toString:$estr}; },$_._hx_name="PlayerProfile",$_.__params__ = ["ownerLogin","data"],$_)
	,ChallengeJoining: ($_=function(data) { return {_hx_index:5,data:data,__enum__:"gfx.ScreenType",toString:$estr}; },$_._hx_name="ChallengeJoining",$_.__params__ = ["data"],$_)
};
gfx_ScreenType.__constructs__ = [gfx_ScreenType.MainMenu,gfx_ScreenType.Analysis,gfx_ScreenType.LanguageSelectIntro,gfx_ScreenType.LiveGame,gfx_ScreenType.PlayerProfile,gfx_ScreenType.ChallengeJoining];
gfx_ScreenType.__empty_constructs__ = [gfx_ScreenType.MainMenu];
var gfx_analysis_AnalysisActionBar = function() {
	haxe_ui_containers_VBox.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        #btnBar .button {\r\n            border: 1 solid $normal-border-color;\r\n        }\r\n\r\n        #btnBar .button.first {\r\n            border-left-size: 1;\r\n            border-top-left-radius: 0.5;\r\n            border-bottom-left-radius: 0.5;\r\n        }\r\n\r\n        #btnBar .button.last {\r\n            border-top-right-radius: 0.5;\r\n            border-bottom-right-radius: 0.5;\r\n        }\r\n\r\n        .analysis-actionbar-button .icon {\r\n            width: 30px;\r\n            height: 30px;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_containers_HorizontalButtonBar();
	c0.set_id("btnBar");
	c0.set_percentWidth(100.);
	c0.set_toggle(false);
	var c1 = new haxe_ui_components_Button();
	c1.set_id("changeOrientationBtn");
	c1.set_height(36.);
	c1.set_styleNames("analysis-actionbar-button");
	c1.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/analysis/flip.svg"));
	c1.set_hidden(true);
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_Button();
	c2.set_id("editPositionBtn");
	c2.set_height(36.);
	c2.set_styleNames("analysis-actionbar-button");
	c2.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/common/edit.svg"));
	c2.set_hidden(true);
	c0.addComponent(c2);
	var c3 = new haxe_ui_components_Button();
	c3.set_id("shareBtn");
	c3.set_height(36.);
	c3.set_styleNames("analysis-actionbar-button");
	c3.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/common/share.svg"));
	c3.set_hidden(true);
	c0.addComponent(c3);
	var c4 = new haxe_ui_components_Button();
	c4.set_id("playFromPosBtn");
	c4.set_height(36.);
	c4.set_styleNames("analysis-actionbar-button");
	c4.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/common/play_from_pos.svg"));
	c4.set_hidden(true);
	c0.addComponent(c4);
	var c5 = new haxe_ui_components_Button();
	c5.set_id("prevMoveBtn");
	c5.set_height(36.);
	c5.set_styleNames("analysis-actionbar-button");
	c5.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/common/prev.svg"));
	c5.set_hidden(true);
	c0.addComponent(c5);
	var c6 = new haxe_ui_components_Button();
	c6.set_id("nextMoveBtn");
	c6.set_height(36.);
	c6.set_styleNames("analysis-actionbar-button");
	c6.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/common/next.svg"));
	c6.set_hidden(true);
	c0.addComponent(c6);
	this.addComponent(c0);
	this.set_percentWidth(100.);
	this.set_styleString("padding: 1 1 1 1");
	this.bindingRoot = true;
	this.shareBtn = c3;
	this.prevMoveBtn = c5;
	this.playFromPosBtn = c4;
	this.nextMoveBtn = c6;
	this.editPositionBtn = c2;
	this.changeOrientationBtn = c1;
	this.btnBar = c0;
	c1.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.ANALYSIS_FLIP_BOARD_BTN_TOOLTIP));
	c2.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.ANALYSIS_SET_POSITION_BTN_TOOLTIP));
	c3.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.ANALYSIS_SHARE_BTN_TOOLTIP));
	c4.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.PLAY_FROM_POS_BTN_TOOLTIP));
	var c = this.changeOrientationBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onChangeOrientationPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "changeOrientationBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.analysis.AnalysisActionBar", methodName : "new"});
	}
	var c = this.editPositionBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onEditPositionPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "editPositionBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.analysis.AnalysisActionBar", methodName : "new"});
	}
	var c = this.shareBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onSharePressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "shareBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.analysis.AnalysisActionBar", methodName : "new"});
	}
	var c = this.playFromPosBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onPlayFromPosPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "playFromPosBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.analysis.AnalysisActionBar", methodName : "new"});
	}
	var c = this.prevMoveBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onPrevPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "prevMoveBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.analysis.AnalysisActionBar", methodName : "new"});
	}
	var c = this.nextMoveBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onNextPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "nextMoveBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.analysis.AnalysisActionBar", methodName : "new"});
	}
};
$hxClasses["gfx.analysis.AnalysisActionBar"] = gfx_analysis_AnalysisActionBar;
gfx_analysis_AnalysisActionBar.__name__ = "gfx.analysis.AnalysisActionBar";
gfx_analysis_AnalysisActionBar.__interfaces__ = [gfx_analysis_IAnalysisPeripheralEventObserver];
gfx_analysis_AnalysisActionBar.__super__ = haxe_ui_containers_VBox;
gfx_analysis_AnalysisActionBar.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	eventHandler: null
	,handleAnalysisPeripheralEvent: function(event) {
		switch(event._hx_index) {
		case 8:
			this.set_hidden(false);
			break;
		case 9:
			this.set_hidden(false);
			break;
		case 11:
			this.set_hidden(true);
			break;
		default:
		}
	}
	,onChangeOrientationPressed: function(e) {
		this.eventHandler(gfx_analysis_PeripheralEvent.OrientationChangeRequested);
	}
	,onEditPositionPressed: function(e) {
		this.eventHandler(gfx_analysis_PeripheralEvent.EditorLaunchRequested);
	}
	,onSharePressed: function(e) {
		this.eventHandler(gfx_analysis_PeripheralEvent.ShareRequested);
	}
	,onPlayFromPosPressed: function(e) {
		this.eventHandler(gfx_analysis_PeripheralEvent.PlayFromHereRequested);
	}
	,onPrevPressed: function(e) {
		this.eventHandler(gfx_analysis_PeripheralEvent.ScrollBtnPressed(gfx_utils_PlyScrollType.Prev));
	}
	,onNextPressed: function(e) {
		this.eventHandler(gfx_analysis_PeripheralEvent.ScrollBtnPressed(gfx_utils_PlyScrollType.Next));
	}
	,init: function(compact,eventHandler) {
		this.eventHandler = eventHandler;
		var shownButtons = [this.changeOrientationBtn,this.editPositionBtn,this.shareBtn,this.playFromPosBtn];
		if(compact) {
			shownButtons.push(this.prevMoveBtn);
			shownButtons.push(this.nextMoveBtn);
		}
		var btnWidth = 100 / shownButtons.length;
		var _g = 0;
		while(_g < shownButtons.length) {
			var btn = shownButtons[_g];
			++_g;
			btn.set_hidden(false);
			btn.set_percentWidth(btnWidth);
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_analysis_AnalysisActionBar();
	}
	,shareBtn: null
	,prevMoveBtn: null
	,playFromPosBtn: null
	,nextMoveBtn: null
	,editPositionBtn: null
	,changeOrientationBtn: null
	,btnBar: null
	,__class__: gfx_analysis_AnalysisActionBar
});
var gfx_analysis_Highlighting = $hxEnums["gfx.analysis.Highlighting"] = { __ename__:"gfx.analysis.Highlighting",__constructs__:null
	,Off: {_hx_name:"Off",_hx_index:0,__enum__:"gfx.analysis.Highlighting",toString:$estr}
	,Semi: {_hx_name:"Semi",_hx_index:1,__enum__:"gfx.analysis.Highlighting",toString:$estr}
	,Full: {_hx_name:"Full",_hx_index:2,__enum__:"gfx.analysis.Highlighting",toString:$estr}
};
gfx_analysis_Highlighting.__constructs__ = [gfx_analysis_Highlighting.Off,gfx_analysis_Highlighting.Semi,gfx_analysis_Highlighting.Full];
gfx_analysis_Highlighting.__empty_constructs__ = [gfx_analysis_Highlighting.Off,gfx_analysis_Highlighting.Semi,gfx_analysis_Highlighting.Full];
var gfx_analysis_Arrow = function() {
	haxe_ui_components_Canvas.call(this);
	this.highlighting = gfx_analysis_Highlighting.Off;
};
$hxClasses["gfx.analysis.Arrow"] = gfx_analysis_Arrow;
gfx_analysis_Arrow.__name__ = "gfx.analysis.Arrow";
gfx_analysis_Arrow.__super__ = haxe_ui_components_Canvas;
gfx_analysis_Arrow.prototype = $extend(haxe_ui_components_Canvas.prototype,{
	from: null
	,to: null
	,highlighting: null
	,highlight: function(fully) {
		this.highlighting = fully ? gfx_analysis_Highlighting.Full : gfx_analysis_Highlighting.Semi;
		if(this.from == null || this.to == null) {
			return;
		}
		this.componentGraphics.clear();
		this.drawArrow();
	}
	,unhighlight: function() {
		this.highlighting = gfx_analysis_Highlighting.Off;
		if(this.from == null || this.to == null) {
			return;
		}
		this.componentGraphics.clear();
		this.drawArrow();
	}
	,changeDeparture: function(newDep) {
		this.componentGraphics.clear();
		this.from = newDep;
		this.drawArrow();
	}
	,changeDestination: function(newDest) {
		this.componentGraphics.clear();
		this.to = newDest;
		this.drawArrow();
	}
	,changeEndpoints: function(newDep,newDest) {
		this.componentGraphics.clear();
		this.from = newDep;
		this.to = newDest;
		this.drawArrow();
	}
	,rotatedPoint: function(p,angle) {
		return new haxe_ui_geom_Point(Math.cos(angle) * p.x - Math.sin(angle) * p.y,Math.cos(angle) * p.y + Math.sin(angle) * p.x);
	}
	,getBuilder: function() {
		return (js_Boot.__cast(this.componentGraphics._impl , haxe_ui_backend_html5_graphics_SVGGraphicsImpl))._svg;
	}
	,drawArrow: function() {
		var p = new haxe_ui_geom_Point(0,-gfx_analysis_Arrow.ARROW_TRIANGLE_SIDE);
		var angle = -Math.PI / 8;
		var vertex1 = new haxe_ui_geom_Point(Math.cos(angle) * p.x - Math.sin(angle) * p.y,Math.cos(angle) * p.y + Math.sin(angle) * p.x).sum(this.to);
		var p = new haxe_ui_geom_Point(0,-gfx_analysis_Arrow.ARROW_TRIANGLE_SIDE);
		var angle = Math.PI / 8;
		var vertex2 = new haxe_ui_geom_Point(Math.cos(angle) * p.x - Math.sin(angle) * p.y,Math.cos(angle) * p.y + Math.sin(angle) * p.x).sum(this.to);
		var upperSideVector = vertex2.diff(vertex1).product(0.5);
		var inputVertex = vertex1.sum(upperSideVector);
		var fracturePoint = inputVertex.diff(new haxe_ui_geom_Point(0,gfx_analysis_Arrow.STRAIGHT_ARROW_SEGMENT_SIZE));
		var color;
		var alpha;
		switch(this.highlighting._hx_index) {
		case 0:
			color = gfx_utils_Colors.variantTreeUnselectedArrow;
			alpha = 1;
			break;
		case 1:
			color = gfx_utils_Colors.variantTreeSelectedArrow;
			alpha = 0.4;
			break;
		case 2:
			color = gfx_utils_Colors.variantTreeSelectedArrow;
			alpha = 1;
			break;
		}
		this.set_width(net_shared_utils_MathUtils.arrmax([inputVertex.x,fracturePoint.x,this.from.x,this.to.x,vertex1.x,vertex2.x]) + gfx_analysis_Arrow.ARROW_THICKNESS);
		this.set_height(net_shared_utils_MathUtils.arrmax([inputVertex.y,fracturePoint.y,this.from.y,this.to.y,vertex1.y,vertex2.y]) + gfx_analysis_Arrow.ARROW_THICKNESS);
		this.componentGraphics.strokeStyle(color,gfx_analysis_Arrow.ARROW_THICKNESS,alpha);
		this.componentGraphics.moveTo(this.from.x,this.from.y);
		this.componentGraphics.lineTo(fracturePoint.x,fracturePoint.y);
		this.componentGraphics.lineTo(inputVertex.x,inputVertex.y);
		var builder = this.getBuilder();
		var path = builder.path(inputVertex.x,inputVertex.y);
		path.fill({ color : haxe_ui_util_Color.toHex(color), opacity : alpha});
		path.lineTo(vertex1.x,vertex1.y);
		path.lineTo(this.to.x,this.to.y);
		path.lineTo(vertex2.x,vertex2.y);
		path.lineTo(inputVertex.x,inputVertex.y);
		path.close();
	}
	,registerBehaviours: function() {
		haxe_ui_components_Canvas.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Canvas.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_analysis_Arrow();
	}
	,__class__: gfx_analysis_Arrow
});
var haxe_ui_containers_TabView = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.containers.TabView"] = haxe_ui_containers_TabView;
haxe_ui_containers_TabView.__name__ = "haxe.ui.containers.TabView";
haxe_ui_containers_TabView.__super__ = haxe_ui_core_Component;
haxe_ui_containers_TabView.prototype = $extend(haxe_ui_core_Component.prototype,{
	removePage: function(index) {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("removePage",index);
	}
	,getPage: function(index) {
		return haxe_ui_util_Variant.toComponent(this.behaviours.call("getPage",index));
	}
	,getPageById: function(pageId) {
		return haxe_ui_util_Variant.toComponent(this.behaviours.call("getPageById",pageId));
	}
	,removeAllPages: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("removeAllPages",null);
	}
	,registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_containers__$TabView_Builder;
		this._internalEventsClass = haxe_ui_containers__$TabView_Events;
		this._defaultLayoutClass = haxe_ui_containers__$TabView_Layout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("pageIndex",haxe_ui_containers__$TabView_PageIndex,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedPage",haxe_ui_containers__$TabView_SelectedPage,null);
		this.behaviours.register("tabPosition",haxe_ui_containers__$TabView_TabPosition);
		this.behaviours.register("pageCount",haxe_ui_containers__$TabView_PageCount);
		this.behaviours.register("closable",haxe_ui_containers__$TabView_Closable,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("buttonWidth",haxe_ui_containers__$TabView_ButtonWidth,null);
		this.behaviours.register("buttonHeight",haxe_ui_containers__$TabView_ButtonHeight,null);
		this.behaviours.register("removePage",haxe_ui_containers__$TabView_RemovePage);
		this.behaviours.register("getPage",haxe_ui_containers__$TabView_GetPage);
		this.behaviours.register("getPageById",haxe_ui_containers__$TabView_GetPageById);
		this.behaviours.register("removeAllPages",haxe_ui_containers__$TabView_RemoveAllPages);
	}
	,get_pageIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("pageIndex"));
	}
	,set_pageIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("pageIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"pageIndex"));
		return value;
	}
	,get_selectedPage: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("selectedPage"));
	}
	,set_selectedPage: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedPage",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedPage"));
		return value;
	}
	,get_tabPosition: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("tabPosition"));
	}
	,set_tabPosition: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"tabPosition",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("tabPosition",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"tabPosition"));
		return value;
	}
	,get_pageCount: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("pageCount"));
	}
	,set_pageCount: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("pageCount",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"pageCount"));
		return value;
	}
	,get_closable: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("closable"));
	}
	,set_closable: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("closable",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"closable"));
		return value;
	}
	,get_buttonWidth: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("buttonWidth"));
	}
	,set_buttonWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("buttonWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"buttonWidth"));
		return value;
	}
	,get_buttonHeight: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("buttonHeight"));
	}
	,set_buttonHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("buttonHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"buttonHeight"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_TabView();
	}
	,__class__: haxe_ui_containers_TabView
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_buttonHeight:"set_buttonHeight",get_buttonHeight:"get_buttonHeight",set_buttonWidth:"set_buttonWidth",get_buttonWidth:"get_buttonWidth",set_closable:"set_closable",get_closable:"get_closable",set_pageCount:"set_pageCount",get_pageCount:"get_pageCount",set_tabPosition:"set_tabPosition",get_tabPosition:"get_tabPosition",set_selectedPage:"set_selectedPage",get_selectedPage:"get_selectedPage",set_pageIndex:"set_pageIndex",get_pageIndex:"get_pageIndex"})
});
var gfx_analysis_ControlTabs = function(initialVariant,eventHandler) {
	haxe_ui_containers_TabView.call(this);
	var c0 = new haxe_ui_containers_Box();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_containers_VBox();
	c1.set_percentWidth(100.);
	c1.set_percentHeight(100.);
	var c2 = new gfx_common_MoveNavigator();
	c2.set_id("navigator");
	c2.set_percentHeight(100.);
	c1.addComponent(c2);
	var c3 = new gfx_analysis_AnalysisActionBar();
	c3.set_id("actionBar");
	c3.set_percentWidth(100.);
	c1.addComponent(c3);
	c0.addComponent(c1);
	this.addComponent(c0);
	var c4 = new haxe_ui_containers_Box();
	c4.set_id("branchingTab");
	c4.set_percentWidth(100.);
	c4.set_percentHeight(100.);
	var c5 = new haxe_ui_containers_VBox();
	c5.set_id("branchingTabContentsBox");
	c5.set_percentWidth(100.);
	c5.set_percentHeight(100.);
	var c6 = new haxe_ui_containers_HBox();
	c6.set_percentWidth(100.);
	var c7 = new haxe_ui_components_Image();
	c7.set_width(16.);
	c7.set_height(16.);
	c7.set_verticalAlign("center");
	c7.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/analysis/info-circle.svg"));
	c6.addComponent(c7);
	var c8 = new haxe_ui_components_Link();
	c8.set_id("branchingHelpLink");
	c8.set_styleString("font-size:16px;color:#333333");
	c8.set_verticalAlign("center");
	c6.addComponent(c8);
	c5.addComponent(c6);
	var c9 = new haxe_ui_containers_ScrollView();
	c9.set_id("variantViewSV");
	c9.set_percentWidth(100.);
	c9.set_percentHeight(100.);
	c5.addComponent(c9);
	c4.addComponent(c5);
	this.addComponent(c4);
	var c10 = new haxe_ui_containers_Box();
	c10.set_percentWidth(100.);
	c10.set_percentHeight(100.);
	var c11 = new haxe_ui_components_Label();
	c11.set_styleString("font-size:20px");
	c11.set_verticalAlign("center");
	c11.set_horizontalAlign("center");
	c10.addComponent(c11);
	this.addComponent(c10);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.set_styleNames("full-width-buttons");
	this.bindingRoot = true;
	this.variantViewSV = c9;
	this.navigator = c2;
	this.branchingTabContentsBox = c5;
	this.branchingTab = c4;
	this.branchingHelpLink = c8;
	this.actionBar = c3;
	c0.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.ANALYSIS_OVERVIEW_TAB_NAME)));
	c4.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.ANALYSIS_BRANCHING_TAB_NAME)));
	c8.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.ANALYSIS_BRANCHING_HELP_LINK_TEXT)));
	c10.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.ANALYSIS_OPENINGS_TAB_NAME)));
	c11.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.ANALYSIS_OPENINGS_TEASER_TEXT)));
	this.eventHandler = eventHandler;
	this.actionBar.init(false,eventHandler);
	this.branchingHelpLink.set_onClick(function(e) {
		gfx_Dialogs.getQueue().addBasic(new gfx_popups_BranchingHelp(),null,true);
	});
	this.drawBranchingTab(initialVariant);
};
$hxClasses["gfx.analysis.ControlTabs"] = gfx_analysis_ControlTabs;
gfx_analysis_ControlTabs.__name__ = "gfx.analysis.ControlTabs";
gfx_analysis_ControlTabs.__interfaces__ = [gfx_analysis_IAnalysisPeripheralEventObserver,gameboard_IGameBoardObserver];
gfx_analysis_ControlTabs.__super__ = haxe_ui_containers_TabView;
gfx_analysis_ControlTabs.prototype = $extend(haxe_ui_containers_TabView.prototype,{
	branchingTabType: null
	,variantView: null
	,eventHandler: null
	,handleAnalysisPeripheralEvent: function(event) {
		switch(event._hx_index) {
		case 8:
			this.set_disabled(false);
			break;
		case 9:
			this.set_disabled(false);
			break;
		case 11:
			this.set_disabled(true);
			break;
		case 13:
			var type = event.type;
			this.variantView.handlePlyScrolling(type);
			break;
		default:
		}
	}
	,handleGameBoardEvent: function(event) {
		switch(event._hx_index) {
		case 0:
			var ply = event.ply;
			var plyStr = event.plyStr;
			var performedBy = event.performedBy;
			this.variantView.addChildToSelectedNode(ply,true);
			break;
		case 2:
			var _g = event.plyStr;
			var _g = event.performedBy;
			var _g = event.droppedMovesCount;
			var ply = event.ply;
			this.variantView.addChildToSelectedNode(ply,true);
			break;
		default:
		}
	}
	,clearBranching: function(newStartingSituation) {
		this.variantView.clear(newStartingSituation);
	}
	,onWheel: function(obj,e) {
		if(e.ctrlKey) {
			e.cancel();
		}
	}
	,redrawBranchingTab: function(variant) {
		var selectedNode = this.variantView.getSelectedNode();
		switch(this.branchingTabType._hx_index) {
		case 0:case 2:
			this.variantViewSV.removeAllComponents();
			break;
		case 1:
			this.branchingTabContentsBox.removeComponentAt(2);
			break;
		}
		this.drawBranchingTab(variant,selectedNode);
	}
	,drawBranchingTab: function(initialVariant,selectedNode) {
		var _gthis = this;
		this.branchingTabType = Preferences.branchingTabType.get();
		switch(this.branchingTabType._hx_index) {
		case 0:
			var tree = new gfx_analysis_VariantTree(initialVariant,selectedNode);
			this.variantView = tree;
			this.variantViewSV.set_hidden(false);
			this.variantViewSV.set_percentContentWidth(null);
			this.variantViewSV.addComponent(tree);
			var _g = $bind(this,this.onWheel);
			var obj = tree;
			var tmp = function(e) {
				_g(obj,e);
			};
			this.variantViewSV.registerEvent("mousewheel",tmp,100);
			this.set_onChange(function(e) {
				if(_gthis.get_selectedPage() == _gthis.branchingTab) {
					tree.refreshLayout();
				}
			});
			tree.refreshLayout();
			break;
		case 1:
			var comp = new gfx_analysis_VariantOutline(initialVariant,selectedNode);
			this.variantView = comp;
			this.variantViewSV.set_hidden(true);
			this.variantViewSV.set_percentContentWidth(null);
			this.branchingTabContentsBox.addComponent(comp);
			this.set_onChange(function(e) {
				if(_gthis.get_selectedPage() == _gthis.branchingTab) {
					comp.refreshSelection();
				}
			});
			break;
		case 2:
			var box = new gfx_analysis_VariantPlainText(initialVariant,selectedNode);
			this.variantView = box;
			this.variantViewSV.set_hidden(false);
			this.variantViewSV.set_percentContentWidth(100);
			this.variantViewSV.addComponent(box);
			this.set_onChange(null);
			break;
		}
		this.variantView.init(this.eventHandler);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_TabView.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_TabView.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_initialVariant: null
	,_constructorParam_eventHandler: null
	,self: function() {
		return new gfx_analysis_ControlTabs(this._constructorParam_initialVariant,this._constructorParam_eventHandler);
	}
	,variantViewSV: null
	,navigator: null
	,branchingTabContentsBox: null
	,branchingTab: null
	,branchingHelpLink: null
	,actionBar: null
	,__class__: gfx_analysis_ControlTabs
});
var gfx_analysis_IVariantView = function() { };
$hxClasses["gfx.analysis.IVariantView"] = gfx_analysis_IVariantView;
gfx_analysis_IVariantView.__name__ = "gfx.analysis.IVariantView";
gfx_analysis_IVariantView.__isInterface__ = true;
gfx_analysis_IVariantView.prototype = {
	init: null
	,clear: null
	,addChildNode: null
	,addChildToSelectedNode: null
	,getSelectedNode: null
	,removeNodeByPath: null
	,handlePlyScrolling: null
	,__class__: gfx_analysis_IVariantView
};
var haxe_ui_components_Label = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Label"] = haxe_ui_components_Label;
haxe_ui_components_Label.__name__ = "haxe.ui.components.Label";
haxe_ui_components_Label.__super__ = haxe_ui_core_Component;
haxe_ui_components_Label.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components__$Label_Builder;
		this._defaultLayoutClass = haxe_ui_components__$Label_LabelLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_components__$Label_TextBehaviour);
		this.behaviours.register("htmlText",haxe_ui_components__$Label_HtmlTextBehaviour);
	}
	,get_htmlText: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("htmlText"));
	}
	,set_htmlText: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"htmlText",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("htmlText",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"htmlText"));
		return value;
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		this.set_text(value);
		return value;
	}
	,get_textAlign: function() {
		if(this.get_customStyle().textAlign != null) {
			return this.get_customStyle().textAlign;
		}
		if(this.get_style() == null || this.get_style().textAlign == null) {
			return null;
		}
		return this.get_style().textAlign;
	}
	,set_textAlign: function(value) {
		if(this.get_customStyle().textAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().textAlign = null;
		} else {
			this.get_customStyle().textAlign = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_wordWrap: function() {
		if(this.get_customStyle().wordWrap != null) {
			return this.get_customStyle().wordWrap;
		}
		if(this.get_style() == null || this.get_style().wordWrap == null) {
			return null;
		}
		return this.get_style().wordWrap;
	}
	,set_wordWrap: function(value) {
		if(this.get_customStyle().wordWrap == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().wordWrap = null;
		} else {
			this.get_customStyle().wordWrap = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_htmlText() != null) {
			c.set_htmlText(this.get_htmlText());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Label();
	}
	,__class__: haxe_ui_components_Label
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_wordWrap:"set_wordWrap",get_wordWrap:"get_wordWrap",set_textAlign:"set_textAlign",get_textAlign:"get_textAlign",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText"})
});
var haxe_ui_components_Link = function() {
	haxe_ui_components_Label.call(this);
};
$hxClasses["haxe.ui.components.Link"] = haxe_ui_components_Link;
haxe_ui_components_Link.__name__ = "haxe.ui.components.Link";
haxe_ui_components_Link.__super__ = haxe_ui_components_Label;
haxe_ui_components_Link.prototype = $extend(haxe_ui_components_Label.prototype,{
	registerBehaviours: function() {
		haxe_ui_components_Label.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Label.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Link();
	}
	,__class__: haxe_ui_components_Link
});
var gfx_analysis_Node = function(code,text,selected,onBranchSelect,onBranchRemove) {
	var _gthis = this;
	haxe_ui_components_Link.call(this);
	this.code = code;
	this.set_text(text);
	this.set_onClick(function(e) {
		if(e.ctrlKey) {
			onBranchRemove(_gthis.code);
		} else {
			onBranchSelect(_gthis.code);
		}
	});
	if(selected) {
		this.select();
	} else {
		this.deselect();
	}
	this.textSize = haxe_ui_backend_html5_text_TextMeasurer.get_instance().measureText({ text : text, isHtml : false, fontSize : this.get_style().fontSize == null ? null : Std.string(this.get_style().fontSize), fontFamily : this.get_style().fontName});
};
$hxClasses["gfx.analysis.Node"] = gfx_analysis_Node;
gfx_analysis_Node.__name__ = "gfx.analysis.Node";
gfx_analysis_Node.__super__ = haxe_ui_components_Link;
gfx_analysis_Node.prototype = $extend(haxe_ui_components_Link.prototype,{
	code: null
	,textSize: null
	,inputPos: function() {
		return new haxe_ui_geom_Point(this.get_left() + this.get_width() / 2,this.get_top());
	}
	,outputPos: function() {
		return new haxe_ui_geom_Point(this.get_left() + this.get_width() / 2,this.get_top() + this.get_height() + 2);
	}
	,select: function() {
		this.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"center",null,null,null,null,null,true,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
	}
	,deselect: function() {
		this.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"center",null,null,null,null,null,false,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
	}
	,registerBehaviours: function() {
		haxe_ui_components_Link.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Link.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_code: null
	,_constructorParam_text: null
	,_constructorParam_selected: null
	,_constructorParam_onBranchSelect: null
	,_constructorParam_onBranchRemove: null
	,self: function() {
		return new gfx_analysis_Node(this._constructorParam_code,this._constructorParam_text,this._constructorParam_selected,this._constructorParam_onBranchSelect,this._constructorParam_onBranchRemove);
	}
	,__class__: gfx_analysis_Node
});
var gfx_analysis_PeripheralEvent = $hxEnums["gfx.analysis.PeripheralEvent"] = { __ename__:"gfx.analysis.PeripheralEvent",__constructs__:null
	,BranchSelected: ($_=function(branch,branchStr,pointer) { return {_hx_index:0,branch:branch,branchStr:branchStr,pointer:pointer,__enum__:"gfx.analysis.PeripheralEvent",toString:$estr}; },$_._hx_name="BranchSelected",$_.__params__ = ["branch","branchStr","pointer"],$_)
	,RevertNeeded: ($_=function(plyCnt) { return {_hx_index:1,plyCnt:plyCnt,__enum__:"gfx.analysis.PeripheralEvent",toString:$estr}; },$_._hx_name="RevertNeeded",$_.__params__ = ["plyCnt"],$_)
	,ClearRequested: {_hx_name:"ClearRequested",_hx_index:2,__enum__:"gfx.analysis.PeripheralEvent",toString:$estr}
	,ResetRequested: {_hx_name:"ResetRequested",_hx_index:3,__enum__:"gfx.analysis.PeripheralEvent",toString:$estr}
	,StartPosRequested: {_hx_name:"StartPosRequested",_hx_index:4,__enum__:"gfx.analysis.PeripheralEvent",toString:$estr}
	,OrientationChangeRequested: {_hx_name:"OrientationChangeRequested",_hx_index:5,__enum__:"gfx.analysis.PeripheralEvent",toString:$estr}
	,ConstructSituationRequested: ($_=function(situation) { return {_hx_index:6,situation:situation,__enum__:"gfx.analysis.PeripheralEvent",toString:$estr}; },$_._hx_name="ConstructSituationRequested",$_.__params__ = ["situation"],$_)
	,TurnColorChanged: ($_=function(newTurnColor) { return {_hx_index:7,newTurnColor:newTurnColor,__enum__:"gfx.analysis.PeripheralEvent",toString:$estr}; },$_._hx_name="TurnColorChanged",$_.__params__ = ["newTurnColor"],$_)
	,ApplyChangesRequested: {_hx_name:"ApplyChangesRequested",_hx_index:8,__enum__:"gfx.analysis.PeripheralEvent",toString:$estr}
	,DiscardChangesRequested: {_hx_name:"DiscardChangesRequested",_hx_index:9,__enum__:"gfx.analysis.PeripheralEvent",toString:$estr}
	,EditModeChanged: ($_=function(newEditMode) { return {_hx_index:10,newEditMode:newEditMode,__enum__:"gfx.analysis.PeripheralEvent",toString:$estr}; },$_._hx_name="EditModeChanged",$_.__params__ = ["newEditMode"],$_)
	,EditorLaunchRequested: {_hx_name:"EditorLaunchRequested",_hx_index:11,__enum__:"gfx.analysis.PeripheralEvent",toString:$estr}
	,ShareRequested: {_hx_name:"ShareRequested",_hx_index:12,__enum__:"gfx.analysis.PeripheralEvent",toString:$estr}
	,ScrollBtnPressed: ($_=function(type) { return {_hx_index:13,type:type,__enum__:"gfx.analysis.PeripheralEvent",toString:$estr}; },$_._hx_name="ScrollBtnPressed",$_.__params__ = ["type"],$_)
	,PlayFromHereRequested: {_hx_name:"PlayFromHereRequested",_hx_index:14,__enum__:"gfx.analysis.PeripheralEvent",toString:$estr}
};
gfx_analysis_PeripheralEvent.__constructs__ = [gfx_analysis_PeripheralEvent.BranchSelected,gfx_analysis_PeripheralEvent.RevertNeeded,gfx_analysis_PeripheralEvent.ClearRequested,gfx_analysis_PeripheralEvent.ResetRequested,gfx_analysis_PeripheralEvent.StartPosRequested,gfx_analysis_PeripheralEvent.OrientationChangeRequested,gfx_analysis_PeripheralEvent.ConstructSituationRequested,gfx_analysis_PeripheralEvent.TurnColorChanged,gfx_analysis_PeripheralEvent.ApplyChangesRequested,gfx_analysis_PeripheralEvent.DiscardChangesRequested,gfx_analysis_PeripheralEvent.EditModeChanged,gfx_analysis_PeripheralEvent.EditorLaunchRequested,gfx_analysis_PeripheralEvent.ShareRequested,gfx_analysis_PeripheralEvent.ScrollBtnPressed,gfx_analysis_PeripheralEvent.PlayFromHereRequested];
gfx_analysis_PeripheralEvent.__empty_constructs__ = [gfx_analysis_PeripheralEvent.ClearRequested,gfx_analysis_PeripheralEvent.ResetRequested,gfx_analysis_PeripheralEvent.StartPosRequested,gfx_analysis_PeripheralEvent.OrientationChangeRequested,gfx_analysis_PeripheralEvent.ApplyChangesRequested,gfx_analysis_PeripheralEvent.DiscardChangesRequested,gfx_analysis_PeripheralEvent.EditorLaunchRequested,gfx_analysis_PeripheralEvent.ShareRequested,gfx_analysis_PeripheralEvent.PlayFromHereRequested];
var gfx_analysis_PosEditMode = $hxEnums["gfx.analysis.PosEditMode"] = { __ename__:"gfx.analysis.PosEditMode",__constructs__:null
	,Move: {_hx_name:"Move",_hx_index:0,__enum__:"gfx.analysis.PosEditMode",toString:$estr}
	,Delete: {_hx_name:"Delete",_hx_index:1,__enum__:"gfx.analysis.PosEditMode",toString:$estr}
	,Set: ($_=function(type,color) { return {_hx_index:2,type:type,color:color,__enum__:"gfx.analysis.PosEditMode",toString:$estr}; },$_._hx_name="Set",$_.__params__ = ["type","color"],$_)
};
gfx_analysis_PosEditMode.__constructs__ = [gfx_analysis_PosEditMode.Move,gfx_analysis_PosEditMode.Delete,gfx_analysis_PosEditMode.Set];
gfx_analysis_PosEditMode.__empty_constructs__ = [gfx_analysis_PosEditMode.Move,gfx_analysis_PosEditMode.Delete];
var gfx_analysis_PositionEditor = function(eventHandler) {
	haxe_ui_containers_VBox.call(this);
	var c0 = new haxe_ui_containers_Grid();
	c0.set_id("editModesGrid");
	c0.set_horizontalAlign("center");
	c0.set_columns(7);
	var c1 = new haxe_ui_components_Button();
	c1.set_id("moveModeBtn");
	c1.set_width(50.);
	c1.set_height(50.);
	c1.set_toggle(true);
	c1.set_selected(true);
	c1.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/analysis/move.svg"));
	c1.set_componentGroup("editModes");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_Button();
	c2.set_id("setProgWhiteModeBtn");
	c2.set_width(50.);
	c2.set_height(50.);
	c2.set_toggle(true);
	c2.set_icon(haxe_ui_util_Variant.fromString("assets/pieces/Progressor_White.svg"));
	c2.set_componentGroup("editModes");
	c0.addComponent(c2);
	var c3 = new haxe_ui_components_Button();
	c3.set_id("setAgrWhiteModeBtn");
	c3.set_width(50.);
	c3.set_height(50.);
	c3.set_toggle(true);
	c3.set_icon(haxe_ui_util_Variant.fromString("assets/pieces/Aggressor_White.svg"));
	c3.set_componentGroup("editModes");
	c0.addComponent(c3);
	var c4 = new haxe_ui_components_Button();
	c4.set_id("setDefWhiteModeBtn");
	c4.set_width(50.);
	c4.set_height(50.);
	c4.set_toggle(true);
	c4.set_icon(haxe_ui_util_Variant.fromString("assets/pieces/Defensor_White.svg"));
	c4.set_componentGroup("editModes");
	c0.addComponent(c4);
	var c5 = new haxe_ui_components_Button();
	c5.set_id("setLibWhiteModeBtn");
	c5.set_width(50.);
	c5.set_height(50.);
	c5.set_toggle(true);
	c5.set_icon(haxe_ui_util_Variant.fromString("assets/pieces/Liberator_White.svg"));
	c5.set_componentGroup("editModes");
	c0.addComponent(c5);
	var c6 = new haxe_ui_components_Button();
	c6.set_id("setDomWhiteModeBtn");
	c6.set_width(50.);
	c6.set_height(50.);
	c6.set_toggle(true);
	c6.set_icon(haxe_ui_util_Variant.fromString("assets/pieces/Dominator_White.svg"));
	c6.set_componentGroup("editModes");
	c0.addComponent(c6);
	var c7 = new haxe_ui_components_Button();
	c7.set_id("setIntWhiteModeBtn");
	c7.set_width(50.);
	c7.set_height(50.);
	c7.set_toggle(true);
	c7.set_icon(haxe_ui_util_Variant.fromString("assets/pieces/Intellector_White.svg"));
	c7.set_componentGroup("editModes");
	c0.addComponent(c7);
	var c8 = new haxe_ui_components_Button();
	c8.set_id("deleteModeBtn");
	c8.set_width(50.);
	c8.set_height(50.);
	c8.set_toggle(true);
	c8.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/analysis/delete.svg"));
	c8.set_componentGroup("editModes");
	c0.addComponent(c8);
	var c9 = new haxe_ui_components_Button();
	c9.set_id("setProgBlackModeBtn");
	c9.set_width(50.);
	c9.set_height(50.);
	c9.set_toggle(true);
	c9.set_icon(haxe_ui_util_Variant.fromString("assets/pieces/Progressor_Black.svg"));
	c9.set_componentGroup("editModes");
	c0.addComponent(c9);
	var c10 = new haxe_ui_components_Button();
	c10.set_id("setAgrBlackModeBtn");
	c10.set_width(50.);
	c10.set_height(50.);
	c10.set_toggle(true);
	c10.set_icon(haxe_ui_util_Variant.fromString("assets/pieces/Aggressor_Black.svg"));
	c10.set_componentGroup("editModes");
	c0.addComponent(c10);
	var c11 = new haxe_ui_components_Button();
	c11.set_id("setDefBlackModeBtn");
	c11.set_width(50.);
	c11.set_height(50.);
	c11.set_toggle(true);
	c11.set_icon(haxe_ui_util_Variant.fromString("assets/pieces/Defensor_Black.svg"));
	c11.set_componentGroup("editModes");
	c0.addComponent(c11);
	var c12 = new haxe_ui_components_Button();
	c12.set_id("setLibBlackModeBtn");
	c12.set_width(50.);
	c12.set_height(50.);
	c12.set_toggle(true);
	c12.set_icon(haxe_ui_util_Variant.fromString("assets/pieces/Liberator_Black.svg"));
	c12.set_componentGroup("editModes");
	c0.addComponent(c12);
	var c13 = new haxe_ui_components_Button();
	c13.set_id("setDomBlackModeBtn");
	c13.set_width(50.);
	c13.set_height(50.);
	c13.set_toggle(true);
	c13.set_icon(haxe_ui_util_Variant.fromString("assets/pieces/Dominator_Black.svg"));
	c13.set_componentGroup("editModes");
	c0.addComponent(c13);
	var c14 = new haxe_ui_components_Button();
	c14.set_id("setIntBlackModeBtn");
	c14.set_width(50.);
	c14.set_height(50.);
	c14.set_toggle(true);
	c14.set_icon(haxe_ui_util_Variant.fromString("assets/pieces/Intellector_Black.svg"));
	c14.set_componentGroup("editModes");
	c0.addComponent(c14);
	this.addComponent(c0);
	var c15 = new haxe_ui_containers_HBox();
	c15.set_id("otherOptionsHBox");
	c15.set_width(500.);
	c15.set_horizontalAlign("center");
	var c16 = new haxe_ui_components_Button();
	c16.set_id("orientationBtn");
	c16.set_width(40.);
	c16.set_height(40.);
	c16.set_styleNames("tool-button");
	c16.set_verticalAlign("center");
	c16.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/analysis/flip.svg"));
	c15.addComponent(c16);
	var c17 = new haxe_ui_components_Spacer();
	c17.set_width(5.);
	c15.addComponent(c17);
	var c18 = new haxe_ui_containers_Box();
	c18.set_percentWidth(100.);
	c18.set_verticalAlign("center");
	var c19 = new haxe_ui_components_DropDown();
	c19.set_id("turnColorStepper");
	c19.set_percentWidth(100.);
	var ds19 = new haxe_ui_data_ArrayDataSource();
	var __item = { };
	__item.text = dict_Dictionary.getPhrase(dict_Phrase.TURN_COLOR(net_shared_PieceColor.White));
	__item.id = "item";
	ds19.add(__item);
	var __item = { };
	__item.text = dict_Dictionary.getPhrase(dict_Phrase.TURN_COLOR(net_shared_PieceColor.Black));
	__item.id = "item";
	ds19.add(__item);
	c19.set_dataSource(ds19);
	c18.addComponent(c19);
	c15.addComponent(c18);
	var c20 = new haxe_ui_components_Spacer();
	c20.set_width(5.);
	c15.addComponent(c20);
	var c21 = new haxe_ui_components_Button();
	c21.set_id("importBtn");
	c21.set_width(40.);
	c21.set_height(40.);
	c21.set_styleNames("tool-button");
	c21.set_verticalAlign("center");
	c21.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/analysis/import.svg"));
	c15.addComponent(c21);
	var c22 = new haxe_ui_components_Button();
	c22.set_id("clearBtn");
	c22.set_width(40.);
	c22.set_height(40.);
	c22.set_styleNames("tool-button");
	c22.set_verticalAlign("center");
	c22.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/analysis/flush.svg"));
	c15.addComponent(c22);
	var c23 = new haxe_ui_components_Button();
	c23.set_id("resetBtn");
	c23.set_width(40.);
	c23.set_height(40.);
	c23.set_styleNames("tool-button");
	c23.set_verticalAlign("center");
	c23.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/analysis/reset.svg"));
	c15.addComponent(c23);
	var c24 = new haxe_ui_components_Button();
	c24.set_id("startBtn");
	c24.set_width(40.);
	c24.set_height(40.);
	c24.set_styleNames("tool-button");
	c24.set_verticalAlign("center");
	c24.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/analysis/initial.svg"));
	c15.addComponent(c24);
	this.addComponent(c15);
	var c25 = new haxe_ui_containers_HBox();
	c25.set_horizontalAlign("center");
	var c26 = new haxe_ui_components_Button();
	c26.set_id("applyChangesBtn");
	c26.set_verticalAlign("center");
	c25.addComponent(c26);
	var c27 = new haxe_ui_components_Spacer();
	c27.set_width(5.);
	c25.addComponent(c27);
	var c28 = new haxe_ui_components_Button();
	c28.set_id("discardChangesBtn");
	c28.set_verticalAlign("center");
	c25.addComponent(c28);
	this.addComponent(c25);
	this.set_percentWidth(100.);
	this.set_styleString("spacing:5px;padding-top:10px;padding-bottom:10px");
	this.bindingRoot = true;
	this.turnColorStepper = c19;
	this.startBtn = c24;
	this.setProgWhiteModeBtn = c2;
	this.setProgBlackModeBtn = c9;
	this.setLibWhiteModeBtn = c5;
	this.setLibBlackModeBtn = c12;
	this.setIntWhiteModeBtn = c7;
	this.setIntBlackModeBtn = c14;
	this.setDomWhiteModeBtn = c6;
	this.setDomBlackModeBtn = c13;
	this.setDefWhiteModeBtn = c4;
	this.setDefBlackModeBtn = c11;
	this.setAgrWhiteModeBtn = c3;
	this.setAgrBlackModeBtn = c10;
	this.resetBtn = c23;
	this.otherOptionsHBox = c15;
	this.orientationBtn = c16;
	this.moveModeBtn = c1;
	this.importBtn = c21;
	this.editModesGrid = c0;
	this.discardChangesBtn = c28;
	this.deleteModeBtn = c8;
	this.clearBtn = c22;
	this.applyChangesBtn = c26;
	c16.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.ANALYSIS_FLIP_BOARD_BTN_TOOLTIP));
	c21.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.ANALYSIS_IMPORT_BTN_TOOLTIP));
	c22.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.ANALYSIS_CLEAR_BTN_TOOLTIP));
	c23.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.ANALYSIS_RESET_BTN_TOOLTIP));
	c24.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.ANALYSIS_TO_STARTPOS_BTN_TOOLTIP));
	c26.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.ANALYSIS_APPLY_CHANGES_BTN_TEXT)));
	c28.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.ANALYSIS_DISCARD_CHANGES_BTN_TEXT)));
	this.eventHandler = eventHandler;
	var _g = new haxe_ds_EnumValueMap();
	_g.set(gfx_analysis_PosEditMode.Move,this.moveModeBtn);
	_g.set(gfx_analysis_PosEditMode.Set(net_shared_PieceType.Progressor,net_shared_PieceColor.White),this.setProgWhiteModeBtn);
	_g.set(gfx_analysis_PosEditMode.Set(net_shared_PieceType.Aggressor,net_shared_PieceColor.White),this.setAgrWhiteModeBtn);
	_g.set(gfx_analysis_PosEditMode.Set(net_shared_PieceType.Defensor,net_shared_PieceColor.White),this.setDefWhiteModeBtn);
	_g.set(gfx_analysis_PosEditMode.Set(net_shared_PieceType.Liberator,net_shared_PieceColor.White),this.setLibWhiteModeBtn);
	_g.set(gfx_analysis_PosEditMode.Set(net_shared_PieceType.Dominator,net_shared_PieceColor.White),this.setDomWhiteModeBtn);
	_g.set(gfx_analysis_PosEditMode.Set(net_shared_PieceType.Intellector,net_shared_PieceColor.White),this.setIntWhiteModeBtn);
	_g.set(gfx_analysis_PosEditMode.Delete,this.deleteModeBtn);
	_g.set(gfx_analysis_PosEditMode.Set(net_shared_PieceType.Progressor,net_shared_PieceColor.Black),this.setProgBlackModeBtn);
	_g.set(gfx_analysis_PosEditMode.Set(net_shared_PieceType.Aggressor,net_shared_PieceColor.Black),this.setAgrBlackModeBtn);
	_g.set(gfx_analysis_PosEditMode.Set(net_shared_PieceType.Defensor,net_shared_PieceColor.Black),this.setDefBlackModeBtn);
	_g.set(gfx_analysis_PosEditMode.Set(net_shared_PieceType.Liberator,net_shared_PieceColor.Black),this.setLibBlackModeBtn);
	_g.set(gfx_analysis_PosEditMode.Set(net_shared_PieceType.Dominator,net_shared_PieceColor.Black),this.setDomBlackModeBtn);
	_g.set(gfx_analysis_PosEditMode.Set(net_shared_PieceType.Intellector,net_shared_PieceColor.Black),this.setIntBlackModeBtn);
	this.editModeBtns = _g;
	this.toolBtns = [this.orientationBtn,this.importBtn,this.clearBtn,this.resetBtn,this.startBtn];
	var map = this.editModeBtns;
	var _g1_map = map;
	var _g1_keys = map.keys();
	while(_g1_keys.hasNext()) {
		var key = _g1_keys.next();
		var _g2_value = _g1_map.get(key);
		var _g2_key = key;
		var mode = [_g2_key];
		var btn = _g2_value;
		btn.set_onClick((function(mode) {
			return function(e) {
				eventHandler(gfx_analysis_PeripheralEvent.EditModeChanged(mode[0]));
			};
		})(mode));
	}
	this.clearBtn.set_onClick(function(e) {
		eventHandler(gfx_analysis_PeripheralEvent.ClearRequested);
	});
	this.resetBtn.set_onClick(function(e) {
		eventHandler(gfx_analysis_PeripheralEvent.ResetRequested);
	});
	this.startBtn.set_onClick(function(e) {
		eventHandler(gfx_analysis_PeripheralEvent.StartPosRequested);
	});
	this.orientationBtn.set_onClick(function(e) {
		eventHandler(gfx_analysis_PeripheralEvent.OrientationChangeRequested);
	});
	var c = this.importBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onImportSIPPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "importBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.analysis.PositionEditor", methodName : "new"});
	}
	var c = this.turnColorStepper;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onTurnColorChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "turnColorStepper" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.analysis.PositionEditor", methodName : "new"});
	}
	var c = this.applyChangesBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onApplyChangesPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "applyChangesBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.analysis.PositionEditor", methodName : "new"});
	}
	var c = this.discardChangesBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onDiscardChangesPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "discardChangesBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.analysis.PositionEditor", methodName : "new"});
	}
};
$hxClasses["gfx.analysis.PositionEditor"] = gfx_analysis_PositionEditor;
gfx_analysis_PositionEditor.__name__ = "gfx.analysis.PositionEditor";
gfx_analysis_PositionEditor.__interfaces__ = [gfx_analysis_IAnalysisPeripheralEventObserver,gameboard_IGameBoardObserver];
gfx_analysis_PositionEditor.__super__ = haxe_ui_containers_VBox;
gfx_analysis_PositionEditor.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	eventHandler: null
	,renderedForWidth: null
	,renderedForHeight: null
	,editModeBtns: null
	,toolBtns: null
	,customReadyHandler: null
	,getTurnColor: function() {
		if(this.turnColorStepper.get_selectedIndex() == 0) {
			return net_shared_PieceColor.White;
		} else {
			return net_shared_PieceColor.Black;
		}
	}
	,setTurnColor: function(color) {
		this.turnColorStepper.set_selectedIndex(color == net_shared_PieceColor.White ? 0 : 1);
	}
	,onReady: function() {
		haxe_ui_containers_VBox.prototype.onReady.call(this);
		if(this.customReadyHandler != null) {
			this.customReadyHandler();
		}
		this.customReadyHandler = null;
	}
	,updateLayout: function(availableWidth,availableHeight) {
		if(this.renderedForWidth == availableWidth && this.renderedForHeight == availableHeight) {
			return false;
		}
		var spacing = 5;
		var padding = 10;
		var wideModeBtnHeight = (availableWidth - spacing * 6) / 7;
		var wideModeFullHeight = wideModeBtnHeight * 4 + spacing * 3 + padding * 2;
		var btnSide = wideModeFullHeight <= availableHeight ? wideModeBtnHeight : (availableHeight - spacing * 3 - padding * 2) / 4;
		var map = this.editModeBtns;
		var _g_map = map;
		var _g_keys = map.keys();
		while(_g_keys.hasNext()) {
			var key = _g_keys.next();
			var _g1_value = _g_map.get(key);
			var _g1_key = key;
			var mode = _g1_key;
			var btn = _g1_value;
			var icon = btn.findComponent(null,haxe_ui_components_Image);
			var iconMaxSide = 0.7 * btnSide;
			btn.set_width(btnSide);
			btn.set_height(btnSide);
			switch(mode._hx_index) {
			case 0:case 1:
				icon.set_width(iconMaxSide);
				icon.set_height(iconMaxSide);
				break;
			case 2:
				var type = mode.type;
				var color = mode.color;
				icon.set_height(gameboard_components_Piece.pieceRelativeScale(type) * iconMaxSide);
				icon.set_width(gameboard_components_Piece.pieceRelativeScale(type) * iconMaxSide);
				break;
			}
		}
		var additionalRowHeight = btnSide * 0.8;
		var _g = 0;
		var _g1 = this.toolBtns;
		while(_g < _g1.length) {
			var btn = _g1[_g];
			++_g;
			var icon = btn.findComponent(null,haxe_ui_components_Image);
			btn.set_width(additionalRowHeight);
			btn.set_height(additionalRowHeight);
			icon.set_width(additionalRowHeight);
			icon.set_height(additionalRowHeight);
		}
		this.otherOptionsHBox.set_width(btnSide * 7 + spacing * 6);
		this.turnColorStepper.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"center",null,null,null,null,additionalRowHeight / 3,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
		this.applyChangesBtn.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,additionalRowHeight / 2,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
		this.discardChangesBtn.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,additionalRowHeight / 2,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
		return true;
	}
	,onImportSIPPressed: function(e) {
		var deserializedSituation = null;
		var response = window.prompt(dict_Dictionary.getPhrase(dict_Phrase.ANALYSIS_INPUT_SIP_PROMPT_TEXT));
		if(response != null) {
			deserializedSituation = net_shared_board_Situation.deserialize(response);
		}
		if(deserializedSituation != null) {
			this.setTurnColor(deserializedSituation.turnColor);
			this.eventHandler(gfx_analysis_PeripheralEvent.ConstructSituationRequested(deserializedSituation));
		} else {
			gfx_Dialogs.alert(dict_Phrase.ANALYSIS_INVALID_SIP_WARNING_TEXT,dict_Phrase.ANALYSIS_INVALID_SIP_WARNING_TITLE);
		}
	}
	,onTurnColorChanged: function(e) {
		this.eventHandler(gfx_analysis_PeripheralEvent.TurnColorChanged(this.getTurnColor()));
	}
	,onApplyChangesPressed: function(e) {
		this.set_hidden(true);
		this.eventHandler(gfx_analysis_PeripheralEvent.ApplyChangesRequested);
	}
	,onDiscardChangesPressed: function(e) {
		this.set_hidden(true);
		this.eventHandler(gfx_analysis_PeripheralEvent.DiscardChangesRequested);
	}
	,handleAnalysisPeripheralEvent: function(event) {
		if(event._hx_index == 11) {
			this.moveModeBtn.set_selected(true);
			this.set_hidden(false);
		}
	}
	,handleGameBoardEvent: function(event) {
		switch(event._hx_index) {
		case 0:
			var _g = event.ply;
			var _g = event.plyStr;
			var performedBy = event.performedBy;
			this.setTurnColor(performedBy == net_shared_PieceColor.White ? net_shared_PieceColor.Black : net_shared_PieceColor.White);
			break;
		case 1:
			var _g = event.plyStr;
			var performedBy = event.performedBy;
			this.setTurnColor(performedBy == net_shared_PieceColor.White ? net_shared_PieceColor.Black : net_shared_PieceColor.White);
			break;
		case 2:
			var _g = event.ply;
			var _g = event.plyStr;
			var _g = event.droppedMovesCount;
			var performedBy = event.performedBy;
			this.setTurnColor(performedBy == net_shared_PieceColor.White ? net_shared_PieceColor.Black : net_shared_PieceColor.White);
			break;
		case 3:
			break;
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_eventHandler: null
	,self: function() {
		return new gfx_analysis_PositionEditor(this._constructorParam_eventHandler);
	}
	,turnColorStepper: null
	,startBtn: null
	,setProgWhiteModeBtn: null
	,setProgBlackModeBtn: null
	,setLibWhiteModeBtn: null
	,setLibBlackModeBtn: null
	,setIntWhiteModeBtn: null
	,setIntBlackModeBtn: null
	,setDomWhiteModeBtn: null
	,setDomBlackModeBtn: null
	,setDefWhiteModeBtn: null
	,setDefBlackModeBtn: null
	,setAgrWhiteModeBtn: null
	,setAgrBlackModeBtn: null
	,resetBtn: null
	,otherOptionsHBox: null
	,orientationBtn: null
	,moveModeBtn: null
	,importBtn: null
	,editModesGrid: null
	,discardChangesBtn: null
	,deleteModeBtn: null
	,clearBtn: null
	,applyChangesBtn: null
	,__class__: gfx_analysis_PositionEditor
});
var haxe_ui_core_IValueComponent = function() { };
$hxClasses["haxe.ui.core.IValueComponent"] = haxe_ui_core_IValueComponent;
haxe_ui_core_IValueComponent.__name__ = "haxe.ui.core.IValueComponent";
haxe_ui_core_IValueComponent.__isInterface__ = true;
haxe_ui_core_IValueComponent.prototype = {
	get_value: null
	,set_value: null
	,__class__: haxe_ui_core_IValueComponent
	,__properties__: {set_value:"set_value",get_value:"get_value"}
};
var haxe_ui_focus_IFocusable = function() { };
$hxClasses["haxe.ui.focus.IFocusable"] = haxe_ui_focus_IFocusable;
haxe_ui_focus_IFocusable.__name__ = "haxe.ui.focus.IFocusable";
haxe_ui_focus_IFocusable.__isInterface__ = true;
haxe_ui_focus_IFocusable.prototype = {
	get_focus: null
	,set_focus: null
	,get_allowFocus: null
	,set_allowFocus: null
	,get_disabled: null
	,set_disabled: null
	,__class__: haxe_ui_focus_IFocusable
	,__properties__: {set_disabled:"set_disabled",get_disabled:"get_disabled",set_allowFocus:"set_allowFocus",get_allowFocus:"get_allowFocus",set_focus:"set_focus",get_focus:"get_focus"}
};
var haxe_ui_core_InteractiveComponent = function() {
	this._allowFocus = true;
	this._focus = false;
	this.actionRepeatInterval = 100;
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.core.InteractiveComponent"] = haxe_ui_core_InteractiveComponent;
haxe_ui_core_InteractiveComponent.__name__ = "haxe.ui.core.InteractiveComponent";
haxe_ui_core_InteractiveComponent.__interfaces__ = [haxe_ui_core_IValueComponent,haxe_ui_focus_IFocusable];
haxe_ui_core_InteractiveComponent.__super__ = haxe_ui_core_Component;
haxe_ui_core_InteractiveComponent.prototype = $extend(haxe_ui_core_Component.prototype,{
	actionRepeatInterval: null
	,_focus: null
	,get_focus: function() {
		return this._focus;
	}
	,set_focus: function(value) {
		if(this._focus == value || this.get_allowFocus() == false) {
			return value;
		}
		this._focus = value;
		var eventType = null;
		if(this._focus == true) {
			eventType = "focusin";
			haxe_ui_focus_FocusManager.get_instance().set_focus(js_Boot.__cast(this , haxe_ui_focus_IFocusable));
			var scrollview = this.findScroller();
			if(scrollview != null) {
				scrollview.ensureVisible(this);
			}
		} else {
			eventType = "focusout";
			haxe_ui_focus_FocusManager.get_instance().set_focus(null);
		}
		this.invalidateComponent("data",false);
		this.dispatch(new haxe_ui_events_FocusEvent(eventType));
		return value;
	}
	,_allowFocus: null
	,get_allowFocus: function() {
		return this._allowFocus;
	}
	,set_allowFocus: function(value) {
		if(this._allowFocus == value) {
			return value;
		}
		this._allowFocus = value;
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(js_Boot.__implements(child,haxe_ui_focus_IFocusable)) {
				(js_Boot.__cast(child , haxe_ui_focus_IFocusable)).set_allowFocus(value);
			}
		}
		return value;
	}
	,findScroller: function() {
		var view = null;
		var ref = this;
		while(ref != null) {
			if(js_Boot.__implements(ref,haxe_ui_core_IScrollView)) {
				view = js_Boot.__cast(ref , haxe_ui_core_IScrollView);
				break;
			}
			ref = ref.parentComponent;
		}
		return view;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("allowInteraction",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(true));
	}
	,get_allowInteraction: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("allowInteraction"));
	}
	,set_allowInteraction: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("allowInteraction",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"allowInteraction"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		c.set_allowInteraction(this.get_allowInteraction());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_core_InteractiveComponent();
	}
	,__class__: haxe_ui_core_InteractiveComponent
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_allowInteraction:"set_allowInteraction",get_allowInteraction:"get_allowInteraction",set_allowFocus:"set_allowFocus",get_allowFocus:"get_allowFocus",set_focus:"set_focus",get_focus:"get_focus"})
});
var haxe_ui_core_IScrollView = function() { };
$hxClasses["haxe.ui.core.IScrollView"] = haxe_ui_core_IScrollView;
haxe_ui_core_IScrollView.__name__ = "haxe.ui.core.IScrollView";
haxe_ui_core_IScrollView.__isInterface__ = true;
haxe_ui_core_IScrollView.prototype = {
	ensureVisible: null
	,__class__: haxe_ui_core_IScrollView
};
var haxe_ui_containers_ScrollView = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.containers.ScrollView"] = haxe_ui_containers_ScrollView;
haxe_ui_containers_ScrollView.__name__ = "haxe.ui.containers.ScrollView";
haxe_ui_containers_ScrollView.__interfaces__ = [haxe_ui_core_IScrollView];
haxe_ui_containers_ScrollView.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_containers_ScrollView.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	ensureVisible: function(component) {
		if(this.behaviours == null) {
			return;
		}
		this.behaviours.call("ensureVisible",component);
	}
	,validateComponentInternal: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this.get_native() == true) {
			haxe_ui_core_InteractiveComponent.prototype.validateComponentInternal.call(this,nextFrame);
			return;
		}
		var scrollInvalid = this.isComponentInvalid("scroll");
		var layoutInvalid = this.isComponentInvalid("layout");
		haxe_ui_core_InteractiveComponent.prototype.validateComponentInternal.call(this,nextFrame);
		if(scrollInvalid || layoutInvalid) {
			(js_Boot.__cast(this._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).checkScrolls();
			(js_Boot.__cast(this._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).updateScrollRect();
		}
	}
	,get_isScroller: function() {
		return true;
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("virtual",haxe_ui_containers__$ScrollView_Virtual);
		this.behaviours.register("contentLayoutName",haxe_ui_containers__$ScrollView_ContentLayoutName,haxe_ui_util_Variant.fromString("vertical"));
		this.behaviours.register("contentWidth",haxe_ui_containers__$ScrollView_ContentWidth);
		this.behaviours.register("percentContentWidth",haxe_ui_containers__$ScrollView_PercentContentWidth);
		this.behaviours.register("contentHeight",haxe_ui_containers__$ScrollView_ContentHeight);
		this.behaviours.register("percentContentHeight",haxe_ui_containers__$ScrollView_PercentContentHeight);
		this.behaviours.register("hscrollPos",haxe_ui_containers__$ScrollView_HScrollPos);
		this.behaviours.register("hscrollMax",haxe_ui_containers__$ScrollView_HScrollMax);
		this.behaviours.register("hscrollPageSize",haxe_ui_containers__$ScrollView_HScrollPageSize);
		this.behaviours.register("hscrollThumbSize",haxe_ui_containers__$ScrollView_HScrollThumbSize);
		this.behaviours.register("vscrollPos",haxe_ui_containers__$ScrollView_VScrollPos);
		this.behaviours.register("vscrollMax",haxe_ui_containers__$ScrollView_VScrollMax);
		this.behaviours.register("vscrollPageSize",haxe_ui_containers__$ScrollView_VScrollPageSize);
		this.behaviours.register("vscrollThumbSize",haxe_ui_containers__$ScrollView_VScrollThumbSize);
		this.behaviours.register("thumbSize",haxe_ui_containers__$ScrollView_ThumbSize);
		this.behaviours.register("scrollMode",haxe_ui_containers__$ScrollView_ScrollModeBehaviour,haxe_ui_util_Variant.fromString("drag"));
		this.behaviours.register("scrollPolicy",haxe_ui_containers__$ScrollView_ScrollPolicyBehaviour);
		this.behaviours.register("horizontalScrollPolicy",haxe_ui_containers__$ScrollView_HScrollPolicyBehaviour);
		this.behaviours.register("verticalScrollPolicy",haxe_ui_containers__$ScrollView_VScrollPolicyBehaviour);
		this.behaviours.register("contents",haxe_ui_containers__$ScrollView_GetContents);
		this.behaviours.register("autoHideScrolls",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("allowAutoScroll",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(true));
		this.behaviours.register("ensureVisible",haxe_ui_containers__$ScrollView_EnsureVisible);
	}
	,get_virtual: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("virtual"));
	}
	,set_virtual: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("virtual",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"virtual"));
		return value;
	}
	,get_contentLayoutName: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("contentLayoutName"));
	}
	,set_contentLayoutName: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"contentLayoutName",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("contentLayoutName",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"contentLayoutName"));
		return value;
	}
	,get_contentWidth: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("contentWidth"));
	}
	,set_contentWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("contentWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"contentWidth"));
		return value;
	}
	,get_percentContentWidth: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("percentContentWidth"));
	}
	,set_percentContentWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("percentContentWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"percentContentWidth"));
		return value;
	}
	,get_contentHeight: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("contentHeight"));
	}
	,set_contentHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("contentHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"contentHeight"));
		return value;
	}
	,get_percentContentHeight: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("percentContentHeight"));
	}
	,set_percentContentHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("percentContentHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"percentContentHeight"));
		return value;
	}
	,get_hscrollPos: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("hscrollPos"));
	}
	,set_hscrollPos: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("hscrollPos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"hscrollPos"));
		return value;
	}
	,get_hscrollMax: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("hscrollMax"));
	}
	,set_hscrollMax: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("hscrollMax",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"hscrollMax"));
		return value;
	}
	,get_hscrollPageSize: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("hscrollPageSize"));
	}
	,set_hscrollPageSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("hscrollPageSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"hscrollPageSize"));
		return value;
	}
	,get_hscrollThumbSize: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("hscrollThumbSize"));
	}
	,set_hscrollThumbSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("hscrollThumbSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"hscrollThumbSize"));
		return value;
	}
	,get_vscrollPos: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("vscrollPos"));
	}
	,set_vscrollPos: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("vscrollPos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"vscrollPos"));
		return value;
	}
	,get_vscrollMax: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("vscrollMax"));
	}
	,set_vscrollMax: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("vscrollMax",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"vscrollMax"));
		return value;
	}
	,get_vscrollPageSize: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("vscrollPageSize"));
	}
	,set_vscrollPageSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("vscrollPageSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"vscrollPageSize"));
		return value;
	}
	,get_vscrollThumbSize: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("vscrollThumbSize"));
	}
	,set_vscrollThumbSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("vscrollThumbSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"vscrollThumbSize"));
		return value;
	}
	,get_thumbSize: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("thumbSize"));
	}
	,set_thumbSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("thumbSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"thumbSize"));
		return value;
	}
	,get_scrollMode: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("scrollMode"));
	}
	,set_scrollMode: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("scrollMode",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"scrollMode"));
		return value;
	}
	,get_scrollPolicy: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("scrollPolicy"));
	}
	,set_scrollPolicy: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("scrollPolicy",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"scrollPolicy"));
		return value;
	}
	,get_horizontalScrollPolicy: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("horizontalScrollPolicy"));
	}
	,set_horizontalScrollPolicy: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("horizontalScrollPolicy",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"horizontalScrollPolicy"));
		return value;
	}
	,get_verticalScrollPolicy: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("verticalScrollPolicy"));
	}
	,set_verticalScrollPolicy: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("verticalScrollPolicy",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"verticalScrollPolicy"));
		return value;
	}
	,get_contents: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("contents"));
	}
	,set_contents: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("contents",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"contents"));
		return value;
	}
	,get_autoHideScrolls: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("autoHideScrolls"));
	}
	,set_autoHideScrolls: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("autoHideScrolls",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"autoHideScrolls"));
		return value;
	}
	,get_allowAutoScroll: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("allowAutoScroll"));
	}
	,set_allowAutoScroll: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("allowAutoScroll",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"allowAutoScroll"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_virtual(this.get_virtual());
		if(this.get_contentLayoutName() != null) {
			c.set_contentLayoutName(this.get_contentLayoutName());
		}
		if(this.get_contentWidth() != null) {
			c.set_contentWidth(this.get_contentWidth());
		}
		if(this.get_percentContentWidth() != null) {
			c.set_percentContentWidth(this.get_percentContentWidth());
		}
		if(this.get_contentHeight() != null) {
			c.set_contentHeight(this.get_contentHeight());
		}
		if(this.get_percentContentHeight() != null) {
			c.set_percentContentHeight(this.get_percentContentHeight());
		}
		c.set_hscrollPos(this.get_hscrollPos());
		c.set_hscrollMax(this.get_hscrollMax());
		c.set_hscrollPageSize(this.get_hscrollPageSize());
		if(this.get_hscrollThumbSize() != null) {
			c.set_hscrollThumbSize(this.get_hscrollThumbSize());
		}
		c.set_vscrollPos(this.get_vscrollPos());
		c.set_vscrollMax(this.get_vscrollMax());
		c.set_vscrollPageSize(this.get_vscrollPageSize());
		if(this.get_vscrollThumbSize() != null) {
			c.set_vscrollThumbSize(this.get_vscrollThumbSize());
		}
		if(this.get_thumbSize() != null) {
			c.set_thumbSize(this.get_thumbSize());
		}
		if(this.get_scrollMode() != null) {
			c.set_scrollMode(this.get_scrollMode());
		}
		if(this.get_scrollPolicy() != null) {
			c.set_scrollPolicy(this.get_scrollPolicy());
		}
		if(this.get_horizontalScrollPolicy() != null) {
			c.set_horizontalScrollPolicy(this.get_horizontalScrollPolicy());
		}
		if(this.get_verticalScrollPolicy() != null) {
			c.set_verticalScrollPolicy(this.get_verticalScrollPolicy());
		}
		if(this.get_contents() != null) {
			c.set_contents(this.get_contents());
		}
		c.set_autoHideScrolls(this.get_autoHideScrolls());
		c.set_allowAutoScroll(this.get_allowAutoScroll());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_ScrollView();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_ScrollViewEvents;
		this._compositeBuilderClass = haxe_ui_containers_ScrollViewBuilder;
		this._defaultLayoutClass = haxe_ui_layouts_ScrollViewLayout;
	}
	,_internal__onScroll: null
	,onScroll: null
	,set_onScroll: function(value) {
		if(this._internal__onScroll != null) {
			this.unregisterEvent("scrollscroll",this._internal__onScroll);
			this._internal__onScroll = null;
		}
		if(value != null) {
			this._internal__onScroll = value;
			this.registerEvent("scrollscroll",value);
		}
		return value;
	}
	,__class__: haxe_ui_containers_ScrollView
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_onScroll:"set_onScroll",set_allowAutoScroll:"set_allowAutoScroll",get_allowAutoScroll:"get_allowAutoScroll",set_autoHideScrolls:"set_autoHideScrolls",get_autoHideScrolls:"get_autoHideScrolls",set_contents:"set_contents",get_contents:"get_contents",set_verticalScrollPolicy:"set_verticalScrollPolicy",get_verticalScrollPolicy:"get_verticalScrollPolicy",set_horizontalScrollPolicy:"set_horizontalScrollPolicy",get_horizontalScrollPolicy:"get_horizontalScrollPolicy",set_scrollPolicy:"set_scrollPolicy",get_scrollPolicy:"get_scrollPolicy",set_scrollMode:"set_scrollMode",get_scrollMode:"get_scrollMode",set_thumbSize:"set_thumbSize",get_thumbSize:"get_thumbSize",set_vscrollThumbSize:"set_vscrollThumbSize",get_vscrollThumbSize:"get_vscrollThumbSize",set_vscrollPageSize:"set_vscrollPageSize",get_vscrollPageSize:"get_vscrollPageSize",set_vscrollMax:"set_vscrollMax",get_vscrollMax:"get_vscrollMax",set_vscrollPos:"set_vscrollPos",get_vscrollPos:"get_vscrollPos",set_hscrollThumbSize:"set_hscrollThumbSize",get_hscrollThumbSize:"get_hscrollThumbSize",set_hscrollPageSize:"set_hscrollPageSize",get_hscrollPageSize:"get_hscrollPageSize",set_hscrollMax:"set_hscrollMax",get_hscrollMax:"get_hscrollMax",set_hscrollPos:"set_hscrollPos",get_hscrollPos:"get_hscrollPos",set_percentContentHeight:"set_percentContentHeight",get_percentContentHeight:"get_percentContentHeight",set_contentHeight:"set_contentHeight",get_contentHeight:"get_contentHeight",set_percentContentWidth:"set_percentContentWidth",get_percentContentWidth:"get_percentContentWidth",set_contentWidth:"set_contentWidth",get_contentWidth:"get_contentWidth",set_contentLayoutName:"set_contentLayoutName",get_contentLayoutName:"get_contentLayoutName",set_virtual:"set_virtual",get_virtual:"get_virtual"})
});
var haxe_ui_containers_TreeView = function() {
	this._expandableItemRenderer = null;
	this._itemRenderer = new haxe_ui_core_BasicItemRenderer();
	this._dataSource = null;
	haxe_ui_containers_ScrollView.call(this);
};
$hxClasses["haxe.ui.containers.TreeView"] = haxe_ui_containers_TreeView;
haxe_ui_containers_TreeView.__name__ = "haxe.ui.containers.TreeView";
haxe_ui_containers_TreeView.__interfaces__ = [haxe_ui_core_IDataComponent];
haxe_ui_containers_TreeView.__super__ = haxe_ui_containers_ScrollView;
haxe_ui_containers_TreeView.prototype = $extend(haxe_ui_containers_ScrollView.prototype,{
	addNode: function(data) {
		return haxe_ui_util_Variant.toComponent(this.behaviours.call("addNode",data));
	}
	,removeNode: function(node) {
		return haxe_ui_util_Variant.toComponent(this.behaviours.call("removeNode",node));
	}
	,clearNodes: function() {
		if(this.behaviours == null) {
			return;
		}
		this.behaviours.call("clearNodes",null);
	}
	,getNodesInternal: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toArray(this.behaviours.call("getNodesInternal",null));
	}
	,_dataSource: null
	,get_dataSource: function() {
		if(this._dataSource == null) {
			this._dataSource = new haxe_ui_data_ArrayDataSource();
			this._dataSource.onDataSourceChange = $bind(this,this.onDataChanged);
		}
		return this._dataSource;
	}
	,set_dataSource: function(value) {
		var dataSource = value;
		if(dataSource != null) {
			this._dataSource = dataSource;
			this._dataSource.onDataSourceChange = $bind(this,this.onDataChanged);
		}
		return value;
	}
	,onDataChanged: function() {
	}
	,getNodes: function() {
		var nodes = [];
		var internalNodes = this.getNodesInternal();
		var _g = 0;
		while(_g < internalNodes.length) {
			var node = internalNodes[_g];
			++_g;
			nodes.push(node);
		}
		return nodes;
	}
	,_itemRenderer: null
	,get_itemRenderer: function() {
		return this._itemRenderer;
	}
	,set_itemRenderer: function(value) {
		if(this._itemRenderer != value) {
			this._itemRenderer = value;
		}
		return value;
	}
	,_expandableItemRenderer: null
	,get_expandableItemRenderer: function() {
		if(this._expandableItemRenderer == null) {
			return this._itemRenderer;
		}
		return this._expandableItemRenderer;
	}
	,set_expandableItemRenderer: function(value) {
		if(this._expandableItemRenderer != value) {
			this._expandableItemRenderer = value;
		}
		return value;
	}
	,findNodeByPath: function(path,field) {
		var foundNode = null;
		var parts = path.split("/");
		var part = parts.shift();
		var nodes = this.getNodes();
		var _g = 0;
		while(_g < nodes.length) {
			var node = nodes[_g];
			++_g;
			if(node.matchesPathPart(part,field)) {
				if(parts.length == 0) {
					foundNode = node;
				} else {
					foundNode = node.findNodeByPath(parts.join("/"),field);
				}
				break;
			}
		}
		return foundNode;
	}
	,registerComposite: function() {
		haxe_ui_containers_ScrollView.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers__$TreeView_TreeViewEvents;
		this._compositeBuilderClass = haxe_ui_containers__$TreeView_TreeViewBuilder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_ScrollView.prototype.registerBehaviours.call(this);
		this.behaviours.register("selectedNode",haxe_ui_containers__$TreeView_SelectedNode);
		this.behaviours.register("addNode",haxe_ui_containers__$TreeView_AddNode);
		this.behaviours.register("removeNode",haxe_ui_containers__$TreeView_RemoveNode);
		this.behaviours.register("clearNodes",haxe_ui_containers__$TreeView_ClearNodes);
		this.behaviours.register("getNodesInternal",haxe_ui_containers__$TreeView_GetNodesInternal);
	}
	,get_selectedNode: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("selectedNode"));
	}
	,set_selectedNode: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedNode",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedNode"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ScrollView.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_TreeView();
	}
	,__class__: haxe_ui_containers_TreeView
	,__properties__: $extend(haxe_ui_containers_ScrollView.prototype.__properties__,{set_selectedNode:"set_selectedNode",get_selectedNode:"get_selectedNode",set_expandableItemRenderer:"set_expandableItemRenderer",get_expandableItemRenderer:"get_expandableItemRenderer",set_itemRenderer:"set_itemRenderer",get_itemRenderer:"get_itemRenderer",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource"})
});
var gfx_analysis_VariantOutline = function(variant,selectedNodePath) {
	this.stopClickCapture = false;
	this.selectedMove = 0;
	this.selectedBranch = [];
	var _gthis = this;
	haxe_ui_containers_TreeView.call(this);
	this.variantRef = new struct_Variant(variant.startingSituation);
	this.set_percentWidth(100);
	this.set_percentHeight(100);
	this.rootNode = this.addNode({ text : dict_Dictionary.getPhrase(dict_Phrase.OPENING_STARTING_POSITION), code : ""});
	this.rootNode.set_onClick(function(e) {
		var _g = $bind(_gthis,_gthis.onNodeChanged);
		var treeNode = _gthis.rootNode;
		haxe_Timer.delay(function() {
			_g(treeNode);
		},50);
	});
	var _g_current = 0;
	var _g_array = variant.children;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var i = _g1_key;
		var child = _g1_value;
		this.addRec(this.rootNode,child);
	}
	if(selectedNodePath != null) {
		this.selectBranchUnsafe(variant.extendPathLeftmost(selectedNodePath),struct_VariantPath.get_length(selectedNodePath));
	} else {
		var branch = variant.getLastMainLineDescendantPath([]);
		this.selectBranchUnsafe(branch,struct_VariantPath.get_length(branch));
	}
	this.variantRef = variant;
};
$hxClasses["gfx.analysis.VariantOutline"] = gfx_analysis_VariantOutline;
gfx_analysis_VariantOutline.__name__ = "gfx.analysis.VariantOutline";
gfx_analysis_VariantOutline.__interfaces__ = [gfx_analysis_IVariantView];
gfx_analysis_VariantOutline.__super__ = haxe_ui_containers_TreeView;
gfx_analysis_VariantOutline.prototype = $extend(haxe_ui_containers_TreeView.prototype,{
	variantRef: null
	,rootNode: null
	,eventHandler: null
	,selectedBranch: null
	,selectedMove: null
	,getSelectedNode: function() {
		return struct_VariantPath.subpath(this.selectedBranch,this.selectedMove);
	}
	,addRec: function(parentTreeNode,node) {
		var childNode = this.addChildToSpecificNode(parentTreeNode,node.ply,false);
		var _g = 0;
		var _g1 = node.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			this.addRec(childNode,child);
		}
	}
	,selectBranchUnsafe: function(fullBranch,selectUpToMove) {
		this.selectedBranch = struct_VariantPath.copy(fullBranch);
		this.selectedMove = selectUpToMove;
		this.refreshSelection();
	}
	,refreshSelection: function() {
		if(this.selectedMove > 0) {
			var selectedPathStr = struct_VariantPath.asArray(struct_VariantPath.subpath(this.selectedBranch,this.selectedMove)).join("/");
			this.rootNode.findNodeByPath(selectedPathStr).set_selected(true);
		} else {
			this.rootNode.set_selected(true);
		}
	}
	,init: function(eventHandler) {
		this.eventHandler = eventHandler;
	}
	,clear: function(newStartingSituation) {
		this.rootNode.clearNodes();
		this.variantRef.clear(newStartingSituation);
	}
	,addChildToSpecificNode: function(parentNode,ply,selectChild) {
		parentNode.set_expanded(true);
		var parentPath = struct_VariantPath.fromCode(parentNode.get_data().code);
		var contextSituation = this.variantRef.getSituationByPath(parentPath);
		var plyNum = this.variantRef.startingSituation.turnColor == net_shared_PieceColor.White ? struct_VariantPath.get_length(parentPath) + 1 : struct_VariantPath.get_length(parentPath) + 2;
		var text = plyNum + ". " + ply.toNotation(contextSituation,false);
		var childNum = this.variantRef.childCount(parentPath);
		var childPath = struct_VariantPath.child(parentPath,childNum);
		var childNode = parentNode.addNode({ text : text, code : struct_VariantPath.code(childPath), nodeId : "" + childNum});
		var _g = $bind(this,this.onNodeClicked);
		var treeNode = childNode;
		childNode.set_onClick(function(e) {
			_g(treeNode,e);
		});
		if(selectChild) {
			this.selectBranchUnsafe(childPath,struct_VariantPath.get_length(childPath));
		}
		this.variantRef.addChildToNode(ply,parentPath);
		return childNode;
	}
	,addChildNode: function(parentPath,ply,selectChild) {
		this.addChildToSpecificNode(this.rootNode.findNodeByPath(struct_VariantPath.asArray(parentPath).join("/")),ply,selectChild);
	}
	,addChildToSelectedNode: function(ply,selectChild) {
		this.addChildToSpecificNode(this.get_selectedNode() == null ? this.rootNode : this.get_selectedNode(),ply,selectChild);
	}
	,onNodeChanged: function(treeNode) {
		var nodePath = struct_VariantPath.fromCode(treeNode.get_data().code);
		if(treeNode.get_selected()) {
			this.selectedMove = struct_VariantPath.get_length(nodePath);
			if(struct_VariantPath.contains(this.selectedBranch,nodePath)) {
				this.eventHandler(gfx_analysis_PeripheralEvent.ScrollBtnPressed(gfx_utils_PlyScrollType.Precise(this.selectedMove)));
			} else {
				this.selectedBranch = this.variantRef.extendPathLeftmost(nodePath);
				var branch = this.variantRef.getBranchByPath(this.selectedBranch);
				var branchStr = this.variantRef.getBranchNotationByPath(this.selectedBranch);
				this.eventHandler(gfx_analysis_PeripheralEvent.BranchSelected(branch,branchStr,this.selectedMove));
			}
		}
	}
	,stopClickCapture: null
	,onNodeClicked: function(treeNode,e) {
		var _gthis = this;
		if(this.stopClickCapture) {
			return;
		}
		this.stopClickCapture = true;
		if(e.ctrlKey) {
			this.removeSpecificNode(treeNode);
		} else {
			var _g = $bind(this,this.onNodeChanged);
			var treeNode1 = treeNode;
			haxe_Timer.delay(function() {
				_g(treeNode1);
			},50);
		}
		haxe_Timer.delay(function() {
			_gthis.stopClickCapture = false;
		},20);
	}
	,removeNodeByPath: function(path) {
		this.removeSpecificNode(this.rootNode.findNodeByPath(struct_VariantPath.asArray(path).join("/")));
	}
	,removeSpecificNode: function(treeNode) {
		var nodePath = struct_VariantPath.fromCode(treeNode.get_data().code);
		if(struct_VariantPath.isRoot(nodePath)) {
			return;
		}
		if(struct_VariantPath.contains(this.selectedBranch,nodePath)) {
			var parentPath = struct_VariantPath.parent(nodePath);
			var newSelectedBranch;
			if(this.variantRef.childCount(parentPath) == 1) {
				newSelectedBranch = parentPath;
			} else if(struct_VariantPath.lastNodeNum(nodePath) == 0) {
				newSelectedBranch = this.variantRef.extendPathLeftmost(struct_VariantPath.child(parentPath,1));
			} else {
				newSelectedBranch = this.variantRef.extendPathLeftmost(struct_VariantPath.child(parentPath,0));
			}
			this.selectBranchUnsafe(newSelectedBranch,struct_VariantPath.get_length(parentPath));
			var branch = this.variantRef.getBranchByPath(this.selectedBranch);
			var branchStr = this.variantRef.getBranchNotationByPath(this.selectedBranch);
			this.eventHandler(gfx_analysis_PeripheralEvent.BranchSelected(branch,branchStr,this.selectedMove));
		} else {
			this.refreshSelection();
		}
		treeNode.parentNode.removeNode(treeNode);
		var nodesToRemap = [];
		var remapSelectedBranch = false;
		var rightSiblingsPaths = this.variantRef.getRightSiblingsPaths(nodePath,false);
		var _g = 0;
		while(_g < rightSiblingsPaths.length) {
			var rsPath = rightSiblingsPaths[_g];
			++_g;
			var _g1 = 0;
			var _g2 = this.variantRef.getFamilyPaths(rsPath);
			while(_g1 < _g2.length) {
				var oldPath = _g2[_g1];
				++_g1;
				nodesToRemap.push(this.rootNode.findNodeByPath(struct_VariantPath.asArray(oldPath).join("/")));
				if(struct_VariantPath.equals(this.selectedBranch,oldPath)) {
					remapSelectedBranch = true;
				}
			}
		}
		var _g = 0;
		while(_g < nodesToRemap.length) {
			var node = nodesToRemap[_g];
			++_g;
			var newPath = struct_VariantPath.fromCode(node.get_data().code);
			var tmp = struct_VariantPath.asArray(newPath);
			var tmp1 = struct_VariantPath.get_length(nodePath) - 1;
			tmp[tmp1]--;
			node.get_data().code = struct_VariantPath.code(newPath);
			if(struct_VariantPath.get_length(newPath) == struct_VariantPath.get_length(nodePath)) {
				var tmp2 = struct_VariantPath.lastNodeNum(newPath);
				node.get_data().nodeId = "" + tmp2;
			}
		}
		if(remapSelectedBranch) {
			var tmp = struct_VariantPath.asArray(this.selectedBranch);
			var tmp1 = struct_VariantPath.get_length(nodePath) - 1;
			tmp[tmp1]--;
		}
		this.variantRef.removeNode(nodePath);
	}
	,handlePlyScrolling: function(type) {
		switch(type._hx_index) {
		case 0:
			this.selectBranchUnsafe(this.selectedBranch,0);
			break;
		case 1:
			if(this.selectedMove > 0) {
				this.selectBranchUnsafe(this.selectedBranch,this.selectedMove - 1);
			}
			break;
		case 2:
			if(this.selectedMove < struct_VariantPath.get_length(this.selectedBranch)) {
				this.selectBranchUnsafe(this.selectedBranch,this.selectedMove + 1);
			}
			break;
		case 3:
			this.selectBranchUnsafe(this.selectedBranch,struct_VariantPath.get_length(this.selectedBranch));
			break;
		case 4:
			var plyNum = type.plyNum;
			this.selectBranchUnsafe(this.selectedBranch,plyNum);
			break;
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_TreeView.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_TreeView.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_variant: null
	,_constructorParam_selectedNodePath: null
	,self: function() {
		return new gfx_analysis_VariantOutline(this._constructorParam_variant,this._constructorParam_selectedNodePath);
	}
	,__class__: gfx_analysis_VariantOutline
});
var gfx_analysis__$VariantPlainText_PlyNode = function(path,ply,onNodeSelectRequest,onNodeRemoveRequest,variantRef) {
	var _gthis = this;
	haxe_ui_components_Link.call(this);
	var parentPath = struct_VariantPath.parent(path);
	var contextSituation = variantRef.getSituationByPath(parentPath);
	var plyNum = variantRef.startingSituation.turnColor == net_shared_PieceColor.White ? struct_VariantPath.get_length(path) : struct_VariantPath.get_length(path) + 1;
	this.set_text(plyNum + ". " + ply.toNotation(contextSituation,false));
	this.set_verticalAlign("center");
	this.set_customStyle(gfx_analysis_VariantPlainText_DEFAULT_STYLE);
	this.set_onClick(function(e) {
		if(e.ctrlKey) {
			onNodeRemoveRequest(_gthis.path);
		} else {
			onNodeSelectRequest(_gthis.path);
		}
	});
	this.set_path(path);
};
$hxClasses["gfx.analysis._VariantPlainText.PlyNode"] = gfx_analysis__$VariantPlainText_PlyNode;
gfx_analysis__$VariantPlainText_PlyNode.__name__ = "gfx.analysis._VariantPlainText.PlyNode";
gfx_analysis__$VariantPlainText_PlyNode.__super__ = haxe_ui_components_Link;
gfx_analysis__$VariantPlainText_PlyNode.prototype = $extend(haxe_ui_components_Link.prototype,{
	path: null
	,set_path: function(v) {
		var newStyle = this.get_customStyle().clone();
		newStyle.fontItalic = !struct_VariantPath.isMainLine(v);
		this.set_customStyle(newStyle);
		return this.path = struct_VariantPath.copy(v);
	}
	,get_selected: function() {
		return this.get_customStyle().fontBold;
	}
	,set_selected: function(v) {
		var newStyle = this.get_customStyle().clone();
		newStyle.fontBold = v;
		this.set_customStyle(newStyle);
		return v;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Link.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Link.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_path: null
	,_constructorParam_ply: null
	,_constructorParam_onNodeSelectRequest: null
	,_constructorParam_onNodeRemoveRequest: null
	,_constructorParam_variantRef: null
	,self: function() {
		return new gfx_analysis__$VariantPlainText_PlyNode(this._constructorParam_path,this._constructorParam_ply,this._constructorParam_onNodeSelectRequest,this._constructorParam_onNodeRemoveRequest,this._constructorParam_variantRef);
	}
	,__class__: gfx_analysis__$VariantPlainText_PlyNode
	,__properties__: $extend(haxe_ui_components_Link.prototype.__properties__,{set_selected:"set_selected",get_selected:"get_selected",set_path:"set_path"})
});
var gfx_analysis_Item = $hxEnums["gfx.analysis.Item"] = { __ename__:"gfx.analysis.Item",__constructs__:null
	,LBrace: ($_=function(label) { return {_hx_index:0,label:label,__enum__:"gfx.analysis.Item",toString:$estr}; },$_._hx_name="LBrace",$_.__params__ = ["label"],$_)
	,RBrace: ($_=function(label,ownerInfo) { return {_hx_index:1,label:label,ownerInfo:ownerInfo,__enum__:"gfx.analysis.Item",toString:$estr}; },$_._hx_name="RBrace",$_.__params__ = ["label","ownerInfo"],$_)
	,Node: ($_=function(info) { return {_hx_index:2,info:info,__enum__:"gfx.analysis.Item",toString:$estr}; },$_._hx_name="Node",$_.__params__ = ["info"],$_)
};
gfx_analysis_Item.__constructs__ = [gfx_analysis_Item.LBrace,gfx_analysis_Item.RBrace,gfx_analysis_Item.Node];
gfx_analysis_Item.__empty_constructs__ = [];
var haxe_ui_containers_HBox = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_HorizontalLayout());
};
$hxClasses["haxe.ui.containers.HBox"] = haxe_ui_containers_HBox;
haxe_ui_containers_HBox.__name__ = "haxe.ui.containers.HBox";
haxe_ui_containers_HBox.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_HBox.prototype = $extend(haxe_ui_containers_Box.prototype,{
	get_continuous: function() {
		return ((this._layout) instanceof haxe_ui_layouts_HorizontalContinuousLayout);
	}
	,set_continuous: function(value) {
		if(value == true) {
			this.set_layout(new haxe_ui_layouts_HorizontalContinuousLayout());
		} else {
			this.set_layout(new haxe_ui_layouts_HorizontalLayout());
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		c.set_continuous(this.get_continuous());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_HBox();
	}
	,__class__: haxe_ui_containers_HBox
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_continuous:"set_continuous",get_continuous:"get_continuous"})
});
var gfx_analysis_VariantPlainText = function(variant,selectedNodePath) {
	this.items = [];
	this.nodeByCode = new haxe_ds_StringMap();
	this.selectedNode = null;
	this.selectedBranch = [];
	haxe_ui_containers_HBox.call(this);
	this.variantRef = new struct_Variant(variant.startingSituation);
	this.set_percentWidth(100);
	this.set_continuous(true);
	if(variant.startingSituation.turnColor == net_shared_PieceColor.Black) {
		this.addComponent(this.label("..."));
	}
	var _g_current = 0;
	var _g_array = variant.children;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var i = _g1_key;
		var child = _g1_value;
		this.addRec([],i,child);
	}
	if(selectedNodePath != null) {
		this.selectBranchUnsafe(variant.extendPathLeftmost(selectedNodePath),struct_VariantPath.get_length(selectedNodePath));
	} else {
		var branch = variant.getLastMainLineDescendantPath([]);
		this.selectBranchUnsafe(branch,struct_VariantPath.get_length(branch));
	}
	this.variantRef = variant;
};
$hxClasses["gfx.analysis.VariantPlainText"] = gfx_analysis_VariantPlainText;
gfx_analysis_VariantPlainText.__name__ = "gfx.analysis.VariantPlainText";
gfx_analysis_VariantPlainText.__interfaces__ = [gfx_analysis_IVariantView];
gfx_analysis_VariantPlainText.__super__ = haxe_ui_containers_HBox;
gfx_analysis_VariantPlainText.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	variantRef: null
	,selectedBranch: null
	,selectedNode: null
	,eventHandler: null
	,nodeByCode: null
	,items: null
	,getSelectedNode: function() {
		if(this.selectedNode == null) {
			return [];
		} else {
			return this.selectedNode.path;
		}
	}
	,init: function(eventHandler) {
		this.eventHandler = eventHandler;
	}
	,selectBranchUnsafe: function(fullBranch,selectUpToMove) {
		if(this.selectedNode != null) {
			this.selectedNode.set_selected(false);
		}
		this.selectedBranch = struct_VariantPath.copy(fullBranch);
		if(selectUpToMove == 0) {
			this.selectedNode = null;
		} else {
			var selectedCode = struct_VariantPath.code(struct_VariantPath.subpath(fullBranch,selectUpToMove));
			this.selectedNode = this.nodeByCode.h[selectedCode].node;
			this.selectedNode.set_selected(true);
		}
	}
	,onNodeSelectRequest: function(path) {
		if(struct_VariantPath.contains(this.selectedBranch,path)) {
			this.selectBranchUnsafe(this.selectedBranch,struct_VariantPath.get_length(path));
			this.eventHandler(gfx_analysis_PeripheralEvent.ScrollBtnPressed(gfx_utils_PlyScrollType.Precise(struct_VariantPath.get_length(path))));
		} else {
			var extendedPath = this.variantRef.extendPathLeftmost(path);
			var branch = this.variantRef.getBranchByPath(extendedPath);
			var branchStr = this.variantRef.getBranchNotationByPath(extendedPath);
			var pointer = struct_VariantPath.get_length(path);
			this.selectBranchUnsafe(extendedPath,struct_VariantPath.get_length(path));
			this.eventHandler(gfx_analysis_PeripheralEvent.BranchSelected(branch,branchStr,pointer));
		}
	}
	,asComponent: function(item) {
		switch(item._hx_index) {
		case 0:
			var label = item.label;
			return label;
		case 1:
			var _g = item.ownerInfo;
			var label = item.label;
			return label;
		case 2:
			var info = item.info;
			return info.node;
		}
	}
	,pack: function() {
		var itemsIndex = 0;
		var childIndex = this.variantRef.startingSituation.turnColor == net_shared_PieceColor.White ? 0 : 1;
		var itemsLength = this.items.length;
		var lastHBox = null;
		var lastNode = null;
		var rbracesLabelText = "";
		while(itemsIndex <= itemsLength) {
			var currentItem = this.items[itemsIndex];
			var tmp;
			if(rbracesLabelText != "") {
				if(itemsIndex != itemsLength) {
					var tmp1;
					if(currentItem._hx_index == 1) {
						var _g = currentItem.label;
						var _g1 = currentItem.ownerInfo;
						tmp1 = true;
					} else {
						tmp1 = false;
					}
					tmp = !tmp1;
				} else {
					tmp = true;
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				var combinedLabel = this.label(rbracesLabelText);
				if(lastHBox != null) {
					lastHBox.addComponent(combinedLabel);
				} else {
					this.removeComponent(lastNode,false);
					var hbox = new haxe_ui_containers_HBox();
					hbox.set_verticalAlign("center");
					hbox.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
					hbox.addComponent(lastNode);
					hbox.addComponent(combinedLabel);
					this.addComponentAt(hbox,childIndex - 1);
					lastNode.validateComponentStyle();
				}
				rbracesLabelText = "";
			}
			if(itemsIndex == itemsLength) {
				break;
			}
			switch(currentItem._hx_index) {
			case 0:
				var label = currentItem.label;
				var braceOwner = this.getComponentAt(childIndex + 1);
				this.removeComponent(label,false);
				this.removeComponent(braceOwner,false);
				var hbox1 = new haxe_ui_containers_HBox();
				hbox1.set_verticalAlign("center");
				hbox1.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
				hbox1.addComponent(label);
				hbox1.addComponent(braceOwner);
				this.addComponentAt(hbox1,childIndex);
				braceOwner.validateComponentStyle();
				lastHBox = hbox1;
				lastNode = null;
				++childIndex;
				itemsIndex += 2;
				break;
			case 1:
				var label1 = currentItem.label;
				var ownerInfo = currentItem.ownerInfo;
				this.removeComponent(label1);
				rbracesLabelText += ")";
				++itemsIndex;
				break;
			case 2:
				var info = currentItem.info;
				lastHBox = null;
				lastNode = info.node;
				++childIndex;
				++itemsIndex;
				break;
			}
		}
	}
	,unpack: function() {
		var childIndex = this.variantRef.startingSituation.turnColor == net_shared_PieceColor.White ? 0 : 1;
		while(childIndex < (this._children == null ? [] : this._children).length) {
			var child = this.getComponentAt(childIndex);
			if(((child) instanceof haxe_ui_containers_HBox)) {
				var hbox = js_Boot.__cast(child , haxe_ui_containers_HBox);
				var member = hbox.getComponentAt(0);
				if(!((member) instanceof gfx_analysis__$VariantPlainText_PlyNode)) {
					hbox.removeComponent(member,false);
					this.addComponentAt(member,childIndex);
					++childIndex;
					member = hbox.getComponentAt(0);
				}
				hbox.removeComponent(member,false);
				this.addComponentAt(member,childIndex);
				++childIndex;
				member = hbox.getComponentAt(0);
				if(member != null) {
					var rbraceCnt = (js_Boot.__cast(member , haxe_ui_components_Label)).get_text().length;
					var _g = 0;
					var _g1 = rbraceCnt;
					while(_g < _g1) {
						var i = _g++;
						var label = this.label(")");
						var itemIndex = this.variantRef.startingSituation.turnColor == net_shared_PieceColor.White ? childIndex : childIndex - 1;
						var _g2 = this.items[itemIndex];
						if(_g2._hx_index == 1) {
							var _g3 = _g2.label;
							var ownerInfo = _g2.ownerInfo;
							this.items[itemIndex] = gfx_analysis_Item.RBrace(label,ownerInfo);
						} else {
							throw haxe_Exception.thrown("Expected RBrace");
						}
						this.addComponentAt(label,childIndex);
						++childIndex;
					}
				}
				this.removeComponent(hbox);
			} else {
				++childIndex;
			}
		}
	}
	,clear: function(newStartingSituation) {
		this.removeAllComponents();
		this.variantRef.clear(newStartingSituation);
		if(this.variantRef.startingSituation.turnColor == net_shared_PieceColor.Black) {
			this.addComponent(this.label("..."));
		}
		this.selectedBranch = [];
		this.selectedNode = null;
		this.nodeByCode = new haxe_ds_StringMap();
		this.items = [];
	}
	,updateIndexes: function(start) {
		var _g = start;
		var _g1 = this.items.length;
		while(_g < _g1) {
			var i = _g++;
			var _g2 = this.items[i];
			switch(_g2._hx_index) {
			case 1:
				var _g3 = _g2.label;
				var ownerInfo = _g2.ownerInfo;
				ownerInfo.rbraceIndex = i;
				break;
			case 2:
				var info = _g2.info;
				info.index = i;
				break;
			default:
			}
		}
	}
	,insertNode: function(info,at,hasBraces) {
		if(hasBraces == null) {
			hasBraces = false;
		}
		var shift = this.variantRef.startingSituation.turnColor == net_shared_PieceColor.White ? 0 : 1;
		if(hasBraces) {
			var lbrace = this.label("(");
			var rbrace = this.label(")");
			info.index = at + 1;
			info.rbraceIndex = at + 2;
			this.addComponentAt(lbrace,shift + at);
			this.addComponentAt(info.node,shift + at + 1);
			this.addComponentAt(rbrace,shift + at + 2);
			this.items.splice(at,0,gfx_analysis_Item.LBrace(lbrace));
			this.items.splice(at + 1,0,gfx_analysis_Item.Node(info));
			this.items.splice(at + 2,0,gfx_analysis_Item.RBrace(rbrace,info));
			this.updateIndexes(at + 3);
		} else {
			info.index = at;
			this.addComponentAt(info.node,shift + at);
			this.items.splice(at,0,gfx_analysis_Item.Node(info));
			this.updateIndexes(at + 1);
		}
	}
	,addChildNode: function(parentPath,ply,selectChild) {
		this.unpack();
		var nodeNum = this.variantRef.childCount(parentPath);
		var nodePath = struct_VariantPath.child(parentPath,nodeNum);
		var nodeCode = struct_VariantPath.code(nodePath);
		var node = new gfx_analysis__$VariantPlainText_PlyNode(nodePath,ply,$bind(this,this.onNodeSelectRequest),$bind(this,this.removeNodeByPath),this.variantRef);
		var nodeInfo = { node : node, index : -1};
		this.nodeByCode.h[nodeCode] = nodeInfo;
		if(nodeNum > 0) {
			var leftSiblingCode = struct_VariantPath.code(struct_VariantPath.child(struct_VariantPath.parent(nodePath),nodeNum - 1));
			var leftSiblingInfo = this.nodeByCode.h[leftSiblingCode];
			if(leftSiblingInfo.rbraceIndex != null) {
				this.insertNode(nodeInfo,leftSiblingInfo.rbraceIndex + 1,true);
			} else {
				this.insertNode(nodeInfo,leftSiblingInfo.index + 1,true);
			}
		} else if(nodeCode == "0") {
			this.insertNode(nodeInfo,0);
		} else {
			var parentCode = struct_VariantPath.code(parentPath);
			var yongestAuntCode = struct_VariantPath.code(this.variantRef.getRightmostSiblingPath(parentPath));
			var insertAt;
			if(yongestAuntCode != parentCode && struct_VariantPath.lastNodeNum(parentPath) == 0) {
				insertAt = this.nodeByCode.h[yongestAuntCode].rbraceIndex + 1;
			} else {
				insertAt = this.nodeByCode.h[parentCode].index + 1;
			}
			this.insertNode(nodeInfo,insertAt);
		}
		this.variantRef.addChildToNode(ply,parentPath);
		if(selectChild) {
			this.selectBranchUnsafe(nodePath,struct_VariantPath.get_length(nodePath));
		}
		this.pack();
	}
	,addChildToSelectedNode: function(ply,selectChild) {
		var selectedPath = this.selectedNode == null ? [] : this.selectedNode.path;
		this.addChildNode(selectedPath,ply,selectChild);
	}
	,removeNodeByPath: function(path) {
		if(Lambda.empty(path)) {
			throw haxe_Exception.thrown("Cannot remove root");
		}
		if(struct_VariantPath.contains(this.selectedBranch,path)) {
			var parentPath = struct_VariantPath.parent(path);
			var newSelectedBranch;
			if(this.variantRef.childCount(parentPath) == 1) {
				newSelectedBranch = parentPath;
			} else if(struct_VariantPath.lastNodeNum(path) == 0) {
				newSelectedBranch = this.variantRef.extendPathLeftmost(struct_VariantPath.child(parentPath,1));
			} else {
				newSelectedBranch = this.variantRef.extendPathLeftmost(struct_VariantPath.child(parentPath,0));
			}
			this.selectBranchUnsafe(newSelectedBranch,struct_VariantPath.get_length(parentPath));
			var branch = this.variantRef.getBranchByPath(this.selectedBranch);
			var branchStr = this.variantRef.getBranchNotationByPath(this.selectedBranch);
			var pointer = struct_VariantPath.get_length(parentPath);
			this.eventHandler(gfx_analysis_PeripheralEvent.BranchSelected(branch,branchStr,pointer));
		}
		this.unpack();
		var this1 = this.nodeByCode;
		var key = struct_VariantPath.code(path);
		var nodeInfo = this1.h[key];
		var parentPath = struct_VariantPath.parent(path);
		var totalSiblings = this.variantRef.childCount(parentPath);
		if(nodeInfo.rbraceIndex != null) {
			var _g = 0;
			var _g1 = this.items.splice(nodeInfo.index - 1,nodeInfo.rbraceIndex - nodeInfo.index + 2);
			while(_g < _g1.length) {
				var item = _g1[_g];
				++_g;
				this.removeComponent(this.asComponent(item));
			}
		} else {
			if(this.variantRef.childCount(path) > 0) {
				var firstbornPath = struct_VariantPath.child(path,0);
				var maxChildPath = this.variantRef.getRightmostSiblingPath(this.variantRef.getLastMainLineDescendantPath(firstbornPath));
				var this1 = this.nodeByCode;
				var key = struct_VariantPath.code(firstbornPath);
				var minChild = this1.h[key];
				var this1 = this.nodeByCode;
				var key = struct_VariantPath.code(maxChildPath);
				var maxChild = this1.h[key];
				var minIndex = minChild.rbraceIndex != null ? minChild.index - 1 : minChild.index;
				var maxIndex = maxChild.rbraceIndex != null ? maxChild.rbraceIndex : maxChild.index;
				var _g = 0;
				var _g1 = this.items.splice(minIndex,maxIndex - minIndex + 1);
				while(_g < _g1.length) {
					var item = _g1[_g];
					++_g;
					this.removeComponent(this.asComponent(item));
				}
			}
			if(struct_VariantPath.lastNodeNum(path) == 0 && totalSiblings > 1) {
				var closestSiblingPath = struct_VariantPath.child(parentPath,1);
				var this1 = this.nodeByCode;
				var key = struct_VariantPath.code(closestSiblingPath);
				var closestSiblingInfo = this1.h[key];
				if(totalSiblings > 2 && this.variantRef.childCount(closestSiblingPath) > 0) {
					var this1 = this.nodeByCode;
					var key = struct_VariantPath.code(struct_VariantPath.child(parentPath,2));
					var firstRemainingSibling = this1.h[key];
					var this1 = this.nodeByCode;
					var key = struct_VariantPath.code(struct_VariantPath.child(parentPath,totalSiblings - 1));
					var lastRemainingSibling = this1.h[key];
					var shiftedPartStart = firstRemainingSibling.index - 1;
					var shiftedPartEnd = lastRemainingSibling.rbraceIndex;
					var shiftedPart = this.items.splice(shiftedPartStart,shiftedPartEnd - shiftedPartStart + 1);
					shiftedPart.reverse();
					var _g = 0;
					while(_g < shiftedPart.length) {
						var item = shiftedPart[_g];
						++_g;
						this.removeComponent(this.asComponent(item),false);
					}
					var _g = 0;
					var _g1 = this.items.splice(closestSiblingInfo.rbraceIndex,1);
					while(_g < _g1.length) {
						var item = _g1[_g];
						++_g;
						this.removeComponent(this.asComponent(item));
					}
					var insertShiftedPartAt = closestSiblingInfo.index + 1;
					var componentInsertionPosition = this.variantRef.startingSituation.turnColor == net_shared_PieceColor.White ? insertShiftedPartAt : insertShiftedPartAt + 1;
					var _g = 0;
					while(_g < shiftedPart.length) {
						var item = shiftedPart[_g];
						++_g;
						this.items.splice(insertShiftedPartAt,0,item);
						this.addComponentAt(this.asComponent(item),componentInsertionPosition);
					}
					var _g = 0;
					var _g1 = this.items.splice(closestSiblingInfo.index - 1,1);
					while(_g < _g1.length) {
						var item = _g1[_g];
						++_g;
						this.removeComponent(this.asComponent(item));
					}
				} else {
					var _g = 0;
					var _g1 = this.items.splice(closestSiblingInfo.rbraceIndex,1);
					while(_g < _g1.length) {
						var item = _g1[_g];
						++_g;
						this.removeComponent(this.asComponent(item));
					}
					var _g = 0;
					var _g1 = this.items.splice(closestSiblingInfo.index - 1,1);
					while(_g < _g1.length) {
						var item = _g1[_g];
						++_g;
						this.removeComponent(this.asComponent(item));
					}
				}
			}
			var _g = 0;
			var _g1 = this.items.splice(nodeInfo.index,1);
			while(_g < _g1.length) {
				var item = _g1[_g];
				++_g;
				this.removeComponent(this.asComponent(item));
			}
		}
		this.updateIndexes(net_shared_utils_MathUtils.maxInt(nodeInfo.index - 1,0));
		var newMap = haxe_ds_StringMap.createCopy(this.nodeByCode.h);
		var remapSelectedBranch = false;
		var rightSiblingsPaths = this.variantRef.getRightSiblingsPaths(path,false);
		var _g = 0;
		while(_g < rightSiblingsPaths.length) {
			var rsPath = rightSiblingsPaths[_g];
			++_g;
			var _g1 = 0;
			var _g2 = this.variantRef.getFamilyPaths(rsPath);
			while(_g1 < _g2.length) {
				var oldPath = _g2[_g1];
				++_g1;
				var this1 = this.nodeByCode;
				var key = struct_VariantPath.code(oldPath);
				var remappedMember = this1.h[key];
				var newPath = struct_VariantPath.copy(oldPath);
				var tmp = struct_VariantPath.asArray(newPath);
				var tmp1 = struct_VariantPath.get_length(path) - 1;
				tmp[tmp1]--;
				remappedMember.node.set_path(newPath);
				var key1 = struct_VariantPath.code(newPath);
				newMap.h[key1] = remappedMember;
				if(struct_VariantPath.equals(this.selectedBranch,oldPath)) {
					remapSelectedBranch = true;
				}
			}
		}
		this.nodeByCode = newMap;
		if(remapSelectedBranch) {
			var tmp = struct_VariantPath.asArray(this.selectedBranch);
			var tmp1 = struct_VariantPath.get_length(path) - 1;
			tmp[tmp1]--;
		}
		this.variantRef.removeNode(path);
		this.pack();
	}
	,handlePlyScrolling: function(type) {
		var plyNumber;
		switch(type._hx_index) {
		case 0:
			plyNumber = 0;
			break;
		case 1:
			plyNumber = this.selectedNode == null ? 0 : struct_VariantPath.get_length(this.selectedNode.path) - 1;
			break;
		case 2:
			plyNumber = this.selectedNode == null ? 1 : net_shared_utils_MathUtils.minInt(struct_VariantPath.get_length(this.selectedNode.path) + 1,struct_VariantPath.get_length(this.selectedBranch));
			break;
		case 3:
			plyNumber = struct_VariantPath.get_length(this.selectedBranch);
			break;
		case 4:
			var plyNum = type.plyNum;
			plyNumber = plyNum;
			break;
		}
		this.selectBranchUnsafe(this.selectedBranch,plyNumber);
	}
	,addRec: function(parentPath,childNum,node) {
		this.addChildNode(parentPath,node.ply,false);
		var _g_current = 0;
		var _g_array = node.children;
		while(_g_current < _g_array.length) {
			var _g1_value = _g_array[_g_current];
			var _g1_key = _g_current++;
			var i = _g1_key;
			var child = _g1_value;
			this.addRec(struct_VariantPath.child(parentPath,childNum),i,child);
		}
	}
	,label: function(text) {
		var b = new haxe_ui_components_Label();
		b.set_text(text);
		b.set_verticalAlign("center");
		b.set_customStyle(gfx_analysis_VariantPlainText_DEFAULT_STYLE);
		return b;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_variant: null
	,_constructorParam_selectedNodePath: null
	,self: function() {
		return new gfx_analysis_VariantPlainText(this._constructorParam_variant,this._constructorParam_selectedNodePath);
	}
	,__class__: gfx_analysis_VariantPlainText
});
var haxe_ui_styles_Style = function(left,top,autoWidth,width,percentWidth,minWidth,minPercentWidth,maxWidth,maxPercentWidth,initialWidth,initialPercentWidth,autoHeight,height,percentHeight,minHeight,minPercentHeight,maxHeight,maxPercentHeight,initialHeight,initialPercentHeight,padding,paddingTop,paddingLeft,paddingRight,paddingBottom,marginTop,marginLeft,marginRight,marginBottom,horizontalSpacing,verticalSpacing,color,backgroundColor,backgroundOpacity,backgroundColorEnd,backgroundGradientStyle,backgroundImage,backgroundImageRepeat,backgroundPositionX,backgroundPositionY,backgroundImageClipTop,backgroundImageClipLeft,backgroundImageClipBottom,backgroundImageClipRight,backgroundImageSliceTop,backgroundImageSliceLeft,backgroundImageSliceBottom,backgroundImageSliceRight,borderColor,borderTopColor,borderLeftColor,borderBottomColor,borderRightColor,borderSize,borderTopSize,borderLeftSize,borderBottomSize,borderRightSize,borderRadius,borderRadiusTopLeft,borderRadiusTopRight,borderRadiusBottomLeft,borderRadiusBottomRight,borderOpacity,borderStyle,icon,iconPosition,horizontalAlign,verticalAlign,textAlign,opacity,clip,native,fontName,fontSize,fontBold,fontUnderline,fontItalic,fontStrikeThrough,cursor,hidden,filter,backdropFilter,resource,animationName,animationOptions,mode,pointerEvents,contentType,direction,contentWidth,contentWidthPercent,contentHeight,contentHeightPercent,wordWrap,imageRendering,backgroundWidth,backgroundWidthPercent,backgroundHeight,backgroundHeightPercent,layout,borderType,hasBorder,fullBorderSize) {
	this.left = left;
	this.top = top;
	this.autoWidth = autoWidth;
	this.width = width;
	this.percentWidth = percentWidth;
	this.minWidth = minWidth;
	this.minPercentWidth = minPercentWidth;
	this.maxWidth = maxWidth;
	this.maxPercentWidth = maxPercentWidth;
	this.initialWidth = initialWidth;
	this.initialPercentWidth = initialPercentWidth;
	this.autoHeight = autoHeight;
	this.height = height;
	this.percentHeight = percentHeight;
	this.minHeight = minHeight;
	this.minPercentHeight = minPercentHeight;
	this.maxHeight = maxHeight;
	this.maxPercentHeight = maxPercentHeight;
	this.initialHeight = initialHeight;
	this.initialPercentHeight = initialPercentHeight;
	this.padding = padding;
	this.paddingTop = paddingTop;
	this.paddingLeft = paddingLeft;
	this.paddingRight = paddingRight;
	this.paddingBottom = paddingBottom;
	this.marginTop = marginTop;
	this.marginLeft = marginLeft;
	this.marginRight = marginRight;
	this.marginBottom = marginBottom;
	this.horizontalSpacing = horizontalSpacing;
	this.verticalSpacing = verticalSpacing;
	this.color = color;
	this.backgroundColor = backgroundColor;
	this.backgroundOpacity = backgroundOpacity;
	this.backgroundColorEnd = backgroundColorEnd;
	this.backgroundGradientStyle = backgroundGradientStyle;
	this.backgroundImage = backgroundImage;
	this.backgroundImageRepeat = backgroundImageRepeat;
	this.backgroundPositionX = backgroundPositionX;
	this.backgroundPositionY = backgroundPositionY;
	this.backgroundImageClipTop = backgroundImageClipTop;
	this.backgroundImageClipLeft = backgroundImageClipLeft;
	this.backgroundImageClipBottom = backgroundImageClipBottom;
	this.backgroundImageClipRight = backgroundImageClipRight;
	this.backgroundImageSliceTop = backgroundImageSliceTop;
	this.backgroundImageSliceLeft = backgroundImageSliceLeft;
	this.backgroundImageSliceBottom = backgroundImageSliceBottom;
	this.backgroundImageSliceRight = backgroundImageSliceRight;
	this.borderColor = borderColor;
	this.borderTopColor = borderTopColor;
	this.borderLeftColor = borderLeftColor;
	this.borderBottomColor = borderBottomColor;
	this.borderRightColor = borderRightColor;
	this.borderSize = borderSize;
	this.borderTopSize = borderTopSize;
	this.borderLeftSize = borderLeftSize;
	this.borderBottomSize = borderBottomSize;
	this.borderRightSize = borderRightSize;
	this.borderRadius = borderRadius;
	this.borderRadiusTopLeft = borderRadiusTopLeft;
	this.borderRadiusTopRight = borderRadiusTopRight;
	this.borderRadiusBottomLeft = borderRadiusBottomLeft;
	this.borderRadiusBottomRight = borderRadiusBottomRight;
	this.borderOpacity = borderOpacity;
	this.borderStyle = borderStyle;
	this.icon = icon;
	this.iconPosition = iconPosition;
	this.horizontalAlign = horizontalAlign;
	this.verticalAlign = verticalAlign;
	this.textAlign = textAlign;
	this.opacity = opacity;
	this.clip = clip;
	this.native = native;
	this.fontName = fontName;
	this.fontSize = fontSize;
	this.fontBold = fontBold;
	this.fontUnderline = fontUnderline;
	this.fontItalic = fontItalic;
	this.fontStrikeThrough = fontStrikeThrough;
	this.cursor = cursor;
	this.hidden = hidden;
	this.filter = filter;
	this.backdropFilter = backdropFilter;
	this.resource = resource;
	this.animationName = animationName;
	this.animationOptions = animationOptions;
	this.mode = mode;
	this.pointerEvents = pointerEvents;
	this.contentType = contentType;
	this.direction = direction;
	this.contentWidth = contentWidth;
	this.contentWidthPercent = contentWidthPercent;
	this.contentHeight = contentHeight;
	this.contentHeightPercent = contentHeightPercent;
	this.wordWrap = wordWrap;
	this.imageRendering = imageRendering;
	this.backgroundWidth = backgroundWidth;
	this.backgroundWidthPercent = backgroundWidthPercent;
	this.backgroundHeight = backgroundHeight;
	this.backgroundHeightPercent = backgroundHeightPercent;
	this.layout = layout;
	this.borderType = borderType;
	this.hasBorder = hasBorder;
	this.fullBorderSize = fullBorderSize;
};
$hxClasses["haxe.ui.styles.Style"] = haxe_ui_styles_Style;
haxe_ui_styles_Style.__name__ = "haxe.ui.styles.Style";
haxe_ui_styles_Style.prototype = {
	left: null
	,top: null
	,autoWidth: null
	,width: null
	,percentWidth: null
	,minWidth: null
	,minPercentWidth: null
	,maxWidth: null
	,maxPercentWidth: null
	,initialWidth: null
	,initialPercentWidth: null
	,autoHeight: null
	,height: null
	,percentHeight: null
	,minHeight: null
	,minPercentHeight: null
	,maxHeight: null
	,maxPercentHeight: null
	,initialHeight: null
	,initialPercentHeight: null
	,padding: null
	,paddingTop: null
	,paddingLeft: null
	,paddingRight: null
	,paddingBottom: null
	,set_padding: function(value) {
		this.paddingTop = value;
		this.paddingLeft = value;
		this.paddingRight = value;
		this.paddingBottom = value;
		return value;
	}
	,marginTop: null
	,marginLeft: null
	,marginRight: null
	,marginBottom: null
	,horizontalSpacing: null
	,verticalSpacing: null
	,color: null
	,backgroundColor: null
	,backgroundOpacity: null
	,backgroundColorEnd: null
	,backgroundGradientStyle: null
	,backgroundImage: null
	,backgroundImageRepeat: null
	,backgroundPositionX: null
	,backgroundPositionY: null
	,backgroundImageClipTop: null
	,backgroundImageClipLeft: null
	,backgroundImageClipBottom: null
	,backgroundImageClipRight: null
	,backgroundImageSliceTop: null
	,backgroundImageSliceLeft: null
	,backgroundImageSliceBottom: null
	,backgroundImageSliceRight: null
	,borderColor: null
	,borderTopColor: null
	,borderLeftColor: null
	,borderBottomColor: null
	,borderRightColor: null
	,borderSize: null
	,borderTopSize: null
	,borderLeftSize: null
	,borderBottomSize: null
	,borderRightSize: null
	,borderRadius: null
	,borderRadiusTopLeft: null
	,borderRadiusTopRight: null
	,borderRadiusBottomLeft: null
	,borderRadiusBottomRight: null
	,borderOpacity: null
	,borderStyle: null
	,icon: null
	,iconPosition: null
	,horizontalAlign: null
	,verticalAlign: null
	,textAlign: null
	,opacity: null
	,clip: null
	,native: null
	,fontName: null
	,fontSize: null
	,fontBold: null
	,fontUnderline: null
	,fontItalic: null
	,fontStrikeThrough: null
	,cursor: null
	,hidden: null
	,filter: null
	,backdropFilter: null
	,resource: null
	,animationName: null
	,animationOptions: null
	,mode: null
	,pointerEvents: null
	,contentType: null
	,direction: null
	,contentWidth: null
	,contentWidthPercent: null
	,contentHeight: null
	,contentHeightPercent: null
	,wordWrap: null
	,imageRendering: null
	,backgroundWidth: null
	,backgroundWidthPercent: null
	,backgroundHeight: null
	,backgroundHeightPercent: null
	,layout: null
	,borderType: null
	,get_borderType: function() {
		var t = haxe_ui_styles_StyleBorderType.Compound;
		if(this.borderLeftSize != null && this.borderLeftSize > 0 && this.borderLeftSize == this.borderRightSize && this.borderLeftSize == this.borderBottomSize && this.borderLeftSize == this.borderTopSize) {
			t = haxe_ui_styles_StyleBorderType.Full;
		} else if((this.borderLeftSize == null || this.borderLeftSize <= 0) && (this.borderRightSize == null || this.borderRightSize <= 0) && (this.borderBottomSize == null || this.borderRightSize <= 0) && (this.borderTopSize == null || this.borderTopSize <= 0)) {
			t = haxe_ui_styles_StyleBorderType.None;
		}
		return t;
	}
	,hasBorder: null
	,get_hasBorder: function() {
		return this.get_borderType() != haxe_ui_styles_StyleBorderType.None;
	}
	,fullBorderSize: null
	,get_fullBorderSize: function() {
		if(this.get_borderType() == haxe_ui_styles_StyleBorderType.Full) {
			return this.borderLeftSize;
		}
		return 0;
	}
	,mergeDirectives: function(map) {
		var h = map.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			var v = map.h[key];
			switch(key) {
			case "animation-delay":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.delay = haxe_ui_styles_ValueTools.time(v.value);
				break;
			case "animation-direction":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.direction = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "animation-duration":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.duration = haxe_ui_styles_ValueTools.time(v.value);
				break;
			case "animation-fill-mode":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.fillMode = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "animation-iteration-count":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				var _g = v.value;
				var tmp;
				if(_g._hx_index == 6) {
					var val = _g.v;
					tmp = val == "infinite" ? -1 : 0;
				} else {
					tmp = haxe_ui_styles_ValueTools.int(v.value);
				}
				this.animationOptions.iterationCount = tmp;
				break;
			case "animation-name":
				this.animationName = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "animation-timing-function":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.easingFunction = haxe_ui_styles_ValueTools.calcEasing(v.value);
				break;
			case "backdrop-filter":
				var _g1 = v.value;
				switch(_g1._hx_index) {
				case 5:
					var f = _g1.f;
					var vl = _g1.vl;
					var arr = haxe_ui_styles_ValueTools.array(vl);
					arr.splice(0,0,f);
					this.backdropFilter = [haxe_ui_filters_FilterParser.parseFilter(arr)];
					break;
				case 6:
					var f1 = _g1.v;
					this.backdropFilter = [haxe_ui_filters_FilterParser.parseFilter([f1])];
					break;
				case 9:
					this.backdropFilter = null;
					break;
				default:
				}
				break;
			case "background-color":
				var _g2 = v.value;
				this.backgroundColor = haxe_ui_styles_ValueTools.int(v.value);
				if(Object.prototype.hasOwnProperty.call(map.h,"background-color-end")) {
					this.backgroundColorEnd = haxe_ui_styles_ValueTools.int(map.h["background-color-end"].value);
				} else {
					this.backgroundColorEnd = null;
				}
				break;
			case "background-color-end":
				this.backgroundColorEnd = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "background-gradient-style":
				this.backgroundGradientStyle = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "background-height":
				this.backgroundHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.backgroundHeightPercent = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "background-image":
				this.backgroundImage = haxe_ui_styles_ValueTools.variant(v.value);
				break;
			case "background-image-clip-bottom":
				this.backgroundImageClipBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-clip-left":
				this.backgroundImageClipLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-clip-right":
				this.backgroundImageClipRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-clip-top":
				this.backgroundImageClipTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-repeat":
				this.backgroundImageRepeat = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "background-image-slice-bottom":
				this.backgroundImageSliceBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-slice-left":
				this.backgroundImageSliceLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-slice-right":
				this.backgroundImageSliceRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-slice-top":
				this.backgroundImageSliceTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-opacity":
				this.backgroundOpacity = haxe_ui_styles_ValueTools.float(v.value);
				break;
			case "background-position-x":
				this.backgroundPositionX = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-position-y":
				this.backgroundPositionY = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-width":
				this.backgroundWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.backgroundWidthPercent = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "border-bottom-color":
				this.borderBottomColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-bottom-left-radius":
				this.borderRadiusBottomLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-bottom-right-radius":
				this.borderRadiusBottomRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-bottom-size":case "border-bottom-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderBottomSize = 0;
				} else {
					this.borderBottomSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "border-color":
				this.borderColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-left-color":
				this.borderLeftColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-left-size":case "border-left-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderLeftSize = 0;
				} else {
					this.borderLeftSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "border-opacity":
				this.borderOpacity = haxe_ui_styles_ValueTools.float(v.value);
				break;
			case "border-radius":
				this.borderRadius = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-right-color":
				this.borderRightColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-right-size":case "border-right-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderRightSize = 0;
				} else {
					this.borderRightSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "border-style":
				this.borderStyle = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "border-top-color":
				this.borderTopColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-top-left-radius":
				this.borderRadiusTopLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-top-right-radius":
				this.borderRadiusTopRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-top-size":case "border-top-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderTopSize = 0;
				} else {
					this.borderTopSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "clip":
				this.clip = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "color":
				this.color = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "content-height":
				this.contentHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.contentHeightPercent = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "content-type":
				this.contentType = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "content-width":
				this.contentWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.contentWidthPercent = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "cursor":
				this.cursor = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "direction":
				this.direction = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "display":
				this.hidden = haxe_ui_styles_ValueTools.none(v.value);
				break;
			case "filter":
				var _g3 = v.value;
				switch(_g3._hx_index) {
				case 5:
					var f2 = _g3.f;
					var vl1 = _g3.vl;
					var arr1 = haxe_ui_styles_ValueTools.array(vl1);
					arr1.splice(0,0,f2);
					this.filter = [haxe_ui_filters_FilterParser.parseFilter(arr1)];
					break;
				case 6:
					var f3 = _g3.v;
					this.filter = [haxe_ui_filters_FilterParser.parseFilter([f3])];
					break;
				case 9:
					this.filter = null;
					break;
				default:
				}
				break;
			case "font-bold":
				this.fontBold = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "font-family":case "font-name":
				this.fontName = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "font-italic":
				this.fontItalic = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "font-size":
				this.fontSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "font-style":
				if(haxe_ui_styles_ValueTools.string(v.value) != null) {
					this.fontItalic = haxe_ui_styles_ValueTools.string(v.value).toLowerCase() == "italic";
				}
				break;
			case "font-underline":
				this.fontUnderline = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "font-weight":
				if(haxe_ui_styles_ValueTools.string(v.value) != null) {
					this.fontBold = haxe_ui_styles_ValueTools.string(v.value).toLowerCase() == "bold";
				}
				break;
			case "height":
				this.autoHeight = haxe_ui_styles_ValueTools.constant(v.value,"auto");
				this.height = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.percentHeight = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "hidden":
				this.hidden = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "horizontal-align":
				this.horizontalAlign = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "horizontal-spacing":
				this.horizontalSpacing = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "icon":
				if(v.value._hx_index == 9) {
					this.icon = null;
				} else {
					this.icon = haxe_ui_styles_ValueTools.variant(v.value);
				}
				break;
			case "icon-position":
				this.iconPosition = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "image-rendering":
				if(v.value._hx_index == 9) {
					this.imageRendering = null;
				} else {
					this.imageRendering = haxe_ui_styles_ValueTools.string(v.value);
				}
				break;
			case "initial-height":
				this.initialHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.initialPercentHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "initial-width":
				this.initialWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.initialPercentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "layout":
				if(v.value._hx_index == 9) {
					this.layout = null;
				} else {
					this.layout = haxe_ui_styles_ValueTools.string(v.value);
				}
				break;
			case "left":
				this.left = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-bottom":
				this.marginBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-left":
				this.marginLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-right":
				this.marginRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-top":
				this.marginTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "max-height":
				this.maxHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.maxPercentHeight = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "max-width":
				this.maxWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.maxPercentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "min-height":
				this.minHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.minPercentHeight = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "min-width":
				this.minWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.minPercentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "mode":
				this.mode = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "native":
				this.native = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "opacity":
				this.opacity = haxe_ui_styles_ValueTools.float(v.value);
				break;
			case "padding-bottom":
				this.paddingBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "padding-left":
				this.paddingLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "padding-right":
				this.paddingRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "padding-top":
				this.paddingTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "pointer-events":
				if(v.value._hx_index == 9) {
					this.pointerEvents = "none";
				} else {
					this.pointerEvents = haxe_ui_styles_ValueTools.string(v.value);
				}
				break;
			case "resource":
				this.resource = haxe_ui_styles_ValueTools.variant(v.value);
				break;
			case "text-align":
				this.textAlign = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "text-decoration":
				if(haxe_ui_styles_ValueTools.string(v.value) != null) {
					this.fontUnderline = haxe_ui_styles_ValueTools.string(v.value).toLowerCase() == "underline";
					this.fontStrikeThrough = haxe_ui_styles_ValueTools.string(v.value).toLowerCase() == "line-through";
				}
				break;
			case "top":
				this.top = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "vertical-align":
				this.verticalAlign = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "vertical-spacing":
				this.verticalSpacing = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "width":
				this.autoWidth = haxe_ui_styles_ValueTools.constant(v.value,"auto");
				this.width = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.percentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "word-wrap":
				this.wordWrap = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			}
		}
	}
	,apply: function(s) {
		if(s.cursor != null) {
			this.cursor = s.cursor;
		}
		if(s.hidden != null) {
			this.hidden = s.hidden;
		}
		if(s.left != null) {
			this.left = s.left;
		}
		if(s.top != null) {
			this.top = s.top;
		}
		if(s.autoWidth != null) {
			this.autoWidth = s.autoWidth;
		}
		if(s.autoHeight != null) {
			this.autoHeight = s.autoHeight;
		}
		if(s.verticalSpacing != null) {
			this.verticalSpacing = s.verticalSpacing;
		}
		if(s.horizontalSpacing != null) {
			this.horizontalSpacing = s.horizontalSpacing;
		}
		if(s.width != null) {
			this.width = s.width;
			this.autoWidth = false;
		}
		if(s.initialWidth != null) {
			this.initialWidth = s.initialWidth;
		}
		if(s.initialPercentWidth != null) {
			this.initialPercentWidth = s.initialPercentWidth;
		}
		if(s.minWidth != null) {
			this.minWidth = s.minWidth;
		}
		if(s.minPercentWidth != null) {
			this.minPercentWidth = s.minPercentWidth;
		}
		if(s.maxWidth != null) {
			this.maxWidth = s.maxWidth;
		}
		if(s.maxPercentWidth != null) {
			this.maxPercentWidth = s.maxPercentWidth;
		}
		if(s.height != null) {
			this.height = s.height;
			this.autoHeight = false;
		}
		if(s.initialHeight != null) {
			this.initialHeight = s.initialHeight;
		}
		if(s.initialPercentHeight != null) {
			this.initialPercentHeight = s.initialPercentHeight;
		}
		if(s.minHeight != null) {
			this.minHeight = s.minHeight;
		}
		if(s.minPercentHeight != null) {
			this.minPercentHeight = s.minPercentHeight;
		}
		if(s.maxHeight != null) {
			this.maxHeight = s.maxHeight;
		}
		if(s.maxPercentHeight != null) {
			this.maxPercentHeight = s.maxPercentHeight;
		}
		if(s.percentWidth != null) {
			this.percentWidth = s.percentWidth;
			this.autoWidth = false;
		}
		if(s.percentHeight != null) {
			this.percentHeight = s.percentHeight;
			this.autoHeight = false;
		}
		if(s.paddingTop != null) {
			this.paddingTop = s.paddingTop;
		}
		if(s.paddingLeft != null) {
			this.paddingLeft = s.paddingLeft;
		}
		if(s.paddingRight != null) {
			this.paddingRight = s.paddingRight;
		}
		if(s.paddingBottom != null) {
			this.paddingBottom = s.paddingBottom;
		}
		if(s.marginTop != null) {
			this.marginTop = s.marginTop;
		}
		if(s.marginLeft != null) {
			this.marginLeft = s.marginLeft;
		}
		if(s.marginRight != null) {
			this.marginRight = s.marginRight;
		}
		if(s.marginBottom != null) {
			this.marginBottom = s.marginBottom;
		}
		if(s.color != null) {
			this.color = s.color;
		}
		if(s.backgroundColor != null) {
			this.backgroundColor = s.backgroundColor;
			this.backgroundColorEnd = null;
		}
		if(s.backgroundColorEnd != null) {
			this.backgroundColorEnd = s.backgroundColorEnd;
		}
		if(s.backgroundGradientStyle != null) {
			this.backgroundGradientStyle = s.backgroundGradientStyle;
		}
		if(s.backgroundOpacity != null) {
			this.backgroundOpacity = s.backgroundOpacity;
		}
		if(s.backgroundImage != null) {
			this.backgroundImage = s.backgroundImage;
		}
		if(s.backgroundImageRepeat != null) {
			this.backgroundImageRepeat = s.backgroundImageRepeat;
		}
		if(s.backgroundImageClipTop != null) {
			this.backgroundImageClipTop = s.backgroundImageClipTop;
		}
		if(s.backgroundImageClipLeft != null) {
			this.backgroundImageClipLeft = s.backgroundImageClipLeft;
		}
		if(s.backgroundImageClipBottom != null) {
			this.backgroundImageClipBottom = s.backgroundImageClipBottom;
		}
		if(s.backgroundImageClipRight != null) {
			this.backgroundImageClipRight = s.backgroundImageClipRight;
		}
		if(s.backgroundImageSliceTop != null) {
			this.backgroundImageSliceTop = s.backgroundImageSliceTop;
		}
		if(s.backgroundImageSliceLeft != null) {
			this.backgroundImageSliceLeft = s.backgroundImageSliceLeft;
		}
		if(s.backgroundImageSliceBottom != null) {
			this.backgroundImageSliceBottom = s.backgroundImageSliceBottom;
		}
		if(s.backgroundImageSliceRight != null) {
			this.backgroundImageSliceRight = s.backgroundImageSliceRight;
		}
		if(s.borderColor != null) {
			this.borderColor = s.borderColor;
		}
		if(s.borderTopColor != null) {
			this.borderTopColor = s.borderTopColor;
		}
		if(s.borderLeftColor != null) {
			this.borderLeftColor = s.borderLeftColor;
		}
		if(s.borderBottomColor != null) {
			this.borderBottomColor = s.borderBottomColor;
		}
		if(s.borderRightColor != null) {
			this.borderRightColor = s.borderRightColor;
		}
		if(s.borderSize != null) {
			this.borderSize = s.borderSize;
		}
		if(s.borderTopSize != null) {
			this.borderTopSize = s.borderTopSize;
		}
		if(s.borderLeftSize != null) {
			this.borderLeftSize = s.borderLeftSize;
		}
		if(s.borderBottomSize != null) {
			this.borderBottomSize = s.borderBottomSize;
		}
		if(s.borderRightSize != null) {
			this.borderRightSize = s.borderRightSize;
		}
		if(s.borderRadius != null) {
			this.borderRadius = s.borderRadius;
		}
		if(s.borderRadiusTopLeft != null) {
			this.borderRadiusTopLeft = s.borderRadiusTopLeft;
		}
		if(s.borderRadiusTopRight != null) {
			this.borderRadiusTopRight = s.borderRadiusTopRight;
		}
		if(s.borderRadiusBottomLeft != null) {
			this.borderRadiusBottomLeft = s.borderRadiusBottomLeft;
		}
		if(s.borderRadiusBottomRight != null) {
			this.borderRadiusBottomRight = s.borderRadiusBottomRight;
		}
		if(s.borderOpacity != null) {
			this.borderOpacity = s.borderOpacity;
		}
		if(s.borderStyle != null) {
			this.borderStyle = s.borderStyle;
		}
		if(s.filter != null) {
			this.filter = s.filter.slice();
		}
		if(s.backdropFilter != null) {
			this.backdropFilter = s.backdropFilter.slice();
		}
		if(s.resource != null) {
			this.resource = s.resource;
		}
		if(s.icon != null) {
			this.icon = s.icon;
		}
		if(s.iconPosition != null) {
			this.iconPosition = s.iconPosition;
		}
		if(s.horizontalAlign != null) {
			this.horizontalAlign = s.horizontalAlign;
		}
		if(s.verticalAlign != null) {
			this.verticalAlign = s.verticalAlign;
		}
		if(s.textAlign != null) {
			this.textAlign = s.textAlign;
		}
		if(s.opacity != null) {
			this.opacity = s.opacity;
		}
		if(s.clip != null) {
			this.clip = s.clip;
		}
		if(s.native != null) {
			this.native = s.native;
		}
		if(s.fontName != null) {
			this.fontName = s.fontName;
		}
		if(s.fontSize != null) {
			this.fontSize = s.fontSize;
		}
		if(s.fontBold != null) {
			this.fontBold = s.fontBold;
		}
		if(s.fontUnderline != null) {
			this.fontUnderline = s.fontUnderline;
		}
		if(s.fontStrikeThrough != null) {
			this.fontStrikeThrough = s.fontStrikeThrough;
		}
		if(s.fontItalic != null) {
			this.fontItalic = s.fontItalic;
		}
		if(s.animationName != null) {
			this.animationName = s.animationName;
		}
		if(s.animationOptions != null) {
			if(this.animationOptions == null) {
				this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
			}
			if(s.animationOptions.duration != null) {
				this.animationOptions.duration = s.animationOptions.duration;
			}
			if(s.animationOptions.delay != null) {
				this.animationOptions.delay = s.animationOptions.delay;
			}
			if(s.animationOptions.iterationCount != null) {
				this.animationOptions.iterationCount = s.animationOptions.iterationCount;
			}
			if(s.animationOptions.easingFunction != null) {
				this.animationOptions.easingFunction = s.animationOptions.easingFunction;
			}
			if(s.animationOptions.direction != null) {
				this.animationOptions.direction = s.animationOptions.direction;
			}
			if(s.animationOptions.fillMode != null) {
				this.animationOptions.fillMode = s.animationOptions.fillMode;
			}
		}
		if(s.mode != null) {
			this.mode = s.mode;
		}
		if(s.pointerEvents != null) {
			this.pointerEvents = s.pointerEvents;
		}
		if(s.contentType != null) {
			this.contentType = s.contentType;
		}
		if(s.direction != null) {
			this.direction = s.direction;
		}
		if(s.contentWidth != null) {
			this.contentWidth = s.contentWidth;
		}
		if(s.contentWidthPercent != null) {
			this.contentWidthPercent = s.contentWidthPercent;
		}
		if(s.contentHeight != null) {
			this.contentHeight = s.contentHeight;
		}
		if(s.contentHeightPercent != null) {
			this.contentHeightPercent = s.contentHeightPercent;
		}
		if(s.wordWrap != null) {
			this.wordWrap = s.wordWrap;
		}
		if(s.imageRendering != null) {
			this.imageRendering = s.imageRendering;
		}
		if(s.backgroundWidth != null) {
			this.backgroundWidth = s.backgroundWidth;
		}
		if(s.backgroundWidthPercent != null) {
			this.backgroundWidthPercent = s.backgroundWidthPercent;
		}
		if(s.backgroundHeight != null) {
			this.backgroundHeight = s.backgroundHeight;
		}
		if(s.backgroundHeightPercent != null) {
			this.backgroundHeightPercent = s.backgroundHeightPercent;
		}
		if(s.layout != null) {
			this.layout = s.layout;
		}
	}
	,equalTo: function(s) {
		if(s.backgroundColor != this.backgroundColor) {
			return false;
		}
		if(s.backgroundColorEnd != this.backgroundColorEnd) {
			return false;
		}
		if(s.backgroundGradientStyle != this.backgroundGradientStyle) {
			return false;
		}
		if(s.backgroundOpacity != this.backgroundOpacity) {
			return false;
		}
		if(s.borderColor != this.borderColor) {
			return false;
		}
		if(s.borderTopColor != this.borderTopColor) {
			return false;
		}
		if(s.borderLeftColor != this.borderLeftColor) {
			return false;
		}
		if(s.borderBottomColor != this.borderBottomColor) {
			return false;
		}
		if(s.borderRightColor != this.borderRightColor) {
			return false;
		}
		if(s.borderSize != this.borderSize) {
			return false;
		}
		if(s.borderTopSize != this.borderTopSize) {
			return false;
		}
		if(s.borderLeftSize != this.borderLeftSize) {
			return false;
		}
		if(s.borderBottomSize != this.borderBottomSize) {
			return false;
		}
		if(s.borderRightSize != this.borderRightSize) {
			return false;
		}
		if(s.borderRadius != this.borderRadius) {
			return false;
		}
		if(s.borderRadiusTopLeft != this.borderRadiusTopLeft) {
			return false;
		}
		if(s.borderRadiusTopRight != this.borderRadiusTopRight) {
			return false;
		}
		if(s.borderRadiusBottomLeft != this.borderRadiusBottomLeft) {
			return false;
		}
		if(s.borderRadiusBottomRight != this.borderRadiusBottomRight) {
			return false;
		}
		if(s.borderOpacity != this.borderOpacity) {
			return false;
		}
		if(s.borderStyle != this.borderStyle) {
			return false;
		}
		if(s.color != this.color) {
			return false;
		}
		if(s.cursor != this.cursor) {
			return false;
		}
		if(s.hidden != this.hidden) {
			return false;
		}
		if(s.left != this.left) {
			return false;
		}
		if(s.top != this.top) {
			return false;
		}
		if(s.autoWidth != this.autoWidth) {
			return false;
		}
		if(s.autoHeight != this.autoHeight) {
			return false;
		}
		if(s.verticalSpacing != this.verticalSpacing) {
			return false;
		}
		if(s.horizontalSpacing != this.horizontalSpacing) {
			return false;
		}
		if(s.width != this.width) {
			return false;
		}
		if(s.initialWidth != this.initialWidth) {
			return false;
		}
		if(s.initialPercentWidth != this.initialPercentWidth) {
			return false;
		}
		if(s.minWidth != this.minWidth) {
			return false;
		}
		if(s.minPercentWidth != this.minPercentWidth) {
			return false;
		}
		if(s.maxWidth != this.maxWidth) {
			return false;
		}
		if(s.maxPercentWidth != this.maxPercentWidth) {
			return false;
		}
		if(s.height != this.height) {
			return false;
		}
		if(s.initialHeight != this.initialHeight) {
			return false;
		}
		if(s.initialPercentHeight != this.initialPercentHeight) {
			return false;
		}
		if(s.minHeight != this.minHeight) {
			return false;
		}
		if(s.minPercentHeight != this.minPercentHeight) {
			return false;
		}
		if(s.maxHeight != this.maxHeight) {
			return false;
		}
		if(s.maxPercentHeight != this.maxPercentHeight) {
			return false;
		}
		if(s.percentWidth != this.percentWidth) {
			return false;
		}
		if(s.percentHeight != this.percentHeight) {
			return false;
		}
		if(s.paddingTop != this.paddingTop) {
			return false;
		}
		if(s.paddingLeft != this.paddingLeft) {
			return false;
		}
		if(s.paddingRight != this.paddingRight) {
			return false;
		}
		if(s.paddingBottom != this.paddingBottom) {
			return false;
		}
		if(s.marginTop != this.marginTop) {
			return false;
		}
		if(s.marginLeft != this.marginLeft) {
			return false;
		}
		if(s.marginRight != this.marginRight) {
			return false;
		}
		if(s.marginBottom != this.marginBottom) {
			return false;
		}
		if(haxe_ui_util_Variant.neq(s.backgroundImage,this.backgroundImage)) {
			return false;
		}
		if(s.backgroundImageRepeat != this.backgroundImageRepeat) {
			return false;
		}
		if(s.backgroundImageClipTop != this.backgroundImageClipTop) {
			return false;
		}
		if(s.backgroundImageClipLeft != this.backgroundImageClipLeft) {
			return false;
		}
		if(s.backgroundImageClipBottom != this.backgroundImageClipBottom) {
			return false;
		}
		if(s.backgroundImageClipRight != this.backgroundImageClipRight) {
			return false;
		}
		if(s.backgroundImageSliceTop != this.backgroundImageSliceTop) {
			return false;
		}
		if(s.backgroundImageSliceLeft != this.backgroundImageSliceLeft) {
			return false;
		}
		if(s.backgroundImageSliceBottom != this.backgroundImageSliceBottom) {
			return false;
		}
		if(s.backgroundImageSliceRight != this.backgroundImageSliceRight) {
			return false;
		}
		if(s.filter != this.filter) {
			return false;
		}
		if(s.backdropFilter != this.backdropFilter) {
			return false;
		}
		if(haxe_ui_util_Variant.neq(s.resource,this.resource)) {
			return false;
		}
		if(haxe_ui_util_Variant.neq(s.icon,this.icon)) {
			return false;
		}
		if(s.iconPosition != this.iconPosition) {
			return false;
		}
		if(s.horizontalAlign != this.horizontalAlign) {
			return false;
		}
		if(s.verticalAlign != this.verticalAlign) {
			return false;
		}
		if(s.textAlign != this.textAlign) {
			return false;
		}
		if(s.opacity != this.opacity) {
			return false;
		}
		if(s.clip != this.clip) {
			return false;
		}
		if(s.native != this.native) {
			return false;
		}
		if(s.fontName != this.fontName) {
			return false;
		}
		if(s.fontSize != this.fontSize) {
			return false;
		}
		if(s.fontBold != this.fontBold) {
			return false;
		}
		if(s.fontUnderline != this.fontUnderline) {
			return false;
		}
		if(s.fontStrikeThrough != this.fontStrikeThrough) {
			return false;
		}
		if(s.fontItalic != this.fontItalic) {
			return false;
		}
		if(haxe_ui_util_Variant.neq(s.resource,this.resource)) {
			return false;
		}
		if(s.animationName != this.animationName) {
			return false;
		}
		if(this.animationOptions != null && this.animationOptions.compareTo(s.animationOptions) == false) {
			return false;
		}
		if(s.mode != this.mode) {
			return false;
		}
		if(s.pointerEvents != this.pointerEvents) {
			return false;
		}
		if(s.contentType != this.contentType) {
			return false;
		}
		if(s.direction != this.direction) {
			return false;
		}
		if(s.contentWidth != this.contentWidth) {
			return false;
		}
		if(s.contentWidthPercent != this.contentWidthPercent) {
			return false;
		}
		if(s.contentHeight != this.contentHeight) {
			return false;
		}
		if(s.contentHeightPercent != this.contentHeightPercent) {
			return false;
		}
		if(s.wordWrap != this.wordWrap) {
			return false;
		}
		if(s.imageRendering != this.imageRendering) {
			return false;
		}
		if(s.backgroundWidth != this.backgroundWidth) {
			return false;
		}
		if(s.backgroundWidthPercent != this.backgroundWidthPercent) {
			return false;
		}
		if(s.backgroundHeight != this.backgroundHeight) {
			return false;
		}
		if(s.backgroundHeightPercent != this.backgroundHeightPercent) {
			return false;
		}
		if(s.layout != this.layout) {
			return false;
		}
		return true;
	}
	,createAnimationOptions: function() {
		if(this.animationOptions == null) {
			this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
		}
	}
	,clone: function() {
		var c = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		c.apply(this);
		return c;
	}
	,__class__: haxe_ui_styles_Style
	,__properties__: {get_fullBorderSize:"get_fullBorderSize",get_hasBorder:"get_hasBorder",get_borderType:"get_borderType",set_padding:"set_padding"}
};
var gfx_analysis_DisplacementInfo = function() {
};
$hxClasses["gfx.analysis.DisplacementInfo"] = gfx_analysis_DisplacementInfo;
gfx_analysis_DisplacementInfo.__name__ = "gfx.analysis.DisplacementInfo";
gfx_analysis_DisplacementInfo.prototype = {
	cellularMapping: null
	,columnContents: null
	,maxColumn: null
	,__class__: gfx_analysis_DisplacementInfo
};
var gfx_analysis_VariantTree = function(variant,selectedNodePath) {
	this.indicateColors = true;
	this.selectedMove = 0;
	this.selectedBranch = [];
	this.columnWidths = new haxe_ds_IntMap();
	this.nodes = new haxe_ds_StringMap();
	this.arrows = new haxe_ds_StringMap();
	haxe_ui_containers_Absolute.call(this);
	this.variantRef = variant;
	this.indicateColors = Preferences.branchingTurnColorIndicators.get();
	var startingNode = new gfx_analysis_Node("",dict_Dictionary.getPhrase(dict_Phrase.OPENING_STARTING_POSITION),false,$bind(this,this.onNodeSelectRequest),function(v) {
	});
	this.nodes.h[""] = startingNode;
	this.addComponent(startingNode);
	var h = variant.getAllNodes().h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g1_key = key;
		var _g1_value = _g_h[key];
		var code = _g1_key;
		var nodeInfo = _g1_value;
		if(code == "") {
			continue;
		}
		var node = new gfx_analysis_Node(code,nodeInfo.getPlyStr(this.indicateColors),false,$bind(this,this.onNodeSelectRequest),$bind(this,this.onNodeRemoveRequest));
		var arrow = new gfx_analysis_Arrow();
		this.nodes.h[code] = node;
		this.arrows.h[code] = arrow;
		this.addComponent(node);
		this.addComponent(arrow);
	}
	if(selectedNodePath != null) {
		this.selectBranchUnsafe(variant.extendPathLeftmost(selectedNodePath),struct_VariantPath.get_length(selectedNodePath));
	} else {
		var branch = variant.getLastMainLineDescendantPath([]);
		this.selectBranchUnsafe(branch,struct_VariantPath.get_length(branch));
	}
};
$hxClasses["gfx.analysis.VariantTree"] = gfx_analysis_VariantTree;
gfx_analysis_VariantTree.__name__ = "gfx.analysis.VariantTree";
gfx_analysis_VariantTree.__interfaces__ = [gfx_analysis_IVariantView];
gfx_analysis_VariantTree.__super__ = haxe_ui_containers_Absolute;
gfx_analysis_VariantTree.prototype = $extend(haxe_ui_containers_Absolute.prototype,{
	arrows: null
	,nodes: null
	,columnWidths: null
	,variantRef: null
	,selectedBranch: null
	,selectedMove: null
	,eventHandler: null
	,indicateColors: null
	,getSelectedNode: function() {
		return struct_VariantPath.subpath(this.selectedBranch,this.selectedMove);
	}
	,columnX: function(column) {
		var s = 0;
		var _g = 1;
		var _g1 = column;
		while(_g < _g1) {
			var i = _g++;
			s += this.columnWidths.h[i] + gfx_analysis_VariantTree.BLOCK_INTERVAL_X;
		}
		return s;
	}
	,rowY: function(row) {
		return row * gfx_analysis_VariantTree.PERIOD_Y;
	}
	,handlePlyScrolling: function(type) {
		var plyNumber;
		switch(type._hx_index) {
		case 0:
			plyNumber = 0;
			break;
		case 1:
			plyNumber = net_shared_utils_MathUtils.maxInt(this.selectedMove - 1,0);
			break;
		case 2:
			plyNumber = net_shared_utils_MathUtils.minInt(this.selectedMove + 1,struct_VariantPath.get_length(this.selectedBranch));
			break;
		case 3:
			plyNumber = struct_VariantPath.get_length(this.selectedBranch);
			break;
		case 4:
			var plyNum = type.plyNum;
			plyNumber = plyNum;
			break;
		}
		this.selectBranchUnsafe(this.selectedBranch,plyNumber);
	}
	,onNodeSelectRequest: function(code) {
		var path = struct_VariantPath.fromCode(code);
		if(struct_VariantPath.contains(this.selectedBranch,path)) {
			this.selectBranchUnsafe(this.selectedBranch,struct_VariantPath.get_length(path));
			this.eventHandler(gfx_analysis_PeripheralEvent.ScrollBtnPressed(gfx_utils_PlyScrollType.Precise(struct_VariantPath.get_length(path))));
		} else {
			var extendedPath = this.variantRef.extendPathLeftmost(path);
			var branch = this.variantRef.getBranchByPath(extendedPath);
			var branchStr = this.variantRef.getBranchNotationByPath(extendedPath);
			var pointer = struct_VariantPath.get_length(path);
			this.selectBranchUnsafe(extendedPath,struct_VariantPath.get_length(path));
			this.eventHandler(gfx_analysis_PeripheralEvent.BranchSelected(branch,branchStr,pointer));
		}
	}
	,onNodeRemoveRequest: function(code) {
		var path = struct_VariantPath.fromCode(code);
		if(!struct_VariantPath.isRoot(path)) {
			this.removeNodeByPath(path);
		}
	}
	,deselectAll: function() {
		var code = "";
		var _g = 0;
		var _g1 = struct_VariantPath.asArray(this.selectedBranch);
		while(_g < _g1.length) {
			var childNum = _g1[_g];
			++_g;
			code += childNum;
			this.nodes.h[code].deselect();
			this.arrows.h[code].unhighlight();
			code += ":";
		}
		this.selectedBranch = [];
		this.selectedMove = 0;
	}
	,selectBranchUnsafe: function(fullBranch,selectUpToMove) {
		this.deselectAll();
		if(selectUpToMove == 0) {
			this.nodes.h[""].select();
		}
		var code = "";
		var _g = 0;
		var _g1 = struct_VariantPath.get_length(fullBranch);
		while(_g < _g1) {
			var i = _g++;
			var childNum = fullBranch[i];
			code += childNum;
			this.arrows.h[code].highlight(i < selectUpToMove);
			this.addComponent(this.arrows.h[code]);
			if(i == selectUpToMove - 1) {
				this.nodes.h[code].select();
			}
			code += ":";
		}
		this.selectedBranch = struct_VariantPath.copy(fullBranch);
		this.selectedMove = selectUpToMove;
	}
	,clear: function(newStartingSituation) {
		var h = this.arrows.h;
		var arrow_h = h;
		var arrow_keys = Object.keys(h);
		var arrow_length = arrow_keys.length;
		var arrow_current = 0;
		while(arrow_current < arrow_length) {
			var arrow = arrow_h[arrow_keys[arrow_current++]];
			this.removeComponent(arrow);
		}
		var startNode = this.nodes.h[""];
		startNode.select();
		var h = this.nodes.h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g1_key = key;
			var _g1_value = _g_h[key];
			var code = _g1_key;
			var node = _g1_value;
			if(code != "") {
				this.removeComponent(node);
			}
		}
		this.variantRef.clear(newStartingSituation);
		this.arrows = new haxe_ds_StringMap();
		var _g = new haxe_ds_StringMap();
		_g.h[""] = startNode;
		this.nodes = _g;
		this.selectedBranch = [];
		this.selectedMove = 0;
		this.columnWidths = new haxe_ds_IntMap();
	}
	,removeNodeByPath: function(path) {
		var parentPath = struct_VariantPath.parent(path);
		var belongsToSelected = struct_VariantPath.contains(this.selectedBranch,path);
		var newMoveNumToSelect = Math.round(Math.min(struct_VariantPath.get_length(parentPath),this.selectedMove));
		if(belongsToSelected) {
			this.deselectAll();
		}
		var _g = 0;
		var _g1 = this.variantRef.getFamilyPaths(path);
		while(_g < _g1.length) {
			var familyMemberPath = _g1[_g];
			++_g;
			var code = struct_VariantPath.code(familyMemberPath);
			this.removeComponent(this.nodes.h[code]);
			this.removeComponent(this.arrows.h[code]);
			var _this = this.nodes;
			if(Object.prototype.hasOwnProperty.call(_this.h,code)) {
				delete(_this.h[code]);
			}
			var _this1 = this.arrows;
			if(Object.prototype.hasOwnProperty.call(_this1.h,code)) {
				delete(_this1.h[code]);
			}
		}
		var _g = 0;
		var _g1 = this.variantRef.getRightSiblingsPaths(path,false);
		while(_g < _g1.length) {
			var siblingPath = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = this.variantRef.getFamilyPaths(siblingPath);
			while(_g2 < _g3.length) {
				var familyMemberPath = _g3[_g2];
				++_g2;
				var oldCode = struct_VariantPath.code(familyMemberPath);
				var newPath = struct_VariantPath.copy(familyMemberPath);
				var tmp = struct_VariantPath.asArray(newPath);
				var tmp1 = struct_VariantPath.get_length(path) - 1;
				tmp[tmp1]--;
				var newCode = struct_VariantPath.code(newPath);
				this.nodes.h[newCode] = this.nodes.h[oldCode];
				var _this = this.nodes;
				if(Object.prototype.hasOwnProperty.call(_this.h,oldCode)) {
					delete(_this.h[oldCode]);
				}
				this.arrows.h[newCode] = this.arrows.h[oldCode];
				var _this1 = this.arrows;
				if(Object.prototype.hasOwnProperty.call(_this1.h,oldCode)) {
					delete(_this1.h[oldCode]);
				}
			}
		}
		this.variantRef.removeNode(path);
		if(belongsToSelected) {
			this.selectBranchUnsafe(this.variantRef.extendPathLeftmost(parentPath),newMoveNumToSelect);
			var branch = this.variantRef.getBranchByPath(this.selectedBranch);
			var branchStr = this.variantRef.getBranchNotationByPath(this.selectedBranch);
			this.eventHandler(gfx_analysis_PeripheralEvent.BranchSelected(branch,branchStr,this.selectedMove));
		}
		this.refreshLayout();
	}
	,addChildNode: function(parentPath,ply,selectChild) {
		var nodeNum = this.variantRef.childCount(parentPath);
		var nodePath = struct_VariantPath.child(parentPath,nodeNum);
		var nodeCode = struct_VariantPath.code(nodePath);
		var plyStr = ply.toNotation(this.variantRef.getSituationByPath(parentPath),this.indicateColors);
		this.variantRef.addChildToNode(ply,parentPath);
		var node = new gfx_analysis_Node(nodeCode,plyStr,selectChild,$bind(this,this.onNodeSelectRequest),$bind(this,this.onNodeRemoveRequest));
		this.nodes.h[nodeCode] = node;
		this.addComponent(node);
		var arrow = new gfx_analysis_Arrow();
		this.arrows.h[nodeCode] = arrow;
		this.addComponent(arrow);
		this.refreshLayout();
		if(selectChild) {
			this.selectBranchUnsafe(nodePath,struct_VariantPath.get_length(nodePath));
		}
	}
	,refreshLayout: function() {
		var displacement = this.buildOptimalDisplacement();
		this.columnWidths = new haxe_ds_IntMap();
		var map = displacement.columnContents;
		var _g_map = map;
		var _g_keys = map.keys();
		while(_g_keys.hasNext()) {
			var key = _g_keys.next();
			var _g1_value = _g_map.get(key);
			var _g1_key = key;
			var column = _g1_key;
			var codes = _g1_value;
			var maxWidth = column == 1 ? this.nodes.h[""].textSize.width : 0;
			var _g = 0;
			while(_g < codes.length) {
				var code = codes[_g];
				++_g;
				var node = this.nodes.h[code];
				if(node.textSize.width > maxWidth) {
					maxWidth = node.textSize.width;
				}
			}
			this.columnWidths.h[column] = maxWidth;
		}
		var h = displacement.cellularMapping.h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g1_key = key;
			var _g1_value = _g_h[key];
			var code = _g1_key;
			var cell = _g1_value;
			var node = this.nodes.h[code];
			node.set_left(this.columnX(cell.column));
			node.set_top(this.rowY(cell.row));
			node.set_width(this.columnWidths.h[cell.column]);
			node.code = code;
		}
		var h = this.arrows.h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g1_key = key;
			var _g1_value = _g_h[key];
			var code = _g1_key;
			var arrow = _g1_value;
			var parentCode = code.split(":").slice(0,-1).join(":");
			var departure = this.nodes.h[parentCode].outputPos();
			var destination = this.nodes.h[code].inputPos();
			arrow.changeEndpoints(departure,destination);
		}
	}
	,buildOptimalDisplacement: function() {
		var _gthis = this;
		var info = new gfx_analysis_DisplacementInfo();
		var _g = new haxe_ds_StringMap();
		_g.h[""] = { row : 0, column : 1};
		info.cellularMapping = _g;
		info.columnContents = new haxe_ds_IntMap();
		info.maxColumn = 0;
		var rowLengths_h = { };
		var recursive = null;
		recursive = function(path) {
			var row = struct_VariantPath.get_length(path);
			var code = struct_VariantPath.code(path);
			var parentCode = struct_VariantPath.code(struct_VariantPath.parent(path));
			var column = 1;
			var iteratedRow = row;
			var iteratedDescendantPath = struct_VariantPath.copy(path);
			while(rowLengths_h.hasOwnProperty(iteratedRow) && _gthis.variantRef.pathExists(iteratedDescendantPath)) {
				column = net_shared_utils_MathUtils.maxInt(column,rowLengths_h[iteratedRow] + 1);
				++iteratedRow;
				iteratedDescendantPath = struct_VariantPath.child(iteratedDescendantPath,0);
			}
			column = net_shared_utils_MathUtils.maxInt(column,info.cellularMapping.h[parentCode].column);
			rowLengths_h[row] = column;
			info.cellularMapping.h[code] = { row : row, column : column};
			if(info.columnContents.h.hasOwnProperty(column)) {
				info.columnContents.h[column].push(code);
			} else {
				var v = [code];
				info.columnContents.h[column] = v;
				if(info.maxColumn < column) {
					info.maxColumn = column;
				}
			}
			var _g = 0;
			var _g1 = _gthis.variantRef.childCount(path);
			while(_g < _g1) {
				var childNum = _g++;
				recursive(struct_VariantPath.child(path,childNum));
			}
		};
		var path = [];
		var _g = 0;
		var _g1 = this.variantRef.childCount(path);
		while(_g < _g1) {
			var childNum = _g++;
			recursive(struct_VariantPath.child(path,childNum));
		}
		return info;
	}
	,addChildToSelectedNode: function(ply,selectChild) {
		this.addChildNode(struct_VariantPath.subpath(this.selectedBranch,this.selectedMove),ply,selectChild);
	}
	,init: function(eventHandler) {
		this.eventHandler = eventHandler;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Absolute.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Absolute.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_variant: null
	,_constructorParam_selectedNodePath: null
	,self: function() {
		return new gfx_analysis_VariantTree(this._constructorParam_variant,this._constructorParam_selectedNodePath);
	}
	,__class__: gfx_analysis_VariantTree
});
var gfx_basic_$components_ARPImage = function() {
	this.widthBased = true;
	haxe_ui_components_Image.call(this);
};
$hxClasses["gfx.basic_components.ARPImage"] = gfx_basic_$components_ARPImage;
gfx_basic_$components_ARPImage.__name__ = "gfx.basic_components.ARPImage";
gfx_basic_$components_ARPImage.__super__ = haxe_ui_components_Image;
gfx_basic_$components_ARPImage.prototype = $extend(haxe_ui_components_Image.prototype,{
	widthBased: null
	,set_width: function(value) {
		this.widthBased = true;
		haxe_ui_components_Image.prototype.set_percentHeight.call(this,null);
		haxe_ui_components_Image.prototype.set_componentHeight.call(this,null);
		return haxe_ui_components_Image.prototype.set_width.call(this,value);
	}
	,set_height: function(value) {
		this.widthBased = false;
		haxe_ui_components_Image.prototype.set_percentWidth.call(this,null);
		haxe_ui_components_Image.prototype.set_componentWidth.call(this,null);
		return haxe_ui_components_Image.prototype.set_height.call(this,value);
	}
	,validateComponentLayout: function() {
		var b = haxe_ui_components_Image.prototype.validateComponentLayout.call(this);
		if(this.widthBased) {
			var newHeight = this.get_width() * this.get_originalHeight() / this.get_originalWidth();
			if(this.get_height() != newHeight) {
				haxe_ui_components_Image.prototype.set_height.call(this,newHeight);
			}
		} else {
			var newWidth = this.get_height() * this.get_originalWidth() / this.get_originalHeight();
			if(this.get_width() != newWidth) {
				haxe_ui_components_Image.prototype.set_width.call(this,newWidth);
			}
		}
		if(!haxe_ui_components_Image.prototype.validateComponentLayout.call(this)) {
			return b;
		} else {
			return true;
		}
	}
	,set_percentWidth: function(value) {
		this.widthBased = true;
		haxe_ui_components_Image.prototype.set_percentHeight.call(this,null);
		haxe_ui_components_Image.prototype.set_componentHeight.call(this,null);
		return haxe_ui_components_Image.prototype.set_percentWidth.call(this,value);
	}
	,set_percentHeight: function(value) {
		this.widthBased = false;
		haxe_ui_components_Image.prototype.set_percentWidth.call(this,null);
		haxe_ui_components_Image.prototype.set_componentWidth.call(this,null);
		return haxe_ui_components_Image.prototype.set_percentHeight.call(this,value);
	}
	,registerBehaviours: function() {
		haxe_ui_components_Image.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Image.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_basic_$components_ARPImage();
	}
	,__class__: gfx_basic_$components_ARPImage
});
var gfx_basic_$components_AnnotatedImage = function(w,h,imgPath,labelText,imgTooltip,spacingPerHeightUnit,imageScaleFactor,squareImage) {
	if(squareImage == null) {
		squareImage = true;
	}
	if(imageScaleFactor == null) {
		imageScaleFactor = 1;
	}
	if(spacingPerHeightUnit == null) {
		spacingPerHeightUnit = 0.16;
	}
	if(h == gfx_basic_$components_utils_DimValue.Auto) {
		throw haxe_Exception.thrown("autoHeight cannot be true for AnnotatedImage");
	}
	haxe_ui_containers_HBox.call(this);
	this.squareImage = squareImage;
	this.spacingPerHeightUnit = spacingPerHeightUnit;
	this.imageScaleFactor = imageScaleFactor;
	gfx_basic_$components_utils_DimValue_assignWidth(this,w);
	gfx_basic_$components_utils_DimValue_assignHeight(this,h);
	this.img = new gfx_basic_$components_ARPImage();
	this.lbl = new gfx_basic_$components_AutosizingLabel();
	this.img.set_resource(haxe_ui_util_Variant.fromString(imgPath));
	this.img.set_tooltip(imgTooltip);
	var imageStyle = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
	imageStyle.verticalAlign = "center";
	imageStyle.horizontalAlign = "center";
	if(imgTooltip != null) {
		imageStyle.backgroundColor = 0;
		imageStyle.backgroundOpacity = 0;
		imageStyle.pointerEvents = "true";
	}
	this.img.set_customStyle(imageStyle);
	if(squareImage) {
		var sq = new gfx_basic_$components_Square();
		sq.set_percentHeight(100);
		sq.addComponent(this.img);
		this.addComponent(sq);
	} else {
		this.img.set_percentHeight(100 * imageScaleFactor);
		this.addComponent(this.img);
	}
	if(w != gfx_basic_$components_utils_DimValue.Auto) {
		this.lbl.set_percentWidth(100);
	}
	this.lbl.set_percentHeight(100);
	this.lbl.set_text(labelText);
	this.lbl.align = w == gfx_basic_$components_utils_DimValue.Auto ? "left" : "center";
	this.addComponent(this.lbl);
};
$hxClasses["gfx.basic_components.AnnotatedImage"] = gfx_basic_$components_AnnotatedImage;
gfx_basic_$components_AnnotatedImage.__name__ = "gfx.basic_components.AnnotatedImage";
gfx_basic_$components_AnnotatedImage.__super__ = haxe_ui_containers_HBox;
gfx_basic_$components_AnnotatedImage.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	img: null
	,lbl: null
	,squareImage: null
	,spacingPerHeightUnit: null
	,imageScaleFactor: null
	,validateComponentLayout: function() {
		var b = haxe_ui_containers_HBox.prototype.validateComponentLayout.call(this);
		var spacing = this.spacingPerHeightUnit * this.get_height();
		var newStyle = this.get_customStyle().clone();
		newStyle.horizontalSpacing = spacing;
		newStyle.paddingTop = spacing;
		newStyle.paddingBottom = spacing;
		newStyle.paddingLeft = spacing;
		newStyle.paddingRight = spacing;
		this.set_customStyle(newStyle);
		if(this.squareImage) {
			if(this.img.get_originalWidth() > this.img.get_originalHeight()) {
				this.img.set_percentWidth(100 * this.imageScaleFactor);
			} else {
				this.img.set_percentHeight(100 * this.imageScaleFactor);
			}
		}
		return b;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_w: null
	,_constructorParam_h: null
	,_constructorParam_imgPath: null
	,_constructorParam_labelText: null
	,_constructorParam_imgTooltip: null
	,_constructorParam_spacingPerHeightUnit: null
	,_constructorParam_imageScaleFactor: null
	,_constructorParam_squareImage: null
	,self: function() {
		return new gfx_basic_$components_AnnotatedImage(this._constructorParam_w,this._constructorParam_h,this._constructorParam_imgPath,this._constructorParam_labelText,this._constructorParam_imgTooltip,this._constructorParam_spacingPerHeightUnit,this._constructorParam_imageScaleFactor,this._constructorParam_squareImage);
	}
	,__class__: gfx_basic_$components_AnnotatedImage
});
var gfx_basic_$components_AutosizingLabel = function() {
	this.lengthGetter = function(label) {
		return label.get_text().length;
	};
	this.align = "center";
	this.sizePerCharHeight = 0.758;
	this.sizePerCharWidth = 1.8;
	this.maxFontSize = null;
	this.minFontSize = null;
	haxe_ui_components_Label.call(this);
	var c = this;
	if(c != null) {
		c.registerEvent("resize",$bind(this,this.onResize));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "this" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.basic_components.AutosizingLabel", methodName : "new"});
	}
};
$hxClasses["gfx.basic_components.AutosizingLabel"] = gfx_basic_$components_AutosizingLabel;
gfx_basic_$components_AutosizingLabel.__name__ = "gfx.basic_components.AutosizingLabel";
gfx_basic_$components_AutosizingLabel.__super__ = haxe_ui_components_Label;
gfx_basic_$components_AutosizingLabel.prototype = $extend(haxe_ui_components_Label.prototype,{
	minFontSize: null
	,maxFontSize: null
	,sizePerCharWidth: null
	,sizePerCharHeight: null
	,align: null
	,lengthGetter: null
	,onResize: function(e) {
		this.validateFontSize();
	}
	,setFontBold: function(value) {
		var newStyle = this.get_customStyle().clone();
		newStyle.fontBold = value;
		this.set_customStyle(newStyle);
	}
	,enablePointerEvents: function() {
		var newStyle = this.get_customStyle().clone();
		newStyle.pointerEvents = "true";
		newStyle.backgroundColor = 0;
		newStyle.backgroundOpacity = 0;
		this.set_customStyle(newStyle);
	}
	,validateFontSize: function() {
		var fontSize;
		if(this.get_autoWidth()) {
			fontSize = this.sizePerCharHeight * this.get_height();
		} else if(this.get_autoHeight()) {
			fontSize = this.sizePerCharWidth * this.get_width() / this.lengthGetter(this);
		} else {
			fontSize = Math.min(this.sizePerCharWidth * this.get_width() / this.lengthGetter(this),this.sizePerCharHeight * this.get_height());
		}
		if(this.minFontSize != null) {
			fontSize = Math.max(fontSize,this.minFontSize);
		}
		if(this.maxFontSize != null) {
			fontSize = Math.min(fontSize,this.maxFontSize);
		}
		var newStyle = this.get_customStyle().clone();
		newStyle.fontSize = fontSize;
		newStyle.textAlign = this.align;
		this.set_customStyle(newStyle);
	}
	,registerBehaviours: function() {
		haxe_ui_components_Label.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Label.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_basic_$components_AutosizingLabel();
	}
	,__class__: gfx_basic_$components_AutosizingLabel
});
var haxe_ui_backend_DialogBase = function() {
	this._buttonsCreated = false;
	this._forcedTop = null;
	this._forcedLeft = null;
	this._dialogParent = null;
	this._autoSizeDialog = false;
	this.destroyOnClose = true;
	this.button = null;
	this.centerDialog = true;
	this.buttons = null;
	this.autoCenterDialog = true;
	this.modal = true;
	var _gthis = this;
	haxe_ui_containers_Box.call(this);
	this.dialogContainer = new haxe_ui_containers_VBox();
	this.dialogContainer.set_id("dialog-container");
	this.dialogContainer.set_styleNames("dialog-container");
	this.dialogContainer.set_scriptAccess(false);
	this.addComponent(this.dialogContainer);
	this.dialogTitle = new haxe_ui_containers_HBox();
	this.dialogTitle.set_id("dialog-title");
	this.dialogTitle.set_styleNames("dialog-title");
	this.dialogTitle.set_scriptAccess(false);
	this.set_dragInitiator(this.dialogTitle);
	this.dialogContainer.addComponent(this.dialogTitle);
	this.dialogTitleLabel = new haxe_ui_components_Label();
	this.dialogTitleLabel.set_id("dialog-title-label");
	this.dialogTitleLabel.set_styleNames("dialog-title-label");
	this.dialogTitleLabel.set_text("HaxeUI");
	this.dialogTitleLabel.set_scriptAccess(false);
	this.dialogTitle.addComponent(this.dialogTitleLabel);
	this.dialogCloseButton = new haxe_ui_components_Image();
	this.dialogCloseButton.set_id("dialog-close-button");
	this.dialogCloseButton.set_styleNames("dialog-close-button");
	this.dialogCloseButton.set_scriptAccess(false);
	this.dialogTitle.addComponent(this.dialogCloseButton);
	this.dialogContent = new haxe_ui_containers_VBox();
	this.dialogContent.set_id("dialog-content");
	this.dialogContent.set_styleNames("dialog-content");
	this.dialogContent.set_scriptAccess(false);
	this.dialogContent.registerEvent("resize",$bind(this,this.onContentResize));
	this.dialogContainer.addComponent(this.dialogContent);
	this.dialogFooterContainer = new haxe_ui_containers_Box();
	this.dialogFooterContainer.set_id("dialog-footer-container");
	this.dialogFooterContainer.set_styleNames("dialog-footer-container");
	this.dialogFooterContainer.set_scriptAccess(false);
	this.dialogContainer.addComponent(this.dialogFooterContainer);
	this.dialogFooter = new haxe_ui_containers_HBox();
	this.dialogFooter.set_id("dialog-footer");
	this.dialogFooter.set_styleNames("dialog-footer");
	this.dialogFooter.set_scriptAccess(false);
	this.dialogFooter.registerEvent("resize",$bind(this,this.onFooterResize));
	this.dialogFooterContainer.addComponent(this.dialogFooter);
	this.dialogFooterContainer.hide();
	this.dialogCloseButton.set_onClick(function(e) {
		_gthis.hideDialog("{{cancel}}");
	});
};
$hxClasses["haxe.ui.backend.DialogBase"] = haxe_ui_backend_DialogBase;
haxe_ui_backend_DialogBase.__name__ = "haxe.ui.backend.DialogBase";
haxe_ui_backend_DialogBase.__super__ = haxe_ui_containers_Box;
haxe_ui_backend_DialogBase.prototype = $extend(haxe_ui_containers_Box.prototype,{
	modal: null
	,autoCenterDialog: null
	,buttons: null
	,centerDialog: null
	,button: null
	,_overlay: null
	,dialogContainer: null
	,dialogTitle: null
	,dialogTitleLabel: null
	,dialogCloseButton: null
	,dialogContent: null
	,dialogFooterContainer: null
	,dialogFooter: null
	,destroyOnClose: null
	,_autoSizeDialog: null
	,onReady: function() {
		haxe_ui_containers_Box.prototype.onReady.call(this);
		this._autoSizeDialog = this.get_autoWidth();
	}
	,_dialogParent: null
	,get_dialogParent: function() {
		return this._dialogParent;
	}
	,set_dialogParent: function(value) {
		this._dialogParent = value;
		return value;
	}
	,showDialog: function(modal) {
		if(modal == null) {
			modal = true;
		}
		this.modal = modal;
		this.show();
	}
	,_forcedLeft: null
	,set_left: function(value) {
		haxe_ui_containers_Box.prototype.set_left.call(this,value);
		this.autoCenterDialog = false;
		this._forcedLeft = value;
		return value;
	}
	,_forcedTop: null
	,set_top: function(value) {
		haxe_ui_containers_Box.prototype.set_top.call(this,value);
		this.autoCenterDialog = false;
		this._forcedTop = value;
		return value;
	}
	,show: function() {
		var _gthis = this;
		this.handleVisibility(false);
		var dp = this.get_dialogParent();
		if(this.modal) {
			if(this._overlay == null) {
				this._overlay = new haxe_ui_core_Component();
				this._overlay.set_id("modal-background");
				this._overlay.addClass("modal-background");
				this._overlay.set_percentWidth(this._overlay.set_percentHeight(100));
				this._overlay.set_onClick(function(_) {
					if(_gthis.get_closable()) {
						_gthis.hideDialog("{{cancel}}");
					}
				});
			}
			if(dp != null) {
				this.set_includeInLayout(false);
				this._overlay.set_includeInLayout(false);
				this._overlay.screenTop = dp.get_screenTop();
				this._overlay.screenLeft = dp.get_screenLeft();
				this._overlay.set_height(dp.get_height());
				this._overlay.set_width(dp.get_width());
				dp.addComponent(this._overlay);
			} else {
				haxe_ui_core_Screen.get_instance().addComponent(this._overlay);
			}
		}
		this.createButtons();
		if(dp != null) {
			dp.addComponent(this);
		} else {
			haxe_ui_core_Screen.get_instance().addComponent(this);
		}
		this.syncComponentValidation();
		if(this.get_autoHeight() == false) {
			this.dialogContainer.set_percentHeight(100);
			this.dialogContent.set_percentHeight(100);
		}
		if(this.centerDialog) {
			this.centerDialogComponent(js_Boot.__cast(this , haxe_ui_containers_dialogs_Dialog));
		}
		haxe_ui_Toolkit.callLater(function() {
			if(_gthis.centerDialog) {
				_gthis.centerDialogComponent(js_Boot.__cast(_gthis , haxe_ui_containers_dialogs_Dialog));
			}
			haxe_ui_Toolkit.callLater(function() {
				_gthis.handleVisibility(true);
				_gthis.centerDialogComponent(js_Boot.__cast(_gthis , haxe_ui_containers_dialogs_Dialog));
				_gthis._forcedLeft = null;
				_gthis._forcedTop = null;
				if(_gthis.autoCenterDialog) {
					haxe_ui_core_Screen.get_instance().registerEvent("resize",$bind(_gthis,_gthis._onScreenResized));
				}
			});
		});
	}
	,_onScreenResized: function(_) {
		this._forcedLeft = null;
		this._forcedTop = null;
		this.centerDialogComponent(this);
	}
	,_buttonsCreated: null
	,createButtons: function() {
		if(this._buttonsCreated == true) {
			return;
		}
		if(this.buttons != null) {
			var _g = 0;
			var _g1 = haxe_ui_containers_dialogs_DialogButton.toArray(this.buttons);
			while(_g < _g1.length) {
				var button = _g1[_g];
				++_g;
				var buttonComponent = new haxe_ui_components_Button();
				buttonComponent.set_id(haxe_ui_containers_dialogs_DialogButton.toString(button).toLowerCase());
				var text = haxe_ui_containers_dialogs_DialogButton.toString(button);
				buttonComponent.set_text(text);
				buttonComponent.userData = button;
				buttonComponent.registerEvent("click",$bind(this,this.onFooterButtonClick));
				this.addFooterComponent(buttonComponent);
			}
			this._buttonsCreated = true;
		}
	}
	,get_closable: function() {
		return !this.dialogCloseButton.get_hidden();
	}
	,set_closable: function(value) {
		if(value == true) {
			this.dialogCloseButton.show();
		} else {
			this.dialogCloseButton.hide();
		}
		return value;
	}
	,validateDialog: function(button,fn) {
		fn(true);
	}
	,hide: function() {
		var _gthis = this;
		this.validateDialog(this.button,function(result) {
			if(result == true) {
				var dp = _gthis.get_dialogParent();
				var event = new haxe_ui_containers_dialogs_DialogEvent("dialogClosed");
				event.button = _gthis.button;
				_gthis.dispatch(event);
				if(event.canceled == true) {
					return;
				}
				if(_gthis.modal && _gthis._overlay != null) {
					if(dp != null) {
						dp.removeComponent(_gthis._overlay);
					} else {
						haxe_ui_core_Screen.get_instance().removeComponent(_gthis._overlay);
					}
				}
				if(dp != null) {
					dp.removeComponent(_gthis,_gthis.destroyOnClose);
				} else {
					haxe_ui_core_Screen.get_instance().removeComponent(_gthis,_gthis.destroyOnClose);
				}
			}
		});
	}
	,hideDialog: function(button) {
		this.button = button;
		this.hide();
	}
	,get_title: function() {
		return this.dialogTitleLabel.get_text();
	}
	,set_title: function(value) {
		this.dialogTitleLabel.set_text(value);
		return value;
	}
	,addComponent: function(child) {
		if(child == this.dialogContainer) {
			return haxe_ui_containers_Box.prototype.addComponent.call(this,child);
		}
		return this.dialogContent.addComponent(child);
	}
	,validateComponentLayout: function() {
		var b = haxe_ui_containers_Box.prototype.validateComponentLayout.call(this);
		this.dialogTitle.set_width(this.get_layout().get_innerWidth());
		if(this._autoSizeDialog == false) {
			var offset = this.get_layout().get_paddingLeft() + this.get_layout().get_paddingRight();
			if(this.dialogContent.get_width() != this.get_width() - offset) {
				this.dialogContent.set_width(this.get_width() - offset);
			}
			if(this.dialogFooterContainer.get_width() != this.get_width() - offset) {
				this.dialogFooterContainer.set_width(this.get_width() - offset);
			}
		}
		return b;
	}
	,onDestroy: function() {
		haxe_ui_containers_Box.prototype.onDestroy.call(this);
		if(this._overlay != null) {
			haxe_ui_core_Screen.get_instance().removeComponent(this._overlay);
			this._overlay = null;
		}
		haxe_ui_core_Screen.get_instance().unregisterEvent("resize",$bind(this,this._onScreenResized));
	}
	,onContentResize: function(e) {
		if(this.dialogFooter.get_width() <= 0 || this.dialogFooterContainer.get_width() <= 0 || this._autoSizeDialog == false) {
			return;
		}
		var cx = Math.max(this.dialogFooter.get_width(),this.dialogContent.get_width());
		var offset = this.get_layout().get_paddingLeft() + this.get_layout().get_paddingRight();
		var recenter = false;
		if(cx > 0 && cx != this.get_width() + offset) {
			this.set_width(cx + offset);
			recenter = true;
		}
		if(this.dialogFooterContainer.get_width() != this.get_width() - offset) {
			this.dialogFooterContainer.set_width(this.get_width() - offset);
		}
		if(recenter == true && this.autoCenterDialog == true) {
			this.centerDialogComponent(js_Boot.__cast(this , haxe_ui_containers_dialogs_Dialog),false);
		}
	}
	,onFooterResize: function(e) {
		if(this.dialogFooter.get_width() <= 0 || this.dialogFooterContainer.get_width() <= 0 || this._autoSizeDialog == false) {
			return;
		}
		var cx = Math.max(this.dialogFooter.get_width(),this.dialogContent.get_width());
		var offset = this.get_layout().get_paddingLeft() + this.get_layout().get_paddingRight();
		var recenter = false;
		if(cx > 0 && cx != this.get_width() + offset) {
			this.set_width(cx + offset);
			recenter = true;
		}
		if(this.dialogFooterContainer.get_width() != this.get_width() - offset) {
			this.dialogFooterContainer.set_width(this.get_width() - offset);
		}
		if(recenter == true && this.autoCenterDialog == true) {
			this.centerDialogComponent(js_Boot.__cast(this , haxe_ui_containers_dialogs_Dialog),false);
		}
	}
	,addFooterComponent: function(c) {
		this.dialogFooterContainer.show();
		this.dialogFooter.addComponent(c);
	}
	,centerDialogComponent: function(dialog,validate) {
		if(validate == null) {
			validate = true;
		}
		if(this._isDisposed) {
			return;
		}
		if(validate == true) {
			dialog.syncComponentValidation();
		}
		var dp = this.get_dialogParent();
		if(dp != null) {
			if(validate == true) {
				dp.syncComponentValidation();
			}
			var x = dp.get_actualComponentWidth() / 2 - dialog.get_actualComponentWidth() / 2;
			if(this._forcedLeft != null && this._forcedLeft > 0) {
				x = this._forcedLeft;
			}
			var y = dp.get_actualComponentHeight() / 2 - dialog.get_actualComponentHeight() / 2;
			if(this._forcedTop != null && this._forcedTop > 0) {
				y = this._forcedTop;
			}
			dialog.moveComponent(x,y);
		} else {
			var x = haxe_ui_core_Screen.get_instance().get_actualWidth() / 2 - dialog.get_actualComponentWidth() / 2;
			if(this._forcedLeft != null && this._forcedLeft > 0) {
				x = this._forcedLeft;
			}
			var y = haxe_ui_core_Screen.get_instance().get_actualHeight() / 2 - dialog.get_actualComponentHeight() / 2;
			if(this._forcedTop != null && this._forcedTop > 0) {
				y = this._forcedTop;
			}
			dialog.moveComponent(x,y);
		}
	}
	,onFooterButtonClick: function(event) {
		this.hideDialog(event.target.userData);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_backend_DialogBase();
	}
	,__class__: haxe_ui_backend_DialogBase
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_title:"set_title",get_title:"get_title",set_closable:"set_closable",get_closable:"get_closable",set_dialogParent:"set_dialogParent",get_dialogParent:"get_dialogParent"})
});
var haxe_ui_containers_dialogs_Dialog = function() {
	var _gthis = this;
	haxe_ui_backend_DialogBase.call(this);
	haxe_ui_actions_ActionManager.get_instance().registerEvent("actionstart",function(event) {
		if(event.action == "actionCancel" || event.action == "actionBack") {
			_gthis.hideDialog("{{cancel}}");
		}
	});
};
$hxClasses["haxe.ui.containers.dialogs.Dialog"] = haxe_ui_containers_dialogs_Dialog;
haxe_ui_containers_dialogs_Dialog.__name__ = "haxe.ui.containers.dialogs.Dialog";
haxe_ui_containers_dialogs_Dialog.__super__ = haxe_ui_backend_DialogBase;
haxe_ui_containers_dialogs_Dialog.prototype = $extend(haxe_ui_backend_DialogBase.prototype,{
	__onDialogClosed: null
	,onDialogClosed: null
	,set_onDialogClosed: function(value) {
		if(this.__onDialogClosed != null) {
			this.unregisterEvent("dialogClosed",this.__onDialogClosed);
			this.__onDialogClosed = null;
		}
		this.registerEvent("dialogClosed",value);
		this.__onDialogClosed = value;
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_backend_DialogBase.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_backend_DialogBase.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_dialogs_Dialog();
	}
	,__class__: haxe_ui_containers_dialogs_Dialog
	,__properties__: $extend(haxe_ui_backend_DialogBase.prototype.__properties__,{set_onDialogClosed:"set_onDialogClosed"})
});
var gfx_basic_$components_BaseDialog = function(group,modal) {
	haxe_ui_containers_dialogs_Dialog.call(this);
	this.group = group;
	this.modal = modal;
	this.set_onDialogClosed($bind(this,this.onDialogClosedCallback));
};
$hxClasses["gfx.basic_components.BaseDialog"] = gfx_basic_$components_BaseDialog;
gfx_basic_$components_BaseDialog.__name__ = "gfx.basic_components.BaseDialog";
gfx_basic_$components_BaseDialog.__super__ = haxe_ui_containers_dialogs_Dialog;
gfx_basic_$components_BaseDialog.prototype = $extend(haxe_ui_containers_dialogs_Dialog.prototype,{
	queueCloseCallback: null
	,group: null
	,resize: null
	,onClose: null
	,correctPosition: function() {
		this.set_left((haxe_ui_core_Screen.get_instance().get_actualWidth() - this.get_width()) / 2);
		this.set_top((haxe_ui_core_Screen.get_instance().get_actualHeight() - this.get_height()) / 2);
	}
	,correctPositionLater: function() {
		haxe_Timer.delay($bind(this,this.correctPosition),60);
	}
	,onScreenResized: function() {
		this.resize();
		this.correctPosition();
	}
	,showDialog: function(modal) {
		if(modal == null) {
			modal = true;
		}
		haxe_ui_containers_dialogs_Dialog.prototype.showDialog.call(this,modal);
		gfx_SceneManager.addResizeHandler($bind(this,this.onScreenResized));
		this.onScreenResized();
	}
	,onDialogClosedCallback: function(event) {
		gfx_SceneManager.removeResizeHandler($bind(this,this.onScreenResized));
		this.onClose(event.button);
		this.queueCloseCallback(this);
	}
	,assignQueueCallback: function(queueCloseCallback) {
		this.queueCloseCallback = queueCloseCallback;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_dialogs_Dialog.prototype.registerBehaviours.call(this);
	}
	,__class__: gfx_basic_$components_BaseDialog
});
var gfx_basic_$components_CopyableText = function() {
	haxe_ui_containers_HBox.call(this);
	var c0 = new haxe_ui_components_TextField();
	c0.set_id("tf");
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	c0.set_verticalAlign("center");
	this.addComponent(c0);
	var c1 = new gfx_basic_$components_ARPImage();
	c1.set_id("copyBtn");
	c1.set_percentHeight(100.);
	c1.set_styleString("pointer-events:true;background-color:#ffffff");
	c1.set_verticalAlign("center");
	c1.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/common/copy.svg"));
	this.addComponent(c1);
	var c2 = new gfx_basic_$components_ARPImage();
	c2.set_id("tickBtn");
	c2.set_percentHeight(100.);
	c2.set_styleString("pointer-events:true;background-color:#ffffff");
	c2.set_verticalAlign("center");
	c2.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/common/tick.svg"));
	this.addComponent(c2);
	this.set_height(30.);
	this.set_percentWidth(100.);
	this.bindingRoot = true;
	this.tickBtn = c2;
	this.tf = c0;
	this.copyBtn = c1;
	c1.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.COPY_BTN_TOOLTIP));
	c2.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.COPY_BTN_SUCCESS_TOOLTIP));
	this.showCopy();
	var c = this.copyBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onCopySIPPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "copyBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.basic_components.CopyableText", methodName : "new"});
	}
};
$hxClasses["gfx.basic_components.CopyableText"] = gfx_basic_$components_CopyableText;
gfx_basic_$components_CopyableText.__name__ = "gfx.basic_components.CopyableText";
gfx_basic_$components_CopyableText.__super__ = haxe_ui_containers_HBox;
gfx_basic_$components_CopyableText.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	get_copiedText: function() {
		return this.tf.get_text();
	}
	,set_copiedText: function(v) {
		return this.tf.set_text(v);
	}
	,onCopySIPPressed: function(e) {
		browser_Clipboard.copy(this.tf.get_text(),$bind(this,this.onCopySuccessful));
	}
	,onCopySuccessful: function() {
		this.showTick();
		haxe_Timer.delay($bind(this,this.showCopy),500);
	}
	,showTick: function() {
		this.tickBtn.set_hidden(false);
		this.copyBtn.set_hidden(true);
	}
	,showCopy: function() {
		this.copyBtn.set_hidden(false);
		this.tickBtn.set_hidden(true);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_basic_$components_CopyableText();
	}
	,tickBtn: null
	,tf: null
	,copyBtn: null
	,__class__: gfx_basic_$components_CopyableText
	,__properties__: $extend(haxe_ui_containers_HBox.prototype.__properties__,{set_copiedText:"set_copiedText",get_copiedText:"get_copiedText"})
});
var gfx_basic_$components_GenAnnotatedImage = function(key,w,h,spacingPerHeightUnit,imageScaleFactor,squareImage) {
	gfx_basic_$components_AnnotatedImage.call(this,w,h,this.generateImagePath(key),this.generateLabelText(key),this.generateImageTooltip(key),spacingPerHeightUnit,imageScaleFactor,squareImage);
};
$hxClasses["gfx.basic_components.GenAnnotatedImage"] = gfx_basic_$components_GenAnnotatedImage;
gfx_basic_$components_GenAnnotatedImage.__name__ = "gfx.basic_components.GenAnnotatedImage";
gfx_basic_$components_GenAnnotatedImage.__super__ = gfx_basic_$components_AnnotatedImage;
gfx_basic_$components_GenAnnotatedImage.prototype = $extend(gfx_basic_$components_AnnotatedImage.prototype,{
	generateLabelText: null
	,generateImagePath: null
	,generateImageTooltip: null
	,registerBehaviours: function() {
		gfx_basic_$components_AnnotatedImage.prototype.registerBehaviours.call(this);
	}
	,__class__: gfx_basic_$components_GenAnnotatedImage
});
var gfx_basic_$components_Square = function() {
	this.widthBased = true;
	haxe_ui_containers_Box.call(this);
	var c = this;
	if(c != null) {
		c.registerEvent("resize",$bind(this,this.onResizeEvent));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "this" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.basic_components.Square", methodName : "new"});
	}
};
$hxClasses["gfx.basic_components.Square"] = gfx_basic_$components_Square;
gfx_basic_$components_Square.__name__ = "gfx.basic_components.Square";
gfx_basic_$components_Square.__super__ = haxe_ui_containers_Box;
gfx_basic_$components_Square.prototype = $extend(haxe_ui_containers_Box.prototype,{
	widthBased: null
	,onResizeEvent: function(e) {
		if(this.widthBased) {
			this.set_height(this.get_width());
		} else {
			this.set_width(this.get_height());
		}
	}
	,set_width: function(value) {
		this.widthBased = true;
		return haxe_ui_containers_Box.prototype.set_width.call(this,value);
	}
	,set_percentWidth: function(value) {
		this.widthBased = true;
		return haxe_ui_containers_Box.prototype.set_percentWidth.call(this,value);
	}
	,set_height: function(value) {
		this.widthBased = false;
		return haxe_ui_containers_Box.prototype.set_height.call(this,value);
	}
	,set_percentHeight: function(value) {
		this.widthBased = false;
		return haxe_ui_containers_Box.prototype.set_percentHeight.call(this,value);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_basic_$components_Square();
	}
	,__class__: gfx_basic_$components_Square
});
var gfx_basic_$components_utils_DialogGroup = $hxEnums["gfx.basic_components.utils.DialogGroup"] = { __ename__:"gfx.basic_components.utils.DialogGroup",__constructs__:null
	,RemovedOnGameStarted: {_hx_name:"RemovedOnGameStarted",_hx_index:0,__enum__:"gfx.basic_components.utils.DialogGroup",toString:$estr}
	,ReconnectionPopUp: {_hx_name:"ReconnectionPopUp",_hx_index:1,__enum__:"gfx.basic_components.utils.DialogGroup",toString:$estr}
};
gfx_basic_$components_utils_DialogGroup.__constructs__ = [gfx_basic_$components_utils_DialogGroup.RemovedOnGameStarted,gfx_basic_$components_utils_DialogGroup.ReconnectionPopUp];
gfx_basic_$components_utils_DialogGroup.__empty_constructs__ = [gfx_basic_$components_utils_DialogGroup.RemovedOnGameStarted,gfx_basic_$components_utils_DialogGroup.ReconnectionPopUp];
var gfx_basic_$components_utils_DimValue = $hxEnums["gfx.basic_components.utils.DimValue"] = { __ename__:"gfx.basic_components.utils.DimValue",__constructs__:null
	,Auto: {_hx_name:"Auto",_hx_index:0,__enum__:"gfx.basic_components.utils.DimValue",toString:$estr}
	,Exact: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"gfx.basic_components.utils.DimValue",toString:$estr}; },$_._hx_name="Exact",$_.__params__ = ["v"],$_)
	,Percent: ($_=function(v) { return {_hx_index:2,v:v,__enum__:"gfx.basic_components.utils.DimValue",toString:$estr}; },$_._hx_name="Percent",$_.__params__ = ["v"],$_)
};
gfx_basic_$components_utils_DimValue.__constructs__ = [gfx_basic_$components_utils_DimValue.Auto,gfx_basic_$components_utils_DimValue.Exact,gfx_basic_$components_utils_DimValue.Percent];
gfx_basic_$components_utils_DimValue.__empty_constructs__ = [gfx_basic_$components_utils_DimValue.Auto];
function gfx_basic_$components_utils_DimValue_assignWidth(comp,value) {
	switch(value._hx_index) {
	case 0:
		comp.set_percentWidth(null);
		comp.set_width(null);
		break;
	case 1:
		var v = value.v;
		comp.set_percentWidth(null);
		comp.set_width(v);
		break;
	case 2:
		var v = value.v;
		comp.set_width(null);
		comp.set_percentWidth(v);
		break;
	}
}
function gfx_basic_$components_utils_DimValue_assignHeight(comp,value) {
	switch(value._hx_index) {
	case 0:
		comp.set_percentHeight(null);
		comp.set_height(null);
		break;
	case 1:
		var v = value.v;
		comp.set_percentHeight(null);
		comp.set_height(v);
		break;
	case 2:
		var v = value.v;
		comp.set_height(null);
		comp.set_percentHeight(v);
		break;
	}
}
var gfx_common_ComponentConstructor = $hxEnums["gfx.common.ComponentConstructor"] = { __ename__:"gfx.common.ComponentConstructor",__constructs__:null
	,Live: ($_=function(constr) { return {_hx_index:0,constr:constr,__enum__:"gfx.common.ComponentConstructor",toString:$estr}; },$_._hx_name="Live",$_.__params__ = ["constr"],$_)
	,Analysis: ($_=function(initialVariant) { return {_hx_index:1,initialVariant:initialVariant,__enum__:"gfx.common.ComponentConstructor",toString:$estr}; },$_._hx_name="Analysis",$_.__params__ = ["initialVariant"],$_)
};
gfx_common_ComponentConstructor.__constructs__ = [gfx_common_ComponentConstructor.Live,gfx_common_ComponentConstructor.Analysis];
gfx_common_ComponentConstructor.__empty_constructs__ = [];
var gfx_common_PlyHistoryView = function() {
	haxe_ui_containers_VBox.call(this);
	var c = this;
	if(c != null) {
		c.registerEvent("resize",$bind(this,this.onResize));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "this" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.common.PlyHistoryView", methodName : "new"});
	}
};
$hxClasses["gfx.common.PlyHistoryView"] = gfx_common_PlyHistoryView;
gfx_common_PlyHistoryView.__name__ = "gfx.common.PlyHistoryView";
gfx_common_PlyHistoryView.__interfaces__ = [net_INetObserver,gfx_analysis_IAnalysisPeripheralEventObserver,gameboard_IGameBoardObserver];
gfx_common_PlyHistoryView.__super__ = haxe_ui_containers_VBox;
gfx_common_PlyHistoryView.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	isGamePlayable: null
	,onScrollRequested: null
	,startingSituation: null
	,currentSituation: null
	,moveHistory: null
	,shownMove: null
	,postInit: null
	,appendPlyStr: null
	,onEditorToggled: null
	,setShownMove: null
	,onHistoryDropped: null
	,scrollToShownMove: null
	,onResize: function(e) {
		haxe_Timer.delay($bind(this,this.scrollToShownMove),40);
	}
	,handleAnalysisPeripheralEvent: function(event) {
		switch(event._hx_index) {
		case 0:
			var _g = event.branchStr;
			var branch = event.branch;
			var pointer = event.pointer;
			this.rewrite(branch,pointer);
			break;
		case 1:
			var plyCnt = event.plyCnt;
			this.revertPlys(plyCnt);
			break;
		case 8:
			this.onEditorToggled(false);
			break;
		case 9:
			this.onEditorToggled(false);
			break;
		case 11:
			this.onEditorToggled(true);
			break;
		case 13:
			var type = event.type;
			this.performScroll(type);
			break;
		default:
		}
	}
	,handleGameBoardEvent: function(event) {
		switch(event._hx_index) {
		case 0:
			var _g = event.plyStr;
			var _g = event.performedBy;
			var ply = event.ply;
			this.appendPly(ply,true);
			break;
		case 1:
			var _g = event.plyStr;
			var _g = event.performedBy;
			this.performScroll(gfx_utils_PlyScrollType.Next);
			break;
		case 2:
			var _g = event.plyStr;
			var _g = event.performedBy;
			var ply = event.ply;
			var droppedMovesCount = event.droppedMovesCount;
			this.revertPlys(droppedMovesCount);
			this.appendPly(ply,true);
			break;
		case 3:
			this.performScroll(gfx_utils_PlyScrollType.End);
			break;
		}
	}
	,handleNetEvent: function(event) {
		switch(event._hx_index) {
		case 24:
			var _g = event.timeData;
			var ply = event.ply;
			var autoScrollEnabled;
			switch(Preferences.autoScrollOnMove.get()._hx_index) {
			case 0:
				autoScrollEnabled = true;
				break;
			case 1:
				autoScrollEnabled = this.isGamePlayable;
				break;
			case 2:
				autoScrollEnabled = false;
				break;
			}
			var selectMove = this.shownMove == this.moveHistory.length || autoScrollEnabled;
			this.appendPly(ply,selectMove);
			break;
		case 25:
			var _g = event.timeData;
			var plysToUndo = event.plysToUndo;
			this.revertPlys(plysToUndo);
			break;
		default:
		}
	}
	,performScroll: function(type) {
		switch(type._hx_index) {
		case 0:
			this.setShownMove(0);
			break;
		case 1:
			if(this.shownMove > 0) {
				this.setShownMove(this.shownMove - 1);
			}
			break;
		case 2:
			if(this.shownMove < this.moveHistory.length) {
				this.setShownMove(this.shownMove + 1);
			}
			break;
		case 3:
			this.setShownMove(this.moveHistory.length);
			break;
		case 4:
			var plyNum = type.plyNum;
			this.setShownMove(plyNum);
			break;
		}
	}
	,appendPly: function(ply,selectAfterwards) {
		if(selectAfterwards == null) {
			selectAfterwards = true;
		}
		var plyStr = ply.toNotation(this.currentSituation);
		this.currentSituation.performRawPly(ply);
		this.moveHistory.push(ply);
		this.appendPlyStr(plyStr);
		if(selectAfterwards) {
			this.performScroll(gfx_utils_PlyScrollType.End);
		}
	}
	,clear: function() {
		this.currentSituation = this.startingSituation.copy();
		this.moveHistory = [];
		this.shownMove = 0;
		this.onHistoryDropped();
	}
	,rewrite: function(newPlySequence,newShownMove) {
		this.clear();
		var _g = 0;
		while(_g < newPlySequence.length) {
			var ply = newPlySequence[_g];
			++_g;
			this.appendPly(ply,false);
		}
		this.performScroll(gfx_utils_PlyScrollType.Precise(newShownMove));
	}
	,revertPlys: function(cnt) {
		var newLength = this.moveHistory.length - cnt;
		if(cnt > 0) {
			if(newLength > 0) {
				this.rewrite(this.moveHistory.slice(0,newLength),newLength);
			} else {
				this.clear();
			}
		}
	}
	,updateStartingSituation: function(newStartingSituation) {
		this.startingSituation = newStartingSituation.copy();
		this.clear();
	}
	,actualize: function(parsedData) {
		this.startingSituation = parsedData.startingSituation;
		this.currentSituation = this.startingSituation.copy();
		var _g = 0;
		var _g1 = parsedData.movesPlayed;
		while(_g < _g1.length) {
			var ply = _g1[_g];
			++_g;
			this.appendPly(ply,false);
		}
		this.performScroll(gfx_utils_PlyScrollType.End);
	}
	,init: function(onScrollRequested,constructor) {
		this.onScrollRequested = onScrollRequested;
		this.moveHistory = [];
		this.shownMove = 0;
		switch(constructor._hx_index) {
		case 0:
			var _g = constructor.constr;
			switch(_g._hx_index) {
			case 0:
				var _g1 = _g.whiteRef;
				var _g1 = _g.blackRef;
				var _g1 = _g.playerElos;
				var _g1 = _g.timeControl;
				var _g1 = _g.startDatetime;
				var startingSituation = _g.startingSituation;
				this.isGamePlayable = true;
				this.startingSituation = startingSituation;
				this.currentSituation = startingSituation.copy();
				break;
			case 1:
				var _g1 = _g.timeData;
				var _g1 = _g.followedPlayerLogin;
				var parsedData = _g.parsedData;
				this.isGamePlayable = parsedData.isPlayerParticipant();
				this.actualize(parsedData);
				break;
			case 2:
				var _g1 = _g.watchedPlyerLogin;
				var parsedData = _g.parsedData;
				this.isGamePlayable = false;
				this.actualize(parsedData);
				break;
			}
			break;
		case 1:
			var initialVariant = constructor.initialVariant;
			this.isGamePlayable = false;
			this.startingSituation = initialVariant.startingSituation;
			this.currentSituation = this.startingSituation.copy();
			var _g = 0;
			var _g1 = initialVariant.getMainLineBranch();
			while(_g < _g1.length) {
				var ply = _g1[_g];
				++_g;
				this.appendPly(ply,false);
			}
			this.performScroll(gfx_utils_PlyScrollType.End);
			break;
		}
		this.postInit();
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,__class__: gfx_common_PlyHistoryView
});
var gfx_common_CreepingLine = function() {
	this.plyCards = [];
	gfx_common_PlyHistoryView.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        #runwaySV .scrollview-contents {\r\n            padding: 1px;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_containers_ScrollView();
	c0.set_id("runwaySV");
	c0.set_height(25.);
	c0.set_percentWidth(100.);
	c0.set_percentContentHeight(100.);
	c0.set_styleString("background-color:#ffffff;");
	c0.set_autoHideScrolls(true);
	var c1 = new haxe_ui_containers_HBox();
	c1.set_id("lineBox");
	c1.set_percentHeight(100.);
	c0.addComponent(c1);
	this.addComponent(c0);
	this.set_percentWidth(100.);
	this.bindingRoot = true;
	this.runwaySV = c0;
	this.lineBox = c1;
};
$hxClasses["gfx.common.CreepingLine"] = gfx_common_CreepingLine;
gfx_common_CreepingLine.__name__ = "gfx.common.CreepingLine";
gfx_common_CreepingLine.__super__ = gfx_common_PlyHistoryView;
gfx_common_CreepingLine.prototype = $extend(gfx_common_PlyHistoryView.prototype,{
	plyCards: null
	,onPlySelectedManually: function(num) {
		this.onScrollRequested(gfx_utils_PlyScrollType.Precise(num));
	}
	,appendPlyStr: function(plyStr) {
		var moveNum = this.moveHistory.length;
		var plyCard = new gfx_common_CreepingLinePly(moveNum,plyStr,$bind(this,this.onPlySelectedManually));
		this.plyCards.push(plyCard);
		this.lineBox.addComponent(plyCard);
	}
	,onEditorToggled: function(editorActive) {
		this.set_hidden(editorActive);
	}
	,setShownMove: function(value) {
		if(this.shownMove > 0 && this.plyCards.length >= this.shownMove) {
			this.plyCards[this.shownMove - 1].deselect();
		}
		this.shownMove = value;
		if(this.shownMove > 0) {
			this.plyCards[this.shownMove - 1].select();
		}
		this.scrollToShownMove();
	}
	,onHistoryDropped: function() {
		var _g = 0;
		var _g1 = this.plyCards;
		while(_g < _g1.length) {
			var card = _g1[_g];
			++_g;
			this.lineBox.removeComponent(card);
		}
		this.plyCards = [];
	}
	,scrollTo: function(relPos) {
		var hscroll = this.runwaySV.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			hscroll.set_pos(hscroll.get_min() + relPos * (hscroll.get_max() - hscroll.get_min()));
		}
	}
	,scrollToShownMove: function() {
		if(this.shownMove == 0) {
			this.scrollTo(0);
			return;
		}
		var card = this.plyCards[this.shownMove - 1];
		var newScrollPos = net_shared_utils_MathUtils.clamp((card.get_left() + card.get_width() / 2 - this.runwaySV.get_width() / 2) / (this.lineBox.get_width() - this.runwaySV.get_width()),0,1);
		this.scrollTo(newScrollPos);
	}
	,postInit: function() {
	}
	,registerBehaviours: function() {
		gfx_common_PlyHistoryView.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gfx_common_PlyHistoryView.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_common_CreepingLine();
	}
	,runwaySV: null
	,lineBox: null
	,__class__: gfx_common_CreepingLine
});
var haxe_ui_containers_Card = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.containers.Card"] = haxe_ui_containers_Card;
haxe_ui_containers_Card.__name__ = "haxe.ui.containers.Card";
haxe_ui_containers_Card.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Card.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_containers__$Card_TextBehaviour);
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		this.set_text(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Card();
	}
	,registerComposite: function() {
		haxe_ui_containers_Box.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_containers__$Card_Builder;
	}
	,__class__: haxe_ui_containers_Card
});
var gfx_common_CreepingLinePly = function(pointerPos,plyStr,onClicked) {
	haxe_ui_containers_Card.call(this);
	var c0 = new haxe_ui_components_Label();
	c0.set_id("plyLabel");
	c0.set_styleString("font-bold:true;font-size:16px");
	c0.set_verticalAlign("center");
	c0.set_horizontalAlign("center");
	this.addComponent(c0);
	this.set_percentHeight(100.);
	this.set_styleString("cursor: pointer;padding-top:1;padding-bottom:1;padding-left:5;padding-right:5");
	this.bindingRoot = true;
	this.plyLabel = c0;
	this.pointerPos = pointerPos;
	this.plyLabel.set_text("" + pointerPos + ". " + plyStr);
	this.set_onClick(function(e) {
		onClicked(pointerPos);
	});
	this.deselect();
};
$hxClasses["gfx.common.CreepingLinePly"] = gfx_common_CreepingLinePly;
gfx_common_CreepingLinePly.__name__ = "gfx.common.CreepingLinePly";
gfx_common_CreepingLinePly.__super__ = haxe_ui_containers_Card;
gfx_common_CreepingLinePly.prototype = $extend(haxe_ui_containers_Card.prototype,{
	pointerPos: null
	,select: function() {
		var cardStyle = this.get_customStyle().clone();
		cardStyle.backgroundColor = 14540253;
		this.set_customStyle(cardStyle);
		var labelStyle = this.plyLabel.get_customStyle().clone();
		labelStyle.color = 3355443;
		this.plyLabel.set_customStyle(labelStyle);
	}
	,deselect: function() {
		var cardStyle = this.get_customStyle().clone();
		cardStyle.backgroundColor = 16777215;
		this.set_customStyle(cardStyle);
		var labelStyle = this.plyLabel.get_customStyle().clone();
		labelStyle.color = 6710886;
		this.plyLabel.set_customStyle(labelStyle);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Card.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Card.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_pointerPos: null
	,_constructorParam_plyStr: null
	,_constructorParam_onClicked: null
	,self: function() {
		return new gfx_common_CreepingLinePly(this._constructorParam_pointerPos,this._constructorParam_plyStr,this._constructorParam_onClicked);
	}
	,plyLabel: null
	,__class__: gfx_common_CreepingLinePly
});
var haxe_ui_core_ItemRenderer = function() {
	this._fieldList = null;
	this.itemIndex = -1;
	this._allowHover = true;
	this.autoRegisterInteractiveEvents = true;
	haxe_ui_containers_Box.call(this);
	this.registerEvent("mouseover",$bind(this,this._onItemMouseOver));
	this.registerEvent("mouseout",$bind(this,this._onItemMouseOut));
	this.registerEvent("mousedown",$bind(this,this._onItemMouseDown));
	this.registerEvent("mouseup",$bind(this,this._onItemMouseUp));
};
$hxClasses["haxe.ui.core.ItemRenderer"] = haxe_ui_core_ItemRenderer;
haxe_ui_core_ItemRenderer.__name__ = "haxe.ui.core.ItemRenderer";
haxe_ui_core_ItemRenderer.__super__ = haxe_ui_containers_Box;
haxe_ui_core_ItemRenderer.prototype = $extend(haxe_ui_containers_Box.prototype,{
	autoRegisterInteractiveEvents: null
	,_onItemMouseOver: function(event) {
		this.addClass(":hover");
	}
	,_onItemMouseOut: function(event) {
		this.removeClass(":hover");
	}
	,_onItemMouseDown: function(event) {
		this.addClass(":down");
	}
	,_onItemMouseUp: function(event) {
		this.removeClass(":down");
	}
	,_allowHover: null
	,get_allowHover: function() {
		return this._allowHover;
	}
	,set_allowHover: function(value) {
		if(this._allowHover == value) {
			return value;
		}
		this._allowHover = value;
		if(this._allowHover == true) {
			this.registerEvent("mouseover",$bind(this,this._onItemMouseOver));
			this.registerEvent("mouseout",$bind(this,this._onItemMouseOut));
		} else {
			this.unregisterEvent("mouseover",$bind(this,this._onItemMouseOver));
			this.unregisterEvent("mouseout",$bind(this,this._onItemMouseOut));
		}
		return value;
	}
	,_data: null
	,get_data: function() {
		return this._data;
	}
	,set_data: function(value) {
		this._data = value;
		this.invalidateComponent("data",false);
		return value;
	}
	,itemIndex: null
	,_fieldList: null
	,validateComponentData: function() {
		if(this._data != null && (this._fieldList == null || this._fieldList.length == 0)) {
			var _g = Type.typeof(this._data);
			switch(_g._hx_index) {
			case 4:
				if(typeof(this._data) == "string" == false) {
					var fieldList = Reflect.fields(this._data);
					if(js_Boot.getClass(this._data) != null) {
						var instanceFields = Type.getInstanceFields(js_Boot.getClass(this._data));
						var _g1 = 0;
						while(_g1 < instanceFields.length) {
							var i = instanceFields[_g1];
							++_g1;
							if(fieldList.indexOf(i) == -1 && Reflect.isFunction(Reflect.getProperty(this._data,i)) == false) {
								fieldList.push(i);
							} else if(StringTools.startsWith(i,"get_") && fieldList.indexOf(HxOverrides.substr(i,4,null)) == -1 && Reflect.isFunction(Reflect.getProperty(this._data,i)) == true) {
								fieldList.push(HxOverrides.substr(i,4,null));
							}
						}
						this._fieldList = fieldList;
					}
				} else {
					this._fieldList = ["text"];
				}
				break;
			case 6:
				var _g1 = _g.c;
				if(typeof(this._data) == "string" == false) {
					var fieldList = Reflect.fields(this._data);
					if(js_Boot.getClass(this._data) != null) {
						var instanceFields = Type.getInstanceFields(js_Boot.getClass(this._data));
						var _g = 0;
						while(_g < instanceFields.length) {
							var i = instanceFields[_g];
							++_g;
							if(fieldList.indexOf(i) == -1 && Reflect.isFunction(Reflect.getProperty(this._data,i)) == false) {
								fieldList.push(i);
							} else if(StringTools.startsWith(i,"get_") && fieldList.indexOf(HxOverrides.substr(i,4,null)) == -1 && Reflect.isFunction(Reflect.getProperty(this._data,i)) == true) {
								fieldList.push(HxOverrides.substr(i,4,null));
							}
						}
						this._fieldList = fieldList;
					}
				} else {
					this._fieldList = ["text"];
				}
				break;
			default:
				this._fieldList = ["text"];
			}
		}
		this.updateValues(this._data,this._fieldList);
		if(this.autoRegisterInteractiveEvents) {
			var components = this.findComponents(null,haxe_ui_core_InteractiveComponent);
			var _g = 0;
			while(_g < components.length) {
				var c = components[_g];
				++_g;
				if(((c) instanceof haxe_ui_components_Button)) {
					if(c.hasEvent("click",$bind(this,this.onItemClick)) == false) {
						c.registerEvent("click",$bind(this,this.onItemClick));
					}
				} else if(c.hasEvent("change",$bind(this,this.onItemChange)) == false) {
					c.registerEvent("change",$bind(this,this.onItemChange));
				}
			}
		}
		this.onDataChanged(this._data);
	}
	,onDataChanged: function(data) {
		this._data = data;
	}
	,onItemChange: function(event) {
		if(this.itemIndex < 0) {
			return;
		}
		var v = event.target.get_value();
		if(this._data != null) {
			Reflect.setProperty(this._data,event.target.get_id(),v);
		}
		var e = new haxe_ui_events_ItemEvent("itemcomponentevent");
		e.bubble = true;
		e.source = event.target;
		e.sourceEvent = event;
		e.itemIndex = this.itemIndex;
		e.data = this._data;
		this.dispatch(e);
	}
	,onItemClick: function(event) {
		if(this.itemIndex < 0) {
			return;
		}
		var e = new haxe_ui_events_ItemEvent("itemcomponentevent");
		e.bubble = true;
		e.source = event.target;
		e.sourceEvent = event;
		e.itemIndex = this.itemIndex;
		e.data = this._data;
		this.dispatch(e);
	}
	,updateValues: function(value,fieldList) {
		if(fieldList == null) {
			fieldList = Reflect.fields(value);
		}
		var valueObject = null;
		var _g = Type.typeof(value);
		switch(_g._hx_index) {
		case 4:
			if(typeof(value) == "string" == false) {
				valueObject = value;
			} else {
				valueObject = { text : value};
			}
			break;
		case 6:
			var _g1 = _g.c;
			if(typeof(value) == "string" == false) {
				valueObject = value;
			} else {
				valueObject = { text : value};
			}
			break;
		default:
			valueObject = { text : value};
		}
		var _g = 0;
		while(_g < fieldList.length) {
			var f = fieldList[_g];
			++_g;
			var v = Reflect.getProperty(valueObject,f);
			var c = this.findComponent(f,null,true);
			if(c != null && v != null) {
				var propValue = haxe_ui_util_TypeConverter.convertTo(v,haxe_ui_core_TypeMap.getTypeInfo(c.get_className(),"value"));
				c.set_value(propValue);
				if(this.autoRegisterInteractiveEvents) {
					if(((c) instanceof haxe_ui_core_InteractiveComponent) || ((c) instanceof haxe_ui_core_ItemRenderer)) {
						if(c.hasEvent("change",$bind(this,this.onItemChange)) == false) {
							c.registerEvent("change",$bind(this,this.onItemChange));
						}
						if(c.hasEvent("click",$bind(this,this.onItemClick)) == false) {
							c.registerEvent("click",$bind(this,this.onItemClick));
						}
					}
				}
				c.show();
			} else if(c != null) {
				c.hide();
			} else if(f != "id" && f != "layout") {
				try {
					Reflect.setProperty(this,f,v);
				} catch( _g1 ) {
				}
			} else if(Type.typeof(v) == ValueType.TObject) {
				this.updateValues(v);
			}
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		c.set_allowHover(this.get_allowHover());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ItemRenderer();
	}
	,__class__: haxe_ui_core_ItemRenderer
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_data:"set_data",get_data:"get_data",set_allowHover:"set_allowHover",get_allowHover:"get_allowHover"})
});
var gfx_common_GameWidget = function() {
	haxe_ui_core_ItemRenderer.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        #fullBox {\r\n            border: 1px solid #aaaaaa;\r\n            background: #fdfdfd #eaeaea;\r\n            pointer-events:true;\r\n            padding: 5px;\r\n            spacing: 0px;\r\n        }\r\n        #fullBox:hover {\r\n            background: #c9e3ff;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_containers_HBox();
	c0.set_id("fullBox");
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new gfx_basic_$components_Square();
	c1.set_id("boardContainer");
	c1.set_percentHeight(100.);
	c0.addComponent(c1);
	var c2 = new haxe_ui_containers_VBox();
	c2.set_id("infoBox");
	c2.set_percentWidth(100.);
	c2.set_percentHeight(100.);
	var c3 = new haxe_ui_containers_HBox();
	c3.set_percentWidth(100.);
	var c4 = new haxe_ui_components_Label();
	c4.set_id("datetimeLabel");
	c4.set_styleString("font-size: 15");
	c4.set_verticalAlign("center");
	c3.addComponent(c4);
	var c5 = new haxe_ui_components_Spacer();
	c5.set_percentWidth(100.);
	c3.addComponent(c5);
	var c6 = new haxe_ui_components_Label();
	c6.set_id("timeControlLabel");
	c6.set_styleString("font-size: 15");
	c6.set_verticalAlign("center");
	c3.addComponent(c6);
	c2.addComponent(c3);
	var c7 = new haxe_ui_containers_Box();
	c7.set_id("opponentsLabelBox");
	c7.set_percentWidth(100.);
	c7.set_percentHeight(100.);
	c7.set_horizontalAlign("center");
	var c8 = new haxe_ui_components_Label();
	c8.set_id("opponentsLabel");
	c8.set_styleString("text-align:center;font-size: 22");
	c8.set_verticalAlign("center");
	c8.set_horizontalAlign("center");
	c7.addComponent(c8);
	c2.addComponent(c7);
	var c9 = new haxe_ui_components_Label();
	c9.set_id("resultLabel");
	c9.set_styleString("font-size: 18");
	c9.set_horizontalAlign("center");
	c2.addComponent(c9);
	var c10 = new haxe_ui_components_Label();
	c10.set_id("openingLabel");
	c10.set_percentWidth(100.);
	c10.set_styleString("text-align:center;font-style: italic;font-size: 18");
	c2.addComponent(c10);
	c0.addComponent(c2);
	this.addComponent(c0);
	this.set_height(150.);
	this.set_percentWidth(100.);
	this.bindingRoot = true;
	this.timeControlLabel = c6;
	this.resultLabel = c9;
	this.opponentsLabelBox = c7;
	this.opponentsLabel = c8;
	this.openingLabel = c10;
	this.infoBox = c2;
	this.fullBox = c0;
	this.datetimeLabel = c4;
	this.boardContainer = c1;
	var c = this;
	if(c != null) {
		c.registerEvent("resize",$bind(this,this.onResize));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "this" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.common.GameWidget", methodName : "new"});
	}
	var c = this.opponentsLabelBox;
	if(c != null) {
		c.registerEvent("resize",$bind(this,this.onOpponentsBoxSizeChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "opponentsLabelBox" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.common.GameWidget", methodName : "new"});
	}
	var c = this.fullBox;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onClicked));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "fullBox" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.common.GameWidget", methodName : "new"});
	}
};
$hxClasses["gfx.common.GameWidget"] = gfx_common_GameWidget;
gfx_common_GameWidget.__name__ = "gfx.common.GameWidget";
gfx_common_GameWidget.__super__ = haxe_ui_core_ItemRenderer;
gfx_common_GameWidget.prototype = $extend(haxe_ui_core_ItemRenderer.prototype,{
	typedData: null
	,opponentsLabelLongText: null
	,opponentsLabelTallText: null
	,setPadding: function(container,value) {
		var style = container.get_customStyle().clone();
		style.paddingLeft = value;
		style.paddingRight = value;
		style.paddingTop = value;
		style.paddingBottom = value;
		container.set_customStyle(style);
	}
	,setFontSize: function(label,value) {
		var style = label.get_customStyle().clone();
		style.fontSize = value;
		label.set_customStyle(style);
	}
	,onResize: function(e) {
		var renderKeyWidth = Math.min(800,this.get_width());
		this.setFontSize(this.opponentsLabel,renderKeyWidth * 0.02 + 6);
		this.setFontSize(this.openingLabel,renderKeyWidth * 0.016 + 5.2);
		this.setFontSize(this.resultLabel,renderKeyWidth * 0.016 + 5.2);
		this.setFontSize(this.datetimeLabel,renderKeyWidth * 0.0136 + 4.1);
		this.setFontSize(this.timeControlLabel,renderKeyWidth * 0.0136 + 4.1);
		this.setPadding(this.infoBox,renderKeyWidth / 40);
	}
	,onOpponentsBoxSizeChanged: function(e) {
		if(this.opponentsLabelBox.get_width() / this.opponentsLabelBox.get_height() < 3.3333333333333335) {
			this.opponentsLabel.set_text(this.opponentsLabelTallText);
		} else {
			this.opponentsLabel.set_text(this.opponentsLabelLongText);
		}
	}
	,loadBoard: function(shownSituation,watchedColor) {
		var orientationColor = watchedColor == null ? shownSituation.turnColor : watchedColor;
		var board = new gameboard_Board(shownSituation,orientationColor,gameboard_util_Marking.None);
		board.set_percentWidth(100);
		board.set_percentHeight(100);
		this.boardContainer.addComponent(board);
	}
	,onClicked: function(e) {
		this.typedData.onClicked();
	}
	,onDataChanged: function(data) {
		haxe_ui_core_ItemRenderer.prototype.onDataChanged.call(this,data);
		if(data == null || this.typedData != null) {
			return;
		}
		this.typedData = data;
		var parsedData = serialization_GameLogParser.parse(this.typedData.info.log);
		var watchedColor = null;
		if(this.typedData.watchedLogin != null) {
			watchedColor = parsedData.getParticipantColor(this.typedData.watchedLogin);
		}
		this.loadBoard(parsedData.currentSituation,watchedColor);
		var whitePlayerStr = dict_Utils.playerRef(parsedData.whiteRef);
		var blackPlayerStr = dict_Utils.playerRef(parsedData.blackRef);
		if(parsedData.elo != null) {
			var value = parsedData.elo.get(net_shared_PieceColor.White);
			var whitePlayerStr1;
			switch(value._hx_index) {
			case 0:
				whitePlayerStr1 = "−";
				break;
			case 1:
				var elo = value.elo;
				whitePlayerStr1 = "" + elo + "?";
				break;
			case 2:
				var elo = value.elo;
				whitePlayerStr1 = "" + elo;
				break;
			}
			whitePlayerStr += " (" + whitePlayerStr1 + ")";
			var value = parsedData.elo.get(net_shared_PieceColor.Black);
			var blackPlayerStr1;
			switch(value._hx_index) {
			case 0:
				blackPlayerStr1 = "−";
				break;
			case 1:
				var elo = value.elo;
				blackPlayerStr1 = "" + elo + "?";
				break;
			case 2:
				var elo = value.elo;
				blackPlayerStr1 = "" + elo;
				break;
			}
			blackPlayerStr += " (" + blackPlayerStr1 + ")";
		}
		this.opponentsLabelLongText = "" + whitePlayerStr + " vs " + blackPlayerStr;
		this.opponentsLabelTallText = "" + whitePlayerStr + "\nvs\n" + blackPlayerStr;
		if(parsedData.datetime != null) {
			this.datetimeLabel.set_text(DateTools.format(parsedData.datetime,"%d.%m.%Y %H:%M:%S"));
		} else {
			this.datetimeLabel.set_hidden(true);
		}
		this.timeControlLabel.set_text(parsedData.timeControl.toString());
		this.opponentsLabel.set_text(this.opponentsLabelLongText);
		this.resultLabel.set_text(dict_Utils.getResolution(parsedData.outcome));
		if(parsedData.startingSituation.isDefaultStarting()) {
			this.openingLabel.set_text(openings_OpeningTree.getOpening(parsedData.movesPlayed));
		} else {
			this.openingLabel.set_text(dict_Dictionary.getPhrase(dict_Phrase.CUSTOM_STARTING_POSITION));
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_ItemRenderer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ItemRenderer.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_common_GameWidget();
	}
	,timeControlLabel: null
	,resultLabel: null
	,opponentsLabelBox: null
	,opponentsLabel: null
	,openingLabel: null
	,infoBox: null
	,fullBox: null
	,datetimeLabel: null
	,boardContainer: null
	,__class__: gfx_common_GameWidget
});
var gfx_common_MoveCellRenderer = function() {
	haxe_ui_core_ItemRenderer.call(this);
	var c0 = new haxe_ui_components_Label();
	c0.set_id("label");
	c0.set_styleString("pointer-events:true;background-color:yellow;background-opacity:0");
	this.addComponent(c0);
	this.bindingRoot = true;
	this.label = c0;
	var c = this.label;
	if(c != null) {
		c.registerEvent("mouseover",$bind(this,this.onHover));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "label" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.common.MoveCellRenderer", methodName : "new"});
	}
	var c = this.label;
	if(c != null) {
		c.registerEvent("mouseout",$bind(this,this.onOut));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "label" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.common.MoveCellRenderer", methodName : "new"});
	}
	var c = this.label;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onClicked));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "label" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.common.MoveCellRenderer", methodName : "new"});
	}
};
$hxClasses["gfx.common.MoveCellRenderer"] = gfx_common_MoveCellRenderer;
gfx_common_MoveCellRenderer.__name__ = "gfx.common.MoveCellRenderer";
gfx_common_MoveCellRenderer.__super__ = haxe_ui_core_ItemRenderer;
gfx_common_MoveCellRenderer.prototype = $extend(haxe_ui_core_ItemRenderer.prototype,{
	onMoveSelected: null
	,onHover: function(e) {
		if(this.onMoveSelected == null) {
			return;
		}
		var newStyle = this.label.get_customStyle().clone();
		newStyle.fontItalic = true;
		this.label.set_customStyle(newStyle);
	}
	,onOut: function(e) {
		var newStyle = this.label.get_customStyle().clone();
		newStyle.fontItalic = false;
		this.label.set_customStyle(newStyle);
	}
	,onClicked: function(e) {
		if(this.onMoveSelected != null) {
			this.onMoveSelected();
		}
	}
	,onDataChanged: function(data) {
		haxe_ui_core_ItemRenderer.prototype.onDataChanged.call(this,data);
		var columnData = Reflect.field(data,this.get_id());
		if(columnData != null) {
			this.onMoveSelected = columnData.onMoveSelected;
			this.label.set_text(columnData.plyStr);
			var newStyle = this.label.get_customStyle().clone();
			if(columnData.selected) {
				newStyle.fontBold = true;
				newStyle.color = 0;
				newStyle.fontSize = 14;
			} else {
				newStyle.fontBold = false;
				newStyle.color = 6710886;
				newStyle.fontSize = 12;
			}
			this.label.set_customStyle(newStyle);
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_ItemRenderer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ItemRenderer.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_common_MoveCellRenderer();
	}
	,label: null
	,__class__: gfx_common_MoveCellRenderer
});
var gfx_common_MoveNavigator = function() {
	gfx_common_PlyHistoryView.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        .navigator-scroll-btn .icon {\r\n            width: 24px;\r\n            height: 24px;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_containers_HorizontalButtonBar();
	c0.set_id("scrollBtnBar");
	c0.set_percentWidth(100.);
	c0.set_toggle(false);
	var c1 = new haxe_ui_components_Button();
	c1.set_id("homeBtn");
	c1.set_height(34.);
	c1.set_percentWidth(25.);
	c1.set_styleNames("navigator-scroll-btn");
	c1.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/common/home.svg"));
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_Button();
	c2.set_id("prevBtn");
	c2.set_height(34.);
	c2.set_percentWidth(25.);
	c2.set_styleNames("navigator-scroll-btn");
	c2.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/common/prev.svg"));
	c0.addComponent(c2);
	var c3 = new haxe_ui_components_Button();
	c3.set_id("nextBtn");
	c3.set_height(34.);
	c3.set_percentWidth(25.);
	c3.set_styleNames("navigator-scroll-btn");
	c3.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/common/next.svg"));
	c0.addComponent(c3);
	var c4 = new haxe_ui_components_Button();
	c4.set_id("endBtn");
	c4.set_height(34.);
	c4.set_percentWidth(25.);
	c4.set_styleNames("navigator-scroll-btn");
	c4.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/common/end.svg"));
	c0.addComponent(c4);
	this.addComponent(c0);
	var c5 = new haxe_ui_containers_TableView();
	c5.set_id("movetable");
	c5.set_percentWidth(100.);
	c5.set_percentHeight(100.);
	c5.set_percentContentWidth(100.);
	var c6 = new haxe_ui_containers_Header();
	c6.set_height(0.);
	c6.set_percentWidth(100.);
	var c7 = new haxe_ui_components_Column();
	c7.set_id("num");
	c7.set_percentWidth(13.);
	c6.addComponent(c7);
	var c8 = new haxe_ui_components_Column();
	c8.set_id("whiteMove");
	c8.set_percentWidth(43.5);
	c6.addComponent(c8);
	var c9 = new haxe_ui_components_Column();
	c9.set_id("blackMove");
	c9.set_percentWidth(43.5);
	c6.addComponent(c9);
	c5.addComponent(c6);
	var c10 = new gfx_common_MoveCellRenderer();
	c10.set_id("whiteMove");
	c5.addComponent(c10);
	var c11 = new gfx_common_MoveCellRenderer();
	c11.set_id("blackMove");
	c5.addComponent(c11);
	this.addComponent(c5);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.set_styleString("border-top: 0; border-left: 1; border-right: 1; border-bottom: 1;border-color: #dddddd;padding: 1 1 1 1;spacing:0px");
	this.bindingRoot = true;
	this.whiteMove = c8;
	this.scrollBtnBar = c0;
	this.prevBtn = c2;
	this.num = c7;
	this.nextBtn = c3;
	this.movetable = c5;
	this.homeBtn = c1;
	this.endBtn = c4;
	this.blackMove = c9;
	this.movetable.set_selectionMode("disabled");
};
$hxClasses["gfx.common.MoveNavigator"] = gfx_common_MoveNavigator;
gfx_common_MoveNavigator.__name__ = "gfx.common.MoveNavigator";
gfx_common_MoveNavigator.__super__ = gfx_common_PlyHistoryView;
gfx_common_MoveNavigator.prototype = $extend(gfx_common_PlyHistoryView.prototype,{
	lastMovetableEntry: null
	,postInit: function() {
		var _g = this.onScrollRequested;
		var a1 = gfx_utils_PlyScrollType.Home;
		this.homeBtn.set_onClick(utils_CallbackTools.expand(function() {
			_g(a1);
		}));
		var _g1 = this.onScrollRequested;
		var a11 = gfx_utils_PlyScrollType.Prev;
		this.prevBtn.set_onClick(utils_CallbackTools.expand(function() {
			_g1(a11);
		}));
		var _g2 = this.onScrollRequested;
		var a12 = gfx_utils_PlyScrollType.Next;
		this.nextBtn.set_onClick(utils_CallbackTools.expand(function() {
			_g2(a12);
		}));
		var _g3 = this.onScrollRequested;
		var a13 = gfx_utils_PlyScrollType.End;
		this.endBtn.set_onClick(utils_CallbackTools.expand(function() {
			_g3(a13);
		}));
		this.updateScrollButtons();
	}
	,onPlySelectedManually: function(num) {
		this.onScrollRequested(gfx_utils_PlyScrollType.Precise(num));
	}
	,appendPlyStr: function(plyStr) {
		if(this.currentSituation.turnColor == net_shared_PieceColor.Black) {
			var moveNum = this.moveHistory.length;
			var _g = $bind(this,this.onPlySelectedManually);
			var num = moveNum;
			var whiteData = { plyStr : plyStr, selected : false, onMoveSelected : function() {
				_g(num);
			}};
			var _g1 = $bind(this,this.onPlySelectedManually);
			var num1 = moveNum + 1;
			var blackData = { plyStr : "", selected : false, onMoveSelected : function() {
				_g1(num1);
			}};
			this.lastMovetableEntry = { "num" : "" + moveNum, "whiteMove" : whiteData, "blackMove" : blackData};
			this.movetable.get_dataSource().add(this.lastMovetableEntry);
		} else if(this.lastMovetableEntry == null) {
			var whiteData = { plyStr : "", selected : false, onMoveSelected : null};
			var _g2 = $bind(this,this.onPlySelectedManually);
			var num2 = 1;
			var blackData = { plyStr : plyStr, selected : false, onMoveSelected : function() {
				_g2(num2);
			}};
			this.lastMovetableEntry = { "num" : "1", "whiteMove" : whiteData, "blackMove" : blackData};
			this.movetable.get_dataSource().add(this.lastMovetableEntry);
		} else {
			this.lastMovetableEntry.blackMove.plyStr = plyStr;
			this.movetable.get_dataSource().update(this.movetable.get_dataSource().get_size() - 1,this.lastMovetableEntry);
		}
		this.updateScrollButtons();
	}
	,onEditorToggled: function(editorActive) {
		this.set_disabled(editorActive);
	}
	,rowIndexByPlyNum: function(plyNum) {
		if(plyNum > 0) {
			if(this.startingSituation.turnColor == net_shared_PieceColor.White) {
				return Math.floor((plyNum - 1) / 2);
			} else {
				return Math.floor(plyNum / 2);
			}
		} else {
			return null;
		}
	}
	,setMoveBold: function(plyNum,bold) {
		if(plyNum <= 0) {
			return;
		}
		var moveColor = plyNum % 2 == 1 ? this.startingSituation.turnColor : this.startingSituation.turnColor == net_shared_PieceColor.White ? net_shared_PieceColor.Black : net_shared_PieceColor.White;
		var rowIndex = this.rowIndexByPlyNum(plyNum);
		var currentlySelectedRowData = this.movetable.get_dataSource().get(rowIndex);
		if(moveColor == net_shared_PieceColor.White) {
			currentlySelectedRowData.whiteMove.selected = bold;
		} else {
			currentlySelectedRowData.blackMove.selected = bold;
		}
		this.movetable.get_dataSource().update(rowIndex,currentlySelectedRowData);
	}
	,setShownMove: function(value) {
		if(this.shownMove == value) {
			return;
		}
		if(this.shownMove > 0) {
			this.setMoveBold(this.shownMove,false);
		}
		this.shownMove = value;
		if(value > 0) {
			this.setMoveBold(value,true);
			this.scrollToShownMove();
		} else {
			this.scrollTo(0);
		}
		this.updateScrollButtons();
	}
	,onHistoryDropped: function() {
		this.lastMovetableEntry = null;
		this.movetable.get_dataSource().clear();
		this.updateScrollButtons();
	}
	,scrollTo: function(relPos) {
		var vscroll = this.movetable.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.set_pos(vscroll.get_min() + relPos * (vscroll.get_max() - vscroll.get_min()));
		}
	}
	,scrollToShownMove: function() {
		if(this.shownMove == 0) {
			this.scrollTo(0);
			return;
		}
		var totalRows = this.startingSituation.turnColor == net_shared_PieceColor.White ? Math.ceil(this.moveHistory.length / 2) : Math.ceil((this.moveHistory.length + 1) / 2);
		var neededRowIndex = this.rowIndexByPlyNum(this.shownMove);
		var windowHeight = this.movetable.get_height();
		var totalHeight = this.movetable.get_contentHeight();
		var rowHeight = totalHeight / totalRows;
		var neededRowCenterY = neededRowIndex * rowHeight + rowHeight / 2;
		var relPos = net_shared_utils_MathUtils.clamp((neededRowCenterY - windowHeight / 2) / (totalHeight - windowHeight),0,1);
		this.scrollTo(relPos);
	}
	,updateScrollButtons: function() {
		this.homeBtn.set_disabled(this.shownMove == 0);
		this.prevBtn.set_disabled(this.shownMove == 0);
		this.nextBtn.set_disabled(this.shownMove == this.moveHistory.length);
		this.endBtn.set_disabled(this.shownMove == this.moveHistory.length);
	}
	,registerBehaviours: function() {
		gfx_common_PlyHistoryView.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gfx_common_PlyHistoryView.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_common_MoveNavigator();
	}
	,whiteMove: null
	,scrollBtnBar: null
	,prevBtn: null
	,num: null
	,nextBtn: null
	,movetable: null
	,homeBtn: null
	,endBtn: null
	,blackMove: null
	,__class__: gfx_common_MoveNavigator
});
var gfx_common_ShareDialog = function() {
	haxe_ui_containers_dialogs_Dialog.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        .tool-button .icon {\r\n            width: 30px;\r\n            height: 30px;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_containers_TabView();
	c0.set_id("tabView");
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	c0.set_styleNames("full-width-buttons");
	var c1 = new haxe_ui_containers_Box();
	c1.set_percentWidth(100.);
	c1.set_percentHeight(100.);
	var c2 = new haxe_ui_containers_VBox();
	c2.set_percentWidth(100.);
	c2.set_percentHeight(100.);
	var c3 = new haxe_ui_components_SectionHeader();
	c3.set_percentWidth(100.);
	c2.addComponent(c3);
	var c4 = new gfx_basic_$components_CopyableText();
	c4.set_id("sipText");
	c4.set_height(30.);
	c4.set_percentWidth(100.);
	c2.addComponent(c4);
	var c5 = new haxe_ui_components_SectionHeader();
	c5.set_percentWidth(100.);
	c2.addComponent(c5);
	var c6 = new haxe_ui_containers_HBox();
	c6.set_percentWidth(100.);
	c6.set_percentHeight(100.);
	var c7 = new haxe_ui_containers_Box();
	c7.set_id("boardContainer");
	c7.set_percentWidth(50.);
	c7.set_percentHeight(100.);
	c6.addComponent(c7);
	var c8 = new haxe_ui_containers_VBox();
	c8.set_id("pngExportParamsBox");
	c8.set_percentWidth(50.);
	c8.set_verticalAlign("center");
	var c9 = new haxe_ui_components_CheckBox();
	c9.set_id("preserveAspectRatioCheckbox");
	c9.set_selected(false);
	c9.set_horizontalAlign("center");
	c8.addComponent(c9);
	var c10 = new haxe_ui_containers_HBox();
	c10.set_height(30.);
	c10.set_horizontalAlign("center");
	var c11 = new haxe_ui_components_Label();
	c11.set_styleString("font-size: 16px");
	c11.set_verticalAlign("center");
	c10.addComponent(c11);
	var c12 = new haxe_ui_components_TextField();
	c12.set_id("pngWidthTF");
	c12.set_width(54.);
	c12.set_verticalAlign("center");
	c12.set_restrictChars("0-9");
	c10.addComponent(c12);
	var c13 = new haxe_ui_components_Label();
	c13.set_text("x");
	c13.set_styleString("font-size: 16px");
	c13.set_verticalAlign("center");
	c10.addComponent(c13);
	var c14 = new haxe_ui_components_TextField();
	c14.set_id("pngHeightTF");
	c14.set_width(54.);
	c14.set_verticalAlign("center");
	c14.set_restrictChars("0-9");
	c10.addComponent(c14);
	c8.addComponent(c10);
	var c15 = new haxe_ui_components_Spacer();
	c15.set_height(10.);
	c8.addComponent(c15);
	var c16 = new haxe_ui_components_CheckBox();
	c16.set_id("transparentBackgroundCheckbox");
	c16.set_selected(true);
	c16.set_horizontalAlign("center");
	c8.addComponent(c16);
	var c17 = new haxe_ui_containers_HBox();
	c17.set_id("bgColorBox");
	c17.set_height(30.);
	c17.set_horizontalAlign("center");
	c17.set_disabled(true);
	var c18 = new haxe_ui_components_Label();
	c18.set_styleString("font-size: 16px");
	c18.set_verticalAlign("center");
	c17.addComponent(c18);
	var c19 = new haxe_ui_components_popups_ColorPickerPopup();
	c19.set_id("colorPicker");
	c19.set_verticalAlign("center");
	c19.set_selectedItem("#ffffff");
	c17.addComponent(c19);
	c8.addComponent(c17);
	var c20 = new haxe_ui_components_Spacer();
	c20.set_height(10.);
	c8.addComponent(c20);
	var c21 = new haxe_ui_components_CheckBox();
	c21.set_id("addMarkingCheckbox");
	c21.set_selected(false);
	c21.set_horizontalAlign("center");
	c8.addComponent(c21);
	c6.addComponent(c8);
	c2.addComponent(c6);
	var c22 = new haxe_ui_components_Button();
	c22.set_id("downloadPNGBtn");
	c22.set_horizontalAlign("center");
	c2.addComponent(c22);
	c1.addComponent(c2);
	c0.addComponent(c1);
	var c23 = new gfx_game_ShareGameTab();
	c23.set_id("shareGameTab");
	c0.addComponent(c23);
	var c24 = new haxe_ui_containers_Box();
	c24.set_id("shareExportTab");
	c24.set_percentWidth(100.);
	c24.set_percentHeight(100.);
	var c25 = new haxe_ui_containers_VBox();
	c25.set_percentWidth(100.);
	c25.set_percentHeight(100.);
	var c26 = new haxe_ui_components_SectionHeader();
	c26.set_percentWidth(100.);
	c25.addComponent(c26);
	var c27 = new haxe_ui_components_Button();
	c27.set_id("exportStudyBtn");
	c27.set_horizontalAlign("center");
	c25.addComponent(c27);
	var c28 = new haxe_ui_components_SectionHeader();
	c28.set_percentWidth(100.);
	c25.addComponent(c28);
	var c29 = new haxe_ui_components_Label();
	c29.set_styleString("font-size:22px");
	c29.set_horizontalAlign("center");
	c25.addComponent(c29);
	c24.addComponent(c25);
	c0.addComponent(c24);
	this.addComponent(c0);
	this.bindingRoot = true;
	this.transparentBackgroundCheckbox = c16;
	this.tabView = c0;
	this.sipText = c4;
	this.shareGameTab = c23;
	this.shareExportTab = c24;
	this.preserveAspectRatioCheckbox = c9;
	this.pngWidthTF = c12;
	this.pngHeightTF = c14;
	this.pngExportParamsBox = c8;
	this.exportStudyBtn = c27;
	this.downloadPNGBtn = c22;
	this.colorPicker = c19;
	this.boardContainer = c7;
	this.bgColorBox = c17;
	this.addMarkingCheckbox = c21;
	c1.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_POSITION_TAB_NAME)));
	c3.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_SIP_HEADER)));
	c5.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_IMAGE_HEADER)));
	c9.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_DOWNLOAD_PNG_KEEP_RATIO_CHECKBOX_TEXT)));
	c11.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_DOWNLOAD_PNG_DIMENSIONS_LABEL_TEXT)));
	c16.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_DOWNLOAD_PNG_TRANSPARENT_BG_CHECKBOX_TEXT)));
	c18.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_DOWNLOAD_PNG_BGCOLOR_LABEL_TEXT)));
	c21.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_DOWNLOAD_PNG_MARKUP_CHECKBOX_TEXT)));
	c22.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_DOWNLOAD_PNG_BTN_TEXT)));
	c24.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_EXPORT_TAB_NAME)));
	c26.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_EXPORT_AS_STUDY_HEADER)));
	c27.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_EXPORT_AS_STUDY_BTN_TEXT)));
	c28.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_EXPORT_AS_QUESTION_MARKS_TEASER)));
	c29.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_COMING_SOON)));
	this.set_title(dict_Dictionary.getPhrase(dict_Phrase.SHARE_DIALOG_TITLE));
	this.buttons = null;
	var c = this.downloadPNGBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onDownloadPNGPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "downloadPNGBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.common.ShareDialog", methodName : "new"});
	}
	var c = this.preserveAspectRatioCheckbox;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onKeepRatioCheckChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "preserveAspectRatioCheckbox" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.common.ShareDialog", methodName : "new"});
	}
	var c = this.transparentBackgroundCheckbox;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onTransparentBGCheckChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "transparentBackgroundCheckbox" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.common.ShareDialog", methodName : "new"});
	}
	var c = this.addMarkingCheckbox;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onAddMarkingCheckChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "addMarkingCheckbox" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.common.ShareDialog", methodName : "new"});
	}
	var c = this.pngWidthTF;
	if(c != null) {
		c.registerEvent("focusout",$bind(this,this.onWidthFocusLost));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "pngWidthTF" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.common.ShareDialog", methodName : "new"});
	}
	var c = this.pngHeightTF;
	if(c != null) {
		c.registerEvent("focusout",$bind(this,this.onHeightFocusLost));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "pngHeightTF" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.common.ShareDialog", methodName : "new"});
	}
};
$hxClasses["gfx.common.ShareDialog"] = gfx_common_ShareDialog;
gfx_common_ShareDialog.__name__ = "gfx.common.ShareDialog";
gfx_common_ShareDialog.__super__ = haxe_ui_containers_dialogs_Dialog;
gfx_common_ShareDialog.prototype = $extend(haxe_ui_containers_dialogs_Dialog.prototype,{
	situation: null
	,orientation: null
	,onDownloadPNGPressed: function(e) {
		var pngWidth = Std.parseInt(this.pngWidthTF.get_text());
		var pngHeight = Std.parseInt(this.pngHeightTF.get_text());
		var estimatedThickness = Math.ceil(0.0053571428571428572 * pngWidth);
		var boardWidth = pngWidth - estimatedThickness - 2;
		var boardHeight = pngHeight - estimatedThickness - 2;
		var backgroundColor;
		if(this.transparentBackgroundCheckbox.get_selected()) {
			backgroundColor = 0;
		} else {
			var b = js_Boot.__cast(this.colorPicker.get_selectedItem() , Int);
			backgroundColor = haxe_ui_util_Color.toInt(-16777216) | haxe_ui_util_Color.toInt(b);
		}
		var addLetters = this.addMarkingCheckbox.get_selected();
		if(gameboard_util_BoardSize.inverseAspectRatio(addLetters) * boardWidth > boardHeight) {
			boardWidth = Math.floor(boardHeight / gameboard_util_BoardSize.inverseAspectRatio(addLetters));
		} else {
			boardHeight = Math.floor(boardWidth * gameboard_util_BoardSize.inverseAspectRatio(addLetters));
		}
		var aParam = "png";
		var wParam = pngWidth == null ? "null" : "" + pngWidth;
		var hParam = pngHeight == null ? "null" : "" + pngHeight;
		var bParam = HxOverrides.substr(haxe_ui_util_Color.toHex(backgroundColor),1,null);
		var oParam = this.orientation == net_shared_PieceColor.White ? "w" : "b";
		var s = this.situation.serialize();
		var sParam = encodeURIComponent(s);
		var url = "https://intellector.info/tools/gen/?a=" + aParam + "&w=" + wParam + "&h=" + hParam + "&b=" + bParam + "&o=" + oParam + "&s=" + sParam;
		if(addLetters) {
			url += "&l=t";
		}
		window.open(url,"_blank");
	}
	,showShareDialog: function(mutedGameboard) {
		mutedGameboard.suppressLMBHandler = true;
		mutedGameboard.suppressRMBHandler = true;
		this.set_onDialogClosed(function(e) {
			mutedGameboard.suppressLMBHandler = false;
			mutedGameboard.suppressRMBHandler = false;
		});
		if(haxe_ui_core_Screen.get_instance().get_actualWidth() < 600 || haxe_ui_core_Screen.get_instance().get_actualHeight() < 500) {
			this.pngExportParamsBox.set_hidden(true);
			this.boardContainer.set_percentWidth(100);
		} else {
			this.pngExportParamsBox.set_hidden(false);
			this.boardContainer.set_percentWidth(50);
		}
		this.set_percentWidth(net_shared_utils_MathUtils.clamp(900 / haxe_ui_core_Screen.get_instance().get_actualWidth(),0.5,0.95) * 100);
		this.set_percentHeight(net_shared_utils_MathUtils.clamp(600 / haxe_ui_core_Screen.get_instance().get_actualHeight(),0.5,0.95) * 100);
		this.showDialog(false);
	}
	,onKeepRatioCheckChanged: function(e) {
		if(this.preserveAspectRatioCheckbox.get_selected()) {
			this.pngHeightTF.set_text("" + Math.ceil(gameboard_util_BoardSize.inverseAspectRatio(this.addMarkingCheckbox.get_selected()) * Std.parseInt(this.pngWidthTF.get_text())));
			this.pngHeightTF.set_disabled(true);
		} else {
			this.pngHeightTF.set_disabled(false);
		}
	}
	,onTransparentBGCheckChanged: function(e) {
		this.bgColorBox.set_disabled(this.transparentBackgroundCheckbox.get_selected());
	}
	,onAddMarkingCheckChanged: function(e) {
		if(this.addMarkingCheckbox.get_selected() && this.preserveAspectRatioCheckbox.get_selected()) {
			this.pngHeightTF.set_text("" + Math.ceil(gameboard_util_BoardSize.inverseAspectRatio(true) * Std.parseInt(this.pngWidthTF.get_text())));
		}
	}
	,onWidthFocusLost: function(e) {
		var value = Std.parseInt(this.pngWidthTF.get_text());
		if(value == null) {
			this.pngWidthTF.set_text("" + net_shared_utils_MathUtils.clampI(Math.ceil(Std.parseInt(this.pngHeightTF.get_text()) / gameboard_util_BoardSize.inverseAspectRatio(this.addMarkingCheckbox.get_selected())),100,2048));
		} else {
			var clampedValue = net_shared_utils_MathUtils.clampI(value,100,2048);
			this.pngWidthTF.set_text("" + clampedValue);
			if(this.preserveAspectRatioCheckbox.get_selected()) {
				this.pngHeightTF.set_text("" + Math.ceil(gameboard_util_BoardSize.inverseAspectRatio(this.addMarkingCheckbox.get_selected()) * clampedValue));
			}
		}
	}
	,onHeightFocusLost: function(e) {
		var value = Std.parseInt(this.pngHeightTF.get_text());
		if(value == null) {
			this.pngHeightTF.set_text("" + net_shared_utils_MathUtils.clampI(Math.ceil(gameboard_util_BoardSize.inverseAspectRatio(this.addMarkingCheckbox.get_selected()) * Std.parseInt(this.pngWidthTF.get_text())),100,2048));
		} else {
			var clampedValue = net_shared_utils_MathUtils.clampI(value,100,2048);
			if(this.preserveAspectRatioCheckbox.get_selected()) {
				this.pngWidthTF.set_text("" + Math.ceil(clampedValue / gameboard_util_BoardSize.inverseAspectRatio(this.addMarkingCheckbox.get_selected())));
			}
			this.pngHeightTF.set_text("" + clampedValue);
		}
	}
	,initInGame: function(situation,orientation,gameLink,pin,startingSituation,plySequence) {
		this.init(situation,orientation);
		this.tabView.removeComponent(this.shareExportTab);
		this.shareGameTab.init(gameLink,pin,startingSituation,plySequence);
	}
	,initInAnalysis: function(situation,orientation,variant,exploredStudyData) {
		var _gthis = this;
		this.init(situation,orientation);
		this.tabView.removeComponent(this.shareGameTab);
		if(Networker.isConnectedToServer()) {
			var studyParamsDialogMode;
			if(exploredStudyData != null && LoginManager.isPlayer(exploredStudyData.ownerLogin)) {
				studyParamsDialogMode = gfx_popups_StudyParamsDialogMode.CreateOrOverwrite(variant,exploredStudyData.id,exploredStudyData.info);
			} else {
				studyParamsDialogMode = gfx_popups_StudyParamsDialogMode.Create(variant);
			}
			this.exportStudyBtn.set_onClick(function(e) {
				_gthis.hideDialog(null);
				gfx_Dialogs.getQueue().add(new gfx_popups_StudyParamsDialog(studyParamsDialogMode));
			});
		} else {
			this.tabView.removeComponent(this.shareExportTab);
		}
	}
	,init: function(situation,orientation) {
		var board = new gameboard_Board(situation,orientation,gameboard_util_Marking.None);
		board.set_percentWidth(100);
		board.set_percentHeight(100);
		this.boardContainer.addComponent(board);
		this.sipText.set_copiedText(situation.serialize());
		this.pngWidthTF.set_text("720");
		this.pngHeightTF.set_text("" + Math.ceil(gameboard_util_BoardSize.inverseAspectRatio(this.addMarkingCheckbox.get_selected()) * 720));
		this.situation = situation;
		this.orientation = orientation;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_dialogs_Dialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_dialogs_Dialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_common_ShareDialog();
	}
	,transparentBackgroundCheckbox: null
	,tabView: null
	,sipText: null
	,shareGameTab: null
	,shareExportTab: null
	,preserveAspectRatioCheckbox: null
	,pngWidthTF: null
	,pngHeightTF: null
	,pngExportParamsBox: null
	,exportStudyBtn: null
	,downloadPNGBtn: null
	,colorPicker: null
	,boardContainer: null
	,bgColorBox: null
	,addMarkingCheckbox: null
	,__class__: gfx_common_ShareDialog
});
var gfx_common_SituationTooltipRenderer = function(situation,orientationColor) {
	haxe_ui_core_ItemRenderer.call(this);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	c0.set_styleString("background-color:#eeeeee;border: 1px solid #BBBBBB;padding:3px");
	var c1 = new haxe_ui_containers_Box();
	c1.set_id("boardContainer");
	c1.set_percentWidth(100.);
	c1.set_percentHeight(100.);
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_Label();
	c2.set_id("turnColorLabel");
	c2.set_horizontalAlign("center");
	c0.addComponent(c2);
	this.addComponent(c0);
	this.set_width(300.);
	this.set_height(300.);
	this.bindingRoot = true;
	this.turnColorLabel = c2;
	this.boardContainer = c1;
	this.board = new gameboard_Board(situation,orientationColor,gameboard_util_Marking.None);
	this.board.set_percentWidth(100);
	this.board.set_percentHeight(100);
	this.boardContainer.addComponent(this.board);
	this.onWidthChanged();
	if(situation == null) {
		this.setSituation(net_shared_board_Situation.defaultStarting());
	} else {
		this.setSituation(situation);
	}
};
$hxClasses["gfx.common.SituationTooltipRenderer"] = gfx_common_SituationTooltipRenderer;
gfx_common_SituationTooltipRenderer.__name__ = "gfx.common.SituationTooltipRenderer";
gfx_common_SituationTooltipRenderer.__super__ = haxe_ui_core_ItemRenderer;
gfx_common_SituationTooltipRenderer.prototype = $extend(haxe_ui_core_ItemRenderer.prototype,{
	board: null
	,onWidthChanged: function() {
		var newStyle = this.turnColorLabel.get_customStyle().clone();
		newStyle.fontSize = this.get_width() / 10.5;
		this.turnColorLabel.set_customStyle(newStyle);
	}
	,setSituation: function(sit) {
		this.board.setShownSituation(sit);
		this.turnColorLabel.set_text(dict_Dictionary.getPhrase(dict_Phrase.TURN_COLOR(sit.turnColor)));
		this.turnColorLabel.invalidateComponent();
		this.turnColorLabel.validateNow();
	}
	,setOrientation: function(orientationColor) {
		this.board.setOrientation(orientationColor);
	}
	,registerBehaviours: function() {
		haxe_ui_core_ItemRenderer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ItemRenderer.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_situation: null
	,_constructorParam_orientationColor: null
	,self: function() {
		return new gfx_common_SituationTooltipRenderer(this._constructorParam_situation,this._constructorParam_orientationColor);
	}
	,turnColorLabel: null
	,boardContainer: null
	,__class__: gfx_common_SituationTooltipRenderer
});
var gfx_game_Chatbox = function() {
	haxe_ui_containers_VBox.call(this);
	var c0 = new haxe_ui_containers_ScrollView();
	c0.set_id("history");
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	c0.set_percentContentWidth(100.);
	c0.set_contentLayoutName("vertical");
	this.addComponent(c0);
	var c1 = new haxe_ui_containers_HBox();
	c1.set_height(30.);
	c1.set_percentWidth(100.);
	var c2 = new haxe_ui_components_TextField();
	c2.set_id("messageInput");
	c2.set_percentWidth(100.);
	c2.set_percentHeight(100.);
	c1.addComponent(c2);
	var c3 = new haxe_ui_components_Button();
	c3.set_id("sendBtn");
	c3.set_width(50.);
	c3.set_percentHeight(100.);
	c3.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/live/chat_send.svg"));
	c1.addComponent(c3);
	this.addComponent(c1);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.set_styleString("spacing:5px");
	this.bindingRoot = true;
	this.sendBtn = c3;
	this.messageInput = c2;
	this.history = c0;
	c2.set_placeholder(Std.string(dict_Dictionary.getPhrase(dict_Phrase.CHATBOX_MESSAGE_PLACEHOLDER)));
	var c = this.sendBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onSendBtnPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sendBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.game.Chatbox", methodName : "new"});
	}
};
$hxClasses["gfx.game.Chatbox"] = gfx_game_Chatbox;
gfx_game_Chatbox.__name__ = "gfx.game.Chatbox";
gfx_game_Chatbox.__interfaces__ = [net_INetObserver];
gfx_game_Chatbox.__super__ = haxe_ui_containers_VBox;
gfx_game_Chatbox.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	ownerColor: null
	,handleNetEvent: function(event) {
		switch(event._hx_index) {
		case 21:
			var authorRef = event.authorRef;
			var message = event.message;
			this.appendMessage(authorRef,message,true);
			break;
		case 22:
			var authorRef = event.authorRef;
			var message = event.message;
			if(this.ownerColor == null) {
				this.appendMessage(authorRef,message,false);
			}
			break;
		case 26:
			var _g = event.timeData;
			var color = event.receiver;
			this.appendLog(dict_Dictionary.getPhrase(dict_Phrase.TIME_ADDED_MESSAGE(color)));
			break;
		case 27:
			var _g = event.rematchPossible;
			var _g = event.remainingTimeMs;
			var _g = event.newPersonalElo;
			var outcome = event.outcome;
			this.onGameEnded(outcome);
			break;
		case 28:
			var color = event.color;
			this.appendLog(dict_Dictionary.getPhrase(dict_Phrase.PLAYER_DISCONNECTED_MESSAGE(color)));
			break;
		case 29:
			var color = event.color;
			this.appendLog(dict_Dictionary.getPhrase(dict_Phrase.PLAYER_RECONNECTED_MESSAGE(color)));
			break;
		case 30:
			var ref = event.ref;
			this.appendLog(dict_Dictionary.getPhrase(dict_Phrase.SPECTATOR_JOINED_MESSAGE(dict_Utils.playerRef(ref))));
			break;
		case 31:
			var ref = event.ref;
			this.appendLog(dict_Dictionary.getPhrase(dict_Phrase.SPECTATOR_LEFT_MESSAGE(dict_Utils.playerRef(ref))));
			break;
		case 32:
			var color = event.color;
			this.appendLog(dict_Dictionary.getPhrase(dict_Phrase.DRAW_OFFERED_MESSAGE(color)));
			break;
		case 33:
			var color = event.color;
			this.appendLog(dict_Dictionary.getPhrase(dict_Phrase.DRAW_CANCELLED_MESSAGE(color)));
			break;
		case 34:
			var color = event.color;
			this.appendLog(dict_Dictionary.getPhrase(dict_Phrase.DRAW_ACCEPTED_MESSAGE(color)));
			break;
		case 35:
			var color = event.color;
			this.appendLog(dict_Dictionary.getPhrase(dict_Phrase.DRAW_DECLINED_MESSAGE(color)));
			break;
		case 36:
			var color = event.color;
			this.appendLog(dict_Dictionary.getPhrase(dict_Phrase.TAKEBACK_OFFERED_MESSAGE(color)));
			break;
		case 37:
			var color = event.color;
			this.appendLog(dict_Dictionary.getPhrase(dict_Phrase.TAKEBACK_CANCELLED_MESSAGE(color)));
			break;
		case 38:
			var color = event.color;
			this.appendLog(dict_Dictionary.getPhrase(dict_Phrase.TAKEBACK_ACCEPTED_MESSAGE(color)));
			break;
		case 39:
			var color = event.color;
			this.appendLog(dict_Dictionary.getPhrase(dict_Phrase.TAKEBACK_DECLINED_MESSAGE(color)));
			break;
		default:
		}
	}
	,reactToOwnAction: function(btn) {
		var message;
		switch(btn._hx_index) {
		case 2:
			message = dict_Phrase.DRAW_OFFERED_MESSAGE(this.ownerColor);
			break;
		case 3:
			message = dict_Phrase.DRAW_CANCELLED_MESSAGE(this.ownerColor);
			break;
		case 4:
			message = dict_Phrase.TAKEBACK_OFFERED_MESSAGE(this.ownerColor);
			break;
		case 5:
			message = dict_Phrase.TAKEBACK_CANCELLED_MESSAGE(this.ownerColor);
			break;
		case 11:
			message = dict_Phrase.DRAW_ACCEPTED_MESSAGE(this.ownerColor);
			break;
		case 12:
			message = dict_Phrase.DRAW_DECLINED_MESSAGE(this.ownerColor);
			break;
		case 13:
			message = dict_Phrase.TAKEBACK_ACCEPTED_MESSAGE(this.ownerColor);
			break;
		case 14:
			message = dict_Phrase.TAKEBACK_DECLINED_MESSAGE(this.ownerColor);
			break;
		default:
			message = null;
		}
		if(message != null) {
			this.appendLog(dict_Dictionary.getPhrase(message));
		}
	}
	,appendMessage: function(authorRef,text,isNotFromSpectator) {
		var guestAuthorStyle = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,true,null,!isNotFromSpectator,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		var normalAuthorStyle = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,true,null,!isNotFromSpectator,null,"pointer",null,null,null,null,null,null,null,"true",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		var hoverAuthorStyle = normalAuthorStyle.clone();
		hoverAuthorStyle.color = 4362200;
		var authorLabel = new haxe_ui_components_Label();
		authorLabel.set_percentWidth(100);
		authorLabel.set_text(dict_Utils.playerRef(authorRef));
		if(authorRef.charAt(0) != "_") {
			authorLabel.set_customStyle(normalAuthorStyle);
			authorLabel.set_onMouseOver(function(e) {
				authorLabel.set_customStyle(hoverAuthorStyle);
			});
			authorLabel.set_onMouseOut(function(e) {
				authorLabel.set_customStyle(normalAuthorStyle);
			});
			authorLabel.set_onClick(function(e) {
				net_Requests.getMiniProfile(authorRef);
			});
		} else {
			authorLabel.set_customStyle(guestAuthorStyle);
		}
		var textLabel = new haxe_ui_components_Label();
		textLabel.set_percentWidth(100);
		textLabel.set_text(text);
		textLabel.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,!isNotFromSpectator,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
		this.history.addComponent(authorLabel);
		this.history.addComponent(textLabel);
		haxe_Timer.delay($bind(this,this.scrollToMax),50);
	}
	,appendLog: function(text) {
		var label = new haxe_ui_components_Label();
		label.set_percentWidth(100);
		label.set_text(text);
		label.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"center",null,null,null,null,null,null,null,true,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
		this.history.addComponent(label);
		haxe_Timer.delay($bind(this,this.scrollToMax),50);
	}
	,scrollToMax: function() {
		var vscroll = this.history.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.set_pos(vscroll.get_max());
		}
	}
	,onKeyPress: function(e) {
		if(e.keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("enter") || e.keyCode == 108) {
			if(this.messageInput.get_focus()) {
				this.send();
			}
		}
	}
	,onSendBtnPressed: function(e) {
		this.send();
	}
	,send: function() {
		var ownRef = LoginManager.getRef();
		var isLegalChar = null;
		var formerText = StringTools.trim(this.messageInput.get_text());
		var text = "";
		var newLength = formerText.length;
		if(500 < newLength) {
			newLength = 500;
		}
		var _g = 0;
		var _g1 = newLength;
		while(_g < _g1) {
			var index = _g++;
			if(isLegalChar == null) {
				if(utils_StringUtils.isLegalForChat(HxOverrides.cca(formerText,index))) {
					text += formerText.charAt(index);
				}
			} else if(isLegalChar(formerText.charAt(index))) {
				text += formerText.charAt(index);
			}
		}
		var text1 = text;
		this.messageInput.set_text("");
		if(text1 != "") {
			Networker.emitEvent(net_shared_ClientEvent.Message(text1));
			if(this.ownerColor == null) {
				this.appendMessage(ownRef,text1,false);
			} else {
				this.appendMessage(ownRef,text1,true);
			}
		}
	}
	,onGameEnded: function(outcome) {
		this.messageInput.set_disabled(true);
		this.sendBtn.set_disabled(true);
		haxe_ui_core_Screen.get_instance().unregisterEvent("keydown",$bind(this,this.onKeyPress));
		this.appendLog(dict_Utils.chatboxGameOverMessage(outcome));
	}
	,actualize: function(parserOutput) {
		var _g = 0;
		var _g1 = parserOutput.chatEntries;
		while(_g < _g1.length) {
			var entry = _g1[_g];
			++_g;
			switch(entry._hx_index) {
			case 0:
				var authorColor = entry.author;
				var text = entry.text;
				var authorRef = authorColor == net_shared_PieceColor.White ? parserOutput.whiteRef : parserOutput.blackRef;
				this.appendMessage(authorRef,text,true);
				break;
			case 1:
				var text1 = entry.text;
				this.appendLog(text1);
				break;
			}
		}
		if(parserOutput.outcome != null) {
			this.onGameEnded(parserOutput.outcome);
		}
	}
	,init: function(constructor) {
		switch(constructor._hx_index) {
		case 0:
			var _g = constructor.playerElos;
			var _g = constructor.timeControl;
			var _g = constructor.startingSituation;
			var _g = constructor.startDatetime;
			var whiteRef = constructor.whiteRef;
			var blackRef = constructor.blackRef;
			if(LoginManager.isPlayer(whiteRef)) {
				this.ownerColor = net_shared_PieceColor.White;
			} else if(LoginManager.isPlayer(blackRef)) {
				this.ownerColor = net_shared_PieceColor.Black;
			} else {
				this.ownerColor = null;
			}
			break;
		case 1:
			var _g = constructor.timeData;
			var _g = constructor.followedPlayerLogin;
			var parsedData = constructor.parsedData;
			this.ownerColor = parsedData.getPlayerColor();
			this.actualize(parsedData);
			break;
		case 2:
			var _g = constructor.watchedPlyerLogin;
			var parsedData = constructor.parsedData;
			this.ownerColor = null;
			this.actualize(parsedData);
			break;
		}
		haxe_ui_core_Screen.get_instance().registerEvent("keydown",$bind(this,this.onKeyPress));
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_game_Chatbox();
	}
	,sendBtn: null
	,messageInput: null
	,history: null
	,__class__: gfx_game_Chatbox
});
var gfx_game_Clock = function() {
	this.invisible = false;
	this.running = false;
	haxe_ui_containers_Card.call(this);
	var c0 = new haxe_ui_components_Label();
	c0.set_id("label");
	c0.set_text("00:00");
	c0.set_styleString("font-size:48px");
	c0.set_verticalAlign("center");
	c0.set_horizontalAlign("center");
	this.addComponent(c0);
	this.set_styleString("background-color: #ffffff;padding-top:5px;padding-bottom:5px;padding-left:20px;padding-right:20px");
	this.set_horizontalAlign("center");
	this.bindingRoot = true;
	this.label = c0;
};
$hxClasses["gfx.game.Clock"] = gfx_game_Clock;
gfx_game_Clock.__name__ = "gfx.game.Clock";
gfx_game_Clock.__interfaces__ = [gameboard_IGameBoardObserver,net_INetObserver];
gfx_game_Clock.__super__ = haxe_ui_containers_Card;
gfx_game_Clock.prototype = $extend(haxe_ui_containers_Card.prototype,{
	playSoundOnOneMinuteLeft: null
	,alertsEnabled: null
	,secondsLeftAtReliableTimestamp: null
	,reliableTimestamp: null
	,running: null
	,active: null
	,ownerColor: null
	,ownerToMove: null
	,moveNum: null
	,secondsLeft: null
	,invisible: null
	,timer: null
	,resize: function(newHeight) {
		var unit = newHeight / 11;
		var newLabelStyle = this.label.get_customStyle().clone();
		newLabelStyle.fontSize = 9.6 * unit;
		this.label.set_customStyle(newLabelStyle);
		var newCardStyle = this.get_customStyle().clone();
		newCardStyle.paddingTop = unit;
		newCardStyle.paddingBottom = unit;
		newCardStyle.paddingLeft = 4 * unit;
		newCardStyle.paddingRight = 4 * unit;
		this.set_customStyle(newCardStyle);
	}
	,setTimeManually: function(secondsLeft) {
		if(this.active) {
			throw haxe_Exception.thrown("You can only set time manually for inactive clocks. For active clocks, it is set as a result of processing the corresponding events");
		}
		this.label.set_text(utils_TimeControl.secsToString(secondsLeft));
	}
	,handleNetEvent: function(event) {
		if(!this.active) {
			return;
		}
		switch(event._hx_index) {
		case 23:
			var timeData = event.timeData;
			this.correctTime(timeData);
			break;
		case 24:
			var _g = event.ply;
			var timeData = event.timeData;
			this.correctTime(timeData);
			this.moveNum++;
			this.toggleTurnColor();
			break;
		case 25:
			var plysToUndo = event.plysToUndo;
			var timeData = event.timeData;
			this.correctTime(timeData);
			this.moveNum -= plysToUndo;
			if(plysToUndo % 2 == 1) {
				this.toggleTurnColor();
			}
			break;
		case 26:
			var _g = event.receiver;
			var timeData = event.timeData;
			this.correctTime(timeData);
			break;
		case 27:
			var _g = event.outcome;
			var _g = event.rematchPossible;
			var _g = event.newPersonalElo;
			var remainingTimeMs = event.remainingTimeMs;
			this.active = false;
			this.pauseTimer();
			if(remainingTimeMs != null) {
				this.label.set_text(utils_TimeControl.secsToString(remainingTimeMs.get(this.ownerColor) / 1000));
			}
			this.refreshColoring();
			break;
		default:
		}
	}
	,handleGameBoardEvent: function(event) {
		if(!this.active) {
			return;
		}
		if(event._hx_index == 0) {
			var _g = event.ply;
			var _g = event.plyStr;
			var _g = event.performedBy;
			this.moveNum++;
			this.toggleTurnColor();
		}
	}
	,refreshColoring: function() {
		var backgroundColor = -1;
		var textColor = -1;
		var lowTime = this.alertsEnabled && this.secondsLeft < 60;
		if(this.active && this.ownerToMove && lowTime) {
			backgroundColor = 16759739;
			textColor = 11141120;
		} else if(this.active && this.ownerToMove && !lowTime) {
			backgroundColor = 14018003;
			textColor = 0;
		} else if(this.active && !this.ownerToMove && lowTime) {
			backgroundColor = 16768477;
			textColor = 6710886;
		} else {
			backgroundColor = 16777215;
			textColor = 6710886;
		}
		var newLabelStyle = this.label.get_customStyle().clone();
		newLabelStyle.color = textColor;
		this.label.set_customStyle(newLabelStyle);
		var newCardStyle = this.get_customStyle().clone();
		newCardStyle.backgroundColor = backgroundColor;
		this.set_customStyle(newCardStyle);
	}
	,updateTimeLeft: function() {
		if(this.running) {
			this.secondsLeft = Math.max(this.secondsLeftAtReliableTimestamp - (new Date().getTime() - this.reliableTimestamp) / 1000,0);
		} else {
			this.secondsLeft = this.secondsLeftAtReliableTimestamp;
		}
		if(this.label != null) {
			this.label.set_text(utils_TimeControl.secsToString(this.secondsLeft));
		} else {
			return;
		}
		if(this.secondsLeft == 0) {
			if(this.timer != null) {
				this.timer.stop();
			}
			this.running = false;
		}
		if(this.alertsEnabled) {
			this.refreshColoring();
			if(this.secondsLeft < 60 && this.playSoundOnOneMinuteLeft) {
				assets_Audio.playSound("lowtime");
				this.playSoundOnOneMinuteLeft = false;
			}
		}
	}
	,launchTimer: function() {
		this.timer = new haxe_Timer(10);
		this.timer.run = $bind(this,this.updateTimeLeft);
		this.running = true;
	}
	,pauseTimer: function() {
		if(this.timer != null) {
			this.timer.stop();
		}
		this.running = false;
	}
	,deactivate: function() {
		this.active = false;
		this.pauseTimer();
	}
	,correctTime: function(timeData) {
		this.secondsLeftAtReliableTimestamp = this.ownerColor == net_shared_PieceColor.White ? timeData.whiteSeconds : timeData.blackSeconds;
		this.reliableTimestamp = timeData.timestamp;
		this.updateTimeLeft();
	}
	,initTime: function(timeControlStartSecs,startDatetime) {
		this.secondsLeftAtReliableTimestamp = timeControlStartSecs;
		this.reliableTimestamp = startDatetime.getTime();
		this.label.set_text(utils_TimeControl.secsToString(timeControlStartSecs));
		this.secondsLeft = timeControlStartSecs;
	}
	,toggleTurnColor: function() {
		this.ownerToMove = !this.ownerToMove;
		this.refreshColoring();
		if(this.moveNum >= 2 && this.ownerToMove) {
			this.launchTimer();
		} else if(!this.ownerToMove) {
			this.pauseTimer();
		}
	}
	,init: function(constructor,ownerColor) {
		this.ownerColor = ownerColor;
		switch(constructor._hx_index) {
		case 0:
			var _g = constructor.playerElos;
			var whiteRef = constructor.whiteRef;
			var blackRef = constructor.blackRef;
			var timeControl = constructor.timeControl;
			var startingSituation = constructor.startingSituation;
			var startDatetime = constructor.startDatetime;
			if(timeControl.getType() == net_shared_TimeControlType.Correspondence) {
				this.active = false;
				this.set_hidden(true);
				this.invisible = true;
				return;
			}
			this.playSoundOnOneMinuteLeft = timeControl.startSecs >= 90;
			this.alertsEnabled = LoginManager.isPlayer(ownerColor == net_shared_PieceColor.White ? whiteRef : blackRef);
			this.active = true;
			this.ownerToMove = startingSituation.turnColor == ownerColor;
			this.moveNum = 0;
			this.initTime(timeControl.startSecs,startDatetime);
			break;
		case 1:
			var _g = constructor.followedPlayerLogin;
			var parsedData = constructor.parsedData;
			var timeData = constructor.timeData;
			if(parsedData.timeControl.getType() == net_shared_TimeControlType.Correspondence) {
				this.active = false;
				this.set_hidden(true);
				this.invisible = true;
				return;
			}
			var startSecs = parsedData.timeControl.startSecs;
			this.playSoundOnOneMinuteLeft = startSecs >= 90;
			this.alertsEnabled = parsedData.getPlayerColor() == ownerColor;
			this.active = true;
			this.ownerToMove = parsedData.currentSituation.turnColor == ownerColor;
			this.moveNum = parsedData.moveCount;
			if(timeData != null) {
				this.correctTime(timeData);
			} else {
				this.initTime(startSecs,parsedData.datetime);
			}
			if(this.ownerToMove && (this.moveNum >= 2 || this.secondsLeft != startSecs)) {
				this.launchTimer();
			}
			break;
		case 2:
			var _g = constructor.watchedPlyerLogin;
			var parsedData = constructor.parsedData;
			this.active = false;
			if(parsedData.msLeftWhenEnded != null) {
				this.label.set_text(utils_TimeControl.secsToString(parsedData.msLeftWhenEnded.get(ownerColor) / 1000));
			} else {
				this.set_hidden(true);
			}
			break;
		}
	}
	,set_hidden: function(v) {
		if(!this.invisible) {
			return haxe_ui_containers_Card.prototype.set_hidden.call(this,v);
		} else {
			return v;
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Card.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Card.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_game_Clock();
	}
	,label: null
	,__class__: gfx_game_Clock
});
var gfx_game_Mode = $hxEnums["gfx.game.Mode"] = { __ename__:"gfx.game.Mode",__constructs__:null
	,PlayerOngoingGame: {_hx_name:"PlayerOngoingGame",_hx_index:0,__enum__:"gfx.game.Mode",toString:$estr}
	,PlayerGameEnded: {_hx_name:"PlayerGameEnded",_hx_index:1,__enum__:"gfx.game.Mode",toString:$estr}
	,Spectator: {_hx_name:"Spectator",_hx_index:2,__enum__:"gfx.game.Mode",toString:$estr}
};
gfx_game_Mode.__constructs__ = [gfx_game_Mode.PlayerOngoingGame,gfx_game_Mode.PlayerGameEnded,gfx_game_Mode.Spectator];
gfx_game_Mode.__empty_constructs__ = [gfx_game_Mode.PlayerOngoingGame,gfx_game_Mode.PlayerGameEnded,gfx_game_Mode.Spectator];
var gfx_game_ActionBtn = $hxEnums["gfx.game.ActionBtn"] = { __ename__:"gfx.game.ActionBtn",__constructs__:null
	,Resign: {_hx_name:"Resign",_hx_index:0,__enum__:"gfx.game.ActionBtn",toString:$estr}
	,ChangeOrientation: {_hx_name:"ChangeOrientation",_hx_index:1,__enum__:"gfx.game.ActionBtn",toString:$estr}
	,OfferDraw: {_hx_name:"OfferDraw",_hx_index:2,__enum__:"gfx.game.ActionBtn",toString:$estr}
	,CancelDraw: {_hx_name:"CancelDraw",_hx_index:3,__enum__:"gfx.game.ActionBtn",toString:$estr}
	,OfferTakeback: {_hx_name:"OfferTakeback",_hx_index:4,__enum__:"gfx.game.ActionBtn",toString:$estr}
	,CancelTakeback: {_hx_name:"CancelTakeback",_hx_index:5,__enum__:"gfx.game.ActionBtn",toString:$estr}
	,AddTime: {_hx_name:"AddTime",_hx_index:6,__enum__:"gfx.game.ActionBtn",toString:$estr}
	,Rematch: {_hx_name:"Rematch",_hx_index:7,__enum__:"gfx.game.ActionBtn",toString:$estr}
	,Share: {_hx_name:"Share",_hx_index:8,__enum__:"gfx.game.ActionBtn",toString:$estr}
	,PlayFromHere: {_hx_name:"PlayFromHere",_hx_index:9,__enum__:"gfx.game.ActionBtn",toString:$estr}
	,Analyze: {_hx_name:"Analyze",_hx_index:10,__enum__:"gfx.game.ActionBtn",toString:$estr}
	,AcceptDraw: {_hx_name:"AcceptDraw",_hx_index:11,__enum__:"gfx.game.ActionBtn",toString:$estr}
	,DeclineDraw: {_hx_name:"DeclineDraw",_hx_index:12,__enum__:"gfx.game.ActionBtn",toString:$estr}
	,AcceptTakeback: {_hx_name:"AcceptTakeback",_hx_index:13,__enum__:"gfx.game.ActionBtn",toString:$estr}
	,DeclineTakeback: {_hx_name:"DeclineTakeback",_hx_index:14,__enum__:"gfx.game.ActionBtn",toString:$estr}
	,PrevMove: {_hx_name:"PrevMove",_hx_index:15,__enum__:"gfx.game.ActionBtn",toString:$estr}
	,NextMove: {_hx_name:"NextMove",_hx_index:16,__enum__:"gfx.game.ActionBtn",toString:$estr}
};
gfx_game_ActionBtn.__constructs__ = [gfx_game_ActionBtn.Resign,gfx_game_ActionBtn.ChangeOrientation,gfx_game_ActionBtn.OfferDraw,gfx_game_ActionBtn.CancelDraw,gfx_game_ActionBtn.OfferTakeback,gfx_game_ActionBtn.CancelTakeback,gfx_game_ActionBtn.AddTime,gfx_game_ActionBtn.Rematch,gfx_game_ActionBtn.Share,gfx_game_ActionBtn.PlayFromHere,gfx_game_ActionBtn.Analyze,gfx_game_ActionBtn.AcceptDraw,gfx_game_ActionBtn.DeclineDraw,gfx_game_ActionBtn.AcceptTakeback,gfx_game_ActionBtn.DeclineTakeback,gfx_game_ActionBtn.PrevMove,gfx_game_ActionBtn.NextMove];
gfx_game_ActionBtn.__empty_constructs__ = [gfx_game_ActionBtn.Resign,gfx_game_ActionBtn.ChangeOrientation,gfx_game_ActionBtn.OfferDraw,gfx_game_ActionBtn.CancelDraw,gfx_game_ActionBtn.OfferTakeback,gfx_game_ActionBtn.CancelTakeback,gfx_game_ActionBtn.AddTime,gfx_game_ActionBtn.Rematch,gfx_game_ActionBtn.Share,gfx_game_ActionBtn.PlayFromHere,gfx_game_ActionBtn.Analyze,gfx_game_ActionBtn.AcceptDraw,gfx_game_ActionBtn.DeclineDraw,gfx_game_ActionBtn.AcceptTakeback,gfx_game_ActionBtn.DeclineTakeback,gfx_game_ActionBtn.PrevMove,gfx_game_ActionBtn.NextMove];
var gfx_game_GameActionBar = function() {
	haxe_ui_containers_VBox.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        #btnBar .button {\r\n            border: 1 solid $normal-border-color;\r\n        }\r\n\r\n        #btnBar .button.first {\r\n            border-left-size: 1;\r\n            border-top-left-radius: 0.5;\r\n            border-bottom-left-radius: 0.5;\r\n        }\r\n\r\n        #btnBar .button.last {\r\n            border-top-right-radius: 0.5;\r\n            border-bottom-right-radius: 0.5;\r\n        }\r\n\r\n        .live-actionbar-button .icon {\r\n            width: 30px;\r\n            height: 30px;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_containers_HorizontalButtonBar();
	c0.set_id("btnBar");
	c0.set_percentWidth(100.);
	c0.set_toggle(false);
	var c1 = new haxe_ui_components_Button();
	c1.set_id("changeOrientationBtn");
	c1.set_height(36.);
	c1.set_percentWidth(20.);
	c1.set_styleNames("live-actionbar-button");
	c1.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/analysis/flip.svg"));
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_Button();
	c2.set_id("offerDrawBtn");
	c2.set_height(36.);
	c2.set_percentWidth(20.);
	c2.set_text("½");
	c2.set_styleString("padding: 0 0;font-size: 33");
	c2.set_disabled(true);
	c0.addComponent(c2);
	var c3 = new haxe_ui_components_Button();
	c3.set_id("cancelDrawBtn");
	c3.set_height(36.);
	c3.set_percentWidth(20.);
	c3.set_text("✖");
	c3.set_styleString("padding-top:0px;padding-bottom:0px;font-size:26px");
	c3.set_hidden(true);
	c0.addComponent(c3);
	var c4 = new haxe_ui_components_Button();
	c4.set_id("offerTakebackBtn");
	c4.set_height(36.);
	c4.set_percentWidth(20.);
	c4.set_text("⮪");
	c4.set_styleString("padding: 0 0;font-size: 30");
	c4.set_disabled(true);
	c0.addComponent(c4);
	var c5 = new haxe_ui_components_Button();
	c5.set_id("cancelTakebackBtn");
	c5.set_height(36.);
	c5.set_percentWidth(20.);
	c5.set_text("✖");
	c5.set_styleString("padding-top:0px;padding-bottom:0px;font-size:26px");
	c5.set_hidden(true);
	c0.addComponent(c5);
	var c6 = new haxe_ui_components_Button();
	c6.set_id("resignBtn");
	c6.set_height(36.);
	c6.set_percentWidth(20.);
	c6.set_text("✖");
	c6.set_styleString("padding: 0 0;font-size: 30");
	c0.addComponent(c6);
	var c7 = new haxe_ui_components_Button();
	c7.set_id("addTimeBtn");
	c7.set_height(36.);
	c7.set_percentWidth(20.);
	c7.set_text("➕︎");
	c7.set_styleString("padding: 0 0;font-size: 28");
	c0.addComponent(c7);
	var c8 = new haxe_ui_components_Button();
	c8.set_id("analyzeBtn");
	c8.set_height(36.);
	c8.set_percentWidth(20.);
	c8.set_text("🔬︎");
	c8.set_styleString("padding: 0 0;font-size:26px");
	c0.addComponent(c8);
	var c9 = new haxe_ui_components_Button();
	c9.set_id("shareBtn");
	c9.set_height(36.);
	c9.set_percentWidth(20.);
	c9.set_styleNames("live-actionbar-button");
	c9.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/common/share.svg"));
	c0.addComponent(c9);
	var c10 = new haxe_ui_components_Button();
	c10.set_id("rematchBtn");
	c10.set_height(36.);
	c10.set_percentWidth(20.);
	c10.set_text("⚔");
	c10.set_styleString("padding: 0 0;font-size:26px");
	c0.addComponent(c10);
	var c11 = new haxe_ui_components_Button();
	c11.set_id("playFromPosBtn");
	c11.set_height(36.);
	c11.set_percentWidth(20.);
	c11.set_styleNames("live-actionbar-button");
	c11.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/common/play_from_pos.svg"));
	c0.addComponent(c11);
	var c12 = new haxe_ui_components_Button();
	c12.set_id("prevMoveBtn");
	c12.set_height(36.);
	c12.set_percentWidth(20.);
	c12.set_styleNames("live-actionbar-button");
	c12.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/common/prev.svg"));
	c0.addComponent(c12);
	var c13 = new haxe_ui_components_Button();
	c13.set_id("nextMoveBtn");
	c13.set_height(36.);
	c13.set_percentWidth(20.);
	c13.set_styleNames("live-actionbar-button");
	c13.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/common/next.svg"));
	c0.addComponent(c13);
	this.addComponent(c0);
	var c14 = new haxe_ui_containers_HBox();
	c14.set_id("drawRequestBox");
	c14.set_height(36.);
	c14.set_percentWidth(100.);
	c14.set_styleString("background-color: #f7f7f7;border-bottom: 1;border-color: #dddddd;padding: 0 0 0 1;");
	c14.set_hidden(true);
	var c15 = new haxe_ui_components_Button();
	c15.set_id("declineDrawBtn");
	c15.set_percentWidth(13.5);
	c15.set_percentHeight(100.);
	c15.set_text("✘");
	c15.set_styleString("padding-top:0px;padding-bottom:0px;padding-left:0px;padding-right:0px;text-align:center;font-size:24px;color: #c80316");
	c15.set_horizontalAlign("left");
	c14.addComponent(c15);
	var c16 = new haxe_ui_components_Label();
	c16.set_percentWidth(73.);
	c16.set_styleString("font-style: italic;text-align:center;font-size:22px;color: #444444");
	c16.set_verticalAlign("center");
	c16.set_horizontalAlign("center");
	c14.addComponent(c16);
	var c17 = new haxe_ui_components_Button();
	c17.set_id("acceptDrawBtn");
	c17.set_percentWidth(13.5);
	c17.set_percentHeight(100.);
	c17.set_text("✓");
	c17.set_styleString("padding-top:0px;padding-bottom:0px;padding-left:0px;padding-right:0px;text-align:center;font-size:24px;color: #1ace03");
	c17.set_horizontalAlign("right");
	c14.addComponent(c17);
	this.addComponent(c14);
	var c18 = new haxe_ui_containers_HBox();
	c18.set_id("takebackRequestBox");
	c18.set_height(36.);
	c18.set_percentWidth(100.);
	c18.set_styleString("background-color: #f7f7f7;border-bottom: 1;border-color: #dddddd;padding: 0 0 0 1;");
	c18.set_hidden(true);
	var c19 = new haxe_ui_components_Button();
	c19.set_id("declineTakebackBtn");
	c19.set_percentWidth(13.5);
	c19.set_percentHeight(100.);
	c19.set_text("✘");
	c19.set_styleString("padding-top:0px;padding-bottom:0px;padding-left:0px;padding-right:0px;text-align:center;font-size:24px;color: #c80316");
	c19.set_horizontalAlign("left");
	c18.addComponent(c19);
	var c20 = new haxe_ui_components_Label();
	c20.set_percentWidth(73.);
	c20.set_styleString("font-style: italic;text-align:center;font-size:22px;color: #444444");
	c20.set_verticalAlign("center");
	c20.set_horizontalAlign("center");
	c18.addComponent(c20);
	var c21 = new haxe_ui_components_Button();
	c21.set_id("acceptTakebackBtn");
	c21.set_percentWidth(13.5);
	c21.set_percentHeight(100.);
	c21.set_text("✓");
	c21.set_styleString("padding-top:0px;padding-bottom:0px;padding-left:0px;padding-right:0px;text-align:center;font-size:24px;color: #1ace03");
	c21.set_horizontalAlign("right");
	c18.addComponent(c21);
	this.addComponent(c18);
	this.set_percentWidth(100.);
	this.set_styleString("padding: 1 1 1 1");
	this.bindingRoot = true;
	this.takebackRequestBox = c18;
	this.shareBtn = c9;
	this.resignBtn = c6;
	this.rematchBtn = c10;
	this.prevMoveBtn = c12;
	this.playFromPosBtn = c11;
	this.offerTakebackBtn = c4;
	this.offerDrawBtn = c2;
	this.nextMoveBtn = c13;
	this.drawRequestBox = c14;
	this.declineTakebackBtn = c19;
	this.declineDrawBtn = c15;
	this.changeOrientationBtn = c1;
	this.cancelTakebackBtn = c5;
	this.cancelDrawBtn = c3;
	this.btnBar = c0;
	this.analyzeBtn = c8;
	this.addTimeBtn = c7;
	this.acceptTakebackBtn = c21;
	this.acceptDrawBtn = c17;
	c1.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.CHANGE_ORIENTATION_BTN_TOOLTIP));
	c2.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.OFFER_DRAW_BTN_TOOLTIP));
	c3.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.CANCEL_DRAW_BTN_TOOLTIP));
	c4.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.TAKEBACK_BTN_TOOLTIP));
	c5.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.CANCEL_TAKEBACK_BTN_TOOLTIP));
	c6.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.RESIGN_BTN_ABORT_TOOLTIP));
	c7.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.ADD_TIME_BTN_TOOLTIP));
	c8.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.EXPLORE_IN_ANALYSIS_BTN_TOOLTIP));
	c9.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.LIVE_SHARE_BTN_TOOLTIP));
	c10.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.REMATCH_BTN_TOOLTIP));
	c11.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.PLAY_FROM_POS_BTN_TOOLTIP));
	c16.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.DRAW_QUESTION_TEXT)));
	c20.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.TAKEBACK_QUESTION_TEXT)));
};
$hxClasses["gfx.game.GameActionBar"] = gfx_game_GameActionBar;
gfx_game_GameActionBar.__name__ = "gfx.game.GameActionBar";
gfx_game_GameActionBar.__interfaces__ = [gameboard_IGameBoardObserver,net_INetObserver];
gfx_game_GameActionBar.__super__ = haxe_ui_containers_VBox;
gfx_game_GameActionBar.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	mode: null
	,move: null
	,enableDrawSinceMove: null
	,enableTakebackSinceMove: null
	,enableAddTimeSinceMove: null
	,changeAbortToResignAfterMove: null
	,resignConfirmationMessage: null
	,compact: null
	,onBtnPressed: null
	,incomingDrawRequestPending: null
	,incomingTakebackRequestPending: null
	,handleNetEvent: function(event) {
		var _gthis = this;
		switch(event._hx_index) {
		case 24:
			var _g = event.ply;
			var _g = event.timeData;
			this.resetAllRequestsAndOffers();
			this.set_move(this.move + 1);
			break;
		case 25:
			var _g = event.timeData;
			var plysToUndo = event.plysToUndo;
			this.resetAllRequestsAndOffers();
			this.set_move(this.move - plysToUndo);
			break;
		case 27:
			var _g = event.outcome;
			var _g = event.remainingTimeMs;
			var _g = event.newPersonalElo;
			var rematchPossible = event.rematchPossible;
			this.btnBar.set_hidden(false);
			this.drawRequestBox.set_hidden(true);
			this.takebackRequestBox.set_hidden(true);
			if(this.mode == gfx_game_Mode.PlayerOngoingGame) {
				this.setMode(gfx_game_Mode.PlayerGameEnded);
			}
			if(rematchPossible) {
				haxe_Timer.delay(function() {
					if(_gthis.rematchBtn != null) {
						_gthis.rematchBtn.set_disabled(true);
					}
				},600000);
			} else {
				this.rematchBtn.set_disabled(true);
			}
			break;
		case 32:
			var _g = event.color;
			this.enableDrawRequest();
			break;
		case 33:
			var _g = event.color;
			this.disableDrawRequest();
			break;
		case 34:
			var _g = event.color;
			this.cancelDrawBtn.set_hidden(true);
			this.offerDrawBtn.set_hidden(false);
			break;
		case 35:
			var _g = event.color;
			this.cancelDrawBtn.set_hidden(true);
			this.offerDrawBtn.set_hidden(false);
			break;
		case 36:
			var _g = event.color;
			this.enableTakebackRequest();
			break;
		case 37:
			var _g = event.color;
			this.disableTakebackRequest();
			break;
		case 38:
			var _g = event.color;
			this.cancelTakebackBtn.set_hidden(true);
			this.offerTakebackBtn.set_hidden(false);
			break;
		case 39:
			var _g = event.color;
			this.cancelTakebackBtn.set_hidden(true);
			this.offerTakebackBtn.set_hidden(false);
			break;
		default:
		}
	}
	,handleGameBoardEvent: function(event) {
		if(event._hx_index == 0) {
			var _g = event.ply;
			var _g = event.plyStr;
			var _g = event.performedBy;
			this.resetAllRequestsAndOffers();
			this.set_move(this.move + 1);
		}
	}
	,set_move: function(value) {
		this.move = value;
		if(this.mode != gfx_game_Mode.PlayerOngoingGame) {
			return this.move;
		}
		if(this.move < this.enableTakebackSinceMove) {
			this.offerTakebackBtn.set_disabled(true);
		} else {
			this.offerTakebackBtn.set_disabled(false);
		}
		if(this.move < this.enableDrawSinceMove) {
			this.offerDrawBtn.set_disabled(true);
		} else {
			this.offerDrawBtn.set_disabled(false);
		}
		if(this.move < this.enableAddTimeSinceMove) {
			this.addTimeBtn.set_disabled(true);
		} else {
			this.addTimeBtn.set_disabled(false);
		}
		if(this.move < this.changeAbortToResignAfterMove) {
			this.resignBtn.set_text("✖");
			this.resignBtn.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.RESIGN_BTN_ABORT_TOOLTIP));
			this.resignConfirmationMessage = dict_Dictionary.getPhrase(dict_Phrase.ABORT_CONFIRMATION_MESSAGE);
		} else {
			this.resignBtn.set_text("⚐");
			this.resignBtn.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.RESIGN_BTN_TOOLTIP));
			this.resignConfirmationMessage = dict_Dictionary.getPhrase(dict_Phrase.RESIGN_CONFIRMATION_MESSAGE);
		}
		return this.move;
	}
	,setMode: function(mode) {
		this.mode = mode;
		var shownButtons;
		switch(mode._hx_index) {
		case 0:
			shownButtons = [this.changeOrientationBtn,this.offerDrawBtn,this.offerTakebackBtn,this.resignBtn,this.addTimeBtn];
			break;
		case 1:
			shownButtons = [this.changeOrientationBtn,this.analyzeBtn,this.shareBtn,this.playFromPosBtn,this.rematchBtn];
			break;
		case 2:
			shownButtons = [this.changeOrientationBtn,this.analyzeBtn,this.shareBtn,this.playFromPosBtn];
			break;
		}
		if(this.compact) {
			shownButtons.push(this.prevMoveBtn);
			shownButtons.push(this.nextMoveBtn);
		}
		this.changeActionButtons(shownButtons);
	}
	,changeActionButtons: function(shownButtons) {
		var _g = 0;
		var _g1 = this.btnBar.get_numComponents();
		while(_g < _g1) {
			var i = _g++;
			this.btnBar.getComponentAt(i).set_hidden(true);
		}
		var btnWidth = 100 / shownButtons.length;
		var _g = 0;
		while(_g < shownButtons.length) {
			var btn = shownButtons[_g];
			++_g;
			btn.set_hidden(false);
			btn.set_percentWidth(btnWidth);
		}
	}
	,onResignPressed: function() {
		var confirmed = window.confirm(this.resignConfirmationMessage);
		if(confirmed) {
			this.onBtnPressed(gfx_game_ActionBtn.Resign);
		}
	}
	,onOfferDrawPressed: function() {
		if(!this.incomingDrawRequestPending) {
			this.offerDrawBtn.set_hidden(true);
			this.cancelDrawBtn.set_hidden(false);
			this.onBtnPressed(gfx_game_ActionBtn.OfferDraw);
		} else {
			this.disableDrawRequest();
			this.onBtnPressed(gfx_game_ActionBtn.AcceptDraw);
		}
	}
	,onCancelDrawPressed: function() {
		this.cancelDrawBtn.set_hidden(true);
		this.offerDrawBtn.set_hidden(false);
	}
	,onOfferTakebackPressed: function() {
		if(!this.incomingTakebackRequestPending) {
			this.offerTakebackBtn.set_hidden(true);
			this.cancelTakebackBtn.set_hidden(false);
			this.onBtnPressed(gfx_game_ActionBtn.OfferTakeback);
		} else {
			this.disableTakebackRequest();
			this.onBtnPressed(gfx_game_ActionBtn.AcceptTakeback);
		}
	}
	,onCancelTakebackPressed: function() {
		this.offerTakebackBtn.set_hidden(false);
		this.cancelTakebackBtn.set_hidden(true);
	}
	,disableTakebackRequest: function() {
		this.offerTakebackBtn.set_disabled(false);
		this.takebackRequestBox.set_hidden(true);
		this.incomingTakebackRequestPending = false;
		if(this.compact) {
			if(this.incomingDrawRequestPending) {
				this.drawRequestBox.set_hidden(false);
			} else {
				this.btnBar.set_hidden(false);
			}
		}
	}
	,disableDrawRequest: function() {
		this.drawRequestBox.set_hidden(true);
		this.incomingDrawRequestPending = false;
		if(this.compact) {
			if(this.incomingTakebackRequestPending) {
				this.takebackRequestBox.set_hidden(false);
			} else {
				this.btnBar.set_hidden(false);
			}
		}
	}
	,enableDrawRequest: function() {
		if(this.compact) {
			this.btnBar.set_hidden(true);
			this.takebackRequestBox.set_hidden(true);
		}
		this.drawRequestBox.set_hidden(false);
		this.incomingDrawRequestPending = true;
	}
	,enableTakebackRequest: function() {
		if(this.compact) {
			this.btnBar.set_hidden(true);
			this.drawRequestBox.set_hidden(true);
		}
		this.offerTakebackBtn.set_disabled(true);
		this.takebackRequestBox.set_hidden(false);
		this.incomingTakebackRequestPending = true;
	}
	,resetAllRequestsAndOffers: function() {
		if(this.mode != gfx_game_Mode.PlayerOngoingGame) {
			return;
		}
		this.cancelTakebackBtn.set_hidden(true);
		this.offerTakebackBtn.set_hidden(false);
		this.cancelDrawBtn.set_hidden(true);
		this.offerDrawBtn.set_hidden(false);
		this.disableDrawRequest();
		this.disableTakebackRequest();
	}
	,attachHandler: function(btn,typeToForward,localHandler) {
		var _gthis = this;
		btn.set_onClick(function(e) {
			if(localHandler != null) {
				localHandler();
			}
			if(typeToForward != null) {
				_gthis.onBtnPressed(typeToForward);
			}
		});
	}
	,init: function(constructor,compact,onBtnPressed) {
		this.compact = compact;
		this.onBtnPressed = onBtnPressed;
		this.enableAddTimeSinceMove = 1;
		this.enableDrawSinceMove = 2;
		this.changeAbortToResignAfterMove = 2;
		this.incomingDrawRequestPending = false;
		this.incomingTakebackRequestPending = false;
		switch(constructor._hx_index) {
		case 0:
			var _g = constructor.playerElos;
			var _g = constructor.timeControl;
			var _g = constructor.startDatetime;
			var whiteRef = constructor.whiteRef;
			var blackRef = constructor.blackRef;
			var startingSituation = constructor.startingSituation;
			this.setMode(gfx_game_Mode.PlayerOngoingGame);
			var playerColor = LoginManager.isPlayer(whiteRef) ? net_shared_PieceColor.White : net_shared_PieceColor.Black;
			this.enableTakebackSinceMove = startingSituation.turnColor == playerColor ? 1 : 2;
			this.set_move(0);
			break;
		case 1:
			var _g = constructor.timeData;
			var parsedData = constructor.parsedData;
			var followedPlayerLogin = constructor.followedPlayerLogin;
			this.setMode(parsedData.isPlayerParticipant() ? gfx_game_Mode.PlayerOngoingGame : gfx_game_Mode.Spectator);
			this.enableTakebackSinceMove = parsedData.startingSituation.turnColor == parsedData.getPlayerColor() ? 1 : 2;
			this.set_move(parsedData.moveCount);
			break;
		case 2:
			var _g = constructor.watchedPlyerLogin;
			var parsedData = constructor.parsedData;
			this.setMode(gfx_game_Mode.Spectator);
			break;
		}
		this.attachHandler(this.resignBtn,null,$bind(this,this.onResignPressed));
		this.attachHandler(this.changeOrientationBtn,gfx_game_ActionBtn.ChangeOrientation);
		this.attachHandler(this.offerDrawBtn,null,$bind(this,this.onOfferDrawPressed));
		this.attachHandler(this.cancelDrawBtn,gfx_game_ActionBtn.CancelDraw,$bind(this,this.onCancelDrawPressed));
		this.attachHandler(this.acceptDrawBtn,gfx_game_ActionBtn.AcceptDraw,$bind(this,this.disableDrawRequest));
		this.attachHandler(this.declineDrawBtn,gfx_game_ActionBtn.DeclineDraw,$bind(this,this.disableDrawRequest));
		this.attachHandler(this.offerTakebackBtn,null,$bind(this,this.onOfferTakebackPressed));
		this.attachHandler(this.cancelTakebackBtn,gfx_game_ActionBtn.CancelTakeback,$bind(this,this.onCancelTakebackPressed));
		this.attachHandler(this.acceptTakebackBtn,gfx_game_ActionBtn.AcceptTakeback,$bind(this,this.disableTakebackRequest));
		this.attachHandler(this.declineTakebackBtn,gfx_game_ActionBtn.DeclineTakeback,$bind(this,this.disableTakebackRequest));
		this.attachHandler(this.addTimeBtn,gfx_game_ActionBtn.AddTime);
		this.attachHandler(this.shareBtn,gfx_game_ActionBtn.Share);
		this.attachHandler(this.analyzeBtn,gfx_game_ActionBtn.Analyze);
		this.attachHandler(this.prevMoveBtn,gfx_game_ActionBtn.PrevMove);
		this.attachHandler(this.nextMoveBtn,gfx_game_ActionBtn.NextMove);
		this.attachHandler(this.rematchBtn,gfx_game_ActionBtn.Rematch);
		this.attachHandler(this.playFromPosBtn,gfx_game_ActionBtn.PlayFromHere);
		if(!LoginManager.isLogged()) {
			this.rematchBtn.set_disabled(true);
			this.playFromPosBtn.set_disabled(true);
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_game_GameActionBar();
	}
	,takebackRequestBox: null
	,shareBtn: null
	,resignBtn: null
	,rematchBtn: null
	,prevMoveBtn: null
	,playFromPosBtn: null
	,offerTakebackBtn: null
	,offerDrawBtn: null
	,nextMoveBtn: null
	,drawRequestBox: null
	,declineTakebackBtn: null
	,declineDrawBtn: null
	,changeOrientationBtn: null
	,cancelTakebackBtn: null
	,cancelDrawBtn: null
	,btnBar: null
	,analyzeBtn: null
	,addTimeBtn: null
	,acceptTakebackBtn: null
	,acceptDrawBtn: null
	,__class__: gfx_game_GameActionBar
	,__properties__: $extend(haxe_ui_containers_VBox.prototype.__properties__,{set_move:"set_move"})
});
var gfx_game_GameInfoBox = function() {
	this.renderedForWidth = 0;
	this.movesAfterTerminalOpeningNode = 0;
	this.openingTree = null;
	haxe_ui_containers_Card.call(this);
	var c0 = new haxe_ui_containers_HBox();
	c0.set_percentWidth(100.);
	var c1 = new haxe_ui_components_Label();
	c1.set_id("matchParameters");
	c1.set_styleString("font-size:16px;text-align:left");
	c1.set_horizontalAlign("left");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_Spacer();
	c2.set_percentWidth(100.);
	c0.addComponent(c2);
	var c3 = new haxe_ui_components_Label();
	c3.set_id("datetime");
	c3.set_styleString("font-size:12px;margin-top:0px");
	c3.set_horizontalAlign("right");
	c0.addComponent(c3);
	this.addComponent(c0);
	var c4 = new haxe_ui_components_Label();
	c4.set_id("resolution");
	c4.set_styleString("font-size:14px;font-style:bold;text-align:left");
	this.addComponent(c4);
	var c5 = new haxe_ui_containers_HBox();
	c5.set_percentWidth(100.);
	c5.set_styleString("margin-top:5px");
	c5.set_horizontalAlign("center");
	var c6 = new haxe_ui_containers_Box();
	c6.set_id("imagebox");
	c6.set_width(70.);
	c6.set_height(70.);
	c6.set_styleString("padding:0 0 0 0");
	c6.set_verticalAlign("center");
	var c7 = new haxe_ui_components_Image();
	c7.set_id("timeControlIcon");
	c7.set_verticalAlign("center");
	c7.set_horizontalAlign("center");
	c6.addComponent(c7);
	c5.addComponent(c6);
	var c8 = new haxe_ui_containers_VBox();
	c8.set_id("opponentsBox");
	c8.set_percentWidth(100.);
	c8.set_styleString("spacing:0px;margin-left:5px");
	c8.set_verticalAlign("center");
	c5.addComponent(c8);
	this.addComponent(c5);
	var c9 = new haxe_ui_components_Label();
	c9.set_id("watchingLabel");
	c9.set_percentWidth(100.);
	c9.set_styleString("font-size:16px;margin-top:10px;margin-bottom:10px;text-align:center;pointer-events:true");
	c9.set_hidden(true);
	this.addComponent(c9);
	var c10 = new haxe_ui_components_Label();
	c10.set_id("opening");
	c10.set_percentWidth(100.);
	c10.set_styleString("font-size:14px;margin-top:10px;font-style:italic;text-align:left");
	c10.set_horizontalAlign("center");
	this.addComponent(c10);
	this.set_percentWidth(100.);
	this.set_styleString("spacing:5px");
	this.set_layoutName("vertical");
	this.bindingRoot = true;
	this.watchingLabel = c9;
	this.timeControlIcon = c7;
	this.resolution = c4;
	this.opponentsBox = c8;
	this.opening = c10;
	this.matchParameters = c1;
	this.imagebox = c6;
	this.datetime = c3;
	c9.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.LIVE_WATCHING_LABEL_TOOLTIP));
};
$hxClasses["gfx.game.GameInfoBox"] = gfx_game_GameInfoBox;
gfx_game_GameInfoBox.__name__ = "gfx.game.GameInfoBox";
gfx_game_GameInfoBox.__interfaces__ = [net_INetObserver,gameboard_IGameBoardObserver];
gfx_game_GameInfoBox.__super__ = haxe_ui_containers_Card;
gfx_game_GameInfoBox.prototype = $extend(haxe_ui_containers_Card.prototype,{
	openingTree: null
	,movesAfterTerminalOpeningNode: null
	,whitePlayerLabel: null
	,crossSign: null
	,blackPlayerLabel: null
	,renderedForWidth: null
	,handleNetEvent: function(event) {
		switch(event._hx_index) {
		case 24:
			var _g = event.timeData;
			var ply = event.ply;
			this.accountMove(ply);
			break;
		case 25:
			var _g = event.timeData;
			var plysToUndo = event.plysToUndo;
			this.revertPlys(plysToUndo);
			break;
		case 27:
			var _g = event.rematchPossible;
			var _g = event.remainingTimeMs;
			var _g = event.newPersonalElo;
			var outcome = event.outcome;
			this.resolution.set_text(dict_Utils.getResolution(outcome));
			break;
		default:
		}
	}
	,handleGameBoardEvent: function(event) {
		if(event._hx_index == 0) {
			var ply = event.ply;
			var plyStr = event.plyStr;
			var performedBy = event.performedBy;
			this.accountMove(ply);
		}
	}
	,handleGlobalEvent: function(event) {
		if(event._hx_index == 3) {
			var followedLogin = event.followedLogin;
			if(this.whitePlayerLabel.playerRef == followedLogin.toLowerCase()) {
				this.markFollowedPlayer(net_shared_PieceColor.White);
			} else if(this.blackPlayerLabel.playerRef == followedLogin.toLowerCase()) {
				this.markFollowedPlayer(net_shared_PieceColor.Black);
			} else {
				this.markFollowedPlayer(null);
			}
		}
	}
	,accountMove: function(ply) {
		if(this.openingTree == null) {
			return;
		}
		if(!this.openingTree.currentNode.terminal) {
			this.openingTree.makeMove(ply.from.i,ply.from.j,ply.to.i,ply.to.j,ply.morphInto);
			this.opening.set_text(this.openingTree.currentNode.name);
		} else {
			this.movesAfterTerminalOpeningNode++;
		}
	}
	,revertPlys: function(cnt) {
		if(this.openingTree == null) {
			return;
		}
		if(this.movesAfterTerminalOpeningNode < cnt) {
			this.openingTree.revertMoves(cnt - this.movesAfterTerminalOpeningNode);
			this.opening.set_text(this.openingTree.currentNode.name);
			this.movesAfterTerminalOpeningNode = 0;
		} else {
			this.movesAfterTerminalOpeningNode -= cnt;
		}
	}
	,validateComponentLayout: function() {
		var b = haxe_ui_containers_Card.prototype.validateComponentLayout.call(this);
		if(this.renderedForWidth == this.get_width()) {
			return b;
		}
		var thisStyle = this.get_customStyle().clone();
		thisStyle.verticalSpacing = this.get_width() / 70;
		thisStyle.set_padding(this.get_width() * 15 / 350);
		this.set_customStyle(thisStyle);
		var mpStyle = this.matchParameters.get_customStyle().clone();
		mpStyle.fontSize = this.get_width() * 16 / 350;
		this.matchParameters.set_customStyle(mpStyle);
		var dtStyle = this.datetime.get_customStyle().clone();
		dtStyle.fontSize = this.get_width() * 12 / 350;
		this.datetime.set_customStyle(dtStyle);
		var resStyle = this.resolution.get_customStyle().clone();
		resStyle.fontSize = this.get_width() / 25;
		this.resolution.set_customStyle(resStyle);
		this.imagebox.set_width(this.get_width() / 5);
		this.imagebox.set_height(this.get_width() / 5);
		gfx_ResponsiveToolbox.fitComponent(this.timeControlIcon);
		var oppStyle = this.opponentsBox.get_customStyle().clone();
		oppStyle.marginLeft = this.get_width() / 70;
		this.opponentsBox.set_customStyle(oppStyle);
		var wlStyle = this.whitePlayerLabel.get_customStyle().clone();
		wlStyle.fontSize = this.get_width() * 17 / 350;
		this.whitePlayerLabel.set_customStyle(wlStyle);
		var crossStyle = this.crossSign.get_customStyle().clone();
		crossStyle.fontSize = this.get_width() * 20 / 350;
		this.crossSign.set_customStyle(crossStyle);
		var blStyle = this.blackPlayerLabel.get_customStyle().clone();
		blStyle.fontSize = this.get_width() * 17 / 350;
		this.blackPlayerLabel.set_customStyle(blStyle);
		var opStyle = this.opening.get_customStyle().clone();
		opStyle.fontSize = this.get_width() / 25;
		opStyle.marginTop = this.get_width() / 35;
		this.opening.set_customStyle(opStyle);
		this.renderedForWidth = this.get_width();
		return b;
	}
	,fillOpponentsBox: function(whiteRef,blackRef,playerElos) {
		var whiteELO = playerElos != null ? playerElos.get(net_shared_PieceColor.White) : null;
		var blackELO = playerElos != null ? playerElos.get(net_shared_PieceColor.Black) : null;
		this.whitePlayerLabel = new gfx_profile_simple_$components_PlayerLabel(gfx_basic_$components_utils_DimValue.Exact(20),whiteRef,whiteELO,true);
		this.whitePlayerLabel.set_horizontalAlign("center");
		this.crossSign = new haxe_ui_components_Label();
		this.crossSign.set_text("⚔");
		this.crossSign.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"center",null,null,null,null,null,null,20,true,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
		this.blackPlayerLabel = new gfx_profile_simple_$components_PlayerLabel(gfx_basic_$components_utils_DimValue.Exact(20),blackRef,blackELO,true);
		this.blackPlayerLabel.set_horizontalAlign("center");
		this.opponentsBox.addComponent(this.whitePlayerLabel);
		this.opponentsBox.addComponent(this.crossSign);
		this.opponentsBox.addComponent(this.blackPlayerLabel);
	}
	,initNewGame: function(whiteRef,blackRef,playerElos,timeControl,startingSituation,startDatetime) {
		var tcType = timeControl.getType();
		var separator = " " + "•" + " ";
		if(tcType == net_shared_TimeControlType.Correspondence) {
			this.matchParameters.set_text(dict_Dictionary.getPhrase(dict_Phrase.CORRESPONDENCE_TIME_CONTROL_NAME));
		} else {
			this.matchParameters.set_text(timeControl.toString() + separator + $hxEnums[tcType.__enum__].__constructs__[tcType._hx_index]._hx_name);
		}
		this.datetime.set_text(DateTools.format(startDatetime,"%d.%m.%Y %H:%M:%S"));
		this.resolution.set_text(dict_Utils.getResolution(null));
		this.fillOpponentsBox(whiteRef,blackRef,playerElos);
		var tmp = this.timeControlIcon;
		var filename;
		switch(tcType._hx_index) {
		case 0:
			filename = "hyperbullet";
			break;
		case 1:
			filename = "bullet";
			break;
		case 2:
			filename = "blitz";
			break;
		case 3:
			filename = "rapid";
			break;
		case 4:
			filename = "classic";
			break;
		case 5:
			filename = "correspondence";
			break;
		}
		tmp.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/time_controls/" + filename + ".svg"));
		if(startingSituation.isDefaultStarting()) {
			this.openingTree = new openings_OpeningTree();
			this.opening.set_text(dict_Dictionary.getPhrase(dict_Phrase.OPENING_STARTING_POSITION));
		} else {
			this.opening.set_text(dict_Dictionary.getPhrase(dict_Phrase.CUSTOM_STARTING_POSITION));
		}
	}
	,initActualizedGame: function(parsedData) {
		var tcType = parsedData.timeControl.getType();
		var separator = " " + "•" + " ";
		if(tcType == net_shared_TimeControlType.Correspondence) {
			this.matchParameters.set_text(dict_Dictionary.getPhrase(dict_Phrase.CORRESPONDENCE_TIME_CONTROL_NAME));
		} else {
			this.matchParameters.set_text(parsedData.timeControl.toString() + separator + $hxEnums[tcType.__enum__].__constructs__[tcType._hx_index]._hx_name);
		}
		this.fillOpponentsBox(parsedData.whiteRef,parsedData.blackRef,parsedData.elo);
		this.resolution.set_text(dict_Utils.getResolution(parsedData.outcome));
		var tmp = this.timeControlIcon;
		var filename;
		switch(tcType._hx_index) {
		case 0:
			filename = "hyperbullet";
			break;
		case 1:
			filename = "bullet";
			break;
		case 2:
			filename = "blitz";
			break;
		case 3:
			filename = "rapid";
			break;
		case 4:
			filename = "classic";
			break;
		case 5:
			filename = "correspondence";
			break;
		}
		tmp.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/time_controls/" + filename + ".svg"));
		if(parsedData.datetime != null) {
			this.datetime.set_text(DateTools.format(parsedData.datetime,"%d.%m.%Y %H:%M:%S"));
		}
		if(parsedData.startingSituation.isDefaultStarting()) {
			this.openingTree = new openings_OpeningTree();
			this.opening.set_text(dict_Dictionary.getPhrase(dict_Phrase.OPENING_STARTING_POSITION));
		} else {
			this.opening.set_text(dict_Dictionary.getPhrase(dict_Phrase.CUSTOM_STARTING_POSITION));
		}
		var _g = 0;
		var _g1 = parsedData.movesPlayed;
		while(_g < _g1.length) {
			var ply = _g1[_g];
			++_g;
			this.accountMove(ply);
		}
	}
	,markFollowedPlayer: function(color) {
		if(color == null) {
			this.watchingLabel.set_hidden(true);
		} else {
			switch(color._hx_index) {
			case 0:
				this.watchingLabel.set_hidden(false);
				this.watchingLabel.set_text(dict_Dictionary.getPhrase(dict_Phrase.LIVE_WATCHING_LABEL_TEXT(dict_Utils.playerRef(this.whitePlayerLabel.playerRef))));
				break;
			case 1:
				this.watchingLabel.set_hidden(false);
				this.watchingLabel.set_text(dict_Dictionary.getPhrase(dict_Phrase.LIVE_WATCHING_LABEL_TEXT(dict_Utils.playerRef(this.blackPlayerLabel.playerRef))));
				break;
			}
		}
	}
	,init: function(constructor) {
		switch(constructor._hx_index) {
		case 0:
			var whiteRef = constructor.whiteRef;
			var blackRef = constructor.blackRef;
			var playerElos = constructor.playerElos;
			var timeControl = constructor.timeControl;
			var startingSituation = constructor.startingSituation;
			var startDatetime = constructor.startDatetime;
			this.initNewGame(whiteRef,blackRef,playerElos,timeControl,startingSituation,startDatetime);
			break;
		case 1:
			var _g = constructor.timeData;
			var parsedData = constructor.parsedData;
			var followedPlayerLogin = constructor.followedPlayerLogin;
			this.initActualizedGame(parsedData);
			if(followedPlayerLogin != null) {
				this.markFollowedPlayer(parsedData.getParticipantColor(followedPlayerLogin));
			}
			break;
		case 2:
			var _g = constructor.watchedPlyerLogin;
			var parsedData = constructor.parsedData;
			this.initActualizedGame(parsedData);
			break;
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Card.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Card.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_game_GameInfoBox();
	}
	,watchingLabel: null
	,timeControlIcon: null
	,resolution: null
	,opponentsBox: null
	,opening: null
	,matchParameters: null
	,imagebox: null
	,datetime: null
	,__class__: gfx_game_GameInfoBox
});
var gfx_game_LiveGameConstructor = $hxEnums["gfx.game.LiveGameConstructor"] = { __ename__:"gfx.game.LiveGameConstructor",__constructs__:null
	,New: ($_=function(whiteRef,blackRef,playerElos,timeControl,startingSituation,startDatetime) { return {_hx_index:0,whiteRef:whiteRef,blackRef:blackRef,playerElos:playerElos,timeControl:timeControl,startingSituation:startingSituation,startDatetime:startDatetime,__enum__:"gfx.game.LiveGameConstructor",toString:$estr}; },$_._hx_name="New",$_.__params__ = ["whiteRef","blackRef","playerElos","timeControl","startingSituation","startDatetime"],$_)
	,Ongoing: ($_=function(parsedData,timeData,followedPlayerLogin) { return {_hx_index:1,parsedData:parsedData,timeData:timeData,followedPlayerLogin:followedPlayerLogin,__enum__:"gfx.game.LiveGameConstructor",toString:$estr}; },$_._hx_name="Ongoing",$_.__params__ = ["parsedData","timeData","followedPlayerLogin"],$_)
	,Past: ($_=function(parsedData,watchedPlyerLogin) { return {_hx_index:2,parsedData:parsedData,watchedPlyerLogin:watchedPlyerLogin,__enum__:"gfx.game.LiveGameConstructor",toString:$estr}; },$_._hx_name="Past",$_.__params__ = ["parsedData","watchedPlyerLogin"],$_)
};
gfx_game_LiveGameConstructor.__constructs__ = [gfx_game_LiveGameConstructor.New,gfx_game_LiveGameConstructor.Ongoing,gfx_game_LiveGameConstructor.Past];
gfx_game_LiveGameConstructor.__empty_constructs__ = [];
var gfx_game_ShareGameTab = function() {
	haxe_ui_containers_Box.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        .tool-button .icon {\r\n            width: 30px;\r\n            height: 30px;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_components_SectionHeader();
	c1.set_percentWidth(100.);
	c0.addComponent(c1);
	var c2 = new gfx_basic_$components_CopyableText();
	c2.set_id("linkText");
	c2.set_height(30.);
	c2.set_percentWidth(100.);
	c0.addComponent(c2);
	var c3 = new haxe_ui_components_SectionHeader();
	c3.set_percentWidth(100.);
	c0.addComponent(c3);
	var c4 = new haxe_ui_containers_HBox();
	c4.set_percentWidth(100.);
	c4.set_percentHeight(100.);
	var c5 = new haxe_ui_components_TextArea();
	c5.set_id("pinTextArea");
	c5.set_percentWidth(100.);
	c5.set_percentHeight(100.);
	c4.addComponent(c5);
	var c6 = new haxe_ui_components_Button();
	c6.set_id("copyPINBtn");
	c6.set_width(30.);
	c6.set_height(30.);
	c6.set_styleNames("tool-button");
	c6.set_verticalAlign("center");
	c6.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/common/copy.svg"));
	c4.addComponent(c6);
	var c7 = new haxe_ui_components_Button();
	c7.set_id("copyPINBtnTick");
	c7.set_width(30.);
	c7.set_height(30.);
	c7.set_styleNames("tool-button");
	c7.set_verticalAlign("center");
	c7.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/common/tick.svg"));
	c7.set_hidden(true);
	c4.addComponent(c7);
	c0.addComponent(c4);
	var c8 = new haxe_ui_components_SectionHeader();
	c8.set_percentWidth(100.);
	c0.addComponent(c8);
	var c9 = new haxe_ui_containers_VBox();
	c9.set_id("gifExportParamsBox");
	c9.set_percentWidth(100.);
	c9.set_styleString("spacing: 5px");
	c9.set_verticalAlign("center");
	var c10 = new haxe_ui_containers_HBox();
	c10.set_height(30.);
	c10.set_horizontalAlign("center");
	var c11 = new haxe_ui_components_Label();
	c11.set_styleString("font-size: 16px");
	c11.set_verticalAlign("center");
	c10.addComponent(c11);
	var c12 = new haxe_ui_components_TextField();
	c12.set_id("gifWidthTF");
	c12.set_width(54.);
	c12.set_text("720");
	c12.set_verticalAlign("center");
	c12.set_restrictChars("0-9");
	c10.addComponent(c12);
	c9.addComponent(c10);
	var c13 = new haxe_ui_containers_HBox();
	c13.set_height(30.);
	c13.set_horizontalAlign("center");
	var c14 = new haxe_ui_components_Label();
	c14.set_styleString("font-size: 16px");
	c14.set_verticalAlign("center");
	c13.addComponent(c14);
	var c15 = new haxe_ui_components_TextField();
	c15.set_id("intervalTF");
	c15.set_width(54.);
	c15.set_text("1000");
	c15.set_verticalAlign("center");
	c15.set_restrictChars("0-9");
	c13.addComponent(c15);
	c9.addComponent(c13);
	var c16 = new haxe_ui_containers_HBox();
	c16.set_height(30.);
	c16.set_horizontalAlign("center");
	var c17 = new haxe_ui_components_Label();
	c17.set_styleString("font-size: 16px");
	c17.set_verticalAlign("center");
	c16.addComponent(c17);
	var c18 = new haxe_ui_components_popups_ColorPickerPopup();
	c18.set_id("colorPicker");
	c18.set_selectedItem("#ffffff");
	c16.addComponent(c18);
	c9.addComponent(c16);
	var c19 = new haxe_ui_components_CheckBox();
	c19.set_id("addMarkingCheckbox");
	c19.set_styleString("font-size: 14px");
	c19.set_selected(false);
	c19.set_horizontalAlign("center");
	c9.addComponent(c19);
	c0.addComponent(c9);
	var c20 = new haxe_ui_components_Spacer();
	c20.set_height(5.);
	c0.addComponent(c20);
	var c21 = new haxe_ui_components_Button();
	c21.set_id("downloadGifBtn");
	c21.set_horizontalAlign("center");
	c0.addComponent(c21);
	this.addComponent(c0);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.pinTextArea = c5;
	this.linkText = c2;
	this.intervalTF = c15;
	this.gifWidthTF = c12;
	this.gifExportParamsBox = c9;
	this.downloadGifBtn = c21;
	this.copyPINBtnTick = c7;
	this.copyPINBtn = c6;
	this.colorPicker = c18;
	this.addMarkingCheckbox = c19;
	c1.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_LINK_HEADER)));
	c3.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_PIN_HEADER)));
	c6.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.COPY_BTN_TOOLTIP));
	c7.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.COPY_BTN_SUCCESS_TOOLTIP));
	c8.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_ANIMATED_GIF_HEADER)));
	c11.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_DOWNLOAD_GIF_WIDTH_LABEL_TEXT)));
	c14.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_DOWNLOAD_GIF_INTERVAL_LABEL_TEXT)));
	c17.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_DOWNLOAD_PNG_BGCOLOR_LABEL_TEXT)));
	c19.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_DOWNLOAD_PNG_MARKUP_CHECKBOX_TEXT)));
	c21.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SHARE_EXPORT_AND_DOWNLOAD_BTN_TEXT)));
	this.set_text(dict_Dictionary.getPhrase(dict_Phrase.SHARE_GAME_TAB_NAME));
	var c = this.copyPINBtnTick;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onCopyPINPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "copyPINBtnTick" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.game.ShareGameTab", methodName : "new"});
	}
	var c = this.copyPINBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onCopyPINPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "copyPINBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.game.ShareGameTab", methodName : "new"});
	}
	var c = this.copyPINBtnTick;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onCopyPINPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "copyPINBtnTick" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.game.ShareGameTab", methodName : "new"});
	}
	var c = this.copyPINBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onCopyPINPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "copyPINBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.game.ShareGameTab", methodName : "new"});
	}
	var c = this.downloadGifBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onDownloadGIFPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "downloadGifBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.game.ShareGameTab", methodName : "new"});
	}
	var c = this.gifWidthTF;
	if(c != null) {
		c.registerEvent("focusout",$bind(this,this.onWidthFocusLost));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "gifWidthTF" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.game.ShareGameTab", methodName : "new"});
	}
	var c = this.intervalTF;
	if(c != null) {
		c.registerEvent("focusout",$bind(this,this.onIntervalFocusLost));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "intervalTF" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.game.ShareGameTab", methodName : "new"});
	}
};
$hxClasses["gfx.game.ShareGameTab"] = gfx_game_ShareGameTab;
gfx_game_ShareGameTab.__name__ = "gfx.game.ShareGameTab";
gfx_game_ShareGameTab.__super__ = haxe_ui_containers_Box;
gfx_game_ShareGameTab.prototype = $extend(haxe_ui_containers_Box.prototype,{
	plySequence: null
	,startingSituation: null
	,onCopyPINPressed: function(e) {
		browser_Clipboard.copy(this.pinTextArea.get_text(),$bind(this,this.onPINCopied));
	}
	,onPINCopied: function() {
		var _gthis = this;
		this.copyPINBtn.set_hidden(true);
		this.copyPINBtnTick.set_hidden(false);
		haxe_Timer.delay(function() {
			_gthis.copyPINBtnTick.set_hidden(true);
			_gthis.copyPINBtn.set_hidden(false);
		},500);
	}
	,onDownloadGIFPressed: function(e) {
		var gifWidth = Std.parseInt(this.gifWidthTF.get_text());
		if(gifWidth != null) {
			gifWidth = net_shared_utils_MathUtils.clampI(gifWidth,100,2048);
		} else {
			gifWidth = 720;
		}
		var gifInterval = Std.parseInt(this.intervalTF.get_text());
		if(gifInterval != null) {
			gifInterval = net_shared_utils_MathUtils.clamp(gifInterval / 1000,0.1,10);
		} else {
			gifInterval = 1;
		}
		var gifHeight = Math.ceil(gameboard_util_BoardSize.inverseAspectRatio(this.addMarkingCheckbox.get_selected()) * gifWidth);
		var b = js_Boot.__cast(this.colorPicker.get_selectedItem() , Int);
		var bgColor = haxe_ui_util_Color.toInt(-16777216) | haxe_ui_util_Color.toInt(b);
		var addLetters = this.addMarkingCheckbox.get_selected();
		var aParam = "gif";
		var wParam = gifWidth == null ? "null" : "" + gifWidth;
		var hParam = gifHeight == null ? "null" : "" + gifHeight;
		var iParam = gifInterval == null ? "null" : "" + gifInterval;
		var bParam = HxOverrides.substr(haxe_ui_util_Color.toHex(bgColor),1,null);
		var oParam = "w";
		var s = this.startingSituation.serialize();
		var sParam = encodeURIComponent(s);
		var _this = this.plySequence;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = _this[i].serialize();
		}
		var s = result.join(";");
		var pParam = encodeURIComponent(s);
		var url = "https://intellector.info/tools/gen/?a=" + aParam + "&w=" + wParam + "&h=" + hParam + "&i=" + iParam + "&b=" + bParam + "&o=" + oParam + "&s=" + sParam + "&p=" + pParam;
		if(addLetters) {
			url += "&l=t";
		}
		window.open(url,"_blank");
	}
	,onWidthFocusLost: function(e) {
		var value = Std.parseInt(this.gifWidthTF.get_text());
		if(value == null) {
			this.gifWidthTF.set_text("720");
		} else {
			this.gifWidthTF.set_text("" + net_shared_utils_MathUtils.clampI(value,100,2048));
		}
	}
	,onIntervalFocusLost: function(e) {
		var value = Std.parseInt(this.intervalTF.get_text());
		if(value == null) {
			this.intervalTF.set_text("1000");
		} else {
			this.intervalTF.set_text("" + net_shared_utils_MathUtils.clampI(value,100,10000));
		}
	}
	,init: function(gameLink,pin,startingSituation,plySequence) {
		this.linkText.set_copiedText(gameLink);
		this.pinTextArea.set_text(pin);
		this.plySequence = plySequence;
		this.startingSituation = startingSituation;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_game_ShareGameTab();
	}
	,pinTextArea: null
	,linkText: null
	,intervalTF: null
	,gifWidthTF: null
	,gifExportParamsBox: null
	,downloadGifBtn: null
	,copyPINBtnTick: null
	,copyPINBtn: null
	,colorPicker: null
	,addMarkingCheckbox: null
	,__class__: gfx_game_ShareGameTab
});
var gfx_main_ChallengeModeRenderer = function() {
	haxe_ui_core_ItemRenderer.call(this);
	var c0 = new haxe_ui_containers_HBox();
	c0.set_percentHeight(100.);
	c0.set_horizontalAlign("center");
	var c1 = new gfx_basic_$components_ARPImage();
	c1.set_id("colorIcon");
	c1.set_percentHeight(100.);
	c0.addComponent(c1);
	var c2 = new gfx_basic_$components_ARPImage();
	c2.set_id("customStartPosIcon");
	c2.set_percentHeight(100.);
	c2.set_styleString("background-color:yellow;background-opacity:0;pointer-events:true");
	c2.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/main_menu/challenge_modes/custom.svg"));
	c0.addComponent(c2);
	this.addComponent(c0);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.customStartPosIcon = c2;
	this.colorIcon = c1;
};
$hxClasses["gfx.main.ChallengeModeRenderer"] = gfx_main_ChallengeModeRenderer;
gfx_main_ChallengeModeRenderer.__name__ = "gfx.main.ChallengeModeRenderer";
gfx_main_ChallengeModeRenderer.__super__ = haxe_ui_core_ItemRenderer;
gfx_main_ChallengeModeRenderer.prototype = $extend(haxe_ui_core_ItemRenderer.prototype,{
	onDataChanged: function(data) {
		haxe_ui_core_ItemRenderer.prototype.onDataChanged.call(this,data);
		if(data != null && data.mode != null) {
			var color = data.mode.color;
			var customStartingSituation = data.mode.situation;
			var tmp = this.colorIcon;
			var filename;
			if(color == null) {
				filename = "random";
			} else {
				switch(color._hx_index) {
				case 0:
					filename = "white";
					break;
				case 1:
					filename = "black";
					break;
				}
			}
			tmp.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/main_menu/challenge_modes/" + filename + ".svg"));
			this.colorIcon.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_COLOR_ICON_TOOLTIP(color)));
			if(customStartingSituation != null) {
				this.customStartPosIcon.set_hidden(false);
				var renderer = new gfx_common_SituationTooltipRenderer(customStartingSituation);
				haxe_ui_tooltips_ToolTipManager.get_instance().registerTooltip(this.customStartPosIcon,{ renderer : renderer});
			} else {
				this.customStartPosIcon.set_hidden(true);
			}
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_ItemRenderer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ItemRenderer.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_main_ChallengeModeRenderer();
	}
	,customStartPosIcon: null
	,colorIcon: null
	,__class__: gfx_main_ChallengeModeRenderer
});
var gfx_main_CurrentGamesTable = function() {
	this.gameIDs = [];
	haxe_ui_containers_VBox.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        #reloadBtn .icon {\r\n            width: 20px;\r\n            height: 20px;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_containers_HBox();
	c0.set_id("tableTitleBox");
	c0.set_height(40.);
	c0.set_percentWidth(100.);
	var c1 = new haxe_ui_components_Label();
	c1.set_id("title");
	c1.set_styleString("font-size: 30px;font-name: 'assets/fonts/FuturaItalic.ttf'");
	c1.set_verticalAlign("bottom");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_Spacer();
	c2.set_percentWidth(100.);
	c0.addComponent(c2);
	var c3 = new haxe_ui_components_Button();
	c3.set_id("reloadBtn");
	c3.set_percentHeight(100.);
	c3.set_styleString("font-size: 20px");
	c3.set_verticalAlign("bottom");
	c3.set_iconPosition("left");
	c3.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/main_menu/reload.svg"));
	c0.addComponent(c3);
	this.addComponent(c0);
	var c4 = new haxe_ui_containers_TableView();
	c4.set_id("table");
	c4.set_percentWidth(100.);
	c4.set_percentHeight(100.);
	c4.set_itemHeight(30.);
	var c5 = new haxe_ui_containers_Header();
	c5.set_id("tableHeader");
	c5.set_percentWidth(100.);
	var c6 = new haxe_ui_components_Column();
	c6.set_id("time");
	c6.set_percentWidth(20.);
	c6.set_styleString("text-align:center;font-size:12px");
	c5.addComponent(c6);
	var c7 = new haxe_ui_components_Column();
	c7.set_id("players");
	c7.set_percentWidth(60.);
	c7.set_styleString("text-align:center;font-size:12px");
	c5.addComponent(c7);
	var c8 = new haxe_ui_components_Column();
	c8.set_id("bracket");
	c8.set_percentWidth(20.);
	c8.set_styleString("text-align:center;font-size:12px");
	c5.addComponent(c8);
	c4.addComponent(c5);
	var c9 = new gfx_main_TimeControlRenderer();
	c9.set_id("time");
	c4.addComponent(c9);
	var c10 = new haxe_ui_core_ItemRenderer();
	c10.set_percentWidth(100.);
	var c11 = new haxe_ui_components_Label();
	c11.set_id("players");
	c11.set_percentWidth(100.);
	c11.set_styleString("text-align:center;");
	c10.addComponent(c11);
	c4.addComponent(c10);
	var c12 = new haxe_ui_core_ItemRenderer();
	c12.set_percentWidth(100.);
	var c13 = new haxe_ui_components_Label();
	c13.set_id("bracket");
	c13.set_percentWidth(100.);
	c13.set_styleString("text-align:center;");
	c12.addComponent(c13);
	c4.addComponent(c12);
	this.addComponent(c4);
	this.set_width(600.);
	this.set_height(400.);
	this.bindingRoot = true;
	this.title = c1;
	this.time = c6;
	this.tableTitleBox = c0;
	this.tableHeader = c5;
	this.table = c4;
	this.reloadBtn = c3;
	this.players = c7;
	this.bracket = c8;
	c1.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.CURRENT_GAMES_TABLE_HEADER)));
	c3.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.TABLEVIEW_RELOAD_BTN_TEXT)));
	c6.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.TABLEVIEW_TIME_COLUMN_NAME)));
	c7.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.TABLEVIEW_PLAYERS_COLUMN_NAME)));
	c8.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.TABLEVIEW_BRACKET_COLUMN_NAME)));
	this.table.set_selectionMode("one-item");
	var c = this.table;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onGameSelected));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "table" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.main.CurrentGamesTable", methodName : "new"});
	}
	var c = this.reloadBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.reload));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "reloadBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.main.CurrentGamesTable", methodName : "new"});
	}
};
$hxClasses["gfx.main.CurrentGamesTable"] = gfx_main_CurrentGamesTable;
gfx_main_CurrentGamesTable.__name__ = "gfx.main.CurrentGamesTable";
gfx_main_CurrentGamesTable.__super__ = haxe_ui_containers_VBox;
gfx_main_CurrentGamesTable.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	gameIDs: null
	,appendGames: function(data) {
		var _g = 0;
		while(_g < data.length) {
			var gameData = data[_g];
			++_g;
			if(Lambda.has(this.gameIDs,gameData.id)) {
				continue;
			}
			var parsedData = serialization_GameLogParser.parse(gameData.log);
			var whiteLabel = dict_Utils.playerRef(parsedData.whiteRef);
			var blackLabel = dict_Utils.playerRef(parsedData.blackRef);
			if(parsedData.elo != null) {
				var value = parsedData.elo.get(net_shared_PieceColor.White);
				var whiteLabel1;
				switch(value._hx_index) {
				case 0:
					whiteLabel1 = "−";
					break;
				case 1:
					var elo = value.elo;
					whiteLabel1 = "" + elo + "?";
					break;
				case 2:
					var elo1 = value.elo;
					whiteLabel1 = "" + elo1;
					break;
				}
				whiteLabel += " (" + whiteLabel1 + ")";
				var value1 = parsedData.elo.get(net_shared_PieceColor.Black);
				var whiteLabel2;
				switch(value1._hx_index) {
				case 0:
					whiteLabel2 = "−";
					break;
				case 1:
					var elo2 = value1.elo;
					whiteLabel2 = "" + elo2 + "?";
					break;
				case 2:
					var elo3 = value1.elo;
					whiteLabel2 = "" + elo3;
					break;
				}
				whiteLabel += " (" + whiteLabel2 + ")";
			}
			this.table.get_dataSource().add({ timeControl : parsedData.timeControl, players : "" + whiteLabel + " vs " + blackLabel, bracket : dict_Dictionary.getPhrase(dict_Phrase.TABLEVIEW_BRACKET_RANKED(false))});
			this.gameIDs.push(gameData.id);
		}
	}
	,removeGame: function(id) {
		var index = this.gameIDs.indexOf(id);
		if(index == null) {
			return;
		}
		this.gameIDs.splice(index,1);
		this.table.get_dataSource().removeAt(index);
	}
	,onGameSelected: function(e) {
		var gameID = this.gameIDs[this.table.get_selectedIndex()];
		this.table.set_selectedIndex(-1);
		net_Requests.getGame(gameID);
	}
	,reload: function(e) {
		var _gthis = this;
		this.reloadBtn.set_disabled(true);
		this.table.get_dataSource().clear();
		this.gameIDs = [];
		this.loadCurrentGames();
		haxe_Timer.delay(function() {
			if(_gthis.reloadBtn != null) {
				_gthis.reloadBtn.set_disabled(false);
			}
		},5000);
	}
	,loadCurrentGames: function() {
		net_Requests.getCurrentGames($bind(this,this.appendGames));
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_main_CurrentGamesTable();
	}
	,title: null
	,time: null
	,tableTitleBox: null
	,tableHeader: null
	,table: null
	,reloadBtn: null
	,players: null
	,bracket: null
	,__class__: gfx_main_CurrentGamesTable
});
var gfx_main_OpenChallengesTable = function() {
	this.challengeData = [];
	haxe_ui_containers_VBox.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        #reloadBtn .icon {\r\n            width: 20px;\r\n            height: 20px;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_containers_HBox();
	c0.set_id("tableTitleBox");
	c0.set_height(40.);
	c0.set_percentWidth(100.);
	var c1 = new haxe_ui_components_Label();
	c1.set_id("title");
	c1.set_styleString("font-size: 30px;font-name: 'fonts/FuturaItalic.ttf'");
	c1.set_verticalAlign("bottom");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_Spacer();
	c2.set_percentWidth(100.);
	c0.addComponent(c2);
	var c3 = new haxe_ui_components_Button();
	c3.set_id("reloadBtn");
	c3.set_percentHeight(100.);
	c3.set_styleString("font-size: 20px");
	c3.set_verticalAlign("bottom");
	c3.set_iconPosition("left");
	c3.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/main_menu/reload.svg"));
	c0.addComponent(c3);
	this.addComponent(c0);
	var c4 = new haxe_ui_containers_TableView();
	c4.set_id("table");
	c4.set_percentWidth(100.);
	c4.set_percentHeight(100.);
	c4.set_itemHeight(30.);
	var c5 = new haxe_ui_containers_Header();
	c5.set_id("tableHeader");
	c5.set_percentWidth(100.);
	var c6 = new haxe_ui_components_Column();
	c6.set_id("mode");
	c6.set_percentWidth(14.);
	c6.set_styleString("text-align:center;font-size:12px");
	c5.addComponent(c6);
	var c7 = new haxe_ui_components_Column();
	c7.set_id("time");
	c7.set_percentWidth(22.);
	c7.set_styleString("text-align:center;font-size:12px");
	c5.addComponent(c7);
	var c8 = new haxe_ui_components_Column();
	c8.set_id("player");
	c8.set_percentWidth(42.);
	c8.set_styleString("text-align:center;font-size:12px");
	c5.addComponent(c8);
	var c9 = new haxe_ui_components_Column();
	c9.set_id("bracket");
	c9.set_percentWidth(22.);
	c9.set_styleString("text-align:center;font-size:12px");
	c5.addComponent(c9);
	c4.addComponent(c5);
	var c10 = new gfx_main_ChallengeModeRenderer();
	c10.set_id("mode");
	c4.addComponent(c10);
	var c11 = new gfx_main_TimeControlRenderer();
	c11.set_id("time");
	c4.addComponent(c11);
	var c12 = new haxe_ui_core_ItemRenderer();
	c12.set_percentWidth(100.);
	var c13 = new haxe_ui_components_Label();
	c13.set_id("player");
	c13.set_percentWidth(100.);
	c13.set_styleString("text-align:center;");
	c12.addComponent(c13);
	c4.addComponent(c12);
	var c14 = new haxe_ui_core_ItemRenderer();
	c14.set_percentWidth(100.);
	var c15 = new haxe_ui_components_Label();
	c15.set_id("bracket");
	c15.set_percentWidth(100.);
	c15.set_styleString("text-align:center;");
	c14.addComponent(c15);
	c4.addComponent(c14);
	this.addComponent(c4);
	this.set_width(600.);
	this.set_height(400.);
	this.bindingRoot = true;
	this.title = c1;
	this.time = c7;
	this.tableTitleBox = c0;
	this.tableHeader = c5;
	this.table = c4;
	this.reloadBtn = c3;
	this.player = c8;
	this.mode = c6;
	this.bracket = c9;
	c1.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.OPEN_CHALLENGES_TABLE_HEADER)));
	c3.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.TABLEVIEW_RELOAD_BTN_TEXT)));
	c6.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.TABLEVIEW_MODE_COLUMN_NAME)));
	c7.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.TABLEVIEW_TIME_COLUMN_NAME)));
	c8.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.TABLEVIEW_PLAYER_COLUMN_NAME)));
	c9.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.TABLEVIEW_BRACKET_COLUMN_NAME)));
	this.table.set_selectionMode("one-item");
	var c = this.table;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onGameSelected));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "table" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.main.OpenChallengesTable", methodName : "new"});
	}
	var c = this.reloadBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.reload));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "reloadBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.main.OpenChallengesTable", methodName : "new"});
	}
};
$hxClasses["gfx.main.OpenChallengesTable"] = gfx_main_OpenChallengesTable;
gfx_main_OpenChallengesTable.__name__ = "gfx.main.OpenChallengesTable";
gfx_main_OpenChallengesTable.__super__ = haxe_ui_containers_VBox;
gfx_main_OpenChallengesTable.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	challengeData: null
	,appendChallenges: function(challenges) {
		var _g = 0;
		while(_g < challenges.length) {
			var data = [challenges[_g]];
			++_g;
			if(Lambda.exists(this.challengeData,(function(data) {
				return function(x) {
					return x.id == data[0].id;
				};
			})(data))) {
				continue;
			}
			var params = struct_ChallengeParams.deserialize(data[0].serializedParams);
			var bracketText = dict_Dictionary.getPhrase(dict_Phrase.TABLEVIEW_BRACKET_RANKED(params.rated));
			var modeData = { color : params.acceptorColor, situation : params.customStartingSituation};
			var params1 = params.timeControl;
			var tmp = "" + data[0].ownerLogin + " (";
			var value = data[0].ownerELO;
			var tmp1;
			switch(value._hx_index) {
			case 0:
				tmp1 = "−";
				break;
			case 1:
				var elo = value.elo;
				tmp1 = "" + elo + "?";
				break;
			case 2:
				var elo1 = value.elo;
				tmp1 = "" + elo1;
				break;
			}
			this.table.get_dataSource().add({ mode : modeData, timeControl : params1, player : tmp + tmp1 + ")", bracket : bracketText});
			this.challengeData.push(data[0]);
		}
	}
	,removeChallenge: function(id) {
		var index = Lambda.findIndex(this.challengeData,function(x) {
			return x.id == id;
		});
		if(index == null) {
			return;
		}
		this.challengeData.splice(index,1);
		this.table.get_dataSource().removeAt(index);
	}
	,onGameSelected: function(e) {
		var data = this.challengeData[this.table.get_selectedIndex()];
		this.table.set_selectedIndex(-1);
		if(!LoginManager.isPlayer(data.ownerLogin)) {
			net_Requests.getOpenChallenge(data.id);
		}
	}
	,reload: function(e) {
		var _gthis = this;
		this.reloadBtn.set_disabled(true);
		this.table.get_dataSource().clear();
		this.challengeData = [];
		this.loadChallenges();
		haxe_Timer.delay(function() {
			if(_gthis.reloadBtn != null) {
				_gthis.reloadBtn.set_disabled(false);
			}
		},5000);
	}
	,loadChallenges: function() {
		net_Requests.getOpenChallenges($bind(this,this.appendChallenges));
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_main_OpenChallengesTable();
	}
	,title: null
	,time: null
	,tableTitleBox: null
	,tableHeader: null
	,table: null
	,reloadBtn: null
	,player: null
	,mode: null
	,bracket: null
	,__class__: gfx_main_OpenChallengesTable
});
var gfx_main_PastGamesList = function() {
	haxe_ui_containers_VBox.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        #list {\r\n            border: 1px solid #aaaaaa;\r\n            background-color: #f6f6f6;\r\n            padding: 4px;\r\n        }\r\n\r\n        #list .listview-contents {\r\n            spacing: 10px;\r\n            background-opacity: 0;\r\n        }\r\n\r\n        #list .even {\r\n            background-opacity: 0;\r\n        }\r\n\r\n        #list .even:hover {\r\n            background-opacity: 0;\r\n        }\r\n\r\n        #list .odd {\r\n            background-opacity: 0;\r\n        }\r\n\r\n        #list .odd:hover {\r\n            background-opacity: 0;\r\n        }\r\n\r\n        #list .listview-contents > .itemrenderer {\r\n            padding: 0px;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_containers_HBox();
	c0.set_id("tableTitleBox");
	c0.set_height(40.);
	c0.set_percentWidth(100.);
	var c1 = new haxe_ui_components_Label();
	c1.set_id("title");
	c1.set_styleString("font-size: 30px;font-name: 'assets/fonts/FuturaItalic.ttf'");
	c1.set_verticalAlign("bottom");
	c0.addComponent(c1);
	this.addComponent(c0);
	var c2 = new haxe_ui_containers_ListView();
	c2.set_id("list");
	c2.set_percentWidth(100.);
	c2.set_percentHeight(100.);
	c2.set_percentContentWidth(100.);
	var c3 = new gfx_common_GameWidget();
	c2.addComponent(c3);
	this.addComponent(c2);
	this.set_width(600.);
	this.set_height(800.);
	this.bindingRoot = true;
	this.title = c1;
	this.tableTitleBox = c0;
	this.list = c2;
	c1.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.PAST_GAMES_TABLE_HEADER)));
};
$hxClasses["gfx.main.PastGamesList"] = gfx_main_PastGamesList;
gfx_main_PastGamesList.__name__ = "gfx.main.PastGamesList";
gfx_main_PastGamesList.__super__ = haxe_ui_containers_VBox;
gfx_main_PastGamesList.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	ownerLogin: null
	,onGameClicked: function(info) {
		var parsedData = serialization_GameLogParser.parse(info.log);
		gfx_SceneManager.toScreen(gfx_ScreenType.LiveGame(info.id,gfx_game_LiveGameConstructor.Past(parsedData,this.ownerLogin)));
	}
	,insertAtBeginning: function(info) {
		var _g = $bind(this,this.onGameClicked);
		var info1 = info;
		var tmp = function() {
			_g(info1);
		};
		this.list.get_dataSource().insert(0,{ info : info, watchedLogin : this.ownerLogin, onClicked : tmp});
	}
	,appendGames: function(data) {
		var _g = 0;
		while(_g < data.length) {
			var gameData = data[_g];
			++_g;
			this.list.get_dataSource().add({ info : gameData, watchedLogin : this.ownerLogin, onClicked : (function(_g,info) {
				return function() {
					_g[0](info[0]);
				};
			})([$bind(this,this.onGameClicked)],[gameData])});
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_main_PastGamesList();
	}
	,title: null
	,tableTitleBox: null
	,list: null
	,__class__: gfx_main_PastGamesList
});
var gfx_main_TimeControlRenderer = function() {
	haxe_ui_core_ItemRenderer.call(this);
	var c0 = new haxe_ui_containers_HBox();
	c0.set_percentHeight(100.);
	c0.set_horizontalAlign("center");
	var c1 = new gfx_basic_$components_ARPImage();
	c1.set_id("tcIcon");
	c1.set_percentHeight(100.);
	c1.set_verticalAlign("center");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_Label();
	c2.set_id("tcLabel");
	c2.set_styleString("font-size:14px");
	c2.set_verticalAlign("center");
	c0.addComponent(c2);
	this.addComponent(c0);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.tcLabel = c2;
	this.tcIcon = c1;
};
$hxClasses["gfx.main.TimeControlRenderer"] = gfx_main_TimeControlRenderer;
gfx_main_TimeControlRenderer.__name__ = "gfx.main.TimeControlRenderer";
gfx_main_TimeControlRenderer.__super__ = haxe_ui_core_ItemRenderer;
gfx_main_TimeControlRenderer.prototype = $extend(haxe_ui_core_ItemRenderer.prototype,{
	onDataChanged: function(data) {
		haxe_ui_core_ItemRenderer.prototype.onDataChanged.call(this,data);
		if(data != null) {
			var timeControl = data.timeControl;
			var timeControlType = timeControl.getType();
			var tmp = this.tcIcon;
			var filename;
			switch(timeControlType._hx_index) {
			case 0:
				filename = "hyperbullet";
				break;
			case 1:
				filename = "bullet";
				break;
			case 2:
				filename = "blitz";
				break;
			case 3:
				filename = "rapid";
				break;
			case 4:
				filename = "classic";
				break;
			case 5:
				filename = "correspondence";
				break;
			}
			tmp.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/time_controls/" + filename + ".svg"));
			this.tcIcon.set_text(dict_Utils.getTimeControlName(timeControlType));
			this.tcLabel.set_text(timeControl.toString());
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_ItemRenderer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ItemRenderer.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_main_TimeControlRenderer();
	}
	,tcLabel: null
	,tcIcon: null
	,__class__: gfx_main_TimeControlRenderer
});
var gfx_menubar_ChallengeEntryData = function(data,list) {
	this.id = data.id;
	this.params = struct_ChallengeParams.deserialize(data.serializedParams);
	this.ownerLogin = data.ownerLogin;
	this.list = list;
};
$hxClasses["gfx.menubar.ChallengeEntryData"] = gfx_menubar_ChallengeEntryData;
gfx_menubar_ChallengeEntryData.__name__ = "gfx.menubar.ChallengeEntryData";
gfx_menubar_ChallengeEntryData.prototype = {
	id: null
	,params: null
	,ownerLogin: null
	,list: null
	,__class__: gfx_menubar_ChallengeEntryData
};
var gfx_menubar_ChallengeEntryRenderer = function() {
	haxe_ui_core_ItemRenderer.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n            #thisRenderer {\r\n                padding: 0px;\r\n                cursor: default;\r\n            }\r\n\r\n            #thisRenderer:hover {\r\n                padding: 0px;\r\n            }\r\n\r\n            #thisBox {\r\n                padding-left: 6px;\r\n                padding-right: 6px;\r\n                padding-top: 4px;\r\n                padding-bottom: 4px;\r\n            }\r\n\r\n            #headerLabel {\r\n                font-size: 16px;\r\n                color: #333333;\r\n                font-bold: true;\r\n            }\r\n\r\n            #paramsLabel {\r\n                font-size: 14px;\r\n            }\r\n\r\n            .params-row-icon {\r\n                background-color: yellow;\r\n                background-opacity: 0;\r\n                pointer-events: true;\r\n            }\r\n\r\n            .decision-action-btn {\r\n                font-size: 14px;\r\n            }\r\n\r\n            #fromToLabel {\r\n                font-size: 14px;\r\n                text-align: center;\r\n            }\r\n\r\n            #link {\r\n                color: $accent-color-darker;\r\n                cursor: pointer;\r\n                font-underline: true;\r\n                pointer-events: true;\r\n                font-size: 14px;\r\n                text-align: center;\r\n            }\r\n\r\n            #link:hover {\r\n                color: $accent-color;\r\n            }\r\n\r\n            #link:down {\r\n                color: $accent-color-darker;\r\n            }\r\n                \r\n            #link:disabled {\r\n                color: $disabled-text-color;\r\n            }\r\n        ","user");
	var c0 = new haxe_ui_containers_HBox();
	c0.set_id("thisBox");
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new gfx_basic_$components_ARPImage();
	c1.set_id("incomingIcon");
	c1.set_percentHeight(75.);
	c1.set_verticalAlign("center");
	c0.addComponent(c1);
	var c2 = new haxe_ui_containers_VBox();
	c2.set_percentWidth(100.);
	c2.set_percentHeight(100.);
	c2.set_styleString("spacing:2px");
	c2.set_verticalAlign("center");
	var c3 = new haxe_ui_components_Label();
	c3.set_id("headerLabel");
	c3.set_horizontalAlign("center");
	c2.addComponent(c3);
	var c4 = new haxe_ui_containers_Stack();
	c4.set_id("secondRow");
	c4.set_percentWidth(100.);
	var c5 = new haxe_ui_components_Label();
	c5.set_id("fromToLabel");
	c5.set_horizontalAlign("center");
	c4.addComponent(c5);
	var c6 = new haxe_ui_components_Link();
	c6.set_id("link");
	c6.set_horizontalAlign("center");
	c4.addComponent(c6);
	c2.addComponent(c4);
	var c7 = new haxe_ui_containers_HBox();
	c7.set_height(18.);
	c7.set_styleString("spacing:0px");
	c7.set_horizontalAlign("center");
	var c8 = new gfx_basic_$components_ARPImage();
	c8.set_id("timeControlIcon");
	c8.set_percentHeight(100.);
	c8.set_styleNames("params-row-icon");
	c7.addComponent(c8);
	var c9 = new haxe_ui_components_Label();
	c9.set_id("paramsLabel");
	c9.set_verticalAlign("center");
	c7.addComponent(c9);
	var c10 = new gfx_basic_$components_ARPImage();
	c10.set_id("colorIcon");
	c10.set_percentHeight(100.);
	c10.set_styleNames("params-row-icon");
	c7.addComponent(c10);
	var c11 = new haxe_ui_components_Spacer();
	c11.set_id("modeIconsSpacer");
	c11.set_width(3.);
	c7.addComponent(c11);
	var c12 = new gfx_basic_$components_ARPImage();
	c12.set_id("customStartPosIcon");
	c12.set_percentHeight(100.);
	c12.set_styleNames("params-row-icon");
	c12.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/main_menu/challenge_modes/custom.svg"));
	c7.addComponent(c12);
	c2.addComponent(c7);
	var c13 = new haxe_ui_components_Spacer();
	c13.set_percentHeight(100.);
	c2.addComponent(c13);
	var c14 = new haxe_ui_containers_HBox();
	c14.set_height(30.);
	c14.set_horizontalAlign("center");
	var c15 = new haxe_ui_components_Button();
	c15.set_id("acceptBtn");
	c15.set_styleNames("decision-action-btn");
	c15.set_verticalAlign("center");
	c14.addComponent(c15);
	var c16 = new haxe_ui_components_Button();
	c16.set_id("declineBtn");
	c16.set_styleNames("decision-action-btn");
	c16.set_verticalAlign("center");
	c14.addComponent(c16);
	var c17 = new haxe_ui_components_Button();
	c17.set_id("cancelBtn");
	c17.set_styleNames("decision-action-btn");
	c17.set_verticalAlign("center");
	c14.addComponent(c17);
	c2.addComponent(c14);
	c0.addComponent(c2);
	this.addComponent(c0);
	this.set_id("thisRenderer");
	this.set_height(100.);
	this.set_percentWidth(100.);
	this.bindingRoot = true;
	this.timeControlIcon = c8;
	this.thisBox = c0;
	this.secondRow = c4;
	this.paramsLabel = c9;
	this.modeIconsSpacer = c11;
	this.link = c6;
	this.incomingIcon = c1;
	this.headerLabel = c3;
	this.fromToLabel = c5;
	this.declineBtn = c16;
	this.customStartPosIcon = c12;
	this.colorIcon = c10;
	this.cancelBtn = c17;
	this.acceptBtn = c15;
	c6.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_CHALLENGES_COPY_LINK_TEXT)));
	c15.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_CHALLENGES_ACCEPT_BUTTON_TEXT)));
	c16.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_CHALLENGES_DECLINE_BUTTON_TEXT)));
	c17.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_CHALLENGES_CANCEL_BUTTON_TEXT)));
	var c = this.acceptBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onAccepted));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "acceptBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.menubar.ChallengeEntryRenderer", methodName : "new"});
	}
	var c = this.declineBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onDeclined));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "declineBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.menubar.ChallengeEntryRenderer", methodName : "new"});
	}
	var c = this.cancelBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onCancelled));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "cancelBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.menubar.ChallengeEntryRenderer", methodName : "new"});
	}
};
$hxClasses["gfx.menubar.ChallengeEntryRenderer"] = gfx_menubar_ChallengeEntryRenderer;
gfx_menubar_ChallengeEntryRenderer.__name__ = "gfx.menubar.ChallengeEntryRenderer";
gfx_menubar_ChallengeEntryRenderer.__super__ = haxe_ui_core_ItemRenderer;
gfx_menubar_ChallengeEntryRenderer.prototype = $extend(haxe_ui_core_ItemRenderer.prototype,{
	challengeID: null
	,list: null
	,onAccepted: function(e) {
		this.list.removeEntryByID(this.challengeID);
		Networker.emitEvent(net_shared_ClientEvent.AcceptChallenge(this.challengeID));
	}
	,onDeclined: function(e) {
		this.list.removeEntryByID(this.challengeID);
		Networker.emitEvent(net_shared_ClientEvent.DeclineDirectChallenge(this.challengeID));
	}
	,onCancelled: function(e) {
		this.list.removeEntryByID(this.challengeID);
		Networker.emitEvent(net_shared_ClientEvent.CancelChallenge(this.challengeID));
	}
	,onCopyRequested: function(e) {
		browser_Clipboard.copy(browser_Url.getChallengeLink(this.challengeID));
	}
	,onDataChanged: function(data) {
		if(data == null || data.id == null || data.id == this.challengeID) {
			return;
		}
		var isIncoming;
		var challengeData = data;
		var params = challengeData.params;
		this.challengeID = challengeData.id;
		this.list = challengeData.list;
		var _g = params.type;
		switch(_g._hx_index) {
		case 0:case 1:
			isIncoming = false;
			this.secondRow.set_selectedIndex(1);
			this.headerLabel.set_text(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_CHALLENGES_HEADER_OUTGOING_CHALLENGE));
			this.link.set_onClick($bind(this,this.onCopyRequested));
			this.acceptBtn.set_hidden(true);
			this.declineBtn.set_hidden(true);
			break;
		case 2:
			var calleeRef = _g.calleeRef;
			isIncoming = LoginManager.isPlayer(calleeRef);
			this.secondRow.set_selectedIndex(0);
			if(isIncoming) {
				this.headerLabel.set_text(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_CHALLENGES_HEADER_INCOMING_CHALLENGE));
				this.fromToLabel.set_text(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_CHALLENGES_FROM_LINE_TEXT,[challengeData.ownerLogin]));
			} else {
				this.headerLabel.set_text(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_CHALLENGES_HEADER_OUTGOING_CHALLENGE));
				this.fromToLabel.set_text(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_CHALLENGES_TO_LINE_TEXT,[dict_Utils.playerRef(calleeRef)]));
			}
			this.acceptBtn.set_hidden(!isIncoming);
			this.declineBtn.set_hidden(!isIncoming);
			this.cancelBtn.set_hidden(isIncoming);
			break;
		}
		var filename = isIncoming ? "incoming" : "outgoing";
		this.incomingIcon.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/upper_menu/challenges/item_arrow_img/" + filename + ".svg"));
		var timeControl = params.timeControl;
		var timeControlType = timeControl.getType();
		var color;
		var _g = params.acceptorColor;
		if(_g == null) {
			color = null;
		} else {
			switch(_g._hx_index) {
			case 0:
				color = isIncoming ? net_shared_PieceColor.White : net_shared_PieceColor.Black;
				break;
			case 1:
				color = isIncoming ? net_shared_PieceColor.Black : net_shared_PieceColor.White;
				break;
			}
		}
		var tmp = this.timeControlIcon;
		var filename;
		switch(timeControlType._hx_index) {
		case 0:
			filename = "hyperbullet";
			break;
		case 1:
			filename = "bullet";
			break;
		case 2:
			filename = "blitz";
			break;
		case 3:
			filename = "rapid";
			break;
		case 4:
			filename = "classic";
			break;
		case 5:
			filename = "correspondence";
			break;
		}
		tmp.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/time_controls/" + filename + ".svg"));
		this.timeControlIcon.set_tooltip(dict_Utils.getTimeControlName(timeControlType));
		this.paramsLabel.set_text(timeControl.toString() + " • " + dict_Dictionary.getPhrase(dict_Phrase.TABLEVIEW_BRACKET_RANKED(params.rated)) + " • ");
		var tmp = this.colorIcon;
		var filename;
		if(color == null) {
			filename = "random";
		} else {
			switch(color._hx_index) {
			case 0:
				filename = "white";
				break;
			case 1:
				filename = "black";
				break;
			}
		}
		tmp.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/main_menu/challenge_modes/" + filename + ".svg"));
		this.colorIcon.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_COLOR_ICON_TOOLTIP(color)));
		if(params.customStartingSituation != null) {
			var renderer = new gfx_common_SituationTooltipRenderer(params.customStartingSituation);
			haxe_ui_tooltips_ToolTipManager.get_instance().registerTooltip(this.customStartPosIcon,{ renderer : renderer});
		} else {
			this.modeIconsSpacer.set_hidden(true);
			this.customStartPosIcon.set_hidden(true);
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_ItemRenderer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ItemRenderer.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_menubar_ChallengeEntryRenderer();
	}
	,timeControlIcon: null
	,thisBox: null
	,secondRow: null
	,paramsLabel: null
	,modeIconsSpacer: null
	,link: null
	,incomingIcon: null
	,headerLabel: null
	,fromToLabel: null
	,declineBtn: null
	,customStartPosIcon: null
	,colorIcon: null
	,cancelBtn: null
	,acceptBtn: null
	,__class__: gfx_menubar_ChallengeEntryRenderer
});
var haxe_ui_containers_menus_Menu = function() {
	haxe_ui_containers_VBox.call(this);
};
$hxClasses["haxe.ui.containers.menus.Menu"] = haxe_ui_containers_menus_Menu;
haxe_ui_containers_menus_Menu.__name__ = "haxe.ui.containers.menus.Menu";
haxe_ui_containers_menus_Menu.__super__ = haxe_ui_containers_VBox;
haxe_ui_containers_menus_Menu.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	onThemeChanged: function() {
		haxe_ui_containers_VBox.prototype.onThemeChanged.call(this);
		var builder = js_Boot.__cast(this._compositeBuilder , haxe_ui_containers_menus__$Menu_Builder);
		builder.onThemeChanged();
	}
	,registerComposite: function() {
		haxe_ui_containers_VBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_menus_MenuEvents;
		this._compositeBuilderClass = haxe_ui_containers_menus__$Menu_Builder;
	}
	,_internal__onMenuSelected: null
	,onMenuSelected: null
	,set_onMenuSelected: function(value) {
		if(this._internal__onMenuSelected != null) {
			this.unregisterEvent("menuselected",this._internal__onMenuSelected);
			this._internal__onMenuSelected = null;
		}
		if(value != null) {
			this._internal__onMenuSelected = value;
			this.registerEvent("menuselected",value);
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("menuStyleNames",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_menuStyleNames: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("menuStyleNames"));
	}
	,set_menuStyleNames: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"menuStyleNames",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("menuStyleNames",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"menuStyleNames"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_menus_Menu();
	}
	,__class__: haxe_ui_containers_menus_Menu
	,__properties__: $extend(haxe_ui_containers_VBox.prototype.__properties__,{set_menuStyleNames:"set_menuStyleNames",get_menuStyleNames:"get_menuStyleNames",set_onMenuSelected:"set_onMenuSelected"})
});
var gfx_menubar_ChallengeList = function() {
	this.ownIDs = [];
	this.idsByOwnerLogin = new haxe_ds_StringMap();
	this.entryDataByID = new haxe_ds_IntMap();
	this.menuShown = false;
	haxe_ui_containers_menus_Menu.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n            #noChallengesLabel {\r\n                font-size:14px;\r\n                text-align:center;\r\n                font-italic:true;\r\n            }\r\n\r\n            #actualList {\r\n                background-color: #ffffff;\r\n                padding: 0px;\r\n            }\r\n\r\n            #actualList .even {\r\n                background-color: #fdfdfd;\r\n            }\r\n\r\n            #actualList .even:hover {\r\n                background-color: #fdfdfd;\r\n            }\r\n\r\n            #actualList .odd {\r\n                background-color: #efefef;\r\n            }\r\n\r\n            #actualList .odd:hover {\r\n                background-color: #efefef;\r\n            }\r\n\r\n            #actualList .listview-contents > .itemrenderer {\r\n                padding: 0px;\r\n            }\r\n        ","user");
	var c0 = new haxe_ui_containers_Stack();
	c0.set_id("stack");
	c0.set_height(30.);
	c0.set_percentWidth(100.);
	var c1 = new haxe_ui_components_Label();
	c1.set_id("noChallengesLabel");
	c1.set_percentWidth(100.);
	c1.set_verticalAlign("center");
	c0.addComponent(c1);
	var c2 = new haxe_ui_containers_ListView();
	c2.set_id("actualList");
	c2.set_percentWidth(100.);
	c2.set_percentHeight(100.);
	c2.set_percentContentWidth(100.);
	c2.set_selectionMode("disabled");
	var c3 = new gfx_menubar_ChallengeEntryRenderer();
	c2.addComponent(c3);
	c0.addComponent(c2);
	this.addComponent(c0);
	this.set_width(350.);
	this.bindingRoot = true;
	this.stack = c0;
	this.noChallengesLabel = c1;
	this.actualList = c2;
	c1.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MENUBAR_CHALLENGES_NO_CHALLENGES_PLACEHOLDER)));
	this.flagIcon = new gfx_menubar_ChallengeMenuIcon();
	this.set_icon(haxe_ui_util_Variant.fromComponent(this.flagIcon));
	var c = this;
	if(c != null) {
		c.registerEvent("menuopened",$bind(this,this.onOpened));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "this" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.menubar.ChallengeList", methodName : "new"});
	}
	var c = this;
	if(c != null) {
		c.registerEvent("menuclosed",$bind(this,this.onClosed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "this" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.menubar.ChallengeList", methodName : "new"});
	}
};
$hxClasses["gfx.menubar.ChallengeList"] = gfx_menubar_ChallengeList;
gfx_menubar_ChallengeList.__name__ = "gfx.menubar.ChallengeList";
gfx_menubar_ChallengeList.__super__ = haxe_ui_containers_menus_Menu;
gfx_menubar_ChallengeList.prototype = $extend(haxe_ui_containers_menus_Menu.prototype,{
	flagIcon: null
	,menuShown: null
	,entryDataByID: null
	,idsByOwnerLogin: null
	,ownIDs: null
	,onOpened: function(e) {
		this.menuShown = true;
		this.flagIcon.resetUnread();
	}
	,onClosed: function(e) {
		this.menuShown = false;
	}
	,updateItemCount: function(newItemCount) {
		if(newItemCount == 0) {
			this.stack.set_selectedIndex(0);
			this.stack.set_height(30);
		} else {
			this.stack.set_selectedIndex(1);
			this.stack.set_height(Math.min(newItemCount * 102,250));
		}
	}
	,appendEntry: function(data) {
		var entryData = new gfx_menubar_ChallengeEntryData(data,this);
		this.entryDataByID.h[entryData.id] = entryData;
		this.actualList.get_dataSource().add(entryData);
		this.updateItemCount(this.actualList.get_dataSource().get_size());
		if(!LoginManager.isPlayer(data.ownerLogin)) {
			var ownerLogin = data.ownerLogin.toLowerCase();
			if(Object.prototype.hasOwnProperty.call(this.idsByOwnerLogin.h,ownerLogin)) {
				this.idsByOwnerLogin.h[ownerLogin].push(data.id);
			} else {
				this.idsByOwnerLogin.h[ownerLogin] = [data.id];
			}
			this.flagIcon.addIncoming(data.id,!this.menuShown);
		} else {
			this.ownIDs.push(data.id);
			this.flagIcon.addOutgoing(data.id);
		}
	}
	,clearEntries: function() {
		this.flagIcon.clear();
		this.actualList.get_dataSource().clear();
		this.updateItemCount(0);
		this.entryDataByID = new haxe_ds_IntMap();
		this.idsByOwnerLogin = new haxe_ds_StringMap();
		this.ownIDs = [];
	}
	,removeEntryByID: function(id) {
		var data = this.entryDataByID.h[id];
		if(data == null) {
			return;
		}
		this.actualList.get_dataSource().remove(data);
		this.updateItemCount(this.actualList.get_dataSource().get_size());
		this.entryDataByID.remove(id);
		var isOwn = HxOverrides.remove(this.ownIDs,id);
		if(!isOwn) {
			var h = this.idsByOwnerLogin.h;
			var _g_h = h;
			var _g_keys = Object.keys(h);
			var _g_length = _g_keys.length;
			var _g_current = 0;
			while(_g_current < _g_length) {
				var key = _g_keys[_g_current++];
				var _g1_key = key;
				var _g1_value = _g_h[key];
				var login = _g1_key;
				var list = _g1_value;
				HxOverrides.remove(list,id);
				if(Lambda.empty(list)) {
					var _this = this.idsByOwnerLogin;
					if(Object.prototype.hasOwnProperty.call(_this.h,login)) {
						delete(_this.h[login]);
					}
				}
			}
			this.flagIcon.removeIncoming(id);
		} else {
			this.flagIcon.removeOutgoing(id);
		}
	}
	,removeEntriesByPlayer: function(login) {
		var playerIDs = this.idsByOwnerLogin.h[login.toLowerCase()];
		if(playerIDs != null) {
			var _g = 0;
			var _g1 = playerIDs.slice();
			while(_g < _g1.length) {
				var id = _g1[_g];
				++_g;
				this.removeEntryByID(id);
			}
		}
	}
	,removeOwnEntries: function() {
		var _g = 0;
		var _g1 = this.ownIDs.slice();
		while(_g < _g1.length) {
			var id = _g1[_g];
			++_g;
			this.removeEntryByID(id);
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_menus_Menu.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_menus_Menu.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_menubar_ChallengeList();
	}
	,stack: null
	,noChallengesLabel: null
	,actualList: null
	,__class__: gfx_menubar_ChallengeList
});
var gfx_menubar_ChallengeMenuIcon = function() {
	this.outgoingChallengeIDs = new ds_IntHashSet(1024,128);
	this.incomingChallengeIDs = new ds_IntHashSet(1024,128);
	this.unreadChallengeIDs = new ds_IntHashSet(1024,128);
	haxe_ui_components_Image.call(this);
	var c0 = new haxe_ui_components_Image();
	c0.set_id("actualImage");
	c0.set_width(25.);
	c0.set_height(25.);
	this.addComponent(c0);
	var c1 = new haxe_ui_containers_Absolute();
	c1.set_id("notificationContainer");
	c1.set_width(25.);
	c1.set_height(25.);
	c1.set_hidden(true);
	var c2 = new haxe_ui_containers_Box();
	c2.set_id("roundBox");
	c2.set_left(18.);
	c2.set_top(-3.);
	c2.set_width(12.5);
	c2.set_height(12.5);
	c2.set_styleString("background-color: red;border-radius: 8px;padding: 2px 2px;");
	c1.addComponent(c2);
	this.addComponent(c1);
	this.set_width(25.);
	this.set_height(25.);
	this.bindingRoot = true;
	this.roundBox = c2;
	this.notificationContainer = c1;
	this.actualImage = c0;
	var tmp = this.actualImage;
	var filename;
	switch(gfx_menubar_ChallengesIconMode.Empty._hx_index) {
	case 0:
		filename = "none";
		break;
	case 1:
		filename = "in";
		break;
	case 2:
		filename = "out";
		break;
	case 3:
		filename = "both";
		break;
	}
	tmp.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/upper_menu/challenges/button_icon/" + filename + ".svg"));
};
$hxClasses["gfx.menubar.ChallengeMenuIcon"] = gfx_menubar_ChallengeMenuIcon;
gfx_menubar_ChallengeMenuIcon.__name__ = "gfx.menubar.ChallengeMenuIcon";
gfx_menubar_ChallengeMenuIcon.__super__ = haxe_ui_components_Image;
gfx_menubar_ChallengeMenuIcon.prototype = $extend(haxe_ui_components_Image.prototype,{
	unreadChallengeIDs: null
	,incomingChallengeIDs: null
	,outgoingChallengeIDs: null
	,set_width: function(value) {
		if(this.actualImage != null) {
			this.actualImage.set_width(value);
		}
		if(this.notificationContainer != null) {
			this.notificationContainer.set_width(value);
		}
		if(this.roundBox != null) {
			this.roundBox.set_width(value / 2);
			this.roundBox.set_left(value * 0.54);
			var newStyle = this.roundBox.get_customStyle().clone();
			newStyle.paddingLeft = value * 0.08;
			newStyle.paddingRight = value * 0.08;
			newStyle.borderRadius = value * 0.32;
			this.roundBox.set_customStyle(newStyle);
		}
		return haxe_ui_components_Image.prototype.set_width.call(this,value);
	}
	,set_height: function(value) {
		if(this.actualImage != null) {
			this.actualImage.set_height(value);
		}
		if(this.notificationContainer != null) {
			this.notificationContainer.set_height(value);
		}
		if(this.roundBox != null) {
			this.roundBox.set_height(value / 2);
			this.roundBox.set_top(-value * 0.12);
			var newStyle = this.roundBox.get_customStyle().clone();
			newStyle.paddingTop = value * 0.08;
			newStyle.paddingBottom = value * 0.08;
			newStyle.borderRadius = value * 0.32;
			this.roundBox.set_customStyle(newStyle);
		}
		return haxe_ui_components_Image.prototype.set_height.call(this,value);
	}
	,updateMode: function() {
		var mode;
		if(this.incomingChallengeIDs.mSize == 0) {
			if(this.outgoingChallengeIDs.mSize == 0) {
				mode = gfx_menubar_ChallengesIconMode.Empty;
			} else {
				mode = gfx_menubar_ChallengesIconMode.HasOutgoing;
			}
		} else if(this.outgoingChallengeIDs.mSize == 0) {
			mode = gfx_menubar_ChallengesIconMode.HasIncoming;
		} else {
			mode = gfx_menubar_ChallengesIconMode.HasBoth;
		}
		var tmp = this.actualImage;
		var filename;
		switch(mode._hx_index) {
		case 0:
			filename = "none";
			break;
		case 1:
			filename = "in";
			break;
		case 2:
			filename = "out";
			break;
		case 3:
			filename = "both";
			break;
		}
		tmp.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/upper_menu/challenges/button_icon/" + filename + ".svg"));
	}
	,addUnread: function(id) {
		var _this = this.unreadChallengeIDs;
		var i = _this.mHash[id * 73856093 & _this.mMask];
		var tmp;
		if(i == -1) {
			tmp = false;
		} else {
			var d = _this.mData;
			if(d[i] == id) {
				tmp = true;
			} else {
				var exists = false;
				i = d[i + 1];
				while(i != -1) {
					if(d[i] == id) {
						exists = true;
						break;
					}
					i = d[i + 1];
				}
				tmp = exists;
			}
		}
		if(tmp) {
			return;
		}
		var _this = this.unreadChallengeIDs;
		var b = id * 73856093 & _this.mMask;
		var d = _this.mData;
		var j = _this.mHash[b];
		if(j == -1) {
			if(_this.mSize == _this.capacity) {
				_this.grow();
				d = _this.mData;
			}
			j = _this.mFree << 1;
			_this.mFree = _this.mNext[_this.mFree];
			_this.mHash[b] = j;
			d[j] = id;
			_this.mSize++;
		} else if(d[j] != id) {
			var p = d[j + 1];
			while(p != -1) {
				if(d[p] == id) {
					j = -1;
					break;
				}
				j = p;
				p = d[p + 1];
			}
			if(j != -1) {
				if(_this.mSize == _this.capacity) {
					_this.grow();
					d = _this.mData;
				}
				p = _this.mFree << 1;
				_this.mFree = _this.mNext[_this.mFree];
				d[p] = id;
				d[j + 1] = p;
				_this.mSize++;
			}
		}
		this.notificationContainer.set_hidden(this.unreadChallengeIDs.mSize == 0);
	}
	,removeUnread: function(id) {
		var _this = this.unreadChallengeIDs;
		var b = id * 73856093 & _this.mMask;
		var i = _this.mHash[b];
		if(i != -1) {
			var d = _this.mData;
			if(id == d[i]) {
				if(d[i + 1] == -1) {
					_this.mHash[b] = -1;
				} else {
					_this.mHash[b] = d[i + 1];
				}
				var j = i >> 1;
				_this.mNext[j] = _this.mFree;
				_this.mFree = j;
				d[i] = -2147483648;
				d[i + 1] = -1;
				_this.mSize--;
			} else {
				var exists = false;
				var i0 = i;
				i = d[i + 1];
				while(i != -1) {
					if(d[i] == id) {
						exists = true;
						break;
					}
					i0 = i;
					i = d[i0 + 1];
				}
				if(exists) {
					d[i0 + 1] = d[i + 1];
					var j = i >> 1;
					_this.mNext[j] = _this.mFree;
					_this.mFree = j;
					d[i] = -2147483648;
					d[i + 1] = -1;
					--_this.mSize;
				}
			}
		}
		this.notificationContainer.set_hidden(this.unreadChallengeIDs.mSize == 0);
	}
	,resetUnread: function() {
		this.unreadChallengeIDs.clear();
		this.notificationContainer.set_hidden(true);
	}
	,clear: function() {
		this.resetUnread();
		this.incomingChallengeIDs.clear();
		this.outgoingChallengeIDs.clear();
		var tmp = this.actualImage;
		var filename;
		switch(gfx_menubar_ChallengesIconMode.Empty._hx_index) {
		case 0:
			filename = "none";
			break;
		case 1:
			filename = "in";
			break;
		case 2:
			filename = "out";
			break;
		case 3:
			filename = "both";
			break;
		}
		tmp.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/upper_menu/challenges/button_icon/" + filename + ".svg"));
	}
	,addIncoming: function(id,trackAsUnread) {
		var _this = this.incomingChallengeIDs;
		var b = id * 73856093 & _this.mMask;
		var d = _this.mData;
		var j = _this.mHash[b];
		if(j == -1) {
			if(_this.mSize == _this.capacity) {
				_this.grow();
				d = _this.mData;
			}
			j = _this.mFree << 1;
			_this.mFree = _this.mNext[_this.mFree];
			_this.mHash[b] = j;
			d[j] = id;
			_this.mSize++;
		} else if(d[j] != id) {
			var p = d[j + 1];
			while(p != -1) {
				if(d[p] == id) {
					j = -1;
					break;
				}
				j = p;
				p = d[p + 1];
			}
			if(j != -1) {
				if(_this.mSize == _this.capacity) {
					_this.grow();
					d = _this.mData;
				}
				p = _this.mFree << 1;
				_this.mFree = _this.mNext[_this.mFree];
				d[p] = id;
				d[j + 1] = p;
				_this.mSize++;
			}
		}
		this.updateMode();
		if(trackAsUnread) {
			this.addUnread(id);
		}
	}
	,removeIncoming: function(id) {
		var _this = this.incomingChallengeIDs;
		var b = id * 73856093 & _this.mMask;
		var i = _this.mHash[b];
		if(i != -1) {
			var d = _this.mData;
			if(id == d[i]) {
				if(d[i + 1] == -1) {
					_this.mHash[b] = -1;
				} else {
					_this.mHash[b] = d[i + 1];
				}
				var j = i >> 1;
				_this.mNext[j] = _this.mFree;
				_this.mFree = j;
				d[i] = -2147483648;
				d[i + 1] = -1;
				_this.mSize--;
			} else {
				var exists = false;
				var i0 = i;
				i = d[i + 1];
				while(i != -1) {
					if(d[i] == id) {
						exists = true;
						break;
					}
					i0 = i;
					i = d[i0 + 1];
				}
				if(exists) {
					d[i0 + 1] = d[i + 1];
					var j = i >> 1;
					_this.mNext[j] = _this.mFree;
					_this.mFree = j;
					d[i] = -2147483648;
					d[i + 1] = -1;
					--_this.mSize;
				}
			}
		}
		this.updateMode();
		this.removeUnread(id);
	}
	,addOutgoing: function(id) {
		var _this = this.outgoingChallengeIDs;
		var b = id * 73856093 & _this.mMask;
		var d = _this.mData;
		var j = _this.mHash[b];
		if(j == -1) {
			if(_this.mSize == _this.capacity) {
				_this.grow();
				d = _this.mData;
			}
			j = _this.mFree << 1;
			_this.mFree = _this.mNext[_this.mFree];
			_this.mHash[b] = j;
			d[j] = id;
			_this.mSize++;
		} else if(d[j] != id) {
			var p = d[j + 1];
			while(p != -1) {
				if(d[p] == id) {
					j = -1;
					break;
				}
				j = p;
				p = d[p + 1];
			}
			if(j != -1) {
				if(_this.mSize == _this.capacity) {
					_this.grow();
					d = _this.mData;
				}
				p = _this.mFree << 1;
				_this.mFree = _this.mNext[_this.mFree];
				d[p] = id;
				d[j + 1] = p;
				_this.mSize++;
			}
		}
		this.updateMode();
	}
	,removeOutgoing: function(id) {
		var _this = this.outgoingChallengeIDs;
		var b = id * 73856093 & _this.mMask;
		var i = _this.mHash[b];
		if(i != -1) {
			var d = _this.mData;
			if(id == d[i]) {
				if(d[i + 1] == -1) {
					_this.mHash[b] = -1;
				} else {
					_this.mHash[b] = d[i + 1];
				}
				var j = i >> 1;
				_this.mNext[j] = _this.mFree;
				_this.mFree = j;
				d[i] = -2147483648;
				d[i + 1] = -1;
				_this.mSize--;
			} else {
				var exists = false;
				var i0 = i;
				i = d[i + 1];
				while(i != -1) {
					if(d[i] == id) {
						exists = true;
						break;
					}
					i0 = i;
					i = d[i0 + 1];
				}
				if(exists) {
					d[i0 + 1] = d[i + 1];
					var j = i >> 1;
					_this.mNext[j] = _this.mFree;
					_this.mFree = j;
					d[i] = -2147483648;
					d[i + 1] = -1;
					--_this.mSize;
				}
			}
		}
		this.updateMode();
	}
	,onReady: function() {
		haxe_ui_components_Image.prototype.onReady.call(this);
		if(this.actualImage != null) {
			this.actualImage.set_width(this.get_width());
			this.actualImage.set_height(this.get_height());
		}
		if(this.notificationContainer != null) {
			this.notificationContainer.set_width(this.get_width());
			this.notificationContainer.set_height(this.get_height());
		}
		if(this.roundBox != null) {
			this.roundBox.set_width(this.get_width() / 2);
			this.roundBox.set_height(this.get_height() / 2);
			this.roundBox.set_left(this.get_width() * 0.54);
			this.roundBox.set_top(-this.get_height() * 0.12);
			var newStyle = this.roundBox.get_customStyle().clone();
			newStyle.paddingLeft = this.get_width() * 0.08;
			newStyle.paddingRight = this.get_width() * 0.08;
			newStyle.paddingTop = this.get_height() * 0.08;
			newStyle.paddingBottom = this.get_height() * 0.08;
			newStyle.borderRadius = (this.get_width() + this.get_height()) / 2 * 0.32;
			this.roundBox.set_customStyle(newStyle);
		}
	}
	,registerBehaviours: function() {
		haxe_ui_components_Image.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Image.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_menubar_ChallengeMenuIcon();
	}
	,roundBox: null
	,notificationContainer: null
	,actualImage: null
	,__class__: gfx_menubar_ChallengeMenuIcon
});
var gfx_menubar_ChallengesIconMode = $hxEnums["gfx.menubar.ChallengesIconMode"] = { __ename__:"gfx.menubar.ChallengesIconMode",__constructs__:null
	,Empty: {_hx_name:"Empty",_hx_index:0,__enum__:"gfx.menubar.ChallengesIconMode",toString:$estr}
	,HasIncoming: {_hx_name:"HasIncoming",_hx_index:1,__enum__:"gfx.menubar.ChallengesIconMode",toString:$estr}
	,HasOutgoing: {_hx_name:"HasOutgoing",_hx_index:2,__enum__:"gfx.menubar.ChallengesIconMode",toString:$estr}
	,HasBoth: {_hx_name:"HasBoth",_hx_index:3,__enum__:"gfx.menubar.ChallengesIconMode",toString:$estr}
};
gfx_menubar_ChallengesIconMode.__constructs__ = [gfx_menubar_ChallengesIconMode.Empty,gfx_menubar_ChallengesIconMode.HasIncoming,gfx_menubar_ChallengesIconMode.HasOutgoing,gfx_menubar_ChallengesIconMode.HasBoth];
gfx_menubar_ChallengesIconMode.__empty_constructs__ = [gfx_menubar_ChallengesIconMode.Empty,gfx_menubar_ChallengesIconMode.HasIncoming,gfx_menubar_ChallengesIconMode.HasOutgoing,gfx_menubar_ChallengesIconMode.HasBoth];
var haxe_ui_backend_MessageBoxBase = function() {
	this._type = null;
	haxe_ui_containers_dialogs_Dialog.call(this);
	var hbox = new haxe_ui_containers_HBox();
	hbox.set_percentWidth(100);
	hbox.set_styleString("spacing:10px;");
	this.addComponent(hbox);
	this.iconImage = new haxe_ui_components_Image();
	this.iconImage.set_id("iconImage");
	hbox.addComponent(this.iconImage);
	this.messageLabel = new haxe_ui_components_Label();
	this.messageLabel.set_id("messageLabel");
	this.messageLabel.set_percentWidth(100);
	hbox.addComponent(this.messageLabel);
};
$hxClasses["haxe.ui.backend.MessageBoxBase"] = haxe_ui_backend_MessageBoxBase;
haxe_ui_backend_MessageBoxBase.__name__ = "haxe.ui.backend.MessageBoxBase";
haxe_ui_backend_MessageBoxBase.__super__ = haxe_ui_containers_dialogs_Dialog;
haxe_ui_backend_MessageBoxBase.prototype = $extend(haxe_ui_containers_dialogs_Dialog.prototype,{
	iconImage: null
	,messageLabel: null
	,get_message: function() {
		return this.messageLabel.get_text();
	}
	,set_message: function(value) {
		this.messageLabel.set_text(value);
		return value;
	}
	,get_text: function() {
		return this.get_message();
	}
	,set_text: function(value) {
		this.set_message(value);
		return value;
	}
	,get_icon: function() {
		return this.iconImage.get_resource();
	}
	,set_icon: function(value) {
		this.iconImage.set_resource(value);
		return value;
	}
	,_type: null
	,get_type: function() {
		return this._type;
	}
	,set_type: function(value) {
		this._type = haxe_ui_containers_dialogs_MessageBoxType.toString(value);
		this.iconImage.addClass(this._type);
		this.addClass(this._type);
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_dialogs_Dialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_dialogs_Dialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_backend_MessageBoxBase();
	}
	,__class__: haxe_ui_backend_MessageBoxBase
	,__properties__: $extend(haxe_ui_containers_dialogs_Dialog.prototype.__properties__,{set_type:"set_type",get_type:"get_type",set_message:"set_message",get_message:"get_message"})
});
var haxe_ui_containers_dialogs_MessageBox = function() {
	haxe_ui_backend_MessageBoxBase.call(this);
	this.set_title("Message");
};
$hxClasses["haxe.ui.containers.dialogs.MessageBox"] = haxe_ui_containers_dialogs_MessageBox;
haxe_ui_containers_dialogs_MessageBox.__name__ = "haxe.ui.containers.dialogs.MessageBox";
haxe_ui_containers_dialogs_MessageBox.__super__ = haxe_ui_backend_MessageBoxBase;
haxe_ui_containers_dialogs_MessageBox.prototype = $extend(haxe_ui_backend_MessageBoxBase.prototype,{
	onInitialize: function() {
		haxe_ui_backend_MessageBoxBase.prototype.onInitialize.call(this);
		if(haxe_ui_containers_dialogs_DialogButton.toArray(this.buttons).length == 0) {
			switch(this.get_type()) {
			case "error":
				this.buttons = "{{close}}";
				break;
			case "info":
				this.buttons = "{{ok}}";
				break;
			case "question":
				var larr = "{{yes}}".split("|");
				var rarr = "{{no}}".split("|");
				var _g = 0;
				while(_g < rarr.length) {
					var r = rarr[_g];
					++_g;
					if(larr.indexOf(r) == -1) {
						larr.push(r);
					}
				}
				var larr1 = haxe_ui_containers_dialogs_DialogButton.toString(larr.join("|")).split("|");
				var rarr = haxe_ui_containers_dialogs_DialogButton.toString("{{cancel}}").split("|");
				var _g = 0;
				while(_g < rarr.length) {
					var r = rarr[_g];
					++_g;
					if(larr1.indexOf(r) == -1) {
						larr1.push(r);
					}
				}
				this.buttons = larr1.join("|");
				break;
			case "warning":
				this.buttons = "{{close}}";
				break;
			case "yesno":
				var larr = haxe_ui_containers_dialogs_DialogButton.toString("{{yes}}").split("|");
				var rarr = haxe_ui_containers_dialogs_DialogButton.toString("{{no}}").split("|");
				var _g = 0;
				while(_g < rarr.length) {
					var r = rarr[_g];
					++_g;
					if(larr.indexOf(r) == -1) {
						larr.push(r);
					}
				}
				this.buttons = larr.join("|");
				break;
			}
			this.createButtons();
		}
		if(this.get_title() == "Message") {
			switch(this.get_type()) {
			case "error":
				this.set_title("Error");
				break;
			case "info":
				this.set_title("Info");
				break;
			case "question":
				this.set_title("Question");
				break;
			case "warning":
				this.set_title("Warning");
				break;
			case "yesno":
				this.set_title("Question");
				break;
			}
		}
	}
	,registerBehaviours: function() {
		haxe_ui_backend_MessageBoxBase.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_backend_MessageBoxBase.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_dialogs_MessageBox();
	}
	,__class__: haxe_ui_containers_dialogs_MessageBox
});
var gfx_popups_BranchingHelp = function() {
	haxe_ui_containers_dialogs_MessageBox.call(this);
	this.set_type("info");
	this.set_title(dict_Dictionary.getPhrase(dict_Phrase.ANALYSIS_BRANCHING_HELP_DIALOG_TITLE));
	this.messageLabel.set_htmlText(dict_Dictionary.getPhrase(dict_Phrase.ANALYSIS_BRANCHING_HELP_DIALOG_TEXT));
	this.messageLabel.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,Math.max(haxe_ui_core_Screen.get_instance().get_actualHeight() * 0.02,12),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
	this.set_width(Math.min(500,haxe_ui_core_Screen.get_instance().get_actualWidth() * 0.95));
};
$hxClasses["gfx.popups.BranchingHelp"] = gfx_popups_BranchingHelp;
gfx_popups_BranchingHelp.__name__ = "gfx.popups.BranchingHelp";
gfx_popups_BranchingHelp.__super__ = haxe_ui_containers_dialogs_MessageBox;
gfx_popups_BranchingHelp.prototype = $extend(haxe_ui_containers_dialogs_MessageBox.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_dialogs_MessageBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_dialogs_MessageBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_popups_BranchingHelp();
	}
	,__class__: gfx_popups_BranchingHelp
});
var gfx_popups_ChallengeParamsDialog = function(initialParams,dontCacheParams) {
	if(dontCacheParams == null) {
		dontCacheParams = false;
	}
	var _gthis = this;
	gfx_basic_$components_BaseDialog.call(this,null,true);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        .param-name-label {\r\n            font-size:16px;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_containers_HBox();
	c0.set_percentWidth(100.);
	var c1 = new haxe_ui_components_Label();
	c1.set_percentWidth(50.);
	c1.set_styleNames("param-name-label");
	c1.set_verticalAlign("bottom");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_OptionStepper();
	c2.set_id("typeStepper");
	c2.set_percentWidth(50.);
	c2.set_verticalAlign("center");
	var ds2 = new haxe_ui_data_ArrayDataSource();
	var __item = { };
	__item.text = dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_TYPE_DIRECT);
	__item.id = "item";
	ds2.add(__item);
	var __item = { };
	__item.text = dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_TYPE_OPEN);
	__item.id = "item";
	ds2.add(__item);
	c2.set_dataSource(ds2);
	c0.addComponent(c2);
	this.addComponent(c0);
	var c3 = new haxe_ui_containers_Stack();
	c3.set_id("typeSpecificStack");
	c3.set_percentWidth(100.);
	c3.set_selectedIndex(0);
	var c4 = new haxe_ui_containers_HBox();
	c4.set_percentWidth(100.);
	var c5 = new haxe_ui_components_Label();
	c5.set_percentWidth(50.);
	c5.set_styleNames("param-name-label");
	c5.set_verticalAlign("center");
	c4.addComponent(c5);
	var c6 = new haxe_ui_components_TextField();
	c6.set_id("usernameTF");
	c6.set_percentWidth(50.);
	c6.set_verticalAlign("center");
	c6.set_restrictChars("A-Za-z0-9");
	c4.addComponent(c6);
	c3.addComponent(c4);
	var c7 = new haxe_ui_containers_HBox();
	c7.set_percentWidth(100.);
	var c8 = new haxe_ui_components_Label();
	c8.set_percentWidth(50.);
	c8.set_styleNames("param-name-label");
	c8.set_verticalAlign("center");
	c7.addComponent(c8);
	var c9 = new haxe_ui_components_DropDown();
	c9.set_id("visibilityDropdown");
	c9.set_percentWidth(50.);
	c9.set_verticalAlign("center");
	c9.set_selectedIndex(0);
	var ds9 = new haxe_ui_data_ArrayDataSource();
	var __item = { };
	__item.text = dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_OPEN_VISIBILITY_ALL);
	__item.id = "item";
	ds9.add(__item);
	var __item = { };
	__item.text = dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_OPEN_VISIBILITY_BY_LINK);
	__item.id = "item";
	ds9.add(__item);
	c9.set_dataSource(ds9);
	c7.addComponent(c9);
	c3.addComponent(c7);
	this.addComponent(c3);
	var c10 = new haxe_ui_components_Spacer();
	c10.set_height(10.);
	this.addComponent(c10);
	var c11 = new haxe_ui_containers_VBox();
	c11.set_percentWidth(100.);
	var c12 = new haxe_ui_containers_HBox();
	c12.set_height(28.);
	c12.set_percentWidth(100.);
	var c13 = new haxe_ui_components_Label();
	c13.set_percentWidth(50.);
	c13.set_styleNames("param-name-label");
	c13.set_verticalAlign("center");
	c12.addComponent(c13);
	var c14 = new haxe_ui_containers_HBox();
	c14.set_percentWidth(50.);
	c14.set_percentHeight(100.);
	c14.set_styleString("border: 1px solid $normal-border-color;padding: 5px;");
	c14.set_verticalAlign("center");
	var c15 = new gfx_basic_$components_ARPImage();
	c15.set_id("tcIcon");
	c15.set_percentHeight(100.);
	c15.set_verticalAlign("center");
	c14.addComponent(c15);
	var c16 = new haxe_ui_components_Label();
	c16.set_id("tcLabel");
	c16.set_percentHeight(100.);
	c16.set_verticalAlign("center");
	c14.addComponent(c16);
	var c17 = new haxe_ui_components_Spacer();
	c17.set_percentWidth(100.);
	c14.addComponent(c17);
	var c18 = new gfx_basic_$components_ARPImage();
	c18.set_id("editTCBtn");
	c18.set_percentHeight(100.);
	c18.set_styleString("background-color:yellow;background-opacity:0;pointer-events:true");
	c18.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/common/edit.svg"));
	c14.addComponent(c18);
	c12.addComponent(c14);
	c11.addComponent(c12);
	var c19 = new haxe_ui_containers_VBox();
	c19.set_id("tcParamsBox");
	c19.set_percentWidth(100.);
	c19.set_styleString("border: 1px solid $normal-border-color;padding: 3px;background-color:#fdfdfd");
	c19.set_hidden(true);
	var c20 = new haxe_ui_containers_VBox();
	c20.set_percentWidth(100.);
	var c21 = new haxe_ui_containers_Grid();
	c21.set_id("recommendedTCsGrid");
	c21.set_percentWidth(100.);
	c21.set_horizontalAlign("center");
	c21.set_columns(5);
	var c22 = new haxe_ui_components_Button();
	c22.set_id("bulletBtn");
	c22.set_percentWidth(20.);
	c22.set_text("1+0");
	c21.addComponent(c22);
	var c23 = new haxe_ui_components_Button();
	c23.set_id("bulletIncBtn");
	c23.set_percentWidth(20.);
	c23.set_text("1+1");
	c21.addComponent(c23);
	var c24 = new haxe_ui_components_Button();
	c24.set_id("fastBlitzBtn");
	c24.set_percentWidth(20.);
	c24.set_text("3+0");
	c21.addComponent(c24);
	var c25 = new haxe_ui_components_Button();
	c25.set_id("standardBlitzBtn");
	c25.set_percentWidth(20.);
	c25.set_text("3+2");
	c21.addComponent(c25);
	var c26 = new haxe_ui_components_Button();
	c26.set_id("longBlitzBtn");
	c26.set_percentWidth(20.);
	c26.set_text("5+0");
	c21.addComponent(c26);
	var c27 = new haxe_ui_components_Button();
	c27.set_id("rapidBtn");
	c27.set_percentWidth(20.);
	c27.set_text("10+0");
	c21.addComponent(c27);
	var c28 = new haxe_ui_components_Button();
	c28.set_id("rapidIncBtn");
	c28.set_percentWidth(20.);
	c28.set_text("10+5");
	c21.addComponent(c28);
	var c29 = new haxe_ui_components_Button();
	c29.set_id("longRapidBtn");
	c29.set_percentWidth(20.);
	c29.set_text("15+10");
	c21.addComponent(c29);
	var c30 = new haxe_ui_components_Button();
	c30.set_id("halfhourBtn");
	c30.set_percentWidth(20.);
	c30.set_text("30+0");
	c21.addComponent(c30);
	var c31 = new haxe_ui_components_Button();
	c31.set_id("hourBtn");
	c31.set_percentWidth(20.);
	c31.set_text("60+0");
	c21.addComponent(c31);
	c20.addComponent(c21);
	var c32 = new haxe_ui_components_CheckBox();
	c32.set_id("correspondenceCheck");
	c32.set_selected(false);
	c32.set_horizontalAlign("center");
	c20.addComponent(c32);
	var c33 = new haxe_ui_containers_VBox();
	c33.set_id("tcValuesBox");
	c33.set_height(80.);
	c33.set_horizontalAlign("center");
	var c34 = new haxe_ui_containers_HBox();
	c34.set_percentHeight(50.);
	c34.set_horizontalAlign("center");
	var c35 = new haxe_ui_containers_Box();
	c35.set_percentHeight(100.);
	c35.set_horizontalAlign("center");
	var c36 = new haxe_ui_components_Label();
	c36.set_styleNames("param-name-label");
	c36.set_verticalAlign("center");
	c35.addComponent(c36);
	c34.addComponent(c35);
	var c37 = new haxe_ui_containers_Box();
	c37.set_percentHeight(100.);
	c37.set_horizontalAlign("center");
	var c38 = new haxe_ui_containers_HBox();
	c38.set_verticalAlign("center");
	c38.set_horizontalAlign("center");
	var c39 = new haxe_ui_components_TextField();
	c39.set_id("startMinsTF");
	c39.set_width(40.);
	c39.set_verticalAlign("center");
	c39.set_restrictChars("0-9");
	c39.set_maxChars(3);
	c38.addComponent(c39);
	var c40 = new haxe_ui_components_Label();
	c40.set_styleNames("param-name-label");
	c40.set_verticalAlign("bottom");
	c38.addComponent(c40);
	var c41 = new haxe_ui_components_TextField();
	c41.set_id("startSecsTF");
	c41.set_width(40.);
	c41.set_verticalAlign("center");
	c41.set_restrictChars("0-9");
	c41.set_maxChars(2);
	c38.addComponent(c41);
	var c42 = new haxe_ui_components_Label();
	c42.set_styleNames("param-name-label");
	c42.set_verticalAlign("bottom");
	c38.addComponent(c42);
	c37.addComponent(c38);
	c34.addComponent(c37);
	c33.addComponent(c34);
	var c43 = new haxe_ui_containers_HBox();
	c43.set_percentHeight(50.);
	c43.set_horizontalAlign("center");
	var c44 = new haxe_ui_containers_Box();
	c44.set_percentHeight(100.);
	c44.set_horizontalAlign("center");
	var c45 = new haxe_ui_components_Label();
	c45.set_styleNames("param-name-label");
	c45.set_verticalAlign("center");
	c44.addComponent(c45);
	c43.addComponent(c44);
	var c46 = new haxe_ui_containers_Box();
	c46.set_percentHeight(100.);
	c46.set_horizontalAlign("center");
	var c47 = new haxe_ui_containers_HBox();
	c47.set_verticalAlign("center");
	c47.set_horizontalAlign("center");
	var c48 = new haxe_ui_components_TextField();
	c48.set_id("bonusSecsTF");
	c48.set_width(40.);
	c48.set_verticalAlign("center");
	c48.set_restrictChars("0-9");
	c48.set_maxChars(3);
	c47.addComponent(c48);
	var c49 = new haxe_ui_components_Label();
	c49.set_styleNames("param-name-label");
	c49.set_verticalAlign("bottom");
	c47.addComponent(c49);
	c46.addComponent(c47);
	c43.addComponent(c46);
	c33.addComponent(c43);
	c20.addComponent(c33);
	c19.addComponent(c20);
	var c50 = new haxe_ui_components_Button();
	c50.set_id("applyTcParamsBtn");
	c50.set_text("OK");
	c50.set_horizontalAlign("center");
	c19.addComponent(c50);
	c11.addComponent(c19);
	var c51 = new haxe_ui_components_Spacer();
	c51.set_height(10.);
	c11.addComponent(c51);
	var c52 = new haxe_ui_components_CheckBox();
	c52.set_id("rankedCheck");
	c52.set_selected(false);
	c52.set_horizontalAlign("center");
	c11.addComponent(c52);
	var c53 = new haxe_ui_containers_VBox();
	c53.set_id("unrankedParamsBox");
	c53.set_percentWidth(100.);
	var c54 = new haxe_ui_containers_HBox();
	c54.set_percentWidth(100.);
	var c55 = new haxe_ui_components_Label();
	c55.set_percentWidth(50.);
	c55.set_styleNames("param-name-label");
	c55.set_verticalAlign("center");
	c54.addComponent(c55);
	var c56 = new haxe_ui_components_DropDown();
	c56.set_id("colorDropdown");
	c56.set_percentWidth(50.);
	c56.set_verticalAlign("center");
	c56.set_selectedIndex(0);
	var ds56 = new haxe_ui_data_ArrayDataSource();
	var __item = { };
	__item.text = dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_COLOR_RANDOM);
	__item.id = "item";
	ds56.add(__item);
	var __item = { };
	__item.text = dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_COLOR_WHITE);
	__item.id = "item";
	ds56.add(__item);
	var __item = { };
	__item.text = dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_COLOR_BLACK);
	__item.id = "item";
	ds56.add(__item);
	c56.set_dataSource(ds56);
	c54.addComponent(c56);
	c53.addComponent(c54);
	var c57 = new haxe_ui_containers_HBox();
	c57.set_percentWidth(100.);
	var c58 = new haxe_ui_components_Label();
	c58.set_percentWidth(50.);
	c58.set_styleNames("param-name-label");
	c58.set_verticalAlign("center");
	c57.addComponent(c58);
	var c59 = new haxe_ui_components_DropDown();
	c59.set_id("startposDropdown");
	c59.set_percentWidth(50.);
	c59.set_verticalAlign("center");
	c59.set_selectedIndex(0);
	var ds59 = new haxe_ui_data_ArrayDataSource();
	var __item = { };
	__item.text = dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_STARTPOS_DEFAULT);
	__item.id = "item";
	ds59.add(__item);
	var __item = { };
	__item.text = dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_STARTPOS_CUSTOM);
	__item.id = "item";
	ds59.add(__item);
	c59.set_dataSource(ds59);
	c57.addComponent(c59);
	c53.addComponent(c57);
	var c60 = new haxe_ui_containers_VBox();
	c60.set_id("customStartposBox");
	c60.set_percentWidth(100.);
	c60.set_styleString("border: 1px solid $normal-border-color;padding: 3px;background-color:#fdfdfd");
	c60.set_hidden(true);
	var c61 = new haxe_ui_containers_HBox();
	c61.set_percentWidth(100.);
	var c62 = new haxe_ui_components_Label();
	c62.set_styleNames("param-name-label");
	c62.set_verticalAlign("center");
	c61.addComponent(c62);
	var c63 = new haxe_ui_components_TextField();
	c63.set_id("sipTF");
	c63.set_percentWidth(100.);
	c63.set_verticalAlign("center");
	c61.addComponent(c63);
	var c64 = new haxe_ui_components_Button();
	c64.set_id("applySIPBtn");
	c64.set_text("OK");
	c64.set_verticalAlign("center");
	c61.addComponent(c64);
	c60.addComponent(c61);
	var c65 = new haxe_ui_containers_Box();
	c65.set_id("customStartposBoardContainer");
	c65.set_width(200.);
	c65.set_height(200.);
	c65.set_horizontalAlign("center");
	c60.addComponent(c65);
	var c66 = new haxe_ui_components_Label();
	c66.set_id("customStartposTurnColorLabel");
	c66.set_styleString("font-size:18px");
	c66.set_horizontalAlign("center");
	c60.addComponent(c66);
	c53.addComponent(c60);
	c11.addComponent(c53);
	var c67 = new haxe_ui_components_Spacer();
	c67.set_height(10.);
	c11.addComponent(c67);
	var c68 = new haxe_ui_components_Button();
	c68.set_id("confirmBtn");
	c68.set_horizontalAlign("center");
	c11.addComponent(c68);
	this.addComponent(c11);
	this.set_width(500.);
	this.bindingRoot = true;
	this.visibilityDropdown = c9;
	this.usernameTF = c6;
	this.unrankedParamsBox = c53;
	this.typeStepper = c2;
	this.typeSpecificStack = c3;
	this.tcValuesBox = c33;
	this.tcParamsBox = c19;
	this.tcLabel = c16;
	this.tcIcon = c15;
	this.startposDropdown = c59;
	this.startSecsTF = c41;
	this.startMinsTF = c39;
	this.standardBlitzBtn = c25;
	this.sipTF = c63;
	this.recommendedTCsGrid = c21;
	this.rapidIncBtn = c28;
	this.rapidBtn = c27;
	this.rankedCheck = c52;
	this.longRapidBtn = c29;
	this.longBlitzBtn = c26;
	this.hourBtn = c31;
	this.halfhourBtn = c30;
	this.fastBlitzBtn = c24;
	this.editTCBtn = c18;
	this.customStartposTurnColorLabel = c66;
	this.customStartposBox = c60;
	this.customStartposBoardContainer = c65;
	this.correspondenceCheck = c32;
	this.confirmBtn = c68;
	this.colorDropdown = c56;
	this.bulletIncBtn = c23;
	this.bulletBtn = c22;
	this.bonusSecsTF = c48;
	this.applyTcParamsBtn = c50;
	this.applySIPBtn = c64;
	c1.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_TYPE_OPTION_NAME)));
	c5.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_DIRECT_USERNAME_OPTION_NAME)));
	c8.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_OPEN_VISIBILITY)));
	c13.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_TIME_CONTROL_OPTION_NAME)));
	c32.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_TIME_CONTROL_CORRESPONDENCE_CHECK_NAME)));
	c36.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_TIME_CONTROL_START_OPTION_NAME)));
	c40.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_TIME_CONTROL_MINS_APPENDIX)));
	c42.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_TIME_CONTROL_SECS_APPENDIX)));
	c45.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_TIME_CONTROL_INCREMENT_OPTION_NAME)));
	c49.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_TIME_CONTROL_SECS_APPENDIX)));
	c52.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_RANKED_CHECK_NAME)));
	c55.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_COLOR_OPTION_NAME)));
	c58.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_STARTPOS_OPTION_NAME)));
	c62.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_STARTPOS_SIP_OPTION_NAME)));
	c68.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_CONFIRM_BTN_TEXT)));
	this.set_title(dict_Dictionary.getPhrase(dict_Phrase.CHALLENGE_PARAMS_DIALOG_TITLE));
	if(initialParams == null) {
		initialParams = struct_ChallengeParams.loadFromCookies();
	}
	this.dontCacheParams = dontCacheParams;
	var _g = new haxe_ds_ObjectMap();
	_g.set(this.bulletBtn,utils_TimeControl.normal(1,0));
	_g.set(this.bulletIncBtn,utils_TimeControl.normal(1,1));
	_g.set(this.fastBlitzBtn,utils_TimeControl.normal(3,0));
	_g.set(this.standardBlitzBtn,utils_TimeControl.normal(3,2));
	_g.set(this.longBlitzBtn,utils_TimeControl.normal(5,0));
	_g.set(this.rapidBtn,utils_TimeControl.normal(10,0));
	_g.set(this.rapidIncBtn,utils_TimeControl.normal(10,5));
	_g.set(this.longRapidBtn,utils_TimeControl.normal(15,10));
	_g.set(this.halfhourBtn,utils_TimeControl.normal(30,0));
	_g.set(this.hourBtn,utils_TimeControl.normal(60,0));
	var commonTimeControls = _g;
	var map = commonTimeControls;
	var _g1_map = map;
	var _g1_keys = map.keys();
	while(_g1_keys.hasNext()) {
		var key = _g1_keys.next();
		var _g2_value = _g1_map.get(key);
		var _g2_key = key;
		var btn = [_g2_key];
		var tc = [_g2_value];
		btn[0].set_text(tc[0].toString());
		var btn1 = btn[0];
		var filename;
		switch(tc[0].getType()._hx_index) {
		case 0:
			filename = "hyperbullet";
			break;
		case 1:
			filename = "bullet";
			break;
		case 2:
			filename = "blitz";
			break;
		case 3:
			filename = "rapid";
			break;
		case 4:
			filename = "classic";
			break;
		case 5:
			filename = "correspondence";
			break;
		}
		btn1.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/time_controls/" + filename + ".svg"));
		btn[0].set_onClick((function(tc) {
			return function(e) {
				_gthis.tcValuesBox.set_disabled(false);
				_gthis.correspondenceCheck.set_selected(false);
				_gthis.restoreTimeControlInputValues(tc[0]);
				_gthis.approveTimeControl();
			};
		})(tc));
		haxe_Timer.delay((function(btn) {
			return function() {
				var icon = btn[0].findComponent(null,haxe_ui_components_Image);
				icon.set_height(18);
				icon.set_width(icon.get_originalWidth() * icon.get_height() / icon.get_originalHeight());
			};
		})(btn),40);
	}
	var timeControlType = initialParams.timeControl.getType();
	var isCorrespondence = timeControlType == net_shared_TimeControlType.Correspondence;
	this.approvedTimeControl = initialParams.timeControl;
	var hasCustomStartPos = initialParams.customStartingSituation != null && !initialParams.customStartingSituation.isDefaultStarting() && initialParams.customStartingSituation.isValidStarting();
	if(hasCustomStartPos) {
		this.approvedStartPos = initialParams.customStartingSituation;
	} else {
		this.approvedStartPos = net_shared_board_Situation.defaultStarting();
	}
	this.startPosBoard = new gameboard_Board(this.approvedStartPos,net_shared_PieceColor.White,gameboard_util_Marking.None);
	this.startPosBoard.set_percentWidth(100);
	this.startPosBoard.set_percentHeight(100);
	this.customStartposBoardContainer.addComponent(this.startPosBoard);
	this.customStartposTurnColorLabel.set_text(dict_Dictionary.getPhrase(dict_Phrase.TURN_COLOR(this.approvedStartPos.turnColor)));
	this.sipTF.set_text(this.approvedStartPos.serialize());
	this.customStartposBox.set_hidden(!hasCustomStartPos);
	this.startposDropdown.set_selectedIndex(hasCustomStartPos ? 1 : 0);
	var _g = initialParams.acceptorColor;
	var tmp;
	if(_g == null) {
		tmp = 0;
	} else {
		switch(_g._hx_index) {
		case 0:
			tmp = 2;
			break;
		case 1:
			tmp = 1;
			break;
		}
	}
	this.colorDropdown.set_selectedIndex(tmp);
	this.unrankedParamsBox.set_hidden(initialParams.rated);
	this.rankedCheck.set_selected(initialParams.rated);
	this.correspondenceCheck.set_selected(isCorrespondence);
	this.tcValuesBox.set_disabled(isCorrespondence);
	this.restoreTimeControlInputValues();
	var tmp = this.tcIcon;
	var filename;
	switch(timeControlType._hx_index) {
	case 0:
		filename = "hyperbullet";
		break;
	case 1:
		filename = "bullet";
		break;
	case 2:
		filename = "blitz";
		break;
	case 3:
		filename = "rapid";
		break;
	case 4:
		filename = "classic";
		break;
	case 5:
		filename = "correspondence";
		break;
	}
	tmp.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/time_controls/" + filename + ".svg"));
	this.tcLabel.set_text(this.approvedTimeControl.toString());
	var _g = initialParams.type;
	switch(_g._hx_index) {
	case 0:
		this.typeSpecificStack.set_selectedIndex(1);
		this.typeStepper.set_selectedIndex(1);
		this.visibilityDropdown.set_selectedIndex(0);
		break;
	case 1:
		this.typeSpecificStack.set_selectedIndex(1);
		this.typeStepper.set_selectedIndex(1);
		this.visibilityDropdown.set_selectedIndex(1);
		break;
	case 2:
		var calleeLogin = _g.calleeRef;
		this.typeSpecificStack.set_selectedIndex(0);
		this.typeStepper.set_selectedIndex(0);
		this.usernameTF.set_text(calleeLogin);
		break;
	}
	var c = this.typeStepper;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onTypeChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "typeStepper" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.popups.ChallengeParamsDialog", methodName : "new"});
	}
	var c = this.rankedCheck;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onBracketChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "rankedCheck" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.popups.ChallengeParamsDialog", methodName : "new"});
	}
	var c = this.startposDropdown;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onStartPosTypeChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "startposDropdown" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.popups.ChallengeParamsDialog", methodName : "new"});
	}
	var c = this.applySIPBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onSIPApplied));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "applySIPBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.popups.ChallengeParamsDialog", methodName : "new"});
	}
	var c = this.editTCBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.toggleTimeControlEditor));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "editTCBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.popups.ChallengeParamsDialog", methodName : "new"});
	}
	var c = this.correspondenceCheck;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onCorrespondenceCheckChange));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "correspondenceCheck" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.popups.ChallengeParamsDialog", methodName : "new"});
	}
	var c = this.applyTcParamsBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onApplyTCPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "applyTcParamsBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.popups.ChallengeParamsDialog", methodName : "new"});
	}
	var c = this.confirmBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.createChallenge));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "confirmBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.popups.ChallengeParamsDialog", methodName : "new"});
	}
};
$hxClasses["gfx.popups.ChallengeParamsDialog"] = gfx_popups_ChallengeParamsDialog;
gfx_popups_ChallengeParamsDialog.__name__ = "gfx.popups.ChallengeParamsDialog";
gfx_popups_ChallengeParamsDialog.__super__ = gfx_basic_$components_BaseDialog;
gfx_popups_ChallengeParamsDialog.prototype = $extend(gfx_basic_$components_BaseDialog.prototype,{
	approvedTimeControl: null
	,approvedStartPos: null
	,dontCacheParams: null
	,startPosBoard: null
	,resize: function() {
		this.set_width(Math.min(500,0.95 * haxe_ui_core_Screen.get_instance().get_actualWidth()));
		var compact = this.get_width() < 500;
		this.recommendedTCsGrid.set_columns(compact ? 4 : 5);
		this.fastBlitzBtn.set_hidden(compact);
		this.rapidIncBtn.set_hidden(compact);
		this.bulletBtn.set_percentWidth(100 / this.recommendedTCsGrid.get_columns());
		this.bulletIncBtn.set_percentWidth(100 / this.recommendedTCsGrid.get_columns());
		this.standardBlitzBtn.set_percentWidth(100 / this.recommendedTCsGrid.get_columns());
		this.longBlitzBtn.set_percentWidth(100 / this.recommendedTCsGrid.get_columns());
		this.rapidBtn.set_percentWidth(100 / this.recommendedTCsGrid.get_columns());
		this.longRapidBtn.set_percentWidth(100 / this.recommendedTCsGrid.get_columns());
		this.halfhourBtn.set_percentWidth(100 / this.recommendedTCsGrid.get_columns());
		this.hourBtn.set_percentWidth(100 / this.recommendedTCsGrid.get_columns());
		if(compact) {
			var btn = this.bulletBtn;
			btn.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3,3,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
			var btn = this.bulletIncBtn;
			btn.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3,3,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
			var btn = this.standardBlitzBtn;
			btn.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3,3,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
			var btn = this.longBlitzBtn;
			btn.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3,3,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
			var btn = this.rapidBtn;
			btn.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,2,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
			var btn = this.longRapidBtn;
			btn.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,2,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
			var btn = this.halfhourBtn;
			btn.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,2,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
			var btn = this.hourBtn;
			btn.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,2,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
		} else {
			var btn = this.rapidBtn;
			btn.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3,3,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
			var btn = this.rapidIncBtn;
			btn.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3,3,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
			var btn = this.longRapidBtn;
			btn.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3,3,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
			var btn = this.halfhourBtn;
			btn.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3,3,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
			var btn = this.hourBtn;
			btn.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3,3,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
		}
	}
	,onClose: function(btn) {
	}
	,onTypeChanged: function(e) {
		this.typeSpecificStack.set_selectedIndex(this.typeStepper.get_selectedIndex());
		this.correctPositionLater();
	}
	,onBracketChanged: function(e) {
		if(this.rankedCheck.get_selected()) {
			this.unrankedParamsBox.fadeOut($bind(this,this.correctPositionLater));
		} else {
			this.unrankedParamsBox.fadeIn($bind(this,this.correctPositionLater));
		}
	}
	,onStartPosTypeChanged: function(e) {
		if(this.startposDropdown.get_selectedIndex() == 0) {
			this.customStartposBox.fadeOut($bind(this,this.correctPositionLater));
		} else {
			this.customStartposBox.fadeIn($bind(this,this.correctPositionLater));
		}
	}
	,onSIPApplied: function(e) {
		var deserializedSituation = net_shared_board_Situation.deserialize(this.sipTF.get_text());
		if(deserializedSituation == null) {
			gfx_Dialogs.alert(dict_Phrase.CHALLENGE_PARAMS_INVALID_SIP_WARNING_TEXT,dict_Phrase.CHALLENGE_PARAMS_INVALID_SIP_WARNING_TITLE);
		} else if(!deserializedSituation.isValidStarting()) {
			gfx_Dialogs.alert(dict_Phrase.CHALLENGE_PARAMS_INVALID_STARTPOS_WARNING_TEXT,dict_Phrase.CHALLENGE_PARAMS_INVALID_STARTPOS_WARNING_TITLE);
		} else {
			this.approvedStartPos = deserializedSituation;
			this.startPosBoard.setShownSituation(this.approvedStartPos);
			this.customStartposTurnColorLabel.set_text(dict_Dictionary.getPhrase(dict_Phrase.TURN_COLOR(this.approvedStartPos.turnColor)));
		}
	}
	,toggleTimeControlEditor: function(e) {
		if(this.tcParamsBox.get_hidden()) {
			this.tcParamsBox.fadeIn($bind(this,this.correctPositionLater));
		} else {
			this.restoreTimeControlInputValues();
			this.tcParamsBox.fadeOut($bind(this,this.correctPositionLater));
		}
	}
	,onCorrespondenceCheckChange: function(e) {
		this.tcValuesBox.set_disabled(this.correspondenceCheck.get_selected());
	}
	,onApplyTCPressed: function(e) {
		this.approveTimeControl();
		this.tcParamsBox.fadeOut($bind(this,this.correctPositionLater));
	}
	,approveTimeControl: function() {
		if(this.correspondenceCheck.get_selected()) {
			this.approvedTimeControl = utils_TimeControl.correspondence();
		} else {
			if(this.startMinsTF.get_text() == "" && this.startSecsTF.get_text() == "") {
				this.restoreTimeControlInputValues();
				this.tcParamsBox.fadeOut($bind(this,this.correctPositionLater));
				return;
			} else if(this.startMinsTF.get_text() == "") {
				this.startMinsTF.set_text("0");
			} else if(this.startSecsTF.get_text() == "") {
				this.startSecsTF.set_text("0");
			}
			if(this.bonusSecsTF.get_text() == "") {
				this.bonusSecsTF.set_text("0");
			}
			var startMins = Std.parseInt(this.startMinsTF.get_text());
			var startSecs = Std.parseInt(this.startSecsTF.get_text());
			var bonusSecs = Std.parseInt(this.bonusSecsTF.get_text());
			if(startMins == null || startSecs == null || bonusSecs == null || startMins < 0 || startSecs < 0 || bonusSecs < 0 || startMins + startSecs == 0) {
				this.restoreTimeControlInputValues();
				this.tcParamsBox.fadeOut($bind(this,this.correctPositionLater));
				return;
			}
			var finalStartSecs = net_shared_utils_MathUtils.minInt(startMins * 60 + startSecs,21600);
			var finalBonusSecs = net_shared_utils_MathUtils.minInt(bonusSecs,120);
			this.approvedTimeControl = new utils_TimeControl(finalStartSecs,finalBonusSecs);
		}
		var tmp = this.tcIcon;
		var filename;
		switch(this.approvedTimeControl.getType()._hx_index) {
		case 0:
			filename = "hyperbullet";
			break;
		case 1:
			filename = "bullet";
			break;
		case 2:
			filename = "blitz";
			break;
		case 3:
			filename = "rapid";
			break;
		case 4:
			filename = "classic";
			break;
		case 5:
			filename = "correspondence";
			break;
		}
		tmp.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/time_controls/" + filename + ".svg"));
		this.tcLabel.set_text(this.approvedTimeControl.toString());
	}
	,restoreTimeControlInputValues: function(customTimeControl) {
		var timeControl = customTimeControl == null ? this.approvedTimeControl : customTimeControl;
		this.startMinsTF.set_text("" + Math.floor(timeControl.startSecs / 60));
		this.startSecsTF.set_text("" + timeControl.startSecs % 60);
		this.bonusSecsTF.set_text("" + timeControl.bonusSecs);
	}
	,createChallenge: function(e) {
		var challengeType = this.typeStepper.get_selectedIndex() == 0 ? struct_ChallengeType.Direct(this.usernameTF.get_text()) : this.visibilityDropdown.get_selectedIndex() == 0 ? struct_ChallengeType.Public : struct_ChallengeType.ByLink;
		var timeControl = this.approvedTimeControl;
		var rated = this.rankedCheck.get_selected();
		var acceptorColor = null;
		var customStartingSituation = null;
		if(!rated) {
			if(this.colorDropdown.get_selectedIndex() == 1) {
				acceptorColor = net_shared_PieceColor.Black;
			} else if(this.colorDropdown.get_selectedIndex() == 2) {
				acceptorColor = net_shared_PieceColor.White;
			}
			if(this.startposDropdown.get_selectedIndex() == 1 && !this.approvedStartPos.isDefaultStarting()) {
				customStartingSituation = this.approvedStartPos;
			}
		}
		var params = new struct_ChallengeParams(timeControl,challengeType,acceptorColor,customStartingSituation,rated);
		if(!this.dontCacheParams) {
			params.saveToCookies();
		}
		Networker.emitEvent(net_shared_ClientEvent.CreateChallenge(params.serialize()));
		this.hideDialog("{{ok}}");
	}
	,registerBehaviours: function() {
		gfx_basic_$components_BaseDialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gfx_basic_$components_BaseDialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_initialParams: null
	,_constructorParam_dontCacheParams: null
	,self: function() {
		return new gfx_popups_ChallengeParamsDialog(this._constructorParam_initialParams,this._constructorParam_dontCacheParams);
	}
	,visibilityDropdown: null
	,usernameTF: null
	,unrankedParamsBox: null
	,typeStepper: null
	,typeSpecificStack: null
	,tcValuesBox: null
	,tcParamsBox: null
	,tcLabel: null
	,tcIcon: null
	,startposDropdown: null
	,startSecsTF: null
	,startMinsTF: null
	,standardBlitzBtn: null
	,sipTF: null
	,recommendedTCsGrid: null
	,rapidIncBtn: null
	,rapidBtn: null
	,rankedCheck: null
	,longRapidBtn: null
	,longBlitzBtn: null
	,hourBtn: null
	,halfhourBtn: null
	,fastBlitzBtn: null
	,editTCBtn: null
	,customStartposTurnColorLabel: null
	,customStartposBox: null
	,customStartposBoardContainer: null
	,correspondenceCheck: null
	,confirmBtn: null
	,colorDropdown: null
	,bulletIncBtn: null
	,bulletBtn: null
	,bonusSecsTF: null
	,applyTcParamsBtn: null
	,applySIPBtn: null
	,__class__: gfx_popups_ChallengeParamsDialog
});
var gfx_popups_ChangelogDialog = function() {
	gfx_basic_$components_BaseDialog.call(this,null,false);
	var c0 = new haxe_ui_containers_ScrollView();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_components_Label();
	c1.set_id("changesLabel");
	c0.addComponent(c1);
	this.addComponent(c0);
	this.set_width(1000.);
	this.set_height(450.);
	this.bindingRoot = true;
	this.changesLabel = c1;
	c1.set_htmlText(Std.string(utils_Changelog.getAll()));
	this.set_title(dict_Dictionary.getPhrase(dict_Phrase.CHANGELOG_DIALOG_TITLE));
};
$hxClasses["gfx.popups.ChangelogDialog"] = gfx_popups_ChangelogDialog;
gfx_popups_ChangelogDialog.__name__ = "gfx.popups.ChangelogDialog";
gfx_popups_ChangelogDialog.__super__ = gfx_basic_$components_BaseDialog;
gfx_popups_ChangelogDialog.prototype = $extend(gfx_basic_$components_BaseDialog.prototype,{
	resize: function() {
		this.set_width(Math.min(1000,0.9 * haxe_ui_core_Screen.get_instance().get_actualWidth()));
		this.set_height(Math.min(450,0.7 * haxe_ui_core_Screen.get_instance().get_actualHeight()));
		this.changesLabel.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,net_shared_utils_MathUtils.clamp(0.013 * haxe_ui_core_Screen.get_instance().get_actualHeight(),12,36),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
	}
	,onClose: function(btn) {
	}
	,registerBehaviours: function() {
		gfx_basic_$components_BaseDialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gfx_basic_$components_BaseDialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_popups_ChangelogDialog();
	}
	,changesLabel: null
	,__class__: gfx_popups_ChangelogDialog
});
var gfx_popups_IncomingChallengeDialog = function(data,additionalCloseCallback) {
	gfx_basic_$components_BaseDialog.call(this,gfx_basic_$components_utils_DialogGroup.RemovedOnGameStarted,false);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        .params-icon {\r\n            background-color:yellow;\r\n            background-opacity:0;\r\n            pointer-events:true;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	var c1 = new gfx_basic_$components_AutosizingLabel();
	c1.set_id("challengeByLabel");
	c1.set_height(28.);
	c1.set_percentWidth(100.);
	c1.set_styleString("text-align:center");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_Spacer();
	c2.set_height(10.);
	c0.addComponent(c2);
	var c3 = new haxe_ui_containers_Box();
	c3.set_id("timeControlRowBox");
	c3.set_height(28.);
	c3.set_horizontalAlign("center");
	c0.addComponent(c3);
	var c4 = new gfx_basic_$components_AutosizingLabel();
	c4.set_id("bracketLabel");
	c4.set_height(24.);
	c4.set_horizontalAlign("center");
	c0.addComponent(c4);
	var c5 = new haxe_ui_containers_HBox();
	c5.set_id("paramsBox");
	c5.set_height(24.);
	c5.set_horizontalAlign("center");
	var c6 = new gfx_basic_$components_AutosizingLabel();
	c6.set_id("paramsLabel");
	c6.set_percentHeight(100.);
	c5.addComponent(c6);
	var c7 = new gfx_basic_$components_ARPImage();
	c7.set_id("colorIcon");
	c7.set_percentHeight(100.);
	c7.set_styleNames("params-icon");
	c5.addComponent(c7);
	var c8 = new gfx_basic_$components_ARPImage();
	c8.set_id("customStartPosIcon");
	c8.set_percentHeight(100.);
	c8.set_styleNames("params-icon");
	c8.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/main_menu/challenge_modes/custom.svg"));
	c5.addComponent(c8);
	c0.addComponent(c5);
	var c9 = new haxe_ui_components_Spacer();
	c9.set_height(10.);
	c0.addComponent(c9);
	var c10 = new haxe_ui_containers_HBox();
	c10.set_horizontalAlign("center");
	var c11 = new haxe_ui_components_Button();
	c11.set_id("acceptBtn");
	c11.set_horizontalAlign("center");
	c10.addComponent(c11);
	var c12 = new haxe_ui_components_Button();
	c12.set_id("declineBtn");
	c12.set_horizontalAlign("center");
	c10.addComponent(c12);
	c0.addComponent(c10);
	this.addComponent(c0);
	this.set_width(350.);
	this.bindingRoot = true;
	this.timeControlRowBox = c3;
	this.paramsLabel = c6;
	this.paramsBox = c5;
	this.declineBtn = c12;
	this.customStartPosIcon = c8;
	this.colorIcon = c7;
	this.challengeByLabel = c1;
	this.bracketLabel = c4;
	this.acceptBtn = c11;
	c6.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.OPENJOIN_ESSENTIAL_PARAMS_LABEL_TEXT)));
	c11.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.INCOMING_CHALLENGE_ACCEPT_BTN_TEXT)));
	c12.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.INCOMING_CHALLENGE_DECLINE_BTN_TEXT)));
	this.set_title(dict_Dictionary.getPhrase(dict_Phrase.INCOMING_CHALLENGE_DIALOG_TITLE));
	this.set_closable(false);
	this.challengeID = data.id;
	this.additionalCloseCallback = additionalCloseCallback;
	var params = struct_ChallengeParams.deserialize(data.serializedParams);
	this.challengeByLabel.set_text(dict_Dictionary.getPhrase(dict_Phrase.INCOMING_CHALLENGE_CHALLENGE_BY_LABEL_TEXT,[data.ownerLogin]));
	this.challengeByLabel.setFontBold(true);
	var timeControlType = params.timeControl.getType();
	var timeControlString = params.timeControl.toString();
	if(timeControlType != net_shared_TimeControlType.Correspondence) {
		timeControlString += " (" + dict_Utils.getTimeControlName(timeControlType) + ")";
	}
	var timeControlRow = gfx_basic_$components_utils_DimValue.Percent(100);
	var filename;
	switch(timeControlType._hx_index) {
	case 0:
		filename = "hyperbullet";
		break;
	case 1:
		filename = "bullet";
		break;
	case 2:
		filename = "blitz";
		break;
	case 3:
		filename = "rapid";
		break;
	case 4:
		filename = "classic";
		break;
	case 5:
		filename = "correspondence";
		break;
	}
	var timeControlRow1 = new gfx_basic_$components_AnnotatedImage(gfx_basic_$components_utils_DimValue.Auto,timeControlRow,"assets/symbols/time_controls/" + filename + ".svg",timeControlString,null,0.08);
	this.timeControlRowBox.addComponent(timeControlRow1);
	this.bracketLabel.set_text(dict_Dictionary.getPhrase(params.rated ? dict_Phrase.OPENJOIN_RATED : dict_Phrase.OPENJOIN_UNRATED));
	var tmp = this.colorIcon;
	var ownerOpponentColor = params.acceptorColor;
	var filename;
	if(ownerOpponentColor == null) {
		filename = "random";
	} else {
		switch(ownerOpponentColor._hx_index) {
		case 0:
			filename = "white";
			break;
		case 1:
			filename = "black";
			break;
		}
	}
	tmp.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/main_menu/challenge_modes/" + filename + ".svg"));
	var tmp = this.colorIcon;
	var _g = params.acceptorColor;
	var tmp1;
	if(_g == null) {
		tmp1 = dict_Dictionary.getPhrase(dict_Phrase.OPENJOIN_COLOR_RANDOM);
	} else {
		switch(_g._hx_index) {
		case 0:
			tmp1 = dict_Dictionary.getPhrase(dict_Phrase.OPENJOIN_COLOR_BLACK_OWNER,[data.ownerLogin]);
			break;
		case 1:
			tmp1 = dict_Dictionary.getPhrase(dict_Phrase.OPENJOIN_COLOR_WHITE_OWNER,[data.ownerLogin]);
			break;
		}
	}
	tmp.set_tooltip(tmp1);
	if(params.customStartingSituation != null) {
		var renderer = new gfx_common_SituationTooltipRenderer(params.customStartingSituation);
		var tooltipOptions = { renderer : renderer};
		haxe_ui_tooltips_ToolTipManager.get_instance().registerTooltip(this.customStartPosIcon,tooltipOptions);
	} else {
		this.customStartPosIcon.set_hidden(true);
	}
	var c = this.acceptBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onAccepted));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "acceptBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.popups.IncomingChallengeDialog", methodName : "new"});
	}
	var c = this.declineBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onDeclined));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "declineBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.popups.IncomingChallengeDialog", methodName : "new"});
	}
};
$hxClasses["gfx.popups.IncomingChallengeDialog"] = gfx_popups_IncomingChallengeDialog;
gfx_popups_IncomingChallengeDialog.__name__ = "gfx.popups.IncomingChallengeDialog";
gfx_popups_IncomingChallengeDialog.__super__ = gfx_basic_$components_BaseDialog;
gfx_popups_IncomingChallengeDialog.prototype = $extend(gfx_basic_$components_BaseDialog.prototype,{
	challengeID: null
	,additionalCloseCallback: null
	,resize: function() {
		this.set_width(Math.min(350,haxe_ui_core_Screen.get_instance().get_actualWidth() * 0.98));
	}
	,onClose: function(btn) {
		this.additionalCloseCallback();
	}
	,onAccepted: function(e) {
		Networker.emitEvent(net_shared_ClientEvent.AcceptChallenge(this.challengeID));
		this.hideDialog(null);
	}
	,onDeclined: function(e) {
		Networker.emitEvent(net_shared_ClientEvent.DeclineDirectChallenge(this.challengeID));
		this.hideDialog(null);
	}
	,registerBehaviours: function() {
		gfx_basic_$components_BaseDialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gfx_basic_$components_BaseDialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_data: null
	,_constructorParam_additionalCloseCallback: null
	,self: function() {
		return new gfx_popups_IncomingChallengeDialog(this._constructorParam_data,this._constructorParam_additionalCloseCallback);
	}
	,timeControlRowBox: null
	,paramsLabel: null
	,paramsBox: null
	,declineBtn: null
	,customStartPosIcon: null
	,colorIcon: null
	,challengeByLabel: null
	,bracketLabel: null
	,acceptBtn: null
	,__class__: gfx_popups_IncomingChallengeDialog
});
var gfx_popups_LogIn = function(onLoggedIn) {
	gfx_basic_$components_BaseDialog.call(this,null,true);
	var c0 = new haxe_ui_containers_TabView();
	c0.set_id("tabview");
	c0.set_percentWidth(100.);
	var c1 = new haxe_ui_containers_VBox();
	c1.set_percentWidth(100.);
	var c2 = new haxe_ui_containers_Grid();
	c2.set_percentWidth(100.);
	var c3 = new haxe_ui_components_Label();
	c3.set_verticalAlign("center");
	c2.addComponent(c3);
	var c4 = new haxe_ui_components_TextField();
	c4.set_id("signInUsernameField");
	c4.set_percentWidth(100.);
	c4.set_restrictChars("A-Za-z0-9");
	c2.addComponent(c4);
	var c5 = new haxe_ui_components_Label();
	c5.set_verticalAlign("center");
	c2.addComponent(c5);
	var c6 = new haxe_ui_components_TextField();
	c6.set_id("signInPasswordField");
	c6.set_percentWidth(100.);
	c6.set_restrictChars("A-Za-z0-9");
	c6.set_password(true);
	c2.addComponent(c6);
	c1.addComponent(c2);
	var c7 = new haxe_ui_components_CheckBox();
	c7.set_id("signInRememberMeCheckbox");
	c7.set_selected(false);
	c7.set_horizontalAlign("center");
	c1.addComponent(c7);
	c0.addComponent(c1);
	var c8 = new haxe_ui_containers_VBox();
	c8.set_percentWidth(100.);
	var c9 = new haxe_ui_containers_Grid();
	c9.set_percentWidth(100.);
	var c10 = new haxe_ui_components_Label();
	c10.set_verticalAlign("center");
	c9.addComponent(c10);
	var c11 = new haxe_ui_components_TextField();
	c11.set_id("signUpUsernameField");
	c11.set_percentWidth(100.);
	c11.set_restrictChars("A-Za-z0-9");
	c9.addComponent(c11);
	var c12 = new haxe_ui_components_Label();
	c12.set_verticalAlign("center");
	c9.addComponent(c12);
	var c13 = new haxe_ui_components_TextField();
	c13.set_id("signUpPasswordField");
	c13.set_percentWidth(100.);
	c13.set_restrictChars("A-Za-z0-9");
	c13.set_password(true);
	c9.addComponent(c13);
	var c14 = new haxe_ui_components_Label();
	c14.set_verticalAlign("center");
	c9.addComponent(c14);
	var c15 = new haxe_ui_components_TextField();
	c15.set_id("signUpRepeatPasswordField");
	c15.set_percentWidth(100.);
	c15.set_restrictChars("A-Za-z0-9");
	c15.set_password(true);
	c9.addComponent(c15);
	c8.addComponent(c9);
	var c16 = new haxe_ui_components_CheckBox();
	c16.set_id("signUpStayLoggedCheckbox");
	c16.set_selected(false);
	c16.set_horizontalAlign("center");
	c8.addComponent(c16);
	c0.addComponent(c8);
	this.addComponent(c0);
	this.set_width(400.);
	this.bindingRoot = true;
	this.tabview = c0;
	this.signUpUsernameField = c11;
	this.signUpStayLoggedCheckbox = c16;
	this.signUpRepeatPasswordField = c15;
	this.signUpPasswordField = c13;
	this.signInUsernameField = c4;
	this.signInRememberMeCheckbox = c7;
	this.signInPasswordField = c6;
	c1.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.LOGIN_LOG_IN_MODE_TITLE)));
	c3.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.LOGIN_LOGIN_FIELD_NAME)));
	c5.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.LOGIN_PASSWORD_FIELD_NAME)));
	c7.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.LOGIN_REMEMBER_ME)));
	c8.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.LOGIN_REGISTER_MODE_TITLE)));
	c10.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.LOGIN_LOGIN_FIELD_NAME)));
	c12.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.LOGIN_PASSWORD_FIELD_NAME)));
	c14.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.LOGIN_REPEAT_PASSWORD_FIELD_NAME)));
	c16.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.LOGIN_REMAIN_LOGGED)));
	this.set_title(dict_Dictionary.getPhrase(dict_Phrase.LOGIN_DIALOG_TITLE));
	this.onLoggedIn = onLoggedIn;
	var larr = haxe_ui_containers_dialogs_DialogButton.toString("{{cancel}}").split("|");
	var rarr = haxe_ui_containers_dialogs_DialogButton.toString("{{ok}}").split("|");
	var _g = 0;
	while(_g < rarr.length) {
		var r = rarr[_g];
		++_g;
		if(larr.indexOf(r) == -1) {
			larr.push(r);
		}
	}
	this.buttons = larr.join("|");
	if(browser_CredentialCookies.hasLoginDetails()) {
		this.signInUsernameField.set_text(browser_CredentialCookies.getLogin());
		this.signInPasswordField.set_text(browser_CredentialCookies.getPassword());
		this.signUpStayLoggedCheckbox.set_selected(true);
	}
};
$hxClasses["gfx.popups.LogIn"] = gfx_popups_LogIn;
gfx_popups_LogIn.__name__ = "gfx.popups.LogIn";
gfx_popups_LogIn.__super__ = gfx_basic_$components_BaseDialog;
gfx_popups_LogIn.prototype = $extend(gfx_basic_$components_BaseDialog.prototype,{
	onLoggedIn: null
	,resize: function() {
	}
	,onClose: function(button) {
		var tmp;
		if(this.onLoggedIn != null) {
			var larr = haxe_ui_containers_dialogs_DialogButton.toString(button).split("|");
			tmp = larr.indexOf(haxe_ui_containers_dialogs_DialogButton.toString("{{ok}}")) != -1;
		} else {
			tmp = false;
		}
		if(tmp) {
			this.onLoggedIn();
		}
	}
	,validateDialog: function(button,fn) {
		if(button != "{{ok}}") {
			fn(true);
			return;
		}
		var signInMode = this.tabview.get_pageIndex() == 0;
		var rawLoginText = signInMode ? this.signInUsernameField.get_text() : this.signUpUsernameField.get_text();
		var rawPasswordText = signInMode ? this.signInPasswordField.get_text() : this.signUpPasswordField.get_text();
		var login;
		if(rawLoginText == null) {
			login = "";
		} else {
			var maxChars = null;
			var isLegalChar = utils_StringUtils.isAlphaNumeric;
			var formerText = StringTools.trim(rawLoginText);
			var text = "";
			var newLength = formerText.length;
			if(maxChars != null && maxChars < newLength) {
				newLength = maxChars;
			}
			var _g = 0;
			var _g1 = newLength;
			while(_g < _g1) {
				var index = _g++;
				if(isLegalChar == null) {
					if(utils_StringUtils.isLegalForChat(HxOverrides.cca(formerText,index))) {
						text += formerText.charAt(index);
					}
				} else if(isLegalChar(formerText.charAt(index))) {
					text += formerText.charAt(index);
				}
			}
			login = text;
		}
		var password;
		if(rawPasswordText == null) {
			password = "";
		} else {
			var maxChars = null;
			var isLegalChar = utils_StringUtils.isAlphaNumeric;
			var formerText = StringTools.trim(rawPasswordText);
			var text = "";
			var newLength = formerText.length;
			if(maxChars != null && maxChars < newLength) {
				newLength = maxChars;
			}
			var _g = 0;
			var _g1 = newLength;
			while(_g < _g1) {
				var index = _g++;
				if(isLegalChar == null) {
					if(utils_StringUtils.isLegalForChat(HxOverrides.cca(formerText,index))) {
						text += formerText.charAt(index);
					}
				} else if(isLegalChar(formerText.charAt(index))) {
					text += formerText.charAt(index);
				}
			}
			password = text;
		}
		if(login == "") {
			gfx_Dialogs.alert(dict_Phrase.LOGIN_LOGIN_NOT_SPECIFIED_WARNING_TEXT,dict_Phrase.LOGIN_WARNING_MESSAGEBOX_TITLE);
			fn(false);
			return;
		} else if(password == "") {
			gfx_Dialogs.alert(dict_Phrase.LOGIN_PASSWORD_NOT_SPECIFIED_WARNING_TEXT,dict_Phrase.LOGIN_WARNING_MESSAGEBOX_TITLE);
			fn(false);
			return;
		}
		if(signInMode) {
			var tmp = this.signInRememberMeCheckbox.get_selected();
			var _g = fn;
			var a1 = true;
			net_Requests.signin(login,password,tmp,function() {
				_g(a1);
			},function() {
				gfx_Dialogs.alert(dict_Phrase.LOGIN_INVALID_PASSWORD_WARNING_TEXT,dict_Phrase.LOGIN_WARNING_MESSAGEBOX_TITLE);
				fn(false);
			});
		} else {
			if(this.signUpRepeatPasswordField.get_text() == null || this.signUpRepeatPasswordField.get_text() == "") {
				gfx_Dialogs.alert(dict_Phrase.LOGIN_REPEATED_PASSWORD_NOT_SPECIFIED_WARNING_TEXT,dict_Phrase.LOGIN_WARNING_MESSAGEBOX_TITLE);
				fn(false);
				return;
			}
			if(login.length < 2 || login.length > 16) {
				gfx_Dialogs.alert(dict_Phrase.LOGIN_BAD_LOGIN_LENGTH_WARNING_TEXT,dict_Phrase.LOGIN_WARNING_MESSAGEBOX_TITLE);
				fn(false);
				return;
			}
			if(password.length < 6) {
				gfx_Dialogs.alert(dict_Phrase.LOGIN_BAD_PASSWORD_LENGTH_WARNING_TEXT,dict_Phrase.LOGIN_WARNING_MESSAGEBOX_TITLE);
				fn(false);
				return;
			}
			if(rawPasswordText != this.signUpRepeatPasswordField.get_text()) {
				gfx_Dialogs.alert(dict_Phrase.LOGIN_PASSWORDS_DO_NOT_MATCH,dict_Phrase.LOGIN_WARNING_MESSAGEBOX_TITLE);
				fn(false);
				return;
			}
			var tmp = this.signUpStayLoggedCheckbox.get_selected();
			var _g1 = fn;
			var a11 = true;
			net_Requests.register(login,password,tmp,function() {
				_g1(a11);
			},function() {
				gfx_Dialogs.alert(dict_Phrase.LOGIN_ALREADY_REGISTERED_WARNING_TEXT,dict_Phrase.LOGIN_WARNING_MESSAGEBOX_TITLE);
				fn(false);
			});
		}
	}
	,registerBehaviours: function() {
		gfx_basic_$components_BaseDialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gfx_basic_$components_BaseDialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_onLoggedIn: null
	,self: function() {
		return new gfx_popups_LogIn(this._constructorParam_onLoggedIn);
	}
	,tabview: null
	,signUpUsernameField: null
	,signUpStayLoggedCheckbox: null
	,signUpRepeatPasswordField: null
	,signUpPasswordField: null
	,signInUsernameField: null
	,signInRememberMeCheckbox: null
	,signInPasswordField: null
	,__class__: gfx_popups_LogIn
});
var gfx_popups_OpenChallengeCreated = function(challengeID) {
	gfx_basic_$components_BaseDialog.call(this,gfx_basic_$components_utils_DialogGroup.RemovedOnGameStarted,false);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	c0.set_styleString("padding:8px");
	var c1 = new haxe_ui_components_Label();
	c1.set_percentWidth(100.);
	c1.set_styleString("text-align:center;font-size:16px");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_Spacer();
	c2.set_height(15.);
	c0.addComponent(c2);
	var c3 = new gfx_basic_$components_CopyableText();
	c3.set_id("linkText");
	c3.set_height(30.);
	c3.set_percentWidth(100.);
	c0.addComponent(c3);
	this.addComponent(c0);
	this.set_width(600.);
	this.bindingRoot = true;
	this.linkText = c3;
	c1.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SEND_OPEN_CHALLENGE_SUCCESS_DIALOG_TEXT)));
	this.set_title(dict_Dictionary.getPhrase(dict_Phrase.SEND_OPEN_CHALLENGE_SUCCESS_DIALOG_TITLE));
	this.linkText.set_copiedText(browser_Url.getChallengeLink(challengeID));
};
$hxClasses["gfx.popups.OpenChallengeCreated"] = gfx_popups_OpenChallengeCreated;
gfx_popups_OpenChallengeCreated.__name__ = "gfx.popups.OpenChallengeCreated";
gfx_popups_OpenChallengeCreated.__super__ = gfx_basic_$components_BaseDialog;
gfx_popups_OpenChallengeCreated.prototype = $extend(gfx_basic_$components_BaseDialog.prototype,{
	resize: function() {
		this.set_width(Math.min(600,0.98 * haxe_ui_core_Screen.get_instance().get_actualWidth()));
	}
	,onClose: function(btn) {
	}
	,registerBehaviours: function() {
		gfx_basic_$components_BaseDialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gfx_basic_$components_BaseDialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_challengeID: null
	,self: function() {
		return new gfx_popups_OpenChallengeCreated(this._constructorParam_challengeID);
	}
	,linkText: null
	,__class__: gfx_popups_OpenChallengeCreated
});
var gfx_popups_PromotionSelect = function(playerColor,onPieceSelected) {
	this.pieceBtnIcons = new haxe_ds_EnumValueMap();
	this.pieceButtons = new haxe_ds_EnumValueMap();
	gfx_basic_$components_BaseDialog.call(this,null,true);
	var c0 = new haxe_ui_containers_VBox();
	var c1 = new haxe_ui_components_Label();
	c1.set_styleString("text-align: center");
	c1.set_horizontalAlign("center");
	c0.addComponent(c1);
	var c2 = new haxe_ui_containers_HBox();
	c2.set_id("btnsBox");
	c2.set_horizontalAlign("center");
	c0.addComponent(c2);
	this.addComponent(c0);
	this.bindingRoot = true;
	this.btnsBox = c2;
	c1.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.PROMOTION_DIALOG_QUESTION)));
	this.set_title(dict_Dictionary.getPhrase(dict_Phrase.PROMOTION_DIALOG_TITLE));
	this.buttons = "{{cancel}}";
	this.playerColor = playerColor;
	this.onPieceSelected = onPieceSelected;
	var _g = 0;
	var _g1 = net_shared_board_Rules.possiblePromotionTypes();
	while(_g < _g1.length) {
		var type = _g1[_g];
		++_g;
		this.btnsBox.addComponent(this.pieceBtn(type,playerColor));
	}
};
$hxClasses["gfx.popups.PromotionSelect"] = gfx_popups_PromotionSelect;
gfx_popups_PromotionSelect.__name__ = "gfx.popups.PromotionSelect";
gfx_popups_PromotionSelect.__super__ = gfx_basic_$components_BaseDialog;
gfx_popups_PromotionSelect.prototype = $extend(gfx_basic_$components_BaseDialog.prototype,{
	pieceButtons: null
	,pieceBtnIcons: null
	,playerColor: null
	,onPieceSelected: null
	,resize: function() {
		var btnSize = Math.min(100,Math.min(haxe_ui_core_Screen.get_instance().get_actualHeight() * 0.5,haxe_ui_core_Screen.get_instance().get_actualWidth() * 0.2));
		var button = this.pieceButtons.iterator();
		while(button.hasNext()) {
			var button1 = button.next();
			button1.set_width(btnSize);
			button1.set_height(btnSize);
		}
		var map = this.pieceBtnIcons;
		var _g_map = map;
		var _g_keys = map.keys();
		while(_g_keys.hasNext()) {
			var key = _g_keys.next();
			var _g1_value = _g_map.get(key);
			var _g1_key = key;
			var type = _g1_key;
			var icon = _g1_value;
			var iconSize = 0.8 * gameboard_components_Piece.pieceRelativeScale(type) * btnSize;
			icon.set_width(iconSize);
			icon.set_height(iconSize);
		}
	}
	,onClose: function(button) {
	}
	,onPieceBtnPressed: function(type,e) {
		this.hideDialog("{{ok}}");
		this.onPieceSelected(type);
	}
	,onBtnReady: function(type,btn,e) {
		this.pieceButtons.set(type,btn);
		this.pieceBtnIcons.set(type,btn.findComponent(null,haxe_ui_components_Image));
		this.resize();
	}
	,pieceBtn: function(type,color) {
		var btn = new haxe_ui_components_Button();
		btn.set_icon(haxe_ui_util_Variant.fromString("assets/pieces/" + $hxEnums[type.__enum__].__constructs__[type._hx_index]._hx_name + "_" + $hxEnums[color.__enum__].__constructs__[color._hx_index]._hx_name + ".svg"));
		var _g = $bind(this,this.onPieceBtnPressed);
		var type1 = type;
		btn.set_onClick(function(e) {
			_g(type1,e);
		});
		var _g1 = $bind(this,this.onBtnReady);
		var type2 = type;
		var btn1 = btn;
		btn.registerEvent("ready",function(e) {
			_g1(type2,btn1,e);
		});
		return btn;
	}
	,registerBehaviours: function() {
		gfx_basic_$components_BaseDialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gfx_basic_$components_BaseDialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_playerColor: null
	,_constructorParam_onPieceSelected: null
	,self: function() {
		return new gfx_popups_PromotionSelect(this._constructorParam_playerColor,this._constructorParam_onPieceSelected);
	}
	,btnsBox: null
	,__class__: gfx_popups_PromotionSelect
});
var gfx_popups_ReconnectionDialog = function() {
	gfx_basic_$components_BaseDialog.call(this,gfx_basic_$components_utils_DialogGroup.ReconnectionPopUp,true);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_verticalAlign("center");
	var c1 = new haxe_ui_components_Image();
	c1.set_resource(haxe_ui_util_Variant.fromString("assets/preloader.gif"));
	c1.set_horizontalAlign("center");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_Label();
	c2.set_styleString("font-size: 14; font-italic: true");
	c2.set_horizontalAlign("center");
	c0.addComponent(c2);
	this.addComponent(c0);
	this.set_closable(false);
	this.bindingRoot = true;
	c2.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.RECONNECTION_POP_UP_TEXT)));
	this.set_title(dict_Dictionary.getPhrase(dict_Phrase.RECONNECTION_POP_UP_TITLE));
};
$hxClasses["gfx.popups.ReconnectionDialog"] = gfx_popups_ReconnectionDialog;
gfx_popups_ReconnectionDialog.__name__ = "gfx.popups.ReconnectionDialog";
gfx_popups_ReconnectionDialog.__super__ = gfx_basic_$components_BaseDialog;
gfx_popups_ReconnectionDialog.prototype = $extend(gfx_basic_$components_BaseDialog.prototype,{
	resize: function() {
	}
	,onClose: function(btn) {
	}
	,registerBehaviours: function() {
		gfx_basic_$components_BaseDialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gfx_basic_$components_BaseDialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_popups_ReconnectionDialog();
	}
	,__class__: gfx_popups_ReconnectionDialog
});
var gfx_popups_Settings = function() {
	gfx_basic_$components_BaseDialog.call(this,null,false);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	c0.set_styleString("border: 1px solid $normal-border-color;padding-top:1px;padding-bottom:1px;padding-right: 1px;");
	var c1 = new haxe_ui_containers_HorizontalButtonBar();
	c1.set_id("tabBar");
	c1.set_percentWidth(100.);
	c1.set_styleNames("top-menu");
	c1.set_selectedIndex(0);
	var c2 = new haxe_ui_components_Button();
	c2.set_styleNames("settings-tab-button");
	c2.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/settings/tab_icons/general.svg"));
	c1.addComponent(c2);
	var c3 = new haxe_ui_components_Button();
	c3.set_styleNames("settings-tab-button");
	c3.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/settings/tab_icons/appearance.svg"));
	c3.set_disabled(true);
	c1.addComponent(c3);
	var c4 = new haxe_ui_components_Button();
	c4.set_styleNames("settings-tab-button");
	c4.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/settings/tab_icons/controls.svg"));
	c4.set_disabled(true);
	c1.addComponent(c4);
	var c5 = new haxe_ui_components_Button();
	c5.set_styleNames("settings-tab-button");
	c5.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/settings/tab_icons/integrations.svg"));
	c5.set_disabled(true);
	c1.addComponent(c5);
	c0.addComponent(c1);
	var c6 = new haxe_ui_containers_Stack();
	c6.set_id("stack3");
	c6.set_percentWidth(100.);
	c6.set_percentHeight(100.);
	var c7 = new haxe_ui_containers_ScrollView();
	c7.set_percentWidth(100.);
	c7.set_percentHeight(100.);
	c7.set_percentContentWidth(100.);
	var c8 = new haxe_ui_components_SectionHeader();
	c7.addComponent(c8);
	var c9 = new haxe_ui_containers_HorizontalButtonBar();
	c9.set_id("langBar");
	c9.set_horizontalAlign("center");
	var c10 = new haxe_ui_components_Button();
	c10.set_id("langBtnEN");
	c9.addComponent(c10);
	var c11 = new haxe_ui_components_Button();
	c11.set_id("langBtnRU");
	c9.addComponent(c11);
	c7.addComponent(c9);
	var c12 = new haxe_ui_components_SectionHeader();
	c7.addComponent(c12);
	var c13 = new haxe_ui_containers_HorizontalButtonBar();
	c13.set_id("markingBar");
	c13.set_horizontalAlign("center");
	var c14 = new haxe_ui_components_Button();
	c14.set_id("markingBtnOver");
	c13.addComponent(c14);
	var c15 = new haxe_ui_components_Button();
	c15.set_id("markingBtnSide");
	c13.addComponent(c15);
	var c16 = new haxe_ui_components_Button();
	c16.set_id("markingBtnNone");
	c13.addComponent(c16);
	c7.addComponent(c13);
	var c17 = new haxe_ui_components_SectionHeader();
	c7.addComponent(c17);
	var c18 = new haxe_ui_containers_HBox();
	c18.set_horizontalAlign("center");
	var c19 = new haxe_ui_components_Switch();
	c19.set_id("premovesPill");
	c19.set_styleNames("pill-switch");
	c18.addComponent(c19);
	var c20 = new haxe_ui_components_Label();
	c20.set_id("premovesLabel");
	c20.set_styleString("pill-label");
	c18.addComponent(c20);
	c7.addComponent(c18);
	var c21 = new haxe_ui_components_SectionHeader();
	c7.addComponent(c21);
	var c22 = new haxe_ui_containers_HBox();
	c22.set_horizontalAlign("center");
	var c23 = new haxe_ui_components_Switch();
	c23.set_id("silentChallengesPill");
	c23.set_styleNames("pill-switch");
	c22.addComponent(c23);
	var c24 = new haxe_ui_components_Label();
	c24.set_id("silentChallengesLabel");
	c24.set_styleString("pill-label");
	c22.addComponent(c24);
	c7.addComponent(c22);
	var c25 = new haxe_ui_components_SectionHeader();
	c7.addComponent(c25);
	var c26 = new haxe_ui_containers_HorizontalButtonBar();
	c26.set_id("branchingBar");
	c26.set_horizontalAlign("center");
	var c27 = new haxe_ui_components_Button();
	c27.set_id("branchingBtnTree");
	c26.addComponent(c27);
	var c28 = new haxe_ui_components_Button();
	c28.set_id("branchingBtnOutline");
	c26.addComponent(c28);
	var c29 = new haxe_ui_components_Button();
	c29.set_id("branchingBtnPlain");
	c26.addComponent(c29);
	c7.addComponent(c26);
	var c30 = new haxe_ui_components_SectionHeader();
	c7.addComponent(c30);
	var c31 = new haxe_ui_containers_HBox();
	c31.set_horizontalAlign("center");
	var c32 = new haxe_ui_components_Switch();
	c32.set_id("branchingTurnColorPill");
	c32.set_styleNames("pill-switch");
	c31.addComponent(c32);
	var c33 = new haxe_ui_components_Label();
	c33.set_id("branchingTurnColorLabel");
	c33.set_styleString("pill-label");
	c31.addComponent(c33);
	c7.addComponent(c31);
	var c34 = new haxe_ui_components_SectionHeader();
	c7.addComponent(c34);
	var c35 = new haxe_ui_containers_HorizontalButtonBar();
	c35.set_id("autoScrollBar");
	c35.set_horizontalAlign("center");
	var c36 = new haxe_ui_components_Button();
	c36.set_id("autoScrollBtnAlways");
	c35.addComponent(c36);
	var c37 = new haxe_ui_components_Button();
	c37.set_id("autoScrollBtnOwn");
	c35.addComponent(c37);
	var c38 = new haxe_ui_components_Button();
	c38.set_id("autoScrollBtnNever");
	c35.addComponent(c38);
	c7.addComponent(c35);
	c6.addComponent(c7);
	var c39 = new haxe_ui_containers_VBox();
	c39.set_percentWidth(100.);
	c39.set_percentHeight(100.);
	c6.addComponent(c39);
	var c40 = new haxe_ui_containers_VBox();
	c40.set_percentWidth(100.);
	c40.set_percentHeight(100.);
	c6.addComponent(c40);
	var c41 = new haxe_ui_containers_VBox();
	c41.set_percentWidth(100.);
	c41.set_percentHeight(100.);
	c6.addComponent(c41);
	c0.addComponent(c6);
	this.addComponent(c0);
	c1.registerEvent("change",function(event) {
		var __this__ = c1;
		var stack3 = c6;
		stack3.set_selectedIndex(__this__.get_selectedIndex());
	});
	c10.registerEvent("click",function(event) {
		var __this__ = c10;
		Preferences.language.set(dict_Language.EN);
	});
	c11.registerEvent("click",function(event) {
		var __this__ = c11;
		Preferences.language.set(dict_Language.RU);
	});
	c14.registerEvent("click",function(event) {
		var __this__ = c14;
		Preferences.marking.set(gameboard_util_Marking.Over);
	});
	c15.registerEvent("click",function(event) {
		var __this__ = c15;
		Preferences.marking.set(gameboard_util_Marking.Side);
	});
	c16.registerEvent("click",function(event) {
		var __this__ = c16;
		Preferences.marking.set(gameboard_util_Marking.None);
	});
	c19.registerEvent("click",function(event) {
		var __this__ = c19;
		var premovesLabel = c20;
		Preferences.premoveEnabled.set(__this__.get_selected());
		premovesLabel.set_text(dict_Dictionary.getPhrase(__this__.get_selected() ? dict_Phrase.SETTINGS_ENABLED_OPTION_VALUE : dict_Phrase.SETTINGS_DISABLED_OPTION_VALUE));
	});
	c23.registerEvent("click",function(event) {
		var __this__ = c23;
		var silentChallengesLabel = c24;
		Preferences.silentChallenges.set(__this__.get_selected());
		silentChallengesLabel.set_text(dict_Dictionary.getPhrase(__this__.get_selected() ? dict_Phrase.SETTINGS_ENABLED_OPTION_VALUE : dict_Phrase.SETTINGS_DISABLED_OPTION_VALUE));
	});
	c27.registerEvent("click",function(event) {
		var __this__ = c27;
		Preferences.branchingTabType.set(BranchingTabType.Tree);
	});
	c28.registerEvent("click",function(event) {
		var __this__ = c28;
		Preferences.branchingTabType.set(BranchingTabType.Outline);
	});
	c29.registerEvent("click",function(event) {
		var __this__ = c29;
		Preferences.branchingTabType.set(BranchingTabType.PlainText);
	});
	c32.registerEvent("click",function(event) {
		var __this__ = c32;
		var branchingTurnColorLabel = c33;
		Preferences.branchingTurnColorIndicators.set(__this__.get_selected());
		branchingTurnColorLabel.set_text(dict_Dictionary.getPhrase(__this__.get_selected() ? dict_Phrase.SETTINGS_ENABLED_OPTION_VALUE : dict_Phrase.SETTINGS_DISABLED_OPTION_VALUE));
	});
	c36.registerEvent("click",function(event) {
		var __this__ = c36;
		Preferences.autoScrollOnMove.set(AutoScrollType.Always);
	});
	c37.registerEvent("click",function(event) {
		var __this__ = c37;
		Preferences.autoScrollOnMove.set(AutoScrollType.OwnGameOnly);
	});
	c38.registerEvent("click",function(event) {
		var __this__ = c38;
		Preferences.autoScrollOnMove.set(AutoScrollType.Never);
	});
	this.set_width(600.);
	this.set_percentHeight(95.);
	this.bindingRoot = true;
	this.tabBar = c1;
	this.stack3 = c6;
	this.silentChallengesPill = c23;
	this.silentChallengesLabel = c24;
	this.premovesPill = c19;
	this.premovesLabel = c20;
	this.markingBtnSide = c15;
	this.markingBtnOver = c14;
	this.markingBtnNone = c16;
	this.markingBar = c13;
	this.langBtnRU = c11;
	this.langBtnEN = c10;
	this.langBar = c9;
	this.branchingTurnColorPill = c32;
	this.branchingTurnColorLabel = c33;
	this.branchingBtnTree = c27;
	this.branchingBtnPlain = c29;
	this.branchingBtnOutline = c28;
	this.branchingBar = c26;
	this.autoScrollBtnOwn = c37;
	this.autoScrollBtnNever = c38;
	this.autoScrollBtnAlways = c36;
	this.autoScrollBar = c35;
	c2.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SETTINGS_GENERAL_TAB_TITLE)));
	c3.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SETTINGS_APPEARANCE_TAB_TITLE)));
	c4.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SETTINGS_CONTROLS_TAB_TITLE)));
	c5.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SETTINGS_INTEGRATIONS_TAB_TITLE)));
	c8.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SETTINGS_LANGUAGE_OPTION_NAME)));
	c10.set_text(Std.string(dict_Dictionary.getLanguageName(dict_Language.EN)));
	c11.set_text(Std.string(dict_Dictionary.getLanguageName(dict_Language.RU)));
	c12.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SETTINGS_MARKUP_OPTION_NAME)));
	c14.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SETTINGS_MARKUP_ALL_OPTION_VALUE)));
	c15.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SETTINGS_MARKUP_LETTERS_OPTION_VALUE)));
	c16.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SETTINGS_MARKUP_NONE_OPTION_VALUE)));
	c17.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SETTINGS_PREMOVES_OPTION_NAME)));
	c21.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SETTINGS_SILENT_CHALLENGES_OPTION_NAME)));
	c25.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SETTINGS_BRANCHING_TYPE_OPTION_NAME)));
	c27.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SETTINGS_BRANCHING_TYPE_TREE_OPTION_VALUE)));
	c28.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SETTINGS_BRANCHING_TYPE_OUTLINE_OPTION_VALUE)));
	c29.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SETTINGS_BRANCHING_TYPE_PLAIN_OPTION_VALUE)));
	c30.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SETTINGS_BRANCHING_SHOW_TURN_COLOR_OPTION_NAME)));
	c34.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SETTINGS_AUTOSCROLL_OPTION_NAME)));
	c36.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SETTINGS_AUTOSCROLL_ALWAYS_OPTION_VALUE)));
	c37.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SETTINGS_AUTOSCROLL_OWN_OPTION_VALUE)));
	c38.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.SETTINGS_AUTOSCROLL_NEVER_OPTION_VALUE)));
	this.set_title(dict_Dictionary.getPhrase(dict_Phrase.SETTINGS_DIALOG_TITLE));
	this.oldLanguage = Preferences.language.get();
	switch(this.oldLanguage._hx_index) {
	case 0:
		this.langBar.set_selectedButton(this.langBtnEN);
		break;
	case 1:
		this.langBar.set_selectedButton(this.langBtnRU);
		break;
	}
	switch(Preferences.marking.get()._hx_index) {
	case 0:
		this.markingBar.set_selectedButton(this.markingBtnNone);
		break;
	case 1:
		this.markingBar.set_selectedButton(this.markingBtnSide);
		break;
	case 2:
		this.markingBar.set_selectedButton(this.markingBtnOver);
		break;
	}
	this.premovesPill.set_selected(Preferences.premoveEnabled.get());
	this.premovesLabel.set_text(dict_Dictionary.getPhrase(this.premovesPill.get_selected() ? dict_Phrase.SETTINGS_ENABLED_OPTION_VALUE : dict_Phrase.SETTINGS_DISABLED_OPTION_VALUE));
	this.silentChallengesPill.set_selected(Preferences.silentChallenges.get());
	this.silentChallengesLabel.set_text(dict_Dictionary.getPhrase(this.silentChallengesPill.get_selected() ? dict_Phrase.SETTINGS_ENABLED_OPTION_VALUE : dict_Phrase.SETTINGS_DISABLED_OPTION_VALUE));
	switch(Preferences.branchingTabType.get()._hx_index) {
	case 0:
		this.branchingBar.set_selectedButton(this.branchingBtnTree);
		break;
	case 1:
		this.branchingBar.set_selectedButton(this.branchingBtnOutline);
		break;
	case 2:
		this.branchingBar.set_selectedButton(this.branchingBtnPlain);
		break;
	}
	this.branchingTurnColorPill.set_selected(Preferences.branchingTurnColorIndicators.get());
	this.branchingTurnColorLabel.set_text(dict_Dictionary.getPhrase(this.branchingTurnColorPill.get_selected() ? dict_Phrase.SETTINGS_ENABLED_OPTION_VALUE : dict_Phrase.SETTINGS_DISABLED_OPTION_VALUE));
	switch(Preferences.autoScrollOnMove.get()._hx_index) {
	case 0:
		this.autoScrollBar.set_selectedButton(this.autoScrollBtnAlways);
		break;
	case 1:
		this.autoScrollBar.set_selectedButton(this.autoScrollBtnOwn);
		break;
	case 2:
		this.autoScrollBar.set_selectedButton(this.autoScrollBtnNever);
		break;
	}
};
$hxClasses["gfx.popups.Settings"] = gfx_popups_Settings;
gfx_popups_Settings.__name__ = "gfx.popups.Settings";
gfx_popups_Settings.__super__ = gfx_basic_$components_BaseDialog;
gfx_popups_Settings.prototype = $extend(gfx_basic_$components_BaseDialog.prototype,{
	oldLanguage: null
	,resize: function() {
		this.set_width(Math.min(600,haxe_ui_core_Screen.get_instance().get_actualWidth() * 0.98));
		var _g = 0;
		var _g1 = this.stack3.findComponents(null,haxe_ui_containers_ButtonBar);
		while(_g < _g1.length) {
			var bar = _g1[_g];
			++_g;
			bar.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"center",null,null,null,null,null,null,Math.min(16,haxe_ui_core_Screen.get_instance().get_actualWidth() * 0.02),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
		}
		var _g = 0;
		var _g1 = this.stack3.findComponents(null,haxe_ui_components_SectionHeader);
		while(_g < _g1.length) {
			var header = _g1[_g];
			++_g;
			header.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,Math.min(16,haxe_ui_core_Screen.get_instance().get_actualWidth() * 0.02),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
		}
		var _g = 0;
		var _g1 = this.stack3.findComponents("pill-label");
		while(_g < _g1.length) {
			var label = _g1[_g];
			++_g;
			label.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,Math.min(16,haxe_ui_core_Screen.get_instance().get_actualWidth() * 0.02),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
		}
		var _g = 0;
		var _g1 = this.tabBar.findComponents(null,haxe_ui_components_Button);
		while(_g < _g1.length) {
			var btn = _g1[_g];
			++_g;
			var icon = btn.findComponent(null,haxe_ui_components_Image);
			icon.set_width(Math.min(50,haxe_ui_core_Screen.get_instance().get_actualWidth() * 0.08));
			icon.set_height(Math.min(50,haxe_ui_core_Screen.get_instance().get_actualWidth() * 0.08));
			btn.set_customStyle(new haxe_ui_styles_Style(null,null,null,Math.floor(Math.min(120,haxe_ui_core_Screen.get_instance().get_actualWidth() * 0.2)),null,null,null,null,null,null,null,null,Math.min(100,haxe_ui_core_Screen.get_instance().get_actualWidth() * 0.16),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,Math.min(12,haxe_ui_core_Screen.get_instance().get_actualWidth() * 0.02),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
		}
	}
	,onClose: function(button) {
		if(Preferences.language.get() != this.oldLanguage) {
			$global.location.reload();
		}
	}
	,registerBehaviours: function() {
		gfx_basic_$components_BaseDialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gfx_basic_$components_BaseDialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_popups_Settings();
	}
	,tabBar: null
	,stack3: null
	,silentChallengesPill: null
	,silentChallengesLabel: null
	,premovesPill: null
	,premovesLabel: null
	,markingBtnSide: null
	,markingBtnOver: null
	,markingBtnNone: null
	,markingBar: null
	,langBtnRU: null
	,langBtnEN: null
	,langBar: null
	,branchingTurnColorPill: null
	,branchingTurnColorLabel: null
	,branchingBtnTree: null
	,branchingBtnPlain: null
	,branchingBtnOutline: null
	,branchingBar: null
	,autoScrollBtnOwn: null
	,autoScrollBtnNever: null
	,autoScrollBtnAlways: null
	,autoScrollBar: null
	,__class__: gfx_popups_Settings
});
var gfx_popups_StudyParamsDialogMode = $hxEnums["gfx.popups.StudyParamsDialogMode"] = { __ename__:"gfx.popups.StudyParamsDialogMode",__constructs__:null
	,Create: ($_=function(variant) { return {_hx_index:0,variant:variant,__enum__:"gfx.popups.StudyParamsDialogMode",toString:$estr}; },$_._hx_name="Create",$_.__params__ = ["variant"],$_)
	,CreateOrOverwrite: ($_=function(newVariant,existingStudyID,existingStudyParams) { return {_hx_index:1,newVariant:newVariant,existingStudyID:existingStudyID,existingStudyParams:existingStudyParams,__enum__:"gfx.popups.StudyParamsDialogMode",toString:$estr}; },$_._hx_name="CreateOrOverwrite",$_.__params__ = ["newVariant","existingStudyID","existingStudyParams"],$_)
	,Edit: ($_=function(studyID,currentParams,onNewParamsSent) { return {_hx_index:2,studyID:studyID,currentParams:currentParams,onNewParamsSent:onNewParamsSent,__enum__:"gfx.popups.StudyParamsDialogMode",toString:$estr}; },$_._hx_name="Edit",$_.__params__ = ["studyID","currentParams","onNewParamsSent"],$_)
};
gfx_popups_StudyParamsDialogMode.__constructs__ = [gfx_popups_StudyParamsDialogMode.Create,gfx_popups_StudyParamsDialogMode.CreateOrOverwrite,gfx_popups_StudyParamsDialogMode.Edit];
gfx_popups_StudyParamsDialogMode.__empty_constructs__ = [];
var gfx_popups_StudyParamsDialog = function(mode) {
	this.tags = [];
	gfx_basic_$components_BaseDialog.call(this,null,false);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        .param-name-label {\r\n            font-size:16px;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	var c1 = new haxe_ui_containers_HBox();
	c1.set_percentWidth(100.);
	var c2 = new haxe_ui_components_Label();
	c2.set_percentWidth(50.);
	c2.set_styleNames("param-name-label");
	c2.set_verticalAlign("center");
	c1.addComponent(c2);
	var c3 = new haxe_ui_components_TextField();
	c3.set_id("nameTF");
	c3.set_percentWidth(50.);
	c3.set_verticalAlign("center");
	c1.addComponent(c3);
	c0.addComponent(c1);
	var c4 = new haxe_ui_containers_HBox();
	c4.set_percentWidth(100.);
	var c5 = new haxe_ui_components_Label();
	c5.set_percentWidth(50.);
	c5.set_styleNames("param-name-label");
	c5.set_verticalAlign("center");
	c4.addComponent(c5);
	var c6 = new haxe_ui_components_DropDown();
	c6.set_id("accessDropdown");
	c6.set_percentWidth(50.);
	c6.set_verticalAlign("center");
	c6.set_selectedIndex(0);
	var ds6 = new haxe_ui_data_ArrayDataSource();
	var __item = { };
	__item.text = dict_Dictionary.getPhrase(dict_Phrase.STUDY_PARAMS_DIALOG_ACCESS_OPTION(net_shared_dataobj_StudyPublicity.Public));
	__item.id = "item";
	ds6.add(__item);
	var __item = { };
	__item.text = dict_Dictionary.getPhrase(dict_Phrase.STUDY_PARAMS_DIALOG_ACCESS_OPTION(net_shared_dataobj_StudyPublicity.DirectOnly));
	__item.id = "item";
	ds6.add(__item);
	var __item = { };
	__item.text = dict_Dictionary.getPhrase(dict_Phrase.STUDY_PARAMS_DIALOG_ACCESS_OPTION(net_shared_dataobj_StudyPublicity.Private));
	__item.id = "item";
	ds6.add(__item);
	c6.set_dataSource(ds6);
	c4.addComponent(c6);
	c0.addComponent(c4);
	var c7 = new haxe_ui_components_Label();
	c7.set_id("descOptionName");
	c7.set_percentWidth(100.);
	c7.set_styleNames("param-name-label");
	c7.set_verticalAlign("center");
	c0.addComponent(c7);
	var c8 = new haxe_ui_components_TextArea();
	c8.set_id("descTextArea");
	c8.set_height(200.);
	c8.set_percentWidth(100.);
	c0.addComponent(c8);
	var c9 = new haxe_ui_components_Label();
	c9.set_id("tagsOptionName");
	c9.set_percentWidth(100.);
	c9.set_styleNames("param-name-label");
	c9.set_verticalAlign("center");
	c0.addComponent(c9);
	var c10 = new haxe_ui_containers_Box();
	c10.set_id("tagListContainer");
	c10.set_percentWidth(100.);
	c0.addComponent(c10);
	var c11 = new haxe_ui_components_Button();
	c11.set_id("overwriteBtn");
	c11.set_horizontalAlign("center");
	c0.addComponent(c11);
	var c12 = new haxe_ui_containers_HBox();
	c12.set_horizontalAlign("center");
	var c13 = new haxe_ui_components_Button();
	c13.set_id("createBtn");
	c12.addComponent(c13);
	var c14 = new haxe_ui_components_Button();
	c14.set_id("saveParamsBtn");
	c12.addComponent(c14);
	var c15 = new haxe_ui_components_Button();
	c15.set_id("cancelBtn");
	c12.addComponent(c15);
	c0.addComponent(c12);
	this.addComponent(c0);
	this.set_width(500.);
	this.bindingRoot = true;
	this.tagsOptionName = c9;
	this.tagListContainer = c10;
	this.saveParamsBtn = c14;
	this.overwriteBtn = c11;
	this.nameTF = c3;
	this.descTextArea = c8;
	this.descOptionName = c7;
	this.createBtn = c13;
	this.cancelBtn = c15;
	this.accessDropdown = c6;
	c2.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.STUDY_PARAMS_DIALOG_PARAM_NAME)));
	c5.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.STUDY_PARAMS_DIALOG_PARAM_ACCESS)));
	c15.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.STUDY_PARAMS_DIALOG_CANCEL_BUTTON_TEXT)));
	this.descOptionName.set_text(dict_Dictionary.getPhrase(dict_Phrase.STUDY_PARAMS_DIALOG_PARAM_DESCRIPTION(400)));
	this.tagsOptionName.set_text(dict_Dictionary.getPhrase(dict_Phrase.STUDY_PARAMS_DIALOG_PARAM_TAGS(10)));
	this.nameTF.set_maxChars(25);
	this.studyTagList = new gfx_profile_complex_$components_StudyFilterList(gfx_basic_$components_utils_DimValue.Percent(100),25,$bind(this,this.onTagAdded),$bind(this,this.onTagRemoved),$bind(this,this.onTagsCleared),dict_Phrase.STUDY_PARAMS_DIALOG_TAG_LIST_PREPENDER,dict_Phrase.STUDY_PARAMS_DIALOG_NO_TAGS_PLACEHOLDER,dict_Phrase.STUDY_PARAMS_DIALOG_ADD_TAG_BUTTON_TOOLTIP,dict_Phrase.STUDY_PARAMS_DIALOG_REMOVE_TAG_BUTTON_TOOLTIP,dict_Phrase.STUDY_PARAMS_DIALOG_CLEAR_TAGS_BUTTON_TOOLTIP,dict_Phrase.STUDY_PARAMS_DIALOG_TAG_PROMPT_QUESTION);
	this.tagListContainer.addComponent(this.studyTagList);
	switch(mode._hx_index) {
	case 0:
		var variant = mode.variant;
		this.set_title(dict_Dictionary.getPhrase(dict_Phrase.STUDY_PARAMS_DIALOG_CREATE_TITLE));
		this.createBtn.set_text(dict_Dictionary.getPhrase(dict_Phrase.STUDY_PARAMS_DIALOG_CREATE_BUTTON_TEXT));
		this.overwriteBtn.set_hidden(true);
		this.saveParamsBtn.set_hidden(true);
		this.serializedVariant = variant.serialize();
		this.keySIP = this.generateKeySIP(variant);
		break;
	case 1:
		var newVariant = mode.newVariant;
		var existingStudyID = mode.existingStudyID;
		var existingStudyParams = mode.existingStudyParams;
		this.set_title(dict_Dictionary.getPhrase(dict_Phrase.STUDY_PARAMS_DIALOG_CREATE_TITLE));
		this.createBtn.set_text(dict_Dictionary.getPhrase(dict_Phrase.STUDY_PARAMS_DIALOG_CREATE_AS_NEW_BUTTON_TEXT));
		this.overwriteBtn.set_text(dict_Dictionary.getPhrase(dict_Phrase.STUDY_PARAMS_DIALOG_OVERWRITE_BUTTON_TEXT(existingStudyParams.name)));
		this.saveParamsBtn.set_hidden(true);
		this.oldStudyID = existingStudyID;
		this.serializedVariant = newVariant.serialize();
		this.keySIP = this.generateKeySIP(newVariant);
		this.fillParams(existingStudyParams);
		break;
	case 2:
		var studyID = mode.studyID;
		var currentParams = mode.currentParams;
		var onNewParamsSent = mode.onNewParamsSent;
		this.set_title(dict_Dictionary.getPhrase(dict_Phrase.STUDY_PARAMS_DIALOG_EDIT_TITLE));
		this.createBtn.set_hidden(true);
		this.overwriteBtn.set_hidden(true);
		this.saveParamsBtn.set_text(dict_Dictionary.getPhrase(dict_Phrase.STUDY_PARAMS_DIALOG_SAVE_CHANGES_BUTTON_TEXT));
		this.oldStudyID = studyID;
		this.onParamsEdited = onNewParamsSent;
		this.serializedVariant = currentParams.variantStr;
		this.keySIP = currentParams.keyPositionSIP;
		this.fillParams(currentParams);
		break;
	}
	var c = this.createBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onCreatePressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "createBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.popups.StudyParamsDialog", methodName : "new"});
	}
	var c = this.overwriteBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onOverwritePressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "overwriteBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.popups.StudyParamsDialog", methodName : "new"});
	}
	var c = this.saveParamsBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onSaveParamsPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "saveParamsBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.popups.StudyParamsDialog", methodName : "new"});
	}
	var c = this.cancelBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onCancelPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "cancelBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.popups.StudyParamsDialog", methodName : "new"});
	}
};
$hxClasses["gfx.popups.StudyParamsDialog"] = gfx_popups_StudyParamsDialog;
gfx_popups_StudyParamsDialog.__name__ = "gfx.popups.StudyParamsDialog";
gfx_popups_StudyParamsDialog.__super__ = gfx_basic_$components_BaseDialog;
gfx_popups_StudyParamsDialog.prototype = $extend(gfx_basic_$components_BaseDialog.prototype,{
	oldStudyID: null
	,onParamsEdited: null
	,serializedVariant: null
	,keySIP: null
	,studyTagList: null
	,tags: null
	,resize: function() {
		this.set_width(Math.min(400,haxe_ui_core_Screen.get_instance().get_actualWidth() * 0.98));
		var tmp = this.descTextArea;
		var _g = new haxe_ds_EnumValueMap();
		_g.set(gfx_ResponsiveProperty.Height,gfx_ResponsivenessRule.Min([gfx_Dimension.Exact(200),gfx_Dimension.VH(35)]));
		gfx_ResponsiveToolbox.resizeComponent(tmp,_g);
	}
	,onClose: function(button) {
	}
	,generateKeySIP: function(variant) {
		if(!variant.startingSituation.isDefaultStarting()) {
			return variant.startingSituation.serialize();
		} else {
			var path = variant.getLastMainLineDescendantPath([]);
			return variant.getSituationByPath(path).serialize();
		}
	}
	,constructStudyInfo: function() {
		var info = new net_shared_dataobj_StudyInfo();
		info.keyPositionSIP = this.keySIP;
		info.variantStr = this.serializedVariant;
		info.name = utils_StringUtils.shorten(StringTools.trim(this.nameTF.get_text()),25,false);
		info.description = utils_StringUtils.shorten(StringTools.trim(this.descTextArea.get_text()),400,false);
		info.publicity = Type.createEnumIndex(net_shared_dataobj_StudyPublicity,this.accessDropdown.get_selectedIndex(),null);
		info.tags = this.tags;
		return info;
	}
	,fillParams: function(studyInfo) {
		this.nameTF.set_text(studyInfo.name);
		this.descTextArea.set_text(studyInfo.description);
		this.accessDropdown.set_selectedIndex(studyInfo.publicity._hx_index);
		this.tags = studyInfo.tags;
		var _g = 0;
		var _g1 = this.tags;
		while(_g < _g1.length) {
			var tag = _g1[_g];
			++_g;
			this.studyTagList.appendTag(tag);
		}
	}
	,onCreatePressed: function(e) {
		var info = this.constructStudyInfo();
		net_Requests.createStudy(info);
		this.hideDialog(null);
	}
	,onOverwritePressed: function(e) {
		var info = this.constructStudyInfo();
		Networker.emitEvent(net_shared_ClientEvent.OverwriteStudy(this.oldStudyID,info));
		gfx_SceneManager.updateAnalysisStudyInfo(new gfx_profile_data_StudyData(this.oldStudyID,LoginManager.getLogin(),info));
		this.hideDialog(null);
	}
	,onSaveParamsPressed: function(e) {
		var info = this.constructStudyInfo();
		Networker.emitEvent(net_shared_ClientEvent.OverwriteStudy(this.oldStudyID,info));
		this.onParamsEdited(info);
		this.hideDialog(null);
	}
	,onCancelPressed: function(e) {
		this.hideDialog(null);
	}
	,onTagAdded: function(tag) {
		if(this.tags.length < 10) {
			this.tags.push(tag);
		}
	}
	,onTagRemoved: function(tag) {
		HxOverrides.remove(this.tags,tag);
	}
	,onTagsCleared: function() {
		this.tags = [];
	}
	,registerBehaviours: function() {
		gfx_basic_$components_BaseDialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gfx_basic_$components_BaseDialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_mode: null
	,self: function() {
		return new gfx_popups_StudyParamsDialog(this._constructorParam_mode);
	}
	,tagsOptionName: null
	,tagListContainer: null
	,saveParamsBtn: null
	,overwriteBtn: null
	,nameTF: null
	,descTextArea: null
	,descOptionName: null
	,createBtn: null
	,cancelBtn: null
	,accessDropdown: null
	,__class__: gfx_popups_StudyParamsDialog
});
var haxe_ui_Preloader = function() {
	haxe_ui_containers_Box.call(this);
	this.set_id("preloader");
	this.set_styleString("width:100%;height:100%;");
	this.set_percentWidth(this.set_percentHeight(100));
	this.set_styleNames("default-background");
};
$hxClasses["haxe.ui.Preloader"] = haxe_ui_Preloader;
haxe_ui_Preloader.__name__ = "haxe.ui.Preloader";
haxe_ui_Preloader.__super__ = haxe_ui_containers_Box;
haxe_ui_Preloader.prototype = $extend(haxe_ui_containers_Box.prototype,{
	createChildren: function() {
		var label = new haxe_ui_components_Label();
		label.set_text("Loading");
		label.set_verticalAlign("center");
		label.set_horizontalAlign("center");
		this.addComponent(label);
	}
	,validateComponentLayout: function() {
		var b = haxe_ui_containers_Box.prototype.validateComponentLayout.call(this);
		var tmp = this.get_actualComponentWidth() > 0 && this.get_actualComponentHeight() > 0;
		return b;
	}
	,_current: null
	,_max: null
	,progress: function(current,max) {
		this._current = current;
		this._max = max;
		if(current > 0) {
			var label = this.findComponent(null,haxe_ui_components_Label);
			if(label != null) {
				var text = label.get_text();
				if(StringTools.endsWith(text,"....")) {
					text = "Loading";
				}
				label.set_text(text);
			}
		}
	}
	,increment: function() {
		this.progress(this._current + 1,this._max);
	}
	,complete: function() {
		haxe_ui_core_Screen.get_instance().removeComponent(this);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_Preloader();
	}
	,__class__: haxe_ui_Preloader
});
var gfx_preloader_DefaultPreloader = function() {
	haxe_ui_Preloader.call(this);
	var c0 = new haxe_ui_components_Image();
	c0.set_verticalAlign("center");
	c0.set_resource(haxe_ui_util_Variant.fromString("assets/preloader.gif"));
	c0.set_horizontalAlign("center");
	this.addComponent(c0);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
};
$hxClasses["gfx.preloader.DefaultPreloader"] = gfx_preloader_DefaultPreloader;
gfx_preloader_DefaultPreloader.__name__ = "gfx.preloader.DefaultPreloader";
gfx_preloader_DefaultPreloader.__super__ = haxe_ui_Preloader;
gfx_preloader_DefaultPreloader.prototype = $extend(haxe_ui_Preloader.prototype,{
	registerBehaviours: function() {
		haxe_ui_Preloader.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_Preloader.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_preloader_DefaultPreloader();
	}
	,__class__: gfx_preloader_DefaultPreloader
});
var gfx_profile_Utils = function() { };
$hxClasses["gfx.profile.Utils"] = gfx_profile_Utils;
gfx_profile_Utils.__name__ = "gfx.profile.Utils";
gfx_profile_Utils.updateStatusLabel = function(label,status) {
	label.set_text(dict_Utils.getUserStatusText(status));
	var newStyle = label.get_customStyle().clone();
	switch(status._hx_index) {
	case 0:
		var secondsSinceLastAction = status.secondsSinceLastAction;
		newStyle.color = 3355443;
		break;
	case 1:
		newStyle.color = 64512;
		newStyle.fontBold = true;
		break;
	case 2:
		newStyle.color = 10824234;
		newStyle.fontBold = true;
		break;
	}
	label.set_customStyle(newStyle);
};
var gfx_profile_complex_$components_FriendList = function(w,contentHeight) {
	haxe_ui_containers_ScrollView.call(this);
	this.set_contentLayoutName("horizontal");
	this.set_contentHeight(contentHeight);
	gfx_basic_$components_utils_DimValue_assignWidth(this,w);
	var titleLabel = new gfx_basic_$components_AutosizingLabel();
	titleLabel.set_text(dict_Dictionary.getPhrase(dict_Phrase.PROFILE_FRIENDS_PREPENDER));
	titleLabel.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,true,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
	titleLabel.set_percentHeight(100);
	this.addComponent(titleLabel);
	this.noneLabel = new gfx_basic_$components_AutosizingLabel();
	this.noneLabel.set_text(dict_Dictionary.getPhrase(dict_Phrase.PROFILE_NO_FRIENDS_PLACEHOLDER));
	this.noneLabel.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,10066329,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,true,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
	this.noneLabel.set_percentHeight(100);
	this.addComponent(this.noneLabel);
};
$hxClasses["gfx.profile.complex_components.FriendList"] = gfx_profile_complex_$components_FriendList;
gfx_profile_complex_$components_FriendList.__name__ = "gfx.profile.complex_components.FriendList";
gfx_profile_complex_$components_FriendList.__super__ = haxe_ui_containers_ScrollView;
gfx_profile_complex_$components_FriendList.prototype = $extend(haxe_ui_containers_ScrollView.prototype,{
	noneLabel: null
	,ordinalNumber: function(status) {
		switch(status._hx_index) {
		case 0:
			var secondsSinceLastAction = status.secondsSinceLastAction;
			return secondsSinceLastAction;
		case 1:
			return -1;
		case 2:
			return -2;
		}
	}
	,compare: function(x,y) {
		return this.ordinalNumber(x.status) - this.ordinalNumber(y.status);
	}
	,fill: function(friends) {
		var _g = 0;
		var _g1 = (this._children == null ? [] : this._children).slice(2);
		while(_g < _g1.length) {
			var component = _g1[_g];
			++_g;
			this.removeComponent(component);
		}
		this.noneLabel.set_hidden(true);
		friends.sort($bind(this,this.compare));
		var _g = 0;
		while(_g < friends.length) {
			var data = friends[_g];
			++_g;
			this.addComponent(new gfx_profile_simple_$components_FriendListEntry(data));
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_ScrollView.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ScrollView.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_w: null
	,_constructorParam_contentHeight: null
	,self: function() {
		return new gfx_profile_complex_$components_FriendList(this._constructorParam_w,this._constructorParam_contentHeight);
	}
	,__class__: gfx_profile_complex_$components_FriendList
});
var haxe_ui_containers_IVirtualContainer = function() { };
$hxClasses["haxe.ui.containers.IVirtualContainer"] = haxe_ui_containers_IVirtualContainer;
haxe_ui_containers_IVirtualContainer.__name__ = "haxe.ui.containers.IVirtualContainer";
haxe_ui_containers_IVirtualContainer.__isInterface__ = true;
haxe_ui_containers_IVirtualContainer.prototype = {
	get_itemWidth: null
	,set_itemWidth: null
	,get_itemHeight: null
	,set_itemHeight: null
	,get_itemCount: null
	,set_itemCount: null
	,get_variableItemSize: null
	,set_variableItemSize: null
	,get_virtual: null
	,set_virtual: null
	,get_hscrollPos: null
	,set_hscrollPos: null
	,get_hscrollMax: null
	,set_hscrollMax: null
	,get_hscrollPageSize: null
	,set_hscrollPageSize: null
	,get_vscrollPos: null
	,set_vscrollPos: null
	,get_vscrollMax: null
	,set_vscrollMax: null
	,get_vscrollPageSize: null
	,set_vscrollPageSize: null
	,get_itemRenderer: null
	,set_itemRenderer: null
	,get_itemRendererClass: null
	,set_itemRendererClass: null
	,__class__: haxe_ui_containers_IVirtualContainer
	,__properties__: {set_itemRendererClass:"set_itemRendererClass",get_itemRendererClass:"get_itemRendererClass",set_itemRenderer:"set_itemRenderer",get_itemRenderer:"get_itemRenderer",set_vscrollPageSize:"set_vscrollPageSize",get_vscrollPageSize:"get_vscrollPageSize",set_vscrollMax:"set_vscrollMax",get_vscrollMax:"get_vscrollMax",set_vscrollPos:"set_vscrollPos",get_vscrollPos:"get_vscrollPos",set_hscrollPageSize:"set_hscrollPageSize",get_hscrollPageSize:"get_hscrollPageSize",set_hscrollMax:"set_hscrollMax",get_hscrollMax:"get_hscrollMax",set_hscrollPos:"set_hscrollPos",get_hscrollPos:"get_hscrollPos",set_virtual:"set_virtual",get_virtual:"get_virtual",set_variableItemSize:"set_variableItemSize",get_variableItemSize:"get_variableItemSize",set_itemCount:"set_itemCount",get_itemCount:"get_itemCount",set_itemHeight:"set_itemHeight",get_itemHeight:"get_itemHeight",set_itemWidth:"set_itemWidth",get_itemWidth:"get_itemWidth"}
};
var haxe_ui_containers_ListView = function() {
	haxe_ui_containers_ScrollView.call(this);
};
$hxClasses["haxe.ui.containers.ListView"] = haxe_ui_containers_ListView;
haxe_ui_containers_ListView.__name__ = "haxe.ui.containers.ListView";
haxe_ui_containers_ListView.__interfaces__ = [haxe_ui_containers_IVirtualContainer,haxe_ui_core_IDataComponent];
haxe_ui_containers_ListView.__super__ = haxe_ui_containers_ScrollView;
haxe_ui_containers_ListView.prototype = $extend(haxe_ui_containers_ScrollView.prototype,{
	_itemRendererClass: null
	,get_itemRendererClass: function() {
		return this._itemRendererClass;
	}
	,set_itemRendererClass: function(value) {
		if(this._itemRendererClass != value) {
			this._itemRendererClass = value;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,_itemRenderer: null
	,get_itemRenderer: function() {
		return this._itemRenderer;
	}
	,set_itemRenderer: function(value) {
		if(this._itemRenderer != value) {
			this._itemRenderer = value;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,registerComposite: function() {
		haxe_ui_containers_ScrollView.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_ListViewEvents;
		this._compositeBuilderClass = haxe_ui_containers__$ListView_ListViewBuilder;
		this._defaultLayoutClass = haxe_ui_layouts_VerticalVirtualLayout;
	}
	,_internal__onComponentEvent: null
	,onComponentEvent: null
	,set_onComponentEvent: function(value) {
		if(this._internal__onComponentEvent != null) {
			this.unregisterEvent("itemcomponentevent",this._internal__onComponentEvent);
			this._internal__onComponentEvent = null;
		}
		if(value != null) {
			this._internal__onComponentEvent = value;
			this.registerEvent("itemcomponentevent",value);
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_ScrollView.prototype.registerBehaviours.call(this);
		this.behaviours.register("dataSource",haxe_ui_containers__$ListView_DataSourceBehaviour);
		this.behaviours.register("itemWidth",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("itemHeight",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("itemCount",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("variableItemSize",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("selectedIndex",haxe_ui_containers__$ListView_SelectedIndexBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedItem",haxe_ui_containers__$ListView_SelectedItemBehaviour);
		this.behaviours.register("selectedIndices",haxe_ui_containers__$ListView_SelectedIndicesBehaviour);
		this.behaviours.register("selectedItems",haxe_ui_containers__$ListView_SelectedItemsBehaviour);
		this.behaviours.register("selectionMode",haxe_ui_containers__$ListView_SelectionModeBehaviour,haxe_ui_util_Variant.fromString("one-item"));
		this.behaviours.register("longPressSelectionTime",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(500));
	}
	,get_dataSource: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDataSource(this.behaviours.get("dataSource"));
	}
	,set_dataSource: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dataSource",haxe_ui_util_Variant.fromDataSource(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"dataSource"));
		return value;
	}
	,get_itemWidth: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("itemWidth"));
	}
	,set_itemWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("itemWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"itemWidth"));
		return value;
	}
	,get_itemHeight: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("itemHeight"));
	}
	,set_itemHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("itemHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"itemHeight"));
		return value;
	}
	,get_itemCount: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("itemCount"));
	}
	,set_itemCount: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("itemCount",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"itemCount"));
		return value;
	}
	,get_variableItemSize: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("variableItemSize"));
	}
	,set_variableItemSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("variableItemSize",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"variableItemSize"));
		return value;
	}
	,get_selectedIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedIndex"));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,get_selectedItem: function() {
		return this.behaviours.getDynamic("selectedItem");
	}
	,set_selectedItem: function(value) {
		this.behaviours.setDynamic("selectedItem",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedItem"));
		return value;
	}
	,get_selectedIndices: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toArray(this.behaviours.get("selectedIndices"));
	}
	,set_selectedIndices: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedIndices",haxe_ui_util_Variant.fromArray(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedIndices"));
		return value;
	}
	,get_selectedItems: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toArray(this.behaviours.get("selectedItems"));
	}
	,set_selectedItems: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedItems",haxe_ui_util_Variant.fromArray(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedItems"));
		return value;
	}
	,get_selectionMode: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("selectionMode"));
	}
	,set_selectionMode: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectionMode",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectionMode"));
		return value;
	}
	,get_longPressSelectionTime: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("longPressSelectionTime"));
	}
	,set_longPressSelectionTime: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("longPressSelectionTime",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"longPressSelectionTime"));
		return value;
	}
	,get_value: function() {
		return this.get_selectedIndex();
	}
	,set_value: function(value) {
		this.set_selectedIndex(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ScrollView.prototype.cloneComponent.call(this);
		if(this.get_itemRendererClass() != null) {
			c.set_itemRendererClass(this.get_itemRendererClass());
		}
		if(this.get_itemRenderer() != null) {
			c.set_itemRenderer(this.get_itemRenderer());
		}
		if(this.get_dataSource() != null) {
			c.set_dataSource(this.get_dataSource());
		}
		c.set_itemWidth(this.get_itemWidth());
		c.set_itemHeight(this.get_itemHeight());
		c.set_itemCount(this.get_itemCount());
		c.set_variableItemSize(this.get_variableItemSize());
		c.set_selectedIndex(this.get_selectedIndex());
		if(this.get_selectedItem() != null) {
			c.set_selectedItem(this.get_selectedItem());
		}
		if(this.get_selectedIndices() != null) {
			c.set_selectedIndices(this.get_selectedIndices());
		}
		if(this.get_selectedItems() != null) {
			c.set_selectedItems(this.get_selectedItems());
		}
		if(this.get_selectionMode() != null) {
			c.set_selectionMode(this.get_selectionMode());
		}
		c.set_longPressSelectionTime(this.get_longPressSelectionTime());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_ListView();
	}
	,__class__: haxe_ui_containers_ListView
	,__properties__: $extend(haxe_ui_containers_ScrollView.prototype.__properties__,{set_longPressSelectionTime:"set_longPressSelectionTime",get_longPressSelectionTime:"get_longPressSelectionTime",set_selectionMode:"set_selectionMode",get_selectionMode:"get_selectionMode",set_selectedItems:"set_selectedItems",get_selectedItems:"get_selectedItems",set_selectedIndices:"set_selectedIndices",get_selectedIndices:"get_selectedIndices",set_selectedItem:"set_selectedItem",get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",set_variableItemSize:"set_variableItemSize",get_variableItemSize:"get_variableItemSize",set_itemCount:"set_itemCount",get_itemCount:"get_itemCount",set_itemHeight:"set_itemHeight",get_itemHeight:"get_itemHeight",set_itemWidth:"set_itemWidth",get_itemWidth:"get_itemWidth",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource",set_onComponentEvent:"set_onComponentEvent",set_itemRenderer:"set_itemRenderer",get_itemRenderer:"get_itemRenderer",set_itemRendererClass:"set_itemRendererClass",get_itemRendererClass:"get_itemRendererClass"})
});
var gfx_profile_complex_$components_GamesList = function(profileOwnerLogin,preloadedGames,onGameSelected) {
	this.loadedGames = new haxe_ds_IntMap();
	haxe_ui_containers_ListView.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        #thisList {\r\n            border: 1px solid #aaaaaa;\r\n            background-color: #f6f6f6;\r\n            padding: 4px;\r\n        }\r\n\r\n        #thisList .listview-contents {\r\n            spacing: 10px;\r\n            background-opacity: 0;\r\n        }\r\n\r\n        #thisList .even {\r\n            background-opacity: 0;\r\n        }\r\n\r\n        #thisList .even:hover {\r\n            background-opacity: 0;\r\n        }\r\n\r\n        #thisList .odd {\r\n            background-opacity: 0;\r\n        }\r\n\r\n        #thisList .odd:hover {\r\n            background-opacity: 0;\r\n        }\r\n\r\n        #thisList .listview-contents > .itemrenderer {\r\n            padding: 0px;\r\n        }\r\n    ","user");
	this.set_id("thisList");
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.set_percentContentWidth(100.);
	this.bindingRoot = true;
	this.profileOwnerLogin = profileOwnerLogin;
	this.onGameSelected = onGameSelected;
	this.addComponent(new gfx_common_GameWidget());
	this.appendGames(preloadedGames);
};
$hxClasses["gfx.profile.complex_components.GamesList"] = gfx_profile_complex_$components_GamesList;
gfx_profile_complex_$components_GamesList.__name__ = "gfx.profile.complex_components.GamesList";
gfx_profile_complex_$components_GamesList.__super__ = haxe_ui_containers_ListView;
gfx_profile_complex_$components_GamesList.prototype = $extend(haxe_ui_containers_ListView.prototype,{
	loadedGames: null
	,profileOwnerLogin: null
	,onGameSelected: null
	,get_loadedGamesCount: function() {
		return Lambda.count(this.loadedGames);
	}
	,onGameClicked: function(id) {
		this.onGameSelected(this.loadedGames.h[id]);
	}
	,appendGames: function(games) {
		var _g = 0;
		while(_g < games.length) {
			var info = games[_g];
			++_g;
			var gameWidgetData = { info : info, onClicked : (function(_g,id) {
				return function() {
					_g[0](id[0]);
				};
			})([$bind(this,this.onGameClicked)],[info.id]), watchedLogin : this.profileOwnerLogin};
			this.get_dataSource().add(gameWidgetData);
			this.loadedGames.h[info.id] = info;
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_ListView.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ListView.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_profileOwnerLogin: null
	,_constructorParam_preloadedGames: null
	,_constructorParam_onGameSelected: null
	,self: function() {
		return new gfx_profile_complex_$components_GamesList(this._constructorParam_profileOwnerLogin,this._constructorParam_preloadedGames,this._constructorParam_onGameSelected);
	}
	,__class__: gfx_profile_complex_$components_GamesList
	,__properties__: $extend(haxe_ui_containers_ListView.prototype.__properties__,{get_loadedGamesCount:"get_loadedGamesCount"})
});
var gfx_profile_complex_$components_MiniProfile = function(username,data) {
	gfx_basic_$components_BaseDialog.call(this,null,false);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        .mini-profile-button .icon {\r\n            width: 25px;\r\n            height: 25px;\r\n        }\r\n        #usernameLabel {\r\n            font-size: 16px;\r\n        }\r\n        #statusLabel {\r\n            font-size: 14px;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_containers_VBox();
	c0.set_id("contentsBox");
	c0.set_percentWidth(100.);
	var c1 = new haxe_ui_components_Label();
	c1.set_id("usernameLabel");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_Label();
	c2.set_id("statusLabel");
	c0.addComponent(c2);
	var c3 = new haxe_ui_containers_HBox();
	c3.set_id("elosBox");
	c3.set_percentWidth(100.);
	c3.set_continuous(true);
	c0.addComponent(c3);
	var c4 = new haxe_ui_containers_HBox();
	c4.set_id("btnBar");
	c4.set_horizontalAlign("right");
	var c5 = new haxe_ui_components_Button();
	c5.set_id("followBtn");
	c5.set_width(40.);
	c5.set_styleNames("mini-profile-button");
	c5.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/common/mini_profile/follow.svg"));
	c4.addComponent(c5);
	var c6 = new haxe_ui_components_Button();
	c6.set_id("unfollowBtn");
	c6.set_width(40.);
	c6.set_styleNames("mini-profile-button");
	c6.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/common/mini_profile/unfollow.svg"));
	c4.addComponent(c6);
	var c7 = new haxe_ui_components_Button();
	c7.set_id("friendBtn");
	c7.set_width(40.);
	c7.set_styleNames("mini-profile-button");
	c7.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/common/mini_profile/friend.svg"));
	c4.addComponent(c7);
	var c8 = new haxe_ui_components_Button();
	c8.set_id("unfriendBtn");
	c8.set_width(40.);
	c8.set_styleNames("mini-profile-button");
	c8.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/common/mini_profile/unfriend.svg"));
	c4.addComponent(c8);
	var c9 = new haxe_ui_components_Button();
	c9.set_id("challengeBtn");
	c9.set_width(40.);
	c9.set_styleNames("mini-profile-button");
	c9.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/common/mini_profile/challenge.svg"));
	c4.addComponent(c9);
	var c10 = new haxe_ui_components_Button();
	c10.set_id("toProfileBtn");
	c10.set_width(40.);
	c10.set_styleNames("mini-profile-button");
	c10.set_icon(haxe_ui_util_Variant.fromString("assets/symbols/common/mini_profile/to_profile.svg"));
	c4.addComponent(c10);
	c0.addComponent(c4);
	this.addComponent(c0);
	this.bindingRoot = true;
	this.usernameLabel = c1;
	this.unfriendBtn = c8;
	this.unfollowBtn = c6;
	this.toProfileBtn = c10;
	this.statusLabel = c2;
	this.friendBtn = c7;
	this.followBtn = c5;
	this.elosBox = c3;
	this.contentsBox = c0;
	this.challengeBtn = c9;
	this.btnBar = c4;
	c5.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.MINIPROFILE_FOLLOW_BTN_TOOLTIP));
	c6.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.MINIPROFILE_UNFOLLOW_BTN_TOOLTIP));
	c7.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.MINIPROFILE_FRIEND_BTN_TOOLTIP));
	c8.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.MINIPROFILE_UNFRIEND_BTN_TOOLTIP));
	c9.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.MINIPROFILE_CHALLENGE_BTN_TOOLTIP));
	c10.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.MINIPROFILE_TO_PROFILE_BTN_TOOLTIP));
	this.username = username;
	this.set_title(dict_Dictionary.getPhrase(dict_Phrase.MINIPROFILE_DIALOG_TITLE(username)));
	this.usernameLabel.set_text(username.charAt(0).toUpperCase() + HxOverrides.substr(username,1,null).toLowerCase());
	gfx_profile_Utils.updateStatusLabel(this.statusLabel,data.status);
	var tree = new haxe_ds_BalancedTree();
	var map = data.gamesCntByTimeControl;
	var _g_map = map;
	var _g_keys = map.keys();
	while(_g_keys.hasNext()) {
		var key = _g_keys.next();
		var _g1_value = _g_map.get(key);
		var _g1_key = key;
		var tc = _g1_key;
		var gamesCnt = _g1_value;
		var key1 = this.eloOrdinalNumber(gamesCnt,tc);
		var data1 = { timeControl : tc, elo : data.elo.get(tc)};
		tree.set(key1,data1);
	}
	var data1 = tree.iterator();
	while(data1.hasNext()) {
		var data2 = data1.next();
		this.elosBox.addComponent(new gfx_profile_simple_$components_TCEloEntry(data2));
	}
	if(FollowManager.getFollowedPlayerLogin() == username) {
		this.followBtn.set_hidden(true);
	} else {
		this.unfollowBtn.set_hidden(true);
	}
	if(!LoginManager.isLogged() || LoginManager.isPlayer(username)) {
		this.friendBtn.set_hidden(true);
		this.unfriendBtn.set_hidden(true);
		this.followBtn.set_hidden(true);
		this.unfollowBtn.set_hidden(true);
		this.challengeBtn.set_hidden(true);
	} else if(data.isFriend) {
		this.friendBtn.set_hidden(true);
	} else {
		this.unfriendBtn.set_hidden(true);
	}
	if(gfx_SceneManager.playerInGame()) {
		this.btnBar.set_disabled(true);
	}
	var c = this.followBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onFollowPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "followBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.complex_components.MiniProfile", methodName : "new"});
	}
	var c = this.unfollowBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onUnfollowPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "unfollowBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.complex_components.MiniProfile", methodName : "new"});
	}
	var c = this.friendBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onFriendPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "friendBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.complex_components.MiniProfile", methodName : "new"});
	}
	var c = this.unfriendBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onUnfriendPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "unfriendBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.complex_components.MiniProfile", methodName : "new"});
	}
	var c = this.challengeBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onChallengePressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "challengeBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.complex_components.MiniProfile", methodName : "new"});
	}
	var c = this.toProfileBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onToProfilePressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "toProfileBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.complex_components.MiniProfile", methodName : "new"});
	}
};
$hxClasses["gfx.profile.complex_components.MiniProfile"] = gfx_profile_complex_$components_MiniProfile;
gfx_profile_complex_$components_MiniProfile.__name__ = "gfx.profile.complex_components.MiniProfile";
gfx_profile_complex_$components_MiniProfile.__super__ = gfx_basic_$components_BaseDialog;
gfx_profile_complex_$components_MiniProfile.prototype = $extend(gfx_basic_$components_BaseDialog.prototype,{
	username: null
	,resize: function() {
		this.set_width(Math.min(400,haxe_ui_core_Screen.get_instance().get_actualWidth() * 0.98));
	}
	,onClose: function(btn) {
	}
	,eloOrdinalNumber: function(gamesCnt,tc) {
		return -(gamesCnt + 0.1 * tc._hx_index);
	}
	,onFollowPressed: function(e) {
		this.hideDialog(null);
		FollowManager.followPlayer(this.username);
	}
	,onUnfollowPressed: function(e) {
		this.hideDialog(null);
		FollowManager.stopFollowing();
	}
	,onFriendPressed: function(e) {
		this.hideDialog(null);
		Networker.emitEvent(net_shared_ClientEvent.AddFriend(this.username));
	}
	,onUnfriendPressed: function(e) {
		this.hideDialog(null);
		Networker.emitEvent(net_shared_ClientEvent.RemoveFriend(this.username));
	}
	,onChallengePressed: function(e) {
		this.hideDialog(null);
		gfx_Dialogs.getQueue().add(new gfx_popups_ChallengeParamsDialog(struct_ChallengeParams.directChallengeParams(this.username)));
	}
	,onToProfilePressed: function(e) {
		this.hideDialog(null);
		net_Requests.getPlayerProfile(this.username);
	}
	,registerBehaviours: function() {
		gfx_basic_$components_BaseDialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gfx_basic_$components_BaseDialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_username: null
	,_constructorParam_data: null
	,self: function() {
		return new gfx_profile_complex_$components_MiniProfile(this._constructorParam_username,this._constructorParam_data);
	}
	,usernameLabel: null
	,unfriendBtn: null
	,unfollowBtn: null
	,toProfileBtn: null
	,statusLabel: null
	,friendBtn: null
	,followBtn: null
	,elosBox: null
	,contentsBox: null
	,challengeBtn: null
	,btnBar: null
	,__class__: gfx_profile_complex_$components_MiniProfile
});
var gfx_profile_complex_$components_OngoingGamesTab = function(profileOwnerLogin,gamesInProgress) {
	haxe_ui_containers_VBox.call(this);
	this.set_percentWidth(100);
	this.set_percentHeight(100);
	this.set_text(dict_Dictionary.getPhrase(dict_Phrase.PROFILE_ONGOING_MATCHES_TAB_TITLE));
	this.profileOwnerLogin = profileOwnerLogin;
	this.reloadBtn = new haxe_ui_components_Button();
	this.reloadBtn.set_text(dict_Dictionary.getPhrase(dict_Phrase.PROFILE_ONGOING_RELOAD_BTN_TEXT));
	this.reloadBtn.set_horizontalAlign("center");
	this.reloadBtn.set_onClick($bind(this,this.onReloadPressed));
	this.addComponent(this.reloadBtn);
	this.list = new gfx_profile_complex_$components_GamesList(profileOwnerLogin,gamesInProgress,$bind(this,this.onGameClicked));
	this.addComponent(this.list);
};
$hxClasses["gfx.profile.complex_components.OngoingGamesTab"] = gfx_profile_complex_$components_OngoingGamesTab;
gfx_profile_complex_$components_OngoingGamesTab.__name__ = "gfx.profile.complex_components.OngoingGamesTab";
gfx_profile_complex_$components_OngoingGamesTab.__super__ = haxe_ui_containers_VBox;
gfx_profile_complex_$components_OngoingGamesTab.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	reloadBtn: null
	,list: null
	,profileOwnerLogin: null
	,onGameClicked: function(info) {
		net_Requests.getGame(info.id);
	}
	,onGamesLoaded: function(games,hasNext) {
		this.reloadBtn.set_disabled(false);
		this.list.get_dataSource().clear();
		this.list.appendGames(games);
	}
	,onReloadPressed: function(e) {
		this.reloadBtn.set_disabled(true);
		net_Requests.getPlayerOngoingGames(this.profileOwnerLogin,$bind(this,this.onGamesLoaded));
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_profileOwnerLogin: null
	,_constructorParam_gamesInProgress: null
	,self: function() {
		return new gfx_profile_complex_$components_OngoingGamesTab(this._constructorParam_profileOwnerLogin,this._constructorParam_gamesInProgress);
	}
	,__class__: gfx_profile_complex_$components_OngoingGamesTab
});
var gfx_profile_complex_$components_PastGamesTab = function(profileOwnerLogin,preloadedGames,elo,gamesCntByTimeControl,totalPastGames) {
	this.canLoad = true;
	var _gthis = this;
	haxe_ui_containers_VBox.call(this);
	this.set_percentWidth(100);
	this.set_percentHeight(100);
	this.set_text(dict_Dictionary.getPhrase(dict_Phrase.PROFILE_GAMES_TAB_TITLE));
	this.profileOwnerLogin = profileOwnerLogin;
	this.activeTimeControlFilter = null;
	this.hasNext = preloadedGames.length < totalPastGames;
	this.tcFilterDropdown = new gfx_profile_simple_$components_TimeControlFilterDropdown(elo,gamesCntByTimeControl,totalPastGames,$bind(this,this.onTimeControlFilterChanged));
	this.tcFilterDropdown.set_horizontalAlign("center");
	this.addComponent(this.tcFilterDropdown);
	this.list = new gfx_profile_complex_$components_GamesList(profileOwnerLogin,preloadedGames,$bind(this,this.onGameClicked));
	this.addComponent(this.list);
	this.list.set_onScroll(function(_) {
		_gthis.onScrolled();
	});
};
$hxClasses["gfx.profile.complex_components.PastGamesTab"] = gfx_profile_complex_$components_PastGamesTab;
gfx_profile_complex_$components_PastGamesTab.__name__ = "gfx.profile.complex_components.PastGamesTab";
gfx_profile_complex_$components_PastGamesTab.__super__ = haxe_ui_containers_VBox;
gfx_profile_complex_$components_PastGamesTab.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	tcFilterDropdown: null
	,list: null
	,profileOwnerLogin: null
	,activeTimeControlFilter: null
	,hasNext: null
	,canLoad: null
	,onGameClicked: function(info) {
		var parsedData = serialization_GameLogParser.parse(info.log);
		gfx_SceneManager.toScreen(gfx_ScreenType.LiveGame(info.id,gfx_game_LiveGameConstructor.Past(parsedData,this.profileOwnerLogin)));
	}
	,onTimeControlFilterChanged: function(newValue) {
		this.list.get_dataSource().clear();
		this.activeTimeControlFilter = newValue;
		net_Requests.getPlayerPastGames(this.profileOwnerLogin,0,10,this.activeTimeControlFilter,$bind(this,this.onGamesLoaded));
	}
	,onGamesLoaded: function(games,hasNext) {
		var _gthis = this;
		this.list.appendGames(games);
		this.hasNext = hasNext;
		haxe_Timer.delay(function() {
			_gthis.canLoad = true;
		},100);
	}
	,onScrolled: function() {
		if(this.hasNext && this.canLoad) {
			var loadedCnt = this.list.get_loadedGamesCount();
			if(this.list.get_vscrollPos() * loadedCnt >= this.list.get_vscrollMax() * (loadedCnt - 1)) {
				this.canLoad = false;
				net_Requests.getPlayerPastGames(this.profileOwnerLogin,loadedCnt,10,this.activeTimeControlFilter,$bind(this,this.onGamesLoaded));
			}
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_profileOwnerLogin: null
	,_constructorParam_preloadedGames: null
	,_constructorParam_elo: null
	,_constructorParam_gamesCntByTimeControl: null
	,_constructorParam_totalPastGames: null
	,self: function() {
		return new gfx_profile_complex_$components_PastGamesTab(this._constructorParam_profileOwnerLogin,this._constructorParam_preloadedGames,this._constructorParam_elo,this._constructorParam_gamesCntByTimeControl,this._constructorParam_totalPastGames);
	}
	,__class__: gfx_profile_complex_$components_PastGamesTab
});
var gfx_profile_complex_$components_ProfileHeader = function(username,profileData) {
	haxe_ui_containers_VBox.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        #rolesLabel {\r\n            font-size: 22px;\r\n            font-italic: true;\r\n        }\r\n        #statusLabel {\r\n            font-size: 18px;\r\n        }\r\n        .status-action-btn {\r\n            width: 24px;\r\n            height: 24px;\r\n            background-color: yellow;\r\n            background-opacity: 0;\r\n            pointer-events: true;\r\n        }\r\n        .quick-action-btn {\r\n            width: 30px;\r\n            height: 30px;\r\n            background-color: yellow;\r\n            background-opacity: 0;\r\n            pointer-events: true;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_containers_HBox();
	c0.set_id("upperHBox");
	c0.set_percentWidth(100.);
	var c1 = new haxe_ui_components_Spacer();
	c1.set_percentWidth(100.);
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_Image();
	c2.set_id("addFriendBtn");
	c2.set_styleNames("quick-action-btn");
	c2.set_verticalAlign("center");
	c2.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/common/add_friend.svg"));
	c0.addComponent(c2);
	var c3 = new haxe_ui_components_Image();
	c3.set_id("removeFriendBtn");
	c3.set_styleNames("quick-action-btn");
	c3.set_verticalAlign("center");
	c3.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/common/remove_friend.svg"));
	c0.addComponent(c3);
	this.addComponent(c0);
	var c4 = new haxe_ui_components_Label();
	c4.set_id("rolesLabel");
	this.addComponent(c4);
	var c5 = new haxe_ui_containers_HBox();
	var c6 = new haxe_ui_components_Label();
	c6.set_id("statusLabel");
	c6.set_verticalAlign("center");
	c5.addComponent(c6);
	var c7 = new haxe_ui_components_Image();
	c7.set_id("sendChallengeBtn");
	c7.set_styleNames("status-action-btn");
	c7.set_verticalAlign("center");
	c7.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/common/send.svg"));
	c5.addComponent(c7);
	var c8 = new haxe_ui_components_Image();
	c8.set_id("followBtn");
	c8.set_styleNames("status-action-btn");
	c8.set_verticalAlign("center");
	c8.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/common/follow.svg"));
	c5.addComponent(c8);
	this.addComponent(c5);
	this.set_width(800.);
	this.set_styleString("background-color: #faf9f7; padding: 10 10 10 10");
	this.bindingRoot = true;
	this.upperHBox = c0;
	this.statusLabel = c6;
	this.sendChallengeBtn = c7;
	this.rolesLabel = c4;
	this.removeFriendBtn = c3;
	this.followBtn = c8;
	this.addFriendBtn = c2;
	c2.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.PROFILE_ACTION_ADD_FRIEND_TOOLTIP));
	c3.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.PROFILE_ACTION_REMOVE_FRIEND_TOOLTIP));
	c7.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.PROFILE_QUICK_ACTION_SEND_CHALLENGE_TOOLTIP));
	c8.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.PROFILE_QUICK_ACTION_FOLLOW_TOOLTIP));
	this.username = username;
	this.usernameLabel = new gfx_profile_simple_$components_PlayerLabel(gfx_basic_$components_utils_DimValue.Exact(44),username,profileData.findMainELO(),false);
	this.upperHBox.addComponentAt(this.usernameLabel,0);
	if(Lambda.empty(profileData.roles)) {
		this.rolesLabel.set_hidden(true);
	} else {
		var rolesStr = [];
		var _g = 0;
		var _g1 = profileData.roles;
		while(_g < _g1.length) {
			var role = _g1[_g];
			++_g;
			rolesStr.push(dict_Dictionary.getPhrase(dict_Phrase.PROFILE_ROLE_TEXT(role)));
		}
		this.rolesLabel.set_text(rolesStr.join(", "));
	}
	gfx_profile_Utils.updateStatusLabel(this.statusLabel,profileData.status);
	var _g = profileData.status;
	switch(_g._hx_index) {
	case 0:
		var _g1 = _g.secondsSinceLastAction;
		this.sendChallengeBtn.set_hidden(true);
		this.followBtn.set_hidden(true);
		break;
	case 1:
		this.sendChallengeBtn.set_hidden(LoginManager.isPlayer(username));
		this.followBtn.set_hidden(true);
		break;
	case 2:
		this.sendChallengeBtn.set_hidden(true);
		this.followBtn.set_hidden(LoginManager.isPlayer(username));
		break;
	}
	if(!LoginManager.isLogged() || LoginManager.isPlayer(username)) {
		this.addFriendBtn.set_hidden(true);
		this.removeFriendBtn.set_hidden(true);
	} else if(profileData.isFriend) {
		this.addFriendBtn.set_hidden(true);
	} else {
		this.removeFriendBtn.set_hidden(true);
	}
	var c = this.sendChallengeBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onSendChallengePressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sendChallengeBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.complex_components.ProfileHeader", methodName : "new"});
	}
	var c = this.followBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onFollowPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "followBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.complex_components.ProfileHeader", methodName : "new"});
	}
	var c = this.addFriendBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onAddFriendPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "addFriendBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.complex_components.ProfileHeader", methodName : "new"});
	}
	var c = this.removeFriendBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onRemoveFriendPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "removeFriendBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.complex_components.ProfileHeader", methodName : "new"});
	}
};
$hxClasses["gfx.profile.complex_components.ProfileHeader"] = gfx_profile_complex_$components_ProfileHeader;
gfx_profile_complex_$components_ProfileHeader.__name__ = "gfx.profile.complex_components.ProfileHeader";
gfx_profile_complex_$components_ProfileHeader.__super__ = haxe_ui_containers_VBox;
gfx_profile_complex_$components_ProfileHeader.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	username: null
	,usernameLabel: null
	,addRemoveFriendToggleTimer: null
	,onSendChallengePressed: function(e) {
		gfx_Dialogs.getQueue().add(new gfx_popups_ChallengeParamsDialog(struct_ChallengeParams.directChallengeParams(this.username)));
	}
	,onFollowPressed: function(e) {
		net_Requests.followPlayer(this.username);
	}
	,onAddFriendPressed: function(e) {
		var _gthis = this;
		if(this.addRemoveFriendToggleTimer != null) {
			this.addRemoveFriendToggleTimer.stop();
		}
		this.addFriendBtn.set_hidden(true);
		this.removeFriendBtn.set_disabled(true);
		this.removeFriendBtn.set_hidden(false);
		Networker.emitEvent(net_shared_ClientEvent.AddFriend(this.username));
		this.addRemoveFriendToggleTimer = haxe_Timer.delay(function() {
			_gthis.addRemoveFriendToggleTimer = null;
			_gthis.removeFriendBtn.set_disabled(false);
		},3000);
	}
	,onRemoveFriendPressed: function(e) {
		var _gthis = this;
		if(this.addRemoveFriendToggleTimer != null) {
			this.addRemoveFriendToggleTimer.stop();
		}
		this.removeFriendBtn.set_hidden(true);
		this.addFriendBtn.set_disabled(true);
		this.addFriendBtn.set_hidden(false);
		Networker.emitEvent(net_shared_ClientEvent.RemoveFriend(this.username));
		this.addRemoveFriendToggleTimer = haxe_Timer.delay(function() {
			_gthis.addRemoveFriendToggleTimer = null;
			_gthis.addFriendBtn.set_disabled(false);
		},3000);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_username: null
	,_constructorParam_profileData: null
	,self: function() {
		return new gfx_profile_complex_$components_ProfileHeader(this._constructorParam_username,this._constructorParam_profileData);
	}
	,upperHBox: null
	,statusLabel: null
	,sendChallengeBtn: null
	,rolesLabel: null
	,removeFriendBtn: null
	,followBtn: null
	,addFriendBtn: null
	,__class__: gfx_profile_complex_$components_ProfileHeader
});
var gfx_profile_complex_$components_StudiesTab = function(profileOwner,preloadedStudies,totalStudies) {
	this.loadedStudies = new haxe_ds_IntMap();
	this.activeTags = [];
	haxe_ui_containers_ScrollView.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        #sv {\r\n            border: 1px solid #aaaaaa;\r\n            background-color: #f6f6f6;\r\n            padding: 4px;\r\n        }\r\n        \r\n        #sv .scrollview-contents {\r\n            background-opacity: 0;\r\n            padding: 0px;\r\n            border: none;\r\n        }\r\n        \r\n        #sv:active {\r\n            border: 1px solid #aaaaaa;\r\n        }\r\n\r\n        #studiesList {\r\n            border: none;\r\n            background-opacity: 0;\r\n        }\r\n\r\n        #studiesList .listview-contents {\r\n            spacing: 10px;\r\n            background-opacity: 0;\r\n        }\r\n\r\n        #studiesList .even {\r\n            background-opacity: 0;\r\n        }\r\n\r\n        #studiesList .even:hover {\r\n            background-opacity: 0;\r\n        }\r\n\r\n        #studiesList .odd {\r\n            background-opacity: 0;\r\n        }\r\n\r\n        #studiesList .odd:hover {\r\n            background-opacity: 0;\r\n        }\r\n\r\n        #studiesList .listview-contents > .itemrenderer {\r\n            padding: 0px;\r\n        }\r\n\r\n        #studiesList .listview-contents > .itemrenderer:selected {\r\n            background-opacity: 0;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_containers_ListView();
	c0.set_id("studiesList");
	c0.set_percentWidth(100.);
	c0.set_percentContentWidth(100.);
	c0.set_selectionMode("disabled");
	this.addComponent(c0);
	var c1 = new haxe_ui_components_Button();
	c1.set_id("loadMoreBtn");
	c1.set_horizontalAlign("center");
	this.addComponent(c1);
	this.set_id("sv");
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.set_percentContentWidth(100.);
	this.bindingRoot = true;
	this.studiesList = c0;
	this.loadMoreBtn = c1;
	c1.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.PROFILE_LOAD_MORE_BTN_TEXT)));
	this.set_percentWidth(100);
	this.set_percentHeight(100);
	this.set_text(dict_Dictionary.getPhrase(dict_Phrase.PROFILE_STUDIES_TAB_TITLE));
	this.profileOwner = profileOwner;
	this.studyFilterList = new gfx_profile_complex_$components_StudyFilterList(gfx_basic_$components_utils_DimValue.Percent(100),27,$bind(this,this.onTagFilterAdded),$bind(this,this.onTagFilterRemoved),$bind(this,this.onFiltersCleared),dict_Phrase.PROFILE_TAG_FILTERS_PREPENDER,dict_Phrase.PROFILE_TAG_NO_FILTERS_PLACEHOLDER_TEXT,dict_Phrase.PROFILE_ADD_TAG_FILTER_BTN_TEXT,dict_Phrase.PROFILE_REMOVE_TAG_FILTER_BTN_TOOLTIP,dict_Phrase.PROFILE_CLEAR_TAG_FILTERS_BTN_TEXT,dict_Phrase.PROFILE_TAG_FILTER_PROMPT_QUESTION_TEXT);
	this.addComponentAt(this.studyFilterList,0);
	this.studiesList.addComponent(new gfx_profile_simple_$components_StudyWidget());
	this.appendStudies(preloadedStudies,Lambda.count(preloadedStudies) < totalStudies);
	var c = this.loadMoreBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.loadMore));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "loadMoreBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.complex_components.StudiesTab", methodName : "new"});
	}
};
$hxClasses["gfx.profile.complex_components.StudiesTab"] = gfx_profile_complex_$components_StudiesTab;
gfx_profile_complex_$components_StudiesTab.__name__ = "gfx.profile.complex_components.StudiesTab";
gfx_profile_complex_$components_StudiesTab.__super__ = haxe_ui_containers_ScrollView;
gfx_profile_complex_$components_StudiesTab.prototype = $extend(haxe_ui_containers_ScrollView.prototype,{
	studyFilterList: null
	,profileOwner: null
	,activeTags: null
	,loadedStudies: null
	,onTagFilterAdded: function(tag) {
		this.activeTags.push(tag);
		this.reloadStudies();
	}
	,onTagFilterRemoved: function(tag) {
		HxOverrides.remove(this.activeTags,tag);
		this.reloadStudies();
	}
	,onFiltersCleared: function() {
		this.activeTags = [];
		this.reloadStudies();
	}
	,onTagSelectedFromStudyWidget: function(tag) {
		if(this.activeTags.indexOf(tag) != -1) {
			return;
		}
		this.activeTags.push(tag);
		this.studyFilterList.appendTag(tag);
		this.reloadStudies();
	}
	,onStudyClicked: function(id) {
		var info = this.loadedStudies.h[id];
		gfx_SceneManager.toScreen(gfx_ScreenType.Analysis(info.variantStr,null,new gfx_profile_data_StudyData(id,this.profileOwner,info)));
	}
	,onEditStudyRequested: function(id) {
		var _g = $bind(this,this.onStudyEdited);
		var id1 = id;
		var tmp = function(newParams) {
			_g(id1,newParams);
		};
		gfx_Dialogs.getQueue().add(new gfx_popups_StudyParamsDialog(gfx_popups_StudyParamsDialogMode.Edit(id,this.loadedStudies.h[id],tmp)));
	}
	,onStudyEdited: function(id,newParams) {
		var itemIndex = this.indexOf(id);
		var newWidgetData = this.generateStudyWidgetData(id,newParams);
		this.studiesList.get_dataSource().update(itemIndex,newWidgetData);
		this.loadedStudies.h[id] = newParams;
	}
	,onDeleteStudyRequested: function(id) {
		Networker.emitEvent(net_shared_ClientEvent.DeleteStudy(id));
		this.studiesList.get_dataSource().removeAt(this.indexOf(id));
		this.loadedStudies.remove(id);
	}
	,generateStudyWidgetData: function(id,info) {
		var _g = $bind(this,this.onStudyClicked);
		var id1 = id;
		var tmp = function() {
			_g(id1);
		};
		var _g1 = $bind(this,this.onDeleteStudyRequested);
		var id2 = id;
		var tmp1 = function() {
			_g1(id2);
		};
		var _g2 = $bind(this,this.onEditStudyRequested);
		var id3 = id;
		var tmp2 = function() {
			_g2(id3);
		};
		return { id : id, ownerLogin : this.profileOwner, info : info, onStudyClicked : tmp, onDeletePressed : tmp1, onEditPressed : tmp2, onTagSelected : $bind(this,this.onTagSelectedFromStudyWidget)};
	}
	,appendStudies: function(infos,hasNext) {
		var infoTree = new haxe_ds_BalancedTree();
		var map = infos;
		var _g_map = map;
		var _g_keys = map.keys();
		while(_g_keys.hasNext()) {
			var key = _g_keys.next();
			var _g1_value = _g_map.get(key);
			var _g1_key = key;
			var id = _g1_key;
			var info = _g1_value;
			infoTree.set(-id,info);
		}
		var map = infoTree;
		var _g_map = map;
		var _g_keys = map.keys();
		while(_g_keys.hasNext()) {
			var key = _g_keys.next();
			var _g1_value = _g_map.get(key);
			var _g1_key = key;
			var negID = _g1_key;
			var info = _g1_value;
			var id = -negID;
			var studyWidgetData = this.generateStudyWidgetData(id,info);
			this.studiesList.get_dataSource().add(studyWidgetData);
			this.loadedStudies.h[id] = info;
		}
		this.loadMoreBtn.set_hidden(!hasNext);
		this.loadMoreBtn.set_disabled(false);
	}
	,reloadStudies: function() {
		this.studiesList.get_dataSource().clear();
		this.loadedStudies = new haxe_ds_IntMap();
		this.loadMore();
	}
	,loadMore: function(e) {
		this.loadMoreBtn.set_disabled(true);
		net_Requests.getPlayerStudies(this.profileOwner,Lambda.count(this.loadedStudies),10,this.activeTags,$bind(this,this.appendStudies));
	}
	,indexOf: function(id) {
		var _g = 0;
		var _g1 = this.studiesList.get_dataSource().get_size();
		while(_g < _g1) {
			var i = _g++;
			var element = this.studiesList.get_dataSource().get(i);
			if(element.id == id) {
				return i;
			}
		}
		return -1;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_ScrollView.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ScrollView.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_profileOwner: null
	,_constructorParam_preloadedStudies: null
	,_constructorParam_totalStudies: null
	,self: function() {
		return new gfx_profile_complex_$components_StudiesTab(this._constructorParam_profileOwner,this._constructorParam_preloadedStudies,this._constructorParam_totalStudies);
	}
	,studiesList: null
	,loadMoreBtn: null
	,__class__: gfx_profile_complex_$components_StudiesTab
});
var gfx_profile_complex_$components_StudyFilterList = function(w,contentHeight,onTagAdded,onTagRemoved,onTagsCleared,prepender,noTagsPlaceholder,addTag,removeTag,clear,promptQuestion) {
	this.tagRects = new haxe_ds_StringMap();
	haxe_ui_containers_ScrollView.call(this);
	this.promptQuestion = promptQuestion;
	this.removeTagTooltip = removeTag;
	this.onTagAdded = onTagAdded;
	this.onTagRemoved = onTagRemoved;
	this.onTagsCleared = onTagsCleared;
	this.set_contentLayoutName("horizontal");
	this.set_contentHeight(contentHeight);
	gfx_basic_$components_utils_DimValue_assignWidth(this,w);
	var titleLabel = new gfx_basic_$components_AutosizingLabel();
	titleLabel.set_text(dict_Dictionary.getPhrase(prepender));
	titleLabel.set_percentHeight(100);
	this.addComponent(titleLabel);
	this.noneLabel = new gfx_basic_$components_AutosizingLabel();
	this.noneLabel.set_text(dict_Dictionary.getPhrase(noTagsPlaceholder));
	this.noneLabel.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,10066329,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,true,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
	this.noneLabel.set_percentHeight(100);
	this.addComponent(this.noneLabel);
	this.tagBox = new haxe_ui_containers_HBox();
	this.tagBox.set_percentHeight(100);
	this.addComponent(this.tagBox);
	var addNewTagLink = new gfx_basic_$components_AutosizingLabel();
	addNewTagLink.set_percentHeight(100);
	addNewTagLink.set_text(dict_Dictionary.getPhrase(addTag));
	addNewTagLink.set_styleNames("link");
	addNewTagLink.set_onClick($bind(this,this.onAddNewTagPressed));
	this.addComponent(addNewTagLink);
	var clearTagsLink = new gfx_basic_$components_AutosizingLabel();
	clearTagsLink.set_percentHeight(100);
	clearTagsLink.set_text(dict_Dictionary.getPhrase(clear));
	clearTagsLink.set_styleNames("link");
	clearTagsLink.set_onClick($bind(this,this.onClearTagsPressed));
	this.addComponent(clearTagsLink);
};
$hxClasses["gfx.profile.complex_components.StudyFilterList"] = gfx_profile_complex_$components_StudyFilterList;
gfx_profile_complex_$components_StudyFilterList.__name__ = "gfx.profile.complex_components.StudyFilterList";
gfx_profile_complex_$components_StudyFilterList.__super__ = haxe_ui_containers_ScrollView;
gfx_profile_complex_$components_StudyFilterList.prototype = $extend(haxe_ui_containers_ScrollView.prototype,{
	onTagAdded: null
	,onTagRemoved: null
	,onTagsCleared: null
	,tagRects: null
	,noneLabel: null
	,tagBox: null
	,removeTagTooltip: null
	,promptQuestion: null
	,appendTag: function(name) {
		this.addTag(name,true);
	}
	,addTag: function(name,ignoreCallback) {
		name = utils_StringUtils.shorten(name,15,false);
		name = StringTools.trim(name);
		if(Object.prototype.hasOwnProperty.call(this.tagRects.h,name)) {
			return;
		}
		this.noneLabel.set_hidden(true);
		var _g = $bind(this,this.removeTag);
		var name1 = name;
		var rect = new gfx_profile_simple_$components_StudyFilterRect(gfx_basic_$components_utils_DimValue.Percent(100),name,function() {
			_g(name1);
		},this.removeTagTooltip);
		this.tagBox.addComponent(rect);
		this.tagRects.h[name] = rect;
		if(!ignoreCallback) {
			this.onTagAdded(name);
		}
	}
	,removeTag: function(name) {
		this.tagBox.removeComponent(this.tagRects.h[name]);
		var _this = this.tagRects;
		if(Object.prototype.hasOwnProperty.call(_this.h,name)) {
			delete(_this.h[name]);
		}
		if(Lambda.empty(this.tagRects)) {
			this.noneLabel.set_hidden(false);
		}
		this.onTagRemoved(name);
	}
	,onAddNewTagPressed: function(e) {
		var _g = $bind(this,this.addTag);
		var ignoreCallback = false;
		var tmp = function(name) {
			_g(name,ignoreCallback);
		};
		gfx_Dialogs.prompt(this.promptQuestion,gfx_SpaceRemoval.None,tmp);
	}
	,onClearTagsPressed: function(e) {
		this.noneLabel.set_hidden(false);
		this.tagRects = new haxe_ds_StringMap();
		this.tagBox.removeAllComponents();
		this.onTagsCleared();
	}
	,registerBehaviours: function() {
		haxe_ui_containers_ScrollView.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ScrollView.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_w: null
	,_constructorParam_contentHeight: null
	,_constructorParam_onTagAdded: null
	,_constructorParam_onTagRemoved: null
	,_constructorParam_onTagsCleared: null
	,_constructorParam_prepender: null
	,_constructorParam_noTagsPlaceholder: null
	,_constructorParam_addTag: null
	,_constructorParam_removeTag: null
	,_constructorParam_clear: null
	,_constructorParam_promptQuestion: null
	,self: function() {
		return new gfx_profile_complex_$components_StudyFilterList(this._constructorParam_w,this._constructorParam_contentHeight,this._constructorParam_onTagAdded,this._constructorParam_onTagRemoved,this._constructorParam_onTagsCleared,this._constructorParam_prepender,this._constructorParam_noTagsPlaceholder,this._constructorParam_addTag,this._constructorParam_removeTag,this._constructorParam_clear,this._constructorParam_promptQuestion);
	}
	,__class__: gfx_profile_complex_$components_StudyFilterList
});
var gfx_profile_complex_$components_StudyTagList = function(w,contentHeight,tags,onTagClicked) {
	haxe_ui_containers_ScrollView.call(this);
	this.set_contentLayoutName("horizontal");
	this.set_contentHeight(contentHeight);
	gfx_basic_$components_utils_DimValue_assignWidth(this,w);
	var titleLabel = new gfx_basic_$components_AutosizingLabel();
	titleLabel.set_text(dict_Dictionary.getPhrase(dict_Phrase.PROFILE_STUDY_TAG_LABELS_PREPENDER));
	titleLabel.set_percentHeight(100);
	this.addComponent(titleLabel);
	if(Lambda.empty(tags)) {
		var noneLabel = new gfx_basic_$components_AutosizingLabel();
		noneLabel.set_text(dict_Dictionary.getPhrase(dict_Phrase.PROFILE_STUDY_NO_TAGS_PLACEHOLDER));
		noneLabel.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,10066329,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,true,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
		noneLabel.set_percentHeight(100);
		this.addComponent(noneLabel);
	}
	var _g = 0;
	while(_g < tags.length) {
		var tag = tags[_g];
		++_g;
		this.addComponent(new gfx_profile_simple_$components_StudyTagLabel(gfx_basic_$components_utils_DimValue.Percent(100),tag,(function(_g,a1) {
			return function() {
				_g[0](a1[0]);
			};
		})([onTagClicked],[tag])));
	}
};
$hxClasses["gfx.profile.complex_components.StudyTagList"] = gfx_profile_complex_$components_StudyTagList;
gfx_profile_complex_$components_StudyTagList.__name__ = "gfx.profile.complex_components.StudyTagList";
gfx_profile_complex_$components_StudyTagList.__super__ = haxe_ui_containers_ScrollView;
gfx_profile_complex_$components_StudyTagList.prototype = $extend(haxe_ui_containers_ScrollView.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_ScrollView.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ScrollView.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_w: null
	,_constructorParam_contentHeight: null
	,_constructorParam_tags: null
	,_constructorParam_onTagClicked: null
	,self: function() {
		return new gfx_profile_complex_$components_StudyTagList(this._constructorParam_w,this._constructorParam_contentHeight,this._constructorParam_tags,this._constructorParam_onTagClicked);
	}
	,__class__: gfx_profile_complex_$components_StudyTagList
});
var gfx_profile_data_StudyData = function(id,ownerLogin,info) {
	this.id = id;
	this.ownerLogin = ownerLogin;
	this.info = info;
};
$hxClasses["gfx.profile.data.StudyData"] = gfx_profile_data_StudyData;
gfx_profile_data_StudyData.__name__ = "gfx.profile.data.StudyData";
gfx_profile_data_StudyData.prototype = {
	id: null
	,ownerLogin: null
	,info: null
	,__class__: gfx_profile_data_StudyData
};
var gfx_profile_simple_$components_FriendListEntry = function(data) {
	gfx_basic_$components_GenAnnotatedImage.call(this,data,gfx_basic_$components_utils_DimValue.Auto,gfx_basic_$components_utils_DimValue.Percent(100),0.08,0.35,false);
	this.playerLogin = data.login;
	this.lbl.enablePointerEvents();
	var c = this.lbl;
	if(c != null) {
		c.registerEvent("mouseover",$bind(this,this.onHover));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "lbl" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.simple_components.FriendListEntry", methodName : "new"});
	}
	var c = this.lbl;
	if(c != null) {
		c.registerEvent("mouseout",$bind(this,this.onOut));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "lbl" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.simple_components.FriendListEntry", methodName : "new"});
	}
	var c = this.lbl;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onClicked));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "lbl" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.simple_components.FriendListEntry", methodName : "new"});
	}
};
$hxClasses["gfx.profile.simple_components.FriendListEntry"] = gfx_profile_simple_$components_FriendListEntry;
gfx_profile_simple_$components_FriendListEntry.__name__ = "gfx.profile.simple_components.FriendListEntry";
gfx_profile_simple_$components_FriendListEntry.__super__ = gfx_basic_$components_GenAnnotatedImage;
gfx_profile_simple_$components_FriendListEntry.prototype = $extend(gfx_basic_$components_GenAnnotatedImage.prototype,{
	playerLogin: null
	,generateLabelText: function(data) {
		var str = data.login;
		return str.charAt(0).toUpperCase() + HxOverrides.substr(str,1,null).toLowerCase();
	}
	,generateImagePath: function(data) {
		var status = data.status;
		return "assets/symbols/profile/user_status_indicators/" + $hxEnums[status.__enum__].__constructs__[status._hx_index]._hx_name.toLowerCase() + ".svg";
	}
	,generateImageTooltip: function(data) {
		return dict_Utils.getUserStatusText(data.status);
	}
	,onHover: function(e) {
		this.lbl.setFontBold(true);
	}
	,onOut: function(e) {
		this.lbl.setFontBold(false);
	}
	,onClicked: function(e) {
		net_Requests.getMiniProfile(this.playerLogin);
	}
	,registerBehaviours: function() {
		gfx_basic_$components_GenAnnotatedImage.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gfx_basic_$components_GenAnnotatedImage.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_data: null
	,self: function() {
		return new gfx_profile_simple_$components_FriendListEntry(this._constructorParam_data);
	}
	,__class__: gfx_profile_simple_$components_FriendListEntry
});
var gfx_profile_simple_$components_PlayerLabel = function(height,playerRef,displayedELO,interactive) {
	haxe_ui_containers_HBox.call(this);
	var c0 = new gfx_basic_$components_AutosizingLabel();
	c0.set_id("lbl");
	c0.set_percentHeight(100.);
	this.addComponent(c0);
	this.bindingRoot = true;
	this.lbl = c0;
	this.playerRef = playerRef;
	gfx_basic_$components_utils_DimValue_assignHeight(this,height);
	var displayedName = dict_Utils.playerRef(playerRef);
	if(displayedELO != null) {
		var displayedELOStr;
		switch(displayedELO._hx_index) {
		case 0:
			displayedELOStr = "−";
			break;
		case 1:
			var elo = displayedELO.elo;
			displayedELOStr = "" + elo + "?";
			break;
		case 2:
			var elo = displayedELO.elo;
			displayedELOStr = "" + elo;
			break;
		}
		this.lbl.set_text("" + displayedName + " (" + displayedELOStr + ")");
	} else {
		this.lbl.set_text("" + displayedName);
	}
	if(interactive && playerRef.charAt(0) != "_") {
		this.lbl.enablePointerEvents();
	}
	var c = this.lbl;
	if(c != null) {
		c.registerEvent("mouseover",$bind(this,this.onHover));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "lbl" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.simple_components.PlayerLabel", methodName : "new"});
	}
	var c = this.lbl;
	if(c != null) {
		c.registerEvent("mouseout",$bind(this,this.onOut));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "lbl" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.simple_components.PlayerLabel", methodName : "new"});
	}
	var c = this.lbl;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onClicked));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "lbl" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.simple_components.PlayerLabel", methodName : "new"});
	}
};
$hxClasses["gfx.profile.simple_components.PlayerLabel"] = gfx_profile_simple_$components_PlayerLabel;
gfx_profile_simple_$components_PlayerLabel.__name__ = "gfx.profile.simple_components.PlayerLabel";
gfx_profile_simple_$components_PlayerLabel.__super__ = haxe_ui_containers_HBox;
gfx_profile_simple_$components_PlayerLabel.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	playerRef: null
	,onHover: function(e) {
		this.lbl.setFontBold(true);
	}
	,onOut: function(e) {
		this.lbl.setFontBold(false);
	}
	,onClicked: function(e) {
		net_Requests.getMiniProfile(this.playerRef);
	}
	,lbl: null
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_height: null
	,_constructorParam_playerRef: null
	,_constructorParam_displayedELO: null
	,_constructorParam_interactive: null
	,self: function() {
		return new gfx_profile_simple_$components_PlayerLabel(this._constructorParam_height,this._constructorParam_playerRef,this._constructorParam_displayedELO,this._constructorParam_interactive);
	}
	,__class__: gfx_profile_simple_$components_PlayerLabel
});
var gfx_profile_simple_$components_StudyFilterRect = function(h,tagName,onRemovePressed,removeBtnTooltip) {
	if(h == gfx_basic_$components_utils_DimValue.Auto) {
		throw haxe_Exception.thrown("autoHeight cannot be true for StudyFilterRect");
	}
	haxe_ui_containers_HBox.call(this);
	gfx_basic_$components_utils_DimValue_assignHeight(this,h);
	this.tagLabel = new gfx_basic_$components_AutosizingLabel();
	this.tagLabel.align = "left";
	this.tagLabel.sizePerCharHeight = 0.9;
	this.tagLabel.set_percentHeight(100);
	this.tagLabel.set_text(tagName);
	this.tagLabel.get_customStyle().color = 673633;
	this.addComponent(this.tagLabel);
	this.cross = new gfx_basic_$components_ARPImage();
	this.cross.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/common/study/remove_filter_cross.svg"));
	this.cross.set_tooltip(dict_Dictionary.getPhrase(removeBtnTooltip));
	this.cross.set_percentHeight(100);
	this.cross.get_customStyle().horizontalAlign = "center";
	this.cross.get_customStyle().backgroundColor = 0;
	this.cross.get_customStyle().backgroundOpacity = 0;
	this.cross.get_customStyle().pointerEvents = "true";
	this.cross.set_onClick(function(e) {
		onRemovePressed();
	});
	this.addComponent(this.cross);
	var c = this;
	if(c != null) {
		c.registerEvent("resize",$bind(this,this.onResize));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "this" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.simple_components.StudyFilterRect", methodName : "new"});
	}
};
$hxClasses["gfx.profile.simple_components.StudyFilterRect"] = gfx_profile_simple_$components_StudyFilterRect;
gfx_profile_simple_$components_StudyFilterRect.__name__ = "gfx.profile.simple_components.StudyFilterRect";
gfx_profile_simple_$components_StudyFilterRect.__super__ = haxe_ui_containers_HBox;
gfx_profile_simple_$components_StudyFilterRect.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	tagLabel: null
	,cross: null
	,onResize: function(e) {
		var spacing = 0.16 * this.get_height();
		this.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,spacing,spacing,spacing,spacing,null,null,null,null,spacing,null,null,8374271,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_h: null
	,_constructorParam_tagName: null
	,_constructorParam_onRemovePressed: null
	,_constructorParam_removeBtnTooltip: null
	,self: function() {
		return new gfx_profile_simple_$components_StudyFilterRect(this._constructorParam_h,this._constructorParam_tagName,this._constructorParam_onRemovePressed,this._constructorParam_removeBtnTooltip);
	}
	,__class__: gfx_profile_simple_$components_StudyFilterRect
});
var gfx_profile_simple_$components_StudyTagLabel = function(heightDim,tag,onClick) {
	gfx_basic_$components_AnnotatedImage.call(this,gfx_basic_$components_utils_DimValue.Auto,heightDim,"assets/symbols/profile/tag.svg",tag);
	this.lbl.set_styleNames("link");
	this.lbl.set_onClick(function(e) {
		onClick();
	});
};
$hxClasses["gfx.profile.simple_components.StudyTagLabel"] = gfx_profile_simple_$components_StudyTagLabel;
gfx_profile_simple_$components_StudyTagLabel.__name__ = "gfx.profile.simple_components.StudyTagLabel";
gfx_profile_simple_$components_StudyTagLabel.__super__ = gfx_basic_$components_AnnotatedImage;
gfx_profile_simple_$components_StudyTagLabel.prototype = $extend(gfx_basic_$components_AnnotatedImage.prototype,{
	registerBehaviours: function() {
		gfx_basic_$components_AnnotatedImage.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gfx_basic_$components_AnnotatedImage.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_heightDim: null
	,_constructorParam_tag: null
	,_constructorParam_onClick: null
	,self: function() {
		return new gfx_profile_simple_$components_StudyTagLabel(this._constructorParam_heightDim,this._constructorParam_tag,this._constructorParam_onClick);
	}
	,__class__: gfx_profile_simple_$components_StudyTagLabel
});
var gfx_profile_simple_$components_StudyWidget = function() {
	haxe_ui_core_ItemRenderer.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        #fullBox {\r\n            background: #e7e7e7;\r\n            border: 1px solid #aaaaaa;\r\n            padding: 4px;\r\n        }\r\n        #contentBox {\r\n            border-top: 1px solid #dddddd;\r\n            background: #fdfdfd #eaeaea;\r\n            pointer-events:true;\r\n            padding: 3px;\r\n        }\r\n        #contentBox:hover {\r\n            background: #c9e3ff;\r\n        }\r\n        #nameLabel:hover {\r\n            color: $normal-text-color;\r\n        }\r\n        #nameLabel:selected {\r\n            color: $normal-text-color;\r\n        }\r\n        #descriptionLabel:hover {\r\n            color: $normal-text-color;\r\n        }\r\n        #descriptionLabel:selected {\r\n            color: $normal-text-color;\r\n        }\r\n        #upperRow {\r\n            padding: 3px;\r\n            spacing: 5px;\r\n        }\r\n        .action-btn {\r\n            background-color:white;\r\n            background-opacity: 0;\r\n            pointer-events:true;\r\n        }\r\n        .action-btn:hover {\r\n            background-color: #f9f9f9;\r\n            background-opacity: 1;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_containers_VBox();
	c0.set_id("fullBox");
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_containers_HBox();
	c1.set_id("upperRow");
	c1.set_height(30.);
	c1.set_percentWidth(100.);
	var c2 = new haxe_ui_containers_Box();
	c2.set_id("tagListContainer");
	c2.set_percentWidth(100.);
	c2.set_percentHeight(100.);
	c1.addComponent(c2);
	var c3 = new gfx_basic_$components_Square();
	c3.set_id("editBtn");
	c3.set_percentHeight(100.);
	c3.set_styleNames("action-btn");
	var c4 = new gfx_basic_$components_ARPImage();
	c4.set_percentHeight(80.);
	c4.set_verticalAlign("center");
	c4.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/common/edit.svg"));
	c4.set_horizontalAlign("center");
	c3.addComponent(c4);
	c1.addComponent(c3);
	var c5 = new gfx_basic_$components_Square();
	c5.set_id("deleteBtn");
	c5.set_percentHeight(100.);
	c5.set_styleNames("action-btn");
	var c6 = new gfx_basic_$components_ARPImage();
	c6.set_percentHeight(80.);
	c6.set_verticalAlign("center");
	c6.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/analysis/delete.svg"));
	c6.set_horizontalAlign("center");
	c5.addComponent(c6);
	c1.addComponent(c5);
	c0.addComponent(c1);
	var c7 = new haxe_ui_containers_HBox();
	c7.set_id("contentBox");
	c7.set_percentWidth(100.);
	c7.set_percentHeight(100.);
	var c8 = new gfx_basic_$components_Square();
	c8.set_id("boardContainer");
	c8.set_percentHeight(100.);
	c7.addComponent(c8);
	var c9 = new haxe_ui_containers_VBox();
	c9.set_percentWidth(100.);
	c9.set_percentHeight(100.);
	var c10 = new haxe_ui_components_Label();
	c10.set_id("nameLabel");
	c10.set_percentWidth(100.);
	c10.set_styleString("font-size: 16");
	c9.addComponent(c10);
	var c11 = new haxe_ui_components_Label();
	c11.set_id("descriptionLabel");
	c11.set_percentWidth(100.);
	c11.set_percentHeight(100.);
	c11.set_styleString("font-size: 12");
	c9.addComponent(c11);
	c7.addComponent(c9);
	c0.addComponent(c7);
	this.addComponent(c0);
	this.set_height(200.);
	this.set_percentWidth(100.);
	this.bindingRoot = true;
	this.upperRow = c1;
	this.tagListContainer = c2;
	this.nameLabel = c10;
	this.fullBox = c0;
	this.editBtn = c3;
	this.descriptionLabel = c11;
	this.deleteBtn = c5;
	this.contentBox = c7;
	this.boardContainer = c8;
	c3.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.PROFILE_STUDY_EDIT_BTN_TOOLTIP));
	c5.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.PROFILE_STUDY_REMOVE_BTN_TOOLTIP));
	var c = this.editBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.edit));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "editBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.simple_components.StudyWidget", methodName : "new"});
	}
	var c = this.deleteBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.delete));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "deleteBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.simple_components.StudyWidget", methodName : "new"});
	}
	var c = this.contentBox;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.open));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "contentBox" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.simple_components.StudyWidget", methodName : "new"});
	}
};
$hxClasses["gfx.profile.simple_components.StudyWidget"] = gfx_profile_simple_$components_StudyWidget;
gfx_profile_simple_$components_StudyWidget.__name__ = "gfx.profile.simple_components.StudyWidget";
gfx_profile_simple_$components_StudyWidget.__super__ = haxe_ui_core_ItemRenderer;
gfx_profile_simple_$components_StudyWidget.prototype = $extend(haxe_ui_core_ItemRenderer.prototype,{
	typedData: null
	,edit: function(e) {
		this.typedData.onEditPressed();
	}
	,'delete': function(e) {
		this.typedData.onDeletePressed();
	}
	,open: function(e) {
		this.typedData.onStudyClicked();
	}
	,reloadTagList: function(tags) {
		this.tagListContainer.removeAllComponents();
		var tagList = new gfx_profile_complex_$components_StudyTagList(gfx_basic_$components_utils_DimValue.Percent(100),26,tags,this.typedData.onTagSelected);
		tagList.set_verticalAlign("center");
		this.tagListContainer.addComponent(tagList);
	}
	,reloadBoard: function(keyPositionSIP) {
		this.boardContainer.removeAllComponents();
		var keySituation = net_shared_board_Situation.deserialize(keyPositionSIP);
		var board = new gameboard_Board(keySituation,keySituation.turnColor,gameboard_util_Marking.None);
		board.set_percentWidth(100);
		board.set_percentHeight(100);
		this.boardContainer.addComponent(board);
	}
	,onDataChanged: function(data) {
		haxe_ui_core_ItemRenderer.prototype.onDataChanged.call(this,data);
		if(data == null) {
			return;
		}
		this.typedData = data;
		if(!LoginManager.isPlayer(this.typedData.ownerLogin)) {
			this.editBtn.set_hidden(true);
			this.deleteBtn.set_hidden(true);
		}
		var info = this.typedData.info;
		this.nameLabel.set_text(info.name);
		this.descriptionLabel.set_text(info.description);
		this.reloadTagList(info.tags);
		this.reloadBoard(info.keyPositionSIP);
	}
	,registerBehaviours: function() {
		haxe_ui_core_ItemRenderer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ItemRenderer.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_profile_simple_$components_StudyWidget();
	}
	,upperRow: null
	,tagListContainer: null
	,nameLabel: null
	,fullBox: null
	,editBtn: null
	,descriptionLabel: null
	,deleteBtn: null
	,contentBox: null
	,boardContainer: null
	,__class__: gfx_profile_simple_$components_StudyWidget
});
var gfx_profile_simple_$components_TCEloEntry = function(data) {
	gfx_basic_$components_GenAnnotatedImage.call(this,data,gfx_basic_$components_utils_DimValue.Exact(85),gfx_basic_$components_utils_DimValue.Exact(35));
};
$hxClasses["gfx.profile.simple_components.TCEloEntry"] = gfx_profile_simple_$components_TCEloEntry;
gfx_profile_simple_$components_TCEloEntry.__name__ = "gfx.profile.simple_components.TCEloEntry";
gfx_profile_simple_$components_TCEloEntry.__super__ = gfx_basic_$components_GenAnnotatedImage;
gfx_profile_simple_$components_TCEloEntry.prototype = $extend(gfx_basic_$components_GenAnnotatedImage.prototype,{
	generateLabelText: function(data) {
		var value = data.elo;
		switch(value._hx_index) {
		case 0:
			return "−";
		case 1:
			var elo = value.elo;
			return "" + elo + "?";
		case 2:
			var elo = value.elo;
			return "" + elo;
		}
	}
	,generateImagePath: function(data) {
		var filename;
		switch(data.timeControl._hx_index) {
		case 0:
			filename = "hyperbullet";
			break;
		case 1:
			filename = "bullet";
			break;
		case 2:
			filename = "blitz";
			break;
		case 3:
			filename = "rapid";
			break;
		case 4:
			filename = "classic";
			break;
		case 5:
			filename = "correspondence";
			break;
		}
		return "assets/symbols/time_controls/" + filename + ".svg";
	}
	,generateImageTooltip: function(data) {
		return dict_Utils.getTimeControlName(data.timeControl);
	}
	,registerBehaviours: function() {
		gfx_basic_$components_GenAnnotatedImage.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gfx_basic_$components_GenAnnotatedImage.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_data: null
	,self: function() {
		return new gfx_profile_simple_$components_TCEloEntry(this._constructorParam_data);
	}
	,__class__: gfx_profile_simple_$components_TCEloEntry
});
var gfx_profile_simple_$components__$TimeControlFilterDropdown_TimeControlFilterRenderer = function() {
	haxe_ui_core_ItemRenderer.call(this);
	var c0 = new gfx_basic_$components_Square();
	c0.set_percentHeight(100.);
	var c1 = new gfx_basic_$components_ARPImage();
	c1.set_id("img");
	c1.set_verticalAlign("center");
	c1.set_horizontalAlign("center");
	c0.addComponent(c1);
	this.addComponent(c0);
	var c2 = new haxe_ui_containers_VBox();
	c2.set_styleString("spacing:0px");
	c2.set_verticalAlign("center");
	var c3 = new haxe_ui_components_Label();
	c3.set_id("tc");
	c3.set_styleString("font-size: 20px;");
	c2.addComponent(c3);
	var c4 = new haxe_ui_components_Label();
	c4.set_id("games");
	c4.set_styleString("color: #888888;");
	c2.addComponent(c4);
	var c5 = new haxe_ui_components_Label();
	c5.set_id("elo");
	c5.set_styleString("color: #888888;");
	c2.addComponent(c5);
	this.addComponent(c2);
	this.set_height(71.);
	this.set_percentWidth(100.);
	this.set_layoutName("horizontal");
	this.bindingRoot = true;
	this.tc = c3;
	this.img = c1;
	this.games = c4;
	this.elo = c5;
};
$hxClasses["gfx.profile.simple_components._TimeControlFilterDropdown.TimeControlFilterRenderer"] = gfx_profile_simple_$components__$TimeControlFilterDropdown_TimeControlFilterRenderer;
gfx_profile_simple_$components__$TimeControlFilterDropdown_TimeControlFilterRenderer.__name__ = "gfx.profile.simple_components._TimeControlFilterDropdown.TimeControlFilterRenderer";
gfx_profile_simple_$components__$TimeControlFilterDropdown_TimeControlFilterRenderer.__super__ = haxe_ui_core_ItemRenderer;
gfx_profile_simple_$components__$TimeControlFilterDropdown_TimeControlFilterRenderer.prototype = $extend(haxe_ui_core_ItemRenderer.prototype,{
	onDataChanged: function(data) {
		haxe_ui_core_ItemRenderer.prototype.onDataChanged.call(this,data);
		if(this.img.get_originalWidth() < this.img.get_originalHeight()) {
			this.img.set_percentHeight(100);
		} else {
			this.img.set_percentWidth(100);
		}
	}
	,tc: null
	,img: null
	,games: null
	,elo: null
	,registerBehaviours: function() {
		haxe_ui_core_ItemRenderer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ItemRenderer.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_profile_simple_$components__$TimeControlFilterDropdown_TimeControlFilterRenderer();
	}
	,__class__: gfx_profile_simple_$components__$TimeControlFilterDropdown_TimeControlFilterRenderer
});
var haxe_ui_components_Button = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.Button"] = haxe_ui_components_Button;
haxe_ui_components_Button.__name__ = "haxe.ui.components.Button";
haxe_ui_components_Button.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Button.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("repeater",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("repeatInterval",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(100));
		this.behaviours.register("easeInRepeater",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("remainPressed",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("toggle",haxe_ui_components__$Button_ToggleBehaviour);
		this.behaviours.register("selected",haxe_ui_components__$Button_SelectedBehaviour);
		this.behaviours.register("text",haxe_ui_components__$Button_TextBehaviour);
		this.behaviours.register("icon",haxe_ui_components__$Button_IconBehaviour);
		this.behaviours.register("componentGroup",haxe_ui_components__$Button_GroupBehaviour);
	}
	,get_repeater: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("repeater"));
	}
	,set_repeater: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("repeater",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"repeater"));
		return value;
	}
	,get_repeatInterval: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("repeatInterval"));
	}
	,set_repeatInterval: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("repeatInterval",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"repeatInterval"));
		return value;
	}
	,get_easeInRepeater: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("easeInRepeater"));
	}
	,set_easeInRepeater: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("easeInRepeater",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"easeInRepeater"));
		return value;
	}
	,get_remainPressed: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("remainPressed"));
	}
	,set_remainPressed: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("remainPressed",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"remainPressed"));
		return value;
	}
	,get_toggle: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("toggle"));
	}
	,set_toggle: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("toggle",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"toggle"));
		return value;
	}
	,get_selected: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("selected"));
	}
	,set_selected: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selected",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selected"));
		return value;
	}
	,get_icon: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.get("icon");
	}
	,set_icon: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("icon",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"icon"));
		return value;
	}
	,get_componentGroup: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("componentGroup"));
	}
	,set_componentGroup: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"componentGroup",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("componentGroup",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"componentGroup"));
		return value;
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		this.set_text(value);
		return value;
	}
	,get_iconPosition: function() {
		if(this.get_customStyle().iconPosition != null) {
			return this.get_customStyle().iconPosition;
		}
		if(this.get_style() == null || this.get_style().iconPosition == null) {
			return null;
		}
		return this.get_style().iconPosition;
	}
	,set_iconPosition: function(value) {
		if(this.get_customStyle().iconPosition == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().iconPosition = null;
		} else {
			this.get_customStyle().iconPosition = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_fontSize: function() {
		if(this.get_customStyle().fontSize != null) {
			return this.get_customStyle().fontSize;
		}
		if(this.get_style() == null || this.get_style().fontSize == null) {
			return null;
		}
		return this.get_style().fontSize;
	}
	,set_fontSize: function(value) {
		if(this.get_customStyle().fontSize == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().fontSize = null;
		} else {
			this.get_customStyle().fontSize = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_textAlign: function() {
		if(this.get_customStyle().textAlign != null) {
			return this.get_customStyle().textAlign;
		}
		if(this.get_style() == null || this.get_style().textAlign == null) {
			return null;
		}
		return this.get_style().textAlign;
	}
	,set_textAlign: function(value) {
		if(this.get_customStyle().textAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().textAlign = null;
		} else {
			this.get_customStyle().textAlign = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_repeater(this.get_repeater());
		c.set_repeatInterval(this.get_repeatInterval());
		c.set_easeInRepeater(this.get_easeInRepeater());
		c.set_remainPressed(this.get_remainPressed());
		c.set_toggle(this.get_toggle());
		c.set_selected(this.get_selected());
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		if(this.get_componentGroup() != null) {
			c.set_componentGroup(this.get_componentGroup());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Button();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components_ButtonEvents;
		this._compositeBuilderClass = haxe_ui_components_ButtonBuilder;
		this._defaultLayoutClass = haxe_ui_components_ButtonLayout;
	}
	,__class__: haxe_ui_components_Button
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_textAlign:"set_textAlign",get_textAlign:"get_textAlign",set_fontSize:"set_fontSize",get_fontSize:"get_fontSize",set_iconPosition:"set_iconPosition",get_iconPosition:"get_iconPosition",set_componentGroup:"set_componentGroup",get_componentGroup:"get_componentGroup",set_icon:"set_icon",get_icon:"get_icon",set_selected:"set_selected",get_selected:"get_selected",set_toggle:"set_toggle",get_toggle:"get_toggle",set_remainPressed:"set_remainPressed",get_remainPressed:"get_remainPressed",set_easeInRepeater:"set_easeInRepeater",get_easeInRepeater:"get_easeInRepeater",set_repeatInterval:"set_repeatInterval",get_repeatInterval:"get_repeatInterval",set_repeater:"set_repeater",get_repeater:"get_repeater"})
});
var haxe_ui_components_DropDown = function() {
	this._itemRenderer = null;
	haxe_ui_components_Button.call(this);
};
$hxClasses["haxe.ui.components.DropDown"] = haxe_ui_components_DropDown;
haxe_ui_components_DropDown.__name__ = "haxe.ui.components.DropDown";
haxe_ui_components_DropDown.__interfaces__ = [haxe_ui_core_IDataComponent];
haxe_ui_components_DropDown.__super__ = haxe_ui_components_Button;
haxe_ui_components_DropDown.prototype = $extend(haxe_ui_components_Button.prototype,{
	hideDropDown: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("hideDropDown",null);
	}
	,showDropDown: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("showDropDown",null);
	}
	,_itemRenderer: null
	,get_itemRenderer: function() {
		return this._itemRenderer;
	}
	,set_itemRenderer: function(value) {
		this._itemRenderer = value;
		return value;
	}
	,onThemeChanged: function() {
		haxe_ui_components_Button.prototype.onThemeChanged.call(this);
		var builder = js_Boot.__cast(this._compositeBuilder , haxe_ui_components_DropDownBuilder);
		builder.onThemeChanged();
	}
	,postCloneComponent: function(c) {
		haxe_ui_components_Button.prototype.postCloneComponent.call(this,c);
		if(this._itemRenderer != null) {
			c.addComponent(this._itemRenderer.cloneComponent());
		}
	}
	,registerComposite: function() {
		haxe_ui_components_Button.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components_DropDownEvents;
		this._compositeBuilderClass = haxe_ui_components_DropDownBuilder;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Button.prototype.registerBehaviours.call(this);
		this.behaviours.register("handlerStyleNames",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("dataSource",haxe_ui_components__$DropDown_DataSourceBehaviour);
		this.behaviours.register("type",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromString("list"));
		this.behaviours.register("virtual",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("dropdownWidth",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("dropdownHeight",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("dropdownSize",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("selectedIndex",haxe_ui_components__$DropDown_SelectedIndexBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedItem",haxe_ui_components__$DropDown_SelectedItemBehaviour);
		this.behaviours.register("searchable",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("searchPrompt",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromString("{{search}}"));
		this.behaviours.register("searchField",haxe_ui_components__$DropDown_SearchFieldBehaviour);
		this.behaviours.register("hideDropDown",haxe_ui_components__$DropDown_HideDropDown);
		this.behaviours.register("showDropDown",haxe_ui_components__$DropDown_ShowDropDown);
	}
	,get_handlerStyleNames: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("handlerStyleNames"));
	}
	,set_handlerStyleNames: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"handlerStyleNames",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("handlerStyleNames",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"handlerStyleNames"));
		return value;
	}
	,get_dataSource: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDataSource(this.behaviours.get("dataSource"));
	}
	,set_dataSource: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dataSource",haxe_ui_util_Variant.fromDataSource(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"dataSource"));
		return value;
	}
	,get_type: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("type"));
	}
	,set_type: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"type",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("type",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"type"));
		return value;
	}
	,get_virtual: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("virtual"));
	}
	,set_virtual: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("virtual",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"virtual"));
		return value;
	}
	,get_dropdownWidth: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("dropdownWidth"));
	}
	,set_dropdownWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dropdownWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"dropdownWidth"));
		return value;
	}
	,get_dropdownHeight: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("dropdownHeight"));
	}
	,set_dropdownHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dropdownHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"dropdownHeight"));
		return value;
	}
	,get_dropdownSize: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("dropdownSize"));
	}
	,set_dropdownSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dropdownSize",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"dropdownSize"));
		return value;
	}
	,get_selectedIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedIndex"));
		return value;
	}
	,get_selectedItem: function() {
		return this.behaviours.getDynamic("selectedItem");
	}
	,set_selectedItem: function(value) {
		this.behaviours.setDynamic("selectedItem",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedItem"));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,get_searchable: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("searchable"));
	}
	,set_searchable: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("searchable",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"searchable"));
		return value;
	}
	,get_searchPrompt: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("searchPrompt"));
	}
	,set_searchPrompt: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"searchPrompt",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("searchPrompt",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"searchPrompt"));
		return value;
	}
	,get_searchField: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("searchField"));
	}
	,set_searchField: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("searchField",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"searchField"));
		return value;
	}
	,get_value: function() {
		return this.get_selectedItem();
	}
	,set_value: function(value) {
		this.set_selectedItem(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Button.prototype.cloneComponent.call(this);
		if(this.get_itemRenderer() != null) {
			c.set_itemRenderer(this.get_itemRenderer());
		}
		if(this.get_handlerStyleNames() != null) {
			c.set_handlerStyleNames(this.get_handlerStyleNames());
		}
		if(this.get_dataSource() != null) {
			c.set_dataSource(this.get_dataSource());
		}
		if(this.get_type() != null) {
			c.set_type(this.get_type());
		}
		c.set_virtual(this.get_virtual());
		if(this.get_dropdownWidth() != null) {
			c.set_dropdownWidth(this.get_dropdownWidth());
		}
		if(this.get_dropdownHeight() != null) {
			c.set_dropdownHeight(this.get_dropdownHeight());
		}
		if(this.get_dropdownSize() != null) {
			c.set_dropdownSize(this.get_dropdownSize());
		}
		c.set_selectedIndex(this.get_selectedIndex());
		if(this.get_selectedItem() != null) {
			c.set_selectedItem(this.get_selectedItem());
		}
		c.set_searchable(this.get_searchable());
		if(this.get_searchPrompt() != null) {
			c.set_searchPrompt(this.get_searchPrompt());
		}
		if(this.get_searchField() != null) {
			c.set_searchField(this.get_searchField());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_DropDown();
	}
	,__class__: haxe_ui_components_DropDown
	,__properties__: $extend(haxe_ui_components_Button.prototype.__properties__,{set_searchField:"set_searchField",get_searchField:"get_searchField",set_searchPrompt:"set_searchPrompt",get_searchPrompt:"get_searchPrompt",set_searchable:"set_searchable",get_searchable:"get_searchable",set_selectedItem:"set_selectedItem",get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",set_dropdownSize:"set_dropdownSize",get_dropdownSize:"get_dropdownSize",set_dropdownHeight:"set_dropdownHeight",get_dropdownHeight:"get_dropdownHeight",set_dropdownWidth:"set_dropdownWidth",get_dropdownWidth:"get_dropdownWidth",set_virtual:"set_virtual",get_virtual:"get_virtual",set_type:"set_type",get_type:"get_type",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource",set_handlerStyleNames:"set_handlerStyleNames",get_handlerStyleNames:"get_handlerStyleNames",set_itemRenderer:"set_itemRenderer",get_itemRenderer:"get_itemRenderer"})
});
var gfx_profile_simple_$components_TimeControlFilterDropdown = function(elo,gamesCntByTimeControl,totalPastGames,onFilterSelected) {
	this.activated = false;
	haxe_ui_components_DropDown.call(this);
	this.set_width(250);
	this.onFilterSelected = onFilterSelected;
	this.addComponent(new gfx_profile_simple_$components__$TimeControlFilterDropdown_TimeControlFilterRenderer());
	this.get_dataSource().add({ tc : dict_Dictionary.getPhrase(dict_Phrase.PROFILE_GAMES_TCFILTER_ALL_GAMES_OPTION_NAME), games : dict_Dictionary.getPhrase(dict_Phrase.PROFILE_GAMES_TCFILTER_GAMECNT_LABEL_TEXT(totalPastGames)), elo : "", img : "assets/symbols/profile/any_time_control.svg"});
	var _g = 0;
	var _g1 = net_shared_TimeControlType.__empty_constructs__.slice();
	while(_g < _g1.length) {
		var timeControlType = _g1[_g];
		++_g;
		var tmp = this.get_dataSource();
		var tmp1 = dict_Utils.getTimeControlName(timeControlType);
		var tmp2 = dict_Dictionary.getPhrase(dict_Phrase.PROFILE_GAMES_TCFILTER_GAMECNT_LABEL_TEXT(gamesCntByTimeControl.get(timeControlType)));
		var tmp3 = dict_Dictionary.getPhrase(dict_Phrase.PROFILE_GAMES_TCFILTER_ELO_LABEL_TEXT(elo.get(timeControlType)));
		var filename;
		switch(timeControlType._hx_index) {
		case 0:
			filename = "hyperbullet";
			break;
		case 1:
			filename = "bullet";
			break;
		case 2:
			filename = "blitz";
			break;
		case 3:
			filename = "rapid";
			break;
		case 4:
			filename = "classic";
			break;
		case 5:
			filename = "correspondence";
			break;
		}
		tmp.add({ tc : tmp1, games : tmp2, elo : tmp3, img : "assets/symbols/time_controls/" + filename + ".svg"});
	}
	var c = this;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onSelectedItemChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "this" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.profile.simple_components.TimeControlFilterDropdown", methodName : "new"});
	}
};
$hxClasses["gfx.profile.simple_components.TimeControlFilterDropdown"] = gfx_profile_simple_$components_TimeControlFilterDropdown;
gfx_profile_simple_$components_TimeControlFilterDropdown.__name__ = "gfx.profile.simple_components.TimeControlFilterDropdown";
gfx_profile_simple_$components_TimeControlFilterDropdown.__super__ = haxe_ui_components_DropDown;
gfx_profile_simple_$components_TimeControlFilterDropdown.prototype = $extend(haxe_ui_components_DropDown.prototype,{
	onFilterSelected: null
	,activated: null
	,onSelectedItemChanged: function(e) {
		if(!this.activated) {
			this.activated = true;
		} else if(this.get_selectedIndex() == 0) {
			this.onFilterSelected(null);
		} else {
			this.onFilterSelected(Type.createEnumIndex(net_shared_TimeControlType,this.get_selectedIndex() - 1,null));
		}
	}
	,registerBehaviours: function() {
		haxe_ui_components_DropDown.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_DropDown.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_elo: null
	,_constructorParam_gamesCntByTimeControl: null
	,_constructorParam_totalPastGames: null
	,_constructorParam_onFilterSelected: null
	,self: function() {
		return new gfx_profile_simple_$components_TimeControlFilterDropdown(this._constructorParam_elo,this._constructorParam_gamesCntByTimeControl,this._constructorParam_totalPastGames,this._constructorParam_onFilterSelected);
	}
	,__class__: gfx_profile_simple_$components_TimeControlFilterDropdown
});
var gfx_screens_Analysis = function(initialVariantStr,selectedMainlineMove) {
	var _gthis = this;
	gfx_Screen.call(this);
	var c0 = new haxe_ui_containers_HBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	c0.set_styleString("padding-top:2px;padding-bottom:2px;padding-left:2px;padding-right:2px;spacing:15px");
	var c1 = new haxe_ui_containers_VBox();
	c1.set_percentWidth(100.);
	c1.set_percentHeight(100.);
	var c2 = new haxe_ui_containers_Box();
	c2.set_id("cCreepingLineContainer");
	c2.set_percentWidth(100.);
	var c3 = new gfx_common_CreepingLine();
	c3.set_id("creepingLine");
	c3.set_percentWidth(100.);
	c2.addComponent(c3);
	c1.addComponent(c2);
	var c4 = new haxe_ui_containers_HBox();
	c4.set_percentWidth(100.);
	c4.set_percentHeight(100.);
	var c5 = new haxe_ui_containers_Box();
	c5.set_id("boardContainer");
	c5.set_percentWidth(100.);
	c5.set_percentHeight(100.);
	c5.set_verticalAlign("center");
	c4.addComponent(c5);
	c1.addComponent(c4);
	var c6 = new haxe_ui_containers_Box();
	c6.set_id("cActionBarContainer");
	c6.set_percentWidth(100.);
	var c7 = new gfx_analysis_AnalysisActionBar();
	c7.set_id("actionBar");
	c7.set_percentWidth(100.);
	c6.addComponent(c7);
	c1.addComponent(c6);
	var c8 = new haxe_ui_containers_Box();
	c8.set_id("positionEditorContainer");
	c8.set_percentWidth(100.);
	c1.addComponent(c8);
	c0.addComponent(c1);
	var c9 = new haxe_ui_containers_Box();
	c9.set_id("lControlTabsContainer");
	c9.set_width(350.);
	c9.set_percentHeight(100.);
	c0.addComponent(c9);
	this.addComponent(c0);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.positionEditorContainer = c8;
	this.lControlTabsContainer = c9;
	this.creepingLine = c3;
	this.cCreepingLineContainer = c2;
	this.cActionBarContainer = c6;
	this.boardContainer = c5;
	this.actionBar = c7;
	this.customEnterHandler = $bind(this,this.onEnter);
	this.customCloseHandler = $bind(this,this.onClose);
	this.variant = initialVariantStr != null ? struct_Variant.deserialize(initialVariantStr) : new struct_Variant(net_shared_board_Situation.defaultStarting());
	this.board = new gameboard_GameBoard(gfx_common_ComponentConstructor.Analysis(this.variant));
	this.board.set_percentHeight(100);
	this.board.set_percentWidth(100);
	this.controlTabs = new gfx_analysis_ControlTabs(this.variant,$bind(this,this.handlePeripheralEvent));
	this.positionEditor = new gfx_analysis_PositionEditor($bind(this,this.handlePeripheralEvent));
	this.positionEditor.set_hidden(true);
	this.analysisPeripheryObservers = [this.board,this.controlTabs,this.controlTabs.navigator,this.positionEditor,this.creepingLine,this.actionBar];
	this.gameboardObservers = [this.controlTabs,this.controlTabs.navigator,this.positionEditor,this.creepingLine];
	this.plyHistoryViews = [this.controlTabs.navigator,this.creepingLine];
	var _g = 0;
	var _g1 = this.plyHistoryViews;
	while(_g < _g1.length) {
		var view = _g1[_g];
		++_g;
		view.init(function(type) {
			_gthis.handlePeripheralEvent(gfx_analysis_PeripheralEvent.ScrollBtnPressed(type));
		},gfx_common_ComponentConstructor.Analysis(this.variant));
	}
	this.actionBar.init(true,$bind(this,this.handlePeripheralEvent));
	this.boardContainer.addComponent(this.board);
	this.lControlTabsContainer.addComponent(this.controlTabs);
	this.positionEditorContainer.addComponent(this.positionEditor);
	this.board.addObserver(this);
	if(selectedMainlineMove != null) {
		this.handlePeripheralEvent(gfx_analysis_PeripheralEvent.ScrollBtnPressed(gfx_utils_PlyScrollType.Precise(selectedMainlineMove)));
	}
};
$hxClasses["gfx.screens.Analysis"] = gfx_screens_Analysis;
gfx_screens_Analysis.__name__ = "gfx.screens.Analysis";
gfx_screens_Analysis.__interfaces__ = [IGlobalEventObserver,gameboard_IGameBoardObserver];
gfx_screens_Analysis.__super__ = gfx_Screen;
gfx_screens_Analysis.prototype = $extend(gfx_Screen.prototype,{
	variant: null
	,board: null
	,positionEditor: null
	,controlTabs: null
	,analysisPeripheryObservers: null
	,gameboardObservers: null
	,plyHistoryViews: null
	,onEnter: function() {
		GlobalBroadcaster.addObserver(this);
	}
	,onClose: function() {
		GlobalBroadcaster.removeObserver(this);
	}
	,handleGlobalEvent: function(event) {
		this.board.handleGlobalEvent(event);
		if(event._hx_index == 4) {
			switch(event.name._hx_index) {
			case 1:
				var _this = this.boardContainer;
				var recursive = true;
				if(recursive == null) {
					recursive = false;
				}
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",recursive);
				}
				break;
			case 3:
				this.controlTabs.redrawBranchingTab(this.variant);
				break;
			case 4:
				if(this.controlTabs.branchingTabType == BranchingTabType.Tree) {
					this.controlTabs.redrawBranchingTab(this.variant);
				}
				break;
			default:
			}
		}
	}
	,redrawPositionEditor: function() {
		this.positionEditor.updateLayout(this.positionEditorContainer.get_width(),haxe_ui_core_Screen.get_instance().get_actualHeight() * 0.3);
	}
	,validateComponentLayout: function() {
		var compact = haxe_ui_core_Screen.get_instance().get_actualWidth() / haxe_ui_core_Screen.get_instance().get_actualHeight() < 1.2;
		var wasCompact = this.lControlTabsContainer.get_hidden();
		this.cCreepingLineContainer.set_hidden(!compact);
		this.cActionBarContainer.set_hidden(!compact);
		this.lControlTabsContainer.set_hidden(compact);
		var parentChanged = gfx_Screen.prototype.validateComponentLayout.call(this);
		haxe_Timer.delay($bind(this,this.redrawPositionEditor),100);
		if(!parentChanged) {
			return wasCompact != compact;
		} else {
			return true;
		}
	}
	,displayShareDialog: function() {
		var shareDialog = new gfx_common_ShareDialog();
		var _g = gfx_SceneManager.getCurrentScreenType();
		if(_g == null) {
			throw haxe_Exception.thrown("ShareRequested happened outside of Analysis screen!");
		} else if(_g._hx_index == 1) {
			var _g1 = _g.initialVariantStr;
			var _g1 = _g.selectedMainlineMove;
			var exploredStudyData = _g.exploredStudyData;
			shareDialog.initInAnalysis(this.board.get_shownSituation(),this.board.orientationColor,this.variant,exploredStudyData);
		} else {
			throw haxe_Exception.thrown("ShareRequested happened outside of Analysis screen!");
		}
		shareDialog.showShareDialog(this.board);
	}
	,handlePeripheralEvent: function(event) {
		if(!Networker.isConnectedToServer() && event._hx_index == 14) {
			return;
		}
		var _g = 0;
		var _g1 = this.analysisPeripheryObservers;
		while(_g < _g1.length) {
			var obs = _g1[_g];
			++_g;
			obs.handleAnalysisPeripheralEvent(event);
		}
		if(event._hx_index == 12) {
			this.displayShareDialog();
		} else if(event._hx_index == 14) {
			gfx_Dialogs.getQueue().add(new gfx_popups_ChallengeParamsDialog(struct_ChallengeParams.playFromPosParams(this.board.get_shownSituation()),true));
		} else if(event._hx_index == 8) {
			var _g = 0;
			var _g1 = this.plyHistoryViews;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				view.updateStartingSituation(this.board.get_startingSituation());
			}
			this.controlTabs.clearBranching(this.board.get_startingSituation());
		}
	}
	,handleGameBoardEvent: function(event) {
		var _g = 0;
		var _g1 = this.gameboardObservers;
		while(_g < _g1.length) {
			var obs = _g1[_g];
			++_g;
			obs.handleGameBoardEvent(event);
		}
	}
	,onReady: function() {
		gfx_Screen.prototype.onReady.call(this);
		if(this.positionEditor.get_isReady()) {
			this.redrawPositionEditor();
		} else {
			this.positionEditor.customReadyHandler = $bind(this,this.redrawPositionEditor);
		}
	}
	,registerBehaviours: function() {
		gfx_Screen.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gfx_Screen.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_initialVariantStr: null
	,_constructorParam_selectedMainlineMove: null
	,self: function() {
		return new gfx_screens_Analysis(this._constructorParam_initialVariantStr,this._constructorParam_selectedMainlineMove);
	}
	,positionEditorContainer: null
	,lControlTabsContainer: null
	,creepingLine: null
	,cCreepingLineContainer: null
	,cActionBarContainer: null
	,boardContainer: null
	,actionBar: null
	,__class__: gfx_screens_Analysis
});
var gfx_screens_LanguageSelectIntro = function(onLangSelected) {
	gfx_Screen.call(this,true);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_horizontalAlign("center");
	var c1 = new haxe_ui_components_Label();
	c1.set_id("headerLabel");
	c1.set_text("Language/Язык:");
	c1.set_horizontalAlign("center");
	c0.addComponent(c1);
	var c2 = new haxe_ui_containers_HBox();
	c2.set_id("btnBox");
	c2.set_horizontalAlign("center");
	var c3 = new haxe_ui_components_Image();
	c3.set_id("enBtn");
	c3.set_styleString("pointer-events: true");
	c3.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/flags/en.svg"));
	c2.addComponent(c3);
	var c4 = new haxe_ui_components_Image();
	c4.set_id("ruBtn");
	c4.set_styleString("pointer-events: true");
	c4.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/flags/ru.svg"));
	c2.addComponent(c4);
	c0.addComponent(c2);
	this.addComponent(c0);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.ruBtn = c4;
	this.headerLabel = c1;
	this.enBtn = c3;
	this.btnBox = c2;
	this.onLangSelected = onLangSelected;
	var _g = new haxe_ds_ObjectMap();
	var _g1 = new haxe_ds_EnumValueMap();
	_g1.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.VerticalSpacing),gfx_ResponsivenessRule.VMIN(8));
	_g1.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.PaddingTop),gfx_ResponsivenessRule.VMIN(8));
	_g.set(this,_g1);
	var key = this.headerLabel;
	var _g1 = new haxe_ds_EnumValueMap();
	_g1.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.FontSize),gfx_ResponsivenessRule.VMIN(12));
	_g.set(key,_g1);
	var key = this.btnBox;
	var _g1 = new haxe_ds_EnumValueMap();
	_g1.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.HorizontalSpacing),gfx_ResponsivenessRule.VMIN(10));
	_g.set(key,_g1);
	var key = this.enBtn;
	var _g1 = new haxe_ds_EnumValueMap();
	_g1.set(gfx_ResponsiveProperty.Width,gfx_ResponsivenessRule.VMIN(38));
	_g1.set(gfx_ResponsiveProperty.Height,gfx_ResponsivenessRule.VMIN(20));
	_g.set(key,_g1);
	var key = this.ruBtn;
	var _g1 = new haxe_ds_EnumValueMap();
	_g1.set(gfx_ResponsiveProperty.Width,gfx_ResponsivenessRule.VMIN(30));
	_g1.set(gfx_ResponsiveProperty.Height,gfx_ResponsivenessRule.VMIN(20));
	_g.set(key,_g1);
	this.responsiveComponents = _g;
	var c = this.ruBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onRuPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "ruBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.screens.LanguageSelectIntro", methodName : "new"});
	}
	var c = this.enBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onEnPressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "enBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.screens.LanguageSelectIntro", methodName : "new"});
	}
};
$hxClasses["gfx.screens.LanguageSelectIntro"] = gfx_screens_LanguageSelectIntro;
gfx_screens_LanguageSelectIntro.__name__ = "gfx.screens.LanguageSelectIntro";
gfx_screens_LanguageSelectIntro.__super__ = gfx_Screen;
gfx_screens_LanguageSelectIntro.prototype = $extend(gfx_Screen.prototype,{
	onLangSelected: null
	,onRuPressed: function(e) {
		Preferences.language.set(dict_Language.RU,true);
		this.onLangSelected();
	}
	,onEnPressed: function(e) {
		Preferences.language.set(dict_Language.EN,true);
		this.onLangSelected();
	}
	,registerBehaviours: function() {
		gfx_Screen.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gfx_Screen.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_onLangSelected: null
	,self: function() {
		return new gfx_screens_LanguageSelectIntro(this._constructorParam_onLangSelected);
	}
	,ruBtn: null
	,headerLabel: null
	,enBtn: null
	,btnBox: null
	,__class__: gfx_screens_LanguageSelectIntro
});
var gfx_screens_LiveGame = function(gameID,constructor) {
	this.outcome = null;
	this.orientationColor = net_shared_PieceColor.White;
	gfx_Screen.call(this);
	var c0 = new haxe_ui_containers_HBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	c0.set_styleString("spacing:15px");
	var c1 = new haxe_ui_containers_VBox();
	c1.set_id("lLeftBox");
	c1.set_percentHeight(98.);
	c1.set_styleString("spacing:10px");
	var c2 = new gfx_game_GameInfoBox();
	c2.set_id("gameinfobox");
	c1.addComponent(c2);
	var c3 = new gfx_game_Chatbox();
	c3.set_id("chatbox");
	c1.addComponent(c3);
	c0.addComponent(c1);
	var c4 = new haxe_ui_containers_VBox();
	c4.set_id("centerBox");
	c4.set_percentWidth(100.);
	c4.set_percentHeight(100.);
	var c5 = new gfx_common_CreepingLine();
	c5.set_id("cCreepingLine");
	c5.set_percentWidth(100.);
	c4.addComponent(c5);
	var c6 = new haxe_ui_components_Spacer();
	c6.set_id("cSpacer1");
	c6.set_percentHeight(50.);
	c4.addComponent(c6);
	var c7 = new haxe_ui_containers_HBox();
	c7.set_id("cBlackPlayerHBox");
	c7.set_percentWidth(100.);
	var c8 = new haxe_ui_components_Label();
	c8.set_id("cBlackLoginLabel");
	c8.set_styleString("color:#666666;font-size:24px");
	c8.set_verticalAlign("center");
	c7.addComponent(c8);
	var c9 = new haxe_ui_components_Spacer();
	c9.set_percentWidth(100.);
	c7.addComponent(c9);
	var c10 = new gfx_game_Clock();
	c10.set_id("cBlackClock");
	c10.set_verticalAlign("center");
	c7.addComponent(c10);
	c4.addComponent(c7);
	var c11 = new haxe_ui_containers_Box();
	c11.set_id("boardContainer");
	c11.set_percentWidth(100.);
	c4.addComponent(c11);
	var c12 = new haxe_ui_containers_HBox();
	c12.set_id("cWhitePlayerHBox");
	c12.set_percentWidth(100.);
	var c13 = new haxe_ui_components_Label();
	c13.set_id("cWhiteLoginLabel");
	c13.set_styleString("color:#666666;font-size:24px");
	c13.set_verticalAlign("center");
	c12.addComponent(c13);
	var c14 = new haxe_ui_components_Spacer();
	c14.set_percentWidth(100.);
	c12.addComponent(c14);
	var c15 = new gfx_game_Clock();
	c15.set_id("cWhiteClock");
	c15.set_verticalAlign("center");
	c12.addComponent(c15);
	c4.addComponent(c12);
	var c16 = new haxe_ui_components_Spacer();
	c16.set_id("cSpacer2");
	c16.set_percentHeight(50.);
	c4.addComponent(c16);
	var c17 = new gfx_game_GameActionBar();
	c17.set_id("cActionBar");
	c17.set_percentWidth(100.);
	c4.addComponent(c17);
	c0.addComponent(c4);
	var c18 = new haxe_ui_containers_VBox();
	c18.set_id("lRightBox");
	c18.set_percentHeight(98.);
	var c19 = new gfx_game_Clock();
	c19.set_id("lBlackClock");
	c18.addComponent(c19);
	var c20 = new haxe_ui_containers_Card();
	c20.set_id("lBlackLoginCard");
	c20.set_percentWidth(100.);
	c20.set_styleString("background-color: #ffffff;padding-top:5px;padding-bottom:5px;padding-left:10px;padding-right:10px");
	var c21 = new haxe_ui_components_Label();
	c21.set_id("lBlackLoginLabel");
	c21.set_text("player2");
	c21.set_styleString("font-size:24px");
	c21.set_verticalAlign("center");
	c21.set_horizontalAlign("center");
	c20.addComponent(c21);
	c18.addComponent(c20);
	var c22 = new gfx_common_MoveNavigator();
	c22.set_id("lNavigator");
	c22.set_percentHeight(100.);
	c18.addComponent(c22);
	var c23 = new gfx_game_GameActionBar();
	c23.set_id("lActionBar");
	c18.addComponent(c23);
	var c24 = new haxe_ui_containers_Card();
	c24.set_id("lWhiteLoginCard");
	c24.set_percentWidth(100.);
	c24.set_styleString("background-color: #ffffff;padding-top:5px;padding-bottom:5px;padding-left:10px;padding-right:10px");
	var c25 = new haxe_ui_components_Label();
	c25.set_id("lWhiteLoginLabel");
	c25.set_text("player1");
	c25.set_styleString("font-size:24px");
	c25.set_verticalAlign("center");
	c25.set_horizontalAlign("center");
	c24.addComponent(c25);
	c18.addComponent(c24);
	var c26 = new gfx_game_Clock();
	c26.set_id("lWhiteClock");
	c18.addComponent(c26);
	c0.addComponent(c18);
	this.addComponent(c0);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.lWhiteLoginLabel = c25;
	this.lWhiteLoginCard = c24;
	this.lWhiteClock = c26;
	this.lRightBox = c18;
	this.lNavigator = c22;
	this.lLeftBox = c1;
	this.lBlackLoginLabel = c21;
	this.lBlackLoginCard = c20;
	this.lBlackClock = c19;
	this.lActionBar = c23;
	this.gameinfobox = c2;
	this.chatbox = c3;
	this.centerBox = c4;
	this.cWhitePlayerHBox = c12;
	this.cWhiteLoginLabel = c13;
	this.cWhiteClock = c15;
	this.cSpacer2 = c16;
	this.cSpacer1 = c6;
	this.cCreepingLine = c5;
	this.cBlackPlayerHBox = c7;
	this.cBlackLoginLabel = c8;
	this.cBlackClock = c10;
	this.cActionBar = c17;
	this.boardContainer = c11;
	this.board = new gameboard_GameBoard(gfx_common_ComponentConstructor.Live(constructor));
	this.chatbox.init(constructor);
	this.gameinfobox.init(constructor);
	this.gameID = gameID;
	this.netObservers = [this.board,this.gameinfobox,this.chatbox,this.lActionBar,this.lNavigator,this.lBlackClock,this.lWhiteClock,this.cActionBar,this.cCreepingLine,this.cBlackClock,this.cWhiteClock];
	this.gameboardObservers = [this.lActionBar,this.lNavigator,this.lBlackClock,this.lWhiteClock,this.cActionBar,this.cCreepingLine,this.cBlackClock,this.cWhiteClock];
	this.customEnterHandler = $bind(this,this.onEnter);
	this.customCloseHandler = $bind(this,this.onClose);
	this.cWhiteClock.resize(30);
	this.cBlackClock.resize(30);
	switch(constructor._hx_index) {
	case 0:
		var _g = constructor.startingSituation;
		var whiteRef = constructor.whiteRef;
		var blackRef = constructor.blackRef;
		var playerElos = constructor.playerElos;
		var timeControl = constructor.timeControl;
		var startDatetime = constructor.startDatetime;
		this.isPastGame = false;
		this.playerColor = LoginManager.isPlayer(blackRef) ? net_shared_PieceColor.Black : net_shared_PieceColor.White;
		this.whiteRef = whiteRef;
		this.blackRef = blackRef;
		this.timeControl = timeControl;
		this.datetime = startDatetime;
		this.outcome = null;
		this.rated = playerElos != null;
		this.getSecsLeftAfterMove = null;
		this.setOrientation(this.playerColor);
		break;
	case 1:
		var _g = constructor.timeData;
		var parsedData = constructor.parsedData;
		var followedPlayerLogin = constructor.followedPlayerLogin;
		this.isPastGame = false;
		this.playerColor = parsedData.getPlayerColor();
		this.whiteRef = parsedData.whiteRef;
		this.blackRef = parsedData.blackRef;
		this.timeControl = parsedData.timeControl;
		this.datetime = parsedData.datetime;
		this.outcome = parsedData.outcome;
		this.rated = parsedData.isRated();
		this.getSecsLeftAfterMove = null;
		if(followedPlayerLogin != null) {
			this.setOrientation(parsedData.getParticipantColor(followedPlayerLogin));
		} else if(this.playerColor != null) {
			this.setOrientation(this.playerColor);
		} else {
			this.setOrientation(net_shared_PieceColor.White);
		}
		break;
	case 2:
		var parsedData = constructor.parsedData;
		var watchedPlyerLogin = constructor.watchedPlyerLogin;
		this.isPastGame = true;
		this.playerColor = null;
		this.whiteRef = parsedData.whiteRef;
		this.blackRef = parsedData.blackRef;
		this.timeControl = parsedData.timeControl;
		this.datetime = parsedData.datetime;
		this.outcome = parsedData.outcome;
		this.rated = parsedData.isRated();
		this.getSecsLeftAfterMove = parsedData.msPerMoveDataAvailable ? $bind(parsedData,parsedData.getSecsLeftAfterMove) : null;
		this.setOrientation(watchedPlyerLogin != null ? parsedData.getParticipantColor(watchedPlyerLogin) : net_shared_PieceColor.White);
		break;
	}
	this.board.addObserver(this);
	this.board.set_horizontalAlign("center");
	this.board.set_verticalAlign("center");
	this.board.set_percentHeight(100);
	this.board.set_percentWidth(100);
	this.boardContainer.set_percentHeight(100);
	this.boardContainer.addComponent(this.board);
	this.cWhiteLoginLabel.set_text(this.lWhiteLoginLabel.set_text(dict_Utils.playerRef(this.whiteRef)));
	this.cBlackLoginLabel.set_text(this.lBlackLoginLabel.set_text(dict_Utils.playerRef(this.blackRef)));
	this.cWhiteClock.init(constructor,net_shared_PieceColor.White);
	this.cBlackClock.init(constructor,net_shared_PieceColor.Black);
	this.lWhiteClock.init(constructor,net_shared_PieceColor.White);
	this.lBlackClock.init(constructor,net_shared_PieceColor.Black);
	this.lNavigator.init($bind(this,this.onPlyScrollRequested),gfx_common_ComponentConstructor.Live(constructor));
	this.lActionBar.init(constructor,false,$bind(this,this.handleActionBtnPress));
	this.cCreepingLine.init($bind(this,this.onPlyScrollRequested),gfx_common_ComponentConstructor.Live(constructor));
	this.cActionBar.init(constructor,true,$bind(this,this.handleActionBtnPress));
};
$hxClasses["gfx.screens.LiveGame"] = gfx_screens_LiveGame;
gfx_screens_LiveGame.__name__ = "gfx.screens.LiveGame";
gfx_screens_LiveGame.__interfaces__ = [IGlobalEventObserver,gameboard_IGameBoardObserver,net_INetObserver];
gfx_screens_LiveGame.__super__ = gfx_Screen;
gfx_screens_LiveGame.prototype = $extend(gfx_Screen.prototype,{
	board: null
	,playerColor: null
	,orientationColor: null
	,isPastGame: null
	,gameID: null
	,whiteRef: null
	,blackRef: null
	,timeControl: null
	,datetime: null
	,outcome: null
	,rated: null
	,getSecsLeftAfterMove: null
	,netObservers: null
	,gameboardObservers: null
	,onEnter: function() {
		Networker.addObserver(this);
		GlobalBroadcaster.addObserver(this);
		gfx_SceneManager.addResizeHandler($bind(this,this.performValidation));
		assets_Audio.playSound("notify");
		this.performValidation();
		haxe_Timer.delay(($_=this.boardContainer,$bind($_,$_.validateNow)),25);
	}
	,onClose: function() {
		FollowManager.stopFollowing();
		this.cWhiteClock.deactivate();
		this.cBlackClock.deactivate();
		this.lWhiteClock.deactivate();
		this.lBlackClock.deactivate();
		gfx_SceneManager.removeResizeHandler($bind(this,this.performValidation));
		Networker.removeObserver(this);
		GlobalBroadcaster.removeObserver(this);
	}
	,performValidation: function() {
		var availableWidth = haxe_ui_core_Screen.get_instance().get_actualWidth();
		var availableHeight = haxe_ui_core_Screen.get_instance().get_actualHeight() * 0.95;
		var compact = availableWidth / availableHeight < 1.16;
		var compactBoardHeight = availableWidth * gameboard_util_BoardSize.inverseAspectRatio(this.board.lettersEnabled);
		var largeBoardMaxWidth = availableHeight / gameboard_util_BoardSize.inverseAspectRatio(this.board.lettersEnabled);
		var bothBarsVisible = availableWidth >= largeBoardMaxWidth + 2 * gfx_screens_LiveGame.MIN_SIDEBARS_WIDTH;
		this.cBlackPlayerHBox.set_hidden(!compact);
		this.cWhitePlayerHBox.set_hidden(!compact);
		this.cActionBar.set_hidden(!compact);
		this.cCreepingLine.set_hidden(!compact);
		this.cSpacer1.set_hidden(!compact);
		this.cSpacer2.set_hidden(!compact);
		this.lLeftBox.set_hidden(compact || !bothBarsVisible);
		this.lRightBox.set_hidden(compact);
		if(compact) {
			this.boardContainer.set_percentHeight(null);
			this.boardContainer.set_height(compactBoardHeight + 20);
		} else {
			this.boardContainer.set_height(null);
			this.boardContainer.set_percentHeight(100);
		}
		if(bothBarsVisible) {
			this.lLeftBox.set_width(Math.min(gfx_screens_LiveGame.MAX_SIDEBARS_WIDTH,(availableWidth - largeBoardMaxWidth) / 2));
			this.lRightBox.set_width(Math.min(gfx_screens_LiveGame.MAX_SIDEBARS_WIDTH,(availableWidth - largeBoardMaxWidth) / 2));
		} else {
			this.lLeftBox.set_width(20);
			this.lRightBox.set_width(net_shared_utils_MathUtils.clamp(availableWidth - largeBoardMaxWidth,gfx_screens_LiveGame.MIN_SIDEBARS_WIDTH,gfx_screens_LiveGame.MAX_SIDEBARS_WIDTH));
		}
	}
	,handleNetEvent: function(event) {
		var _g = 0;
		var _g1 = this.netObservers;
		while(_g < _g1.length) {
			var obs = _g1[_g];
			++_g;
			obs.handleNetEvent(event);
		}
		if(event._hx_index == 27) {
			var _g = event.rematchPossible;
			var _g = event.remainingTimeMs;
			var outcome = event.outcome;
			var newPersonalElo = event.newPersonalElo;
			assets_Audio.playSound("notify");
			this.outcome = outcome;
			var message;
			if(this.playerColor != null) {
				message = dict_Utils.getPlayerGameOverDialogMessage(outcome,this.playerColor,newPersonalElo);
			} else {
				message = dict_Utils.getSpectatorGameOverDialogMessage(outcome,this.whiteRef,this.blackRef);
			}
			gfx_Dialogs.infoRaw(message,dict_Dictionary.getPhrase(dict_Phrase.GAME_ENDED_DIALOG_TITLE));
		}
	}
	,handleGameBoardEvent: function(event) {
		var _g = 0;
		var _g1 = this.gameboardObservers;
		while(_g < _g1.length) {
			var obs = _g1[_g];
			++_g;
			obs.handleGameBoardEvent(event);
		}
	}
	,handleGlobalEvent: function(event) {
		this.board.handleGlobalEvent(event);
		this.gameinfobox.handleGlobalEvent(event);
		if(event._hx_index == 4 && event.name._hx_index == 1) {
			var _this = this.boardContainer;
			var recursive = true;
			if(recursive == null) {
				recursive = false;
			}
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",recursive);
			}
		}
	}
	,onPlyScrollRequested: function(type) {
		this.cCreepingLine.performScroll(type);
		this.lNavigator.performScroll(type);
		this.board.applyScrolling(type);
		if(this.getSecsLeftAfterMove != null) {
			this.cWhiteClock.setTimeManually(this.getSecsLeftAfterMove(net_shared_PieceColor.White,this.lNavigator.shownMove));
			this.cBlackClock.setTimeManually(this.getSecsLeftAfterMove(net_shared_PieceColor.Black,this.lNavigator.shownMove));
			this.lWhiteClock.setTimeManually(this.getSecsLeftAfterMove(net_shared_PieceColor.White,this.lNavigator.shownMove));
			this.lBlackClock.setTimeManually(this.getSecsLeftAfterMove(net_shared_PieceColor.Black,this.lNavigator.shownMove));
		}
	}
	,handleActionBtnPress: function(btn) {
		switch(btn._hx_index) {
		case 0:
			Networker.emitEvent(net_shared_ClientEvent.Resign);
			break;
		case 1:
			this.setOrientation(this.orientationColor == net_shared_PieceColor.White ? net_shared_PieceColor.Black : net_shared_PieceColor.White);
			break;
		case 2:
			Networker.emitEvent(net_shared_ClientEvent.OfferDraw);
			break;
		case 3:
			Networker.emitEvent(net_shared_ClientEvent.CancelDraw);
			break;
		case 4:
			Networker.emitEvent(net_shared_ClientEvent.OfferTakeback);
			break;
		case 5:
			Networker.emitEvent(net_shared_ClientEvent.CancelTakeback);
			break;
		case 6:
			Networker.emitEvent(net_shared_ClientEvent.AddTime);
			break;
		case 7:
			var opponentRef = this.playerColor == net_shared_PieceColor.White ? this.blackRef : this.whiteRef;
			if(opponentRef.charAt(0) != "_") {
				var params = struct_ChallengeParams.rematchParams(opponentRef,this.playerColor,this.timeControl,this.rated,this.board.get_startingSituation());
				gfx_Dialogs.getQueue().add(new gfx_popups_ChallengeParamsDialog(params,true));
			} else {
				Networker.emitEvent(net_shared_ClientEvent.SimpleRematch);
			}
			break;
		case 8:
			var gameLink = browser_Url.getGameLink(this.gameID);
			var playedMoves = this.board.plyHistory.getPlySequence();
			var pin = serialization_PortableIntellectorNotation.serialize(this.board.get_startingSituation(),playedMoves,this.whiteRef,this.blackRef,this.timeControl,this.datetime,this.outcome);
			var shareDialog = new gfx_common_ShareDialog();
			shareDialog.initInGame(this.board.get_shownSituation(),this.board.orientationColor,gameLink,pin,this.board.get_startingSituation(),playedMoves);
			shareDialog.showShareDialog(this.board);
			break;
		case 9:
			var params = struct_ChallengeParams.playFromPosParams(this.board.get_shownSituation());
			gfx_Dialogs.getQueue().add(new gfx_popups_ChallengeParamsDialog(params,true));
			break;
		case 10:
			gfx_SceneManager.toScreen(gfx_ScreenType.Analysis(this.getSerializedVariant(),this.board.plyHistory.pointer,null));
			break;
		case 11:
			Networker.emitEvent(net_shared_ClientEvent.AcceptDraw);
			break;
		case 12:
			Networker.emitEvent(net_shared_ClientEvent.DeclineDraw);
			break;
		case 13:
			Networker.emitEvent(net_shared_ClientEvent.AcceptTakeback);
			break;
		case 14:
			Networker.emitEvent(net_shared_ClientEvent.DeclineTakeback);
			break;
		case 15:
			this.onPlyScrollRequested(gfx_utils_PlyScrollType.Prev);
			break;
		case 16:
			this.onPlyScrollRequested(gfx_utils_PlyScrollType.Next);
			break;
		}
		this.chatbox.reactToOwnAction(btn);
	}
	,getSerializedVariant: function() {
		var variant = new struct_Variant(this.board.get_startingSituation());
		var path = [];
		var _g = 0;
		var _g1 = this.board.plyHistory.getPlySequence();
		while(_g < _g1.length) {
			var ply = _g1[_g];
			++_g;
			variant.addChildToNode(ply,path);
			path.push(0);
		}
		return variant.serialize();
	}
	,setOrientation: function(newOrientationColor) {
		if(this.orientationColor == newOrientationColor) {
			return;
		}
		this.board.setOrientation(newOrientationColor);
		this.orientationColor = newOrientationColor;
		this.centerBox.removeComponent(this.cWhitePlayerHBox,false);
		this.centerBox.removeComponent(this.cBlackPlayerHBox,false);
		var upperBox = this.orientationColor == net_shared_PieceColor.White ? this.cBlackPlayerHBox : this.cWhitePlayerHBox;
		var lowerBox = this.orientationColor == net_shared_PieceColor.White ? this.cWhitePlayerHBox : this.cBlackPlayerHBox;
		this.centerBox.addComponentAt(upperBox,2);
		this.centerBox.addComponentAt(lowerBox,4);
		this.lRightBox.removeComponent(this.lWhiteClock,false);
		this.lRightBox.removeComponent(this.lBlackClock,false);
		this.lRightBox.removeComponent(this.lWhiteLoginCard,false);
		this.lRightBox.removeComponent(this.lBlackLoginCard,false);
		var upperClock = newOrientationColor == net_shared_PieceColor.White ? this.lBlackClock : this.lWhiteClock;
		var bottomClock = newOrientationColor == net_shared_PieceColor.White ? this.lWhiteClock : this.lBlackClock;
		var upperLogin = newOrientationColor == net_shared_PieceColor.White ? this.lBlackLoginCard : this.lWhiteLoginCard;
		var bottomLogin = newOrientationColor == net_shared_PieceColor.White ? this.lWhiteLoginCard : this.lBlackLoginCard;
		this.lRightBox.addComponentAt(upperLogin,0);
		this.lRightBox.addComponentAt(upperClock,0);
		this.lRightBox.addComponent(bottomLogin);
		this.lRightBox.addComponent(bottomClock);
	}
	,registerBehaviours: function() {
		gfx_Screen.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gfx_Screen.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_gameID: null
	,_constructorParam_constructor: null
	,self: function() {
		return new gfx_screens_LiveGame(this._constructorParam_gameID,this._constructorParam_constructor);
	}
	,lWhiteLoginLabel: null
	,lWhiteLoginCard: null
	,lWhiteClock: null
	,lRightBox: null
	,lNavigator: null
	,lLeftBox: null
	,lBlackLoginLabel: null
	,lBlackLoginCard: null
	,lBlackClock: null
	,lActionBar: null
	,gameinfobox: null
	,chatbox: null
	,centerBox: null
	,cWhitePlayerHBox: null
	,cWhiteLoginLabel: null
	,cWhiteClock: null
	,cSpacer2: null
	,cSpacer1: null
	,cCreepingLine: null
	,cBlackPlayerHBox: null
	,cBlackLoginLabel: null
	,cBlackClock: null
	,cActionBar: null
	,boardContainer: null
	,__class__: gfx_screens_LiveGame
});
var gfx_screens_MainMenu = function() {
	gfx_Screen.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        #changelogLabel {\r\n            font-size:26px;\r\n            pointer-events:true;\r\n            background-opacity:0;\r\n            background-color:yellow;\r\n        }\r\n        #changelogLabel:hover {\r\n            color: #333333;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	c0.set_styleString("spacing: 10px");
	var c1 = new haxe_ui_components_Button();
	c1.set_id("createGameBtn");
	c1.set_styleString("font-size:40px;font-name:'assets/fonts/Futura.ttf'");
	c1.set_horizontalAlign("center");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_Label();
	c2.set_id("changelogLabel");
	c2.set_horizontalAlign("center");
	c0.addComponent(c2);
	var c3 = new haxe_ui_containers_HBox();
	c3.set_id("contentHBox");
	c3.set_percentWidth(90.);
	c3.set_percentHeight(100.);
	c3.set_horizontalAlign("center");
	c3.set_continuous(true);
	var c4 = new haxe_ui_containers_VBox();
	c4.set_id("tablesBox");
	c4.set_percentWidth(50.);
	c4.set_percentHeight(100.);
	var c5 = new gfx_main_OpenChallengesTable();
	c5.set_id("openChallengesTable");
	c5.set_percentWidth(100.);
	c5.set_percentHeight(50.);
	c4.addComponent(c5);
	var c6 = new gfx_main_CurrentGamesTable();
	c6.set_id("currentGamesTable");
	c6.set_percentWidth(100.);
	c6.set_percentHeight(50.);
	c4.addComponent(c6);
	c3.addComponent(c4);
	var c7 = new gfx_main_PastGamesList();
	c7.set_id("pastGamesList");
	c7.set_percentWidth(50.);
	c7.set_percentHeight(100.);
	c3.addComponent(c7);
	c0.addComponent(c3);
	this.addComponent(c0);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.tablesBox = c4;
	this.pastGamesList = c7;
	this.openChallengesTable = c5;
	this.currentGamesTable = c6;
	this.createGameBtn = c1;
	this.contentHBox = c3;
	this.changelogLabel = c2;
	c1.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.MAIN_MENU_CREATE_GAME_BTN_TEXT)));
	c2.set_tooltip(dict_Dictionary.getPhrase(dict_Phrase.READ_FULL_CHANGELOG_TOOLTIP));
	c2.set_htmlText(Std.string(utils_Changelog.getFirst()));
	c7.ownerLogin = null;
	this.customEnterHandler = $bind(this,this.onEnter);
	this.customCloseHandler = $bind(this,this.onClose);
	var c = this.createGameBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onCreateGamePressed));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "createGameBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.screens.MainMenu", methodName : "new"});
	}
	var c = this.changelogLabel;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onChangelogRequested));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "changelogLabel" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.screens.MainMenu", methodName : "new"});
	}
};
$hxClasses["gfx.screens.MainMenu"] = gfx_screens_MainMenu;
gfx_screens_MainMenu.__name__ = "gfx.screens.MainMenu";
gfx_screens_MainMenu.__interfaces__ = [net_INetObserver];
gfx_screens_MainMenu.__super__ = gfx_Screen;
gfx_screens_MainMenu.prototype = $extend(gfx_Screen.prototype,{
	onEnter: function() {
		Networker.addObserver(this);
	}
	,onClose: function() {
		Networker.removeObserver(this);
		gfx_SceneManager.removeResizeHandler($bind(this,this.onResize));
	}
	,handleNetEvent: function(event) {
		switch(event._hx_index) {
		case 52:
			var openChallenges = event.openChallenges;
			var currentGames = event.currentGames;
			var recentGames = event.recentGames;
			this.openChallengesTable.appendChallenges(openChallenges);
			this.currentGamesTable.appendGames(currentGames);
			this.pastGamesList.appendGames(recentGames);
			break;
		case 53:
			var data = event.data;
			this.openChallengesTable.appendChallenges([data]);
			break;
		case 54:
			var id = event.id;
			this.openChallengesTable.removeChallenge(id);
			break;
		case 55:
			var data = event.data;
			this.currentGamesTable.appendGames([data]);
			break;
		case 56:
			var data = event.data;
			this.currentGamesTable.removeGame(data.id);
			this.pastGamesList.insertAtBeginning(data);
			break;
		default:
		}
	}
	,onCreateGamePressed: function(e) {
		if(!LoginManager.isLogged()) {
			gfx_Dialogs.getQueue().add(new gfx_popups_LogIn($bind(this,this.displayChallengeParamsDialog)));
		} else {
			this.displayChallengeParamsDialog();
		}
	}
	,displayChallengeParamsDialog: function() {
		gfx_Dialogs.getQueue().add(new gfx_popups_ChallengeParamsDialog());
	}
	,onChangelogRequested: function(e) {
		gfx_Dialogs.getQueue().addBasic(new gfx_popups_ChangelogDialog());
	}
	,onReady: function() {
		gfx_Screen.prototype.onReady.call(this);
		this.onResize();
		gfx_SceneManager.addResizeHandler($bind(this,this.onResize));
	}
	,onResize: function() {
		var compact = haxe_ui_core_Screen.get_instance().get_actualWidth() / haxe_ui_core_Screen.get_instance().get_actualHeight() < 1.2;
		var newStyle = this.changelogLabel.get_customStyle().clone();
		newStyle.fontSize = Math.min(1.8 * haxe_ui_core_Screen.get_instance().get_actualWidth() / utils_Changelog.getFirstLength(),26);
		this.changelogLabel.set_customStyle(newStyle);
		this.contentHBox.set_percentWidth(compact ? 100 : 90);
		this.tablesBox.set_percentWidth(compact ? 100 : 50);
		this.tablesBox.set_percentHeight(compact ? 66.66 : 100);
		this.pastGamesList.set_percentWidth(compact ? 100 : 50);
		this.pastGamesList.set_percentHeight(compact ? 33.33 : 100);
		var tableHeaderHeightRule = gfx_ResponsivenessRule.Min([gfx_Dimension.Exact(30),gfx_Dimension.VMIN(5)]);
		var tableHeaderBoxHeightRule = gfx_ResponsivenessRule.Min([gfx_Dimension.Exact(40),gfx_Dimension.VMIN(6.66)]);
		var tableHeaderReloadBtnHeightRule = gfx_ResponsivenessRule.Min([gfx_Dimension.Exact(20),gfx_Dimension.VMIN(3.33)]);
		var tmp = this.contentHBox;
		var _g = new haxe_ds_EnumValueMap();
		_g.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.HorizontalSpacing),gfx_ResponsivenessRule.VW(8));
		gfx_ResponsiveToolbox.resizeComponent(tmp,_g);
		var tmp = this.openChallengesTable.tableTitleBox;
		var _g = new haxe_ds_EnumValueMap();
		_g.set(gfx_ResponsiveProperty.Height,tableHeaderBoxHeightRule);
		gfx_ResponsiveToolbox.resizeComponent(tmp,_g);
		var tmp = this.openChallengesTable.title;
		var _g = new haxe_ds_EnumValueMap();
		_g.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.FontSize),tableHeaderHeightRule);
		gfx_ResponsiveToolbox.resizeComponent(tmp,_g);
		var tmp = this.openChallengesTable.reloadBtn;
		var _g = new haxe_ds_EnumValueMap();
		_g.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.FontSize),tableHeaderReloadBtnHeightRule);
		_g.set(gfx_ResponsiveProperty.IconWidth,tableHeaderReloadBtnHeightRule);
		_g.set(gfx_ResponsiveProperty.IconHeight,tableHeaderReloadBtnHeightRule);
		gfx_ResponsiveToolbox.resizeComponent(tmp,_g);
		var tmp = this.currentGamesTable.tableTitleBox;
		var _g = new haxe_ds_EnumValueMap();
		_g.set(gfx_ResponsiveProperty.Height,tableHeaderBoxHeightRule);
		gfx_ResponsiveToolbox.resizeComponent(tmp,_g);
		var tmp = this.currentGamesTable.title;
		var _g = new haxe_ds_EnumValueMap();
		_g.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.FontSize),tableHeaderHeightRule);
		gfx_ResponsiveToolbox.resizeComponent(tmp,_g);
		var tmp = this.currentGamesTable.reloadBtn;
		var _g = new haxe_ds_EnumValueMap();
		_g.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.FontSize),tableHeaderReloadBtnHeightRule);
		_g.set(gfx_ResponsiveProperty.IconWidth,tableHeaderReloadBtnHeightRule);
		_g.set(gfx_ResponsiveProperty.IconHeight,tableHeaderReloadBtnHeightRule);
		gfx_ResponsiveToolbox.resizeComponent(tmp,_g);
		var tmp = this.pastGamesList.tableTitleBox;
		var _g = new haxe_ds_EnumValueMap();
		_g.set(gfx_ResponsiveProperty.Height,tableHeaderBoxHeightRule);
		gfx_ResponsiveToolbox.resizeComponent(tmp,_g);
		var tmp = this.pastGamesList.title;
		var _g = new haxe_ds_EnumValueMap();
		_g.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.FontSize),tableHeaderHeightRule);
		gfx_ResponsiveToolbox.resizeComponent(tmp,_g);
	}
	,registerBehaviours: function() {
		gfx_Screen.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gfx_Screen.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new gfx_screens_MainMenu();
	}
	,tablesBox: null
	,pastGamesList: null
	,openChallengesTable: null
	,currentGamesTable: null
	,createGameBtn: null
	,contentHBox: null
	,changelogLabel: null
	,__class__: gfx_screens_MainMenu
});
var gfx_screens_OpenChallengeJoining = function(data) {
	gfx_Screen.call(this);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_containers_Card();
	c1.set_id("challengeCard");
	c1.set_layoutName("vertical");
	c1.set_horizontalAlign("center");
	var c2 = new haxe_ui_components_Label();
	c2.set_id("challengeByLabel");
	c2.set_styleString("font-name: 'fonts/Futura.ttf';");
	c2.set_horizontalAlign("center");
	c1.addComponent(c2);
	var c3 = new haxe_ui_containers_HBox();
	c3.set_id("descriptionHBox");
	var c4 = new haxe_ui_containers_Box();
	c4.set_id("tcIconBox");
	c4.set_verticalAlign("center");
	var c5 = new gfx_basic_$components_ARPImage();
	c5.set_id("tcIcon");
	c5.set_verticalAlign("center");
	c5.set_horizontalAlign("center");
	c4.addComponent(c5);
	c3.addComponent(c4);
	var c6 = new haxe_ui_containers_VBox();
	c6.set_verticalAlign("center");
	var c7 = new haxe_ui_components_Label();
	c7.set_id("tcLabel");
	c7.set_styleString("font-style:italic");
	c6.addComponent(c7);
	var c8 = new haxe_ui_components_Label();
	c8.set_id("bracketLabel");
	c8.set_styleString("font-style:italic");
	c6.addComponent(c8);
	var c9 = new haxe_ui_containers_HBox();
	c9.set_id("paramsBox");
	var c10 = new haxe_ui_components_Label();
	c10.set_id("paramsLabel");
	c10.set_styleString("font-style:italic");
	c10.set_verticalAlign("center");
	c9.addComponent(c10);
	var c11 = new haxe_ui_components_Image();
	c11.set_id("colorIcon");
	c11.set_styleString("background-color:yellow;background-opacity:0");
	c11.set_verticalAlign("center");
	c9.addComponent(c11);
	var c12 = new haxe_ui_components_Image();
	c12.set_id("customStartPosIcon");
	c12.set_styleString("background-color:yellow;background-opacity:0");
	c12.set_verticalAlign("center");
	c12.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/main_menu/challenge_modes/custom.svg"));
	c9.addComponent(c12);
	c6.addComponent(c9);
	c3.addComponent(c6);
	c1.addComponent(c3);
	var c13 = new haxe_ui_components_Button();
	c13.set_id("acceptBtn");
	c13.set_styleString("font-style:bold");
	c13.set_horizontalAlign("center");
	c1.addComponent(c13);
	c0.addComponent(c1);
	this.addComponent(c0);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.tcLabel = c7;
	this.tcIconBox = c4;
	this.tcIcon = c5;
	this.paramsLabel = c10;
	this.paramsBox = c9;
	this.descriptionHBox = c3;
	this.customStartPosIcon = c12;
	this.colorIcon = c11;
	this.challengeCard = c1;
	this.challengeByLabel = c2;
	this.bracketLabel = c8;
	this.acceptBtn = c13;
	c10.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.OPENJOIN_ESSENTIAL_PARAMS_LABEL_TEXT)));
	c13.set_text(Std.string(dict_Dictionary.getPhrase(dict_Phrase.OPENJOIN_ACCEPT_BTN_TEXT)));
	this.customEnterHandler = $bind(this,this.onEnter);
	this.customCloseHandler = $bind(this,this.onClose);
	var params = struct_ChallengeParams.deserialize(data.serializedParams);
	this.challengeID = data.id;
	this.ownerLogin = data.ownerLogin;
	this.ratedChallenge = params.rated;
	var timeControlString = params.timeControl.toString();
	var timeControlType = params.timeControl.getType();
	this.challengeByLabel.set_text(dict_Dictionary.getPhrase(dict_Phrase.OPENJOIN_CHALLENGE_BY_HEADER,[data.ownerLogin]));
	var tmp = this.tcIcon;
	var filename;
	switch(timeControlType._hx_index) {
	case 0:
		filename = "hyperbullet";
		break;
	case 1:
		filename = "bullet";
		break;
	case 2:
		filename = "blitz";
		break;
	case 3:
		filename = "rapid";
		break;
	case 4:
		filename = "classic";
		break;
	case 5:
		filename = "correspondence";
		break;
	}
	tmp.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/time_controls/" + filename + ".svg"));
	this.tcLabel.set_text(timeControlString);
	if(timeControlType != net_shared_TimeControlType.Correspondence) {
		var fh = this.tcLabel;
		fh.set_text(fh.get_text() + (" (" + dict_Utils.getTimeControlName(timeControlType) + ")"));
	}
	this.bracketLabel.set_text(dict_Dictionary.getPhrase(params.rated ? dict_Phrase.OPENJOIN_RATED : dict_Phrase.OPENJOIN_UNRATED));
	var tmp = this.colorIcon;
	var ownerOpponentColor = params.acceptorColor;
	var filename;
	if(ownerOpponentColor == null) {
		filename = "random";
	} else {
		switch(ownerOpponentColor._hx_index) {
		case 0:
			filename = "white";
			break;
		case 1:
			filename = "black";
			break;
		}
	}
	tmp.set_resource(haxe_ui_util_Variant.fromString("assets/symbols/main_menu/challenge_modes/" + filename + ".svg"));
	var tmp = this.colorIcon;
	var _g = params.acceptorColor;
	var tmp1;
	if(_g == null) {
		tmp1 = dict_Dictionary.getPhrase(dict_Phrase.OPENJOIN_COLOR_RANDOM);
	} else {
		switch(_g._hx_index) {
		case 0:
			tmp1 = dict_Dictionary.getPhrase(dict_Phrase.OPENJOIN_COLOR_BLACK_OWNER,[data.ownerLogin]);
			break;
		case 1:
			tmp1 = dict_Dictionary.getPhrase(dict_Phrase.OPENJOIN_COLOR_WHITE_OWNER,[data.ownerLogin]);
			break;
		}
	}
	tmp.set_tooltip(tmp1);
	if(params.customStartingSituation != null) {
		this.customStartPosIcon.set_hidden(false);
		var renderer = new gfx_common_SituationTooltipRenderer(params.customStartingSituation);
		haxe_ui_tooltips_ToolTipManager.get_instance().registerTooltip(this.customStartPosIcon,{ renderer : renderer});
	} else {
		this.customStartPosIcon.set_hidden(true);
	}
	this.refreshAcceptButton();
	var _g = new haxe_ds_ObjectMap();
	var key = this.challengeByLabel;
	var _g1 = new haxe_ds_EnumValueMap();
	_g1.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.FontSize),gfx_ResponsivenessRule.VMIN(6));
	_g.set(key,_g1);
	var key = this.challengeCard;
	var _g1 = new haxe_ds_EnumValueMap();
	_g1.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.VerticalSpacing),gfx_ResponsivenessRule.VMIN(1.75));
	_g.set(key,_g1);
	var key = this.descriptionHBox;
	var _g1 = new haxe_ds_EnumValueMap();
	_g1.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.HorizontalSpacing),gfx_ResponsivenessRule.VMIN(2));
	_g.set(key,_g1);
	var key = this.tcIconBox;
	var _g1 = new haxe_ds_EnumValueMap();
	_g1.set(gfx_ResponsiveProperty.Width,gfx_ResponsivenessRule.VMIN(16));
	_g1.set(gfx_ResponsiveProperty.Height,gfx_ResponsivenessRule.VMIN(16));
	_g.set(key,_g1);
	var key = this.tcLabel;
	var _g1 = new haxe_ds_EnumValueMap();
	_g1.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.FontSize),gfx_ResponsivenessRule.VMIN(4));
	_g.set(key,_g1);
	var key = this.bracketLabel;
	var _g1 = new haxe_ds_EnumValueMap();
	_g1.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.FontSize),gfx_ResponsivenessRule.VMIN(4));
	_g.set(key,_g1);
	var key = this.paramsBox;
	var _g1 = new haxe_ds_EnumValueMap();
	_g1.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.HorizontalSpacing),gfx_ResponsivenessRule.VMIN(1.5));
	_g.set(key,_g1);
	var key = this.paramsLabel;
	var _g1 = new haxe_ds_EnumValueMap();
	_g1.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.FontSize),gfx_ResponsivenessRule.VMIN(4));
	_g.set(key,_g1);
	var key = this.colorIcon;
	var _g1 = new haxe_ds_EnumValueMap();
	_g1.set(gfx_ResponsiveProperty.Width,gfx_ResponsivenessRule.VMIN(4));
	_g1.set(gfx_ResponsiveProperty.Height,gfx_ResponsivenessRule.VMIN(4));
	_g.set(key,_g1);
	var key = this.customStartPosIcon;
	var _g1 = new haxe_ds_EnumValueMap();
	_g1.set(gfx_ResponsiveProperty.Width,gfx_ResponsivenessRule.VMIN(4));
	_g1.set(gfx_ResponsiveProperty.Height,gfx_ResponsivenessRule.VMIN(4));
	_g.set(key,_g1);
	var key = this.acceptBtn;
	var _g1 = new haxe_ds_EnumValueMap();
	_g1.set(gfx_ResponsiveProperty.StyleProp(gfx_ResponsiveStyleProperty.FontSize),gfx_ResponsivenessRule.VMIN(4.5));
	_g.set(key,_g1);
	this.responsiveComponents = _g;
	var c = this.acceptBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onAccepted));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "acceptBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "gfx.screens.OpenChallengeJoining", methodName : "new"});
	}
};
$hxClasses["gfx.screens.OpenChallengeJoining"] = gfx_screens_OpenChallengeJoining;
gfx_screens_OpenChallengeJoining.__name__ = "gfx.screens.OpenChallengeJoining";
gfx_screens_OpenChallengeJoining.__interfaces__ = [IGlobalEventObserver];
gfx_screens_OpenChallengeJoining.__super__ = gfx_Screen;
gfx_screens_OpenChallengeJoining.prototype = $extend(gfx_Screen.prototype,{
	challengeID: null
	,ratedChallenge: null
	,ownerLogin: null
	,onEnter: function() {
		GlobalBroadcaster.addObserver(this);
	}
	,onClose: function() {
		GlobalBroadcaster.removeObserver(this);
	}
	,handleGlobalEvent: function(event) {
		switch(event._hx_index) {
		case 0:case 1:
			this.refreshAcceptButton();
			break;
		default:
		}
	}
	,canAccept: function() {
		if(!LoginManager.isPlayer(this.ownerLogin)) {
			if(!LoginManager.isLogged()) {
				return !this.ratedChallenge;
			} else {
				return true;
			}
		} else {
			return false;
		}
	}
	,refreshAcceptButton: function() {
		this.acceptBtn.set_disabled(!this.canAccept());
	}
	,onAccepted: function(e) {
		if(this.canAccept()) {
			Networker.emitEvent(net_shared_ClientEvent.AcceptChallenge(this.challengeID));
		}
	}
	,onReady: function() {
		gfx_Screen.prototype.onReady.call(this);
		if(this.tcIcon.get_originalWidth() > this.tcIcon.get_originalHeight()) {
			this.tcIcon.set_percentWidth(100);
		} else {
			this.tcIcon.set_percentHeight(100);
		}
	}
	,registerBehaviours: function() {
		gfx_Screen.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gfx_Screen.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_data: null
	,self: function() {
		return new gfx_screens_OpenChallengeJoining(this._constructorParam_data);
	}
	,tcLabel: null
	,tcIconBox: null
	,tcIcon: null
	,paramsLabel: null
	,paramsBox: null
	,descriptionHBox: null
	,customStartPosIcon: null
	,colorIcon: null
	,challengeCard: null
	,challengeByLabel: null
	,bracketLabel: null
	,acceptBtn: null
	,__class__: gfx_screens_OpenChallengeJoining
});
var gfx_screens_Profile = function(ownerLogin,data) {
	gfx_Screen.call(this);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_id("contentsBox");
	c0.set_width(800.);
	c0.set_percentHeight(100.);
	c0.set_horizontalAlign("center");
	var c1 = new haxe_ui_containers_TabView();
	c1.set_id("tabView");
	c1.set_percentWidth(100.);
	c1.set_percentHeight(100.);
	c1.set_styleNames("full-width-buttons");
	c1.set_styleString("font-size:22px;");
	c0.addComponent(c1);
	this.addComponent(c0);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.tabView = c1;
	this.contentsBox = c0;
	this.profileOwnerLogin = ownerLogin;
	this.isPlayer = LoginManager.isPlayer(ownerLogin);
	this.data = data;
	var header = new gfx_profile_complex_$components_ProfileHeader(ownerLogin,data);
	var friendsList = new gfx_profile_complex_$components_FriendList(gfx_basic_$components_utils_DimValue.Percent(100),50);
	friendsList.fill(data.friends);
	var pastGamesTab = new gfx_profile_complex_$components_PastGamesTab(ownerLogin,data.preloadedGames,data.elo,data.gamesCntByTimeControl,data.totalPastGames);
	var studiesTab = new gfx_profile_complex_$components_StudiesTab(ownerLogin,data.preloadedStudies,data.totalStudies);
	var ongoingGamesTab = new gfx_profile_complex_$components_OngoingGamesTab(ownerLogin,data.gamesInProgress);
	this.contentsBox.addComponentAt(header,0);
	this.contentsBox.addComponentAt(friendsList,1);
	this.tabView.addComponent(pastGamesTab);
	this.tabView.addComponent(studiesTab);
	this.tabView.addComponent(ongoingGamesTab);
	gfx_basic_$components_utils_DimValue_assignWidth(header,gfx_basic_$components_utils_DimValue.Percent(100));
	this.customEnterHandler = $bind(this,this.onEnter);
	this.customCloseHandler = $bind(this,this.onClose);
};
$hxClasses["gfx.screens.Profile"] = gfx_screens_Profile;
gfx_screens_Profile.__name__ = "gfx.screens.Profile";
gfx_screens_Profile.__super__ = gfx_Screen;
gfx_screens_Profile.prototype = $extend(gfx_Screen.prototype,{
	profileOwnerLogin: null
	,isPlayer: null
	,data: null
	,onEnter: function() {
		gfx_SceneManager.addResizeHandler($bind(this,this.onResize));
	}
	,onClose: function() {
		gfx_SceneManager.removeResizeHandler($bind(this,this.onResize));
	}
	,onResize: function() {
		if(haxe_ui_core_Screen.get_instance().get_actualWidth() > 800) {
			gfx_basic_$components_utils_DimValue_assignWidth(this.contentsBox,gfx_basic_$components_utils_DimValue.Exact(800));
		} else {
			gfx_basic_$components_utils_DimValue_assignWidth(this.contentsBox,gfx_basic_$components_utils_DimValue.Percent(100));
		}
	}
	,registerBehaviours: function() {
		gfx_Screen.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = gfx_Screen.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_ownerLogin: null
	,_constructorParam_data: null
	,self: function() {
		return new gfx_screens_Profile(this._constructorParam_ownerLogin,this._constructorParam_data);
	}
	,tabView: null
	,contentsBox: null
	,__class__: gfx_screens_Profile
});
var gfx_utils_Colors = function() { };
$hxClasses["gfx.utils.Colors"] = gfx_utils_Colors;
gfx_utils_Colors.__name__ = "gfx.utils.Colors";
gfx_utils_Colors.hexFill = function(selectionState,isDark) {
	switch(selectionState._hx_index) {
	case 0:
		if(isDark) {
			return 13732679;
		} else {
			return 16764831;
		}
		break;
	case 1:
		if(isDark) {
			return 12491814;
		} else {
			return 16634688;
		}
		break;
	case 2:
		if(isDark) {
			return 6586425;
		} else {
			return 8822368;
		}
		break;
	case 3:case 6:
		return 15032320;
	case 4:
		if(isDark) {
			return 12465958;
		} else {
			return 16738645;
		}
		break;
	case 5:
		if(isDark) {
			return 13738353;
		} else {
			return 16771281;
		}
		break;
	}
};
gfx_utils_Colors.hexRowNumber = function(isDark) {
	if(isDark) {
		return 16767154;
	} else {
		return 6701350;
	}
};
var gfx_utils_PlyScrollType = $hxEnums["gfx.utils.PlyScrollType"] = { __ename__:"gfx.utils.PlyScrollType",__constructs__:null
	,Home: {_hx_name:"Home",_hx_index:0,__enum__:"gfx.utils.PlyScrollType",toString:$estr}
	,Prev: {_hx_name:"Prev",_hx_index:1,__enum__:"gfx.utils.PlyScrollType",toString:$estr}
	,Next: {_hx_name:"Next",_hx_index:2,__enum__:"gfx.utils.PlyScrollType",toString:$estr}
	,End: {_hx_name:"End",_hx_index:3,__enum__:"gfx.utils.PlyScrollType",toString:$estr}
	,Precise: ($_=function(plyNum) { return {_hx_index:4,plyNum:plyNum,__enum__:"gfx.utils.PlyScrollType",toString:$estr}; },$_._hx_name="Precise",$_.__params__ = ["plyNum"],$_)
};
gfx_utils_PlyScrollType.__constructs__ = [gfx_utils_PlyScrollType.Home,gfx_utils_PlyScrollType.Prev,gfx_utils_PlyScrollType.Next,gfx_utils_PlyScrollType.End,gfx_utils_PlyScrollType.Precise];
gfx_utils_PlyScrollType.__empty_constructs__ = [gfx_utils_PlyScrollType.Home,gfx_utils_PlyScrollType.Prev,gfx_utils_PlyScrollType.Next,gfx_utils_PlyScrollType.End];
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = "haxe.IMap";
haxe_IMap.__isInterface__ = true;
haxe_IMap.prototype = {
	get: null
	,keys: null
	,__class__: haxe_IMap
};
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
$hxClasses["haxe.Exception"] = haxe_Exception;
haxe_Exception.__name__ = "haxe.Exception";
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	__skipStack: null
	,__nativeException: null
	,__previousException: null
	,unwrap: function() {
		return this.__nativeException;
	}
	,toString: function() {
		return this.get_message();
	}
	,get_message: function() {
		return this.message;
	}
	,get_native: function() {
		return this.__nativeException;
	}
	,__class__: haxe_Exception
	,__properties__: {get_native:"get_native",get_message:"get_message"}
});
var haxe_Int32 = {};
haxe_Int32.ucompare = function(a,b) {
	if(a < 0) {
		if(b < 0) {
			return ~b - ~a | 0;
		} else {
			return 1;
		}
	}
	if(b < 0) {
		return -1;
	} else {
		return a - b | 0;
	}
};
var haxe_Int64 = {};
haxe_Int64.toString = function(this1) {
	var i = this1;
	var b_high = 0;
	var b_low = 0;
	if(i.high == b_high && i.low == b_low) {
		return "0";
	}
	var str = "";
	var neg = false;
	if(i.high < 0) {
		neg = true;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(0,10);
	var ten = this1;
	while(true) {
		var b_high = 0;
		var b_low = 0;
		if(!(i.high != b_high || i.low != b_low)) {
			break;
		}
		var r = haxe_Int64.divMod(i,ten);
		if(r.modulus.high < 0) {
			var x = r.modulus;
			var high = ~x.high;
			var low = ~x.low + 1 | 0;
			if(low == 0) {
				var ret = high++;
				high = high | 0;
			}
			var this_high = high;
			var this_low = low;
			str = this_low + str;
			var x1 = r.quotient;
			var high1 = ~x1.high;
			var low1 = ~x1.low + 1 | 0;
			if(low1 == 0) {
				var ret1 = high1++;
				high1 = high1 | 0;
			}
			var this1 = new haxe__$Int64__$_$_$Int64(high1,low1);
			i = this1;
		} else {
			str = r.modulus.low + str;
			i = r.quotient;
		}
	}
	if(neg) {
		str = "-" + str;
	}
	return str;
};
haxe_Int64.divMod = function(dividend,divisor) {
	if(divisor.high == 0) {
		switch(divisor.low) {
		case 0:
			throw haxe_Exception.thrown("divide by zero");
		case 1:
			var this1 = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
			var this2 = new haxe__$Int64__$_$_$Int64(0,0);
			return { quotient : this1, modulus : this2};
		}
	}
	var divSign = dividend.high < 0 != divisor.high < 0;
	var modulus;
	if(dividend.high < 0) {
		var high = ~dividend.high;
		var low = ~dividend.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		modulus = this1;
	} else {
		var this1 = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
		modulus = this1;
	}
	if(divisor.high < 0) {
		var high = ~divisor.high;
		var low = ~divisor.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		divisor = this1;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	var quotient = this1;
	var this1 = new haxe__$Int64__$_$_$Int64(0,1);
	var mask = this1;
	while(!(divisor.high < 0)) {
		var v = haxe_Int32.ucompare(divisor.high,modulus.high);
		var cmp = v != 0 ? v : haxe_Int32.ucompare(divisor.low,modulus.low);
		var b = 1;
		b &= 63;
		if(b == 0) {
			var this1 = new haxe__$Int64__$_$_$Int64(divisor.high,divisor.low);
			divisor = this1;
		} else if(b < 32) {
			var this2 = new haxe__$Int64__$_$_$Int64(divisor.high << b | divisor.low >>> 32 - b,divisor.low << b);
			divisor = this2;
		} else {
			var this3 = new haxe__$Int64__$_$_$Int64(divisor.low << b - 32,0);
			divisor = this3;
		}
		var b1 = 1;
		b1 &= 63;
		if(b1 == 0) {
			var this4 = new haxe__$Int64__$_$_$Int64(mask.high,mask.low);
			mask = this4;
		} else if(b1 < 32) {
			var this5 = new haxe__$Int64__$_$_$Int64(mask.high << b1 | mask.low >>> 32 - b1,mask.low << b1);
			mask = this5;
		} else {
			var this6 = new haxe__$Int64__$_$_$Int64(mask.low << b1 - 32,0);
			mask = this6;
		}
		if(cmp >= 0) {
			break;
		}
	}
	while(true) {
		var b_high = 0;
		var b_low = 0;
		if(!(mask.high != b_high || mask.low != b_low)) {
			break;
		}
		var v = haxe_Int32.ucompare(modulus.high,divisor.high);
		if((v != 0 ? v : haxe_Int32.ucompare(modulus.low,divisor.low)) >= 0) {
			var this1 = new haxe__$Int64__$_$_$Int64(quotient.high | mask.high,quotient.low | mask.low);
			quotient = this1;
			var high = modulus.high - divisor.high | 0;
			var low = modulus.low - divisor.low | 0;
			if(haxe_Int32.ucompare(modulus.low,divisor.low) < 0) {
				var ret = high--;
				high = high | 0;
			}
			var this2 = new haxe__$Int64__$_$_$Int64(high,low);
			modulus = this2;
		}
		var b = 1;
		b &= 63;
		if(b == 0) {
			var this3 = new haxe__$Int64__$_$_$Int64(mask.high,mask.low);
			mask = this3;
		} else if(b < 32) {
			var this4 = new haxe__$Int64__$_$_$Int64(mask.high >>> b,mask.high << 32 - b | mask.low >>> b);
			mask = this4;
		} else {
			var this5 = new haxe__$Int64__$_$_$Int64(0,mask.high >>> b - 32);
			mask = this5;
		}
		var b1 = 1;
		b1 &= 63;
		if(b1 == 0) {
			var this6 = new haxe__$Int64__$_$_$Int64(divisor.high,divisor.low);
			divisor = this6;
		} else if(b1 < 32) {
			var this7 = new haxe__$Int64__$_$_$Int64(divisor.high >>> b1,divisor.high << 32 - b1 | divisor.low >>> b1);
			divisor = this7;
		} else {
			var this8 = new haxe__$Int64__$_$_$Int64(0,divisor.high >>> b1 - 32);
			divisor = this8;
		}
	}
	if(divSign) {
		var high = ~quotient.high;
		var low = ~quotient.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		quotient = this1;
	}
	if(dividend.high < 0) {
		var high = ~modulus.high;
		var low = ~modulus.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		modulus = this1;
	}
	return { quotient : quotient, modulus : modulus};
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = "haxe._Int64.___Int64";
haxe__$Int64__$_$_$Int64.prototype = {
	high: null
	,low: null
	,__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = "haxe.Log";
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			str += ", " + Std.string(v);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_Resource = function() { };
$hxClasses["haxe.Resource"] = haxe_Resource;
haxe_Resource.__name__ = "haxe.Resource";
haxe_Resource.listNames = function() {
	var _g = [];
	var _g1 = 0;
	var _g2 = haxe_Resource.content;
	while(_g1 < _g2.length) {
		var x = _g2[_g1];
		++_g1;
		_g.push(x.name);
	}
	return _g;
};
haxe_Resource.getString = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return x.str;
			}
			var b = haxe_crypto_Base64.decode(x.data);
			return b.toString();
		}
	}
	return null;
};
haxe_Resource.getBytes = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return haxe_io_Bytes.ofString(x.str);
			}
			return haxe_crypto_Base64.decode(x.data);
		}
	}
	return null;
};
var haxe_Serializer = function() {
	this.buf = new StringBuf();
	this.cache = [];
	this.useCache = haxe_Serializer.USE_CACHE;
	this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;
	this.shash = new haxe_ds_StringMap();
	this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe_Serializer;
haxe_Serializer.__name__ = "haxe.Serializer";
haxe_Serializer.run = function(v) {
	var s = new haxe_Serializer();
	s.serialize(v);
	return s.toString();
};
haxe_Serializer.prototype = {
	buf: null
	,cache: null
	,shash: null
	,scount: null
	,useCache: null
	,useEnumIndex: null
	,toString: function() {
		return this.buf.b;
	}
	,serializeString: function(s) {
		var x = this.shash.h[s];
		if(x != null) {
			this.buf.b += "R";
			this.buf.b += x == null ? "null" : "" + x;
			return;
		}
		this.shash.h[s] = this.scount++;
		this.buf.b += "y";
		s = encodeURIComponent(s);
		this.buf.b += Std.string(s.length);
		this.buf.b += ":";
		this.buf.b += s == null ? "null" : "" + s;
	}
	,serializeRef: function(v) {
		var vt = typeof(v);
		var _g = 0;
		var _g1 = this.cache.length;
		while(_g < _g1) {
			var i = _g++;
			var ci = this.cache[i];
			if(typeof(ci) == vt && ci == v) {
				this.buf.b += "r";
				this.buf.b += i == null ? "null" : "" + i;
				return true;
			}
		}
		this.cache.push(v);
		return false;
	}
	,serializeFields: function(v) {
		var _g = 0;
		var _g1 = Reflect.fields(v);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.serializeString(f);
			this.serialize(Reflect.field(v,f));
		}
		this.buf.b += "g";
	}
	,serialize: function(v) {
		var _g = Type.typeof(v);
		switch(_g._hx_index) {
		case 0:
			this.buf.b += "n";
			break;
		case 1:
			var v1 = v;
			if(v1 == 0) {
				this.buf.b += "z";
				return;
			}
			this.buf.b += "i";
			this.buf.b += v1 == null ? "null" : "" + v1;
			break;
		case 2:
			var v1 = v;
			if(isNaN(v1)) {
				this.buf.b += "k";
			} else if(!isFinite(v1)) {
				this.buf.b += v1 < 0 ? "m" : "p";
			} else {
				this.buf.b += "d";
				this.buf.b += v1 == null ? "null" : "" + v1;
			}
			break;
		case 3:
			this.buf.b += v ? "t" : "f";
			break;
		case 4:
			if(js_Boot.__instanceof(v,Class)) {
				var className = v.__name__;
				this.buf.b += "A";
				this.serializeString(className);
			} else if(js_Boot.__instanceof(v,Enum)) {
				this.buf.b += "B";
				this.serializeString(v.__ename__);
			} else {
				if(this.useCache && this.serializeRef(v)) {
					return;
				}
				this.buf.b += "o";
				this.serializeFields(v);
			}
			break;
		case 5:
			throw haxe_Exception.thrown("Cannot serialize function");
		case 6:
			var c = _g.c;
			if(c == String) {
				this.serializeString(v);
				return;
			}
			if(this.useCache && this.serializeRef(v)) {
				return;
			}
			switch(c) {
			case Array:
				var ucount = 0;
				this.buf.b += "a";
				var l = v["length"];
				var _g1 = 0;
				var _g2 = l;
				while(_g1 < _g2) {
					var i = _g1++;
					if(v[i] == null) {
						++ucount;
					} else {
						if(ucount > 0) {
							if(ucount == 1) {
								this.buf.b += "n";
							} else {
								this.buf.b += "u";
								this.buf.b += ucount == null ? "null" : "" + ucount;
							}
							ucount = 0;
						}
						this.serialize(v[i]);
					}
				}
				if(ucount > 0) {
					if(ucount == 1) {
						this.buf.b += "n";
					} else {
						this.buf.b += "u";
						this.buf.b += ucount == null ? "null" : "" + ucount;
					}
				}
				this.buf.b += "h";
				break;
			case Date:
				var d = v;
				this.buf.b += "v";
				this.buf.b += Std.string(d.getTime());
				break;
			case haxe_ds_IntMap:
				this.buf.b += "q";
				var v1 = v;
				var k = v1.keys();
				while(k.hasNext()) {
					var k1 = k.next();
					this.buf.b += ":";
					this.buf.b += k1 == null ? "null" : "" + k1;
					this.serialize(v1.h[k1]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_List:
				this.buf.b += "l";
				var v1 = v;
				var _g_head = v1.h;
				while(_g_head != null) {
					var val = _g_head.item;
					_g_head = _g_head.next;
					var i = val;
					this.serialize(i);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_ObjectMap:
				this.buf.b += "M";
				var v1 = v;
				var k = v1.keys();
				while(k.hasNext()) {
					var k1 = k.next();
					var id = Reflect.field(k1,"__id__");
					Reflect.deleteField(k1,"__id__");
					this.serialize(k1);
					k1["__id__"] = id;
					this.serialize(v1.h[k1.__id__]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_StringMap:
				this.buf.b += "b";
				var v1 = v;
				var h = v1.h;
				var _g_h = h;
				var _g_keys = Object.keys(h);
				var _g_length = _g_keys.length;
				var _g_current = 0;
				while(_g_current < _g_length) {
					var k = _g_keys[_g_current++];
					this.serializeString(k);
					this.serialize(v1.h[k]);
				}
				this.buf.b += "h";
				break;
			case haxe_io_Bytes:
				var v1 = v;
				this.buf.b += "s";
				this.buf.b += Std.string(Math.ceil(v1.length * 8 / 6));
				this.buf.b += ":";
				var i = 0;
				var max = v1.length - 2;
				var b64 = haxe_Serializer.BASE64_CODES;
				if(b64 == null) {
					var this1 = new Array(haxe_Serializer.BASE64.length);
					b64 = this1;
					var _g1 = 0;
					var _g2 = haxe_Serializer.BASE64.length;
					while(_g1 < _g2) {
						var i1 = _g1++;
						b64[i1] = HxOverrides.cca(haxe_Serializer.BASE64,i1);
					}
					haxe_Serializer.BASE64_CODES = b64;
				}
				while(i < max) {
					var b1 = v1.b[i++];
					var b2 = v1.b[i++];
					var b3 = v1.b[i++];
					this.buf.b += String.fromCodePoint(b64[b1 >> 2]);
					this.buf.b += String.fromCodePoint(b64[(b1 << 4 | b2 >> 4) & 63]);
					this.buf.b += String.fromCodePoint(b64[(b2 << 2 | b3 >> 6) & 63]);
					this.buf.b += String.fromCodePoint(b64[b3 & 63]);
				}
				if(i == max) {
					var b1 = v1.b[i++];
					var b2 = v1.b[i++];
					this.buf.b += String.fromCodePoint(b64[b1 >> 2]);
					this.buf.b += String.fromCodePoint(b64[(b1 << 4 | b2 >> 4) & 63]);
					this.buf.b += String.fromCodePoint(b64[b2 << 2 & 63]);
				} else if(i == max + 1) {
					var b1 = v1.b[i++];
					this.buf.b += String.fromCodePoint(b64[b1 >> 2]);
					this.buf.b += String.fromCodePoint(b64[b1 << 4 & 63]);
				}
				break;
			default:
				if(this.useCache) {
					this.cache.pop();
				}
				if(v.hxSerialize != null) {
					this.buf.b += "C";
					this.serializeString(c.__name__);
					if(this.useCache) {
						this.cache.push(v);
					}
					v.hxSerialize(this);
					this.buf.b += "g";
				} else {
					this.buf.b += "c";
					this.serializeString(c.__name__);
					if(this.useCache) {
						this.cache.push(v);
					}
					this.serializeFields(v);
				}
			}
			break;
		case 7:
			var e = _g.e;
			if(this.useCache) {
				if(this.serializeRef(v)) {
					return;
				}
				this.cache.pop();
			}
			this.buf.b += Std.string(this.useEnumIndex ? "j" : "w");
			this.serializeString(e.__ename__);
			if(this.useEnumIndex) {
				this.buf.b += ":";
				this.buf.b += Std.string(v._hx_index);
			} else {
				var e = v;
				this.serializeString($hxEnums[e.__enum__].__constructs__[e._hx_index]._hx_name);
			}
			this.buf.b += ":";
			var params = Type.enumParameters(v);
			this.buf.b += Std.string(params.length);
			var _g = 0;
			while(_g < params.length) {
				var p = params[_g];
				++_g;
				this.serialize(p);
			}
			if(this.useCache) {
				this.cache.push(v);
			}
			break;
		default:
			throw haxe_Exception.thrown("Cannot serialize " + Std.string(v));
		}
	}
	,__class__: haxe_Serializer
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = "haxe.Timer";
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	id: null
	,stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = "haxe._Unserializer.DefaultResolver";
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return $hxClasses[name];
	}
	,resolveEnum: function(name) {
		return $hxEnums[name];
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = this.buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = "haxe.Unserializer";
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g = 0;
	var _g1 = haxe_Unserializer.BASE64.length;
	while(_g < _g1) {
		var i = _g++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	buf: null
	,pos: null
	,length: null
	,cache: null
	,scache: null
	,resolver: null
	,readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw haxe_Exception.thrown("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw haxe_Exception.thrown("Invalid object key");
			}
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw haxe_Exception.thrown("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		switch(this.buf.charCodeAt(this.pos++)) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			return cl;
		case 66:
			var name = this.unserialize();
			var e = this.resolver.resolveEnum(name);
			if(e == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			return e;
		case 67:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			var o = Object.create(cl.prototype);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw haxe_Exception.thrown("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw haxe_Exception.thrown("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n = this.readDigits();
					a[a.length + n - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h = new haxe_ds_StringMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				var value = this.unserialize();
				h.h[s] = value;
			}
			this.pos++;
			return h;
		case 99:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			var o = Object.create(cl.prototype);
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			this.pos++;
			var index = this.readDigits();
			var _this = edecl.__constructs__;
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = _this[i]._hx_name;
			}
			var tag = result[index];
			if(tag == null) {
				throw haxe_Exception.thrown("Unknown enum index " + name + "@" + index);
			}
			var e = this.unserializeEnum(edecl,tag);
			this.cache.push(e);
			return e;
		case 107:
			return NaN;
		case 108:
			var l = new haxe_ds_List();
			this.cache.push(l);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o = { };
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 112:
			return Infinity;
		case 113:
			var h = new haxe_ds_IntMap();
			this.cache.push(h);
			var buf = this.buf;
			var c = this.buf.charCodeAt(this.pos++);
			while(c == 58) {
				var i = this.readDigits();
				var value = this.unserialize();
				h.h[i] = value;
				c = this.buf.charCodeAt(this.pos++);
			}
			if(c != 104) {
				throw haxe_Exception.thrown("Invalid IntMap format");
			}
			return h;
		case 114:
			var n = this.readDigits();
			if(n < 0 || n >= this.cache.length) {
				throw haxe_Exception.thrown("Invalid reference");
			}
			return this.cache[n];
		case 115:
			var len = this.readDigits();
			var buf = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw haxe_Exception.thrown("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);
			var max = i + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i < max) {
				var c1 = codes[buf.charCodeAt(i++)];
				var c2 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c1 << 2 | c2 >> 4;
				var c3 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				var c4 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c3 << 6 | c4;
			}
			if(rest >= 2) {
				var c1 = codes[buf.charCodeAt(i++)];
				var c2 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c1 << 2 | c2 >> 4;
				if(rest == 3) {
					var c3 = codes[buf.charCodeAt(i++)];
					bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				d = new Date(this.readFloat());
			}
			this.cache.push(d);
			return d;
		case 119:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			var e = this.unserializeEnum(edecl,this.unserialize());
			this.cache.push(e);
			return e;
		case 120:
			throw haxe_Exception.thrown(this.unserialize());
		case 121:
			var len = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw haxe_Exception.thrown("Invalid string length");
			}
			var s = HxOverrides.substr(this.buf,this.pos,len);
			this.pos += len;
			s = decodeURIComponent(s.split("+").join(" "));
			this.scache.push(s);
			return s;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw haxe_Exception.thrown("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
$hxClasses["haxe.ValueException"] = haxe_ValueException;
haxe_ValueException.__name__ = "haxe.ValueException";
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	value: null
	,unwrap: function() {
		return this.value;
	}
	,__class__: haxe_ValueException
});
var haxe_crypto_Adler32 = function() {
	this.a1 = 1;
	this.a2 = 0;
};
$hxClasses["haxe.crypto.Adler32"] = haxe_crypto_Adler32;
haxe_crypto_Adler32.__name__ = "haxe.crypto.Adler32";
haxe_crypto_Adler32.make = function(b) {
	var a = new haxe_crypto_Adler32();
	a.update(b,0,b.length);
	return a.get();
};
haxe_crypto_Adler32.prototype = {
	a1: null
	,a2: null
	,get: function() {
		return this.a2 << 16 | this.a1;
	}
	,update: function(b,pos,len) {
		var a1 = this.a1;
		var a2 = this.a2;
		var _g = pos;
		var _g1 = pos + len;
		while(_g < _g1) {
			var p = _g++;
			var c = b.b[p];
			a1 = (a1 + c) % 65521;
			a2 = (a2 + a1) % 65521;
		}
		this.a1 = a1;
		this.a2 = a2;
	}
	,__class__: haxe_crypto_Adler32
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__:"haxe.io.Encoding",__constructs__:null
	,UTF8: {_hx_name:"UTF8",_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_name:"RawNative",_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
haxe_io_Encoding.__constructs__ = [haxe_io_Encoding.UTF8,haxe_io_Encoding.RawNative];
haxe_io_Encoding.__empty_constructs__ = [haxe_io_Encoding.UTF8,haxe_io_Encoding.RawNative];
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = "haxe.crypto.Base64";
haxe_crypto_Base64.encode = function(bytes,complement) {
	if(complement == null) {
		complement = true;
	}
	var str = new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).encodeBytes(bytes).toString();
	if(complement) {
		switch(bytes.length % 3) {
		case 1:
			str += "==";
			break;
		case 2:
			str += "=";
			break;
		default:
		}
	}
	return str;
};
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw haxe_Exception.thrown("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = "haxe.crypto.BaseCode";
haxe_crypto_BaseCode.prototype = {
	base: null
	,nbits: null
	,tbl: null
	,encodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		var size = b.length * 8 / nbits | 0;
		var out = new haxe_io_Bytes(new ArrayBuffer(size + (b.length * 8 % nbits == 0 ? 0 : 1)));
		var buf = 0;
		var curbits = 0;
		var mask = (1 << nbits) - 1;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < nbits) {
				curbits += 8;
				buf <<= 8;
				buf |= b.b[pin++];
			}
			curbits -= nbits;
			out.b[pout++] = base.b[buf >> curbits & mask];
		}
		if(curbits > 0) {
			out.b[pout++] = base.b[buf << nbits - curbits & mask];
		}
		return out;
	}
	,initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g = 0;
		var _g1 = this.base.length;
		while(_g < _g1) {
			var i = _g++;
			tbl[this.base.b[i]] = i;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw haxe_Exception.thrown("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_crypto_Crc32 = function() { };
$hxClasses["haxe.crypto.Crc32"] = haxe_crypto_Crc32;
haxe_crypto_Crc32.__name__ = "haxe.crypto.Crc32";
haxe_crypto_Crc32.make = function(data) {
	var c_crc = -1;
	var b = data.b.bufferValue;
	var _g = 0;
	var _g1 = data.length;
	while(_g < _g1) {
		var i = _g++;
		var tmp = (c_crc ^ b.bytes[i]) & 255;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		c_crc = c_crc >>> 8 ^ tmp;
	}
	return c_crc ^ -1;
};
var haxe_ds_ArraySort = function() { };
$hxClasses["haxe.ds.ArraySort"] = haxe_ds_ArraySort;
haxe_ds_ArraySort.__name__ = "haxe.ds.ArraySort";
haxe_ds_ArraySort.sort = function(a,cmp) {
	haxe_ds_ArraySort.rec(a,cmp,0,a.length);
};
haxe_ds_ArraySort.rec = function(a,cmp,from,to) {
	var middle = from + to >> 1;
	if(to - from < 12) {
		if(to <= from) {
			return;
		}
		var _g = from + 1;
		var _g1 = to;
		while(_g < _g1) {
			var i = _g++;
			var j = i;
			while(j > from) {
				if(cmp(a[j],a[j - 1]) < 0) {
					haxe_ds_ArraySort.swap(a,j - 1,j);
				} else {
					break;
				}
				--j;
			}
		}
		return;
	}
	haxe_ds_ArraySort.rec(a,cmp,from,middle);
	haxe_ds_ArraySort.rec(a,cmp,middle,to);
	haxe_ds_ArraySort.doMerge(a,cmp,from,middle,to,middle - from,to - middle);
};
haxe_ds_ArraySort.doMerge = function(a,cmp,from,pivot,to,len1,len2) {
	var first_cut;
	var second_cut;
	var len11;
	var len22;
	if(len1 == 0 || len2 == 0) {
		return;
	}
	if(len1 + len2 == 2) {
		if(cmp(a[pivot],a[from]) < 0) {
			haxe_ds_ArraySort.swap(a,pivot,from);
		}
		return;
	}
	if(len1 > len2) {
		len11 = len1 >> 1;
		first_cut = from + len11;
		second_cut = haxe_ds_ArraySort.lower(a,cmp,pivot,to,first_cut);
		len22 = second_cut - pivot;
	} else {
		len22 = len2 >> 1;
		second_cut = pivot + len22;
		first_cut = haxe_ds_ArraySort.upper(a,cmp,from,pivot,second_cut);
		len11 = first_cut - from;
	}
	haxe_ds_ArraySort.rotate(a,cmp,first_cut,pivot,second_cut);
	var new_mid = first_cut + len22;
	haxe_ds_ArraySort.doMerge(a,cmp,from,first_cut,new_mid,len11,len22);
	haxe_ds_ArraySort.doMerge(a,cmp,new_mid,second_cut,to,len1 - len11,len2 - len22);
};
haxe_ds_ArraySort.rotate = function(a,cmp,from,mid,to) {
	if(from == mid || mid == to) {
		return;
	}
	var n = haxe_ds_ArraySort.gcd(to - from,mid - from);
	while(n-- != 0) {
		var val = a[from + n];
		var shift = mid - from;
		var p1 = from + n;
		var p2 = from + n + shift;
		while(p2 != from + n) {
			a[p1] = a[p2];
			p1 = p2;
			if(to - p2 > shift) {
				p2 += shift;
			} else {
				p2 = from + (shift - (to - p2));
			}
		}
		a[p1] = val;
	}
};
haxe_ds_ArraySort.gcd = function(m,n) {
	while(n != 0) {
		var t = m % n;
		m = n;
		n = t;
	}
	return m;
};
haxe_ds_ArraySort.upper = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[val],a[mid]) < 0) {
			len = half;
		} else {
			from = mid + 1;
			len = len - half - 1;
		}
	}
	return from;
};
haxe_ds_ArraySort.lower = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[mid],a[val]) < 0) {
			from = mid + 1;
			len = len - half - 1;
		} else {
			len = half;
		}
	}
	return from;
};
haxe_ds_ArraySort.swap = function(a,i,j) {
	var tmp = a[i];
	a[i] = a[j];
	a[j] = tmp;
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = "haxe.ds.BalancedTree";
haxe_ds_BalancedTree.__interfaces__ = [haxe_IMap];
haxe_ds_BalancedTree.iteratorLoop = function(node,acc) {
	if(node != null) {
		haxe_ds_BalancedTree.iteratorLoop(node.left,acc);
		acc.push(node.value);
		haxe_ds_BalancedTree.iteratorLoop(node.right,acc);
	}
};
haxe_ds_BalancedTree.prototype = {
	root: null
	,set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,remove: function(key) {
		try {
			this.root = this.removeLoop(key,this.root);
			return true;
		} catch( _g ) {
			if(typeof(haxe_Exception.caught(_g).unwrap()) == "string") {
				return false;
			} else {
				throw _g;
			}
		}
	}
	,exists: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return true;
			} else if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return false;
	}
	,iterator: function() {
		var ret = [];
		haxe_ds_BalancedTree.iteratorLoop(this.root,ret);
		return new haxe_iterators_ArrayIterator(ret);
	}
	,keys: function() {
		var ret = [];
		this.keysLoop(this.root,ret);
		return new haxe_iterators_ArrayIterator(ret);
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,removeLoop: function(k,node) {
		if(node == null) {
			throw haxe_Exception.thrown("Not_found");
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return this.merge(node.left,node.right);
		} else if(c < 0) {
			return this.balance(this.removeLoop(k,node.left),node.key,node.value,node.right);
		} else {
			return this.balance(node.left,node.key,node.value,this.removeLoop(k,node.right));
		}
	}
	,keysLoop: function(node,acc) {
		if(node != null) {
			this.keysLoop(node.left,acc);
			acc.push(node.key);
			this.keysLoop(node.right,acc);
		}
	}
	,merge: function(t1,t2) {
		if(t1 == null) {
			return t2;
		}
		if(t2 == null) {
			return t1;
		}
		var t = this.minBinding(t2);
		return this.balance(t1,t.key,t.value,this.removeMinBinding(t2));
	}
	,minBinding: function(t) {
		if(t == null) {
			throw haxe_Exception.thrown("Not_found");
		} else if(t.left == null) {
			return t;
		} else {
			return this.minBinding(t.left);
		}
	}
	,removeMinBinding: function(t) {
		if(t.left == null) {
			return t.right;
		} else {
			return this.balance(this.removeMinBinding(t.left),t.key,t.value,t.right);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this = r.right;
			var _this1 = r.left;
			if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this = this.left;
			tmp = _this == null ? 0 : _this._height;
		} else {
			var _this = this.right;
			tmp = _this == null ? 0 : _this._height;
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = "haxe.ds.TreeNode";
haxe_ds_TreeNode.prototype = {
	left: null
	,right: null
	,key: null
	,value: null
	,_height: null
	,__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = "haxe.ds.EnumValueMap";
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1._hx_index - k2._hx_index;
		if(d != 0) {
			return d;
		}
		var p1 = Type.enumParameters(k1);
		var p2 = Type.enumParameters(k2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g = 0;
		var _g1 = a1.length;
		while(_g < _g1) {
			var i = _g++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if(((v1) instanceof Array) && ((v2) instanceof Array)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,copy: function() {
		var copied = new haxe_ds_EnumValueMap();
		copied.root = this.root;
		return copied;
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = "haxe.ds.IntMap";
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,get: function(key) {
		return this.h[key];
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) a.push(+key);
		return new haxe_iterators_ArrayIterator(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = "haxe.ds.List";
haxe_ds_List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;
haxe_ds__$List_ListNode.__name__ = "haxe.ds._List.ListNode";
haxe_ds__$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: haxe_ds__$List_ListNode
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return new haxe_iterators_ArrayIterator(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_StringMap = function() {
	this.h = Object.create(null);
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.createCopy = function(h) {
	var copy = new haxe_ds_StringMap();
	for (var key in h) copy.h[key] = h[key];
	return copy;
};
haxe_ds_StringMap.prototype = {
	h: null
	,get: function(key) {
		return this.h[key];
	}
	,keys: function() {
		return new haxe_ds__$StringMap_StringMapKeyIterator(this.h);
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapValueIterator(this.h);
	}
	,__class__: haxe_ds_StringMap
};
var haxe_ds__$StringMap_StringMapKeyIterator = function(h) {
	this.h = h;
	this.keys = Object.keys(h);
	this.length = this.keys.length;
	this.current = 0;
};
$hxClasses["haxe.ds._StringMap.StringMapKeyIterator"] = haxe_ds__$StringMap_StringMapKeyIterator;
haxe_ds__$StringMap_StringMapKeyIterator.__name__ = "haxe.ds._StringMap.StringMapKeyIterator";
haxe_ds__$StringMap_StringMapKeyIterator.prototype = {
	h: null
	,keys: null
	,length: null
	,current: null
	,hasNext: function() {
		return this.current < this.length;
	}
	,next: function() {
		return this.keys[this.current++];
	}
	,__class__: haxe_ds__$StringMap_StringMapKeyIterator
};
var haxe_ds__$StringMap_StringMapValueIterator = function(h) {
	this.h = h;
	this.keys = Object.keys(h);
	this.length = this.keys.length;
	this.current = 0;
};
$hxClasses["haxe.ds._StringMap.StringMapValueIterator"] = haxe_ds__$StringMap_StringMapValueIterator;
haxe_ds__$StringMap_StringMapValueIterator.__name__ = "haxe.ds._StringMap.StringMapValueIterator";
haxe_ds__$StringMap_StringMapValueIterator.prototype = {
	h: null
	,keys: null
	,length: null
	,current: null
	,hasNext: function() {
		return this.current < this.length;
	}
	,next: function() {
		return this.h[this.keys[this.current++]];
	}
	,__class__: haxe_ds__$StringMap_StringMapValueIterator
};
var haxe_ds_Vector = {};
haxe_ds_Vector.blit = function(src,srcPos,dest,destPos,len) {
	if(src == dest) {
		if(srcPos < destPos) {
			var i = srcPos + len;
			var j = destPos + len;
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var k = _g++;
				--i;
				--j;
				src[j] = src[i];
			}
		} else if(srcPos > destPos) {
			var i = srcPos;
			var j = destPos;
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var k = _g++;
				src[j] = src[i];
				++i;
				++j;
			}
		}
	} else {
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			dest[destPos + i] = src[srcPos + i];
		}
	}
};
var haxe_exceptions_PosException = function(message,previous,pos) {
	haxe_Exception.call(this,message,previous);
	if(pos == null) {
		this.posInfos = { fileName : "(unknown)", lineNumber : 0, className : "(unknown)", methodName : "(unknown)"};
	} else {
		this.posInfos = pos;
	}
};
$hxClasses["haxe.exceptions.PosException"] = haxe_exceptions_PosException;
haxe_exceptions_PosException.__name__ = "haxe.exceptions.PosException";
haxe_exceptions_PosException.__super__ = haxe_Exception;
haxe_exceptions_PosException.prototype = $extend(haxe_Exception.prototype,{
	posInfos: null
	,toString: function() {
		return "" + haxe_Exception.prototype.toString.call(this) + " in " + this.posInfos.className + "." + this.posInfos.methodName + " at " + this.posInfos.fileName + ":" + this.posInfos.lineNumber;
	}
	,__class__: haxe_exceptions_PosException
});
var haxe_exceptions_NotImplementedException = function(message,previous,pos) {
	if(message == null) {
		message = "Not implemented";
	}
	haxe_exceptions_PosException.call(this,message,previous,pos);
};
$hxClasses["haxe.exceptions.NotImplementedException"] = haxe_exceptions_NotImplementedException;
haxe_exceptions_NotImplementedException.__name__ = "haxe.exceptions.NotImplementedException";
haxe_exceptions_NotImplementedException.__super__ = haxe_exceptions_PosException;
haxe_exceptions_NotImplementedException.prototype = $extend(haxe_exceptions_PosException.prototype,{
	__class__: haxe_exceptions_NotImplementedException
});
var haxe_http_HttpBase = function(url) {
	this.url = url;
	this.headers = [];
	this.params = [];
	this.emptyOnData = $bind(this,this.onData);
};
$hxClasses["haxe.http.HttpBase"] = haxe_http_HttpBase;
haxe_http_HttpBase.__name__ = "haxe.http.HttpBase";
haxe_http_HttpBase.prototype = {
	url: null
	,responseBytes: null
	,responseAsString: null
	,postData: null
	,postBytes: null
	,headers: null
	,params: null
	,emptyOnData: null
	,addParameter: function(name,value) {
		this.params.push({ name : name, value : value});
	}
	,onData: function(data) {
	}
	,onBytes: function(data) {
	}
	,onError: function(msg) {
	}
	,onStatus: function(status) {
	}
	,hasOnData: function() {
		return !Reflect.compareMethods($bind(this,this.onData),this.emptyOnData);
	}
	,success: function(data) {
		this.responseBytes = data;
		this.responseAsString = null;
		if(this.hasOnData()) {
			this.onData(this.get_responseData());
		}
		this.onBytes(this.responseBytes);
	}
	,get_responseData: function() {
		if(this.responseAsString == null && this.responseBytes != null) {
			this.responseAsString = this.responseBytes.getString(0,this.responseBytes.length,haxe_io_Encoding.UTF8);
		}
		return this.responseAsString;
	}
	,__class__: haxe_http_HttpBase
	,__properties__: {get_responseData:"get_responseData"}
};
var haxe_http_HttpJs = function(url) {
	this.async = true;
	this.withCredentials = false;
	haxe_http_HttpBase.call(this,url);
};
$hxClasses["haxe.http.HttpJs"] = haxe_http_HttpJs;
haxe_http_HttpJs.__name__ = "haxe.http.HttpJs";
haxe_http_HttpJs.__super__ = haxe_http_HttpBase;
haxe_http_HttpJs.prototype = $extend(haxe_http_HttpBase.prototype,{
	async: null
	,withCredentials: null
	,req: null
	,request: function(post) {
		var _gthis = this;
		this.responseAsString = null;
		this.responseBytes = null;
		var r = this.req = js_Browser.createXMLHttpRequest();
		var onreadystatechange = function(_) {
			if(r.readyState != 4) {
				return;
			}
			var s;
			try {
				s = r.status;
			} catch( _g ) {
				s = null;
			}
			if(s == 0 && js_Browser.get_supported() && $global.location != null) {
				var protocol = $global.location.protocol.toLowerCase();
				var rlocalProtocol = new EReg("^(?:about|app|app-storage|.+-extension|file|res|widget):$","");
				var isLocal = rlocalProtocol.match(protocol);
				if(isLocal) {
					s = r.response != null ? 200 : 404;
				}
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null) {
				_gthis.onStatus(s);
			}
			if(s != null && s >= 200 && s < 400) {
				_gthis.req = null;
				_gthis.success(haxe_io_Bytes.ofData(r.response));
			} else if(s == null || s == 0 && r.response == null) {
				_gthis.req = null;
				_gthis.onError("Failed to connect or resolve host");
			} else if(s == null) {
				_gthis.req = null;
				var onreadystatechange = r.response != null ? haxe_io_Bytes.ofData(r.response) : null;
				_gthis.responseBytes = onreadystatechange;
				_gthis.onError("Http Error #" + r.status);
			} else {
				switch(s) {
				case 12007:
					_gthis.req = null;
					_gthis.onError("Unknown host");
					break;
				case 12029:
					_gthis.req = null;
					_gthis.onError("Failed to connect to host");
					break;
				default:
					_gthis.req = null;
					var onreadystatechange = r.response != null ? haxe_io_Bytes.ofData(r.response) : null;
					_gthis.responseBytes = onreadystatechange;
					_gthis.onError("Http Error #" + r.status);
				}
			}
		};
		if(this.async) {
			r.onreadystatechange = onreadystatechange;
		}
		var uri;
		var _g = this.postData;
		var _g1 = this.postBytes;
		if(_g == null) {
			if(_g1 == null) {
				uri = null;
			} else {
				var bytes = _g1;
				uri = new Blob([bytes.b.bufferValue]);
			}
		} else if(_g1 == null) {
			var str = _g;
			uri = str;
		} else {
			uri = null;
		}
		if(uri != null) {
			post = true;
		} else {
			var _g = 0;
			var _g1 = this.params;
			while(_g < _g1.length) {
				var p = _g1[_g];
				++_g;
				if(uri == null) {
					uri = "";
				} else {
					uri = (uri == null ? "null" : Std.string(uri)) + "&";
				}
				var s = p.name;
				var value = (uri == null ? "null" : Std.string(uri)) + encodeURIComponent(s) + "=";
				var s1 = p.value;
				uri = value + encodeURIComponent(s1);
			}
		}
		try {
			if(post) {
				r.open("POST",this.url,this.async);
			} else if(uri != null) {
				var question = this.url.split("?").length <= 1;
				r.open("GET",this.url + (question ? "?" : "&") + (uri == null ? "null" : Std.string(uri)),this.async);
				uri = null;
			} else {
				r.open("GET",this.url,this.async);
			}
			r.responseType = "arraybuffer";
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			this.req = null;
			this.onError(e.toString());
			return;
		}
		r.withCredentials = this.withCredentials;
		if(!Lambda.exists(this.headers,function(h) {
			return h.name == "Content-Type";
		}) && post && this.postData == null) {
			r.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
		}
		var _g = 0;
		var _g1 = this.headers;
		while(_g < _g1.length) {
			var h = _g1[_g];
			++_g;
			r.setRequestHeader(h.name,h.value);
		}
		r.send(uri);
		if(!this.async) {
			onreadystatechange(null);
		}
	}
	,__class__: haxe_http_HttpJs
});
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = "haxe.io.BytesBuffer";
haxe_io_BytesBuffer.prototype = {
	buffer: null
	,view: null
	,u8: null
	,pos: null
	,size: null
	,addByte: function(byte) {
		if(this.pos == this.size) {
			this.grow(1);
		}
		this.view.setUint8(this.pos++,byte);
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,getBytes: function() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		var b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = "haxe.io.Output";
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = "haxe.io.BytesOutput";
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	b: null
	,writeByte: function(c) {
		this.b.addByte(c);
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = "haxe.io.Eof";
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__:"haxe.io.Error",__constructs__:null
	,Blocked: {_hx_name:"Blocked",_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_name:"Overflow",_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_name:"OutsideBounds",_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["e"],$_)
};
haxe_io_Error.__constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds,haxe_io_Error.Custom];
haxe_io_Error.__empty_constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds];
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = "haxe.io.Input";
haxe_io_Input.prototype = {
	readByte: function() {
		throw new haxe_exceptions_NotImplementedException(null,null,{ fileName : "haxe/io/Input.hx", lineNumber : 53, className : "haxe.io.Input", methodName : "readByte"});
	}
	,__class__: haxe_io_Input
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
$hxClasses["haxe.iterators.ArrayIterator"] = haxe_iterators_ArrayIterator;
haxe_iterators_ArrayIterator.__name__ = "haxe.iterators.ArrayIterator";
haxe_iterators_ArrayIterator.prototype = {
	array: null
	,current: null
	,hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
	,__class__: haxe_iterators_ArrayIterator
};
var haxe_rtti_Meta = function() { };
$hxClasses["haxe.rtti.Meta"] = haxe_rtti_Meta;
haxe_rtti_Meta.__name__ = "haxe.rtti.Meta";
haxe_rtti_Meta.getMeta = function(t) {
	return t.__meta__;
};
haxe_rtti_Meta.getFields = function(t) {
	var meta = haxe_rtti_Meta.getMeta(t);
	if(meta == null || meta.fields == null) {
		return { };
	} else {
		return meta.fields;
	}
};
var haxe_ui_backend_BackendImpl = function() { };
$hxClasses["haxe.ui.backend.BackendImpl"] = haxe_ui_backend_BackendImpl;
haxe_ui_backend_BackendImpl.__name__ = "haxe.ui.backend.BackendImpl";
var haxe_ui_Backend = function() { };
$hxClasses["haxe.ui.Backend"] = haxe_ui_Backend;
haxe_ui_Backend.__name__ = "haxe.ui.Backend";
haxe_ui_Backend.__properties__ = {get_id:"get_id"};
haxe_ui_Backend.get_id = function() {
	return haxe_ui_backend_BackendImpl.id;
};
haxe_ui_Backend.__super__ = haxe_ui_backend_BackendImpl;
haxe_ui_Backend.prototype = $extend(haxe_ui_backend_BackendImpl.prototype,{
	__class__: haxe_ui_Backend
});
var haxe_ui_backend_CallLaterImpl = function(fn) {
	window.requestAnimationFrame(function(timestamp) {
		fn();
	});
};
$hxClasses["haxe.ui.backend.CallLaterImpl"] = haxe_ui_backend_CallLaterImpl;
haxe_ui_backend_CallLaterImpl.__name__ = "haxe.ui.backend.CallLaterImpl";
haxe_ui_backend_CallLaterImpl.prototype = {
	__class__: haxe_ui_backend_CallLaterImpl
};
var haxe_ui_CallLater = function(fn) {
	haxe_ui_backend_CallLaterImpl.call(this,fn);
};
$hxClasses["haxe.ui.CallLater"] = haxe_ui_CallLater;
haxe_ui_CallLater.__name__ = "haxe.ui.CallLater";
haxe_ui_CallLater.__super__ = haxe_ui_backend_CallLaterImpl;
haxe_ui_CallLater.prototype = $extend(haxe_ui_backend_CallLaterImpl.prototype,{
	__class__: haxe_ui_CallLater
});
var haxe_ui_backend_AppBase = function() {
	this._icon = null;
	this.__events = null;
};
$hxClasses["haxe.ui.backend.AppBase"] = haxe_ui_backend_AppBase;
haxe_ui_backend_AppBase.__name__ = "haxe.ui.backend.AppBase";
haxe_ui_backend_AppBase.prototype = {
	__events: null
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this.__events == null) {
			this.__events = new haxe_ui_util_EventMap();
		}
		this.__events.add(type,listener,priority);
	}
	,hasEvent: function(type,listener) {
		if(this.__events == null) {
			return false;
		}
		return this.__events.contains(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this.__events != null) {
			this.__events.remove(type,listener);
		}
	}
	,dispatch: function(event) {
		if(this.__events != null) {
			this.__events.invoke(event.type,event,null);
		}
	}
	,build: function() {
	}
	,init: function(onReady,onEnd) {
		onReady();
	}
	,getToolkitInit: function() {
		return { };
	}
	,start: function() {
	}
	,exit: function() {
	}
	,buildPreloadList: function() {
		return [];
	}
	,_icon: null
	,get_icon: function() {
		return this._icon;
	}
	,set_icon: function(value) {
		this._icon = value;
		return value;
	}
	,__class__: haxe_ui_backend_AppBase
	,__properties__: {set_icon:"set_icon",get_icon:"get_icon"}
};
var haxe_ui_backend_AppImpl = function() {
	haxe_ui_backend_AppBase.call(this);
};
$hxClasses["haxe.ui.backend.AppImpl"] = haxe_ui_backend_AppImpl;
haxe_ui_backend_AppImpl.__name__ = "haxe.ui.backend.AppImpl";
haxe_ui_backend_AppImpl.__super__ = haxe_ui_backend_AppBase;
haxe_ui_backend_AppImpl.prototype = $extend(haxe_ui_backend_AppBase.prototype,{
	init: function(onReady,onEnd) {
		var title = haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.title");
		if(title != null) {
			haxe_ui_core_Screen.get_instance().set_title(title);
		}
		if(window.document.readyState == "complete") {
			onReady();
		} else {
			window.addEventListener("load",function(e) {
				onReady();
			});
		}
	}
	,getToolkitInit: function() {
		return { container : this.findContainer(haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.container","body"))};
	}
	,findContainer: function(id) {
		var el = null;
		if(id == "body") {
			el = window.document.body;
		} else if(id != null) {
			el = window.document.getElementById(id);
		}
		if(el == null) {
			el = window.document.body;
		}
		el.style.overflow = "hidden";
		return el;
	}
	,set_icon: function(value) {
		if(this._icon == value) {
			return value;
		}
		this._icon = value;
		var link = window.document.querySelector("link[rel~='icon']");
		if(link == null) {
			link = window.document.createElement("link");
			link.rel = "icon";
			window.document.getElementsByTagName("head")[0].appendChild(link);
		}
		haxe_ui_ToolkitAssets.get_instance().getImage(this._icon,function(imageInfo) {
			if(imageInfo != null) {
				link.href = imageInfo.data.src;
			}
		});
		return value;
	}
	,__class__: haxe_ui_backend_AppImpl
});
var haxe_ui_HaxeUIApp = function(options) {
	this.preloader = null;
	this.preloaderClass = null;
	haxe_ui_backend_AppImpl.call(this);
	haxe_ui_HaxeUIApp.instance = this;
	this._options = options;
	haxe_ui_Toolkit.build();
	this.build();
};
$hxClasses["haxe.ui.HaxeUIApp"] = haxe_ui_HaxeUIApp;
haxe_ui_HaxeUIApp.__name__ = "haxe.ui.HaxeUIApp";
haxe_ui_HaxeUIApp.__super__ = haxe_ui_backend_AppImpl;
haxe_ui_HaxeUIApp.prototype = $extend(haxe_ui_backend_AppImpl.prototype,{
	_options: null
	,ready: function(onReady,onEnd) {
		this.init(onReady,onEnd);
	}
	,preloaderClass: null
	,preloader: null
	,init: function(onReady,onEnd) {
		if(haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.theme") != null && haxe_ui_Toolkit.get_theme() == "default") {
			haxe_ui_Toolkit.set_theme(haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.theme"));
		}
		if(this._options == null) {
			haxe_ui_Toolkit.init(this.getToolkitInit());
		} else {
			haxe_ui_Toolkit.init(this._options);
		}
		var preloadList = null;
		preloadList = this.buildPreloadList();
		if(preloadList != null && preloadList.length > 0) {
			if(this.preloaderClass == null) {
				this.preloader = new haxe_ui_Preloader();
			} else {
				this.preloader = Type.createInstance(this.preloaderClass,[]);
			}
			this.preloader.progress(0,preloadList.length);
			this.addComponent(this.preloader);
			this.preloader.validateComponent();
		}
		this.handlePreload(preloadList,onReady,onEnd,this.preloader);
	}
	,handlePreload: function(list,onReady,onEnd,preloader) {
		var _gthis = this;
		if(list == null || list.length == 0) {
			if(preloader != null) {
				preloader.complete();
			}
			haxe_ui_backend_AppImpl.prototype.init.call(this,onReady,onEnd);
			return;
		}
		var item = list.shift();
		switch(item.type) {
		case "font":
			haxe_ui_ToolkitAssets.get_instance().getFont(item.resourceId,function(f) {
				if(preloader != null) {
					preloader.increment();
				}
				_gthis.handlePreload(list,onReady,onEnd,preloader);
			});
			break;
		case "image":
			haxe_ui_ToolkitAssets.get_instance().getImage(item.resourceId,function(i) {
				if(preloader != null) {
					preloader.increment();
				}
				_gthis.handlePreload(list,onReady,onEnd,preloader);
			});
			break;
		default:
			haxe_Log.trace("WARNING: unknown type to preload \"" + item.type + "\", continuing",{ fileName : "haxe/ui/HaxeUIApp.hx", lineNumber : 87, className : "haxe.ui.HaxeUIApp", methodName : "handlePreload"});
			if(preloader != null) {
				preloader.increment();
			}
			this.handlePreload(list,onReady,onEnd,preloader);
		}
	}
	,get_title: function() {
		return haxe_ui_core_Screen.get_instance().get_title();
	}
	,set_title: function(value) {
		haxe_ui_core_Screen.get_instance().set_title(value);
		return value;
	}
	,addComponent: function(component) {
		return haxe_ui_core_Screen.get_instance().addComponent(component);
	}
	,removeComponent: function(component,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return haxe_ui_core_Screen.get_instance().removeComponent(component,dispose);
	}
	,setComponentIndex: function(child,index) {
		return haxe_ui_core_Screen.get_instance().setComponentIndex(child,index);
	}
	,buildPreloadList: function() {
		var list = haxe_ui_backend_AppImpl.prototype.buildPreloadList.call(this);
		if(list == null) {
			list = [];
		}
		list = list.concat(haxe_ui_ToolkitAssets.get_instance().preloadList);
		return list;
	}
	,__class__: haxe_ui_HaxeUIApp
	,__properties__: $extend(haxe_ui_backend_AppImpl.prototype.__properties__,{set_title:"set_title",get_title:"get_title"})
});
var haxe_ui_util_Properties = function() {
	this._props = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.Properties"] = haxe_ui_util_Properties;
haxe_ui_util_Properties.__name__ = "haxe.ui.util.Properties";
haxe_ui_util_Properties.prototype = {
	_props: null
	,exists: function(name) {
		return Object.prototype.hasOwnProperty.call(this._props.h,name);
	}
	,getProp: function(name,defaultValue) {
		var v = defaultValue;
		if(Object.prototype.hasOwnProperty.call(this._props.h,name)) {
			v = this._props.h[name];
		}
		return v;
	}
	,getPropInt: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		var v = defaultValue;
		var stringValue = this.getProp(name);
		if(stringValue != null) {
			v = Std.parseInt(stringValue);
		}
		return v;
	}
	,getPropBool: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var v = defaultValue;
		var stringValue = this.getProp(name);
		if(stringValue != null) {
			v = stringValue == "true";
		}
		return v;
	}
	,getPropCol: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		var v = defaultValue;
		var stringValue = this.getProp(name);
		if(stringValue != null) {
			var s = stringValue;
			if(StringTools.startsWith(s,"#")) {
				s = s.substring(1,s.length);
			} else if(StringTools.startsWith(s,"0x")) {
				s = s.substring(2,s.length);
			}
			v = Std.parseInt("0x" + s);
		}
		return v;
	}
	,setProp: function(name,value) {
		if(name == null || StringTools.trim(name).length == 0) {
			return;
		}
		var this1 = this._props;
		var key = StringTools.trim(name);
		var value1 = StringTools.trim(value);
		this1.h[key] = value1;
	}
	,names: function() {
		return new haxe_ds__$StringMap_StringMapKeyIterator(this._props.h);
	}
	,addAll: function(p) {
		var name = p.names();
		while(name.hasNext()) {
			var name1 = name.next();
			this.setProp(name1,p.getProp(name1));
		}
	}
	,__class__: haxe_ui_util_Properties
};
var haxe_ui_util_GenericConfig = function() {
	this.values = new haxe_ds_StringMap();
	this.sections = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.GenericConfig"] = haxe_ui_util_GenericConfig;
haxe_ui_util_GenericConfig.__name__ = "haxe.ui.util.GenericConfig";
haxe_ui_util_GenericConfig.prototype = {
	values: null
	,sections: null
	,addSection: function(name) {
		var config = new haxe_ui_util_GenericConfig();
		var array = this.sections.h[name];
		if(array == null) {
			array = [];
			this.sections.h[name] = array;
		}
		array.push(config);
		return config;
	}
	,findBy: function(section,field,value) {
		var array = this.sections.h[section];
		if(array == null) {
			return null;
		}
		if(field == null && value == null) {
			return array[0];
		}
		var r = null;
		var _g = 0;
		while(_g < array.length) {
			var item = array[_g];
			++_g;
			var h = item.values.h;
			var key_h = h;
			var key_keys = Object.keys(h);
			var key_length = key_keys.length;
			var key_current = 0;
			while(key_current < key_length) {
				var key = key_keys[key_current++];
				if(key == field && (item.values.h[key] == value || item.values.h[key].toLowerCase() == value.toLowerCase())) {
					r = item;
					break;
				}
			}
			if(r != null) {
				break;
			}
		}
		return r;
	}
	,queryBool: function(q,defaultValue,conditionRef) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var r = this.query(q,null,conditionRef);
		if(r == null) {
			return defaultValue;
		}
		return r == "true";
	}
	,query: function(q,defaultValue,conditionRef) {
		if(Object.prototype.hasOwnProperty.call(haxe_ui_util_GenericConfig.cache.h,q)) {
			if(defaultValue != null && haxe_ui_util_GenericConfig.cache.h[q] == null) {
				return defaultValue;
			}
			return haxe_ui_util_GenericConfig.cache.h[q];
		}
		var regexp = new EReg("\\.(?![^\\[]*\\])","g");
		var finalArray = regexp.split(q);
		var ref = this;
		var value = null;
		var _g = 0;
		while(_g < finalArray.length) {
			var f = finalArray[_g];
			++_g;
			if(f.indexOf("[") == -1 && f.indexOf("@") == -1) {
				ref = ref.findBy(f);
			} else if(f.indexOf("[") != -1) {
				var p = f.split("[");
				var p1 = p[0];
				var p2 = p[1].split("=")[0];
				var p3 = p[1].split("=")[1];
				p3 = HxOverrides.substr(p3,0,p3.length - 1);
				ref = ref.findBy(p1,p2,p3);
			} else if(f.indexOf("@") != -1) {
				var v = HxOverrides.substr(f,1,f.length);
				value = ref.values.h[v];
				break;
			}
			if(ref == null) {
				haxe_ui_util_GenericConfig.cache.h[q] = defaultValue;
				return defaultValue;
			}
		}
		if(value == null) {
			value = defaultValue;
		}
		if(value != null) {
			haxe_ui_util_GenericConfig.cache.h[q] = value;
		}
		return value;
	}
	,queryValues: function(q,conditionRef) {
		var regexp = new EReg("\\.(?![^\\[]*\\])","g");
		var finalArray = regexp.split(q);
		var ref = this;
		var _g = 0;
		while(_g < finalArray.length) {
			var f = finalArray[_g];
			++_g;
			if(f.indexOf("[") == -1 && f.indexOf("@") == -1) {
				ref = ref.findBy(f);
			} else if(f.indexOf("[") != -1) {
				var p = f.split("[");
				var p1 = p[0];
				var p2 = p[1].split("=")[0];
				var p3 = p[1].split("=")[1];
				p3 = HxOverrides.substr(p3,0,p3.length - 1);
				ref = ref.findBy(p1,p2,p3);
			}
			if(ref == null) {
				return null;
			}
		}
		return ref.values;
	}
	,__class__: haxe_ui_util_GenericConfig
};
var haxe_ui_styles_CompositeStyleSheet = function() {
	this._animations = null;
	this._styleSheets = [];
};
$hxClasses["haxe.ui.styles.CompositeStyleSheet"] = haxe_ui_styles_CompositeStyleSheet;
haxe_ui_styles_CompositeStyleSheet.__name__ = "haxe.ui.styles.CompositeStyleSheet";
haxe_ui_styles_CompositeStyleSheet.prototype = {
	_styleSheets: null
	,_animations: null
	,get_animations: function() {
		if(this._animations != null) {
			return this._animations;
		}
		this._animations = new haxe_ds_StringMap();
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var h = s.get_animations().h;
			var key_h = h;
			var key_keys = Object.keys(h);
			var key_length = key_keys.length;
			var key_current = 0;
			while(key_current < key_length) {
				var key = key_keys[key_current++];
				var a = s.get_animations().h[key];
				this._animations.h[key] = a;
			}
		}
		return this._animations;
	}
	,findAnimation: function(id) {
		var h = this.get_animations().h;
		var a_h = h;
		var a_keys = Object.keys(h);
		var a_length = a_keys.length;
		var a_current = 0;
		while(a_current < a_length) {
			var a = a_h[a_keys[a_current++]];
			if(a.id == id) {
				return a;
			}
		}
		return null;
	}
	,hasMediaQueries: null
	,get_hasMediaQueries: function() {
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var styleSheet = _g1[_g];
			++_g;
			if(styleSheet.get_hasMediaQueries() == true) {
				return true;
			}
		}
		return false;
	}
	,getAnimation: function(id,create) {
		if(create == null) {
			create = true;
		}
		var a = this.findAnimation(id);
		if(a == null) {
			a = new haxe_ui_styles_elements_AnimationKeyFrames(id,[]);
			this.addAnimation(a);
		}
		return a;
	}
	,addAnimation: function(animation) {
		this._styleSheets[0].addAnimation(animation);
	}
	,addStyleSheet: function(styleSheet) {
		this._styleSheets.push(styleSheet);
	}
	,removeStyleSheet: function(styleSheet) {
		HxOverrides.remove(this._styleSheets,styleSheet);
	}
	,parse: function(css,styleSheetName,invalidateAll) {
		if(invalidateAll == null) {
			invalidateAll = false;
		}
		if(styleSheetName == null) {
			styleSheetName = "default";
		}
		var s = this.findStyleSheet(styleSheetName);
		if(s == null) {
			s = new haxe_ui_styles_StyleSheet();
			s.name = styleSheetName;
			this._styleSheets.push(s);
		}
		s.parse(css);
		this._animations = null;
		if(invalidateAll == true) {
			haxe_ui_core_Screen.get_instance().invalidateAll();
		}
	}
	,findStyleSheet: function(styleSheetName) {
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			if(s.name == styleSheetName) {
				return s;
			}
		}
		return null;
	}
	,findRule: function(selector) {
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var el = s.findRule(selector);
			if(el != null) {
				return el;
			}
		}
		return null;
	}
	,findMatchingRules: function(selector) {
		var m = [];
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			m = m.concat(s.findMatchingRules(selector));
		}
		return m;
	}
	,getAllRules: function() {
		var r = [];
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			r = r.concat(s.get_rules());
		}
		return r;
	}
	,buildStyleFor: function(c) {
		var style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			style = s.buildStyleFor(c,style);
		}
		return style;
	}
	,clear: function(styleSheetName) {
		var s = this.findStyleSheet(styleSheetName);
		if(s != null) {
			s.clear();
			this._animations = null;
		}
	}
	,__class__: haxe_ui_styles_CompositeStyleSheet
	,__properties__: {get_hasMediaQueries:"get_hasMediaQueries",get_animations:"get_animations"}
};
var haxe_ui_Toolkit = function() { };
$hxClasses["haxe.ui.Toolkit"] = haxe_ui_Toolkit;
haxe_ui_Toolkit.__name__ = "haxe.ui.Toolkit";
haxe_ui_Toolkit.__properties__ = {set_scale:"set_scale",get_scale:"get_scale",set_scaleY:"set_scaleY",get_scaleY:"get_scaleY",set_scaleX:"set_scaleX",get_scaleX:"get_scaleX",get_autoScaleDPIThreshold:"get_autoScaleDPIThreshold",set_pixelsPerRem:"set_pixelsPerRem",get_screen:"get_screen",get_assets:"get_assets",get_initialized:"get_initialized",get_backendProperties:"get_backendProperties",set_theme:"set_theme",get_theme:"get_theme"};
haxe_ui_Toolkit.get_theme = function() {
	return haxe_ui_Toolkit._theme;
};
haxe_ui_Toolkit.set_theme = function(value) {
	if(haxe_ui_Toolkit._theme == value) {
		return value;
	}
	haxe_ui_Toolkit._theme = value;
	if(haxe_ui_Toolkit._initialized == true) {
		haxe_ui_themes_ThemeManager.get_instance().applyTheme(haxe_ui_Toolkit._theme);
		haxe_ui_core_Screen.get_instance().onThemeChanged();
		haxe_ui_core_Screen.get_instance().invalidateAll();
	}
	return value;
};
haxe_ui_Toolkit.get_backendProperties = function() {
	haxe_ui_Toolkit.buildBackend();
	return haxe_ui_Toolkit._backendProperties;
};
haxe_ui_Toolkit.build = function() {
	if(haxe_ui_Toolkit._built == true) {
		return;
	}
	haxe_ui_themes_ThemeManager.get_instance().getTheme("native").parent = "default";
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("native","haxeui-core/styles/native/main.css",-3.,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("global","haxeui-core/styles/global.css",-4.,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/main.css",-3.,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/buttons.css",-2.99,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/dialogs.css",-2.9800000000000004,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/windows.css",-2.9700000000000006,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/textinputs.css",-2.9600000000000009,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/scrollbars.css",-2.9500000000000011,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/scrollview.css",-2.9400000000000013,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/checkboxes.css",-2.9300000000000015,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/optionboxes.css",-2.9200000000000017,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/ranges.css",-2.9100000000000019,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/progressbars.css",-2.9000000000000021,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/sliders.css",-2.8900000000000023,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/steppers.css",-2.8800000000000026,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/tabs.css",-2.8700000000000028,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/listview.css",-2.860000000000003,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/dropdowns.css",-2.8500000000000032,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/tableview.css",-2.8400000000000034,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/switches.css",-2.8300000000000036,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/calendars.css",-2.8200000000000038,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/menus.css",-2.8100000000000041,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/accordion.css",-2.8000000000000043,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/propertygrids.css",-2.7900000000000045,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/frames.css",-2.7800000000000047,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/splitters.css",-2.7700000000000049,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/tooltips.css",-2.7600000000000051,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/rules.css",-2.7500000000000053,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/sidebars.css",-2.7400000000000055,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/cards.css",-2.7300000000000058,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/treeviews.css",-2.720000000000006,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/colorpickers.css",-2.7100000000000062,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/last.css",-2.7000000000000064,null);
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","warning-large","haxeui-core/styles/shared/warning-large.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","tooltip-background-color","#fffff8");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","tertiary-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","sort-desc","haxeui-core/styles/shared/sortable-desc-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","sort-asc","haxeui-core/styles/shared/sortable-asc-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color-hover","#fcfcfc");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color-down","#f0f0f0");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color-disabled","#fefefe");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color-alt","#fafafa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color","#f6f6f6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","selection-text-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","selection-background-color-hover","#d9e5f2");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","selection-background-color","#b4cbe4");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","secondary-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","search","haxeui-core/styles/shared/search.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","scrollbar-button-color","#d6d6d6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","scrollbar-background-color","#f0f0f0");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","restore-hover","haxeui-core/styles/shared/restore-button-white.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","restore","haxeui-core/styles/shared/restore-button-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","question-large","haxeui-core/styles/shared/help-large.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","option-selected","haxeui-core/styles/shared/option-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-text-color","#666666");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-inner-shadow","drop-shadow(1, 45, #888888, 0.1, 1, 1, 1, 3, true)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-border-size","1px");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-border-radius","2px");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-border-color","#d2d2d2");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-background-color-start","#fdfdfd");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-background-color-end","#f6f6f6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","modal-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","minimize-hover","haxeui-core/styles/shared/minimize-button-white.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","minimize","haxeui-core/styles/shared/minimize-button-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","menu-shadow","drop-shadow(2, 45, #888888, 0.1, 4, 1, 30, 35, false)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","maximize-hover","haxeui-core/styles/shared/maximize-button-white.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","maximize","haxeui-core/styles/shared/maximize-button-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","lighter-text-color","#a0a0a0");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","info-large","haxeui-core/styles/shared/info-large.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","hover-text-color","#444444");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","hover-border-color","#c0c0c0");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","hover-background-color-start","#f2f2f2");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","hover-background-color-end","#e1e1e1");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","gripper-vertical","haxeui-core/styles/shared/gripper-vertical.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","gripper-horizontal","haxeui-core/styles/shared/gripper-horizontal.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","expanded","haxeui-core/styles/shared/collapsed-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","expand-hover","haxeui-core/styles/shared/window-expand-white.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","expand","haxeui-core/styles/shared/window-expand-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","error-text-color","#ff0000");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","error-large","haxeui-core/styles/shared/error-large.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","error-background-color","#ffdddd");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","down-text-color","#444444");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","down-border-color","#b3b3b3");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","down-background-color-start","#e6e6e6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","down-background-color-end","#cccccc");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","disabled-text-color","#cccccc");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","disabled-border-color","#e4e4e4");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","disabled-background-color-start","#fdfdfd");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","disabled-background-color-end","#f6f6f6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","dialog-title-color","#aaaaaa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","dialog-shadow","drop-shadow(1, 45, #888888, 0.2, 30, 2, 1, 3, false)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","default-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","contrast-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","collapsed","haxeui-core/styles/shared/expanded-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","collapse-hover","haxeui-core/styles/shared/window-collapse-white.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","collapse","haxeui-core/styles/shared/window-collapse-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","close-hover","haxeui-core/styles/shared/close-button-white.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","close","haxeui-core/styles/shared/close-button-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","check-selected","haxeui-core/styles/shared/check-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","blank","haxeui-core/styles/shared/blank.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-up-down","haxeui-core/styles/shared/sortable-arrows-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-up","haxeui-core/styles/shared/up-arrow-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-right-square","haxeui-core/styles/shared/right-arrow-square-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-right","haxeui-core/styles/shared/right-arrow-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-left","haxeui-core/styles/shared/left-arrow-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-down-square","haxeui-core/styles/shared/down-arrow-square-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-down","haxeui-core/styles/shared/down-arrow-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-gradient-start","#98c4e6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-gradient-end","#549bde");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-color-lighter","#ecf2f9");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-color-darker","#407dbf");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-color","#83aad4");
	haxe_ui_themes_ThemeManager.get_instance().getTheme("dark").parent = "default";
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/scrollbars.css",-2.,null);
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","tooltip-background-color","#3d3f41");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","tertiary-background-color","#313435");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color-hover","#393b3c");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color-down","#313335");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color-disabled","#2f3132");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color-alt","#2d2e2f");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color","#3d3f41");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","selection-text-color","#d4d4d4");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","selection-background-color-hover","#323e52");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","selection-background-color","#415982");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","secondary-background-color","#3d3f41");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","scrollbar-button-color","#3e4142");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","scrollbar-background-color","#2c2f30");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-text-color","#aaaaaa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-inner-shadow","drop-shadow(1, 45, #000000, 0.2, 2, 2, 1, 3, true)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-border-size","1px");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-border-radius","2px");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-border-color","#222426");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-background-color-start","#3e4142");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-background-color-end","#36383a");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","modal-background-color","#181a1b");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","menu-shadow","drop-shadow(2, 45, #000000, 0.15, 6, 1, 30, 35, false)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","lighter-text-color","#737373");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","hover-text-color","#bbbbbb");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","hover-border-color","#222426");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","hover-background-color-start","#434647");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","hover-background-color-end","#393b3c");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","error-text-color","#880000");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","error-background-color","#cf6679");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","down-text-color","#999999");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","down-border-color","#222426");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","down-background-color-start","#393c3c");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","down-background-color-end","#313335");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","disabled-text-color","#595959");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","disabled-border-color","#26292b");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","disabled-background-color-start","#36393a");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","disabled-background-color-end","#313335");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","dialog-title-color","#aaaaaa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","dialog-shadow","drop-shadow(1, 45, #000000, 0.2, 30, 2, 1, 3, false)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","default-background-color","#2c2f30");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","contrast-background-color","#aaaaaa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-gradient-start","#334666");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-gradient-end","#2f3746");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-color-lighter","#323e52");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-color-darker","#407dbf");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-color","#3c5177");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("en","haxeui-core/locale/en/std-strings.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("en","haxeui-core/locale/en/formats.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("en_US","haxeui-core/locale/en_US/formats.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("es","haxeui-core/locale/es/std-strings.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("es","haxeui-core/locale/es/formats.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("de","haxeui-core/locale/de/std-strings.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("de","haxeui-core/locale/de/formats.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("fr","haxeui-core/locale/fr/std-strings.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("fr","haxeui-core/locale/fr/formats.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("it","haxeui-core/locale/it/std-strings.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("it","haxeui-core/locale/it/formats.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("ru","haxeui-core/locale/ru/std-strings.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("ru","haxeui-core/locale/ru/formats.properties");
	haxe_ui_actions_ActionManager.get_instance().registerInputSource(new haxe_ui_actions_KeyboardActionInputSource());
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("global","styles/main.css",-2,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","styles/default/main.css",-1,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("global",null,0.,"\r\n                .absolute {\r\n                    clip: false\r\n                }\r\n                .tool-button {\r\n                    background-color: yellow;\r\n                    background-opacity: 0;\r\n                    border: none;\r\n                    padding: none;\r\n                }\r\n                .dropdown-popup {\r\n                    filter: none;\r\n                }\r\n                .dropdown-popup .item-renderer:selected {\r\n                    background-color: #ddddf1\r\n                }\r\n                .dropdown-popup .item-renderer:selected .label {\r\n                    color: #666666\r\n                }\r\n            ");
	haxe_ui_core_ComponentClassMap.register("verticalscroll","haxe.ui.components.VerticalScroll");
	haxe_ui_core_ComponentClassMap.register("vbox","haxe.ui.containers.VBox");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/vslider","haxe.ui.components.VerticalSlider");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/verticalslider","haxe.ui.components.VerticalSlider");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/verticalbuttonbar","haxe.ui.containers.VerticalButtonBar");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/vbuttonbar","haxe.ui.containers.VerticalButtonBar");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/vbox","haxe.ui.containers.VBox");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/timecontrolfilterrenderer","gfx.profile.simple_components._TimeControlFilterDropdown.TimeControlFilterRenderer");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/textfield","haxe.ui.components.TextField");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/textarea","haxe.ui.components.TextArea");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/tabview","haxe.ui.containers.TabView");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/tableview","haxe.ui.containers.TableView");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/switch","haxe.ui.components.Switch");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/stack","haxe.ui.containers.Stack");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/square","gfx.basic_components.Square");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/spacer","haxe.ui.components.Spacer");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/slider","haxe.ui.components.Slider");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/sidebar","haxe.ui.containers.SideBar");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/sharegametab","gfx.game.ShareGameTab");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/sectionheader","haxe.ui.components.SectionHeader");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/scrollview","haxe.ui.containers.ScrollView");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/playerlabel","gfx.profile.simple_components.PlayerLabel");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/optionstepper","haxe.ui.components.OptionStepper");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/movenavigator","gfx.common.MoveNavigator");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/movecellrenderer","gfx.common.MoveCellRenderer");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/menuitem","haxe.ui.containers.menus.MenuItem");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/menubar","haxe.ui.containers.menus.MenuBar");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/menu","haxe.ui.containers.menus.Menu");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/listview","haxe.ui.containers.ListView");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/link","haxe.ui.components.Link");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/label","haxe.ui.components.Label");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/itemrenderer","haxe.ui.core.ItemRenderer");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/image","haxe.ui.components.Image");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/hsvcolorpickerimpl","haxe.ui.components._ColorPicker.HSVColorPickerImpl");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/hslider","haxe.ui.components.HorizontalSlider");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/horizontalslider","haxe.ui.components.HorizontalSlider");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/horizontalbuttonbar","haxe.ui.containers.HorizontalButtonBar");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/header","haxe.ui.containers.Header");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/hbuttonbar","haxe.ui.containers.HorizontalButtonBar");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/hbox","haxe.ui.containers.HBox");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/grid","haxe.ui.containers.Grid");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/dropdown","haxe.ui.components.DropDown");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/dialog","haxe.ui.containers.dialogs.Dialog");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/defaultpreloader","gfx.preloader.DefaultPreloader");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/creepingline","gfx.common.CreepingLine");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/copyabletext","gfx.basic_components.CopyableText");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/component","haxe.ui.core.Component");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/column","haxe.ui.components.Column");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/colorpickerpopupview","haxe.ui.components.popups._ColorPickerPopup.ColorPickerPopupView");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/colorpickerpopup","haxe.ui.components.popups.ColorPickerPopup");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/colorpicker","haxe.ui.components.ColorPicker");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/checkbox","haxe.ui.components.CheckBox");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/challengemenuicon","gfx.menubar.ChallengeMenuIcon");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/challengelist","gfx.menubar.ChallengeList");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/challengeentryrenderer","gfx.menubar.ChallengeEntryRenderer");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/card","haxe.ui.containers.Card");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/canvas","haxe.ui.components.Canvas");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/buttonbar","haxe.ui.containers.ButtonBar");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/button","haxe.ui.components.Button");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/box","haxe.ui.containers.Box");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/autosizinglabel","gfx.basic_components.AutosizingLabel");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/arpimage","gfx.basic_components.ARPImage");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/analysisactionbar","gfx.analysis.AnalysisActionBar");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/absolute","haxe.ui.containers.Absolute");
	haxe_ui_core_ComponentClassMap.register("tooltip","haxe.ui.tooltips.ToolTip");
	haxe_ui_core_ComponentClassMap.register("timecontrolfilterrenderer","gfx.profile.simple_components._TimeControlFilterDropdown.TimeControlFilterRenderer");
	haxe_ui_core_ComponentClassMap.register("timecontrolfilterdropdown","gfx.profile.simple_components.TimeControlFilterDropdown");
	haxe_ui_core_ComponentClassMap.register("textfield","haxe.ui.components.TextField");
	haxe_ui_core_ComponentClassMap.register("textarea","haxe.ui.components.TextArea");
	haxe_ui_core_ComponentClassMap.register("testedcomponent","tests.ui.TestedComponent");
	haxe_ui_core_ComponentClassMap.register("tceloentry","gfx.profile.simple_components.TCEloEntry");
	haxe_ui_core_ComponentClassMap.register("tanalysisscreen","tests.ui.analysis.TAnalysisScreen");
	haxe_ui_core_ComponentClassMap.register("tabview","haxe.ui.containers.TabView");
	haxe_ui_core_ComponentClassMap.register("tableview","haxe.ui.containers.TableView");
	haxe_ui_core_ComponentClassMap.register("tabbarbutton","haxe.ui.components._TabBar.TabBarButton");
	haxe_ui_core_ComponentClassMap.register("tabbar","haxe.ui.components.TabBar");
	haxe_ui_core_ComponentClassMap.register("switchbuttonsub","haxe.ui.components._Switch.SwitchButtonSub");
	haxe_ui_core_ComponentClassMap.register("switch","haxe.ui.components.Switch");
	haxe_ui_core_ComponentClassMap.register("studywidget","gfx.profile.simple_components.StudyWidget");
	haxe_ui_core_ComponentClassMap.register("studytaglist","gfx.profile.complex_components.StudyTagList");
	haxe_ui_core_ComponentClassMap.register("studytaglabel","gfx.profile.simple_components.StudyTagLabel");
	haxe_ui_core_ComponentClassMap.register("studyparamsdialog","gfx.popups.StudyParamsDialog");
	haxe_ui_core_ComponentClassMap.register("studyfilterrect","gfx.profile.simple_components.StudyFilterRect");
	haxe_ui_core_ComponentClassMap.register("studyfilterlist","gfx.profile.complex_components.StudyFilterList");
	haxe_ui_core_ComponentClassMap.register("studiestab","gfx.profile.complex_components.StudiesTab");
	haxe_ui_core_ComponentClassMap.register("stepper","haxe.ui.components.Stepper");
	haxe_ui_core_ComponentClassMap.register("stack","haxe.ui.containers.Stack");
	haxe_ui_core_ComponentClassMap.register("square","gfx.basic_components.Square");
	haxe_ui_core_ComponentClassMap.register("spacer","haxe.ui.components.Spacer");
	haxe_ui_core_ComponentClassMap.register("slider","haxe.ui.components.Slider");
	haxe_ui_core_ComponentClassMap.register("situationtooltiprenderer","gfx.common.SituationTooltipRenderer");
	haxe_ui_core_ComponentClassMap.register("sidemenu","gfx.SideMenu");
	haxe_ui_core_ComponentClassMap.register("sidebar","haxe.ui.containers.SideBar");
	haxe_ui_core_ComponentClassMap.register("sharegametab","gfx.game.ShareGameTab");
	haxe_ui_core_ComponentClassMap.register("sharedialog","gfx.common.ShareDialog");
	haxe_ui_core_ComponentClassMap.register("settings","gfx.popups.Settings");
	haxe_ui_core_ComponentClassMap.register("selectableboard","gameboard.SelectableBoard");
	haxe_ui_core_ComponentClassMap.register("sectionheader","haxe.ui.components.SectionHeader");
	haxe_ui_core_ComponentClassMap.register("scrollview","haxe.ui.containers.ScrollView");
	haxe_ui_core_ComponentClassMap.register("scroll","haxe.ui.components.Scroll");
	haxe_ui_core_ComponentClassMap.register("screen","gfx.Screen");
	haxe_ui_core_ComponentClassMap.register("scene","gfx.Scene");
	haxe_ui_core_ComponentClassMap.register("range","haxe.ui.components.Range");
	haxe_ui_core_ComponentClassMap.register("promotionselect","gfx.popups.PromotionSelect");
	haxe_ui_core_ComponentClassMap.register("profileheader","gfx.profile.complex_components.ProfileHeader");
	haxe_ui_core_ComponentClassMap.register("preloader","haxe.ui.Preloader");
	haxe_ui_core_ComponentClassMap.register("positioneditor","gfx.analysis.PositionEditor");
	haxe_ui_core_ComponentClassMap.register("plyhistoryview","gfx.common.PlyHistoryView");
	haxe_ui_core_ComponentClassMap.register("playerlabel","gfx.profile.simple_components.PlayerLabel");
	haxe_ui_core_ComponentClassMap.register("piece","gameboard.components.Piece");
	haxe_ui_core_ComponentClassMap.register("optionstepper","haxe.ui.components.OptionStepper");
	haxe_ui_core_ComponentClassMap.register("openchallengejoining","gfx.screens.OpenChallengeJoining");
	haxe_ui_core_ComponentClassMap.register("openchallengecreated","gfx.popups.OpenChallengeCreated");
	haxe_ui_core_ComponentClassMap.register("movenavigator","gfx.common.MoveNavigator");
	haxe_ui_core_ComponentClassMap.register("movecellrenderer","gfx.common.MoveCellRenderer");
	haxe_ui_core_ComponentClassMap.register("miniprofile","gfx.profile.complex_components.MiniProfile");
	haxe_ui_core_ComponentClassMap.register("messageboxbase","haxe.ui.backend.MessageBoxBase");
	haxe_ui_core_ComponentClassMap.register("messagebox","haxe.ui.containers.dialogs.MessageBox");
	haxe_ui_core_ComponentClassMap.register("menuitem","haxe.ui.containers.menus.MenuItem");
	haxe_ui_core_ComponentClassMap.register("menubar","haxe.ui.containers.menus.MenuBar");
	haxe_ui_core_ComponentClassMap.register("menu","haxe.ui.containers.menus.Menu");
	haxe_ui_core_ComponentClassMap.register("mainview","tests.ui.utils.components.MainView");
	haxe_ui_core_ComponentClassMap.register("login","gfx.popups.LogIn");
	haxe_ui_core_ComponentClassMap.register("listview","haxe.ui.containers.ListView");
	haxe_ui_core_ComponentClassMap.register("link","haxe.ui.components.Link");
	haxe_ui_core_ComponentClassMap.register("languageselectintro","gfx.screens.LanguageSelectIntro");
	haxe_ui_core_ComponentClassMap.register("label","haxe.ui.components.Label");
	haxe_ui_core_ComponentClassMap.register("itemrenderer","haxe.ui.core.ItemRenderer");
	haxe_ui_core_ComponentClassMap.register("interactivecomponent","haxe.ui.core.InteractiveComponent");
	haxe_ui_core_ComponentClassMap.register("initparameterentry","tests.ui.utils.components.InitParameterEntry");
	haxe_ui_core_ComponentClassMap.register("incomingchallengedialog","gfx.popups.IncomingChallengeDialog");
	haxe_ui_core_ComponentClassMap.register("image","haxe.ui.components.Image");
	haxe_ui_core_ComponentClassMap.register("hsvcolorpickerimpl","haxe.ui.components._ColorPicker.HSVColorPickerImpl");
	haxe_ui_core_ComponentClassMap.register("horizontalslider","haxe.ui.components.HorizontalSlider");
	haxe_ui_core_ComponentClassMap.register("horizontalscroll","haxe.ui.components.HorizontalScroll");
	haxe_ui_core_ComponentClassMap.register("horizontalbuttonbar","haxe.ui.containers.HorizontalButtonBar");
	haxe_ui_core_ComponentClassMap.register("hexagondotcanvas","gameboard.components.graphics.HexagonDotCanvas");
	haxe_ui_core_ComponentClassMap.register("hexagoncirclecanvas","gameboard.components.graphics.HexagonCircleCanvas");
	haxe_ui_core_ComponentClassMap.register("hexagoncanvas","gameboard.components.graphics.HexagonCanvas");
	haxe_ui_core_ComponentClassMap.register("hexagon","gameboard.components.Hexagon");
	haxe_ui_core_ComponentClassMap.register("header","haxe.ui.containers.Header");
	haxe_ui_core_ComponentClassMap.register("hbox","haxe.ui.containers.HBox");
	haxe_ui_core_ComponentClassMap.register("grid","haxe.ui.containers.Grid");
	haxe_ui_core_ComponentClassMap.register("genannotatedimage","gfx.basic_components.GenAnnotatedImage<gfx.basic_components.GenAnnotatedImage.T>");
	haxe_ui_core_ComponentClassMap.register("gamewidget","gfx.common.GameWidget");
	haxe_ui_core_ComponentClassMap.register("gameboard","gameboard.GameBoard");
	haxe_ui_core_ComponentClassMap.register("friendlistentry","gfx.profile.simple_components.FriendListEntry");
	haxe_ui_core_ComponentClassMap.register("friendlist","gfx.profile.complex_components.FriendList");
	haxe_ui_core_ComponentClassMap.register("dropdown","haxe.ui.components.DropDown");
	haxe_ui_core_ComponentClassMap.register("dialogbase","haxe.ui.backend.DialogBase");
	haxe_ui_core_ComponentClassMap.register("dialog","haxe.ui.containers.dialogs.Dialog");
	haxe_ui_core_ComponentClassMap.register("defaultpreloader","gfx.preloader.DefaultPreloader");
	haxe_ui_core_ComponentClassMap.register("creepinglineply","gfx.common.CreepingLinePly");
	haxe_ui_core_ComponentClassMap.register("creepingline","gfx.common.CreepingLine");
	haxe_ui_core_ComponentClassMap.register("copyabletext","gfx.basic_components.CopyableText");
	haxe_ui_core_ComponentClassMap.register("controltabs","gfx.analysis.ControlTabs");
	haxe_ui_core_ComponentClassMap.register("compounditemrenderer","haxe.ui.containers._TableView.CompoundItemRenderer");
	haxe_ui_core_ComponentClassMap.register("component","haxe.ui.core.Component");
	haxe_ui_core_ComponentClassMap.register("column","haxe.ui.components.Column");
	haxe_ui_core_ComponentClassMap.register("colorpickerpopupview","haxe.ui.components.popups._ColorPickerPopup.ColorPickerPopupView");
	haxe_ui_core_ComponentClassMap.register("colorpickerpopup","haxe.ui.components.popups.ColorPickerPopup");
	haxe_ui_core_ComponentClassMap.register("colorpickerimpl","haxe.ui.components._ColorPicker.ColorPickerImpl");
	haxe_ui_core_ComponentClassMap.register("colorpicker","haxe.ui.components.ColorPicker");
	haxe_ui_core_ComponentClassMap.register("checkboxvalue","haxe.ui.components.CheckBoxValue");
	haxe_ui_core_ComponentClassMap.register("checkbox","haxe.ui.components.CheckBox");
	haxe_ui_core_ComponentClassMap.register("challengeparamsdialog","gfx.popups.ChallengeParamsDialog");
	haxe_ui_core_ComponentClassMap.register("challengemenuicon","gfx.menubar.ChallengeMenuIcon");
	haxe_ui_core_ComponentClassMap.register("challengelist","gfx.menubar.ChallengeList");
	haxe_ui_core_ComponentClassMap.register("challengeentryrenderer","gfx.menubar.ChallengeEntryRenderer");
	haxe_ui_core_ComponentClassMap.register("card","haxe.ui.containers.Card");
	haxe_ui_core_ComponentClassMap.register("canvas","haxe.ui.components.Canvas");
	haxe_ui_core_ComponentClassMap.register("calendarview","haxe.ui.containers.CalendarView");
	haxe_ui_core_ComponentClassMap.register("calendar","haxe.ui.components.Calendar");
	haxe_ui_core_ComponentClassMap.register("buttonbar","haxe.ui.containers.ButtonBar");
	haxe_ui_core_ComponentClassMap.register("button","haxe.ui.components.Button");
	haxe_ui_core_ComponentClassMap.register("branchinghelp","gfx.popups.BranchingHelp");
	haxe_ui_core_ComponentClassMap.register("box","haxe.ui.containers.Box");
	haxe_ui_core_ComponentClassMap.register("board","gameboard.Board");
	haxe_ui_core_ComponentClassMap.register("basicitemrenderer","haxe.ui.core.BasicItemRenderer");
	haxe_ui_core_ComponentClassMap.register("basedialog","gfx.basic_components.BaseDialog");
	haxe_ui_core_ComponentClassMap.register("autosizinglabel","gfx.basic_components.AutosizingLabel");
	haxe_ui_core_ComponentClassMap.register("arrowcanvas","gameboard.components.graphics.ArrowCanvas");
	haxe_ui_core_ComponentClassMap.register("arpimage","gfx.basic_components.ARPImage");
	haxe_ui_core_ComponentClassMap.register("annotatedimage","gfx.basic_components.AnnotatedImage");
	haxe_ui_core_ComponentClassMap.register("analysisactionbar","gfx.analysis.AnalysisActionBar");
	haxe_ui_core_ComponentClassMap.register("analysis","gfx.screens.Analysis");
	haxe_ui_core_ComponentClassMap.register("adjustablecontentbox","tests.ui.utils.components.AdjustableContentBox");
	haxe_ui_core_ComponentClassMap.register("absolute","haxe.ui.containers.Absolute");
	haxe_ui_Toolkit.buildBackend();
	haxe_ui_Toolkit._built = true;
};
haxe_ui_Toolkit.buildBackend = function() {
	if(haxe_ui_Toolkit._backendBuilt == true) {
		return;
	}
	haxe_ui_util_Defines.set("windows","1");
	haxe_ui_util_Defines.set("utf16","1");
	haxe_ui_util_Defines.set("true","1");
	haxe_ui_util_Defines.set("target.utf16","true");
	haxe_ui_util_Defines.set("target.unicode","true");
	haxe_ui_util_Defines.set("target.name","js");
	haxe_ui_util_Defines.set("source_header","Generated by Haxe 4.2.5");
	haxe_ui_util_Defines.set("polygonal_ds","2.1.1");
	haxe_ui_util_Defines.set("polygonal-ds","2.1.1");
	haxe_ui_util_Defines.set("js_es5","1");
	haxe_ui_util_Defines.set("js_es","5");
	haxe_ui_util_Defines.set("js-es5","1");
	haxe_ui_util_Defines.set("js","1");
	haxe_ui_util_Defines.set("hxWebSockets","1.4.0");
	haxe_ui_util_Defines.set("html5","1.4.0");
	haxe_ui_util_Defines.set("howlerjs","2.0.4");
	haxe_ui_util_Defines.set("haxeui_html5","1.4.0");
	haxe_ui_util_Defines.set("haxeui_core","1.4.0");
	haxe_ui_util_Defines.set("haxeui_allow_subpixels","1");
	haxe_ui_util_Defines.set("haxeui-html5","1.4.0");
	haxe_ui_util_Defines.set("haxeui-core","1.4.0");
	haxe_ui_util_Defines.set("haxe_ver","4.205");
	haxe_ui_util_Defines.set("haxe_strings","7.0.2");
	haxe_ui_util_Defines.set("haxe4","1");
	haxe_ui_util_Defines.set("haxe3","1");
	haxe_ui_util_Defines.set("haxe-strings","7.0.2");
	haxe_ui_util_Defines.set("haxe","4.2.5");
	haxe_ui_util_Defines.set("format","3.5.0");
	haxe_ui_util_Defines.set("dce","std");
	haxe_ui_util_Defines.set("core","1.4.0");
	haxe_ui_util_Defines.set("backend","html5");
	haxe_ui_util_Defines.set("allow_subpixels","1");
	haxe_ui_Toolkit._backendBuilt = true;
};
haxe_ui_Toolkit.get_initialized = function() {
	return haxe_ui_Toolkit._initialized;
};
haxe_ui_Toolkit.init = function(options) {
	haxe_ui_Toolkit.build();
	haxe_ui_themes_ThemeManager.get_instance().applyTheme(haxe_ui_Toolkit._theme);
	if(options != null) {
		haxe_ui_Toolkit.get_screen().set_options(options);
		haxe_ui_ToolkitAssets.get_instance().options = options;
	}
	haxe_ui_Toolkit.get_screen().registerEvent("keydown",haxe_ui_Toolkit.onKeyDown);
	haxe_ui_Toolkit._initialized = true;
};
haxe_ui_Toolkit.onKeyDown = function(event) {
	if(event.keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("tab")) {
		if(event.shiftKey == false) {
			haxe_ui_focus_FocusManager.get_instance().focusNext();
		} else {
			haxe_ui_focus_FocusManager.get_instance().focusPrev();
		}
	}
};
haxe_ui_Toolkit.get_assets = function() {
	return haxe_ui_ToolkitAssets.get_instance();
};
haxe_ui_Toolkit.get_screen = function() {
	return haxe_ui_core_Screen.get_instance();
};
haxe_ui_Toolkit.set_pixelsPerRem = function(value) {
	if(haxe_ui_Toolkit.pixelsPerRem == value) {
		return value;
	}
	haxe_ui_Toolkit.pixelsPerRem = value;
	haxe_ui_core_Screen.get_instance().refreshStyleRootComponents();
	return value;
};
haxe_ui_Toolkit.get_autoScaleDPIThreshold = function() {
	if(haxe_ui_core_Screen.get_instance().get_isRetina() == true) {
		return 192;
	}
	return 120;
};
haxe_ui_Toolkit.get_scaleX = function() {
	if(haxe_ui_Toolkit._scaleX == 0) {
		if(haxe_ui_Toolkit.autoScale == true) {
			var dpi = haxe_ui_core_Screen.get_instance().get_dpi();
			if(dpi > haxe_ui_Toolkit.get_autoScaleDPIThreshold()) {
				if(haxe_ui_Toolkit.roundScale == true) {
					haxe_ui_Toolkit._scaleX = Math.round(dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold());
				} else {
					haxe_ui_Toolkit._scaleX = dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold();
				}
			} else {
				haxe_ui_Toolkit._scaleX = 1;
			}
		} else {
			haxe_ui_Toolkit._scaleX = 1;
		}
	}
	return haxe_ui_Toolkit._scaleX;
};
haxe_ui_Toolkit.set_scaleX = function(value) {
	if(haxe_ui_Toolkit._scaleX == value) {
		return value;
	}
	haxe_ui_Toolkit._scaleX = value;
	haxe_ui_Toolkit.autoScale = false;
	return value;
};
haxe_ui_Toolkit.get_scaleY = function() {
	if(haxe_ui_Toolkit._scaleY == 0) {
		if(haxe_ui_Toolkit.autoScale == true) {
			var dpi = haxe_ui_core_Screen.get_instance().get_dpi();
			if(dpi > haxe_ui_Toolkit.get_autoScaleDPIThreshold()) {
				if(haxe_ui_Toolkit.roundScale == true) {
					haxe_ui_Toolkit._scaleY = Math.round(dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold());
				} else {
					haxe_ui_Toolkit._scaleY = dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold();
				}
			} else {
				haxe_ui_Toolkit._scaleY = 1;
			}
		} else {
			haxe_ui_Toolkit._scaleY = 1;
		}
	}
	return haxe_ui_Toolkit._scaleY;
};
haxe_ui_Toolkit.set_scaleY = function(value) {
	if(haxe_ui_Toolkit._scaleY == value) {
		return value;
	}
	haxe_ui_Toolkit._scaleY = value;
	haxe_ui_Toolkit.autoScale = false;
	return value;
};
haxe_ui_Toolkit.get_scale = function() {
	return Math.max(haxe_ui_Toolkit.get_scaleX(),haxe_ui_Toolkit.get_scaleY());
};
haxe_ui_Toolkit.set_scale = function(value) {
	haxe_ui_Toolkit.set_scaleX(value);
	haxe_ui_Toolkit.set_scaleY(value);
	return value;
};
haxe_ui_Toolkit.callLater = function(fn) {
	new haxe_ui_CallLater(fn);
};
var haxe_ui_backend_AssetsBase = function() {
};
$hxClasses["haxe.ui.backend.AssetsBase"] = haxe_ui_backend_AssetsBase;
haxe_ui_backend_AssetsBase.__name__ = "haxe.ui.backend.AssetsBase";
haxe_ui_backend_AssetsBase.isAbsolutePath = function(path) {
	if(StringTools.startsWith(path,"/")) {
		return true;
	}
	if(path.charAt(1) == ":") {
		return true;
	}
	if(StringTools.startsWith(path,"\\\\")) {
		return true;
	}
	return false;
};
haxe_ui_backend_AssetsBase.prototype = {
	getTextDelegate: function(resourceId) {
		return null;
	}
	,getImageInternal: function(resourceId,callback) {
		callback(null);
	}
	,getImageFromHaxeResource: function(resourceId,callback) {
		callback(resourceId,null);
	}
	,imageFromBytes: function(bytes,callback) {
		callback(null);
	}
	,imageFromFile: function(filename,callback) {
		haxe_Log.trace("WARNING: cant load from file system on non-sys targets [" + filename + "]",{ fileName : "haxe/ui/backend/AssetsBase.hx", lineNumber : 50, className : "haxe.ui.backend.AssetsBase", methodName : "imageFromFile"});
		callback(null);
	}
	,getFontInternal: function(resourceId,callback) {
		callback(null);
	}
	,getFontFromHaxeResource: function(resourceId,callback) {
		callback(resourceId,null);
	}
	,imageInfoFromImageData: function(imageData) {
		return { data : imageData, width : 0, height : 0};
	}
	,__class__: haxe_ui_backend_AssetsBase
};
var haxe_ui_backend_AssetsImpl = function() {
	haxe_ui_backend_AssetsBase.call(this);
};
$hxClasses["haxe.ui.backend.AssetsImpl"] = haxe_ui_backend_AssetsImpl;
haxe_ui_backend_AssetsImpl.__name__ = "haxe.ui.backend.AssetsImpl";
haxe_ui_backend_AssetsImpl.__super__ = haxe_ui_backend_AssetsBase;
haxe_ui_backend_AssetsImpl.prototype = $extend(haxe_ui_backend_AssetsBase.prototype,{
	getImageInternal: function(resourceId,callback) {
		var bytes = haxe_Resource.getBytes(resourceId);
		if(bytes != null) {
			callback(null);
			return;
		}
		var image = window.document.createElement("img");
		image.onload = function(e) {
			var imageInfo = { width : image.width, height : image.height, data : image};
			callback(imageInfo);
		};
		image.onerror = function(e) {
			callback(null);
		};
		image.src = resourceId;
	}
	,getImageFromHaxeResource: function(resourceId,callback) {
		var bytes = haxe_Resource.getBytes(resourceId);
		this.imageFromBytes(bytes,function(imageInfo) {
			callback(resourceId,imageInfo);
		});
	}
	,imageFromBytes: function(bytes,callback) {
		if(bytes == null) {
			callback(null);
			return;
		}
		var image = window.document.createElement("img");
		image.onload = function(e) {
			var imageInfo = { width : image.width, height : image.height, data : image};
			callback(imageInfo);
		};
		image.onerror = function(e) {
			window.console.log(e);
			callback(null);
		};
		var blob = new Blob([bytes.b.bufferValue],this.getBlobOptionsFromBytes(bytes));
		var blobUrl = URL.createObjectURL(blob);
		image.src = blobUrl;
	}
	,getBlobOptionsFromBytes: function(bytes) {
		if(bytes.b[0] == HxOverrides.cca("<",0) && bytes.b[1] == HxOverrides.cca("s",0) && bytes.b[2] == HxOverrides.cca("v",0) && bytes.b[3] == HxOverrides.cca("g",0)) {
			return { type : "image/svg+xml"};
		}
		return null;
	}
	,getFontInternal: function(resourceId,callback) {
		var bytes = haxe_Resource.getBytes(resourceId);
		if(bytes == null) {
			haxe_ui_backend_html5_util_FontDetect.onFontLoaded(resourceId,function(f) {
				var fontInfo = { data : f};
				callback(fontInfo);
			},function(f) {
				callback(null);
			});
			return;
		}
		this.getFontFromHaxeResource(resourceId,function(r,f) {
			callback(f);
		});
	}
	,imageInfoFromImageData: function(imageData) {
		return { data : imageData, width : imageData.width, height : imageData.height};
	}
	,getFontFromHaxeResource: function(resourceId,callback) {
		var bytes = haxe_Resource.getBytes(resourceId);
		if(bytes == null) {
			callback(resourceId,null);
			return;
		}
		var fontFamilyParts = resourceId.split("/");
		var fontFamily = fontFamilyParts[fontFamilyParts.length - 1];
		if(fontFamily.indexOf(".") != -1) {
			fontFamily = HxOverrides.substr(fontFamily,0,fontFamily.indexOf("."));
		}
		var fontFace = new FontFace(fontFamily,bytes.b.bufferValue);
		fontFace.load().then(function(loadedFace) {
			window.document.fonts.add(loadedFace);
			haxe_ui_backend_html5_util_FontDetect.onFontLoaded(fontFamily,function(f) {
				var fontInfo = { data : fontFamily};
				callback(resourceId,fontInfo);
			},function(f) {
				callback(resourceId,null);
			});
		}).catch(function(error) {
			callback(resourceId,null);
		});
	}
	,__class__: haxe_ui_backend_AssetsImpl
});
var haxe_ui_ToolkitAssets = function() {
	this.options = null;
	this.preloadList = [];
	haxe_ui_backend_AssetsImpl.call(this);
};
$hxClasses["haxe.ui.ToolkitAssets"] = haxe_ui_ToolkitAssets;
haxe_ui_ToolkitAssets.__name__ = "haxe.ui.ToolkitAssets";
haxe_ui_ToolkitAssets.__properties__ = {get_instance:"get_instance"};
haxe_ui_ToolkitAssets.get_instance = function() {
	if(haxe_ui_ToolkitAssets._instance == null) {
		haxe_ui_ToolkitAssets._instance = new haxe_ui_ToolkitAssets();
	}
	return haxe_ui_ToolkitAssets._instance;
};
haxe_ui_ToolkitAssets.__super__ = haxe_ui_backend_AssetsImpl;
haxe_ui_ToolkitAssets.prototype = $extend(haxe_ui_backend_AssetsImpl.prototype,{
	preloadList: null
	,options: null
	,_fontCache: null
	,_fontCallbacks: null
	,_imageCache: null
	,_imageCallbacks: null
	,getFont: function(resourceId,callback,useCache) {
		if(useCache == null) {
			useCache = true;
		}
		var _gthis = this;
		if(this._fontCache != null && this._fontCache.h[resourceId] != null && useCache == true) {
			callback(this._fontCache.h[resourceId]);
		} else {
			if(this._fontCallbacks == null) {
				this._fontCallbacks = new haxe_ui_util_CallbackMap();
			}
			this._fontCallbacks.add(resourceId,callback);
			if(this._fontCallbacks.count(resourceId) == 1) {
				this.getFontInternal(resourceId,function(font) {
					if(font != null) {
						_gthis._onFontLoaded(resourceId,font);
					} else if(haxe_Resource.listNames().indexOf(resourceId) != -1) {
						_gthis.getFontFromHaxeResource(resourceId,$bind(_gthis,_gthis._onFontLoaded));
					} else {
						_gthis._fontCallbacks.remove(resourceId,callback);
						callback(null);
					}
				});
			}
		}
	}
	,_onFontLoaded: function(resourceId,font) {
		if(this._fontCache == null) {
			this._fontCache = new haxe_ds_StringMap();
		}
		this._fontCache.h[resourceId] = font;
		this._fontCallbacks.invokeAndRemove(resourceId,font);
	}
	,cacheImage: function(resourceId,imageInfo) {
		if(this._imageCache == null) {
			this._imageCache = new haxe_ds_StringMap();
		}
		if(imageInfo == null || resourceId == null) {
			return;
		}
		this._imageCache.h[resourceId] = imageInfo;
	}
	,getCachedImage: function(resourceId) {
		if(this._imageCache == null) {
			return null;
		}
		return this._imageCache.h[resourceId];
	}
	,getImage: function(resourceId,callback,useCache) {
		if(useCache == null) {
			useCache = true;
		}
		var _gthis = this;
		var orginalResourceId = resourceId;
		resourceId = this.runPlugins(resourceId);
		if(this._imageCache != null && this._imageCache.h[resourceId] != null && useCache == true) {
			callback(this._imageCache.h[resourceId]);
		} else {
			if(this._imageCallbacks == null) {
				this._imageCallbacks = new haxe_ui_util_CallbackMap();
			}
			this._imageCallbacks.add(resourceId,callback);
			if(this._imageCallbacks.count(resourceId) == 1) {
				this.getImageInternal(resourceId,function(imageInfo) {
					if(imageInfo != null) {
						_gthis._onImageLoaded(resourceId,imageInfo);
					} else if(haxe_Resource.listNames().indexOf(orginalResourceId) != -1) {
						_gthis._imageCallbacks.remove(resourceId,callback);
						_gthis._imageCallbacks.add(orginalResourceId,callback);
						_gthis.getImageFromHaxeResource(orginalResourceId,$bind(_gthis,_gthis._onImageLoaded));
					} else if(haxe_Resource.listNames().indexOf(resourceId) != -1) {
						_gthis.getImageFromHaxeResource(resourceId,$bind(_gthis,_gthis._onImageLoaded));
					} else {
						_gthis._imageCallbacks.remove(resourceId,callback);
						callback(null);
					}
				});
			}
		}
	}
	,_onImageLoaded: function(resourceId,imageInfo) {
		if(imageInfo != null && (imageInfo.width == -1 || imageInfo.width == -1)) {
			haxe_Log.trace("WARNING: imageData.originalWidth == -1 || imageData.originalHeight == -1",{ fileName : "haxe/ui/ToolkitAssets.hx", lineNumber : 123, className : "haxe.ui.ToolkitAssets", methodName : "_onImageLoaded"});
		}
		if(this._imageCache == null) {
			this._imageCache = new haxe_ds_StringMap();
		}
		this._imageCache.h[resourceId] = imageInfo;
		this._imageCallbacks.invokeAndRemove(resourceId,imageInfo);
	}
	,getText: function(resourceId) {
		var s = this.getTextDelegate(resourceId);
		if(s == null) {
			s = haxe_Resource.getString(resourceId);
		}
		return s;
	}
	,getBytes: function(resourceId) {
		return haxe_Resource.getBytes(resourceId);
	}
	,_plugins: null
	,addPlugin: function(plugin) {
		if(this._plugins == null) {
			this._plugins = [];
		}
		this._plugins.push(plugin);
	}
	,runPlugins: function(asset) {
		if(this._plugins == null) {
			return asset;
		}
		var _g = 0;
		var _g1 = this._plugins;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			asset = p.invoke(asset);
		}
		return asset;
	}
	,__class__: haxe_ui_ToolkitAssets
});
var haxe_ui_actions_ActionManager = function() {
	this._repeatActions = new haxe_ds_StringMap();
	this._inputSources = [];
	this._events = null;
	this.navigationMethod = "navigationDesktop";
};
$hxClasses["haxe.ui.actions.ActionManager"] = haxe_ui_actions_ActionManager;
haxe_ui_actions_ActionManager.__name__ = "haxe.ui.actions.ActionManager";
haxe_ui_actions_ActionManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_actions_ActionManager.get_instance = function() {
	if(haxe_ui_actions_ActionManager._instance == null) {
		haxe_ui_actions_ActionManager._instance = new haxe_ui_actions_ActionManager();
	}
	return haxe_ui_actions_ActionManager._instance;
};
haxe_ui_actions_ActionManager.prototype = {
	navigationMethod: null
	,_events: null
	,_inputSources: null
	,_repeatActions: null
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this._events == null) {
			this._events = new haxe_ui_util_EventMap();
		}
		this._events.add(type,listener,priority);
	}
	,unregisterEvent: function(type,listener) {
		if(this._events == null) {
			return;
		}
		this._events.remove(type,listener);
	}
	,dispatch: function(event) {
		if(this._events == null) {
			return;
		}
		this._events.invoke(event.type,event);
	}
	,registerInputSource: function(source) {
		source.start();
		this._inputSources.push(source);
	}
	,actionStart: function(action,source) {
		var _gthis = this;
		var currentFocus = haxe_ui_focus_FocusManager.get_instance().get_focus();
		if(currentFocus == null) {
			return;
		}
		if(!((currentFocus) instanceof haxe_ui_core_InteractiveComponent)) {
			return;
		}
		var actionEvent = new haxe_ui_events_ActionEvent("actionstart",action);
		var c = js_Boot.__cast(currentFocus , haxe_ui_core_InteractiveComponent);
		c.dispatch(actionEvent);
		if(actionEvent.canceled == false) {
			var c1 = js_Boot.getClass(source);
			this.dispatch(new haxe_ui_events_ActionEvent("actionstart",action,false,c1.__name__));
		}
		if(actionEvent.repeater == true && Object.prototype.hasOwnProperty.call(this._repeatActions.h,action) == false) {
			var this1 = this._repeatActions;
			var value = { type : action, timer : new haxe_ui_util_Timer(c.actionRepeatInterval,function() {
				_gthis.actionStart(action,source);
			})};
			this1.h[action] = value;
		}
	}
	,actionEnd: function(action,source) {
		var currentFocus = haxe_ui_focus_FocusManager.get_instance().get_focus();
		if(currentFocus == null) {
			return;
		}
		if(!((currentFocus) instanceof haxe_ui_core_InteractiveComponent)) {
			return;
		}
		var actionEvent = new haxe_ui_events_ActionEvent("actionend",action);
		var c = js_Boot.__cast(currentFocus , haxe_ui_core_InteractiveComponent);
		c.dispatch(actionEvent);
		if(actionEvent.canceled == false) {
			var c = js_Boot.getClass(source);
			this.dispatch(new haxe_ui_events_ActionEvent("actionend",action,false,c.__name__));
		}
		if(Object.prototype.hasOwnProperty.call(this._repeatActions.h,action)) {
			var info = this._repeatActions.h[action];
			info.timer.stop();
			var _this = this._repeatActions;
			var key = action;
			if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
				delete(_this.h[key]);
			}
		}
	}
	,__class__: haxe_ui_actions_ActionManager
};
var haxe_ui_actions_IActionInputSource = function() { };
$hxClasses["haxe.ui.actions.IActionInputSource"] = haxe_ui_actions_IActionInputSource;
haxe_ui_actions_IActionInputSource.__name__ = "haxe.ui.actions.IActionInputSource";
haxe_ui_actions_IActionInputSource.__isInterface__ = true;
haxe_ui_actions_IActionInputSource.prototype = {
	start: null
	,__class__: haxe_ui_actions_IActionInputSource
};
var haxe_ui_actions_KeyboardActionInputSource = function() {
	this._downKeys = new haxe_ds_IntMap();
	this._started = false;
};
$hxClasses["haxe.ui.actions.KeyboardActionInputSource"] = haxe_ui_actions_KeyboardActionInputSource;
haxe_ui_actions_KeyboardActionInputSource.__name__ = "haxe.ui.actions.KeyboardActionInputSource";
haxe_ui_actions_KeyboardActionInputSource.__interfaces__ = [haxe_ui_actions_IActionInputSource];
haxe_ui_actions_KeyboardActionInputSource.prototype = {
	_started: null
	,start: function() {
		if(this._started == true) {
			return;
		}
		this._started = true;
		haxe_ui_core_Screen.get_instance().registerEvent("keydown",$bind(this,this.onKeyDown));
		haxe_ui_core_Screen.get_instance().registerEvent("keyup",$bind(this,this.onKeyUp));
	}
	,_downKeys: null
	,onKeyDown: function(e) {
		var keyCode = e.keyCode;
		if(this._downKeys.h.hasOwnProperty(keyCode)) {
			return;
		}
		this._downKeys.h[keyCode] = true;
		if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("space")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionPress",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("left")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionLeft",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("right")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionRight",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("up")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionUp",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("down")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionDown",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("escape")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionBack",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("enter")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionConfirm",this);
		}
	}
	,onKeyUp: function(e) {
		var keyCode = e.keyCode;
		if(this._downKeys.h.hasOwnProperty(keyCode) == false) {
			return;
		}
		this._downKeys.remove(keyCode);
		if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("space")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionPress",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("left")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionLeft",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("right")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionRight",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("up")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionUp",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("down")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionDown",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("escape")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionBack",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("enter")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionConfirm",this);
		}
	}
	,__class__: haxe_ui_actions_KeyboardActionInputSource
};
var haxe_ui_assets_AssetPlugin = function() {
};
$hxClasses["haxe.ui.assets.AssetPlugin"] = haxe_ui_assets_AssetPlugin;
haxe_ui_assets_AssetPlugin.__name__ = "haxe.ui.assets.AssetPlugin";
haxe_ui_assets_AssetPlugin.prototype = {
	_props: null
	,invoke: function(asset) {
		return asset;
	}
	,setProperty: function(name,value) {
		if(this._props == null) {
			this._props = new haxe_ds_StringMap();
		}
		this._props.h[name] = value;
	}
	,getProperty: function(name,defaultValue) {
		if(this._props == null) {
			return defaultValue;
		}
		var v = this._props.h[name];
		if(v == null) {
			v = defaultValue;
		}
		return v;
	}
	,__class__: haxe_ui_assets_AssetPlugin
};
var haxe_ui_backend_ComponentGraphicsBase = function(component) {
	this._drawCommands = [];
	this._component = component;
};
$hxClasses["haxe.ui.backend.ComponentGraphicsBase"] = haxe_ui_backend_ComponentGraphicsBase;
haxe_ui_backend_ComponentGraphicsBase.__name__ = "haxe.ui.backend.ComponentGraphicsBase";
haxe_ui_backend_ComponentGraphicsBase.prototype = {
	_component: null
	,_drawCommands: null
	,clear: function() {
		this._drawCommands = [];
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.Clear);
	}
	,setPixel: function(x,y,color) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.SetPixel(x,y,color));
	}
	,setPixels: function(pixels) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.SetPixels(pixels));
	}
	,moveTo: function(x,y) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.MoveTo(x,y));
	}
	,lineTo: function(x,y) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.LineTo(x,y));
	}
	,strokeStyle: function(color,thickness,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		if(thickness == null) {
			thickness = 1;
		}
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.StrokeStyle(color,thickness,alpha));
	}
	,circle: function(x,y,radius) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.Circle(x,y,radius));
	}
	,fillStyle: function(color,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.FillStyle(color,alpha));
	}
	,curveTo: function(controlX,controlY,anchorX,anchorY) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.CurveTo(controlX,controlY,anchorX,anchorY));
	}
	,cubicCurveTo: function(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.CubicCurveTo(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY));
	}
	,rectangle: function(x,y,width,height) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.Rectangle(x,y,width,height));
	}
	,image: function(resource,x,y,width,height) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.Image(resource,x,y,width,height));
	}
	,resize: function(width,height) {
	}
	,setProperty: function(name,value) {
	}
	,detach: function() {
	}
	,replayDrawCommands: function() {
		var commands = this._drawCommands.slice();
		this._drawCommands = [];
		var _g = 0;
		while(_g < commands.length) {
			var c = commands[_g];
			++_g;
			switch(c._hx_index) {
			case 0:
				this.clear();
				break;
			case 1:
				var x = c.x;
				var y = c.y;
				var color = c.color;
				this.setPixel(x,y,color);
				break;
			case 2:
				var pixels = c.pixels;
				this.setPixels(pixels);
				break;
			case 3:
				var x1 = c.x;
				var y1 = c.y;
				this.moveTo(x1,y1);
				break;
			case 4:
				var x2 = c.x;
				var y2 = c.y;
				this.lineTo(x2,y2);
				break;
			case 5:
				var color1 = c.color;
				var thickness = c.thickness;
				var alpha = c.alpha;
				this.strokeStyle(color1,thickness,alpha);
				break;
			case 6:
				var x3 = c.x;
				var y3 = c.y;
				var radius = c.radius;
				this.circle(x3,y3,radius);
				break;
			case 7:
				var color2 = c.color;
				var alpha1 = c.alpha;
				this.fillStyle(color2,alpha1);
				break;
			case 8:
				var controlX = c.controlX;
				var controlY = c.controlY;
				var anchorX = c.anchorX;
				var anchorY = c.anchorY;
				this.curveTo(controlX,controlY,anchorX,anchorY);
				break;
			case 9:
				var controlX1 = c.controlX1;
				var controlY1 = c.controlY1;
				var controlX2 = c.controlX2;
				var controlY2 = c.controlY2;
				var anchorX1 = c.anchorX;
				var anchorY1 = c.anchorY;
				this.cubicCurveTo(controlX1,controlY1,controlX2,controlY2,anchorX1,anchorY1);
				break;
			case 10:
				var x4 = c.x;
				var y4 = c.y;
				var width = c.width;
				var height = c.height;
				this.rectangle(x4,y4,width,height);
				break;
			case 11:
				var resource = c.resource;
				var x5 = c.x;
				var y5 = c.y;
				var width1 = c.width;
				var height1 = c.height;
				this.image(resource,x5,y5,width1,height1);
				break;
			}
		}
	}
	,__class__: haxe_ui_backend_ComponentGraphicsBase
};
var haxe_ui_backend_ComponentGraphicsImpl = function(component) {
	haxe_ui_backend_ComponentGraphicsBase.call(this,component);
	this._impl = new haxe_ui_backend_html5_graphics_SVGGraphicsImpl(component);
};
$hxClasses["haxe.ui.backend.ComponentGraphicsImpl"] = haxe_ui_backend_ComponentGraphicsImpl;
haxe_ui_backend_ComponentGraphicsImpl.__name__ = "haxe.ui.backend.ComponentGraphicsImpl";
haxe_ui_backend_ComponentGraphicsImpl.__super__ = haxe_ui_backend_ComponentGraphicsBase;
haxe_ui_backend_ComponentGraphicsImpl.prototype = $extend(haxe_ui_backend_ComponentGraphicsBase.prototype,{
	_impl: null
	,clear: function() {
		haxe_ui_backend_ComponentGraphicsBase.prototype.clear.call(this);
		this._impl.clear();
	}
	,setPixel: function(x,y,color) {
		haxe_ui_backend_ComponentGraphicsBase.prototype.setPixel.call(this,x,y,color);
		this._impl.setPixel(x,y,color);
	}
	,setPixels: function(pixels) {
		haxe_ui_backend_ComponentGraphicsBase.prototype.setPixels.call(this,pixels);
		this._impl.setPixels(pixels);
	}
	,moveTo: function(x,y) {
		haxe_ui_backend_ComponentGraphicsBase.prototype.moveTo.call(this,x,y);
		this._impl.moveTo(x,y);
	}
	,lineTo: function(x,y) {
		haxe_ui_backend_ComponentGraphicsBase.prototype.lineTo.call(this,x,y);
		this._impl.lineTo(x,y);
	}
	,strokeStyle: function(color,thickness,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		if(thickness == null) {
			thickness = 1;
		}
		haxe_ui_backend_ComponentGraphicsBase.prototype.strokeStyle.call(this,color,thickness,alpha);
		this._impl.strokeStyle(color,thickness,alpha);
	}
	,fillStyle: function(color,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		haxe_ui_backend_ComponentGraphicsBase.prototype.fillStyle.call(this,color,alpha);
		this._impl.fillStyle(color,alpha);
	}
	,circle: function(x,y,radius) {
		haxe_ui_backend_ComponentGraphicsBase.prototype.circle.call(this,x,y,radius);
		this._impl.circle(x,y,radius);
	}
	,curveTo: function(controlX,controlY,anchorX,anchorY) {
		haxe_ui_backend_ComponentGraphicsBase.prototype.curveTo.call(this,controlX,controlY,anchorX,anchorY);
		this._impl.curveTo(controlX,controlY,anchorX,anchorY);
	}
	,cubicCurveTo: function(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY) {
		haxe_ui_backend_ComponentGraphicsBase.prototype.cubicCurveTo.call(this,controlX1,controlY1,controlX2,controlY2,anchorX,anchorY);
		this._impl.cubicCurveTo(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY);
	}
	,rectangle: function(x,y,width,height) {
		haxe_ui_backend_ComponentGraphicsBase.prototype.rectangle.call(this,x,y,width,height);
		this._impl.rectangle(x,y,width,height);
	}
	,image: function(resource,x,y,width,height) {
		haxe_ui_backend_ComponentGraphicsBase.prototype.image.call(this,resource,x,y,width,height);
		this._impl.image(resource,x,y,width,height);
	}
	,resize: function(width,height) {
		haxe_ui_backend_ComponentGraphicsBase.prototype.resize.call(this,width,height);
		this._impl.resize(width,height);
	}
	,setProperty: function(name,value) {
		if(name == "html5.graphics.method") {
			if(value == "svg") {
				if(this._impl != null) {
					this._impl.detach();
				}
				this._impl = new haxe_ui_backend_html5_graphics_SVGGraphicsImpl(this._component);
			} else if(value == "canvas") {
				if(this._impl != null) {
					this._impl.detach();
				}
				this._impl = new haxe_ui_backend_html5_graphics_CanvasGraphicsImpl(this._component);
			}
		} else {
			this._impl.setProperty(name,value);
		}
	}
	,__class__: haxe_ui_backend_ComponentGraphicsImpl
});
var haxe_ui_backend_EventBase = function() { };
$hxClasses["haxe.ui.backend.EventBase"] = haxe_ui_backend_EventBase;
haxe_ui_backend_EventBase.__name__ = "haxe.ui.backend.EventBase";
haxe_ui_backend_EventBase.prototype = {
	cancel: function() {
	}
	,postClone: function(event) {
	}
	,__class__: haxe_ui_backend_EventBase
};
var haxe_ui_backend_EventImpl = function() { };
$hxClasses["haxe.ui.backend.EventImpl"] = haxe_ui_backend_EventImpl;
haxe_ui_backend_EventImpl.__name__ = "haxe.ui.backend.EventImpl";
haxe_ui_backend_EventImpl.__super__ = haxe_ui_backend_EventBase;
haxe_ui_backend_EventImpl.prototype = $extend(haxe_ui_backend_EventBase.prototype,{
	_originalEvent: null
	,cancel: function() {
		if(this._originalEvent != null) {
			this._originalEvent.preventDefault();
			this._originalEvent.stopImmediatePropagation();
			this._originalEvent.stopPropagation();
		}
	}
	,postClone: function(event) {
		event._originalEvent = this._originalEvent;
	}
	,__class__: haxe_ui_backend_EventImpl
});
var haxe_ui_backend_FocusManagerBase = function() {
};
$hxClasses["haxe.ui.backend.FocusManagerBase"] = haxe_ui_backend_FocusManagerBase;
haxe_ui_backend_FocusManagerBase.__name__ = "haxe.ui.backend.FocusManagerBase";
haxe_ui_backend_FocusManagerBase.prototype = {
	applyFocus: function(c) {
	}
	,unapplyFocus: function(c) {
	}
	,__class__: haxe_ui_backend_FocusManagerBase
};
var haxe_ui_backend_FocusManagerImpl = function() {
	haxe_ui_backend_FocusManagerBase.call(this);
};
$hxClasses["haxe.ui.backend.FocusManagerImpl"] = haxe_ui_backend_FocusManagerImpl;
haxe_ui_backend_FocusManagerImpl.__name__ = "haxe.ui.backend.FocusManagerImpl";
haxe_ui_backend_FocusManagerImpl.__super__ = haxe_ui_backend_FocusManagerBase;
haxe_ui_backend_FocusManagerImpl.prototype = $extend(haxe_ui_backend_FocusManagerBase.prototype,{
	applyFocus: function(c) {
		haxe_ui_backend_FocusManagerBase.prototype.applyFocus.call(this,c);
	}
	,unapplyFocus: function(c) {
		haxe_ui_backend_FocusManagerBase.prototype.applyFocus.call(this,c);
	}
	,__class__: haxe_ui_backend_FocusManagerImpl
});
var haxe_ui_backend_ImageSurface = function() {
};
$hxClasses["haxe.ui.backend.ImageSurface"] = haxe_ui_backend_ImageSurface;
haxe_ui_backend_ImageSurface.__name__ = "haxe.ui.backend.ImageSurface";
haxe_ui_backend_ImageSurface.prototype = {
	__class__: haxe_ui_backend_ImageSurface
};
var haxe_ui_backend_ImageBase = function() {
	this._imageHeight = 0;
	this._imageWidth = 0;
	this._top = 0;
	this._left = 0;
	this.aspectRatio = 1;
	haxe_ui_backend_ImageSurface.call(this);
};
$hxClasses["haxe.ui.backend.ImageBase"] = haxe_ui_backend_ImageBase;
haxe_ui_backend_ImageBase.__name__ = "haxe.ui.backend.ImageBase";
haxe_ui_backend_ImageBase.__super__ = haxe_ui_backend_ImageSurface;
haxe_ui_backend_ImageBase.prototype = $extend(haxe_ui_backend_ImageSurface.prototype,{
	parentComponent: null
	,aspectRatio: null
	,_left: null
	,_top: null
	,_imageWidth: null
	,_imageHeight: null
	,_imageInfo: null
	,_imageClipRect: null
	,dispose: function() {
		if(this.parentComponent != null) {
			this.parentComponent = null;
		}
	}
	,validateData: function() {
	}
	,validatePosition: function() {
	}
	,validateDisplay: function() {
	}
	,__class__: haxe_ui_backend_ImageBase
});
var haxe_ui_backend_ImageDisplayImpl = function() {
	haxe_ui_backend_ImageBase.call(this);
	this.element = window.document.createElement("img");
	this.element.style.position = "absolute";
	this.element.style.borderRadius = "inherit";
	this.element.style.setProperty("pointer-events","none");
};
$hxClasses["haxe.ui.backend.ImageDisplayImpl"] = haxe_ui_backend_ImageDisplayImpl;
haxe_ui_backend_ImageDisplayImpl.__name__ = "haxe.ui.backend.ImageDisplayImpl";
haxe_ui_backend_ImageDisplayImpl.__super__ = haxe_ui_backend_ImageBase;
haxe_ui_backend_ImageDisplayImpl.prototype = $extend(haxe_ui_backend_ImageBase.prototype,{
	element: null
	,dispose: function() {
		if(this.element != null) {
			haxe_ui_backend_html5_HtmlUtils.removeElement(this.element);
		}
	}
	,validateData: function() {
		if(this.element.src != this._imageInfo.data.src) {
			this.element.src = this._imageInfo.data.src;
			this.applyStyle();
		}
	}
	,validatePosition: function() {
		var style = this.element.style;
		style.left = "" + this._left + "px";
		style.top = "" + this._top + "px";
	}
	,validateDisplay: function() {
		var style = this.element.style;
		style.width = "" + this._imageWidth + "px";
		style.height = "" + this._imageHeight + "px";
		if(this._imageClipRect != null) {
			var clipValue = "rect(" + ("" + (-this._top + this._imageClipRect.top) + "px") + "," + ("" + (-this._left + this._imageClipRect.left + this._imageClipRect.width) + "px") + "," + ("" + (-this._top + this._imageClipRect.top + this._imageClipRect.height) + "px") + "," + ("" + (-this._left + this._imageClipRect.left) + "px") + ")";
			if(this.element.style.clip != clipValue) {
				this.element.style.clip = clipValue;
			}
		} else if(this.element.style.clip != null) {
			this.element.style.removeProperty("clip");
		}
	}
	,applyStyle: function() {
		if(this.parentComponent != null && this.parentComponent.get_style() != null) {
			if(this.parentComponent.get_style().imageRendering == "pixelated") {
				this.element.style.setProperty("image-rendering","pixelated");
				this.element.style.setProperty("image-rendering","-moz-crisp-edges");
				this.element.style.setProperty("image-rendering","crisp-edges");
			} else if(this.element.style.getPropertyValue("image-rendering") != null) {
				this.element.style.removeProperty("image-rendering");
			}
		}
	}
	,__class__: haxe_ui_backend_ImageDisplayImpl
});
var haxe_ui_backend_OpenFileDialogBase = function(options,callback) {
	this._options = null;
	this.onDialogClosed = null;
	this.callback = null;
	this.selectedFiles = null;
	this.set_options(options);
	this.callback = callback;
};
$hxClasses["haxe.ui.backend.OpenFileDialogBase"] = haxe_ui_backend_OpenFileDialogBase;
haxe_ui_backend_OpenFileDialogBase.__name__ = "haxe.ui.backend.OpenFileDialogBase";
haxe_ui_backend_OpenFileDialogBase.prototype = {
	selectedFiles: null
	,callback: null
	,onDialogClosed: null
	,_options: null
	,get_options: function() {
		return this._options;
	}
	,set_options: function(value) {
		this._options = value;
		this.validateOptions();
		return value;
	}
	,validateOptions: function() {
		if(this._options == null) {
			this.set_options({ });
		}
		if(this._options.readContents == null) {
			this._options.readContents = false;
		}
		if(this._options.readAsBinary == null) {
			this._options.readAsBinary = false;
		}
		if(this._options.multiple == null) {
			this._options.multiple = false;
		}
	}
	,show: function() {
		haxe_ui_containers_dialogs_Dialogs.messageBox("OpenFileDialog has no implementation on this backend","Open File","error");
	}
	,dialogConfirmed: function(files) {
		this.selectedFiles = files;
		if(this.callback != null) {
			this.callback("{{ok}}",this.selectedFiles);
		}
		if(this.onDialogClosed != null) {
			var event = new haxe_ui_containers_dialogs_DialogEvent("dialogClosed",false,this.selectedFiles);
			event.button = "{{ok}}";
			this.onDialogClosed(event);
		}
	}
	,dialogCancelled: function() {
		this.selectedFiles = null;
		if(this.callback != null) {
			this.callback("{{cancel}}",this.selectedFiles);
		}
		if(this.onDialogClosed != null) {
			var event = new haxe_ui_containers_dialogs_DialogEvent("dialogClosed",false,this.selectedFiles);
			event.button = "{{cancel}}";
			this.onDialogClosed(event);
		}
	}
	,__class__: haxe_ui_backend_OpenFileDialogBase
	,__properties__: {set_options:"set_options",get_options:"get_options"}
};
var haxe_ui_backend_OpenFileDialogImpl = function(options,callback) {
	this._fileSelector = new haxe_ui_util_html5_FileSelector();
	haxe_ui_backend_OpenFileDialogBase.call(this,options,callback);
};
$hxClasses["haxe.ui.backend.OpenFileDialogImpl"] = haxe_ui_backend_OpenFileDialogImpl;
haxe_ui_backend_OpenFileDialogImpl.__name__ = "haxe.ui.backend.OpenFileDialogImpl";
haxe_ui_backend_OpenFileDialogImpl.__super__ = haxe_ui_backend_OpenFileDialogBase;
haxe_ui_backend_OpenFileDialogImpl.prototype = $extend(haxe_ui_backend_OpenFileDialogBase.prototype,{
	_fileSelector: null
	,show: function() {
		var readMode = "none";
		if(this.get_options().readContents == true) {
			if(this.get_options().readAsBinary == false) {
				readMode = "text";
			} else {
				readMode = "binary";
			}
		}
		this._fileSelector.selectFile($bind(this,this.onFileSelected),readMode,this.get_options().multiple,this.get_options().extensions);
	}
	,onFileSelected: function(cancelled,files) {
		if(cancelled == false) {
			this.dialogConfirmed(files);
		} else {
			this.dialogCancelled();
		}
	}
	,__class__: haxe_ui_backend_OpenFileDialogImpl
});
var haxe_ui_backend_PlatformBase = function() {
	this._isMobile = null;
};
$hxClasses["haxe.ui.backend.PlatformBase"] = haxe_ui_backend_PlatformBase;
haxe_ui_backend_PlatformBase.__name__ = "haxe.ui.backend.PlatformBase";
haxe_ui_backend_PlatformBase.prototype = {
	isWindows: null
	,get_isWindows: function() {
		return window.navigator.userAgent.toLowerCase().indexOf("windows") != -1;
	}
	,isLinux: null
	,get_isLinux: function() {
		return window.navigator.userAgent.toLowerCase().indexOf("linux") != -1;
	}
	,isMac: null
	,get_isMac: function() {
		return window.navigator.userAgent.toLowerCase().indexOf("mac") != -1;
	}
	,_isMobile: null
	,isMobile: null
	,get_isMobile: function() {
		if(this._isMobile != null) {
			return this._isMobile;
		}
		this._isMobile = false;
		var ua = $global.navigator.userAgent;
		this._isMobile = haxe_ui_backend_PlatformBase.MOBILE_REGEXP.match(ua);
		return this._isMobile;
	}
	,getMetric: function(id) {
		return 0;
	}
	,getColor: function(id) {
		return null;
	}
	,getSystemLocale: function() {
		return null;
	}
	,perf: function() {
		return HxOverrides.now() / 1000 * 1000;
	}
	,KeyTab: null
	,get_KeyTab: function() {
		return this.getKeyCode("tab");
	}
	,KeyUp: null
	,get_KeyUp: function() {
		return this.getKeyCode("up");
	}
	,KeyDown: null
	,get_KeyDown: function() {
		return this.getKeyCode("down");
	}
	,KeyLeft: null
	,get_KeyLeft: function() {
		return this.getKeyCode("left");
	}
	,KeyRight: null
	,get_KeyRight: function() {
		return this.getKeyCode("right");
	}
	,KeySpace: null
	,get_KeySpace: function() {
		return this.getKeyCode("space");
	}
	,KeyEnter: null
	,get_KeyEnter: function() {
		return this.getKeyCode("enter");
	}
	,KeyEscape: null
	,get_KeyEscape: function() {
		return this.getKeyCode("escape");
	}
	,getKeyCode: function(keyId) {
		switch(keyId) {
		case "down":
			return 40;
		case "enter":
			return 13;
		case "escape":
			return 27;
		case "left":
			return 37;
		case "right":
			return 39;
		case "space":
			return 32;
		case "tab":
			return 9;
		case "up":
			return 38;
		default:
			return HxOverrides.cca(keyId,0);
		}
	}
	,__class__: haxe_ui_backend_PlatformBase
	,__properties__: {get_KeyEscape:"get_KeyEscape",get_KeyEnter:"get_KeyEnter",get_KeySpace:"get_KeySpace",get_KeyRight:"get_KeyRight",get_KeyLeft:"get_KeyLeft",get_KeyDown:"get_KeyDown",get_KeyUp:"get_KeyUp",get_KeyTab:"get_KeyTab",get_isMobile:"get_isMobile",get_isMac:"get_isMac",get_isLinux:"get_isLinux",get_isWindows:"get_isWindows"}
};
var haxe_ui_backend_PlatformImpl = function() {
	haxe_ui_backend_PlatformBase.call(this);
};
$hxClasses["haxe.ui.backend.PlatformImpl"] = haxe_ui_backend_PlatformImpl;
haxe_ui_backend_PlatformImpl.__name__ = "haxe.ui.backend.PlatformImpl";
haxe_ui_backend_PlatformImpl.calcScrollSize = function() {
	if(haxe_ui_backend_PlatformImpl._vscrollWidth >= 0 && haxe_ui_backend_PlatformImpl._hscrollHeight >= 0) {
		return;
	}
	var div = window.document.createElement("div");
	div.style.position = "absolute";
	div.style.top = "-99999px";
	div.style.left = "-99999px";
	div.style.height = "100px";
	div.style.width = "100px";
	div.style.overflow = "scroll";
	window.document.body.appendChild(div);
	haxe_ui_backend_PlatformImpl._vscrollWidth = div.offsetWidth - div.clientWidth;
	haxe_ui_backend_PlatformImpl._hscrollHeight = div.offsetHeight - div.clientHeight;
	haxe_ui_backend_html5_HtmlUtils.removeElement(div);
};
haxe_ui_backend_PlatformImpl.__super__ = haxe_ui_backend_PlatformBase;
haxe_ui_backend_PlatformImpl.prototype = $extend(haxe_ui_backend_PlatformBase.prototype,{
	getMetric: function(id) {
		switch(id) {
		case "patform.metrics.hscroll.height":
			haxe_ui_backend_PlatformImpl.calcScrollSize();
			return haxe_ui_backend_PlatformImpl._hscrollHeight;
		case "patform.metrics.vscroll.width":
			haxe_ui_backend_PlatformImpl.calcScrollSize();
			return haxe_ui_backend_PlatformImpl._vscrollWidth;
		}
		return haxe_ui_backend_PlatformBase.prototype.getMetric.call(this,id);
	}
	,getSystemLocale: function() {
		return $global.navigator.language;
	}
	,perf: function() {
		return window.performance.now();
	}
	,__class__: haxe_ui_backend_PlatformImpl
});
var haxe_ui_backend_SaveFileDialogBase = function(options,callback) {
	this._options = null;
	this.fileInfo = null;
	this.onDialogClosed = null;
	this.callback = null;
	this.fullPath = null;
	this.saveResult = false;
	this.set_options(options);
	this.callback = callback;
};
$hxClasses["haxe.ui.backend.SaveFileDialogBase"] = haxe_ui_backend_SaveFileDialogBase;
haxe_ui_backend_SaveFileDialogBase.__name__ = "haxe.ui.backend.SaveFileDialogBase";
haxe_ui_backend_SaveFileDialogBase.prototype = {
	saveResult: null
	,fullPath: null
	,callback: null
	,onDialogClosed: null
	,fileInfo: null
	,_options: null
	,get_options: function() {
		return this._options;
	}
	,set_options: function(value) {
		this._options = value;
		this.validateOptions();
		return value;
	}
	,validateOptions: function() {
		if(this._options == null) {
			this.set_options({ });
		}
	}
	,show: function() {
		haxe_ui_containers_dialogs_Dialogs.messageBox("SaveFileDialog has no implementation on this backend","Save File","error");
	}
	,dialogConfirmed: function() {
		this.saveResult = true;
		if(this.callback != null) {
			this.callback("{{ok}}",this.saveResult,this.fullPath);
		}
		if(this.onDialogClosed != null) {
			var event = new haxe_ui_containers_dialogs_DialogEvent("dialogClosed",false,this.saveResult);
			event.button = "{{ok}}";
			this.onDialogClosed(event);
		}
	}
	,dialogCancelled: function() {
		this.saveResult = false;
		if(this.callback != null) {
			this.callback("{{cancel}}",this.saveResult,null);
		}
		if(this.onDialogClosed != null) {
			var event = new haxe_ui_containers_dialogs_DialogEvent("dialogClosed",false,this.saveResult);
			event.button = "{{cancel}}";
			this.onDialogClosed(event);
		}
	}
	,__class__: haxe_ui_backend_SaveFileDialogBase
	,__properties__: {set_options:"set_options",get_options:"get_options"}
};
var haxe_ui_backend_SaveFileDialogImpl = function(options,callback) {
	this._fileSaver = new haxe_ui_util_html5_FileSaver();
	haxe_ui_backend_SaveFileDialogBase.call(this,options,callback);
};
$hxClasses["haxe.ui.backend.SaveFileDialogImpl"] = haxe_ui_backend_SaveFileDialogImpl;
haxe_ui_backend_SaveFileDialogImpl.__name__ = "haxe.ui.backend.SaveFileDialogImpl";
haxe_ui_backend_SaveFileDialogImpl.__super__ = haxe_ui_backend_SaveFileDialogBase;
haxe_ui_backend_SaveFileDialogImpl.prototype = $extend(haxe_ui_backend_SaveFileDialogBase.prototype,{
	_fileSaver: null
	,show: function() {
		if(this.fileInfo == null || this.fileInfo.text == null && this.fileInfo.bytes == null) {
			throw haxe_Exception.thrown("Nothing to write");
		}
		if(this.fileInfo.text != null) {
			this._fileSaver.saveText(this.fileInfo.name,this.fileInfo.text,$bind(this,this.onSaveResult));
		} else if(this.fileInfo.bytes != null) {
			this._fileSaver.saveBinary(this.fileInfo.name,this.fileInfo.bytes,$bind(this,this.onSaveResult));
		}
	}
	,onSaveResult: function(r) {
		if(r == true) {
			this.dialogConfirmed();
		} else {
			this.dialogCancelled();
		}
	}
	,__class__: haxe_ui_backend_SaveFileDialogImpl
});
var haxe_ui_backend_ScreenBase = function() {
	this.rootComponents = [];
};
$hxClasses["haxe.ui.backend.ScreenBase"] = haxe_ui_backend_ScreenBase;
haxe_ui_backend_ScreenBase.__name__ = "haxe.ui.backend.ScreenBase";
haxe_ui_backend_ScreenBase.prototype = {
	rootComponents: null
	,_options: null
	,get_options: function() {
		return this._options;
	}
	,set_options: function(value) {
		this._options = value;
		return value;
	}
	,dpi: null
	,get_dpi: function() {
		return 72;
	}
	,get_title: function() {
		return null;
	}
	,set_title: function(s) {
		return s;
	}
	,width: null
	,get_width: function() {
		return 0;
	}
	,height: null
	,get_height: function() {
		return 0;
	}
	,actualWidth: null
	,get_actualWidth: function() {
		return this.get_width() * haxe_ui_Toolkit.get_scaleX();
	}
	,actualHeight: null
	,get_actualHeight: function() {
		return this.get_height() * haxe_ui_Toolkit.get_scaleY();
	}
	,isRetina: null
	,get_isRetina: function() {
		return false;
	}
	,topComponent: null
	,get_topComponent: function() {
		if(this.rootComponents.length == 0) {
			return null;
		}
		var n = this.rootComponents.length - 1;
		var c = null;
		while(n >= 0) {
			c = this.rootComponents[n];
			if(c.get_style() == null) {
				break;
			}
			if(c.get_style().pointerEvents != "none") {
				break;
			}
			--n;
		}
		return c;
	}
	,addComponent: function(component) {
		return component;
	}
	,removeComponent: function(component,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return component;
	}
	,handleSetComponentIndex: function(child,index) {
	}
	,resizeComponent: function(c) {
		var cx = null;
		var cy = null;
		if(c.get_percentWidth() > 0) {
			cx = this.get_width() * c.get_percentWidth() / 100;
		}
		if(c.get_percentHeight() > 0) {
			cy = this.get_height() * c.get_percentHeight() / 100;
		}
		c.resizeComponent(cx,cy);
	}
	,refreshStyleRootComponents: function() {
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var component = _g1[_g];
			++_g;
			this._refreshStyleComponent(component);
		}
	}
	,resizeRootComponents: function() {
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var component = _g1[_g];
			++_g;
			this.resizeComponent(component);
		}
	}
	,_refreshStyleComponent: function(component) {
		var _g = 0;
		var _g1 = component._children == null ? [] : component._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.invalidateComponent("style",false);
			child.invalidateComponent("display",false);
			this._refreshStyleComponent(child);
		}
	}
	,_onRootComponentResize: function(e) {
		this._refreshStyleComponent(e.target);
	}
	,invalidateAll: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			this.invalidateChildren(c,flag);
		}
	}
	,invalidateChildren: function(c,flag) {
		if(flag == null) {
			flag = "all";
		}
		var _g = 0;
		var _g1 = c._children == null ? [] : c._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			this.invalidateChildren(child,flag);
		}
		c.invalidateComponent(flag);
	}
	,supportsEvent: function(type) {
		return false;
	}
	,mapEvent: function(type,listener) {
	}
	,unmapEvent: function(type,listener) {
	}
	,__class__: haxe_ui_backend_ScreenBase
	,__properties__: {get_topComponent:"get_topComponent",get_isRetina:"get_isRetina",get_actualHeight:"get_actualHeight",get_actualWidth:"get_actualWidth",get_height:"get_height",get_width:"get_width",set_title:"set_title",get_title:"get_title",get_dpi:"get_dpi",set_options:"set_options",get_options:"get_options"}
};
var haxe_ui_backend_ScreenImpl = function() {
	this._contextMenuDisabledCount = 0;
	this._hasListener = false;
	this._containerParent = null;
	this._pageRoot = null;
	this._container = null;
	this._percentContainerHeightAdded = false;
	this._percentContainerWidthAdded = false;
	this._height = null;
	this._width = null;
	haxe_ui_backend_ScreenBase.call(this);
	this._mapping = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.backend.ScreenImpl"] = haxe_ui_backend_ScreenImpl;
haxe_ui_backend_ScreenImpl.__name__ = "haxe.ui.backend.ScreenImpl";
haxe_ui_backend_ScreenImpl.__super__ = haxe_ui_backend_ScreenBase;
haxe_ui_backend_ScreenImpl.prototype = $extend(haxe_ui_backend_ScreenBase.prototype,{
	_mapping: null
	,set_options: function(value) {
		haxe_ui_backend_ScreenBase.prototype.set_options.call(this,value);
		var cx = haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.container.width",null);
		var cy = haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.container.height",null);
		var c = this.get_container();
		if(cx != null) {
			c.style.width = cx;
		}
		if(cy != null) {
			c.style.height = cy;
		}
		return value;
	}
	,get_dpi: function() {
		return haxe_ui_backend_html5_HtmlUtils.get_dpi();
	}
	,get_title: function() {
		return window.document.title;
	}
	,set_title: function(s) {
		window.document.title = s;
		return s;
	}
	,_width: null
	,get_width: function() {
		if(this._width != null && this._width > 0) {
			return this._width;
		}
		var cx = this.get_container().offsetWidth;
		if(cx <= 0) {
			var _g = 0;
			var _g1 = this.rootComponents;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				if(c.get_width() > cx) {
					cx = c.get_width();
				}
			}
		}
		this._width = cx / haxe_ui_Toolkit.get_scaleX();
		return this._width;
	}
	,_height: null
	,get_height: function() {
		if(this._height != null && this._height > 0) {
			return this._height;
		}
		var cy = this.get_container().offsetHeight;
		if(cy <= 0) {
			var _g = 0;
			var _g1 = this.rootComponents;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				if(c.get_height() > cy) {
					cy = c.get_height();
				}
			}
		}
		this._height = cy / haxe_ui_Toolkit.get_scaleY();
		return this._height;
	}
	,get_isRetina: function() {
		return haxe_ui_backend_html5_HtmlUtils.isRetinaDisplay();
	}
	,addComponent: function(component) {
		this.get_container().appendChild(component.element);
		component.ready();
		if(haxe_ui_Toolkit.get_scaleX() != 1 || haxe_ui_Toolkit.get_scaleY() != 1) {
			var transformString = "";
			if(haxe_ui_Toolkit.get_scaleX() != 1) {
				transformString += "scaleX(" + haxe_ui_Toolkit.get_scaleX() + ") ";
			}
			if(haxe_ui_Toolkit.get_scaleY() != 1) {
				transformString += "scaleY(" + haxe_ui_Toolkit.get_scaleY() + ") ";
			}
			component.element.style.transform = transformString;
			component.element.style.transformOrigin = "top left";
		}
		if(component.get_percentWidth() != null) {
			this.addPercentContainerWidth();
		}
		if(component.get_percentHeight() != null) {
			this.addPercentContainerHeight();
		}
		this.addResizeListener();
		this.resizeComponent(component);
		return component;
	}
	,_percentContainerWidthAdded: null
	,addPercentContainerWidth: function() {
		if(this._percentContainerWidthAdded == true) {
			return;
		}
		this._percentContainerWidthAdded = true;
		var sheet = haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet();
		var w = this.get_containerParent().getAttribute("width");
		if(w == null) {
			w = "";
		}
		w = StringTools.trim(w);
		if(!StringTools.endsWith(w,"%") && !StringTools.endsWith(w,"px")) {
			sheet.insertRule("#haxeui-container-parent {\r\n                margin: 0;\r\n                width: 100%;\r\n            }",sheet.cssRules.length);
		}
		sheet.insertRule("#haxeui-container {\r\n            margin: 0;\r\n            width: 100%;\r\n        }",sheet.cssRules.length);
	}
	,_percentContainerHeightAdded: null
	,addPercentContainerHeight: function() {
		if(this._percentContainerHeightAdded == true) {
			return;
		}
		this._percentContainerHeightAdded = true;
		var sheet = haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet();
		var h = this.get_containerParent().getAttribute("height");
		if(h == null) {
			h = "";
		}
		h = StringTools.trim(h);
		if(!StringTools.endsWith(h,"%") && !StringTools.endsWith(h,"px")) {
			sheet.insertRule("#haxeui-container-parent {\r\n                margin: 0;\r\n                height: 100%;\r\n            }",sheet.cssRules.length);
		}
		sheet.insertRule("#haxeui-container {\r\n            margin: 0;\r\n            height: 100%;\r\n        }",sheet.cssRules.length);
	}
	,removeComponent: function(component,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		HxOverrides.remove(this.rootComponents,component);
		if(this.get_container().contains(component.element) == true) {
			this.get_container().removeChild(component.element);
		}
		return component;
	}
	,handleSetComponentIndex: function(child,index) {
		if(index == (js_Boot.__cast(this , haxe_ui_core_Screen)).rootComponents.length - 1) {
			this.get_container().appendChild(child.element);
		} else {
			haxe_ui_backend_html5_HtmlUtils.insertBefore((js_Boot.__cast(this , haxe_ui_core_Screen)).rootComponents[index + 1].element,child.element);
		}
	}
	,_container: null
	,container: null
	,get_container: function() {
		if(this._container != null) {
			return this._container;
		}
		var c = null;
		if(this.get_options() == null || this.get_options().container == null) {
			c = window.document.body;
		} else {
			c = this.get_options().container;
		}
		if(c.style.overflow == null || c.style.overflow == "") {
			c.style.overflow = "hidden";
		}
		if(c.id != "haxeui-container") {
			c.id = "haxeui-container";
			if(this.get_options() != null && this.get_options().container != null) {
				c.style.position = "relative";
			}
			if(c.parentElement != null && c.parentElement.id != "haxeui-container-parent") {
				c.parentElement.id = "haxeui-container-parent";
			}
		}
		this._container = c;
		return c;
	}
	,_pageRoot: null
	,pageRoot: function(from) {
		if(this._pageRoot != null) {
			return this._pageRoot;
		}
		var r = null;
		var el = from;
		while(el != null) {
			if(el.classList.contains("haxeui-component") == false) {
				r = el;
				this._pageRoot = el;
				break;
			}
			el = el.parentElement;
		}
		return r;
	}
	,_containerParent: null
	,containerParent: null
	,get_containerParent: function() {
		if(this._containerParent != null) {
			return this._containerParent;
		}
		var c = this.get_container();
		if(c != null) {
			this._containerParent = c.parentElement;
		}
		return this._containerParent;
	}
	,_hasListener: null
	,addResizeListener: function() {
		var _gthis = this;
		if(this._hasListener == true) {
			return;
		}
		this._hasListener = true;
		window.addEventListener("load",$bind(this,this.onFullyLoaded));
		if(this.get_container() == window.document.body) {
			window.addEventListener("resize",function(e) {
				_gthis.containerResized();
			});
		} else {
			var observer = this.resizeObserver($bind(this,this.onElementResized));
			if(observer != null) {
				var tmp = this.get_container();
				observer.observe(tmp);
			}
		}
	}
	,onElementResized: function(entries) {
		this.containerResized();
	}
	,resizeObserver: function(cb) {
		var ro = null;
		try {
			ro = ResizeObserver;
		} catch( _g ) {
			return null;
		}
		if(ro == null) {
			return null;
		}
		return new ResizeObserver(cb);
	}
	,onFullyLoaded: function() {
		window.removeEventListener("load",$bind(this,this.onFullyLoaded));
		this.containerResized();
	}
	,containerResized: function() {
		this._width = null;
		this._height = null;
		this.resizeRootComponents();
		if(Object.prototype.hasOwnProperty.call(this._mapping.h,"resize")) {
			var event = new haxe_ui_events_UIEvent("resize");
			var fn = this._mapping.h["resize"];
			if(fn != null) {
				fn(event);
			}
		}
	}
	,supportsEvent: function(type) {
		if(type != "resize") {
			return haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type] != null;
		} else {
			return true;
		}
	}
	,mapEvent: function(type,listener) {
		var container = window.document.body;
		switch(type) {
		case "keydown":case "keyup":
			if(Object.prototype.hasOwnProperty.call(this._mapping.h,type) == false) {
				this._mapping.h[type] = listener;
				container.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onKeyEvent));
			}
			break;
		case "resize":
			if(Object.prototype.hasOwnProperty.call(this._mapping.h,type) == false) {
				this._mapping.h[type] = listener;
			}
			break;
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":case "rightclick":case "rightmousedown":case "rightmouseup":
			if(Object.prototype.hasOwnProperty.call(this._mapping.h,type) == false) {
				if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
					var passive = false;
					if(passive == null) {
						passive = true;
					}
					container.addEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],$bind(this,this.__onMouseEvent),{ passive : passive});
				}
				this._mapping.h[type] = listener;
				var passive = false;
				if(passive == null) {
					passive = true;
				}
				container.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onMouseEvent),{ passive : passive});
			}
			if(type == "rightmousedown" || type == "rightmouseup") {
				this.disableContextMenu(true);
			}
			break;
		}
	}
	,unmapEvent: function(type,listener) {
		var container = window.document.body;
		switch(type) {
		case "keydown":case "keyup":
			var _this = this._mapping;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			container.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onKeyEvent));
			break;
		case "resize":
			var _this = this._mapping;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			break;
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":case "rightclick":case "rightmousedown":case "rightmouseup":
			var _this = this._mapping;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			container.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onMouseEvent));
			if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
				container.removeEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],$bind(this,this.__onMouseEvent));
			}
			if(type == "rightmousedown" || type == "rightmouseup") {
				this.disableContextMenu(false);
			}
			break;
		}
	}
	,__onMouseEvent: function(event) {
		var button = -1;
		var touchEvent = false;
		try {
			touchEvent = ((event) instanceof TouchEvent);
		} catch( _g ) {
		}
		if(touchEvent == false && ((event) instanceof MouseEvent)) {
			var me = js_Boot.__cast(event , MouseEvent);
			button = me.which;
		}
		var r = true;
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type == "rightclick") {
			event.stopPropagation();
			event.preventDefault();
			r = false;
		}
		if(event.type == "mousedown") {
			var which = Reflect.field(event,"which");
			switch(which) {
			case 1:
				type = "mousedown";
				break;
			case 2:
				type = "mousedown";
				break;
			case 3:
				type = "rightmousedown";
				break;
			}
		} else if(event.type == "mouseup") {
			var which = Reflect.field(event,"which");
			switch(which) {
			case 1:
				type = "mouseup";
				break;
			case 2:
				type = "mouseup";
				break;
			case 3:
				type = "rightmouseup";
				break;
			}
		}
		if(type != null) {
			var fn = this._mapping.h[type];
			if(fn != null) {
				var mouseEvent = new haxe_ui_events_MouseEvent(type);
				mouseEvent._originalEvent = event;
				if(touchEvent == true) {
					var te = js_Boot.__cast(event , TouchEvent);
					mouseEvent.screenX = (te.changedTouches[0].pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = (te.changedTouches[0].pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.touchEvent = true;
				} else if(((event) instanceof MouseEvent)) {
					var me = js_Boot.__cast(event , MouseEvent);
					mouseEvent.buttonDown = me.buttons != 0;
					mouseEvent.screenX = (me.pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = (me.pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.ctrlKey = me.ctrlKey;
					mouseEvent.shiftKey = me.shiftKey;
				}
				fn(mouseEvent);
			}
		}
		return r;
	}
	,__onKeyEvent: function(event) {
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type != null) {
			if(event.keyCode == 9 || event.which == 9) {
				event.preventDefault();
				event.stopImmediatePropagation();
				event.stopPropagation();
			}
			var fn = this._mapping.h[type];
			if(fn != null) {
				var keyboardEvent = new haxe_ui_events_KeyboardEvent(type);
				keyboardEvent._originalEvent = event;
				keyboardEvent.keyCode = event.keyCode;
				keyboardEvent.ctrlKey = event.ctrlKey;
				keyboardEvent.shiftKey = event.shiftKey;
				fn(keyboardEvent);
			}
		}
	}
	,_contextMenuDisabledCount: null
	,disableContextMenu: function(disable) {
		var container = window.document.body;
		if(disable == true) {
			this._contextMenuDisabledCount++;
		} else {
			this._contextMenuDisabledCount--;
			if(this._contextMenuDisabledCount < 0) {
				this._contextMenuDisabledCount = 0;
			}
		}
		if(this._contextMenuDisabledCount == 1) {
			container.addEventListener("contextmenu",$bind(this,this.__preventContextMenu));
		} else if(this._contextMenuDisabledCount == 0) {
			container.removeEventListener("contextmenu",$bind(this,this.__preventContextMenu));
		}
	}
	,__preventContextMenu: function(event) {
		event.preventDefault();
		return false;
	}
	,__class__: haxe_ui_backend_ScreenImpl
	,__properties__: $extend(haxe_ui_backend_ScreenBase.prototype.__properties__,{get_containerParent:"get_containerParent",get_container:"get_container"})
});
var haxe_ui_backend_TextBase = function() {
	this._textHeight = 0;
	this._textWidth = 0;
	this._height = 0;
	this._width = 0;
	this._top = 0;
	this._left = 0;
	this._htmlText = null;
	this._inputData = new haxe_ui_core_TextInputData();
	this._displayData = new haxe_ui_core_TextDisplayData();
};
$hxClasses["haxe.ui.backend.TextBase"] = haxe_ui_backend_TextBase;
haxe_ui_backend_TextBase.__name__ = "haxe.ui.backend.TextBase";
haxe_ui_backend_TextBase.prototype = {
	parentComponent: null
	,_displayData: null
	,_inputData: null
	,_text: null
	,_htmlText: null
	,_left: null
	,_top: null
	,_width: null
	,_height: null
	,_textWidth: null
	,_textHeight: null
	,_textStyle: null
	,_fontInfo: null
	,focus: function() {
	}
	,blur: function() {
	}
	,dispose: function() {
		if(this.parentComponent != null) {
			this.parentComponent = null;
		}
	}
	,_dataSource: null
	,get_dataSource: function() {
		return this._dataSource;
	}
	,set_dataSource: function(value) {
		this._dataSource = value;
		return value;
	}
	,supportsHtml: null
	,get_supportsHtml: function() {
		return false;
	}
	,get_caretIndex: function() {
		return 0;
	}
	,set_caretIndex: function(value) {
		return value;
	}
	,get_selectionStartIndex: function() {
		return 0;
	}
	,set_selectionStartIndex: function(value) {
		return value;
	}
	,get_selectionEndIndex: function() {
		return 0;
	}
	,set_selectionEndIndex: function(value) {
		return value;
	}
	,validateData: function() {
	}
	,validateStyle: function() {
		return false;
	}
	,validatePosition: function() {
	}
	,validateDisplay: function() {
	}
	,measureText: function() {
	}
	,measureTextWidth: function() {
		var textDisplay = new haxe_ui_core_TextDisplay();
		textDisplay._textStyle = this._textStyle;
		textDisplay._fontInfo = this._fontInfo;
		textDisplay.validateStyle();
		textDisplay._text = this._text;
		textDisplay.validateData();
		textDisplay.measureText();
		return textDisplay._textWidth;
	}
	,__class__: haxe_ui_backend_TextBase
	,__properties__: {set_selectionEndIndex:"set_selectionEndIndex",get_selectionEndIndex:"get_selectionEndIndex",set_selectionStartIndex:"set_selectionStartIndex",get_selectionStartIndex:"get_selectionStartIndex",set_caretIndex:"set_caretIndex",get_caretIndex:"get_caretIndex",get_supportsHtml:"get_supportsHtml",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource"}
};
var haxe_ui_backend_TextDisplayImpl = function() {
	this._fixedHeight = false;
	this._fixedWidth = false;
	this._isHTML = false;
	haxe_ui_backend_TextBase.call(this);
	this._displayData.multiline = false;
	this.element = this.createElement();
};
$hxClasses["haxe.ui.backend.TextDisplayImpl"] = haxe_ui_backend_TextDisplayImpl;
haxe_ui_backend_TextDisplayImpl.__name__ = "haxe.ui.backend.TextDisplayImpl";
haxe_ui_backend_TextDisplayImpl.__super__ = haxe_ui_backend_TextBase;
haxe_ui_backend_TextDisplayImpl.prototype = $extend(haxe_ui_backend_TextBase.prototype,{
	element: null
	,_html: null
	,_isHTML: null
	,validateData: function() {
		var html = null;
		if(this._text != null) {
			html = this.normalizeText(this._text);
			this._isHTML = false;
		} else if(this._htmlText != null) {
			html = this.normalizeHtmlText(this._htmlText,false);
			this._isHTML = true;
		}
		if(html != null && this._html != html) {
			if(this._isHTML == false) {
				this.element.textContent = html;
			} else {
				this.element.innerHTML = html;
			}
			this._html = html;
			if(this.get_autoWidth() == true) {
				this._fixedWidth = false;
			}
			if(this.get_autoHeight() == true) {
				this._fixedHeight = false;
			}
		}
	}
	,_rawFontName: null
	,validateStyle: function() {
		var measureTextRequired = false;
		if(this._displayData.wordWrap == true && this.element.style.whiteSpace != null) {
			this.element.style.whiteSpace = "pre-wrap";
			this.element.style.wordBreak = "break-word";
			measureTextRequired = true;
		} else if(this._displayData.wordWrap == false && this.element.style.whiteSpace != "pre") {
			this.element.style.whiteSpace = "pre";
			measureTextRequired = true;
		}
		if(this._textStyle != null) {
			if(this.element.style.textAlign != this._textStyle.textAlign) {
				this.element.style.textAlign = this._textStyle.textAlign;
			}
			var fontSizeValue = "" + this._textStyle.fontSize + "px";
			if(this.element.style.fontSize != fontSizeValue) {
				this.element.style.fontSize = fontSizeValue;
				measureTextRequired = true;
			}
			if(this._textStyle.fontBold == true && this.element.style.fontWeight != "bold") {
				this.element.style.fontWeight = "bold";
				measureTextRequired = true;
			} else if((this._textStyle.fontBold == null || this._textStyle.fontBold == false) && this.element.style.fontWeight == "bold") {
				this.element.style.removeProperty("font-weight");
				measureTextRequired = true;
			}
			if(this._textStyle.fontItalic == true && this.element.style.fontStyle != "italic") {
				this.element.style.fontStyle = "italic";
				measureTextRequired = true;
			} else if((this._textStyle.fontItalic == null || this._textStyle.fontItalic == false) && this.element.style.fontStyle == "italic") {
				this.element.style.removeProperty("font-style");
				measureTextRequired = true;
			}
			if(this._textStyle.fontUnderline == true && this.element.style.textDecoration != "underline") {
				this.element.style.textDecoration = "underline";
				measureTextRequired = true;
			} else if((this._textStyle.fontUnderline == null || this._textStyle.fontUnderline == false) && this.element.style.textDecoration == "underline") {
				this.element.style.removeProperty("text-decoration");
				measureTextRequired = true;
			}
			if(this._textStyle.fontStrikeThrough == true && this.element.style.textDecoration != "line-through") {
				this.element.style.textDecoration = "line-through";
				measureTextRequired = true;
			} else if((this._textStyle.fontStrikeThrough == null || this._textStyle.fontStrikeThrough == false) && this.element.style.textDecoration == "line-through") {
				this.element.style.removeProperty("text-decoration");
				measureTextRequired = true;
			}
			var colorValue = haxe_ui_backend_html5_HtmlUtils.color(this._textStyle.color);
			if(this.element.style.color != colorValue) {
				this.element.style.color = colorValue;
			}
			if(this._fontInfo != null && this._fontInfo.data != this._rawFontName) {
				this.element.style.fontFamily = this._fontInfo.data;
				this._rawFontName = this._fontInfo.data;
				measureTextRequired = true;
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
		}
		if(measureTextRequired == true) {
			if(this.get_autoWidth() == true) {
				this._fixedWidth = false;
			}
			if(this.get_autoHeight() == true) {
				this._fixedHeight = false;
			}
		}
		return measureTextRequired;
	}
	,validatePosition: function() {
		var style = this.element.style;
		style.left = "" + this._left + "px";
		style.top = "" + this._top + "px";
	}
	,_fixedWidth: null
	,_fixedHeight: null
	,validateDisplay: function() {
		var style = this.element.style;
		var allowFixed = true;
		if(this.get_autoWidth() == false && style.width != "" + this._width + "px") {
			allowFixed = false;
		}
		if(this._width > 0 && this.get_autoWidth() == false) {
			this._fixedWidth = true;
			style.width = "" + this._width + "px";
		}
		if(this._height > 0 && this.get_autoHeight() == false) {
			this._fixedHeight = true;
			style.height = "" + this._height + "px";
		}
		if(allowFixed == false) {
			this._fixedHeight = false;
		}
	}
	,measureText: function() {
		if(this._fixedWidth == true && this._fixedHeight == true) {
			return;
		}
		var t = null;
		var isHtml = false;
		if(this._text != null) {
			t = this.normalizeText(this._text);
		} else if(this._htmlText != null) {
			t = this.normalizeHtmlText(this._htmlText,false);
			isHtml = true;
		}
		if(t == null || t.length == 0) {
			t = "|";
		}
		var w = null;
		if(this.get_autoWidth() == false) {
			w = this._width > 0 ? this._width : null;
		}
		var size = haxe_ui_backend_html5_text_TextMeasurer.get_instance().measureText({ text : t, width : w, fontFamily : this.element.style.fontFamily, fontSize : this.element.style.fontSize, whiteSpace : this.element.style.whiteSpace, wordBreak : this.element.style.wordBreak, isHtml : isHtml});
		if(this._fixedWidth == false) {
			this._textWidth = size.width + 2;
		}
		if(this._fixedHeight == false) {
			this._textHeight = size.height + 2;
		}
	}
	,createElement: function() {
		var el = window.document.createElement("div");
		el.style.marginTop = "1px";
		el.style.marginLeft = "1px";
		el.style.position = "absolute";
		el.style.cursor = "inherit";
		return el;
	}
	,normalizeText: function(text) {
		text = StringTools.replace(text,"\\n","\n");
		return text;
	}
	,normalizeHtmlText: function(text,$escape) {
		if($escape == null) {
			$escape = true;
		}
		var html = text;
		if($escape == true) {
			html = haxe_ui_backend_html5_HtmlUtils.escape(text);
		}
		html = StringTools.replace(html,"\\n","\n");
		html = StringTools.replace(html,"\r\n","<br/>");
		html = StringTools.replace(html,"\r","<br/>");
		html = StringTools.replace(html,"\n","<br/>");
		return html;
	}
	,autoWidth: null
	,get_autoWidth: function() {
		if(((this.parentComponent) instanceof haxe_ui_components_Label)) {
			return (js_Boot.__cast(this.parentComponent , haxe_ui_components_Label)).get_autoWidth();
		}
		return false;
	}
	,autoHeight: null
	,get_autoHeight: function() {
		if(((this.parentComponent) instanceof haxe_ui_components_Label)) {
			return (js_Boot.__cast(this.parentComponent , haxe_ui_components_Label)).get_autoHeight();
		}
		return false;
	}
	,get_supportsHtml: function() {
		return true;
	}
	,__class__: haxe_ui_backend_TextDisplayImpl
	,__properties__: $extend(haxe_ui_backend_TextBase.prototype.__properties__,{get_autoHeight:"get_autoHeight",get_autoWidth:"get_autoWidth"})
});
var haxe_ui_backend_TextInputImpl = function() {
	this._selectedEndIndex = -1;
	this._selectionStartIndex = 0;
	haxe_ui_backend_TextDisplayImpl.call(this);
};
$hxClasses["haxe.ui.backend.TextInputImpl"] = haxe_ui_backend_TextInputImpl;
haxe_ui_backend_TextInputImpl.__name__ = "haxe.ui.backend.TextInputImpl";
haxe_ui_backend_TextInputImpl.__super__ = haxe_ui_backend_TextDisplayImpl;
haxe_ui_backend_TextInputImpl.prototype = $extend(haxe_ui_backend_TextDisplayImpl.prototype,{
	focus: function() {
		this.element.focus({preventScroll: true});
	}
	,blur: function() {
		this.element.blur();
	}
	,onChangeEvent: function(e) {
		var newText = null;
		if(((this.element) instanceof HTMLTextAreaElement)) {
			newText = (js_Boot.__cast(this.element , HTMLTextAreaElement)).value;
		} else {
			newText = (js_Boot.__cast(this.element , HTMLInputElement)).value;
		}
		if(newText != this._text) {
			this._text = newText;
			this.measureText();
			if(this._inputData.onChangedCallback != null) {
				this._inputData.onChangedCallback();
			}
		}
	}
	,onScroll: function(e) {
		this._inputData.hscrollPos = this.element.scrollLeft;
		this._inputData.vscrollPos = this.element.scrollTop;
		this._inputData.hscrollMax = this._textWidth - this._width;
		this._inputData.hscrollPageSize = this._width * this._inputData.hscrollMax / this._textWidth;
		this._inputData.vscrollMax = this._textHeight - this._height;
		this._inputData.vscrollPageSize = this._height * this._inputData.vscrollMax / this._textHeight;
		if(this._inputData.onScrollCallback != null) {
			this._inputData.onScrollCallback();
		}
	}
	,validateData: function() {
		if(this._text != null) {
			var html = this.normalizeText(this._text);
			if(((this.element) instanceof HTMLInputElement)) {
				(js_Boot.__cast(this.element , HTMLInputElement)).value = html;
			} else if(((this.element) instanceof HTMLTextAreaElement)) {
				(js_Boot.__cast(this.element , HTMLTextAreaElement)).value = html;
			}
		}
		var hscrollValue = this._inputData.hscrollPos | 0;
		if(this.element.scrollLeft != hscrollValue) {
			this.element.scrollLeft = hscrollValue;
		}
		var vscrollValue = this._inputData.vscrollPos | 0;
		if(this.element.scrollTop != vscrollValue) {
			this.element.scrollTop = vscrollValue;
		}
	}
	,validateStyle: function() {
		var measureTextRequired = false;
		if(this._displayData.multiline == false && ((this.element) instanceof HTMLInputElement) == false || this._displayData.multiline == true && ((this.element) instanceof HTMLTextAreaElement) == false) {
			var newElement = this.createElement();
			this.element.parentElement.appendChild(newElement);
			haxe_ui_backend_html5_HtmlUtils.removeElement(this.element);
			this.element.removeEventListener("input",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("propertychange",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("scroll",$bind(this,this.onScroll));
			this.element = newElement;
			this.validateData();
			measureTextRequired = true;
		}
		if(((this.element) instanceof HTMLInputElement)) {
			var inputElement = this.element;
			if(this._inputData.password == true && inputElement.type != "password") {
				inputElement.type = "password";
			} else if(this._inputData.password == false && inputElement.type != "") {
				inputElement.type = "";
			}
		}
		if(this.parentComponent.get_disabled() || this.parentComponent._interactivityDisabled == true) {
			this.element.style.cursor = "not-allowed";
			if(((this.element) instanceof HTMLInputElement)) {
				(js_Boot.__cast(this.element , HTMLInputElement)).disabled = true;
			} else if(((this.element) instanceof HTMLTextAreaElement)) {
				(js_Boot.__cast(this.element , HTMLTextAreaElement)).disabled = true;
			}
		} else {
			this.element.style.cursor = null;
			if(((this.element) instanceof HTMLInputElement)) {
				(js_Boot.__cast(this.element , HTMLInputElement)).disabled = false;
			} else if(((this.element) instanceof HTMLTextAreaElement)) {
				(js_Boot.__cast(this.element , HTMLTextAreaElement)).disabled = false;
			}
		}
		if(!haxe_ui_backend_TextDisplayImpl.prototype.validateStyle.call(this)) {
			return measureTextRequired;
		} else {
			return true;
		}
	}
	,measureText: function() {
		var div = haxe_ui_backend_html5_HtmlUtils.getDivHelper("haxeui-text-input-div-helper");
		this.setTempDivData(div);
		haxe_ui_backend_html5_HtmlUtils.releaseDivHelper(div);
		this._textWidth = div.clientWidth;
		this._textHeight = div.clientHeight + 2;
		this._inputData.hscrollMax = this._textWidth - this._width;
		this._inputData.hscrollPageSize = this._width * this._inputData.hscrollMax / this._textWidth;
		this._inputData.vscrollMax = this._textHeight - this._height;
		this._inputData.vscrollPageSize = this._height * this._inputData.vscrollMax / this._textHeight;
	}
	,_selectionStartIndex: null
	,get_selectionStartIndex: function() {
		return this._selectionStartIndex;
	}
	,set_selectionStartIndex: function(value) {
		this._selectionStartIndex = value;
		this.applySelection();
		return value;
	}
	,_selectedEndIndex: null
	,get_selectionEndIndex: function() {
		return this._selectedEndIndex;
	}
	,set_selectionEndIndex: function(value) {
		this._selectedEndIndex = value;
		this.applySelection();
		return value;
	}
	,applySelection: function() {
		if(this._selectionStartIndex < 0 || this._selectedEndIndex < 0) {
			return;
		}
		if(this._text != null && this._selectedEndIndex > this._text.length) {
			this._selectedEndIndex = this._text.length;
		}
		if(((this.element) instanceof HTMLInputElement)) {
			(js_Boot.__cast(this.element , HTMLInputElement)).setSelectionRange(this._selectionStartIndex,this._selectedEndIndex);
		} else if(((this.element) instanceof HTMLTextAreaElement)) {
			(js_Boot.__cast(this.element , HTMLTextAreaElement)).setSelectionRange(this._selectionStartIndex,this._selectedEndIndex);
		}
	}
	,createElement: function() {
		if(this.element != null) {
			this.element.removeEventListener("input",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("propertychange",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("scroll",$bind(this,this.onScroll));
		}
		var el = null;
		if(this._displayData.multiline == false) {
			el = window.document.createElement("input");
			el.style.border = "none";
			el.style.outline = "none";
			el.style.whiteSpace = "pre";
			el.style.overflow = "hidden";
			el.style.cursor = "initial";
			el.style.position = "absolute";
			el.style.backgroundColor = "inherit";
			el.style.padding = "0px";
			el.spellcheck = false;
		} else {
			el = window.document.createElement("textarea");
			el.style.border = "none";
			el.style.resize = "none";
			el.style.outline = "none";
			el.style.lineHeight = "1.4";
			el.style.padding = "0px";
			el.style.margin = "0px";
			el.style.bottom = "0px";
			el.style.right = "0px";
			el.style.overflow = "hidden";
			el.style.cursor = "initial";
			el.style.position = "absolute";
			el.style.backgroundColor = "inherit";
			el.style.whiteSpace = "pre-wrap";
			el.id = "textArea";
			el.spellcheck = false;
			el.onkeydown = function(e) {
				if(e.keyCode == 9 || e.which == 9) {
					e.preventDefault();
					e.stopImmediatePropagation();
					e.stopPropagation();
					var ta = js_Boot.__cast(el , HTMLTextAreaElement);
					var s = ta.selectionStart;
					ta.value = ta.value.substring(0,ta.selectionStart) + "\t" + ta.value.substring(ta.selectionEnd);
					ta.selectionEnd = s + 1;
					return false;
				}
				return true;
			};
		}
		el.addEventListener("input",$bind(this,this.onChangeEvent));
		el.addEventListener("propertychange",$bind(this,this.onChangeEvent));
		el.addEventListener("scroll",$bind(this,this.onScroll));
		return el;
	}
	,validatePosition: function() {
		var x = this._left;
		var y = this._top;
		if(this._displayData.multiline == false && this.parentComponent != null && this.parentComponent.get_style() != null) {
			if(this.parentComponent.get_style().borderLeftSize != null) {
				x -= this.parentComponent.get_style().borderLeftSize;
			}
			if(this.parentComponent.get_style().borderTopSize != null) {
				y -= this.parentComponent.get_style().borderTopSize;
			}
		}
		var style = this.element.style;
		style.left = "" + x + "px";
		style.top = "" + y + "px";
	}
	,setTempDivData: function(div) {
		var t = this._text;
		if(t == null || t.length == 0) {
			t = "|";
		}
		div.style.fontFamily = this.element.style.fontFamily;
		div.style.fontSize = this.element.style.fontSize;
		div.style.whiteSpace = this.element.style.whiteSpace;
		div.style.lineHeight = this.element.style.lineHeight;
		if(((this.element) instanceof HTMLTextAreaElement)) {
			div.style.wordBreak = this.element.style.wordBreak;
		}
		if(this.get_autoWidth() == false) {
			div.style.width = this._width > 0 ? "" + ("" + this._width + "px") : "";
		} else {
			div.style.width = "";
		}
		var normalizedText = haxe_ui_backend_TextDisplayImpl.prototype.normalizeText.call(this,t);
		normalizedText = StringTools.replace(normalizedText,"<","&lt;");
		normalizedText = StringTools.replace(normalizedText,">","&gt;");
		if(this._displayData.multiline == true) {
			normalizedText += "<br>";
		}
		div.innerHTML = normalizedText;
	}
	,__class__: haxe_ui_backend_TextInputImpl
});
var haxe_ui_backend_TimerImpl = function(delay,callback) {
	this._timer = new haxe_Timer(delay);
	this._timer.run = function() {
		callback();
	};
};
$hxClasses["haxe.ui.backend.TimerImpl"] = haxe_ui_backend_TimerImpl;
haxe_ui_backend_TimerImpl.__name__ = "haxe.ui.backend.TimerImpl";
haxe_ui_backend_TimerImpl.prototype = {
	_timer: null
	,stop: function() {
		this._timer.stop();
	}
	,__class__: haxe_ui_backend_TimerImpl
};
var haxe_ui_backend_html5_EventMapper = function() { };
$hxClasses["haxe.ui.backend.html5.EventMapper"] = haxe_ui_backend_html5_EventMapper;
haxe_ui_backend_html5_EventMapper.__name__ = "haxe.ui.backend.html5.EventMapper";
var haxe_ui_backend_html5_HtmlUtils = function() { };
$hxClasses["haxe.ui.backend.html5.HtmlUtils"] = haxe_ui_backend_html5_HtmlUtils;
haxe_ui_backend_html5_HtmlUtils.__name__ = "haxe.ui.backend.html5.HtmlUtils";
haxe_ui_backend_html5_HtmlUtils.__properties__ = {get_dpi:"get_dpi"};
haxe_ui_backend_html5_HtmlUtils.px = function(value) {
	return "" + value + "px";
};
haxe_ui_backend_html5_HtmlUtils.color = function(value) {
	if(value == null) {
		return "rgba(0, 0, 0, 0)";
	}
	return "#" + StringTools.hex(value,6);
};
haxe_ui_backend_html5_HtmlUtils.rgba = function(value,alpha) {
	if(alpha == null) {
		alpha = 1;
	}
	var r = value >> 16 & 255;
	var g = value >> 8 & 255;
	var b = value & 255;
	return "rgba(" + r + ", " + g + ", " + b + ", " + alpha + ")";
};
haxe_ui_backend_html5_HtmlUtils.escape = function(s) {
	s = StringTools.replace(s,"\"","&quot;");
	s = StringTools.replace(s,"'","&#39;");
	s = StringTools.replace(s,"<","&lt;");
	s = StringTools.replace(s,">","&gt;");
	return s;
};
haxe_ui_backend_html5_HtmlUtils.namedChild = function(el,child,index) {
	if(index == null) {
		index = 0;
	}
	if(child != null) {
		var list = el.getElementsByTagName(child);
		if(list.length == 0) {
			return null;
		}
		el = list.item(index);
	}
	return el;
};
haxe_ui_backend_html5_HtmlUtils.getDivHelper = function(id) {
	var div = null;
	if(id != null) {
		var helper = haxe_ui_backend_html5_HtmlUtils._divHelpersId.h[id];
		if(helper != null) {
			div = helper.div;
		}
	} else {
		var key = haxe_ui_backend_html5_HtmlUtils._divHelpers.keys();
		while(key.hasNext()) {
			var key1 = key.next();
			var value = haxe_ui_backend_html5_HtmlUtils._divHelpers.h[key1.__id__];
			if(value.claimed == false) {
				div = value.div;
				break;
			}
		}
	}
	if(div == null) {
		div = window.document.createElement("div");
		div.style.position = "absolute";
		div.style.top = "-99999px";
		div.style.left = "-99999px";
		window.document.body.appendChild(div);
		var helper = { div : div, claimed : true};
		if(id != null) {
			haxe_ui_backend_html5_HtmlUtils._divHelpersId.h[id] = helper;
		} else {
			haxe_ui_backend_html5_HtmlUtils._divHelpers.set(div,helper);
		}
	}
	return div;
};
haxe_ui_backend_html5_HtmlUtils.releaseDivHelper = function(div) {
	if(haxe_ui_backend_html5_HtmlUtils._divHelpers.h.__keys__[div.__id__] != null) {
		haxe_ui_backend_html5_HtmlUtils._divHelpers.h[div.__id__].claimed = false;
	}
};
haxe_ui_backend_html5_HtmlUtils.measureText = function(text,addWidth,addHeight,fontSize,fontName) {
	if(fontSize == null) {
		fontSize = -1;
	}
	if(addHeight == null) {
		addHeight = 0;
	}
	if(addWidth == null) {
		addWidth = 0;
	}
	var div = haxe_ui_backend_html5_HtmlUtils.getDivHelper();
	div.style.width = "";
	div.style.height = "";
	if(fontSize > 0) {
		div.style.fontSize = "" + fontSize + "px";
	} else {
		div.style.fontSize = "";
	}
	if(fontName != null) {
		div.style.fontFamily = fontName;
	} else {
		div.style.fontFamily = "";
	}
	div.innerHTML = text;
	return new haxe_ui_geom_Size(div.clientWidth + addWidth,div.clientHeight + addHeight);
};
haxe_ui_backend_html5_HtmlUtils.addEventListener = function(element,type,listener,passive) {
	if(passive == null) {
		passive = true;
	}
	element.addEventListener(type,listener,{ passive : passive});
};
haxe_ui_backend_html5_HtmlUtils.get_dpi = function() {
	if(haxe_ui_backend_html5_HtmlUtils._dpi != 0) {
		return haxe_ui_backend_html5_HtmlUtils._dpi;
	}
	var div = window.document.createElement("div");
	div.style.width = "1in";
	div.style.height = "1in";
	div.style.position = "absolute";
	div.style.top = "-99999px";
	div.style.left = "-99999px";
	window.document.body.appendChild(div);
	var devicePixelRatio = window.devicePixelRatio;
	if(devicePixelRatio == null) {
		devicePixelRatio = 1;
	}
	haxe_ui_backend_html5_HtmlUtils._dpi = div.offsetWidth * devicePixelRatio;
	haxe_ui_backend_html5_HtmlUtils.removeElement(div);
	return haxe_ui_backend_html5_HtmlUtils._dpi;
};
haxe_ui_backend_html5_HtmlUtils.swapElements = function(el1,el2) {
	el2.parentElement.insertBefore(el2,el1);
};
haxe_ui_backend_html5_HtmlUtils.insertBefore = function(el,before) {
	before.parentElement.insertBefore(before,el);
};
haxe_ui_backend_html5_HtmlUtils.removeElement = function(el) {
	if(el != null && el.parentElement != null) {
		el.parentElement.removeChild(el);
	}
};
haxe_ui_backend_html5_HtmlUtils.isRetinaDisplay = function() {
	if(haxe_ui_backend_html5_HtmlUtils._isRetina == null) {
		var query = "(-webkit-min-device-pixel-ratio: 2), (min-device-pixel-ratio: 2), (min-resolution: 192dpi)";
		if(window.matchMedia(query).matches) {
			haxe_ui_backend_html5_HtmlUtils._isRetina = true;
		} else {
			haxe_ui_backend_html5_HtmlUtils._isRetina = false;
		}
	}
	return haxe_ui_backend_html5_HtmlUtils._isRetina;
};
var haxe_ui_backend_html5_StyleHelper = function() { };
$hxClasses["haxe.ui.backend.html5.StyleHelper"] = haxe_ui_backend_html5_StyleHelper;
haxe_ui_backend_html5_StyleHelper.__name__ = "haxe.ui.backend.html5.StyleHelper";
haxe_ui_backend_html5_StyleHelper.apply = function(component,width,height,style) {
	var element = component.element;
	var css = element.style;
	var slice = null;
	if(style.backgroundImageSliceTop != null && style.backgroundImageSliceLeft != null && style.backgroundImageSliceBottom != null && style.backgroundImageSliceRight != null) {
		slice = new haxe_ui_geom_Rectangle(style.backgroundImageSliceLeft,style.backgroundImageSliceTop,style.backgroundImageSliceRight - style.backgroundImageSliceLeft,style.backgroundImageSliceBottom - style.backgroundImageSliceTop);
	}
	if(slice != null) {
		width = Math.round(width);
		height = Math.round(height);
	}
	css.width = "" + width + "px";
	css.height = "" + height + "px";
	var borderStyle = style.borderStyle;
	if(borderStyle == null) {
		borderStyle = "solid";
	}
	if(style.borderLeftSize != null && style.borderLeftSize == style.borderRightSize && style.borderLeftSize == style.borderBottomSize && style.borderLeftSize == style.borderTopSize) {
		if(style.borderLeftSize > 0) {
			css.borderWidth = "" + style.borderLeftSize + "px";
			css.borderStyle = borderStyle;
		} else {
			css.removeProperty("border-width");
			css.removeProperty("border-style");
		}
	} else if(style.borderLeftSize == null && style.borderRightSize == null && style.borderBottomSize == null && style.borderTopSize == null) {
		css.removeProperty("border-width");
		css.removeProperty("border-style");
	} else {
		if(style.borderTopSize != null && style.borderTopSize > 0) {
			css.borderTopWidth = "" + style.borderTopSize + "px";
			css.borderTopStyle = borderStyle;
		} else {
			css.removeProperty("border-top-width");
			css.removeProperty("border-top-style");
		}
		if(style.borderLeftSize != null && style.borderLeftSize > 0) {
			css.borderLeftWidth = "" + style.borderLeftSize + "px";
			css.borderLeftStyle = borderStyle;
		} else {
			css.removeProperty("border-left-width");
			css.removeProperty("border-left-style");
		}
		if(style.borderBottomSize != null && style.borderBottomSize > 0) {
			css.borderBottomWidth = "" + style.borderBottomSize + "px";
			css.borderBottomStyle = borderStyle;
		} else {
			css.removeProperty("border-bottom-width");
			css.removeProperty("border-bottom-style");
		}
		if(style.borderRightSize != null && style.borderRightSize > 0) {
			css.borderRightWidth = "" + style.borderRightSize + "px";
			css.borderRightStyle = borderStyle;
		} else {
			css.removeProperty("border-right-width");
			css.removeProperty("border-right-style");
		}
	}
	if(style.borderLeftColor != null && style.borderLeftColor == style.borderRightColor && style.borderLeftColor == style.borderBottomColor && style.borderLeftColor == style.borderTopColor) {
		if(style.borderOpacity == null) {
			css.borderColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderLeftColor);
		} else {
			css.borderColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderLeftColor,style.borderOpacity);
		}
	} else if(style.borderLeftColor == null && style.borderRightColor == null && style.borderBottomColor == null && style.borderTopColor == null) {
		css.removeProperty("border-color");
	} else {
		if(style.borderTopColor != null && style.borderTopSize != null) {
			if(style.borderOpacity == null) {
				css.borderTopColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderTopColor);
			} else {
				css.borderTopColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderTopColor,style.borderOpacity);
			}
		} else if(style.borderTopColor == null && style.borderTopSize != null) {
			css.borderTopColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderTopColor);
		} else {
			css.removeProperty("border-top-color");
		}
		if(style.borderLeftColor != null && style.borderLeftSize != null) {
			if(style.borderOpacity == null) {
				css.borderLeftColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderLeftColor);
			} else {
				css.borderLeftColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderLeftColor,style.borderOpacity);
			}
		} else if(style.borderLeftColor == null && style.borderLeftSize != null) {
			css.borderLeftColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderLeftColor);
		} else {
			css.removeProperty("border-left-color");
		}
		if(style.borderBottomColor != null && style.borderBottomSize != null) {
			if(style.borderOpacity == null) {
				css.borderBottomColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderBottomColor);
			} else {
				css.borderBottomColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderBottomColor,style.borderOpacity);
			}
		} else if(style.borderBottomColor == null && style.borderBottomSize != null) {
			css.borderBottomColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderBottomColor);
		} else {
			css.removeProperty("border-bottom-color");
		}
		if(style.borderRightColor != null && style.borderRightSize != null) {
			if(style.borderOpacity == null) {
				css.borderRightColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderRightColor);
			} else {
				css.borderRightColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderRightColor,style.borderOpacity);
			}
		} else if(style.borderRightColor == null && style.borderRightSize != null) {
			css.borderRightColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderRightColor);
		} else {
			css.removeProperty("border-right-color");
		}
	}
	var background = [];
	if(style.backgroundColor != null) {
		if(style.backgroundColorEnd != null && style.backgroundColorEnd != style.backgroundColor) {
			css.removeProperty("background-color");
			var gradientStyle = style.backgroundGradientStyle;
			if(gradientStyle == null) {
				gradientStyle = "vertical";
			}
			if(style.backgroundOpacity != null) {
				if(gradientStyle == "vertical") {
					background.push("linear-gradient(to bottom, " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColor,style.backgroundOpacity) + ", " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColorEnd,style.backgroundOpacity) + ")");
				} else if(gradientStyle == "horizontal") {
					background.push("linear-gradient(to right, " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColor,style.backgroundOpacity) + ", " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColorEnd,style.backgroundOpacity) + ")");
				}
			} else if(gradientStyle == "vertical") {
				background.push("linear-gradient(to bottom, " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColor) + ", " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColorEnd) + ")");
			} else if(gradientStyle == "horizontal") {
				background.push("linear-gradient(to right, " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColor) + ", " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColorEnd) + ")");
			}
		} else {
			css.removeProperty("background");
			if(style.backgroundOpacity != null) {
				css.backgroundColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColor,style.backgroundOpacity);
			} else {
				css.backgroundColor = haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColor);
			}
		}
	} else {
		css.removeProperty("background");
		css.removeProperty("background-color");
	}
	if(style.borderRadius != null && style.borderRadius > 0 && (style.borderRadiusTopLeft == null || style.borderRadiusTopLeft == style.borderRadius) && (style.borderRadiusTopRight == null || style.borderRadiusTopRight == style.borderRadius) && (style.borderRadiusBottomLeft == null || style.borderRadiusBottomLeft == style.borderRadius) && (style.borderRadiusBottomRight == null || style.borderRadiusBottomRight == style.borderRadius)) {
		css.borderRadius = "" + style.borderRadius + "px";
	} else if(style.borderRadiusTopLeft != null && style.borderRadiusTopLeft > 0 || style.borderRadiusTopRight != null && style.borderRadiusTopRight > 0 || style.borderRadiusBottomLeft != null && style.borderRadiusBottomLeft > 0 || style.borderRadiusBottomRight != null && style.borderRadiusBottomRight > 0) {
		if(style.borderRadiusTopLeft != null && style.borderRadiusTopLeft > 0) {
			css.borderTopLeftRadius = "" + style.borderRadiusTopLeft + "px";
		} else {
			css.removeProperty("border-top-left-radius");
		}
		if(style.borderRadiusTopRight != null && style.borderRadiusTopRight > 0) {
			css.borderTopRightRadius = "" + style.borderRadiusTopRight + "px";
		} else {
			css.removeProperty("border-top-right-radius");
		}
		if(style.borderRadiusBottomLeft != null && style.borderRadiusBottomLeft > 0) {
			css.borderBottomLeftRadius = "" + style.borderRadiusBottomLeft + "px";
		} else {
			css.removeProperty("border-bottom-left-radius");
		}
		if(style.borderRadiusBottomRight != null && style.borderRadiusBottomRight > 0) {
			css.borderBottomRightRadius = "" + style.borderRadiusBottomRight + "px";
		} else {
			css.removeProperty("border-bottom-right-radius");
		}
	} else {
		css.removeProperty("border-radius");
	}
	if(style.backgroundImage != null) {
		haxe_ui_Toolkit.get_assets().getImage(haxe_ui_util_Variant.toString(style.backgroundImage),function(imageInfo) {
			if(imageInfo == null) {
				return;
			}
			var imageRect = new haxe_ui_geom_Rectangle(0,0,imageInfo.width,imageInfo.height);
			if(style.backgroundImageClipTop != null && style.backgroundImageClipLeft != null && style.backgroundImageClipBottom != null && style.backgroundImageClipRight != null) {
				imageRect = new haxe_ui_geom_Rectangle(style.backgroundImageClipLeft,style.backgroundImageClipTop,style.backgroundImageClipRight - style.backgroundImageClipLeft,style.backgroundImageClipBottom - style.backgroundImageClipTop);
			}
			if(slice == null) {
				if(imageRect.width == imageInfo.width && imageRect.height == imageInfo.height) {
					var backgroundRepeat = null;
					var backgroundSizeX = null;
					var backgroundSizeY = null;
					background.push("url(" + imageInfo.data.src + ")");
					if(style.backgroundImageRepeat == null || style.backgroundImageRepeat == "no-repeat") {
						backgroundRepeat = "no-repeat";
					} else if(style.backgroundImageRepeat == "repeat") {
						backgroundRepeat = "repeat";
					} else if(style.backgroundImageRepeat == "stretch") {
						backgroundRepeat = "no-repeat";
						backgroundSizeX = "100%";
						backgroundSizeY = "100%";
					}
					if(style.backgroundWidth != null) {
						backgroundSizeX = style.backgroundWidth + "px";
					} else if(style.backgroundWidthPercent != null) {
						backgroundSizeX = style.backgroundWidthPercent + "%";
					}
					if(style.backgroundHeight != null) {
						backgroundSizeY = style.backgroundHeight + "px";
					} else if(style.backgroundHeightPercent != null) {
						backgroundSizeY = style.backgroundHeightPercent + "%";
					}
					background.reverse();
					css.background = background.join(",");
					if(backgroundSizeX != null || backgroundSizeY != null) {
						css.backgroundSize = backgroundSizeX + " " + backgroundSizeY;
					} else {
						css.removeProperty("background-size");
					}
					if(backgroundRepeat != null) {
						css.backgroundRepeat = backgroundRepeat;
					} else {
						css.removeProperty("background-repeat");
					}
				} else {
					var canvas = component.getCanvas(width,height);
					var ctx = canvas.getContext("2d",null);
					ctx.clearRect(0,0,width,height);
					haxe_ui_backend_html5_StyleHelper.paintBitmap(ctx,imageInfo.data,imageRect,new haxe_ui_geom_Rectangle(0,0,width,height));
				}
			} else {
				var rects = haxe_ui_geom_Slice9.buildRects(width,height,imageRect.width,imageRect.height,slice);
				var srcRects = rects.src;
				var dstRects = rects.dst;
				var canvas = component.getCanvas(width,height);
				var ctx = canvas.getContext("2d",null);
				ctx.clearRect(0,0,width,height);
				ctx.imageSmoothingEnabled = false;
				var _g = 0;
				var _g1 = srcRects.length;
				while(_g < _g1) {
					var i = _g++;
					var srcRect = new haxe_ui_geom_Rectangle(srcRects[i].left + imageRect.left,srcRects[i].top + imageRect.top,srcRects[i].width,srcRects[i].height);
					var dstRect = dstRects[i];
					haxe_ui_backend_html5_StyleHelper.paintBitmap(ctx,imageInfo.data,srcRect,dstRect);
				}
			}
		});
	} else {
		component.removeCanvas();
		css.background = background[0];
	}
};
haxe_ui_backend_html5_StyleHelper.paintBitmap = function(ctx,img,srcRect,dstRect) {
	if(srcRect.width == 0 || srcRect.height == 0) {
		return;
	}
	if(dstRect.width == 0 || dstRect.height == 0) {
		return;
	}
	ctx.drawImage(img,srcRect.left | 0,srcRect.top | 0,srcRect.width | 0,srcRect.height | 0,dstRect.left | 0,dstRect.top | 0,dstRect.width | 0,dstRect.height | 0);
};
var haxe_ui_backend_html5_UserAgent = function() {
	this._unknown = false;
	this._msie = false;
	this._firefox = false;
	this._safari = false;
	this._chrome = false;
	this._opera = false;
	var ua = $global.navigator.userAgent;
	if(ua.indexOf("Opera") != -1 || ua.indexOf("OPR") != -1) {
		this._opera = true;
	} else if(ua.indexOf("Chrome") != -1) {
		this._chrome = true;
	} else if(ua.indexOf("Safari") != -1) {
		this._safari = true;
	} else if(ua.indexOf("Firefox") != -1) {
		this._firefox = true;
	} else if(ua.indexOf("MSIE") != -1) {
		this._msie = true;
	} else {
		this._unknown = true;
	}
};
$hxClasses["haxe.ui.backend.html5.UserAgent"] = haxe_ui_backend_html5_UserAgent;
haxe_ui_backend_html5_UserAgent.__name__ = "haxe.ui.backend.html5.UserAgent";
haxe_ui_backend_html5_UserAgent.__properties__ = {get_instance:"get_instance"};
haxe_ui_backend_html5_UserAgent.get_instance = function() {
	if(haxe_ui_backend_html5_UserAgent._instance == null) {
		haxe_ui_backend_html5_UserAgent._instance = new haxe_ui_backend_html5_UserAgent();
	}
	return haxe_ui_backend_html5_UserAgent._instance;
};
haxe_ui_backend_html5_UserAgent.prototype = {
	_opera: null
	,opera: null
	,get_opera: function() {
		return this._opera;
	}
	,_chrome: null
	,chrome: null
	,get_chrome: function() {
		return this._chrome;
	}
	,_safari: null
	,safari: null
	,get_safari: function() {
		return this._safari;
	}
	,_firefox: null
	,firefox: null
	,get_firefox: function() {
		return this._firefox;
	}
	,_msie: null
	,msie: null
	,get_msie: function() {
		return this._msie;
	}
	,_unknown: null
	,unknown: null
	,get_unknown: function() {
		return this._unknown;
	}
	,__class__: haxe_ui_backend_html5_UserAgent
	,__properties__: {get_unknown:"get_unknown",get_msie:"get_msie",get_firefox:"get_firefox",get_safari:"get_safari",get_chrome:"get_chrome",get_opera:"get_opera"}
};
var haxe_ui_backend_html5_graphics_CanvasGraphicsImpl = function(component) {
	this._hasSize = false;
	this._ctx = null;
	this._canvas = null;
	haxe_ui_backend_ComponentGraphicsBase.call(this,component);
	this.createCanvas();
};
$hxClasses["haxe.ui.backend.html5.graphics.CanvasGraphicsImpl"] = haxe_ui_backend_html5_graphics_CanvasGraphicsImpl;
haxe_ui_backend_html5_graphics_CanvasGraphicsImpl.__name__ = "haxe.ui.backend.html5.graphics.CanvasGraphicsImpl";
haxe_ui_backend_html5_graphics_CanvasGraphicsImpl.__super__ = haxe_ui_backend_ComponentGraphicsBase;
haxe_ui_backend_html5_graphics_CanvasGraphicsImpl.prototype = $extend(haxe_ui_backend_ComponentGraphicsBase.prototype,{
	_canvas: null
	,_ctx: null
	,_hasSize: null
	,fillStyle: function(color,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		if(this._hasSize == false) {
			haxe_ui_backend_ComponentGraphicsBase.prototype.fillStyle.call(this,color,alpha);
			return;
		}
		this._ctx.fillStyle = "rgb(" + (color >> 16 & 255) + ", " + (color >> 8 & 255) + ", " + (color & 255) + ")";
	}
	,rectangle: function(x,y,width,height) {
		if(this._hasSize == false) {
			haxe_ui_backend_ComponentGraphicsBase.prototype.rectangle.call(this,x,y,width,height);
			return;
		}
		this._ctx.fillRect(x,y,width,height);
	}
	,setPixel: function(x,y,color) {
		if(this._hasSize == false) {
			haxe_ui_backend_ComponentGraphicsBase.prototype.setPixel.call(this,x,y,color);
			return;
		}
		this._ctx.fillStyle = "rgb(" + (color >> 16 & 255) + ", " + (color >> 8 & 255) + ", " + (color & 255) + ")";
		this._ctx.fillRect(x,y,1,1);
	}
	,createCanvas: function() {
		if(this._component.element == null) {
			return;
		}
		this._canvas = window.document.createElement("canvas");
		this._component.element.appendChild(this._canvas);
		this._ctx = this._canvas.getContext("2d",null);
	}
	,setPixels: function(pixels) {
		if(this._hasSize == false) {
			haxe_ui_backend_ComponentGraphicsBase.prototype.setPixels.call(this,pixels);
			return;
		}
		var imageData = new ImageData(new Uint8ClampedArray(pixels.b.bufferValue),this._ctx.canvas.width,this._ctx.canvas.height);
		this._ctx.putImageData(imageData,0,0);
	}
	,resize: function(width,height) {
		this._canvas.width = width | 0;
		this._canvas.height = height | 0;
		if(width > 0 && height > 0) {
			if(this._hasSize == false) {
				this._hasSize = true;
				this.replayDrawCommands();
			}
		}
	}
	,detach: function() {
		this._canvas.remove();
		this._canvas = null;
		this._ctx = null;
	}
	,__class__: haxe_ui_backend_html5_graphics_CanvasGraphicsImpl
});
var haxe_ui_backend_html5_graphics_SVGGraphicsImpl = function(component) {
	this._currentPosition = new haxe_ui_geom_Point();
	this._svg = null;
	haxe_ui_backend_ComponentGraphicsBase.call(this,component);
	this.createSVG();
};
$hxClasses["haxe.ui.backend.html5.graphics.SVGGraphicsImpl"] = haxe_ui_backend_html5_graphics_SVGGraphicsImpl;
haxe_ui_backend_html5_graphics_SVGGraphicsImpl.__name__ = "haxe.ui.backend.html5.graphics.SVGGraphicsImpl";
haxe_ui_backend_html5_graphics_SVGGraphicsImpl.__super__ = haxe_ui_backend_ComponentGraphicsBase;
haxe_ui_backend_html5_graphics_SVGGraphicsImpl.prototype = $extend(haxe_ui_backend_ComponentGraphicsBase.prototype,{
	_svg: null
	,clear: function() {
		this._svg.clear();
	}
	,_currentPosition: null
	,moveTo: function(x,y) {
		this._currentPosition.x = x;
		this._currentPosition.y = y;
	}
	,lineTo: function(x,y) {
		this._svg.line(this._currentPosition.x,this._currentPosition.y,x,y);
		this._currentPosition.x = x;
		this._currentPosition.y = y;
	}
	,strokeStyle: function(color,thickness,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		if(thickness == null) {
			thickness = 1;
		}
		if(thickness != null) {
			this._svg.currentStrokeStyle.thickness = thickness;
		}
		if(color != null) {
			if(alpha < 1) {
				this._svg.currentStrokeStyle.color = "rgba(" + (color >> 16 & 255) + ", " + (color >> 8 & 255) + ", " + (color & 255) + ", " + alpha + ")";
			} else {
				this._svg.currentStrokeStyle.color = "rgb(" + (color >> 16 & 255) + ", " + (color >> 8 & 255) + ", " + (color & 255) + ")";
			}
		} else {
			this._svg.currentStrokeStyle.color = "none";
		}
	}
	,fillStyle: function(color,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		if(color != null) {
			if(alpha < 1) {
				this._svg.currentFillStyle.color = "rgba(" + (color >> 16 & 255) + ", " + (color >> 8 & 255) + ", " + (color & 255) + ", " + alpha + ")";
			} else {
				this._svg.currentFillStyle.color = "rgb(" + (color >> 16 & 255) + ", " + (color >> 8 & 255) + ", " + (color & 255) + ")";
			}
		} else {
			this._svg.currentFillStyle.color = "none";
		}
	}
	,circle: function(x,y,radius) {
		this._svg.circle(x,y,radius);
	}
	,curveTo: function(controlX,controlY,anchorX,anchorY) {
		this._svg.path(this._currentPosition.x,this._currentPosition.y).quadraticBezier(controlX,controlY,anchorX,anchorY);
		this._currentPosition.x = anchorX;
		this._currentPosition.y = anchorY;
	}
	,cubicCurveTo: function(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY) {
		this._svg.path(this._currentPosition.x,this._currentPosition.y).cubicBezier(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY);
		this._currentPosition.x = anchorX;
		this._currentPosition.y = anchorY;
	}
	,rectangle: function(x,y,width,height) {
		this._svg.rectangle(x,y,width,height);
	}
	,setPixel: function(x,y,color) {
		this.strokeStyle(null);
		this.fillStyle(color);
		this.rectangle(x,y,1,1);
	}
	,image: function(resource,x,y,width,height) {
		var _gthis = this;
		new haxe_ui_util_ImageLoader(resource).load(function(imageInfo) {
			if(imageInfo != null) {
				if(x == null) {
					x = 0;
				}
				if(y == null) {
					y = 0;
				}
				if(width == null) {
					width = imageInfo.width;
				}
				if(height == null) {
					height = imageInfo.height;
				}
				_gthis._svg.image(imageInfo.data.src,x,y,width,height);
			} else {
				haxe_Log.trace("could not load: " + (resource == null ? "null" : haxe_ui_util_Variant.toString(resource)),{ fileName : "haxe/ui/backend/html5/graphics/SVGGraphicsImpl.hx", lineNumber : 97, className : "haxe.ui.backend.html5.graphics.SVGGraphicsImpl", methodName : "image"});
			}
		});
	}
	,createSVG: function() {
		if(this._component.element == null) {
			return;
		}
		var existingElements = this._component.element.getElementsByTagNameNS("http://www.w3.org/2000/svg","svg");
		var existingElement = null;
		if(existingElements.length > 0) {
			existingElements.item(0);
		}
		this._svg = new haxe_ui_backend_html5_svg_SVGBuilder(existingElement);
		if(existingElement == null) {
			this._component.element.appendChild(this._svg.element);
		}
	}
	,resize: function(width,height) {
		this._svg.size(width,height);
	}
	,detach: function() {
		this._svg.element.remove();
		this._svg = null;
	}
	,__class__: haxe_ui_backend_html5_graphics_SVGGraphicsImpl
});
var haxe_ui_backend_html5_svg_SVGBuilder = function(existingElement,width,height) {
	this.currentFontStyle = { };
	this.currentFillStyle = { };
	this.currentStrokeStyle = { };
	this.element = null;
	if(existingElement == null) {
		this.element = window.document.createElementNS("http://www.w3.org/2000/svg","svg");
	} else {
		this.element = existingElement;
	}
	if(width != null) {
		this.element.setAttribute("width",width == null ? "null" : "" + width);
	}
	if(height != null) {
		this.element.setAttribute("height",height == null ? "null" : "" + height);
	}
};
$hxClasses["haxe.ui.backend.html5.svg.SVGBuilder"] = haxe_ui_backend_html5_svg_SVGBuilder;
haxe_ui_backend_html5_svg_SVGBuilder.__name__ = "haxe.ui.backend.html5.svg.SVGBuilder";
haxe_ui_backend_html5_svg_SVGBuilder.prototype = {
	element: null
	,size: function(width,height) {
		this.element.setAttribute("width",width == null ? "null" : "" + width);
		this.element.setAttribute("height",height == null ? "null" : "" + height);
	}
	,shapeRendering: function(value) {
		this.element.setAttribute("shape-rendering",value);
	}
	,clear: function() {
		this.element.innerHTML = "";
	}
	,currentStrokeStyle: null
	,strokeStyle: function(strokeStyle) {
		if(strokeStyle.color != null) {
			this.currentStrokeStyle.color = strokeStyle.color;
		}
		if(strokeStyle.thickness != null) {
			this.currentStrokeStyle.thickness = strokeStyle.thickness;
		}
		if(strokeStyle.alpha != null) {
			this.currentStrokeStyle.alpha = strokeStyle.alpha;
		}
	}
	,clearStrokeStyle: function() {
		this.currentStrokeStyle = { };
	}
	,currentFillStyle: null
	,fillStyle: function(fillStyle) {
		if(fillStyle.color != null) {
			this.currentFillStyle.color = fillStyle.color;
		}
	}
	,clearFillStyle: function() {
		this.currentFillStyle = { };
	}
	,currentFontStyle: null
	,fontStyle: function(fontStyle) {
		if(fontStyle.size != null) {
			this.currentFontStyle.size = fontStyle.size;
		}
		if(fontStyle.family != null) {
			this.currentFontStyle.family = fontStyle.family;
		}
		if(fontStyle.anchor != null) {
			this.currentFontStyle.anchor = fontStyle.anchor;
		}
	}
	,clearFontStyle: function() {
		this.currentFontStyle = { };
	}
	,line: function(x1,y1,x2,y2) {
		var builder = new haxe_ui_backend_html5_svg_SVGLineBuilder();
		builder.start(x1,y1);
		builder.end(x2,y2);
		builder.stroke(this.currentStrokeStyle);
		this.element.appendChild(builder.element);
		return builder;
	}
	,rectangle: function(x,y,width,height) {
		var builder = new haxe_ui_backend_html5_svg_SVGRectBuilder();
		builder.position(x,y);
		builder.size(width,height);
		builder.stroke(this.currentStrokeStyle);
		builder.fill(this.currentFillStyle);
		this.element.appendChild(builder.element);
		return builder;
	}
	,circle: function(x,y,r) {
		var builder = new haxe_ui_backend_html5_svg_SVGCircleBuilder();
		builder.position(x,y);
		builder.radius(r);
		builder.stroke(this.currentStrokeStyle);
		builder.fill(this.currentFillStyle);
		this.element.appendChild(builder.element);
		return builder;
	}
	,text: function(value,x,y) {
		var builder = new haxe_ui_backend_html5_svg_SVGTextBuilder();
		builder.position(x,y);
		builder.value(value);
		builder.stroke(this.currentStrokeStyle);
		builder.fill(this.currentFillStyle);
		builder.font(this.currentFontStyle);
		this.element.appendChild(builder.element);
		return builder;
	}
	,path: function(x,y,absolute) {
		if(absolute == null) {
			absolute = true;
		}
		var builder = new haxe_ui_backend_html5_svg_SVGPathBuilder();
		if(x != null && y != null) {
			builder.moveTo(x,y,absolute);
		}
		this.element.appendChild(builder.element);
		builder.stroke(this.currentStrokeStyle);
		builder.fill(this.currentFillStyle);
		return builder;
	}
	,image: function(href,x,y,width,height) {
		var builder = new haxe_ui_backend_html5_svg_SVGImageBuilder();
		if(x != null && y != null) {
			builder.position(x,y);
		}
		if(width != null && height != null) {
			builder.size(width,height);
		}
		builder.href(href);
		this.element.appendChild(builder.element);
		return builder;
	}
	,__class__: haxe_ui_backend_html5_svg_SVGBuilder
};
var haxe_ui_backend_html5_svg_SVGCircleBuilder = function() {
	this.element = null;
	this.element = window.document.createElementNS("http://www.w3.org/2000/svg","circle");
};
$hxClasses["haxe.ui.backend.html5.svg.SVGCircleBuilder"] = haxe_ui_backend_html5_svg_SVGCircleBuilder;
haxe_ui_backend_html5_svg_SVGCircleBuilder.__name__ = "haxe.ui.backend.html5.svg.SVGCircleBuilder";
haxe_ui_backend_html5_svg_SVGCircleBuilder.prototype = {
	element: null
	,id: function(value) {
		this.element.id = value;
		return this;
	}
	,position: function(x,y) {
		this.element.cx.baseVal.value = x;
		this.element.cy.baseVal.value = y;
		return this;
	}
	,radius: function(r) {
		this.element.r.baseVal.value = r;
		return this;
	}
	,stroke: function(strokeStyle) {
		if(strokeStyle.color != null) {
			this.element.setAttribute("stroke",strokeStyle.color);
		}
		if(strokeStyle.thickness != null) {
			this.element.setAttribute("stroke-width",strokeStyle.thickness == null ? "null" : "" + strokeStyle.thickness);
		}
		return this;
	}
	,fill: function(fillStyle) {
		if(fillStyle.color != null) {
			this.element.setAttribute("fill",fillStyle.color);
		}
		return this;
	}
	,__class__: haxe_ui_backend_html5_svg_SVGCircleBuilder
};
var haxe_ui_backend_html5_svg_SVGImageBuilder = function() {
	this.element = null;
	this.element = window.document.createElementNS("http://www.w3.org/2000/svg","image");
};
$hxClasses["haxe.ui.backend.html5.svg.SVGImageBuilder"] = haxe_ui_backend_html5_svg_SVGImageBuilder;
haxe_ui_backend_html5_svg_SVGImageBuilder.__name__ = "haxe.ui.backend.html5.svg.SVGImageBuilder";
haxe_ui_backend_html5_svg_SVGImageBuilder.prototype = {
	element: null
	,position: function(x,y) {
		this.element.x.baseVal.value = x;
		this.element.y.baseVal.value = y;
	}
	,size: function(width,height) {
		this.element.width.baseVal.value = width;
		this.element.height.baseVal.value = height;
	}
	,href: function(uri) {
		this.element.href.baseVal = uri;
	}
	,__class__: haxe_ui_backend_html5_svg_SVGImageBuilder
};
var haxe_ui_backend_html5_svg_SVGLineBuilder = function() {
	this.element = null;
	this.element = window.document.createElementNS("http://www.w3.org/2000/svg","line");
};
$hxClasses["haxe.ui.backend.html5.svg.SVGLineBuilder"] = haxe_ui_backend_html5_svg_SVGLineBuilder;
haxe_ui_backend_html5_svg_SVGLineBuilder.__name__ = "haxe.ui.backend.html5.svg.SVGLineBuilder";
haxe_ui_backend_html5_svg_SVGLineBuilder.prototype = {
	element: null
	,id: function(value) {
		this.element.id = value;
		return this;
	}
	,start: function(x,y) {
		this.element.x1.baseVal.value = x;
		this.element.y1.baseVal.value = y;
	}
	,end: function(x,y) {
		this.element.x2.baseVal.value = x;
		this.element.y2.baseVal.value = y;
	}
	,stroke: function(strokeStyle) {
		if(strokeStyle.color != null) {
			this.element.setAttribute("stroke",strokeStyle.color);
		}
		if(strokeStyle.thickness != null) {
			this.element.setAttribute("stroke-width",strokeStyle.thickness == null ? "null" : "" + strokeStyle.thickness);
		}
	}
	,__class__: haxe_ui_backend_html5_svg_SVGLineBuilder
};
var haxe_ui_backend_html5_svg_SVGPathBuilder = function() {
	this._d = new StringBuf();
	this.element = null;
	this.element = window.document.createElementNS("http://www.w3.org/2000/svg","path");
};
$hxClasses["haxe.ui.backend.html5.svg.SVGPathBuilder"] = haxe_ui_backend_html5_svg_SVGPathBuilder;
haxe_ui_backend_html5_svg_SVGPathBuilder.__name__ = "haxe.ui.backend.html5.svg.SVGPathBuilder";
haxe_ui_backend_html5_svg_SVGPathBuilder.prototype = {
	element: null
	,_d: null
	,id: function(value) {
		this.element.id = value;
		return this;
	}
	,moveTo: function(x,y,absolute) {
		if(absolute == null) {
			absolute = true;
		}
		if(absolute == true) {
			this._d.b += "M";
		} else {
			this._d.b += "m";
		}
		this._d.b += x == null ? "null" : "" + x;
		this._d.b += " ";
		this._d.b += y == null ? "null" : "" + y;
		this._d.b += " ";
		this.element.setAttribute("d",this._d.b);
		return this;
	}
	,lineTo: function(x,y,absolute) {
		if(absolute == null) {
			absolute = true;
		}
		if(absolute == true) {
			this._d.b += "L";
		} else {
			this._d.b += "l";
		}
		this._d.b += x == null ? "null" : "" + x;
		this._d.b += " ";
		this._d.b += y == null ? "null" : "" + y;
		this._d.b += " ";
		this.element.setAttribute("d",this._d.b);
		return this;
	}
	,cubicBezier: function(x1,y1,x2,y2,x,y,absolute) {
		if(absolute == null) {
			absolute = true;
		}
		if(absolute == true) {
			this._d.b += "C";
		} else {
			this._d.b += "c";
		}
		this._d.b += x1 == null ? "null" : "" + x1;
		this._d.b += " ";
		this._d.b += y1 == null ? "null" : "" + y1;
		this._d.b += " ";
		this._d.b += x2 == null ? "null" : "" + x2;
		this._d.b += " ";
		this._d.b += y2 == null ? "null" : "" + y2;
		this._d.b += " ";
		this._d.b += x == null ? "null" : "" + x;
		this._d.b += " ";
		this._d.b += y == null ? "null" : "" + y;
		this._d.b += " ";
		this.element.setAttribute("d",this._d.b);
		return this;
	}
	,quadraticBezier: function(x1,y1,x,y,absolute) {
		if(absolute == null) {
			absolute = true;
		}
		if(absolute == true) {
			this._d.b += "Q";
		} else {
			this._d.b += "q";
		}
		this._d.b += x1 == null ? "null" : "" + x1;
		this._d.b += " ";
		this._d.b += y1 == null ? "null" : "" + y1;
		this._d.b += " ";
		this._d.b += x == null ? "null" : "" + x;
		this._d.b += " ";
		this._d.b += y == null ? "null" : "" + y;
		this._d.b += " ";
		this.element.setAttribute("d",this._d.b);
		return this;
	}
	,close: function() {
		this._d.b += "Z ";
		this.element.setAttribute("d",this._d.b);
		return this;
	}
	,stroke: function(strokeStyle) {
		if(strokeStyle.color != null) {
			this.element.setAttribute("stroke",strokeStyle.color);
		}
		if(strokeStyle.thickness != null) {
			this.element.setAttribute("stroke-width",strokeStyle.thickness == null ? "null" : "" + strokeStyle.thickness);
		}
		return this;
	}
	,fill: function(fillStyle) {
		if(fillStyle.color != null) {
			this.element.setAttribute("fill",fillStyle.color);
		}
		if(fillStyle.opacity != null) {
			this.element.setAttribute("fill-opacity",fillStyle.opacity == null ? "null" : "" + fillStyle.opacity);
		}
		return this;
	}
	,__class__: haxe_ui_backend_html5_svg_SVGPathBuilder
};
var haxe_ui_backend_html5_svg_SVGRectBuilder = function() {
	this.element = null;
	this.element = window.document.createElementNS("http://www.w3.org/2000/svg","rect");
};
$hxClasses["haxe.ui.backend.html5.svg.SVGRectBuilder"] = haxe_ui_backend_html5_svg_SVGRectBuilder;
haxe_ui_backend_html5_svg_SVGRectBuilder.__name__ = "haxe.ui.backend.html5.svg.SVGRectBuilder";
haxe_ui_backend_html5_svg_SVGRectBuilder.prototype = {
	element: null
	,id: function(value) {
		this.element.id = value;
		return this;
	}
	,position: function(x,y) {
		this.element.x.baseVal.value = x;
		this.element.y.baseVal.value = y;
	}
	,size: function(width,height) {
		this.element.width.baseVal.value = width;
		this.element.height.baseVal.value = height;
	}
	,stroke: function(strokeStyle) {
		if(strokeStyle.color != null) {
			this.element.setAttribute("stroke",strokeStyle.color);
		}
		if(strokeStyle.thickness != null) {
			this.element.setAttribute("stroke-width",strokeStyle.thickness == null ? "null" : "" + strokeStyle.thickness);
		}
		return this;
	}
	,fill: function(fillStyle) {
		if(fillStyle.color != null) {
			this.element.setAttribute("fill",fillStyle.color);
		}
		return this;
	}
	,__class__: haxe_ui_backend_html5_svg_SVGRectBuilder
};
var haxe_ui_backend_html5_svg_SVGTextBuilder = function() {
	this.element = null;
	this.element = window.document.createElementNS("http://www.w3.org/2000/svg","text");
};
$hxClasses["haxe.ui.backend.html5.svg.SVGTextBuilder"] = haxe_ui_backend_html5_svg_SVGTextBuilder;
haxe_ui_backend_html5_svg_SVGTextBuilder.__name__ = "haxe.ui.backend.html5.svg.SVGTextBuilder";
haxe_ui_backend_html5_svg_SVGTextBuilder.prototype = {
	element: null
	,id: function(value) {
		this.element.id = value;
		return this;
	}
	,value: function(value) {
		this.element.textContent = value;
		return this;
	}
	,position: function(x,y) {
		this.element.setAttribute("x",x == null ? "null" : "" + x);
		this.element.setAttribute("y",y == null ? "null" : "" + y);
		return this;
	}
	,offset: function(x,y) {
		this.element.setAttribute("dx",x == null ? "null" : "" + x);
		this.element.setAttribute("dy",y == null ? "null" : "" + y);
		return this;
	}
	,stroke: function(strokeStyle) {
		if(strokeStyle.color != null) {
			this.element.setAttribute("stroke",strokeStyle.color);
		}
		if(strokeStyle.thickness != null) {
			this.element.setAttribute("stroke-width",strokeStyle.thickness == null ? "null" : "" + strokeStyle.thickness);
		}
		return this;
	}
	,fill: function(fillStyle) {
		if(fillStyle.color != null) {
			this.element.setAttribute("fill",fillStyle.color);
		}
		return this;
	}
	,font: function(fontStyle) {
		if(fontStyle.size != null) {
			this.element.setAttribute("font-size",fontStyle.size == null ? "null" : "" + fontStyle.size);
		}
		if(fontStyle.family != null) {
			this.element.setAttribute("font-family",fontStyle.family);
		}
		if(fontStyle.anchor != null) {
			this.element.setAttribute("text-anchor",fontStyle.anchor);
		}
	}
	,__class__: haxe_ui_backend_html5_svg_SVGTextBuilder
};
var haxe_ui_backend_html5_text_ITextMeasurer = function() { };
$hxClasses["haxe.ui.backend.html5.text.ITextMeasurer"] = haxe_ui_backend_html5_text_ITextMeasurer;
haxe_ui_backend_html5_text_ITextMeasurer.__name__ = "haxe.ui.backend.html5.text.ITextMeasurer";
haxe_ui_backend_html5_text_ITextMeasurer.__isInterface__ = true;
haxe_ui_backend_html5_text_ITextMeasurer.prototype = {
	measureText: null
	,__class__: haxe_ui_backend_html5_text_ITextMeasurer
};
var haxe_ui_backend_html5_text__$TextMeasurer_DivTextMeasurer = function() {
	this._div = null;
	this._div = window.document.createElement("div");
	this._div.style.position = "absolute";
	this._div.style.top = "-99999px";
	this._div.style.left = "-99999px";
	window.document.body.appendChild(this._div);
};
$hxClasses["haxe.ui.backend.html5.text._TextMeasurer.DivTextMeasurer"] = haxe_ui_backend_html5_text__$TextMeasurer_DivTextMeasurer;
haxe_ui_backend_html5_text__$TextMeasurer_DivTextMeasurer.__name__ = "haxe.ui.backend.html5.text._TextMeasurer.DivTextMeasurer";
haxe_ui_backend_html5_text__$TextMeasurer_DivTextMeasurer.__interfaces__ = [haxe_ui_backend_html5_text_ITextMeasurer];
haxe_ui_backend_html5_text__$TextMeasurer_DivTextMeasurer.prototype = {
	_div: null
	,measureText: function(options) {
		this._div.style.fontFamily = options.fontFamily;
		this._div.style.fontSize = options.fontSize;
		this._div.style.whiteSpace = options.whiteSpace;
		this._div.style.wordBreak = options.wordBreak;
		if(options.width != null) {
			this._div.style.width = "" + options.width + "px";
		} else {
			this._div.style.width = "";
		}
		if(options.isHtml == false) {
			this._div.textContent = options.text;
		} else {
			this._div.innerHTML = options.text;
		}
		return { width : this._div.clientWidth, height : this._div.clientHeight};
	}
	,__class__: haxe_ui_backend_html5_text__$TextMeasurer_DivTextMeasurer
};
var haxe_ui_backend_html5_text_TextMeasurer = function() { };
$hxClasses["haxe.ui.backend.html5.text.TextMeasurer"] = haxe_ui_backend_html5_text_TextMeasurer;
haxe_ui_backend_html5_text_TextMeasurer.__name__ = "haxe.ui.backend.html5.text.TextMeasurer";
haxe_ui_backend_html5_text_TextMeasurer.__properties__ = {get_instance:"get_instance"};
haxe_ui_backend_html5_text_TextMeasurer.get_instance = function() {
	if(haxe_ui_backend_html5_text_TextMeasurer._instance == null) {
		haxe_ui_backend_html5_text_TextMeasurer._instance = new haxe_ui_backend_html5_text__$TextMeasurer_DivTextMeasurer();
	}
	return haxe_ui_backend_html5_text_TextMeasurer._instance;
};
var haxe_ui_backend_html5_util_FontDetect = function() {
};
$hxClasses["haxe.ui.backend.html5.util.FontDetect"] = haxe_ui_backend_html5_util_FontDetect;
haxe_ui_backend_html5_util_FontDetect.__name__ = "haxe.ui.backend.html5.util.FontDetect";
haxe_ui_backend_html5_util_FontDetect.init = function() {
	if(haxe_ui_backend_html5_util_FontDetect._initialized == true) {
		return;
	}
	haxe_ui_backend_html5_util_FontDetect._initialized = true;
	var body = window.document.body;
	var firstChild = window.document.body.firstChild;
	var div = window.document.createElement("div");
	div.id = "fontdetectHelper";
	haxe_ui_backend_html5_util_FontDetect.span = window.document.createElement("span");
	haxe_ui_backend_html5_util_FontDetect.span.innerText = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
	div.appendChild(haxe_ui_backend_html5_util_FontDetect.span);
	body.insertBefore(div,firstChild);
	div.style.position = "absolute";
	div.style.visibility = "hidden";
	div.style.top = "-200px";
	div.style.left = "-100000px";
	div.style.width = "100000px";
	div.style.height = "200px";
	div.style.fontSize = "100px";
};
haxe_ui_backend_html5_util_FontDetect.onFontLoaded = function(cssFontName,onLoad,onFail,options) {
	if(cssFontName == null) {
		return;
	}
	var msInterval = 10;
	if(options != null && options.msInterval != null) {
		msInterval = options.msInterval;
	}
	var msTimeout = 2000;
	if(options != null && options.msTimeout != null) {
		msTimeout = options.msTimeout;
	}
	if(onLoad == null && onFail == null) {
		return;
	}
	if(haxe_ui_backend_html5_util_FontDetect._initialized == false) {
		haxe_ui_backend_html5_util_FontDetect.init();
	}
	if(haxe_ui_backend_html5_util_FontDetect.isFontLoaded(cssFontName)) {
		if(onLoad != null) {
			onLoad(cssFontName);
		}
		return;
	}
	var utStart = new Date().getTime();
	var idInterval = 0;
	idInterval = window.setInterval(function() {
		if(haxe_ui_backend_html5_util_FontDetect.isFontLoaded(cssFontName)) {
			window.clearInterval(idInterval);
			if(onLoad != null) {
				onLoad(cssFontName);
			}
			return;
		} else {
			var utNow = new Date().getTime();
			if(utNow - utStart > msTimeout) {
				window.clearInterval(idInterval);
				if(onFail != null) {
					onFail(cssFontName);
				}
			}
		}
	},msInterval);
};
haxe_ui_backend_html5_util_FontDetect.isFontLoaded = function(cssFontName) {
	var wThisFont = 0;
	var wPrevFont = 0;
	if(haxe_ui_backend_html5_util_FontDetect._initialized == false) {
		haxe_ui_backend_html5_util_FontDetect.init();
	}
	var _g = 0;
	var _g1 = haxe_ui_backend_html5_util_FontDetect._aFallbackFonts.length;
	while(_g < _g1) {
		var ix = _g++;
		haxe_ui_backend_html5_util_FontDetect.span.style.fontFamily = cssFontName + "," + haxe_ui_backend_html5_util_FontDetect._aFallbackFonts[ix];
		wThisFont = haxe_ui_backend_html5_util_FontDetect.span.offsetWidth;
		if(ix > 0 && wThisFont != wPrevFont) {
			return false;
		}
		wPrevFont = wThisFont;
	}
	return true;
};
haxe_ui_backend_html5_util_FontDetect.prototype = {
	__class__: haxe_ui_backend_html5_util_FontDetect
};
var haxe_ui_backend_html5_util_StyleSheetHelper = function() {
};
$hxClasses["haxe.ui.backend.html5.util.StyleSheetHelper"] = haxe_ui_backend_html5_util_StyleSheetHelper;
haxe_ui_backend_html5_util_StyleSheetHelper.__name__ = "haxe.ui.backend.html5.util.StyleSheetHelper";
haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet = function() {
	if(haxe_ui_backend_html5_util_StyleSheetHelper._sheet != null) {
		return haxe_ui_backend_html5_util_StyleSheetHelper._sheet;
	}
	var sheet = null;
	var _g = 0;
	var _g1 = window.document.styleSheets;
	while(_g < _g1.length) {
		var test = _g1[_g];
		++_g;
		if(test.ownerNode == null || test.disabled == true) {
			continue;
		}
		var css = js_Boot.__cast(test , CSSStyleSheet);
		if(css.ownerNode.nodeName == "STYLE" && css.href == null) {
			try {
				var r = css.cssRules;
				sheet = css;
				break;
			} catch( _g2 ) {
			}
		}
	}
	if(sheet == null) {
		var styleElement = window.document.createElement("style");
		styleElement.appendChild(window.document.createTextNode(""));
		window.document.head.appendChild(styleElement);
		sheet = js_Boot.__cast(styleElement.sheet , CSSStyleSheet);
	}
	haxe_ui_backend_html5_util_StyleSheetHelper._sheet = sheet;
	return sheet;
};
haxe_ui_backend_html5_util_StyleSheetHelper.prototype = {
	__class__: haxe_ui_backend_html5_util_StyleSheetHelper
};
var haxe_ui_behaviours_Behaviour = function(component) {
	this.config = null;
	this._component = component;
};
$hxClasses["haxe.ui.behaviours.Behaviour"] = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_Behaviour.__name__ = "haxe.ui.behaviours.Behaviour";
haxe_ui_behaviours_Behaviour.prototype = {
	config: null
	,_component: null
	,id: null
	,set: function(value) {
	}
	,setDynamic: function(value) {
		this.set(haxe_ui_util_Variant.fromDynamic(value));
	}
	,detatch: function() {
	}
	,get: function() {
		return null;
	}
	,getDynamic: function() {
		return haxe_ui_util_Variant.toDynamic(this.get());
	}
	,update: function() {
	}
	,call: function(param) {
		return null;
	}
	,getConfigValue: function(name,defaultValue) {
		if(this.config == null) {
			return defaultValue;
		}
		if(Object.prototype.hasOwnProperty.call(this.config.h,name) == false) {
			return defaultValue;
		}
		return this.config.h[name];
	}
	,getConfigValueBool: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var v = defaultValue;
		var s = this.getConfigValue(name);
		if(s != null) {
			v = s == "true";
		}
		return v;
	}
	,__class__: haxe_ui_behaviours_Behaviour
};
var haxe_ui_behaviours_Behaviours = function(component) {
	this._actualUpdateOrder = null;
	this._updateOrder = [];
	this._instances = new haxe_ds_StringMap();
	this._registry = new haxe_ds_StringMap();
	this._component = component;
};
$hxClasses["haxe.ui.behaviours.Behaviours"] = haxe_ui_behaviours_Behaviours;
haxe_ui_behaviours_Behaviours.__name__ = "haxe.ui.behaviours.Behaviours";
haxe_ui_behaviours_Behaviours.prototype = {
	_component: null
	,_registry: null
	,_instances: null
	,register: function(id,cls,defaultValue) {
		var info = { id : id, cls : cls, defaultValue : defaultValue, isSet : false};
		this._registry.h[id] = info;
		HxOverrides.remove(this._updateOrder,id);
		this._updateOrder.push(id);
		this._actualUpdateOrder = null;
	}
	,isRegistered: function(id) {
		return Object.prototype.hasOwnProperty.call(this._registry.h,id);
	}
	,replaceNative: function() {
		if(this._component.get_native() == false || this._component.get_hasNativeEntry() == false) {
			return;
		}
		var ids = [];
		var h = this._registry.h;
		var id_h = h;
		var id_keys = Object.keys(h);
		var id_length = id_keys.length;
		var id_current = 0;
		while(id_current < id_length) {
			var id = id_keys[id_current++];
			ids.push(id);
		}
		var _g = 0;
		while(_g < ids.length) {
			var id = ids[_g];
			++_g;
			var nativeProps = this._component.getNativeConfigProperties(".behaviour[id=" + id + "]");
			if(nativeProps != null && Object.prototype.hasOwnProperty.call(nativeProps.h,"class")) {
				var registered = this._registry.h[id];
				var name = nativeProps.h["class"];
				var info = { id : id, cls : $hxClasses[name], defaultValue : registered.defaultValue, config : nativeProps, isSet : false};
				this._registry.h[id] = info;
			}
		}
	}
	,validateData: function() {
		var _g = 0;
		var _g1 = this.get_actualUpdateOrder();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var b = this._instances.h[key];
			if(js_Boot.__implements(b,haxe_ui_behaviours_IValidatingBehaviour)) {
				(js_Boot.__cast(b , haxe_ui_behaviours_IValidatingBehaviour)).validate();
			}
		}
	}
	,_updateOrder: null
	,get_updateOrder: function() {
		return this._updateOrder;
	}
	,set_updateOrder: function(value) {
		this._updateOrder = value;
		this._actualUpdateOrder = null;
		return value;
	}
	,_actualUpdateOrder: null
	,actualUpdateOrder: null
	,get_actualUpdateOrder: function() {
		if(this._actualUpdateOrder == null) {
			this._actualUpdateOrder = this._updateOrder.slice();
			var h = this._instances.h;
			var key_h = h;
			var key_keys = Object.keys(h);
			var key_length = key_keys.length;
			var key_current = 0;
			while(key_current < key_length) {
				var key = key_keys[key_current++];
				if(this._actualUpdateOrder.indexOf(key) == -1) {
					this._actualUpdateOrder.push(key);
				}
			}
		}
		return this._actualUpdateOrder;
	}
	,update: function() {
		var _g = 0;
		var _g1 = this.get_actualUpdateOrder();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var b = this._instances.h[key];
			if(b != null) {
				b.update();
			}
		}
	}
	,find: function(id,create) {
		if(create == null) {
			create = true;
		}
		var b = this._instances.h[id];
		if(b == null && create == true) {
			var info = this._registry.h[id];
			if(info != null) {
				b = Type.createInstance(info.cls,[this._component]);
				if(b != null) {
					b.config = info.config;
					b.id = id;
					this._instances.h[id] = b;
					this._actualUpdateOrder = null;
				} else {
					var c = js_Boot.getClass(this._component);
					haxe_Log.trace("WARNING: problem creating behaviour class '" + Std.string(info.cls) + "' for '" + c.__name__ + ":" + id + "'",{ fileName : "haxe/ui/behaviours/Behaviours.hx", lineNumber : 140, className : "haxe.ui.behaviours.Behaviours", methodName : "find"});
				}
			}
		}
		if(b == null) {
			throw haxe_Exception.thrown("behaviour " + id + " not found");
		}
		return b;
	}
	,_cache: null
	,cache: function() {
		this._cache = new haxe_ds_StringMap();
		var h = this._registry.h;
		var registeredKey_h = h;
		var registeredKey_keys = Object.keys(h);
		var registeredKey_length = registeredKey_keys.length;
		var registeredKey_current = 0;
		while(registeredKey_current < registeredKey_length) {
			var registeredKey = registeredKey_keys[registeredKey_current++];
			var v = this._registry.h[registeredKey].defaultValue;
			var instance = this._instances.h[registeredKey];
			if(instance != null) {
				v = instance.get();
			}
			if(v != null) {
				this._cache.h[registeredKey] = v;
			}
		}
	}
	,dispose: function() {
		this._component = null;
		this._registry = null;
		var h = this._instances.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			var inst = this._instances.h[key];
			inst._component = null;
		}
		this._instances = null;
		this._cache = null;
		this._actualUpdateOrder = null;
		this._updateOrder = null;
	}
	,detatch: function() {
		var h = this._instances.h;
		var b_h = h;
		var b_keys = Object.keys(h);
		var b_length = b_keys.length;
		var b_current = 0;
		while(b_current < b_length) {
			var b = b_h[b_keys[b_current++]];
			b.detatch();
		}
		this._instances = new haxe_ds_StringMap();
	}
	,restore: function() {
		if(this._cache == null) {
			return;
		}
		var _g = 0;
		var _g1 = this.get_actualUpdateOrder();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var v = this._cache.h[key];
			if(v != null) {
				this.set(key,v);
			}
		}
		this._cache = null;
	}
	,lock: function() {
	}
	,unlock: function() {
	}
	,setDynamic: function(id,value) {
		this.lock();
		var b = this.find(id);
		var changed = null;
		if(((b) instanceof haxe_ui_behaviours_ValueBehaviour)) {
			var v = haxe_ui_util_Variant.toDynamic((js_Boot.__cast(b , haxe_ui_behaviours_ValueBehaviour))._value);
			changed = v != value;
		}
		b.setDynamic(value);
		var info = this._registry.h[id];
		info.isSet = true;
		this.unlock();
		this.performAutoDispatch(b,changed);
	}
	,set: function(id,value) {
		this.lock();
		var b = this.find(id);
		var changed = null;
		if(((b) instanceof haxe_ui_behaviours_ValueBehaviour)) {
			var v = (js_Boot.__cast(b , haxe_ui_behaviours_ValueBehaviour))._value;
			changed = haxe_ui_util_Variant.neq(v,value);
		}
		b.set(value);
		var info = this._registry.h[id];
		info.isSet = true;
		this.unlock();
		this.performAutoDispatch(b,changed);
	}
	,softSet: function(id,value) {
		var b = this.find(id);
		if(((b) instanceof haxe_ui_behaviours_ValueBehaviour)) {
			(js_Boot.__cast(b , haxe_ui_behaviours_ValueBehaviour))._value = value;
		}
	}
	,ready: function() {
		if(this._autoDispatch == null) {
			return;
		}
		var b = this._autoDispatch.keys();
		while(b.hasNext()) {
			var b1 = b.next();
			var changed = this._autoDispatch.h[b1.__id__];
			this.performAutoDispatch(b1,changed);
		}
		this._autoDispatch = null;
	}
	,_autoDispatch: null
	,performAutoDispatch: function(b,changed) {
		if(this._component.get_isReady() == false) {
			if(this._autoDispatch == null) {
				this._autoDispatch = new haxe_ds_ObjectMap();
			}
			this._autoDispatch.set(b,changed);
			return;
		}
		var autoDispatch = b.getConfigValue("autoDispatch",null);
		if(autoDispatch != null) {
			var arr = autoDispatch.split(".");
			var eventName = arr.pop().toLowerCase();
			var cls = arr.join(".");
			var event = Type.createInstance($hxClasses[cls],[eventName]);
			if(eventName != "change") {
				b._component.dispatch(event);
			} else if(changed == true || changed == null) {
				b._component.dispatch(event);
			}
		}
	}
	,get: function(id) {
		this.lock();
		var b = this.find(id);
		var v = null;
		if(b != null) {
			var info = this._registry.h[id];
			if(info.isSet == false && info.defaultValue != null && js_Boot.getClass(b) == haxe_ui_behaviours_DefaultBehaviour) {
				v = info.defaultValue;
			} else {
				v = b.get();
			}
		}
		this.unlock();
		return v;
	}
	,getDynamic: function(id) {
		this.lock();
		var b = this.find(id);
		var v = null;
		if(b != null) {
			v = b.getDynamic();
		}
		this.unlock();
		return v;
	}
	,call: function(id,param) {
		return this.find(id).call(param);
	}
	,applyDefaults: function() {
		var order = this._updateOrder.slice();
		var h = this._registry.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			if(order.indexOf(key) == -1) {
				order.push(key);
			}
		}
		var _g = 0;
		while(_g < order.length) {
			var key = order[_g];
			++_g;
			var r = this._registry.h[key];
			if(r.defaultValue != null) {
				this.set(key,r.defaultValue);
			}
		}
	}
	,__class__: haxe_ui_behaviours_Behaviours
	,__properties__: {get_actualUpdateOrder:"get_actualUpdateOrder",set_updateOrder:"set_updateOrder",get_updateOrder:"get_updateOrder"}
};
var haxe_ui_behaviours_ValueBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.ValueBehaviour"] = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_ValueBehaviour.__name__ = "haxe.ui.behaviours.ValueBehaviour";
haxe_ui_behaviours_ValueBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_ValueBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	_previousValue: null
	,_value: null
	,get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._previousValue = this._value;
		this._value = value;
	}
	,__class__: haxe_ui_behaviours_ValueBehaviour
});
var haxe_ui_behaviours_IValidatingBehaviour = function() { };
$hxClasses["haxe.ui.behaviours.IValidatingBehaviour"] = haxe_ui_behaviours_IValidatingBehaviour;
haxe_ui_behaviours_IValidatingBehaviour.__name__ = "haxe.ui.behaviours.IValidatingBehaviour";
haxe_ui_behaviours_IValidatingBehaviour.__isInterface__ = true;
haxe_ui_behaviours_IValidatingBehaviour.prototype = {
	validate: null
	,__class__: haxe_ui_behaviours_IValidatingBehaviour
};
var haxe_ui_behaviours_DataBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.DataBehaviour"] = haxe_ui_behaviours_DataBehaviour;
haxe_ui_behaviours_DataBehaviour.__name__ = "haxe.ui.behaviours.DataBehaviour";
haxe_ui_behaviours_DataBehaviour.__interfaces__ = [haxe_ui_behaviours_IValidatingBehaviour];
haxe_ui_behaviours_DataBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_DataBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	_dataInvalid: null
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		this._previousValue = this._value;
		this._value = value;
		this.invalidateData();
	}
	,validate: function() {
		if(this._dataInvalid) {
			this._dataInvalid = false;
			this.validateData();
		}
	}
	,invalidateData: function() {
		this._dataInvalid = true;
		this._component.invalidateComponent("data",false);
	}
	,validateData: function() {
	}
	,__class__: haxe_ui_behaviours_DataBehaviour
});
var haxe_ui_behaviours_DefaultBehaviour = function(component) {
	this._value = null;
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.DefaultBehaviour"] = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_behaviours_DefaultBehaviour.__name__ = "haxe.ui.behaviours.DefaultBehaviour";
haxe_ui_behaviours_DefaultBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_DefaultBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	_value: null
	,get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		haxe_ui_behaviours_Behaviour.prototype.set.call(this,value);
	}
	,__class__: haxe_ui_behaviours_DefaultBehaviour
});
var haxe_ui_behaviours_DynamicBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.DynamicBehaviour"] = haxe_ui_behaviours_DynamicBehaviour;
haxe_ui_behaviours_DynamicBehaviour.__name__ = "haxe.ui.behaviours.DynamicBehaviour";
haxe_ui_behaviours_DynamicBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_DynamicBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	_value: null
	,getDynamic: function() {
		return this._value;
	}
	,setDynamic: function(value) {
		if(value == this._value) {
			return;
		}
		this._value = value;
	}
	,set: function(value) {
		this.setDynamic(haxe_ui_util_Variant.toDynamic(value));
	}
	,__class__: haxe_ui_behaviours_DynamicBehaviour
});
var haxe_ui_behaviours_DynamicDataBehaviour = function(component) {
	haxe_ui_behaviours_DynamicBehaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.DynamicDataBehaviour"] = haxe_ui_behaviours_DynamicDataBehaviour;
haxe_ui_behaviours_DynamicDataBehaviour.__name__ = "haxe.ui.behaviours.DynamicDataBehaviour";
haxe_ui_behaviours_DynamicDataBehaviour.__interfaces__ = [haxe_ui_behaviours_IValidatingBehaviour];
haxe_ui_behaviours_DynamicDataBehaviour.__super__ = haxe_ui_behaviours_DynamicBehaviour;
haxe_ui_behaviours_DynamicDataBehaviour.prototype = $extend(haxe_ui_behaviours_DynamicBehaviour.prototype,{
	_dataInvalid: null
	,setDynamic: function(value) {
		if(value == this.getDynamic()) {
			return;
		}
		this._value = value;
		this.invalidateData();
	}
	,validate: function() {
		if(this._dataInvalid) {
			this._dataInvalid = false;
			this.validateData();
		}
	}
	,invalidateData: function() {
		this._dataInvalid = true;
		this._component.invalidateComponent("data",false);
	}
	,validateData: function() {
	}
	,__class__: haxe_ui_behaviours_DynamicDataBehaviour
});
var haxe_ui_behaviours_InvalidatingBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.InvalidatingBehaviour"] = haxe_ui_behaviours_InvalidatingBehaviour;
haxe_ui_behaviours_InvalidatingBehaviour.__name__ = "haxe.ui.behaviours.InvalidatingBehaviour";
haxe_ui_behaviours_InvalidatingBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_InvalidatingBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		haxe_ui_behaviours_ValueBehaviour.prototype.set.call(this,value);
		this._component.invalidateComponent();
	}
	,__class__: haxe_ui_behaviours_InvalidatingBehaviour
});
var haxe_ui_behaviours_LayoutBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.LayoutBehaviour"] = haxe_ui_behaviours_LayoutBehaviour;
haxe_ui_behaviours_LayoutBehaviour.__name__ = "haxe.ui.behaviours.LayoutBehaviour";
haxe_ui_behaviours_LayoutBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_LayoutBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		haxe_ui_behaviours_ValueBehaviour.prototype.set.call(this,value);
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,__class__: haxe_ui_behaviours_LayoutBehaviour
});
var haxe_ui_layouts_ILayout = function() { };
$hxClasses["haxe.ui.layouts.ILayout"] = haxe_ui_layouts_ILayout;
haxe_ui_layouts_ILayout.__name__ = "haxe.ui.layouts.ILayout";
haxe_ui_layouts_ILayout.__isInterface__ = true;
var haxe_ui_layouts_Layout = function() {
};
$hxClasses["haxe.ui.layouts.Layout"] = haxe_ui_layouts_Layout;
haxe_ui_layouts_Layout.__name__ = "haxe.ui.layouts.Layout";
haxe_ui_layouts_Layout.__interfaces__ = [haxe_ui_layouts_ILayout];
haxe_ui_layouts_Layout.prototype = {
	_component: null
	,get_component: function() {
		return this._component;
	}
	,set_component: function(value) {
		this._component = value;
		if(this._component != null) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(this._component == null) {
			return null;
		}
		return this._component.findComponent(criteria,type,recursive,searchType);
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		if(this._component == null) {
			return null;
		}
		return this._component.findComponents(styleName,type,maxDepth);
	}
	,refresh: function() {
		if(this._component != null && this._component.get_isReady() == true) {
			this.resizeChildren();
			this._component.handlePreReposition();
			this.repositionChildren();
			this._component.handlePostReposition();
		}
	}
	,autoSize: function() {
		if(this.get_component().get_isReady() == false) {
			return false;
		}
		var calculatedWidth = null;
		var calculatedHeight = null;
		if(this.get_component().get_autoWidth() == true || this.get_component().get_autoHeight() == true) {
			var size = this.calcAutoSize();
			if(this.get_component().get_autoWidth() == true) {
				calculatedWidth = size.width;
			}
			if(this.get_component().get_autoHeight() == true) {
				calculatedHeight = size.height;
			}
			this.get_component().resizeComponent(calculatedWidth,calculatedHeight);
		}
		if(calculatedWidth == null) {
			return calculatedHeight != null;
		} else {
			return true;
		}
	}
	,marginTop: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginTop == null) {
			return 0;
		}
		return child.get_style().marginTop;
	}
	,marginLeft: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginLeft == null) {
			return 0;
		}
		return child.get_style().marginLeft;
	}
	,marginBottom: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginBottom == null) {
			return 0;
		}
		return child.get_style().marginBottom;
	}
	,marginRight: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginRight == null) {
			return 0;
		}
		return child.get_style().marginRight;
	}
	,childPaddingTop: function(child) {
		if(child == null || child.get_style() == null || child.get_style().paddingTop == null) {
			return 0;
		}
		return child.get_style().paddingTop;
	}
	,childPaddingLeft: function(child) {
		if(child == null || child.get_style() == null || child.get_style().paddingLeft == null) {
			return 0;
		}
		return child.get_style().paddingLeft;
	}
	,childPaddingBottom: function(child) {
		if(child == null || child.get_style() == null || child.get_style().paddingBottom == null) {
			return 0;
		}
		return child.get_style().paddingBottom;
	}
	,childPaddingRight: function(child) {
		if(child == null || child.get_style() == null || child.get_style().paddingRight == null) {
			return 0;
		}
		return child.get_style().paddingRight;
	}
	,hidden: function(c) {
		if(c == null) {
			c = this.get_component();
		}
		return c.get_hidden();
	}
	,horizontalAlign: function(child) {
		if(child == null || child.get_style() == null || child.get_style().horizontalAlign == null) {
			return "left";
		}
		return child.get_style().horizontalAlign;
	}
	,verticalAlign: function(child) {
		if(child == null || child.get_style() == null || child.get_style().verticalAlign == null) {
			return "top";
		}
		return child.get_style().verticalAlign;
	}
	,fixedMinWidth: function(child) {
		var fixedMinWidth = false;
		if(child != null && child.get_style() != null && child.get_style().minWidth != null) {
			fixedMinWidth = child.get_componentWidth() <= child.get_style().minWidth;
		}
		return fixedMinWidth;
	}
	,fixedMinHeight: function(child) {
		var fixedMinHeight = false;
		if(child != null && child.get_style() != null && child.get_style().minHeight != null) {
			fixedMinHeight = child.get_componentHeight() <= child.get_style().minHeight;
		}
		return fixedMinHeight;
	}
	,borderSize: null
	,get_borderSize: function() {
		if(this._component.get_style() == null) {
			return 0;
		}
		var n = this._component.get_style().get_fullBorderSize();
		var tmp = n > 0;
		return n;
	}
	,paddingLeft: null
	,get_paddingLeft: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingLeft == null) {
			return 0;
		}
		return this._component.get_style().paddingLeft;
	}
	,paddingTop: null
	,get_paddingTop: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingTop == null) {
			return 0;
		}
		return this._component.get_style().paddingTop;
	}
	,paddingBottom: null
	,get_paddingBottom: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingBottom == null) {
			return 0;
		}
		return this._component.get_style().paddingBottom;
	}
	,paddingRight: null
	,get_paddingRight: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingRight == null) {
			return 0;
		}
		return this._component.get_style().paddingRight;
	}
	,horizontalSpacing: null
	,get_horizontalSpacing: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().horizontalSpacing == null) {
			return 0;
		}
		return this._component.get_style().horizontalSpacing;
	}
	,verticalSpacing: null
	,get_verticalSpacing: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().verticalSpacing == null) {
			return 0;
		}
		return this._component.get_style().verticalSpacing;
	}
	,innerWidth: null
	,innerHeight: null
	,get_innerWidth: function() {
		if(this.get_component() == null) {
			return 0;
		}
		return this.get_component().get_componentWidth() - (this.get_paddingLeft() + this.get_paddingRight());
	}
	,get_innerHeight: function() {
		if(this.get_component() == null) {
			return 0;
		}
		var padding = 0;
		if(this.get_component().get_style() != null && this.get_component().get_style().paddingTop != null) {
			padding = this.get_component().get_style().paddingTop + padding;
		}
		if(this.get_component().get_style() != null && this.get_component().get_style().paddingBottom != null) {
			padding = this.get_component().get_style().paddingBottom + padding;
		}
		var icy = this.get_component().get_componentHeight() - padding;
		return icy;
	}
	,resizeChildren: function() {
	}
	,repositionChildren: function() {
	}
	,usableSize: null
	,get_usableSize: function() {
		var ucx = 0;
		if(this._component.get_componentWidth() != null) {
			ucx = this._component.get_componentWidth();
			ucx -= this.get_paddingLeft() + this.get_paddingRight();
		}
		var ucy = 0;
		if(this._component.get_componentHeight() != null) {
			ucy = this._component.get_componentHeight();
			ucy -= this.get_paddingTop() + this.get_paddingBottom();
		}
		return new haxe_ui_geom_Size(ucx,ucy);
	}
	,usableWidth: null
	,get_usableWidth: function() {
		return this.get_usableSize().width;
	}
	,usableHeight: null
	,get_usableHeight: function() {
		return this.get_usableSize().height;
	}
	,calcAutoWidth: function() {
		return this.calcAutoSize().width;
	}
	,calcAutoHeight: function() {
		return this.calcAutoSize().height;
	}
	,calcAutoSize: function(exclusions) {
		var x1 = 16777215;
		var x2 = 0;
		var y1 = 16777215;
		var y2 = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false || this.excluded(exclusions,child) == true) {
				continue;
			}
			if(child.get_percentWidth() == null) {
				if(child.get_left() < x1) {
					x1 = child.get_left();
				}
				if(child.get_componentWidth() != null && child.get_left() + child.get_componentWidth() > x2) {
					x2 = child.get_left() + child.get_componentWidth();
				}
			}
			if(child.get_percentHeight() == null) {
				if(child.get_top() < y1) {
					y1 = child.get_top();
				}
				if(child.get_componentHeight() != null && child.get_top() + child.get_componentHeight() > y2) {
					y2 = child.get_top() + child.get_componentHeight();
				}
			}
		}
		if(x1 == 16777215) {
			x1 = 0;
		}
		if(y1 == 16777215) {
			y1 = 0;
		}
		var w = x2 - x1 + (this.get_paddingLeft() + this.get_paddingRight());
		var h = y2 - y1 + (this.get_paddingTop() + this.get_paddingBottom());
		if(((this) instanceof haxe_ui_layouts_AbsoluteLayout)) {
			w += x1;
			h += y1;
		}
		return new haxe_ui_geom_Size(w,h);
	}
	,excluded: function(exclusions,child) {
		if(exclusions == null || child == null) {
			return false;
		}
		return exclusions.indexOf(child) != -1;
	}
	,__class__: haxe_ui_layouts_Layout
	,__properties__: {get_usableHeight:"get_usableHeight",get_usableWidth:"get_usableWidth",get_usableSize:"get_usableSize",get_innerHeight:"get_innerHeight",get_innerWidth:"get_innerWidth",get_verticalSpacing:"get_verticalSpacing",get_horizontalSpacing:"get_horizontalSpacing",get_paddingRight:"get_paddingRight",get_paddingBottom:"get_paddingBottom",get_paddingTop:"get_paddingTop",get_paddingLeft:"get_paddingLeft",get_borderSize:"get_borderSize",set_component:"set_component",get_component:"get_component"}
};
var haxe_ui_layouts_DefaultLayout = function() {
	this._roundFullWidths = false;
	this._calcFullHeights = false;
	this._calcFullWidths = false;
	haxe_ui_layouts_Layout.call(this);
};
$hxClasses["haxe.ui.layouts.DefaultLayout"] = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_DefaultLayout.__name__ = "haxe.ui.layouts.DefaultLayout";
haxe_ui_layouts_DefaultLayout.__super__ = haxe_ui_layouts_Layout;
haxe_ui_layouts_DefaultLayout.prototype = $extend(haxe_ui_layouts_Layout.prototype,{
	_calcFullWidths: null
	,_calcFullHeights: null
	,_roundFullWidths: null
	,buildWidthRoundingMap: function() {
		var tmp;
		if(this._roundFullWidths != false) {
			var _this = this.get_component();
			tmp = (_this._children == null ? [] : _this._children).length <= 1;
		} else {
			tmp = true;
		}
		if(tmp) {
			return null;
		}
		var map = null;
		var hasNonFullWidth = false;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null || child.get_percentWidth() != 100) {
				hasNonFullWidth = true;
				break;
			}
		}
		if(hasNonFullWidth == false) {
			var remainderWidth = this.get_usableWidth();
			var _this = this.get_component();
			var remainderWidth1 = remainderWidth % (_this._children == null ? [] : _this._children).length;
			if(remainderWidth1 != 0) {
				map = new haxe_ds_ObjectMap();
				var _g = 0;
				var _this = this.get_component();
				var _g1 = _this._children == null ? [] : _this._children;
				while(_g < _g1.length) {
					var child = _g1[_g];
					++_g;
					if(child.get_includeInLayout() == false) {
						continue;
					}
					var n = 0;
					if(remainderWidth1 > 0) {
						n = 1;
						--remainderWidth1;
					}
					map.set(child,n);
				}
			}
		}
		return map;
	}
	,resizeChildren: function() {
		var usableSize = this.get_usableSize();
		var percentWidth = 100;
		var percentHeight = 100;
		var fullWidthValue = 100;
		var fullHeightValue = 100;
		if(this._calcFullWidths == true || this._calcFullHeights == true) {
			var n1 = 0;
			var n2 = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(this._calcFullWidths == true && child.get_percentWidth() != null && child.get_percentWidth() == 100) {
					++n1;
				}
				if(this._calcFullHeights == true && child.get_percentHeight() != null && child.get_percentHeight() == 100) {
					++n2;
				}
			}
			if(n1 > 0) {
				fullWidthValue = 100 / n1;
			}
			if(n2 > 0) {
				fullHeightValue = 100 / n2;
			}
		}
		var childRoundingWidth = this.buildWidthRoundingMap();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				var childPercentWidth = child.get_percentWidth();
				if(childPercentWidth == 100) {
					childPercentWidth = fullWidthValue;
				}
				cx = usableSize.width * childPercentWidth / percentWidth - this.marginLeft(child) - this.marginRight(child);
				if(childRoundingWidth != null && childRoundingWidth.h.__keys__[child.__id__] != null) {
					var roundDirection = childRoundingWidth.h[child.__id__];
					if(roundDirection == 0) {
						cx = Math.floor(cx);
					} else if(roundDirection == 1) {
						cx = Math.ceil(cx);
					}
				}
			}
			if(child.get_percentHeight() != null) {
				var childPercentHeight = child.get_percentHeight();
				if(childPercentHeight == 100) {
					childPercentHeight = fullHeightValue;
				}
				cy = usableSize.height * childPercentHeight / percentHeight - this.marginTop(child) - this.marginBottom(child);
			}
			if(this.fixedMinWidth(child) && child.get_percentWidth() != null) {
				percentWidth -= child.get_percentWidth();
			}
			if(this.fixedMinHeight(child) && child.get_percentHeight() != null) {
				percentHeight -= child.get_percentHeight();
			}
			child.resizeComponent(cx,cy);
		}
	}
	,repositionChildren: function() {
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var xpos = 0;
			var ypos = 0;
			switch(this.horizontalAlign(child)) {
			case "center":
				xpos = (this.get_component().get_componentWidth() - child.get_componentWidth()) / 2 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xpos = this.get_component().get_componentWidth() - (child.get_componentWidth() + this.get_paddingRight() + this.marginRight(child));
				break;
			default:
				xpos = this.get_paddingLeft() + this.marginLeft(child);
			}
			switch(this.verticalAlign(child)) {
			case "bottom":
				ypos = this.get_component().get_componentHeight() - (child.get_componentHeight() + this.get_paddingBottom() + this.marginBottom(child));
				break;
			case "center":
				ypos = (this.get_component().get_componentHeight() - child.get_componentHeight()) / 2 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				ypos = this.get_paddingTop() + this.marginTop(child);
			}
			child.moveComponent(xpos,ypos);
		}
	}
	,__class__: haxe_ui_layouts_DefaultLayout
});
var haxe_ui_components_ButtonLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.ButtonLayout"] = haxe_ui_components_ButtonLayout;
haxe_ui_components_ButtonLayout.__name__ = "haxe.ui.components.ButtonLayout";
haxe_ui_components_ButtonLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_ButtonLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	iconPosition: null
	,get_iconPosition: function() {
		if(this.get_component().get_style() == null || this.get_component().get_style().iconPosition == null) {
			return "left";
		}
		return this.get_component().get_style().iconPosition;
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		if(this._component.get_autoWidth() == false) {
			var label = this.get_component().findComponent(null,haxe_ui_components_Label,false);
			var ucx = this.get_usableSize();
			var cx = ucx.width;
			if(label != null) {
				label.set_width(cx);
			}
			var itemRenderer = this.get_component().findComponent(null,haxe_ui_core_ItemRenderer);
			if(itemRenderer != null) {
				itemRenderer.set_width(cx);
			}
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var icon = this.get_component().findComponent("button-icon",null,false);
		if(icon != null && (this.get_iconPosition() == "far-right" || this.get_iconPosition() == "far-left" || this.get_iconPosition() == "left" || this.get_iconPosition() == "right")) {
			size.width -= icon.get_width() + this.get_verticalSpacing();
		}
		return size;
	}
	,calcAutoSize: function(exclusions) {
		var exclusions = [];
		var itemRenderer = this.get_component().findComponent(null,haxe_ui_core_ItemRenderer);
		var icon = this.get_component().findComponent("button-icon",null,false);
		var tmp;
		if(itemRenderer != null) {
			var icon1 = this.get_component().findComponent("button-icon",null,false);
			tmp = icon1 != null && (this.get_iconPosition() == "far-right" || this.get_iconPosition() == "far-left" || this.get_iconPosition() == "left" || this.get_iconPosition() == "right");
		} else {
			tmp = false;
		}
		if(tmp) {
			exclusions.push(icon);
		}
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		var tmp;
		if(itemRenderer != null) {
			var icon1 = this.get_component().findComponent("button-icon",null,false);
			tmp = icon1 != null && (this.get_iconPosition() == "far-right" || this.get_iconPosition() == "far-left" || this.get_iconPosition() == "left" || this.get_iconPosition() == "right");
		} else {
			tmp = false;
		}
		if(tmp) {
			size.width += icon.get_width() + this.get_verticalSpacing();
		}
		return size;
	}
	,isIconRelevant: function() {
		var icon = this.get_component().findComponent("button-icon",null,false);
		if(icon != null) {
			if(!(this.get_iconPosition() == "far-right" || this.get_iconPosition() == "far-left" || this.get_iconPosition() == "left")) {
				return this.get_iconPosition() == "right";
			} else {
				return true;
			}
		} else {
			return false;
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var label = this.get_component().findComponent(null,haxe_ui_components_Label,false);
		if(label != null && label.get_hidden() == true) {
			label = null;
		}
		var icon = this.get_component().findComponent("button-icon",null,false);
		if(icon != null && icon.get_hidden() == true) {
			icon = null;
		}
		switch(this.get_iconPosition()) {
		case "far-left":
			if(label != null && icon != null) {
				var x = this.get_paddingLeft();
				if(this.get_iconPosition() == "far-left") {
					icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
					x += this.get_horizontalSpacing() + icon.get_componentWidth();
					label.set_left(x + this.marginLeft(label) - this.marginRight(label));
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.get_paddingLeft());
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0);
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "far-right":
			if(label != null && icon != null) {
				var cx = label.get_componentWidth() + icon.get_componentWidth() + this.get_horizontalSpacing();
				var x = this.get_component().get_componentWidth() / 2 - cx / 2 | 0;
				if(this.get_iconPosition() == "far-right") {
					if(cx + this.get_paddingLeft() + this.get_paddingRight() < this.get_component().get_componentWidth()) {
						label.set_left(this.get_paddingLeft());
						x += this.get_horizontalSpacing() + label.get_componentWidth();
						icon.set_left(this.get_component().get_componentWidth() - icon.get_componentWidth() - this.get_paddingRight() + this.marginLeft(icon) - this.marginRight(icon));
					} else {
						label.set_left(this.get_paddingLeft());
						x += this.get_horizontalSpacing() + label.get_componentWidth();
						icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
					}
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.get_paddingLeft());
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() - icon.get_componentWidth() - this.get_paddingRight() + this.marginLeft(icon) - this.marginRight(icon));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "left":case "right":
			if(label != null && icon != null) {
				var cx = label.get_componentWidth() + icon.get_componentWidth() + this.get_horizontalSpacing();
				var x = this.get_component().get_componentWidth() / 2 - cx / 2 | 0;
				if((js_Boot.__cast(this.get_component() , haxe_ui_components_Button)).get_textAlign() == "left") {
					x = this.get_paddingLeft();
				}
				if(this.get_iconPosition() == "right") {
					label.set_left(x + this.marginLeft(label) - this.marginRight(label));
					x += this.get_horizontalSpacing() + label.get_componentWidth();
					icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
				} else {
					icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
					x += this.get_horizontalSpacing() + icon.get_componentWidth();
					label.set_left(x + this.marginLeft(label) - this.marginRight(label));
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.getTextAlignPos(label,this.get_component().get_componentWidth()));
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0);
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "bottom":case "top":
			if(label != null && icon != null) {
				var cy = label.get_componentHeight() + icon.get_componentHeight() + this.get_verticalSpacing();
				var y = this.get_component().get_componentHeight() / 2 - cy / 2 | 0;
				if(this.get_iconPosition() == "bottom") {
					label.set_top(y + this.marginTop(label) - this.marginBottom(label));
					y += this.get_verticalSpacing() + label.get_componentHeight();
					icon.set_top(y + this.marginTop(icon) - this.marginBottom(icon));
				} else {
					icon.set_top(y + this.marginTop(icon) - this.marginBottom(icon));
					y += this.get_verticalSpacing() + icon.get_componentHeight();
					label.set_top(y + this.marginTop(label) - this.marginBottom(label));
				}
				label.set_left(this.getTextAlignPos(label,this.get_component().get_componentWidth()));
				icon.set_left((this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0) + this.marginLeft(icon) - this.marginRight(icon));
			} else if(label != null) {
				label.set_left((this.get_component().get_componentWidth() / 2 - label.get_componentWidth() / 2 | 0) + this.marginLeft(label) - this.marginRight(label));
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left((this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0) + this.marginLeft(icon) - this.marginRight(icon));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		}
	}
	,getTextAlignPos: function(label,usableWidth) {
		switch((js_Boot.__cast(this.get_component() , haxe_ui_components_Button)).get_textAlign()) {
		case "left":
			return this.marginLeft(label) + this.get_paddingLeft();
		case "right":
			return usableWidth - label.get_componentWidth() - this.marginRight(label) - this.get_paddingRight();
		default:
			return (usableWidth / 2 - label.get_componentWidth() / 2 | 0) + this.marginLeft(label) - this.marginRight(label);
		}
	}
	,__class__: haxe_ui_components_ButtonLayout
	,__properties__: $extend(haxe_ui_layouts_DefaultLayout.prototype.__properties__,{get_iconPosition:"get_iconPosition"})
});
var haxe_ui_components__$Button_GroupBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.GroupBehaviour"] = haxe_ui_components__$Button_GroupBehaviour;
haxe_ui_components__$Button_GroupBehaviour.__name__ = "haxe.ui.components._Button.GroupBehaviour";
haxe_ui_components__$Button_GroupBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_GroupBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		haxe_ui_components_ButtonGroups.get_instance().add(haxe_ui_util_Variant.toString(this._value),this._component);
	}
	,__class__: haxe_ui_components__$Button_GroupBehaviour
});
var haxe_ui_components__$Button_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.TextBehaviour"] = haxe_ui_components__$Button_TextBehaviour;
haxe_ui_components__$Button_TextBehaviour.__name__ = "haxe.ui.components._Button.TextBehaviour";
haxe_ui_components__$Button_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		var itemRenderer = this._component.findComponent(null,haxe_ui_core_ItemRenderer);
		if(itemRenderer == null) {
			return haxe_ui_behaviours_DataBehaviour.prototype.get.call(this);
		} else if(!this._component.get_isReady()) {
			return haxe_ui_behaviours_DataBehaviour.prototype.get.call(this);
		} else {
			var data = itemRenderer.get_data();
			var text = null;
			if(data != null) {
				if(Type.typeof(data) == ValueType.TObject) {
					text = data.text;
					if(text == null) {
						text = data.value;
					}
				} else {
					text = Std.string(data);
				}
			}
			return haxe_ui_util_Variant.fromString(text);
		}
	}
	,validateData: function() {
		var itemRenderer = this._component.findComponent(null,haxe_ui_core_ItemRenderer);
		if(itemRenderer != null) {
			var data = itemRenderer.get_data();
			if(data == null) {
				data = { };
			} else {
				data = Reflect.copy(data);
			}
			data.text = haxe_ui_util_Variant.toString(this._value);
			itemRenderer.set_data(data);
		} else {
			var label = this._component.findComponent(null,haxe_ui_components_Label,false);
			if(label == null) {
				label = new haxe_ui_components_Label();
				label.set_id("button-label");
				label.set_scriptAccess(false);
				this._component.addComponent(label);
				var _this = this._component;
				var force = true;
				if(force == null) {
					force = false;
				}
				_this.invalidateComponent("style",false);
				if(force == true) {
					_this._style = null;
				}
			}
			label.set_text(haxe_ui_util_Variant.toString(this._value));
		}
	}
	,__class__: haxe_ui_components__$Button_TextBehaviour
});
var haxe_ui_components__$Button_IconBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.IconBehaviour"] = haxe_ui_components__$Button_IconBehaviour;
haxe_ui_components__$Button_IconBehaviour.__name__ = "haxe.ui.components._Button.IconBehaviour";
haxe_ui_components__$Button_IconBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_IconBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var icon = this._component.findComponent("button-icon",null,false);
		if((this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) && icon != null) {
			this._component.get_customStyle().icon = null;
			this._component.removeComponent(icon);
			return;
		}
		if(icon == null) {
			icon = new haxe_ui_components_Image();
			icon.addClass("icon");
			icon.set_id("button-icon");
			icon.set_scriptAccess(false);
			this._component.addComponentAt(icon,0);
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		icon.set_resource(this._value);
	}
	,__class__: haxe_ui_components__$Button_IconBehaviour
});
var haxe_ui_components__$Button_ToggleBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.ToggleBehaviour"] = haxe_ui_components__$Button_ToggleBehaviour;
haxe_ui_components__$Button_ToggleBehaviour.__name__ = "haxe.ui.components._Button.ToggleBehaviour";
haxe_ui_components__$Button_ToggleBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Button_ToggleBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	_value: null
	,get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(this._value,value)) {
			return;
		}
		this._value = value;
		var button = js_Boot.__cast(this._component , haxe_ui_components_Button);
		if(haxe_ui_util_Variant.eq(value,haxe_ui_util_Variant.fromBool(false))) {
			button.set_selected(false);
		}
		button.registerInternalEvents(button._internalEventsClass,true);
	}
	,__class__: haxe_ui_components__$Button_ToggleBehaviour
});
var haxe_ui_components__$Button_SelectedBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.SelectedBehaviour"] = haxe_ui_components__$Button_SelectedBehaviour;
haxe_ui_components__$Button_SelectedBehaviour.__name__ = "haxe.ui.components._Button.SelectedBehaviour";
haxe_ui_components__$Button_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_SelectedBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var button = js_Boot.__cast(this._component , haxe_ui_components_Button);
		if(button.get_toggle() == false) {
			return;
		}
		haxe_ui_components_ButtonGroups.get_instance().setSelection(button,haxe_ui_util_Variant.toBool(this._value));
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(false))) {
			button.removeClass(":down",true,true);
		} else {
			button.addClass(":down",true,true);
		}
		var events = js_Boot.__cast(button._internalEvents , haxe_ui_components_ButtonEvents);
		if(button.hitTest(haxe_ui_core_Screen.get_instance().currentMouseX,haxe_ui_core_Screen.get_instance().currentMouseY)) {
			button.addClass(":hover",true,events.recursiveStyling);
		} else {
			button.removeClass(":hover",true,events.recursiveStyling);
		}
		events.dispatchChanged();
	}
	,__class__: haxe_ui_components__$Button_SelectedBehaviour
});
var haxe_ui_events_Events = function(target) {
	this._target = target;
};
$hxClasses["haxe.ui.events.Events"] = haxe_ui_events_Events;
haxe_ui_events_Events.__name__ = "haxe.ui.events.Events";
haxe_ui_events_Events.prototype = {
	_target: null
	,register: function() {
	}
	,unregister: function() {
	}
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this.hasEvent(type,listener) == false) {
			this._target.registerEvent(type,listener,priority);
		}
	}
	,hasEvent: function(type,listener) {
		return this._target.hasEvent(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		this._target.unregisterEvent(type,listener);
	}
	,dispatch: function(event) {
		this._target.dispatch(event);
	}
	,__class__: haxe_ui_events_Events
};
var haxe_ui_components_ButtonEvents = function(button) {
	this.recursiveStyling = true;
	this._repeatInterval = 0;
	this._repeater = false;
	this._down = false;
	haxe_ui_events_Events.call(this,button);
	this._button = button;
};
$hxClasses["haxe.ui.components.ButtonEvents"] = haxe_ui_components_ButtonEvents;
haxe_ui_components_ButtonEvents.__name__ = "haxe.ui.components.ButtonEvents";
haxe_ui_components_ButtonEvents.__super__ = haxe_ui_events_Events;
haxe_ui_components_ButtonEvents.prototype = $extend(haxe_ui_events_Events.prototype,{
	_button: null
	,_down: null
	,_repeatTimer: null
	,_repeater: null
	,_repeatInterval: null
	,recursiveStyling: null
	,register: function() {
		if(this.hasEvent("mouseover",$bind(this,this.onMouseOver)) == false) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(this.hasEvent("mouseout",$bind(this,this.onMouseOut)) == false) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this.hasEvent("move",$bind(this,this.onMove)) == false) {
			this.registerEvent("move",$bind(this,this.onMove));
		}
		if(this.hasEvent("actionstart",$bind(this,this.onActionStart)) == false) {
			this.registerEvent("actionstart",$bind(this,this.onActionStart));
		}
		if(this.hasEvent("actionend",$bind(this,this.onActionEnd)) == false) {
			this.registerEvent("actionend",$bind(this,this.onActionEnd));
		}
		if(this._button.get_toggle() == true) {
			this.registerEvent("click",$bind(this,this.onMouseClick),100);
		}
	}
	,unregister: function() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("click",$bind(this,this.onMouseClick));
		this.unregisterEvent("move",$bind(this,this.onMove));
		this.unregisterEvent("actionstart",$bind(this,this.onActionStart));
		this.unregisterEvent("actionend",$bind(this,this.onActionEnd));
	}
	,onMouseOver: function(event) {
		if(this._button.get_toggle() == true && this._button.classes.indexOf(":down") != -1) {
			return;
		}
		if(event.buttonDown == false || this._down == false) {
			this._button.addClass(":hover",true,this.recursiveStyling);
		} else {
			this._button.addClass(":down",true,this.recursiveStyling);
		}
	}
	,onMouseOut: function(event) {
		if(this._button.get_toggle() == true && this._button.get_selected() == true) {
			return;
		}
		if(this._button.get_remainPressed() == false) {
			this._button.removeClass(":down",true,this.recursiveStyling);
		}
		this._button.removeClass(":hover",true,this.recursiveStyling);
	}
	,onMouseDown: function(event) {
		var _gthis = this;
		this._button.set_focus(true);
		if(this._button.get_repeater() == true && this._repeatInterval == 0) {
			this._repeatInterval = this._button.get_easeInRepeater() ? this._button.get_repeatInterval() * 2 : this._button.get_repeatInterval();
		}
		this._down = true;
		this._button.addClass(":down",true,this.recursiveStyling);
		this._button.get_screen().registerEvent("mouseup",$bind(this,this.onMouseUp));
		if(this._repeater == true && this._repeatInterval == this._button.get_repeatInterval()) {
			this._repeatTimer = new haxe_ui_util_Timer(this._repeatInterval,$bind(this,this.onRepeatTimer));
		} else if(this._button.get_repeater() == true) {
			if(this._repeatTimer != null) {
				this._repeatTimer.stop();
				this._repeatTimer = null;
			}
			haxe_ui_util_Timer.delay(function() {
				if(_gthis._repeater == true && _gthis._repeatTimer == null) {
					if(_gthis._button.get_easeInRepeater() == true && _gthis._repeatInterval > _gthis._button.get_repeatInterval()) {
						var tmp = _gthis._repeatInterval - (_gthis._repeatInterval - _gthis._button.get_repeatInterval()) / 2 | 0;
						_gthis._repeatInterval = tmp;
						_gthis.onRepeatTimer();
					}
					_gthis.onMouseDown(event);
				}
			},this._repeatInterval);
		}
		this._repeater = this._button.get_repeater();
	}
	,onMouseUp: function(event) {
		this._down = this._repeater = false;
		this._repeatInterval = this._button.get_easeInRepeater() ? this._button.get_repeatInterval() * 2 : this._button.get_repeatInterval();
		this._button.get_screen().unregisterEvent("mouseup",$bind(this,this.onMouseUp));
		if(this._button.get_toggle() == true) {
			return;
		}
		this._button.removeClass(":down",true,this.recursiveStyling);
		var over = this._button.hitTest(event.screenX,event.screenY);
		if(event.touchEvent == false && over == true) {
			this._button.addClass(":hover",true,this.recursiveStyling);
		} else if(over == false) {
			this._button.removeClass(":hover",true,this.recursiveStyling);
		}
		if(this._repeatTimer != null) {
			this._repeatTimer.stop();
			this._repeatTimer = null;
		}
	}
	,onMove: function(event) {
		var over = this._button.hitTest(haxe_ui_core_Screen.get_instance().currentMouseX,haxe_ui_core_Screen.get_instance().currentMouseY);
		if(over == true) {
			this._button.addClass(":hover",true,this.recursiveStyling);
		} else if(over == false) {
			this._button.removeClass(":hover",true,this.recursiveStyling);
		}
	}
	,onRepeatTimer: function() {
		if(this._button.classes.indexOf(":hover") != -1 && this._down == true) {
			var event = new haxe_ui_events_MouseEvent("click");
			this._button.dispatch(event);
		}
	}
	,onMouseClick: function(event) {
		this._button.set_selected(!this._button.get_selected());
		if(this._button.get_selected() == false) {
			this._button.removeClass(":down",true,this.recursiveStyling);
		}
		if(this._button.hitTest(event.screenX,event.screenY)) {
			this._button.addClass(":hover",true,this.recursiveStyling);
		}
	}
	,dispatchChanged: function() {
		this._button.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,press: function() {
		this._down = true;
		if(this._button.get_toggle() == true) {
			this._button.addClass(":down",true,this.recursiveStyling);
		} else {
			this._button.addClass(":down",true,this.recursiveStyling);
		}
	}
	,release: function() {
		if(this._down == true) {
			this._down = false;
			if(this._button.get_toggle() == true) {
				this._button.set_selected(!this._button.get_selected());
				this._button.dispatch(new haxe_ui_events_MouseEvent("click"));
			} else {
				this._button.removeClass(":down",true,this.recursiveStyling);
				this._button.dispatch(new haxe_ui_events_MouseEvent("click"));
			}
		}
	}
	,onActionStart: function(event) {
		switch(event.action) {
		case "actionConfirm":case "actionPress":
			this.press();
			break;
		default:
		}
	}
	,onActionEnd: function(event) {
		switch(event.action) {
		case "actionConfirm":case "actionPress":
			this.release();
			break;
		default:
		}
	}
	,__class__: haxe_ui_components_ButtonEvents
});
var haxe_ui_core_CompositeBuilder = function(component) {
	this._component = component;
};
$hxClasses["haxe.ui.core.CompositeBuilder"] = haxe_ui_core_CompositeBuilder;
haxe_ui_core_CompositeBuilder.__name__ = "haxe.ui.core.CompositeBuilder";
haxe_ui_core_CompositeBuilder.prototype = {
	_component: null
	,create: function() {
	}
	,destroy: function() {
	}
	,onInitialize: function() {
	}
	,onReady: function() {
	}
	,show: function() {
		return false;
	}
	,hide: function() {
		return false;
	}
	,get_numComponents: function() {
		return null;
	}
	,get_cssName: function() {
		return null;
	}
	,addComponent: function(child) {
		return null;
	}
	,addComponentAt: function(child,index) {
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,removeAllComponents: function(dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return false;
	}
	,getComponentIndex: function(child) {
		return -2147483648;
	}
	,setComponentIndex: function(child,index) {
		return null;
	}
	,getComponentAt: function(index) {
		return null;
	}
	,validateComponentLayout: function() {
		return false;
	}
	,validateComponentData: function() {
	}
	,applyStyle: function(style) {
	}
	,onComponentAdded: function(child) {
	}
	,onComponentRemoved: function(child) {
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		var _g = 0;
		var _g1 = this.get_numComponents();
		while(_g < _g1) {
			var i = _g++;
			var c = this.getComponentAt(i);
			var match = c.findComponent(criteria,type,recursive,searchType);
			if(match != null) {
				return match;
			}
		}
		return null;
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		return null;
	}
	,isComponentClipped: null
	,get_isComponentClipped: function() {
		return this._component.get_componentClipRect() != null;
	}
	,__class__: haxe_ui_core_CompositeBuilder
	,__properties__: {get_isComponentClipped:"get_isComponentClipped",get_cssName:"get_cssName",get_numComponents:"get_numComponents"}
};
var haxe_ui_components_ButtonBuilder = function(button) {
	haxe_ui_core_CompositeBuilder.call(this,button);
	this._button = button;
};
$hxClasses["haxe.ui.components.ButtonBuilder"] = haxe_ui_components_ButtonBuilder;
haxe_ui_components_ButtonBuilder.__name__ = "haxe.ui.components.ButtonBuilder";
haxe_ui_components_ButtonBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components_ButtonBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_button: null
	,onReady: function() {
		haxe_ui_core_CompositeBuilder.prototype.onReady.call(this);
		var renderer = this._button.findComponent(null,haxe_ui_core_ItemRenderer);
		if(renderer != null) {
			if(!this._button.get_autoWidth()) {
				renderer.removeClass("auto-size");
			} else {
				renderer.addClass("auto-size");
			}
		}
	}
	,applyStyle: function(style) {
		haxe_ui_core_CompositeBuilder.prototype.applyStyle.call(this,style);
		var c = this._component.findComponent("button-label",haxe_ui_core_Component,false);
		if(c != null) {
			var invalidate = false;
			if(style.color != null && c.get_customStyle().color != style.color) {
				c.get_customStyle().color = style.color;
				invalidate = true;
			}
			if(style.fontName != null && c.get_customStyle().fontName != style.fontName) {
				c.get_customStyle().fontName = style.fontName;
				invalidate = true;
			}
			if(style.fontSize != null && c.get_customStyle().fontSize != style.fontSize) {
				c.get_customStyle().fontSize = style.fontSize;
				invalidate = true;
			}
			if(style.cursor != null && c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(style.textAlign != null && c.get_customStyle().textAlign != style.textAlign) {
				c.get_customStyle().textAlign = style.textAlign;
				invalidate = true;
			}
			if(style.fontBold != null && c.get_customStyle().fontBold != style.fontBold) {
				c.get_customStyle().fontBold = style.fontBold;
				invalidate = true;
			}
			if(style.fontUnderline != null && c.get_customStyle().fontUnderline != style.fontUnderline) {
				c.get_customStyle().fontUnderline = style.fontUnderline;
				invalidate = true;
			}
			if(style.fontItalic != null && c.get_customStyle().fontItalic != style.fontItalic) {
				c.get_customStyle().fontItalic = style.fontItalic;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
		var c = this._component.findComponent("button-icon",haxe_ui_core_Component,false);
		if(c != null) {
			var invalidate = false;
			if(style.cursor != null && c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
		var list = this._component.findComponents(null,haxe_ui_components_Label,16777215);
		var _g = 0;
		while(_g < list.length) {
			var c = list[_g];
			++_g;
			var invalidate = false;
			if(style.color != null && c.get_customStyle().color != style.color) {
				c.get_customStyle().color = style.color;
				invalidate = true;
			}
			if(style.fontName != null && c.get_customStyle().fontName != style.fontName) {
				c.get_customStyle().fontName = style.fontName;
				invalidate = true;
			}
			if(style.fontSize != null && c.get_customStyle().fontSize != style.fontSize) {
				c.get_customStyle().fontSize = style.fontSize;
				invalidate = true;
			}
			if(style.cursor != null && c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(style.textAlign != null && c.get_customStyle().textAlign != style.textAlign) {
				c.get_customStyle().textAlign = style.textAlign;
				invalidate = true;
			}
			if(style.fontBold != null && c.get_customStyle().fontBold != style.fontBold) {
				c.get_customStyle().fontBold = style.fontBold;
				invalidate = true;
			}
			if(style.fontUnderline != null && c.get_customStyle().fontUnderline != style.fontUnderline) {
				c.get_customStyle().fontUnderline = style.fontUnderline;
				invalidate = true;
			}
			if(style.fontItalic != null && c.get_customStyle().fontItalic != style.fontItalic) {
				c.get_customStyle().fontItalic = style.fontItalic;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
		if(style.icon != null) {
			this._button.set_icon(style.icon);
		}
	}
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_core_ItemRenderer)) {
			var existingRenderer = this._component.findComponent(null,haxe_ui_core_ItemRenderer);
			if(existingRenderer != null) {
				this._component.removeComponent(existingRenderer);
			}
			child.addClass("auto-size");
		}
		return null;
	}
	,__class__: haxe_ui_components_ButtonBuilder
});
var haxe_ui_components_ButtonGroups = function() {
	this._groups = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.components.ButtonGroups"] = haxe_ui_components_ButtonGroups;
haxe_ui_components_ButtonGroups.__name__ = "haxe.ui.components.ButtonGroups";
haxe_ui_components_ButtonGroups.__properties__ = {get_instance:"get_instance"};
haxe_ui_components_ButtonGroups.get_instance = function() {
	if(haxe_ui_components_ButtonGroups._instance == null) {
		haxe_ui_components_ButtonGroups._instance = new haxe_ui_components_ButtonGroups();
	}
	return haxe_ui_components_ButtonGroups._instance;
};
haxe_ui_components_ButtonGroups.prototype = {
	_groups: null
	,get: function(name) {
		return this._groups.h[name];
	}
	,set: function(name,buttons) {
		this._groups.h[name] = buttons;
	}
	,add: function(name,button) {
		var arr = this.get(name);
		if(arr == null) {
			arr = [];
		}
		if(arr.indexOf(button) == -1) {
			arr.push(button);
		}
		this.set(name,arr);
	}
	,remove: function(name,button) {
		var arr = this.get(name);
		if(arr == null) {
			return;
		}
		HxOverrides.remove(arr,button);
		if(arr.length == 0) {
			var _this = this._groups;
			if(Object.prototype.hasOwnProperty.call(_this.h,name)) {
				delete(_this.h[name]);
			}
		}
	}
	,reset: function(name) {
		var arr = this.get(name);
		if(arr == null) {
			return;
		}
		var selection = null;
		var _g = 0;
		while(_g < arr.length) {
			var item = arr[_g];
			++_g;
			if(item.get_selected() == true) {
				selection = item;
				break;
			}
		}
		if(selection == null) {
			return;
		}
		haxe_ui_components_ButtonGroups.get_instance().setSelection(selection,false,true);
	}
	,setSelection: function(button,value,allowDeselection) {
		if(allowDeselection == null) {
			allowDeselection = false;
		}
		if(button.get_componentGroup() != null && value == false && allowDeselection == false) {
			var arr = haxe_ui_components_ButtonGroups.get_instance().get(button.get_componentGroup());
			var hasSelection = false;
			if(arr != null) {
				var _g = 0;
				while(_g < arr.length) {
					var b = arr[_g];
					++_g;
					if(b != button && b.get_selected() == true) {
						hasSelection = true;
						break;
					}
				}
			}
			if(hasSelection == false && allowDeselection == false) {
				button.behaviours.softSet("selected",haxe_ui_util_Variant.fromBool(true));
				return;
			}
		}
		if(button.get_componentGroup() != null && value == true) {
			var arr = haxe_ui_components_ButtonGroups.get_instance().get(button.get_componentGroup());
			if(arr != null) {
				var _g = 0;
				while(_g < arr.length) {
					var b = arr[_g];
					++_g;
					if(b != button) {
						b.set_selected(false);
					}
				}
			}
		}
		if(allowDeselection == true && value == false) {
			button.behaviours.softSet("selected",haxe_ui_util_Variant.fromBool(false));
		}
	}
	,__class__: haxe_ui_components_ButtonGroups
};
var haxe_ui_events_UIEvent = function(type,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	this.relatedEvent = null;
	this.type = type;
	this.bubble = bubble;
	this.data = data;
	this.canceled = false;
};
$hxClasses["haxe.ui.events.UIEvent"] = haxe_ui_events_UIEvent;
haxe_ui_events_UIEvent.__name__ = "haxe.ui.events.UIEvent";
haxe_ui_events_UIEvent.__super__ = haxe_ui_backend_EventImpl;
haxe_ui_events_UIEvent.prototype = $extend(haxe_ui_backend_EventImpl.prototype,{
	bubble: null
	,type: null
	,target: null
	,data: null
	,canceled: null
	,relatedEvent: null
	,value: null
	,previousValue: null
	,cancel: function() {
		haxe_ui_backend_EventImpl.prototype.cancel.call(this);
		this.canceled = true;
	}
	,clone: function() {
		var c = new haxe_ui_events_UIEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.value = this.value;
		c.previousValue = this.previousValue;
		c.canceled = this.canceled;
		c.relatedEvent = this.relatedEvent;
		this.postClone(c);
		return c;
	}
	,copyFrom: function(c) {
	}
	,__class__: haxe_ui_events_UIEvent
});
var haxe_ui_components_CalendarEvent = function(type,bubble,data) {
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.components.CalendarEvent"] = haxe_ui_components_CalendarEvent;
haxe_ui_components_CalendarEvent.__name__ = "haxe.ui.components.CalendarEvent";
haxe_ui_components_CalendarEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_components_CalendarEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_components_CalendarEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_components_CalendarEvent
});
var haxe_ui_containers_Grid = function() {
	this._columns = -1;
	haxe_ui_containers_Box.call(this);
	if(this._columns == -1) {
		this.set_columns(2);
	}
};
$hxClasses["haxe.ui.containers.Grid"] = haxe_ui_containers_Grid;
haxe_ui_containers_Grid.__name__ = "haxe.ui.containers.Grid";
haxe_ui_containers_Grid.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Grid.prototype = $extend(haxe_ui_containers_Box.prototype,{
	_columns: null
	,get_columns: function() {
		return (js_Boot.__cast(this._layout , haxe_ui_layouts_VerticalGridLayout)).get_columns();
	}
	,set_columns: function(value) {
		if(this._layout == null) {
			this.set_layout(this.createLayout());
		}
		(js_Boot.__cast(this._layout , haxe_ui_layouts_VerticalGridLayout)).set_columns(value);
		this._columns = value;
		return value;
	}
	,createDefaults: function() {
		haxe_ui_containers_Box.prototype.createDefaults.call(this);
		this._defaultLayoutClass = haxe_ui_layouts_VerticalGridLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		c.set_columns(this.get_columns());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Grid();
	}
	,__class__: haxe_ui_containers_Grid
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_columns:"set_columns",get_columns:"get_columns"})
});
var haxe_ui_components_Calendar = function() {
	haxe_ui_containers_Grid.call(this);
};
$hxClasses["haxe.ui.components.Calendar"] = haxe_ui_components_Calendar;
haxe_ui_components_Calendar.__name__ = "haxe.ui.components.Calendar";
haxe_ui_components_Calendar.__super__ = haxe_ui_containers_Grid;
haxe_ui_components_Calendar.prototype = $extend(haxe_ui_containers_Grid.prototype,{
	previousMonth: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("previousMonth",null);
	}
	,nextMonth: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("nextMonth",null);
	}
	,previousYear: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("previousYear",null);
	}
	,nextYear: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("nextYear",null);
	}
	,createDefaults: function() {
		haxe_ui_containers_Grid.prototype.createDefaults.call(this);
		this._defaultLayoutClass = haxe_ui_components__$Calendar_Layout;
	}
	,registerComposite: function() {
		haxe_ui_containers_Grid.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$Calendar_Events;
		this._compositeBuilderClass = haxe_ui_components__$Calendar_Builder;
		this._defaultLayoutClass = haxe_ui_components__$Calendar_Layout;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Grid.prototype.registerBehaviours.call(this);
		this.behaviours.register("date",haxe_ui_components__$Calendar_DateBehaviour);
		this.behaviours.register("selectedDate",haxe_ui_components__$Calendar_SelectedDateBehaviour);
		this.behaviours.register("previousMonth",haxe_ui_components__$Calendar_PreviousMonthBehaviour);
		this.behaviours.register("nextMonth",haxe_ui_components__$Calendar_NextMonthBehaviour);
		this.behaviours.register("previousYear",haxe_ui_components__$Calendar_PreviousYearBehaviour);
		this.behaviours.register("nextYear",haxe_ui_components__$Calendar_NextYearBehaviour);
	}
	,get_date: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDate(this.behaviours.get("date"));
	}
	,set_date: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("date",haxe_ui_util_Variant.fromDate(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"date"));
		return value;
	}
	,get_selectedDate: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDate(this.behaviours.get("selectedDate"));
	}
	,set_selectedDate: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedDate",haxe_ui_util_Variant.fromDate(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedDate"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Grid.prototype.cloneComponent.call(this);
		if(this.get_date() != null) {
			c.set_date(this.get_date());
		}
		if(this.get_selectedDate() != null) {
			c.set_selectedDate(this.get_selectedDate());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Calendar();
	}
	,__class__: haxe_ui_components_Calendar
	,__properties__: $extend(haxe_ui_containers_Grid.prototype.__properties__,{set_selectedDate:"set_selectedDate",get_selectedDate:"get_selectedDate",set_date:"set_date",get_date:"get_date"})
});
var haxe_ui_components__$Calendar_PreviousMonthBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.PreviousMonthBehaviour"] = haxe_ui_components__$Calendar_PreviousMonthBehaviour;
haxe_ui_components__$Calendar_PreviousMonthBehaviour.__name__ = "haxe.ui.components._Calendar.PreviousMonthBehaviour";
haxe_ui_components__$Calendar_PreviousMonthBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Calendar_PreviousMonthBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(haxe_ui_components__$Calendar_DateUtils.previousMonth(calendar.get_date()));
		return null;
	}
	,__class__: haxe_ui_components__$Calendar_PreviousMonthBehaviour
});
var haxe_ui_components__$Calendar_NextMonthBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.NextMonthBehaviour"] = haxe_ui_components__$Calendar_NextMonthBehaviour;
haxe_ui_components__$Calendar_NextMonthBehaviour.__name__ = "haxe.ui.components._Calendar.NextMonthBehaviour";
haxe_ui_components__$Calendar_NextMonthBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Calendar_NextMonthBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(haxe_ui_components__$Calendar_DateUtils.nextMonth(calendar.get_date()));
		return null;
	}
	,__class__: haxe_ui_components__$Calendar_NextMonthBehaviour
});
var haxe_ui_components__$Calendar_PreviousYearBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.PreviousYearBehaviour"] = haxe_ui_components__$Calendar_PreviousYearBehaviour;
haxe_ui_components__$Calendar_PreviousYearBehaviour.__name__ = "haxe.ui.components._Calendar.PreviousYearBehaviour";
haxe_ui_components__$Calendar_PreviousYearBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Calendar_PreviousYearBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(haxe_ui_components__$Calendar_DateUtils.previousYear(calendar.get_date()));
		return null;
	}
	,__class__: haxe_ui_components__$Calendar_PreviousYearBehaviour
});
var haxe_ui_components__$Calendar_NextYearBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.NextYearBehaviour"] = haxe_ui_components__$Calendar_NextYearBehaviour;
haxe_ui_components__$Calendar_NextYearBehaviour.__name__ = "haxe.ui.components._Calendar.NextYearBehaviour";
haxe_ui_components__$Calendar_NextYearBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Calendar_NextYearBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(haxe_ui_components__$Calendar_DateUtils.nextYear(calendar.get_date()));
		return null;
	}
	,__class__: haxe_ui_components__$Calendar_NextYearBehaviour
});
var haxe_ui_components__$Calendar_SelectedDateBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.SelectedDateBehaviour"] = haxe_ui_components__$Calendar_SelectedDateBehaviour;
haxe_ui_components__$Calendar_SelectedDateBehaviour.__name__ = "haxe.ui.components._Calendar.SelectedDateBehaviour";
haxe_ui_components__$Calendar_SelectedDateBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$Calendar_SelectedDateBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
		var date = haxe_ui_util_Variant.toDate(value);
		this._component.invalidateComponent("data",false);
		var calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(date);
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_components__$Calendar_SelectedDateBehaviour
});
var haxe_ui_components__$Calendar_DateBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.DateBehaviour"] = haxe_ui_components__$Calendar_DateBehaviour;
haxe_ui_components__$Calendar_DateBehaviour.__name__ = "haxe.ui.components._Calendar.DateBehaviour";
haxe_ui_components__$Calendar_DateBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Calendar_DateBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var date = haxe_ui_util_Variant.toDate(this._value);
		if(date == null) {
			return;
		}
		var year = date.getFullYear();
		var month = date.getMonth();
		var startDay = new Date(year,month,1,0,0,0).getDay();
		var endDay = haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year);
		var _g = 0;
		var _this = this._component;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.set_opacity(.3);
			child.removeClass("calendar-off-day");
			child.removeClass("calendar-day");
			child.removeClass("calendar-day-selected");
			child.removeClass(":hover");
		}
		var prevMonth = haxe_ui_components__$Calendar_DateUtils.previousMonth(date);
		var last = haxe_ui_components__$Calendar_DateUtils.getEndDay(prevMonth.getMonth(),prevMonth.getFullYear());
		var n = startDay - 1;
		var _g = 0;
		var _g1 = startDay;
		while(_g < _g1) {
			var _ = _g++;
			var _this = this._component;
			var item = (_this._children == null ? [] : _this._children)[n];
			item.addClass("calendar-off-day");
			--n;
			item.set_text("" + last);
			--last;
		}
		var selectedDate = (js_Boot.__cast(this._component , haxe_ui_components_Calendar)).get_selectedDate();
		if(selectedDate == null) {
			selectedDate = new Date();
		}
		var _g = 0;
		var _g1 = endDay;
		while(_g < _g1) {
			var i = _g++;
			var _this = this._component;
			var item = (_this._children == null ? [] : _this._children)[i + startDay];
			item.addClass("calendar-day");
			item.set_opacity(1);
			item.set_hidden(false);
			item.set_text("" + (i + 1));
			if(i + 1 == selectedDate.getDate() && month == selectedDate.getMonth() && year == selectedDate.getFullYear()) {
				item.addClass("calendar-day-selected");
			}
			last = i + startDay;
		}
		++last;
		var n = 0;
		var _g = last;
		var _this = this._component;
		var _g1 = (_this._children == null ? [] : _this._children).length;
		while(_g < _g1) {
			var i = _g++;
			var _this = this._component;
			var item = (_this._children == null ? [] : _this._children)[i];
			item.addClass("calendar-off-day");
			item.set_text("" + (n + 1));
			++n;
		}
		this._component.registerInternalEvents(null,true);
		this._component.dispatch(new haxe_ui_components_CalendarEvent("datechange"));
	}
	,__class__: haxe_ui_components__$Calendar_DateBehaviour
});
var haxe_ui_components__$Calendar_DateUtils = function() { };
$hxClasses["haxe.ui.components._Calendar.DateUtils"] = haxe_ui_components__$Calendar_DateUtils;
haxe_ui_components__$Calendar_DateUtils.__name__ = "haxe.ui.components._Calendar.DateUtils";
haxe_ui_components__$Calendar_DateUtils.getEndDay = function(month,year) {
	var endDay = -1;
	switch(month) {
	case 1:
		if(year % 400 == 0 || year % 100 != 0 && year % 4 == 0) {
			endDay = 29;
		} else {
			endDay = 28;
		}
		break;
	case 3:case 5:case 8:case 10:
		endDay = 30;
		break;
	default:
		endDay = 31;
	}
	return endDay;
};
haxe_ui_components__$Calendar_DateUtils.previousMonth = function(date) {
	var year = date.getFullYear();
	var month = date.getMonth();
	var day = date.getDate();
	--month;
	if(month < 0) {
		month = 11;
		--year;
	}
	day = js_Boot.__cast(Math.min(day,haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year)) , Int);
	date = new Date(year,month,day,0,0,0);
	return date;
};
haxe_ui_components__$Calendar_DateUtils.nextMonth = function(date) {
	var year = date.getFullYear();
	var month = date.getMonth();
	var day = date.getDate();
	++month;
	if(month > 11) {
		month = 0;
		++year;
	}
	day = js_Boot.__cast(Math.min(day,haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year)) , Int);
	date = new Date(year,month,day,0,0,0);
	return date;
};
haxe_ui_components__$Calendar_DateUtils.previousYear = function(date) {
	var year = date.getFullYear();
	var month = date.getMonth();
	var day = date.getDate();
	--year;
	day = js_Boot.__cast(Math.min(day,haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year)) , Int);
	date = new Date(year,month,day,0,0,0);
	return date;
};
haxe_ui_components__$Calendar_DateUtils.nextYear = function(date) {
	var year = date.getFullYear();
	var month = date.getMonth();
	var day = date.getDate();
	++year;
	day = js_Boot.__cast(Math.min(day,haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year)) , Int);
	date = new Date(year,month,day,0,0,0);
	return date;
};
var haxe_ui_components__$Calendar_Events = function(target) {
	haxe_ui_events_Events.call(this,target);
};
$hxClasses["haxe.ui.components._Calendar.Events"] = haxe_ui_components__$Calendar_Events;
haxe_ui_components__$Calendar_Events.__name__ = "haxe.ui.components._Calendar.Events";
haxe_ui_components__$Calendar_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$Calendar_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	register: function() {
		this.unregister();
		var _g = 0;
		var _this = this._target;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.hasEvent("click",$bind(this,this.onDayClicked)) == false && child.classes.indexOf("calendar-day") != -1) {
				child.registerEvent("click",$bind(this,this.onDayClicked));
			}
		}
	}
	,unregister: function() {
		var _g = 0;
		var _this = this._target;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.unregisterEvent("click",$bind(this,this.onDayClicked));
		}
	}
	,onDayClicked: function(event) {
		var calendar = js_Boot.__cast(this._target , haxe_ui_components_Calendar);
		var day = Std.parseInt(event.target.get_text());
		var month = calendar.get_date().getMonth();
		var year = calendar.get_date().getFullYear();
		calendar.set_selectedDate(new Date(year,month,day,0,0,0));
	}
	,__class__: haxe_ui_components__$Calendar_Events
});
var haxe_ui_components__$Calendar_Builder = function(calendar) {
	haxe_ui_core_CompositeBuilder.call(this,calendar);
	this._calendar = calendar;
};
$hxClasses["haxe.ui.components._Calendar.Builder"] = haxe_ui_components__$Calendar_Builder;
haxe_ui_components__$Calendar_Builder.__name__ = "haxe.ui.components._Calendar.Builder";
haxe_ui_components__$Calendar_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Calendar_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_calendar: null
	,create: function() {
		this._calendar.set_columns(7);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		this._calendar.set_date(new Date());
	}
	,__class__: haxe_ui_components__$Calendar_Builder
});
var haxe_ui_layouts_VerticalGridLayout = function() {
	this._columns = 1;
	haxe_ui_layouts_Layout.call(this);
};
$hxClasses["haxe.ui.layouts.VerticalGridLayout"] = haxe_ui_layouts_VerticalGridLayout;
haxe_ui_layouts_VerticalGridLayout.__name__ = "haxe.ui.layouts.VerticalGridLayout";
haxe_ui_layouts_VerticalGridLayout.__super__ = haxe_ui_layouts_Layout;
haxe_ui_layouts_VerticalGridLayout.prototype = $extend(haxe_ui_layouts_Layout.prototype,{
	_columns: null
	,get_columns: function() {
		return this._columns;
	}
	,set_columns: function(value) {
		if(this._columns == value) {
			return value;
		}
		this._columns = value;
		if(this._component != null) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_Layout.prototype.get_usableSize.call(this);
		var columnWidths = this.calcColumnWidths(size,false);
		var rowHeights = this.calcRowHeights(size,false);
		var _g = 0;
		while(_g < columnWidths.length) {
			var columnWidth = columnWidths[_g];
			++_g;
			size.width -= columnWidth;
		}
		var _g = 0;
		while(_g < rowHeights.length) {
			var rowHeight = rowHeights[_g];
			++_g;
			size.height -= rowHeight;
		}
		var _this = this.get_component();
		if((_this._children == null ? [] : _this._children).length > 1) {
			var _this = this.get_component();
			var rows = Math.ceil((_this._children == null ? [] : _this._children).length / this.get_columns());
			var c = this.get_columns();
			var _this = this.get_component();
			var c1 = Math.min(c,(_this._children == null ? [] : _this._children).length);
			size.width -= this.get_horizontalSpacing() * (c1 - 1);
			size.height -= this.get_verticalSpacing() * (rows - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	,resizeChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var explicitWidths = this.calcExplicitWidths();
		var explicitHeights = this.calcExplicitHeights();
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				var ucx = columnWidths[columnIndex];
				if(explicitWidths[columnIndex] == false) {
					cx = ucx;
				} else {
					cx = ucx * child.get_percentWidth() / 100;
				}
			}
			if(child.get_percentHeight() != null) {
				var ucy = rowHeights[rowIndex];
				if(explicitHeights[rowIndex] == false) {
					cy = ucy;
				} else {
					cy = ucy * child.get_percentHeight() / 100;
				}
			}
			child.resizeComponent(cx,cy);
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
	}
	,repositionChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var rowIndex = 0;
		var columnIndex = 0;
		var xpos = this.get_paddingLeft();
		var ypos = this.get_paddingTop();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var halign = this.horizontalAlign(child);
			var valign = this.verticalAlign(child);
			var xposChild = 0;
			var yposChild = 0;
			switch(halign) {
			case "center":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) * 0.5 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) + this.marginLeft(child) - this.marginRight(child);
				break;
			default:
				xposChild = xpos + this.marginLeft(child) - this.marginRight(child);
			}
			switch(valign) {
			case "bottom":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) + this.marginTop(child) - this.marginBottom(child);
				break;
			case "center":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) * 0.5 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				yposChild = ypos + this.marginTop(child) - this.marginBottom(child);
			}
			child.moveComponent(xposChild,yposChild);
			xpos += columnWidths[columnIndex] + this.get_horizontalSpacing();
			++columnIndex;
			if(columnIndex >= this.get_columns()) {
				xpos = this.get_paddingLeft();
				ypos += rowHeights[rowIndex] + this.get_verticalSpacing();
				columnIndex = 0;
				++rowIndex;
			}
		}
	}
	,calcColumnWidths: function(usableSize,includePercentage) {
		var columnWidths = [];
		var _g = 0;
		var _g1 = this._columns;
		while(_g < _g1) {
			var _ = _g++;
			columnWidths.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null) {
				if(child.get_componentWidth() > columnWidths[columnIndex]) {
					columnWidths[columnIndex] = child.get_componentWidth();
				}
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			var fullWidthsCounts = [0];
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentWidth() != null && child.get_percentWidth() == 100) {
					fullWidthsCounts[rowIndex]++;
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
					fullWidthsCounts.push(0);
				}
			}
			rowIndex = 0;
			columnIndex = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentWidth() != null) {
					var childPercentWidth = child.get_percentWidth();
					if(childPercentWidth == 100 && fullWidthsCounts[rowIndex] != 0) {
						var f = fullWidthsCounts[rowIndex];
						if(rowIndex > 0 && fullWidthsCounts[rowIndex - 1] != 0) {
							f = fullWidthsCounts[rowIndex - 1];
						}
						childPercentWidth = 100 / f;
					}
					var cx = usableSize.width * childPercentWidth / 100;
					if(cx > columnWidths[columnIndex]) {
						columnWidths[columnIndex] = cx;
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
				}
			}
		}
		return columnWidths;
	}
	,calcRowHeights: function(usableSize,includePercentage) {
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var rowCount = visibleChildren / this._columns | 0;
		if(visibleChildren % this._columns != 0) {
			++rowCount;
		}
		var rowHeights = [];
		var _g = 0;
		var _g1 = rowCount;
		while(_g < _g1) {
			var _ = _g++;
			rowHeights.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null) {
				if(child.get_height() > rowHeights[rowIndex]) {
					rowHeights[rowIndex] = child.get_height();
				}
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			var newRow = true;
			var fullHeightRowCount = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentHeight() != null && child.get_percentHeight() == 100) {
					if(newRow == true) {
						newRow = false;
						++fullHeightRowCount;
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
					newRow = true;
				}
			}
			rowIndex = 0;
			columnIndex = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentHeight() != null) {
					var childPercentHeight = child.get_percentHeight();
					if(childPercentHeight == 100 && fullHeightRowCount > 1) {
						childPercentHeight = 100 / fullHeightRowCount;
					}
					var cy = usableSize.height * childPercentHeight / 100;
					if(cy > rowHeights[rowIndex]) {
						rowHeights[rowIndex] = cy;
					} else {
						var tmp = usableSize.height > rowHeights[rowIndex];
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
				}
			}
		}
		return rowHeights;
	}
	,calcExplicitWidths: function() {
		var explicitWidths = [];
		var _g = 0;
		var _g1 = this._columns;
		while(_g < _g1) {
			var _ = _g++;
			explicitWidths.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null && child.get_componentWidth() > 0) {
				explicitWidths[columnIndex] = true;
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		return explicitWidths;
	}
	,calcExplicitHeights: function() {
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var rowCount = visibleChildren / this.get_columns() | 0;
		if(visibleChildren % this._columns != 0) {
			++rowCount;
		}
		var explicitHeights = [];
		var _g = 0;
		var _g1 = rowCount;
		while(_g < _g1) {
			var _ = _g++;
			explicitHeights.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null && child.get_componentHeight() > 0) {
				explicitHeights[columnIndex % this._columns] = true;
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		return explicitHeights;
	}
	,__class__: haxe_ui_layouts_VerticalGridLayout
	,__properties__: $extend(haxe_ui_layouts_Layout.prototype.__properties__,{set_columns:"set_columns",get_columns:"get_columns"})
});
var haxe_ui_components__$Calendar_Layout = function() {
	haxe_ui_layouts_VerticalGridLayout.call(this);
};
$hxClasses["haxe.ui.components._Calendar.Layout"] = haxe_ui_components__$Calendar_Layout;
haxe_ui_components__$Calendar_Layout.__name__ = "haxe.ui.components._Calendar.Layout";
haxe_ui_components__$Calendar_Layout.__super__ = haxe_ui_layouts_VerticalGridLayout;
haxe_ui_components__$Calendar_Layout.prototype = $extend(haxe_ui_layouts_VerticalGridLayout.prototype,{
	resizeChildren: function() {
		var max = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_layout() == null) {
				continue;
			}
			if(child.get_width() > child.get_layout().get_paddingLeft() + child.get_layout().get_paddingRight() && child.get_width() > max) {
				max = child.get_width();
			}
			if(child.get_width() > child.get_layout().get_paddingTop() + child.get_layout().get_paddingBottom() && child.get_height() > max) {
				max = child.get_height();
			}
		}
		if(max > 0) {
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.set_width(max);
				child.set_height(max);
			}
		}
	}
	,__class__: haxe_ui_components__$Calendar_Layout
});
var haxe_ui_components__$Canvas_DataSourceBehaviour = function(canvas) {
	haxe_ui_behaviours_DataBehaviour.call(this,canvas);
	this._canvas = canvas;
};
$hxClasses["haxe.ui.components._Canvas.DataSourceBehaviour"] = haxe_ui_components__$Canvas_DataSourceBehaviour;
haxe_ui_components__$Canvas_DataSourceBehaviour.__name__ = "haxe.ui.components._Canvas.DataSourceBehaviour";
haxe_ui_components__$Canvas_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Canvas_DataSourceBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_canvas: null
	,validateData: function() {
		if(this._value != null) {
			var ds = haxe_ui_util_Variant.toDataSource(this._value);
			var g = this._canvas.componentGraphics;
			var _g = 0;
			var _g1 = ds.get_size();
			while(_g < _g1) {
				var i = _g++;
				var item = ds.get(i);
				switch(item.id) {
				case "circle":
					var x = parseFloat(item.x);
					var y = parseFloat(item.y);
					var radius = parseFloat(item.radius);
					g.circle(x,y,radius);
					break;
				case "clear":
					g.clear();
					break;
				case "fill-style":case "fillStyle":
					var color = item.color;
					var alpha = item.alpha != null ? parseFloat(item.alpha) : 1;
					g.fillStyle(haxe_ui_util_Color.fromString(color),alpha);
					break;
				case "image":
					var resource = item.resource;
					var x1 = parseFloat(item.x);
					var y1 = parseFloat(item.y);
					var width = parseFloat(item.width);
					var height = parseFloat(item.height);
					g.image(haxe_ui_util_Variant.fromString(resource),x1,y1,width,height);
					break;
				case "line-to":case "lineTo":
					var x2 = item.x != null ? parseFloat(item.x) : 0;
					var y2 = item.y != null ? parseFloat(item.y) : 0;
					g.lineTo(x2,y2);
					break;
				case "move-to":case "moveTo":
					var x3 = item.x != null ? parseFloat(item.x) : 0;
					var y3 = item.y != null ? parseFloat(item.y) : 0;
					g.moveTo(x3,y3);
					break;
				case "rectangle":
					var x4 = item.x != null ? parseFloat(item.x) : 0;
					var y4 = item.y != null ? parseFloat(item.y) : 0;
					var width1 = item.width != null ? parseFloat(item.width) : this._canvas.get_width();
					var height1 = item.height != null ? parseFloat(item.height) : this._canvas.get_height();
					g.rectangle(x4,y4,width1,height1);
					break;
				case "stroke-style":case "strokeStyle":
					var color1 = item.color;
					var thickness = item.thickness != null ? parseFloat(item.thickness) : 1;
					var alpha1 = item.alpha != null ? parseFloat(item.alpha) : 1;
					g.strokeStyle(haxe_ui_util_Color.fromString(color1),thickness,alpha1);
					break;
				default:
					haxe_Log.trace("unrecognised draw command: " + Std.string(item),{ fileName : "haxe/ui/components/Canvas.hx", lineNumber : 90, className : "haxe.ui.components._Canvas.DataSourceBehaviour", methodName : "validateData"});
				}
			}
		}
	}
	,__class__: haxe_ui_components__$Canvas_DataSourceBehaviour
});
var haxe_ui_components_CheckBox = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.CheckBox"] = haxe_ui_components_CheckBox;
haxe_ui_components_CheckBox.__name__ = "haxe.ui.components.CheckBox";
haxe_ui_components_CheckBox.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_CheckBox.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_components__$CheckBox_TextBehaviour);
		this.behaviours.register("selected",haxe_ui_components__$CheckBox_SelectedBehaviour);
	}
	,get_selected: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("selected"));
	}
	,set_selected: function(value) {
		this.behaviours.set("selected",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selected"));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,get_value: function() {
		return this.get_selected();
	}
	,set_value: function(value) {
		this.set_selected(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_selected(this.get_selected());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_CheckBox();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$CheckBox_Events;
		this._compositeBuilderClass = haxe_ui_components_CheckBoxBuilder;
		this._defaultLayoutClass = haxe_ui_components__$CheckBox_CheckBoxLayout;
	}
	,__class__: haxe_ui_components_CheckBox
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_selected:"set_selected",get_selected:"get_selected"})
});
var haxe_ui_components_CheckBoxValue = function() {
	this._down = true;
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.CheckBoxValue"] = haxe_ui_components_CheckBoxValue;
haxe_ui_components_CheckBoxValue.__name__ = "haxe.ui.components.CheckBoxValue";
haxe_ui_components_CheckBoxValue.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_CheckBoxValue.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	onReady: function() {
		this.createIcon();
		this.registerEvent("actionstart",$bind(this,this.onActionStart));
		this.registerEvent("actionend",$bind(this,this.onActionEnd));
	}
	,applyStyle: function(style) {
		haxe_ui_core_InteractiveComponent.prototype.applyStyle.call(this,style);
		var icon = this.findComponent(null,haxe_ui_components_Image);
		if(icon != null) {
			icon.set_resource(style.icon);
		}
	}
	,createIcon: function() {
		var icon = this.findComponent(null,haxe_ui_components_Image);
		if(icon == null && this.parentComponent != null) {
			icon = new haxe_ui_components_Image();
			icon.set_id("" + this.parentComponent.get_cssName() + "-icon");
			icon.addClass("" + this.parentComponent.get_cssName() + "-icon");
			if(this.get_style() != null && this.get_style().icon != null) {
				icon.set_resource(this.get_style().icon);
			}
			this.addComponent(icon);
		}
	}
	,_down: null
	,onActionStart: function(event) {
		switch(event.action) {
		case "actionConfirm":case "actionPress":
			this._down = true;
			break;
		default:
		}
	}
	,onActionEnd: function(event) {
		switch(event.action) {
		case "actionConfirm":case "actionPress":
			if(this._down == true) {
				this._down = false;
				if(this.parentComponent != null) {
					var checkbox = js_Boot.__cast(this.parentComponent , haxe_ui_components_CheckBox);
					checkbox.set_selected(!checkbox.get_selected());
				}
			}
			break;
		default:
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_CheckBoxValue();
	}
	,__class__: haxe_ui_components_CheckBoxValue
});
var haxe_ui_components__$CheckBox_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._CheckBox.TextBehaviour"] = haxe_ui_components__$CheckBox_TextBehaviour;
haxe_ui_components__$CheckBox_TextBehaviour.__name__ = "haxe.ui.components._CheckBox.TextBehaviour";
haxe_ui_components__$CheckBox_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$CheckBox_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent(null,haxe_ui_components_Label,false);
		if(label == null) {
			label = new haxe_ui_components_Label();
			label.set_id("" + this._component.get_cssName() + "-label");
			label.addClass("" + this._component.get_cssName() + "-label");
			label.set_scriptAccess(false);
			this._component.addComponent(label);
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		label.set_text(haxe_ui_util_Variant.toString(this._value));
	}
	,__class__: haxe_ui_components__$CheckBox_TextBehaviour
});
var haxe_ui_components__$CheckBox_SelectedBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._CheckBox.SelectedBehaviour"] = haxe_ui_components__$CheckBox_SelectedBehaviour;
haxe_ui_components__$CheckBox_SelectedBehaviour.__name__ = "haxe.ui.components._CheckBox.SelectedBehaviour";
haxe_ui_components__$CheckBox_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$CheckBox_SelectedBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var valueComponent = this._component.findComponent(null,haxe_ui_components_CheckBoxValue);
		if(valueComponent == null) {
			return;
		}
		valueComponent.createIcon();
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(true))) {
			valueComponent.addClass(":selected");
		} else {
			valueComponent.removeClass(":selected");
		}
		var event = new haxe_ui_events_UIEvent("change");
		event.previousValue = this._previousValue;
		event.value = this._value;
		this._component.dispatch(event);
	}
	,__class__: haxe_ui_components__$CheckBox_SelectedBehaviour
});
var haxe_ui_components__$CheckBox_Events = function(checkbox) {
	haxe_ui_events_Events.call(this,checkbox);
	this._checkbox = checkbox;
};
$hxClasses["haxe.ui.components._CheckBox.Events"] = haxe_ui_components__$CheckBox_Events;
haxe_ui_components__$CheckBox_Events.__name__ = "haxe.ui.components._CheckBox.Events";
haxe_ui_components__$CheckBox_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$CheckBox_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_checkbox: null
	,register: function() {
		if(this.hasEvent("mouseover",$bind(this,this.onMouseOver)) == false) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(this.hasEvent("mouseout",$bind(this,this.onMouseOut)) == false) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
		if(this.hasEvent("click",$bind(this,this.onClick)) == false) {
			this.registerEvent("click",$bind(this,this.onClick));
		}
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
	}
	,unregister: function() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
		this.unregisterEvent("click",$bind(this,this.onClick));
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
	}
	,onMouseOver: function(event) {
		this._target.addClass(":hover");
		this._target.findComponent(null,haxe_ui_components_CheckBoxValue).addClass(":hover");
	}
	,onMouseOut: function(event) {
		this._target.removeClass(":hover");
		this._target.findComponent(null,haxe_ui_components_CheckBoxValue).removeClass(":hover");
	}
	,onClick: function(event) {
		this._checkbox.set_selected(!this._checkbox.get_selected());
	}
	,onMouseDown: function(event) {
		this._checkbox.findComponent(null,haxe_ui_components_CheckBoxValue).set_focus(true);
	}
	,__class__: haxe_ui_components__$CheckBox_Events
});
var haxe_ui_components_CheckBoxBuilder = function(checkbox) {
	haxe_ui_core_CompositeBuilder.call(this,checkbox);
	this._checkbox = checkbox;
	this._checkbox.set_allowFocus(false);
};
$hxClasses["haxe.ui.components.CheckBoxBuilder"] = haxe_ui_components_CheckBoxBuilder;
haxe_ui_components_CheckBoxBuilder.__name__ = "haxe.ui.components.CheckBoxBuilder";
haxe_ui_components_CheckBoxBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components_CheckBoxBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_checkbox: null
	,create: function() {
		if(this._checkbox.findComponent(null,haxe_ui_components_CheckBoxValue) == null) {
			var value = new haxe_ui_components_CheckBoxValue();
			value.set_id("" + this._checkbox.get_cssName() + "-value");
			value.addClass("" + this._checkbox.get_cssName() + "-value");
			value.set_scriptAccess(false);
			this._checkbox.addComponent(value);
		}
	}
	,applyStyle: function(style) {
		var c = this._component.findComponent("" + this._checkbox.get_cssName() + "-label",haxe_ui_core_Component);
		if(c != null) {
			var invalidate = false;
			if(style.color != null && c.get_customStyle().color != style.color) {
				c.get_customStyle().color = style.color;
				invalidate = true;
			}
			if(style.fontName != null && c.get_customStyle().fontName != style.fontName) {
				c.get_customStyle().fontName = style.fontName;
				invalidate = true;
			}
			if(style.fontSize != null && c.get_customStyle().fontSize != style.fontSize) {
				c.get_customStyle().fontSize = style.fontSize;
				invalidate = true;
			}
			if(style.cursor != null && c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(style.textAlign != null && c.get_customStyle().textAlign != style.textAlign) {
				c.get_customStyle().textAlign = style.textAlign;
				invalidate = true;
			}
			if(style.fontBold != null && c.get_customStyle().fontBold != style.fontBold) {
				c.get_customStyle().fontBold = style.fontBold;
				invalidate = true;
			}
			if(style.fontUnderline != null && c.get_customStyle().fontUnderline != style.fontUnderline) {
				c.get_customStyle().fontUnderline = style.fontUnderline;
				invalidate = true;
			}
			if(style.fontItalic != null && c.get_customStyle().fontItalic != style.fontItalic) {
				c.get_customStyle().fontItalic = style.fontItalic;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
	}
	,get_cssName: function() {
		return "checkbox";
	}
	,__class__: haxe_ui_components_CheckBoxBuilder
});
var haxe_ui_layouts_HorizontalLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
	this._calcFullWidths = true;
	this._roundFullWidths = true;
};
$hxClasses["haxe.ui.layouts.HorizontalLayout"] = haxe_ui_layouts_HorizontalLayout;
haxe_ui_layouts_HorizontalLayout.__name__ = "haxe.ui.layouts.HorizontalLayout";
haxe_ui_layouts_HorizontalLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_HorizontalLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var xpos = this.get_paddingLeft();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var ypos = 0;
			switch(this.verticalAlign(child)) {
			case "bottom":
				if(child.get_componentHeight() < this.get_component().get_componentHeight()) {
					ypos = this.get_component().get_componentHeight() - (child.get_componentHeight() + this.get_paddingBottom() + this.marginTop(child));
				}
				break;
			case "center":
				ypos = (this.get_component().get_componentHeight() - child.get_componentHeight()) / 2 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				ypos = this.get_paddingTop() + this.marginTop(child);
			}
			child.moveComponent(xpos + this.marginLeft(child),ypos);
			xpos += child.get_componentWidth() + this.get_horizontalSpacing();
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
				continue;
			}
			if(child.get_componentWidth() > 0 && (child.get_percentWidth() == null || this.fixedMinWidth(child) == true)) {
				size.width -= child.get_componentWidth() + this.marginLeft(child) + this.marginRight(child);
			}
		}
		if(visibleChildren > 1) {
			size.width -= this.get_horizontalSpacing() * (visibleChildren - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		return size;
	}
	,__class__: haxe_ui_layouts_HorizontalLayout
});
var haxe_ui_components__$CheckBox_CheckBoxLayout = function() {
	haxe_ui_layouts_HorizontalLayout.call(this);
};
$hxClasses["haxe.ui.components._CheckBox.CheckBoxLayout"] = haxe_ui_components__$CheckBox_CheckBoxLayout;
haxe_ui_components__$CheckBox_CheckBoxLayout.__name__ = "haxe.ui.components._CheckBox.CheckBoxLayout";
haxe_ui_components__$CheckBox_CheckBoxLayout.__super__ = haxe_ui_layouts_HorizontalLayout;
haxe_ui_components__$CheckBox_CheckBoxLayout.prototype = $extend(haxe_ui_layouts_HorizontalLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_layouts_HorizontalLayout.prototype.repositionChildren.call(this);
		var icon = this._component.findComponent(null,haxe_ui_components_Image,true);
		if(icon != null) {
			icon.set_left(Math.round(icon.get_left()));
			icon.set_top(Math.round(icon.get_top()));
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_HorizontalLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this._component.get_autoWidth() == false) {
			var label = this._component.findComponent(null,haxe_ui_components_Label,false);
			if(label != null) {
				label.set_percentWidth(100);
			}
		}
		return size;
	}
	,__class__: haxe_ui_components__$CheckBox_CheckBoxLayout
});
var haxe_ui_components_ColorPicker = function() {
	this._impl = null;
	haxe_ui_containers_Box.call(this);
	this._impl = new haxe_ui_components__$ColorPicker_HSVColorPickerImpl();
	this._impl.registerEvent("change",$bind(this,this.onImplValueChanged));
	this._impl.picker = this;
	this.addComponent(this._impl);
};
$hxClasses["haxe.ui.components.ColorPicker"] = haxe_ui_components_ColorPicker;
haxe_ui_components_ColorPicker.__name__ = "haxe.ui.components.ColorPicker";
haxe_ui_components_ColorPicker.__super__ = haxe_ui_containers_Box;
haxe_ui_components_ColorPicker.prototype = $extend(haxe_ui_containers_Box.prototype,{
	_impl: null
	,get_currentColor: function() {
		return this._impl.get_currentColor();
	}
	,set_currentColor: function(value) {
		this._impl.set_currentColor(value);
		return value;
	}
	,onImplValueChanged: function(_) {
		this.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,addClass: function(name,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		haxe_ui_containers_Box.prototype.addClass.call(this,name,invalidate,recursive);
		if(this._impl != null) {
			this._impl.onStyleClassChanged();
		}
	}
	,removeClass: function(name,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		haxe_ui_containers_Box.prototype.removeClass.call(this,name,invalidate,recursive);
		if(this._impl != null) {
			this._impl.onStyleClassChanged();
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_ColorPicker();
	}
	,__class__: haxe_ui_components_ColorPicker
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_currentColor:"set_currentColor",get_currentColor:"get_currentColor"})
});
var haxe_ui_components__$ColorPicker_ColorPickerImpl = function() {
	this._currentColor = null;
	this.picker = null;
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.components._ColorPicker.ColorPickerImpl"] = haxe_ui_components__$ColorPicker_ColorPickerImpl;
haxe_ui_components__$ColorPicker_ColorPickerImpl.__name__ = "haxe.ui.components._ColorPicker.ColorPickerImpl";
haxe_ui_components__$ColorPicker_ColorPickerImpl.__super__ = haxe_ui_containers_Box;
haxe_ui_components__$ColorPicker_ColorPickerImpl.prototype = $extend(haxe_ui_containers_Box.prototype,{
	picker: null
	,_currentColor: null
	,get_currentColor: function() {
		return this._currentColor;
	}
	,set_currentColor: function(value) {
		this._currentColor = value;
		this.onCurrentColorChanged();
		return value;
	}
	,onCurrentColorChanged: function() {
	}
	,onInitialize: function() {
		haxe_ui_containers_Box.prototype.onInitialize.call(this);
		if(this._currentColor == null) {
			this.set_currentColor(16711680);
		}
	}
	,onStyleClassChanged: function() {
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components__$ColorPicker_ColorPickerImpl();
	}
	,__class__: haxe_ui_components__$ColorPicker_ColorPickerImpl
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_currentColor:"set_currentColor",get_currentColor:"get_currentColor"})
});
var haxe_ui_components__$ColorPicker_HSVColorPickerImpl = function() {
	this._trackingHue = false;
	this._trackingSaturationValue = false;
	this._sliderTracking = false;
	this._lastColor = null;
	haxe_ui_components__$ColorPicker_ColorPickerImpl.call(this);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_containers_Absolute();
	c1.set_id("saturationValueContainer");
	c1.set_percentWidth(100.);
	c1.set_percentHeight(100.);
	c1.set_styleString("clip:true;padding-right: 3px;padding-bottom:3px;");
	var c2 = new haxe_ui_components_Canvas();
	c2.set_id("saturationValueGraph");
	c2.set_left(2.);
	c2.set_top(2.);
	c2.set_percentWidth(100.);
	c2.set_percentHeight(100.);
	c2.set_styleString("pointer-events:true");
	c1.addComponent(c2);
	var c3 = new haxe_ui_containers_Box();
	c3.set_id("saturationValueIndicator");
	c3.set_styleString("pointer-events:none");
	c3.set_includeInLayout(false);
	c1.addComponent(c3);
	c0.addComponent(c1);
	var c4 = new haxe_ui_containers_Absolute();
	c4.set_id("hueContainer");
	c4.set_percentWidth(100.);
	c4.set_styleString("clip:true;");
	var c5 = new haxe_ui_components_Canvas();
	c5.set_id("hueGraph");
	c5.set_left(2.);
	c5.set_top(2.);
	c5.set_height(20.);
	c5.set_percentWidth(100.);
	c5.set_styleString("pointer-events:true");
	c4.addComponent(c5);
	var c6 = new haxe_ui_containers_Box();
	c6.set_id("hueIndicator");
	c6.set_left(10.);
	c6.set_top(3.);
	c6.set_width(8.);
	c6.set_height(18.);
	c6.set_includeInLayout(false);
	c4.addComponent(c6);
	c0.addComponent(c4);
	var c7 = new haxe_ui_containers_HBox();
	c7.set_percentWidth(100.);
	c7.set_styleNames("controls-preview-container");
	var c8 = new haxe_ui_containers_HBox();
	c8.set_percentWidth(100.);
	c8.set_styleNames("controls-container");
	var c9 = new haxe_ui_components_Image();
	c9.set_id("prevControls");
	c9.set_styleString("pointer-events:true");
	c9.set_verticalAlign("center");
	c8.addComponent(c9);
	var c10 = new haxe_ui_containers_Stack();
	c10.set_id("controlsStack");
	c10.set_percentWidth(100.);
	c10.set_selectedIndex(0);
	var c11 = new haxe_ui_containers_Grid();
	c11.set_id("hsvControls");
	c11.set_percentWidth(100.);
	c11.set_styleString("spacing:0px");
	c11.set_columns(4);
	var c12 = new haxe_ui_components_Label();
	c12.set_text("{{hue}}");
	c12.set_styleNames("text-tiny");
	c11.addComponent(c12);
	var c13 = new haxe_ui_components_HorizontalSlider();
	c13.set_id("sliderHue");
	c13.set_styleNames("simple-slider");
	c13.set_max(360.);
	c13.set_allowFocus(false);
	c11.addComponent(c13);
	var c14 = new haxe_ui_components_Spacer();
	c14.set_width(5.);
	c11.addComponent(c14);
	var c15 = new haxe_ui_components_TextField();
	c15.set_id("inputHue");
	c15.set_styleNames("text-tiny");
	c15.set_restrictChars("0-9");
	c11.addComponent(c15);
	var c16 = new haxe_ui_components_Label();
	c16.set_text("{{saturation}}");
	c16.set_styleNames("text-tiny");
	c11.addComponent(c16);
	var c17 = new haxe_ui_components_HorizontalSlider();
	c17.set_id("sliderSaturation");
	c17.set_styleNames("simple-slider");
	c17.set_allowFocus(false);
	c11.addComponent(c17);
	var c18 = new haxe_ui_components_Spacer();
	c18.set_width(5.);
	c11.addComponent(c18);
	var c19 = new haxe_ui_components_TextField();
	c19.set_id("inputSaturation");
	c19.set_styleNames("text-tiny");
	c19.set_restrictChars("0-9");
	c11.addComponent(c19);
	var c20 = new haxe_ui_components_Label();
	c20.set_text("{{brightness}}");
	c20.set_styleNames("text-tiny");
	c11.addComponent(c20);
	var c21 = new haxe_ui_components_HorizontalSlider();
	c21.set_id("sliderValue");
	c21.set_styleNames("simple-slider");
	c21.set_allowFocus(false);
	c11.addComponent(c21);
	var c22 = new haxe_ui_components_Spacer();
	c22.set_width(5.);
	c11.addComponent(c22);
	var c23 = new haxe_ui_components_TextField();
	c23.set_id("inputValue");
	c23.set_styleNames("text-tiny");
	c23.set_restrictChars("0-9");
	c11.addComponent(c23);
	c10.addComponent(c11);
	var c24 = new haxe_ui_containers_Grid();
	c24.set_id("rgbControls");
	c24.set_percentWidth(100.);
	c24.set_styleString("spacing:0");
	c24.set_columns(4);
	var c25 = new haxe_ui_components_Label();
	c25.set_text("{{red}}");
	c25.set_styleNames("text-tiny");
	c24.addComponent(c25);
	var c26 = new haxe_ui_components_HorizontalSlider();
	c26.set_id("sliderRed");
	c26.set_styleNames("simple-slider");
	c26.set_max(255.);
	c26.set_allowFocus(false);
	c24.addComponent(c26);
	var c27 = new haxe_ui_components_Spacer();
	c27.set_width(5.);
	c24.addComponent(c27);
	var c28 = new haxe_ui_components_TextField();
	c28.set_id("inputRed");
	c28.set_styleNames("text-tiny");
	c28.set_restrictChars("0-9");
	c24.addComponent(c28);
	var c29 = new haxe_ui_components_Label();
	c29.set_text("{{green}}");
	c29.set_styleNames("text-tiny");
	c24.addComponent(c29);
	var c30 = new haxe_ui_components_HorizontalSlider();
	c30.set_id("sliderGreen");
	c30.set_styleNames("simple-slider");
	c30.set_max(255.);
	c30.set_allowFocus(false);
	c24.addComponent(c30);
	var c31 = new haxe_ui_components_Spacer();
	c31.set_width(5.);
	c24.addComponent(c31);
	var c32 = new haxe_ui_components_TextField();
	c32.set_id("inputGreen");
	c32.set_styleNames("text-tiny");
	c32.set_restrictChars("0-9");
	c24.addComponent(c32);
	var c33 = new haxe_ui_components_Label();
	c33.set_text("{{blue}}");
	c33.set_styleNames("text-tiny");
	c24.addComponent(c33);
	var c34 = new haxe_ui_components_HorizontalSlider();
	c34.set_id("sliderBlue");
	c34.set_styleNames("simple-slider");
	c34.set_max(255.);
	c34.set_allowFocus(false);
	c24.addComponent(c34);
	var c35 = new haxe_ui_components_Spacer();
	c35.set_width(5.);
	c24.addComponent(c35);
	var c36 = new haxe_ui_components_TextField();
	c36.set_id("inputBlue");
	c36.set_styleNames("text-tiny");
	c36.set_restrictChars("0-9");
	c24.addComponent(c36);
	c10.addComponent(c24);
	c8.addComponent(c10);
	var c37 = new haxe_ui_components_Image();
	c37.set_id("nextControls");
	c37.set_styleString("pointer-events:true");
	c37.set_verticalAlign("center");
	c8.addComponent(c37);
	c7.addComponent(c8);
	var c38 = new haxe_ui_containers_VBox();
	c38.set_percentHeight(100.);
	c38.set_styleString("spacing: 2px");
	var c39 = new haxe_ui_containers_Box();
	c39.set_id("colorPreviewContainer");
	c39.set_width(64.);
	c39.set_percentHeight(100.);
	var c40 = new haxe_ui_containers_Box();
	c40.set_id("colorPreview");
	c40.set_percentWidth(100.);
	c40.set_percentHeight(100.);
	c40.set_styleString("background-color: #ff0000");
	c39.addComponent(c40);
	c38.addComponent(c39);
	var c41 = new haxe_ui_components_TextField();
	c41.set_id("inputHex");
	c41.set_text("FF0000");
	c41.set_styleNames("text-tiny");
	c41.set_horizontalAlign("center");
	c38.addComponent(c41);
	c7.addComponent(c38);
	c0.addComponent(c7);
	this.addComponent(c0);
	c9.registerEvent("click",function(event) {
		var __this__ = c9;
		var controlsStack = c10;
		controlsStack.prevPage();
	});
	c37.registerEvent("click",function(event) {
		var __this__ = c37;
		var controlsStack = c10;
		controlsStack.nextPage();
	});
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.sliderValue = c21;
	this.sliderSaturation = c17;
	this.sliderRed = c26;
	this.sliderHue = c13;
	this.sliderGreen = c30;
	this.sliderBlue = c34;
	this.saturationValueIndicator = c3;
	this.saturationValueGraph = c2;
	this.saturationValueContainer = c1;
	this.rgbControls = c24;
	this.prevControls = c9;
	this.nextControls = c37;
	this.inputValue = c23;
	this.inputSaturation = c19;
	this.inputRed = c28;
	this.inputHue = c15;
	this.inputHex = c41;
	this.inputGreen = c32;
	this.inputBlue = c36;
	this.hueIndicator = c6;
	this.hueGraph = c5;
	this.hueContainer = c4;
	this.hsvControls = c11;
	this.controlsStack = c10;
	this.colorPreviewContainer = c39;
	this.colorPreview = c40;
	c12.set_text(haxe_ui_locale_LocaleManager.get_instance().lookupString("hue"));
	haxe_ui_locale_LocaleManager.get_instance().registerComponent(c12,"text",function() {
		return haxe_ui_locale_LocaleManager.get_instance().lookupString("hue");
	});
	c16.set_text(haxe_ui_locale_LocaleManager.get_instance().lookupString("saturation"));
	haxe_ui_locale_LocaleManager.get_instance().registerComponent(c16,"text",function() {
		return haxe_ui_locale_LocaleManager.get_instance().lookupString("saturation");
	});
	c20.set_text(haxe_ui_locale_LocaleManager.get_instance().lookupString("brightness"));
	haxe_ui_locale_LocaleManager.get_instance().registerComponent(c20,"text",function() {
		return haxe_ui_locale_LocaleManager.get_instance().lookupString("brightness");
	});
	c25.set_text(haxe_ui_locale_LocaleManager.get_instance().lookupString("red"));
	haxe_ui_locale_LocaleManager.get_instance().registerComponent(c25,"text",function() {
		return haxe_ui_locale_LocaleManager.get_instance().lookupString("red");
	});
	c29.set_text(haxe_ui_locale_LocaleManager.get_instance().lookupString("green"));
	haxe_ui_locale_LocaleManager.get_instance().registerComponent(c29,"text",function() {
		return haxe_ui_locale_LocaleManager.get_instance().lookupString("green");
	});
	c33.set_text(haxe_ui_locale_LocaleManager.get_instance().lookupString("blue"));
	haxe_ui_locale_LocaleManager.get_instance().registerComponent(c33,"text",function() {
		return haxe_ui_locale_LocaleManager.get_instance().lookupString("blue");
	});
	this.saturationValueGraph.componentGraphics.setProperty("html5.graphics.method","canvas");
	this.hueGraph.componentGraphics.setProperty("html5.graphics.method","canvas");
	this.set_currentColor(16711680);
	var c = this.controlsStack;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onControlStackChange));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "controlsStack" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputSaturation;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputValue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputRed;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputRed" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputGreen;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputGreen" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputBlue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputBlue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHex;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHex" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputSaturation;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputValue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputRed;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputRed" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputGreen;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputGreen" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputBlue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputBlue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHex;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHex" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputSaturation;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputValue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputRed;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputRed" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputGreen;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputGreen" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputBlue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputBlue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHex;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHex" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputSaturation;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputValue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputRed;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputRed" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputGreen;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputGreen" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputBlue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputBlue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHex;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHex" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputSaturation;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputValue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputRed;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputRed" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputGreen;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputGreen" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputBlue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputBlue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHex;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHex" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputSaturation;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputValue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputRed;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputRed" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputGreen;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputGreen" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputBlue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputBlue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHex;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHex" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputSaturation;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputValue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputRed;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputRed" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputGreen;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputGreen" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputBlue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputBlue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHex;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHex" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderHue;
	if(c != null) {
		c.registerEvent("dragstart",$bind(this,this.onSliderDragStart));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderSaturation;
	if(c != null) {
		c.registerEvent("dragstart",$bind(this,this.onSliderDragStart));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderValue;
	if(c != null) {
		c.registerEvent("dragstart",$bind(this,this.onSliderDragStart));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderHue;
	if(c != null) {
		c.registerEvent("dragstart",$bind(this,this.onSliderDragStart));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderSaturation;
	if(c != null) {
		c.registerEvent("dragstart",$bind(this,this.onSliderDragStart));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderValue;
	if(c != null) {
		c.registerEvent("dragstart",$bind(this,this.onSliderDragStart));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderHue;
	if(c != null) {
		c.registerEvent("dragstart",$bind(this,this.onSliderDragStart));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderSaturation;
	if(c != null) {
		c.registerEvent("dragstart",$bind(this,this.onSliderDragStart));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderValue;
	if(c != null) {
		c.registerEvent("dragstart",$bind(this,this.onSliderDragStart));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderHue;
	if(c != null) {
		c.registerEvent("dragend",$bind(this,this.onSliderDragEnd));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderSaturation;
	if(c != null) {
		c.registerEvent("dragend",$bind(this,this.onSliderDragEnd));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderValue;
	if(c != null) {
		c.registerEvent("dragend",$bind(this,this.onSliderDragEnd));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderHue;
	if(c != null) {
		c.registerEvent("dragend",$bind(this,this.onSliderDragEnd));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderSaturation;
	if(c != null) {
		c.registerEvent("dragend",$bind(this,this.onSliderDragEnd));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderValue;
	if(c != null) {
		c.registerEvent("dragend",$bind(this,this.onSliderDragEnd));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderHue;
	if(c != null) {
		c.registerEvent("dragend",$bind(this,this.onSliderDragEnd));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderSaturation;
	if(c != null) {
		c.registerEvent("dragend",$bind(this,this.onSliderDragEnd));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderValue;
	if(c != null) {
		c.registerEvent("dragend",$bind(this,this.onSliderDragEnd));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderHue;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onHueSliderChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHue;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onHueInputChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderSaturation;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onSaturationSliderChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputSaturation;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onSaturationInputChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderValue;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onValueSliderChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputValue;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onValueInputChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderRed;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onRedSliderChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderRed" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputRed;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onRedInputChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputRed" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderGreen;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onGreenSliderChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderGreen" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputGreen;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onGreenInputChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputGreen" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderBlue;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onBlueSliderChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderBlue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputBlue;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onBlueInputChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputBlue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHex;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onHexInputChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHex" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.saturationValueGraph;
	if(c != null) {
		c.registerEvent("mousedown",$bind(this,this.onSaturationValueGraphDown));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "saturationValueGraph" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.hueGraph;
	if(c != null) {
		c.registerEvent("mousedown",$bind(this,this.onHueGraphDown));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "hueGraph" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
};
$hxClasses["haxe.ui.components._ColorPicker.HSVColorPickerImpl"] = haxe_ui_components__$ColorPicker_HSVColorPickerImpl;
haxe_ui_components__$ColorPicker_HSVColorPickerImpl.__name__ = "haxe.ui.components._ColorPicker.HSVColorPickerImpl";
haxe_ui_components__$ColorPicker_HSVColorPickerImpl.__super__ = haxe_ui_components__$ColorPicker_ColorPickerImpl;
haxe_ui_components__$ColorPicker_HSVColorPickerImpl.prototype = $extend(haxe_ui_components__$ColorPicker_ColorPickerImpl.prototype,{
	_currentColorHSV: null
	,_currentColorRGBF: null
	,_lastColor: null
	,set_currentColor: function(value) {
		this._currentColorHSV = haxe_ui_util_ColorUtil.toHSV(value);
		this._currentColorRGBF = haxe_ui_util_ColorUtil.hsvToRGBF(this._currentColorHSV.h,this._currentColorHSV.s,this._currentColorHSV.v);
		return haxe_ui_components__$ColorPicker_ColorPickerImpl.prototype.set_currentColor.call(this,value);
	}
	,onCurrentColorChanged: function() {
		this.invalidateComponent("data",false);
	}
	,validateComponentData: function() {
		haxe_ui_components__$ColorPicker_ColorPickerImpl.prototype.validateComponentData.call(this);
		this._currentColorRGBF.r = Math.round(this._currentColorRGBF.r);
		this._currentColorRGBF.g = Math.round(this._currentColorRGBF.g);
		this._currentColorRGBF.b = Math.round(this._currentColorRGBF.b);
		this.updateSaturationValueGraph();
		this.updateHueGraph();
		if(this.isHSV()) {
			this.sliderHue.set_pos(this._currentColorHSV.h);
			this.sliderSaturation.set_pos(this._currentColorHSV.s);
			this.sliderValue.set_pos(this._currentColorHSV.v);
			this.inputHue.set_text("" + Math.round(this._currentColorHSV.h));
			this.inputSaturation.set_text("" + Math.round(this._currentColorHSV.s));
			this.inputValue.set_text("" + Math.round(this._currentColorHSV.v));
		} else if(this.isRGB()) {
			this.sliderRed.set_pos(this._currentColorRGBF.r);
			this.sliderGreen.set_pos(this._currentColorRGBF.g);
			this.sliderBlue.set_pos(this._currentColorRGBF.b);
			this.inputRed.set_text("" + Math.round(this._currentColorRGBF.r));
			this.inputGreen.set_text("" + Math.round(this._currentColorRGBF.g));
			this.inputBlue.set_text("" + Math.round(this._currentColorRGBF.b));
		}
		this.inputHex.set_text(StringTools.hex(this._currentColorRGBF.r | 0,2) + StringTools.hex(this._currentColorRGBF.g | 0,2) + StringTools.hex(this._currentColorRGBF.b | 0,2));
		var coord = this.saturationValueCoordFromHSV(this._currentColorHSV.h,this._currentColorHSV.s,this._currentColorHSV.v);
		this.saturationValueIndicator.set_left(coord.x | 0);
		this.saturationValueIndicator.set_top((coord.y | 0) - 1);
		var coord = this.hueCoordFromHSV(this._currentColorHSV.h,this._currentColorHSV.s,this._currentColorHSV.v);
		this.hueIndicator.set_left(coord.x | 0);
		this.hueIndicator.set_top(coord.y | 0);
		this._currentColor = haxe_ui_util_Color.fromComponents(Math.round(this._currentColorRGBF.r),Math.round(this._currentColorRGBF.g),Math.round(this._currentColorRGBF.b),255);
		this.colorPreview.set_backgroundColor(haxe_ui_util_Color.fromString(haxe_ui_util_Color.toHex(this._currentColor)));
		if(this._lastColor != this._currentColor) {
			this._lastColor = this._currentColor;
			this.dispatch(new haxe_ui_events_UIEvent("change"));
		}
	}
	,updateSaturationValueGraph: function() {
		var cx = this.saturationValueGraph.get_width();
		var cy = this.saturationValueGraph.get_height();
		if(cx <= 0 || cy <= 0) {
			return;
		}
		if(this._currentColorRGBF.r == 255 && this._currentColorRGBF.g == 255 && this._currentColorRGBF.b == 255) {
			return;
		}
		var stepX = 100 / cx;
		var stepY = 100 / cy;
		var bytes = new haxe_io_Bytes(new ArrayBuffer(cx * cy * 4 | 0));
		var _g = 0;
		var _g1 = cy | 0;
		while(_g < _g1) {
			var y = _g++;
			var _g2 = 0;
			var _g3 = cx | 0;
			while(_g2 < _g3) {
				var x = _g2++;
				var i = y * (cx * 4) + x * 4 | 0;
				var pixel = haxe_ui_util_ColorUtil.hsvToRGBF(this._currentColorHSV.h - 1,(x + 1) * stepX,100 - y * stepY);
				if(this.picker.get_disabled()) {
					var greypixel = haxe_ui_util_ColorUtil.rgbToGray(Math.round(pixel.r),Math.round(pixel.g),Math.round(pixel.b));
					bytes.b[i] = greypixel;
					bytes.b[i + 1] = greypixel;
					bytes.b[i + 2] = greypixel;
					bytes.b[i + 3] = 255;
				} else {
					bytes.b[i] = Math.round(pixel.r);
					bytes.b[i + 1] = Math.round(pixel.g);
					bytes.b[i + 2] = Math.round(pixel.b);
					bytes.b[i + 3] = 255;
				}
			}
		}
		this.saturationValueGraph.componentGraphics.clear();
		this.saturationValueGraph.componentGraphics.setPixels(bytes);
	}
	,updateHueGraph: function() {
		var cx = this.hueGraph.get_width();
		var cy = this.hueGraph.get_height();
		if(cx <= 0 || cy <= 0) {
			return;
		}
		if(this._currentColorRGBF.r == 255 && this._currentColorRGBF.g == 255 && this._currentColorRGBF.b == 255) {
			return;
		}
		var step = 360 / cx;
		var bytes = new haxe_io_Bytes(new ArrayBuffer(cx * cy * 4 | 0));
		var _g = 0;
		var _g1 = cy | 0;
		while(_g < _g1) {
			var y = _g++;
			var _g2 = 0;
			var _g3 = cx | 0;
			while(_g2 < _g3) {
				var x = _g2++;
				var i = y * (cx * 4) + x * 4 | 0;
				var c = haxe_ui_util_ColorUtil.hsvToRGBF(x * step,100,100);
				if(this.picker.get_disabled()) {
					var greypixel = haxe_ui_util_ColorUtil.rgbToGray(Math.round(c.r),Math.round(c.g),Math.round(c.b));
					bytes.b[i] = greypixel;
					bytes.b[i + 1] = greypixel;
					bytes.b[i + 2] = greypixel;
					bytes.b[i + 3] = 255;
				} else {
					bytes.b[i] = Math.round(c.r);
					bytes.b[i + 1] = Math.round(c.g);
					bytes.b[i + 2] = Math.round(c.b);
					bytes.b[i + 3] = 255;
				}
			}
		}
		this.hueGraph.componentGraphics.clear();
		this.hueGraph.componentGraphics.setPixels(bytes);
	}
	,onControlStackChange: function(_) {
		this.onCurrentColorChanged();
	}
	,isHSV: function() {
		return this.controlsStack.get_selectedIndex() == 0;
	}
	,isRGB: function() {
		return this.controlsStack.get_selectedIndex() == 1;
	}
	,onInputFocus: function(e) {
	}
	,_sliderTracking: null
	,onSliderDragStart: function(_) {
		this._sliderTracking = true;
	}
	,onSliderDragEnd: function(_) {
		this._sliderTracking = false;
	}
	,onHueSliderChanged: function(_) {
		this.applyHSV({ h : this.sliderHue.get_pos(), s : this._currentColorHSV.s, v : this._currentColorHSV.v});
	}
	,onHueInputChanged: function(_) {
		if(this.inputHue.get_text() == null || this.inputHue.get_text() == "") {
			return;
		}
		var v = parseFloat(this.inputHue.get_text());
		if(v > 360) {
			v = 360;
		}
		this.sliderHue.set_pos(v);
	}
	,onSaturationSliderChanged: function(_) {
		this.applyHSV({ h : this._currentColorHSV.h, s : this.sliderSaturation.get_pos(), v : this._currentColorHSV.v});
	}
	,onSaturationInputChanged: function(_) {
		if(this.inputSaturation.get_text() == null || this.inputSaturation.get_text() == "") {
			return;
		}
		var v = parseFloat(this.inputSaturation.get_text());
		if(v > 100) {
			v = 100;
		}
		this.sliderSaturation.set_pos(v);
	}
	,onValueSliderChanged: function(_) {
		this.applyHSV({ h : this._currentColorHSV.h, s : this._currentColorHSV.s, v : this.sliderValue.get_pos()});
	}
	,onValueInputChanged: function(_) {
		if(this.inputValue.get_text() == null || this.inputValue.get_text() == "") {
			return;
		}
		var v = parseFloat(this.inputValue.get_text());
		if(v > 100) {
			v = 100;
		}
		this.sliderValue.set_pos(v);
	}
	,onRedSliderChanged: function(_) {
		this.applyHSV(haxe_ui_util_ColorUtil.rgbfToHSV(this.sliderRed.get_pos(),this._currentColorRGBF.g,this._currentColorRGBF.b));
	}
	,onRedInputChanged: function(_) {
		if(this.inputRed.get_text() == null || this.inputRed.get_text() == "") {
			return;
		}
		var v = parseFloat(this.inputRed.get_text());
		if(v > 255) {
			v = 255;
		}
		this.sliderRed.set_pos(v);
	}
	,onGreenSliderChanged: function(_) {
		this.applyHSV(haxe_ui_util_ColorUtil.rgbfToHSV(this._currentColorRGBF.r,this.sliderGreen.get_pos(),this._currentColorRGBF.b));
	}
	,onGreenInputChanged: function(_) {
		if(this.inputGreen.get_text() == null || this.inputGreen.get_text() == "") {
			return;
		}
		var v = parseFloat(this.inputGreen.get_text());
		if(v > 255) {
			v = 255;
		}
		this.sliderGreen.set_pos(v);
	}
	,onBlueSliderChanged: function(_) {
		this.applyHSV(haxe_ui_util_ColorUtil.rgbfToHSV(this._currentColorRGBF.r,this._currentColorRGBF.g,this.sliderBlue.get_pos()));
	}
	,onBlueInputChanged: function(_) {
		if(this.inputBlue.get_text() == null || this.inputBlue.get_text() == "") {
			return;
		}
		var v = parseFloat(this.inputBlue.get_text());
		if(v > 255) {
			v = 255;
		}
		this.sliderBlue.set_pos(v);
	}
	,onHexInputChanged: function(_) {
		if(this.inputHex.get_text() == null || this.inputHex.get_text() == "" || this.inputHex.get_text().length != 6) {
			return;
		}
		var hexR = HxOverrides.substr(this.inputHex.get_text(),0,2);
		var hexG = HxOverrides.substr(this.inputHex.get_text(),2,2);
		var hexB = HxOverrides.substr(this.inputHex.get_text(),4,2);
		var r = Std.parseInt("0x" + hexR);
		var g = Std.parseInt("0x" + hexG);
		var b = Std.parseInt("0x" + hexB);
		if(this._trackingSaturationValue == false && this._sliderTracking == false) {
			this.applyHSV(haxe_ui_util_ColorUtil.rgbfToHSV(r,g,b));
		}
	}
	,applyHSV: function(newHSV) {
		this._currentColorHSV = newHSV;
		this._currentColorRGBF = haxe_ui_util_ColorUtil.hsvToRGBF(newHSV.h,newHSV.s,newHSV.v);
		this.onCurrentColorChanged();
	}
	,_trackingSaturationValue: null
	,onSaturationValueGraphDown: function(e) {
		e.cancel();
		this._trackingSaturationValue = true;
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this.applyHSVFromCoord(e.screenX - this.saturationValueGraph.get_screenLeft(),e.screenY - this.saturationValueGraph.get_screenTop());
	}
	,_trackingHue: null
	,onHueGraphDown: function(e) {
		e.cancel();
		this._trackingHue = true;
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this.applyHueFromCoord(e.screenX - this.hueGraph.get_screenLeft(),e.screenY - this.hueGraph.get_screenTop());
	}
	,onScreenMouseMove: function(e) {
		if(this._trackingSaturationValue) {
			this.applyHSVFromCoord(e.screenX - this.saturationValueGraph.get_screenLeft(),e.screenY - this.saturationValueGraph.get_screenTop());
		} else if(this._trackingHue) {
			this.applyHueFromCoord(e.screenX - this.hueGraph.get_screenLeft(),e.screenY - this.hueGraph.get_screenTop());
		}
	}
	,onScreenMouseUp: function(e) {
		this._trackingSaturationValue = false;
		this._trackingHue = false;
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
	}
	,applyHSVFromCoord: function(x,y) {
		var cx = this.saturationValueGraph.get_width();
		var cy = this.saturationValueGraph.get_height();
		if(x > cx) {
			x = cx;
		} else if(x < 0) {
			x = 0;
		}
		if(y > cy) {
			y = cy;
		} else if(y < 0) {
			y = 0;
		}
		var newHSV = this.hsvFromSaturationValueCoord(this._currentColorHSV.h,x,y);
		this._currentColorHSV = newHSV;
		this._currentColorRGBF = haxe_ui_util_ColorUtil.hsvToRGBF(newHSV.h,newHSV.s,newHSV.v);
		this.onCurrentColorChanged();
	}
	,applyHueFromCoord: function(x,y) {
		var cx = this.hueGraph.get_width();
		var step = 360 / (this.hueGraph.get_width() - 10);
		var hue = (x - 3) * step;
		this.applyHSV({ h : hue, s : this._currentColorHSV.s, v : this._currentColorHSV.v});
	}
	,hsvFromSaturationValueCoord: function(hue,x,y) {
		var stepX = 100 / this.saturationValueGraph.get_width();
		var stepY = 100 / this.saturationValueGraph.get_height();
		var s = x * stepX;
		var v = 100 - y * stepY;
		return { h : hue, s : s, v : v};
	}
	,saturationValueCoordFromHSV: function(hue,saturation,value) {
		var stepX = 100 / this.saturationValueGraph.get_width();
		var stepY = 100 / this.saturationValueGraph.get_height();
		var x = (saturation - 1) / stepX;
		var y = (100 - value) / stepY;
		return new haxe_ui_geom_Point(x,y);
	}
	,hueCoordFromHSV: function(hue,saturation,value) {
		var step = 360 / (this.hueGraph.get_width() - 10);
		var x = hue / step;
		var y = 3;
		return new haxe_ui_geom_Point(x + 3,y);
	}
	,onStyleClassChanged: function() {
		if(this.picker.classes.indexOf("no-sliders") != -1 || this.picker.classes.indexOf("no-text-inputs") != -1) {
			this.hsvControls.set_columns(3);
			this.rgbControls.set_columns(3);
		} else {
			this.hsvControls.set_columns(4);
			this.rgbControls.set_columns(4);
		}
	}
	,sliderValue: null
	,sliderSaturation: null
	,sliderRed: null
	,sliderHue: null
	,sliderGreen: null
	,sliderBlue: null
	,saturationValueIndicator: null
	,saturationValueGraph: null
	,saturationValueContainer: null
	,rgbControls: null
	,prevControls: null
	,nextControls: null
	,inputValue: null
	,inputSaturation: null
	,inputRed: null
	,inputHue: null
	,inputHex: null
	,inputGreen: null
	,inputBlue: null
	,hueIndicator: null
	,hueGraph: null
	,hueContainer: null
	,hsvControls: null
	,controlsStack: null
	,colorPreviewContainer: null
	,colorPreview: null
	,registerBehaviours: function() {
		haxe_ui_components__$ColorPicker_ColorPickerImpl.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components__$ColorPicker_ColorPickerImpl.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components__$ColorPicker_HSVColorPickerImpl();
	}
	,__class__: haxe_ui_components__$ColorPicker_HSVColorPickerImpl
});
var haxe_ui_components_Column = function() {
	this._sortDirection = null;
	haxe_ui_components_Button.call(this);
};
$hxClasses["haxe.ui.components.Column"] = haxe_ui_components_Column;
haxe_ui_components_Column.__name__ = "haxe.ui.components.Column";
haxe_ui_components_Column.__super__ = haxe_ui_components_Button;
haxe_ui_components_Column.prototype = $extend(haxe_ui_components_Button.prototype,{
	sortField: null
	,get_sortable: function() {
		return this.classes.indexOf("sortable") != -1;
	}
	,set_sortable: function(value) {
		if(value == true) {
			this.addClass("sortable");
		} else {
			this.removeClass("sortable");
		}
		return value;
	}
	,_sortDirection: null
	,get_sortDirection: function() {
		return this._sortDirection;
	}
	,set_sortDirection: function(value) {
		if(value == this._sortDirection) {
			return value;
		}
		this._sortDirection = value;
		this.set_sortable(true);
		if(this._sortDirection == "asc") {
			this.swapClass("sort-asc","sort-desc");
		} else if(this._sortDirection == "desc") {
			this.swapClass("sort-desc","sort-asc");
		} else if(this.get_sortDirection() == null) {
			this.removeClasses(["sort-asc","sort-desc"]);
		}
		return value;
	}
	,registerComposite: function() {
		haxe_ui_components_Button.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$Column_Events;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Button.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Button.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Column();
	}
	,__class__: haxe_ui_components_Column
	,__properties__: $extend(haxe_ui_components_Button.prototype.__properties__,{set_sortDirection:"set_sortDirection",get_sortDirection:"get_sortDirection",set_sortable:"set_sortable",get_sortable:"get_sortable"})
});
var haxe_ui_components__$Column_Events = function(column) {
	var _gthis = this;
	haxe_ui_components_ButtonEvents.call(this,column);
	this._column = column;
	this._column.registerEvent("click",$bind(this,this.onColumnClick));
	this._column.registerEvent("ready",function(_) {
		if(_gthis._column.get_sortDirection() != null) {
			var sortEvent = new haxe_ui_events_SortEvent("sortchanged");
			sortEvent.direction = _gthis._column.get_sortDirection();
			_gthis._column.dispatch(sortEvent);
		}
	});
};
$hxClasses["haxe.ui.components._Column.Events"] = haxe_ui_components__$Column_Events;
haxe_ui_components__$Column_Events.__name__ = "haxe.ui.components._Column.Events";
haxe_ui_components__$Column_Events.__super__ = haxe_ui_components_ButtonEvents;
haxe_ui_components__$Column_Events.prototype = $extend(haxe_ui_components_ButtonEvents.prototype,{
	_column: null
	,onMouseDown: function(event) {
		var components = this._column.findComponentsUnderPoint(event.screenX,event.screenY,haxe_ui_core_InteractiveComponent);
		HxOverrides.remove(components,this._column);
		if(components.length == 0) {
			haxe_ui_components_ButtonEvents.prototype.onMouseDown.call(this,event);
		}
	}
	,onColumnClick: function(event) {
		if(this._column.get_sortable() == false) {
			return;
		}
		if(this._column.get_sortDirection() == null) {
			this._column.set_sortDirection("asc");
		} else if(this._column.get_sortDirection() == "asc") {
			this._column.set_sortDirection("desc");
		} else if(this._column.get_sortDirection() == "desc") {
			this._column.set_sortDirection("asc");
		}
		var sortEvent = new haxe_ui_events_SortEvent("sortchanged");
		sortEvent.direction = this._column.get_sortDirection();
		this._column.dispatch(sortEvent);
	}
	,__class__: haxe_ui_components__$Column_Events
});
var haxe_ui_components__$DropDown_HideDropDown = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._DropDown.HideDropDown"] = haxe_ui_components__$DropDown_HideDropDown;
haxe_ui_components__$DropDown_HideDropDown.__name__ = "haxe.ui.components._DropDown.HideDropDown";
haxe_ui_components__$DropDown_HideDropDown.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$DropDown_HideDropDown.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	call: function(param) {
		var events = js_Boot.__cast(this._component._internalEvents , haxe_ui_components_DropDownEvents);
		events.hideDropDown();
		return null;
	}
	,__class__: haxe_ui_components__$DropDown_HideDropDown
});
var haxe_ui_components__$DropDown_ShowDropDown = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._DropDown.ShowDropDown"] = haxe_ui_components__$DropDown_ShowDropDown;
haxe_ui_components__$DropDown_ShowDropDown.__name__ = "haxe.ui.components._DropDown.ShowDropDown";
haxe_ui_components__$DropDown_ShowDropDown.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$DropDown_ShowDropDown.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	call: function(param) {
		var events = js_Boot.__cast(this._component._internalEvents , haxe_ui_components_DropDownEvents);
		events.showDropDown();
		return null;
	}
	,__class__: haxe_ui_components__$DropDown_ShowDropDown
});
var haxe_ui_components__$DropDown_DataSourceBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._DropDown.DataSourceBehaviour"] = haxe_ui_components__$DropDown_DataSourceBehaviour;
haxe_ui_components__$DropDown_DataSourceBehaviour.__name__ = "haxe.ui.components._DropDown.DataSourceBehaviour";
haxe_ui_components__$DropDown_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$DropDown_DataSourceBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value) == true) {
			this._value = haxe_ui_util_Variant.fromDataSource(new haxe_ui_data_ArrayDataSource());
		}
		return this._value;
	}
	,set: function(value) {
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		handler.reset();
		if(this._component.get_text() == null && this._component.get_isReady()) {
			(js_Boot.__cast(this._component , haxe_ui_components_DropDown)).set_selectedIndex(0);
		}
	}
	,__class__: haxe_ui_components__$DropDown_DataSourceBehaviour
});
var haxe_ui_components__$DropDown_SelectedIndexBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._DropDown.SelectedIndexBehaviour"] = haxe_ui_components__$DropDown_SelectedIndexBehaviour;
haxe_ui_components__$DropDown_SelectedIndexBehaviour.__name__ = "haxe.ui.components._DropDown.SelectedIndexBehaviour";
haxe_ui_components__$DropDown_SelectedIndexBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$DropDown_SelectedIndexBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		handler.set_selectedIndex(haxe_ui_util_Variant.toInt(this._value));
	}
	,get: function() {
		if(this._component.get_isReady() == false) {
			return haxe_ui_behaviours_DataBehaviour.prototype.get.call(this);
		}
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		return haxe_ui_util_Variant.fromInt(handler.get_selectedIndex());
	}
	,set: function(value) {
		if(this._component.get_isReady() == false) {
			haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
			return;
		}
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		this._value = value;
		this.invalidateData();
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		handler.set_selectedIndex(haxe_ui_util_Variant.toInt(this._value));
	}
	,__class__: haxe_ui_components__$DropDown_SelectedIndexBehaviour
});
var haxe_ui_components__$DropDown_SelectedItemBehaviour = function(component) {
	haxe_ui_behaviours_DynamicDataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._DropDown.SelectedItemBehaviour"] = haxe_ui_components__$DropDown_SelectedItemBehaviour;
haxe_ui_components__$DropDown_SelectedItemBehaviour.__name__ = "haxe.ui.components._DropDown.SelectedItemBehaviour";
haxe_ui_components__$DropDown_SelectedItemBehaviour.__super__ = haxe_ui_behaviours_DynamicDataBehaviour;
haxe_ui_components__$DropDown_SelectedItemBehaviour.prototype = $extend(haxe_ui_behaviours_DynamicDataBehaviour.prototype,{
	validateData: function() {
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		handler.set_selectedItem(this._value);
	}
	,getDynamic: function() {
		if(this._component.get_isReady() == false) {
			return this._value;
		}
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		return handler.get_selectedItem();
	}
	,setDynamic: function(value) {
		if(this._component.get_isReady() == false) {
			haxe_ui_behaviours_DynamicDataBehaviour.prototype.setDynamic.call(this,value);
			return;
		}
		this._value = value;
		this.invalidateData();
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		handler.set_selectedItem(value);
	}
	,__class__: haxe_ui_components__$DropDown_SelectedItemBehaviour
});
var haxe_ui_components__$DropDown_SearchFieldBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._DropDown.SearchFieldBehaviour"] = haxe_ui_components__$DropDown_SearchFieldBehaviour;
haxe_ui_components__$DropDown_SearchFieldBehaviour.__name__ = "haxe.ui.components._DropDown.SearchFieldBehaviour";
haxe_ui_components__$DropDown_SearchFieldBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$DropDown_SearchFieldBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		var events = js_Boot.__cast(this._component._internalEvents , haxe_ui_components_DropDownEvents);
		return haxe_ui_util_Variant.fromComponent(events.get_searchField());
	}
	,set: function(value) {
		var events = js_Boot.__cast(this._component._internalEvents , haxe_ui_components_DropDownEvents);
		events.set_searchField(haxe_ui_util_Variant.toComponent(value));
	}
	,__class__: haxe_ui_components__$DropDown_SearchFieldBehaviour
});
var haxe_ui_components_IDropDownHandler = function() { };
$hxClasses["haxe.ui.components.IDropDownHandler"] = haxe_ui_components_IDropDownHandler;
haxe_ui_components_IDropDownHandler.__name__ = "haxe.ui.components.IDropDownHandler";
haxe_ui_components_IDropDownHandler.__isInterface__ = true;
haxe_ui_components_IDropDownHandler.prototype = {
	get_component: null
	,get_selectedIndex: null
	,set_selectedIndex: null
	,get_selectedItem: null
	,set_selectedItem: null
	,component: null
	,prepare: null
	,reset: null
	,applyDefault: null
	,pauseEvents: null
	,resumeEvents: null
	,__class__: haxe_ui_components_IDropDownHandler
	,__properties__: {set_selectedItem:"set_selectedItem",get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",get_component:"get_component"}
};
var haxe_ui_components_DropDownHandler = function(dropdown) {
	this.eventsPaused = false;
	this._dropdown = dropdown;
};
$hxClasses["haxe.ui.components.DropDownHandler"] = haxe_ui_components_DropDownHandler;
haxe_ui_components_DropDownHandler.__name__ = "haxe.ui.components.DropDownHandler";
haxe_ui_components_DropDownHandler.__interfaces__ = [haxe_ui_components_IDropDownHandler];
haxe_ui_components_DropDownHandler.prototype = {
	_dropdown: null
	,component: null
	,get_component: function() {
		return null;
	}
	,prepare: function(wrapper) {
	}
	,reset: function() {
	}
	,get_selectedIndex: function() {
		return -1;
	}
	,set_selectedIndex: function(value) {
		return value;
	}
	,get_selectedItem: function() {
		return null;
	}
	,set_selectedItem: function(value) {
		return value;
	}
	,applyDefault: function() {
	}
	,eventsPaused: null
	,pauseEvents: function() {
		this.eventsPaused = true;
	}
	,resumeEvents: function() {
		var _gthis = this;
		haxe_ui_Toolkit.callLater(function() {
			_gthis.eventsPaused = false;
		});
	}
	,__class__: haxe_ui_components_DropDownHandler
	,__properties__: {set_selectedItem:"set_selectedItem",get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",get_component:"get_component"}
};
var haxe_ui_components__$DropDown_ListDropDownHandler = function(dropdown) {
	this._cachedSelectedItem = null;
	this._cachedSelectedIndex = -1;
	haxe_ui_components_DropDownHandler.call(this,dropdown);
};
$hxClasses["haxe.ui.components._DropDown.ListDropDownHandler"] = haxe_ui_components__$DropDown_ListDropDownHandler;
haxe_ui_components__$DropDown_ListDropDownHandler.__name__ = "haxe.ui.components._DropDown.ListDropDownHandler";
haxe_ui_components__$DropDown_ListDropDownHandler.__super__ = haxe_ui_components_DropDownHandler;
haxe_ui_components__$DropDown_ListDropDownHandler.prototype = $extend(haxe_ui_components_DropDownHandler.prototype,{
	_listview: null
	,get_component: function() {
		this.createListView();
		return this._listview;
	}
	,reset: function() {
		if(this._listview != null) {
			this._listview.set_dataSource(this._dropdown.get_dataSource());
		}
	}
	,prepare: function(wrapper) {
		var itemCount = 4;
		if(this._dropdown.get_dropdownSize() != null) {
			itemCount = this._dropdown.get_dropdownSize();
		}
		if(this._listview.get_dataSource() != null && this._listview.get_dataSource().get_size() < itemCount) {
			itemCount = this._listview.get_dataSource().get_size();
		}
		if(itemCount > 0 && this._dropdown.get_dropdownHeight() == null) {
			this._listview.set_itemCount(itemCount);
		}
		this._listview.syncComponentValidation();
		if(this._dropdown.get_dropdownWidth() == null) {
			wrapper.syncComponentValidation();
			var offset = 0;
			if(wrapper.get_layout() != null) {
				offset = wrapper.get_layout().get_paddingLeft() + wrapper.get_layout().get_paddingRight();
			}
			this._listview.set_width(this._dropdown.get_width() - offset);
		} else {
			this._listview.set_width(this._dropdown.get_dropdownWidth());
		}
		if(this._dropdown.get_dropdownHeight() != null) {
			this._listview.set_height(this._dropdown.get_dropdownHeight());
		}
		var selectedIndex = this._dropdown.get_selectedIndex();
		if(this._dropdown.get_dataSource() != null && this._dropdown.get_text() != null && selectedIndex < 0) {
			var text = this._dropdown.get_text();
			var itemIndex = this.indexOfItem(text);
			if(itemIndex != -1) {
				selectedIndex = itemIndex;
			}
		}
		this._listview.unregisterEvent("change",$bind(this,this.onListChange));
		this._listview.set_selectedIndex(selectedIndex);
		this._listview.syncComponentValidation();
		this._listview.registerEvent("change",$bind(this,this.onListChange));
	}
	,_cachedSelectedIndex: null
	,get_selectedIndex: function() {
		if(this._listview == null) {
			return this._cachedSelectedIndex;
		}
		return this._listview.get_selectedIndex();
	}
	,set_selectedIndex: function(value) {
		var data = null;
		var dispatchChanged = false;
		if(this._listview != null && this._cachedSelectedIndex != value) {
			this._cachedSelectedIndex = value;
			this._listview.set_selectedIndex(value);
		} else if(this._cachedSelectedIndex != value) {
			this._cachedSelectedIndex = value;
			if(this._dropdown.get_dataSource() != null && value >= 0 && value < this._dropdown.get_dataSource().get_size()) {
				data = this._dropdown.get_dataSource().get(value);
			}
			dispatchChanged = true;
		}
		if(this._dropdown.get_dataSource() != null && value >= 0 && value < this._dropdown.get_dataSource().get_size()) {
			var data1 = this._dropdown.get_dataSource().get(value);
			var itemRenderer = this._dropdown.findComponent(null,haxe_ui_core_ItemRenderer);
			if(itemRenderer == null) {
				var text = null;
				if(Type.typeof(data1) == ValueType.TObject) {
					text = data1.text;
					if(text == null) {
						text = data1.value;
					}
				} else {
					text = Std.string(data1);
				}
				this._dropdown.set_text(text);
			} else {
				itemRenderer.set_data(data1);
			}
		}
		if(dispatchChanged) {
			var event = new haxe_ui_events_UIEvent("change",false,data);
			event.value = haxe_ui_util_Variant.fromDynamic(data);
			this._dropdown.dispatch(event);
		}
		return value;
	}
	,indexOfItem: function(text) {
		if(text == null) {
			return -1;
		}
		var index = -1;
		if(this._dropdown.get_dataSource() != null) {
			var _g = 0;
			var _g1 = this._dropdown.get_dataSource().get_size();
			while(_g < _g1) {
				var i = _g++;
				var item = this._dropdown.get_dataSource().get(i);
				if(item == text || item.value == text || item.text == text) {
					index = i;
				}
			}
		}
		if(index == -1 && this._dropdown.get_dataSource() != null) {
			var expr = haxe_ui_locale_LocaleManager.get_instance().findBindingExpr(this._dropdown,"text");
			if(expr != null) {
				text = expr;
				var _g = 0;
				var _g1 = this._dropdown.get_dataSource().get_size();
				while(_g < _g1) {
					var i = _g++;
					var item = this._dropdown.get_dataSource().get(i);
					if(item == text || item.value == text || item.text == text) {
						index = i;
					}
				}
			}
		}
		return index;
	}
	,get_selectedItem: function() {
		if(this._listview == null) {
			if(this._cachedSelectedIndex >= 0 && this._cachedSelectedIndex < this._dropdown.get_dataSource().get_size()) {
				var data = this._dropdown.get_dataSource().get(this._cachedSelectedIndex);
				return data;
			} else {
				return this._cachedSelectedItem;
			}
		}
		return this._listview.get_selectedItem();
	}
	,_cachedSelectedItem: null
	,set_selectedItem: function(value) {
		if(value == null) {
			return value;
		}
		var text = null;
		if(Type.typeof(value) == ValueType.TObject) {
			text = value.text;
			if(text == null) {
				text = value.value;
			}
		} else {
			text = Std.string(value);
		}
		var index = this.indexOfItem(text);
		this.set_selectedIndex(index);
		return value;
	}
	,createListView: function() {
		var _gthis = this;
		if(this._listview == null) {
			this._listview = new haxe_ui_containers_ListView();
			if(this._dropdown.get_itemRenderer() != null) {
				this._listview.addComponent(this._dropdown.get_itemRenderer());
			}
			this._listview.componentTabIndex = -1;
			this._listview.set_virtual(this._dropdown.get_virtual());
			this._listview.set_dataSource(this._dropdown.get_dataSource());
			if(this._cachedSelectedIndex != -1) {
				this._listview.set_selectedIndex(this._cachedSelectedIndex);
			}
			if(this._dropdown.get_id() != null) {
				this._listview.addClass(this._dropdown.get_id() + "-listview");
				this._listview.set_id(this._dropdown.get_id() + "_listview");
			}
			this._listview.registerEvent("actionstart",function(e) {
				switch(e.action) {
				case "actionBack":case "actionCancel":
					e.cancel();
					(js_Boot.__cast(_gthis._dropdown._internalEvents , haxe_ui_components_DropDownEvents)).hideDropDown();
					break;
				case "actionConfirm":case "actionPress":
					e.cancel();
					_gthis.applySelection();
					break;
				default:
				}
			});
		}
	}
	,onListChange: function(event) {
		if(((event.relatedEvent) instanceof haxe_ui_events_MouseEvent)) {
			this.applySelection();
		}
	}
	,applySelection: function() {
		if(this._listview.get_selectedItem() == null) {
			return;
		}
		var currentHover = this._listview.findComponent(":hover",null,true,"css");
		if(currentHover != null) {
			currentHover.removeClass(":hover");
		}
		var selectedItem = this._listview.get_selectedItem();
		var itemRenderer = this._dropdown.findComponent(null,haxe_ui_core_ItemRenderer);
		if(itemRenderer == null) {
			var text = null;
			if(Type.typeof(selectedItem) == ValueType.TObject) {
				text = this._listview.get_selectedItem().text;
				if(text == null) {
					text = this._listview.get_selectedItem().value;
				}
			} else {
				text = Std.string(selectedItem);
			}
			this._dropdown.set_text(text);
		} else {
			itemRenderer.set_data(selectedItem);
		}
		if(this.eventsPaused == false) {
			(js_Boot.__cast(this._dropdown._internalEvents , haxe_ui_components_DropDownEvents)).hideDropDown();
			var event = new haxe_ui_events_UIEvent("change",false,selectedItem);
			event.value = haxe_ui_util_Variant.fromDynamic(selectedItem);
			this._dropdown.dispatch(event);
		}
	}
	,applyDefault: function() {
		var indexToSelect = 0;
		if(this._cachedSelectedItem != null) {
			var index = this.indexOfItem(this._cachedSelectedItem);
			if(index != -1) {
				indexToSelect = index;
			}
		} else if(this._cachedSelectedIndex != -1) {
			indexToSelect = this._cachedSelectedIndex;
		}
		this._dropdown.set_selectedIndex(indexToSelect);
	}
	,__class__: haxe_ui_components__$DropDown_ListDropDownHandler
});
var haxe_ui_components_CalendarDropDownHandler = function(dropdown) {
	this._cachedSelectedDate = null;
	haxe_ui_components_DropDownHandler.call(this,dropdown);
};
$hxClasses["haxe.ui.components.CalendarDropDownHandler"] = haxe_ui_components_CalendarDropDownHandler;
haxe_ui_components_CalendarDropDownHandler.__name__ = "haxe.ui.components.CalendarDropDownHandler";
haxe_ui_components_CalendarDropDownHandler.__super__ = haxe_ui_components_DropDownHandler;
haxe_ui_components_CalendarDropDownHandler.prototype = $extend(haxe_ui_components_DropDownHandler.prototype,{
	_calendar: null
	,get_component: function() {
		if(this._calendar == null) {
			this._calendar = new haxe_ui_containers_CalendarView();
			if(this._dropdown.get_id() != null) {
				this._calendar.addClass(this._dropdown.get_id() + "-calendar");
				this._calendar.set_id(this._dropdown.get_id() + "_calendar");
			}
			this._calendar.registerEvent("change",$bind(this,this.onCalendarChange));
		}
		return this._calendar;
	}
	,prepare: function(wrapper) {
		if(this._dropdown.get_dropdownWidth() != null) {
			this._calendar.set_width(this._dropdown.get_dropdownWidth());
		}
		if(this._dropdown.get_dropdownHeight() != null) {
			this._calendar.set_height(this._dropdown.get_dropdownHeight());
		}
		if(this._cachedSelectedDate != null) {
			this._calendar.unregisterEvent("change",$bind(this,this.onCalendarChange));
			this._calendar.set_selectedDate(this._cachedSelectedDate);
			this._calendar.registerEvent("change",$bind(this,this.onCalendarChange));
		}
		this._calendar.syncComponentValidation();
	}
	,_cachedSelectedDate: null
	,get_selectedItem: function() {
		if(this._calendar == null) {
			return this._cachedSelectedDate;
		}
		return this._calendar.get_selectedDate();
	}
	,set_selectedItem: function(value) {
		if(value == null) {
			return value;
		}
		var date = null;
		if(((value) instanceof Date)) {
			date = js_Boot.__cast(value , Date);
		} else {
			date = HxOverrides.strDate(Std.string(value));
		}
		if(this._calendar != null && date != null) {
			if(HxOverrides.dateStr(date) == HxOverrides.dateStr(this._calendar.get_selectedDate())) {
				this._dropdown.set_text(DateTools.format(date,haxe_ui_locale_Formats.get_dateFormatShort()));
				return value;
			}
			this._cachedSelectedDate = date;
			this._calendar.set_selectedDate(date);
		} else if(date != null) {
			this._cachedSelectedDate = date;
			this._dropdown.set_text(DateTools.format(this._cachedSelectedDate,haxe_ui_locale_Formats.get_dateFormatShort()));
		}
		return value;
	}
	,onCalendarChange: function(event) {
		if(this._calendar.get_selectedDate() == null) {
			return;
		}
		this._cachedSelectedDate = this._calendar.get_selectedDate();
		this._dropdown.set_text(DateTools.format(this._calendar.get_selectedDate(),haxe_ui_locale_Formats.get_dateFormatShort()));
		(js_Boot.__cast(this._dropdown._internalEvents , haxe_ui_components_DropDownEvents)).hideDropDown();
		this._dropdown.dispatch(new haxe_ui_events_UIEvent("change",false,this._calendar.get_selectedDate()));
	}
	,applyDefault: function() {
		var now = new Date();
		this._dropdown.set_selectedItem(now);
	}
	,__class__: haxe_ui_components_CalendarDropDownHandler
});
var haxe_ui_components_DropDownEvents = function(dropdown) {
	this._lastSearchTerm = "";
	this._searchField = null;
	this._wrapper = null;
	this._overlay = null;
	haxe_ui_components_ButtonEvents.call(this,dropdown);
	this._dropdown = dropdown;
};
$hxClasses["haxe.ui.components.DropDownEvents"] = haxe_ui_components_DropDownEvents;
haxe_ui_components_DropDownEvents.__name__ = "haxe.ui.components.DropDownEvents";
haxe_ui_components_DropDownEvents.__super__ = haxe_ui_components_ButtonEvents;
haxe_ui_components_DropDownEvents.prototype = $extend(haxe_ui_components_ButtonEvents.prototype,{
	_dropdown: null
	,register: function() {
		haxe_ui_components_ButtonEvents.prototype.register.call(this);
		this.registerEvent("mousedown",$bind(this,this.onClick));
		this.registerEvent("hidden",$bind(this,this.onHidden));
	}
	,unregister: function() {
		haxe_ui_components_ButtonEvents.prototype.unregister.call(this);
		this.unregisterEvent("mousedown",$bind(this,this.onClick));
		this.unregisterEvent("hidden",$bind(this,this.onHidden));
	}
	,onClick: function(event) {
		this._dropdown.set_selected(!this._dropdown.get_selected());
		if(this._dropdown.get_selected() == true) {
			this.showDropDown();
		} else {
			this.hideDropDown();
		}
	}
	,onHidden: function(_) {
		this.hideDropDown();
	}
	,onMouseClick: function(event) {
	}
	,_overlay: null
	,_wrapper: null
	,showDropDown: function() {
		var handler = (js_Boot.__cast(this._dropdown._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		if(handler == null) {
			return;
		}
		if(this._wrapper == null) {
			this._wrapper = new haxe_ui_containers_Box();
			this._wrapper.addClass("popup");
			this._wrapper.addClass("dropdown-popup");
			if(this._button.get_id() != null) {
				this._wrapper.addClass(this._button.get_id() + "-popup");
				this._wrapper.set_id(this._button.get_id() + "_popup");
			} else {
				this._wrapper.set_id("dropdown_popup");
			}
			this._wrapper.set_styleNames(this._dropdown.get_handlerStyleNames());
			if(this._dropdown.get_searchable() == true) {
				var searchContainer = new haxe_ui_containers_VBox();
				searchContainer.set_id("dropdown-search-container");
				searchContainer.addClass("dropdown-search-container");
				searchContainer.set_scriptAccess(false);
				var searchFieldContainer = new haxe_ui_containers_HBox();
				searchFieldContainer.set_id("dropdown-search-field-container");
				searchFieldContainer.addClass("dropdown-search-field-container");
				searchFieldContainer.set_scriptAccess(false);
				searchFieldContainer.addComponent(this.get_searchField());
				var searchFieldSeparator = new haxe_ui_core_Component();
				searchFieldSeparator.set_id("dropdown-search-field-separator");
				searchFieldSeparator.addClass("dropdown-search-field-separator");
				searchFieldSeparator.set_scriptAccess(false);
				searchContainer.addComponent(searchFieldContainer);
				searchContainer.addComponent(searchFieldSeparator);
				searchContainer.addComponent(handler.get_component());
				this._wrapper.addComponent(searchContainer);
			} else {
				this._wrapper.addComponent(handler.get_component());
			}
			if(this._dropdown.get_style().fontSize != null && handler.get_component().get_customStyle().fontSize != this._dropdown.get_style().fontSize) {
				handler.get_component().get_customStyle().fontSize = this._dropdown.get_style().fontSize;
			}
			var filler = new haxe_ui_core_Component();
			filler.set_includeInLayout(false);
			filler.addClass("dropdown-filler");
			filler.set_id("dropdown-filler");
			this._wrapper.addComponent(filler);
		}
		var componentOffset = this._dropdown.getComponentOffset();
		if(this._dropdown.get_style().mode != null && this._dropdown.get_style().mode == "mobile") {
			if(this._overlay == null) {
				this._overlay = new haxe_ui_core_Component();
				this._overlay.set_id("modal-background");
				this._overlay.addClass("modal-background");
				this._overlay.set_percentWidth(this._overlay.set_percentHeight(100));
			}
			haxe_ui_core_Screen.get_instance().addComponent(this._overlay);
			haxe_ui_core_Screen.get_instance().addComponent(this._wrapper);
			handler.prepare(this._wrapper);
			this._wrapper.syncComponentValidation();
			this._wrapper.validateNow();
			this._wrapper.set_left(haxe_ui_core_Screen.get_instance().get_actualWidth() / 2 - this._wrapper.get_actualComponentWidth() / 2);
			this._wrapper.set_top(haxe_ui_core_Screen.get_instance().get_actualHeight() / 2 - this._wrapper.get_actualComponentHeight() / 2);
		} else {
			this._wrapper.set_left(this._dropdown.get_screenLeft() + componentOffset.x);
			this._wrapper.set_top(this._dropdown.get_screenTop() + (this._dropdown.get_actualComponentHeight() - haxe_ui_Toolkit.get_scaleY()) + componentOffset.y);
			haxe_ui_core_Screen.get_instance().addComponent(this._wrapper);
			handler.prepare(this._wrapper);
			this._wrapper.syncComponentValidation();
			this._wrapper.validateNow();
			var popupToRight = false;
			var popupFromBottom = false;
			if(this._wrapper.get_screenLeft() + this._wrapper.get_actualComponentWidth() > haxe_ui_core_Screen.get_instance().get_actualWidth()) {
				var left = this._wrapper.get_screenLeft() - this._wrapper.get_actualComponentWidth() + this._dropdown.get_actualComponentWidth();
				this._wrapper.set_left(left >= 0 ? left : haxe_ui_core_Screen.get_instance().get_actualWidth() / 2 - this._wrapper.get_actualComponentWidth() / 2);
				popupToRight = true;
			}
			this._wrapper.removeClass("popup-from-bottom");
			if(this._wrapper.get_screenTop() + this._wrapper.get_actualComponentHeight() > haxe_ui_core_Screen.get_instance().get_actualHeight()) {
				this._wrapper.set_top(this._dropdown.get_screenTop() - this._wrapper.get_actualComponentHeight() + haxe_ui_Toolkit.get_scaleY());
				popupFromBottom = true;
				this._wrapper.addClass("popup-from-bottom");
			}
			var cx = this._wrapper.get_width() - this._dropdown.get_width();
			var filler = this._wrapper.findComponent("dropdown-filler",null,false);
			if(cx > 0 && filler != null) {
				this._wrapper.addClass("dropdown-popup-expanded");
				filler.set_width(cx);
				if(popupToRight) {
					cx -= haxe_ui_Toolkit.get_scaleX();
					filler.set_left(haxe_ui_Toolkit.get_scaleX());
				} else {
					cx += haxe_ui_Toolkit.get_scaleX();
					filler.set_left(this._wrapper.get_width() - cx);
				}
				if(popupFromBottom) {
					filler.set_top(this._wrapper.get_actualComponentHeight() - haxe_ui_Toolkit.get_scaleY());
				} else {
					filler.set_top(0);
				}
				filler.set_hidden(false);
			} else if(filler != null) {
				filler.set_hidden(true);
				this._wrapper.removeClass("dropdown-popup-expanded");
			}
		}
		haxe_ui_core_Screen.get_instance().registerEvent("mousedown",$bind(this,this.onScreenMouseDown));
		haxe_ui_core_Screen.get_instance().registerEvent("rightmousedown",$bind(this,this.onScreenMouseDown));
		this.registerEvent("move",$bind(this,this.onDropDownMoved));
	}
	,onDropDownMoved: function(_) {
		this.hideDropDown();
	}
	,createSearchField: function() {
		var _gthis = this;
		var searchField = new haxe_ui_components_TextField();
		searchField.registerEvent("actionstart",function(e) {
			if(e.action == "actionDown" || e.action == "actionUp" || e.action == "actionConfirm" || e.action == "actionPress" || e.action == "actionBack" || e.action == "actionCancel") {
				var builder = js_Boot.__cast(_gthis._dropdown._compositeBuilder , haxe_ui_components_DropDownBuilder);
				builder.get_handler().get_component().dispatch(e);
			}
		});
		searchField.set_id("dropdown-search-field");
		searchField.addClass("dropdown-search-field");
		searchField.set_placeholder(this._dropdown.get_searchPrompt());
		searchField.set_scriptAccess(false);
		searchField.registerEvent("change",$bind(this,this.onSearchChange));
		return searchField;
	}
	,_searchField: null
	,get_searchField: function() {
		if(this._searchField == null) {
			this._searchField = this.createSearchField();
		}
		return this._searchField;
	}
	,set_searchField: function(value) {
		this._searchField = value;
		return value;
	}
	,_lastSearchTerm: null
	,onSearchChange: function(event) {
		if(this._wrapper == null) {
			return;
		}
		var searchField = this._wrapper.findComponent("dropdown-search-field",haxe_ui_components_TextField);
		if(searchField == null) {
			return;
		}
		var selectedItem = this._dropdown.get_selectedItem();
		var searchTerm = searchField.get_text();
		if(searchTerm == null || StringTools.trim(searchTerm).length == 0) {
			searchTerm = "";
		}
		if(this._lastSearchTerm == searchTerm) {
			return;
		}
		this._lastSearchTerm = searchTerm;
		if(searchTerm.length == 0) {
			this._dropdown.get_dataSource().clearFilter();
		} else {
			this._dropdown.get_dataSource().filter(function(index,data) {
				var v = data.text;
				return Std.string(v).toLowerCase().indexOf(searchTerm.toLowerCase()) > -1;
			});
		}
		var handler = (js_Boot.__cast(this._dropdown._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		if(handler == null) {
			return;
		}
		handler.prepare(this._wrapper);
		if(selectedItem != null) {
			handler.pauseEvents();
			this._dropdown.set_selectedItem(selectedItem);
			handler.resumeEvents();
		}
	}
	,hideDropDown: function() {
		var handler = (js_Boot.__cast(this._dropdown._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		if(handler == null) {
			return;
		}
		if(this._wrapper != null) {
			var searchField = this._wrapper.findComponent("dropdown-search-field",haxe_ui_components_TextField);
			if(searchField != null) {
				searchField.set_focus(false);
			}
		}
		if(this._overlay != null) {
			haxe_ui_core_Screen.get_instance().removeComponent(this._overlay);
			this._overlay = null;
		}
		this._dropdown.set_selected(false);
		if(this._wrapper != null) {
			haxe_ui_core_Screen.get_instance().removeComponent(this._wrapper,false);
		}
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousedown",$bind(this,this.onScreenMouseDown));
		haxe_ui_core_Screen.get_instance().unregisterEvent("rightmousedown",$bind(this,this.onScreenMouseDown));
		this.unregisterEvent("move",$bind(this,this.onDropDownMoved));
	}
	,onScreenMouseDown: function(event) {
		if(this._wrapper == null) {
			return;
		}
		if(this._wrapper.hitTest(event.screenX,event.screenY) == true) {
			return;
		}
		var componentOffset = this._dropdown.getComponentOffset();
		if(this._dropdown.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == true) {
			return;
		}
		this.hideDropDown();
	}
	,dispatchChanged: function() {
	}
	,release: function() {
		if(this._down == true) {
			haxe_ui_components_ButtonEvents.prototype.release.call(this);
			if(this._dropdown.get_selected() == true) {
				this.showDropDown();
			} else {
				this.hideDropDown();
			}
		}
	}
	,__class__: haxe_ui_components_DropDownEvents
	,__properties__: {set_searchField:"set_searchField",get_searchField:"get_searchField"}
});
var haxe_ui_components_DropDownBuilder = function(dropdown) {
	haxe_ui_components_ButtonBuilder.call(this,dropdown);
	this._dropdown = dropdown;
	var this1 = haxe_ui_components_DropDownBuilder.HANDLER_MAP;
	var value = haxe_ui_components__$DropDown_ListDropDownHandler.__name__;
	this1.h["list"] = value;
	var this1 = haxe_ui_components_DropDownBuilder.HANDLER_MAP;
	var value = haxe_ui_components_CalendarDropDownHandler.__name__;
	this1.h["date"] = value;
};
$hxClasses["haxe.ui.components.DropDownBuilder"] = haxe_ui_components_DropDownBuilder;
haxe_ui_components_DropDownBuilder.__name__ = "haxe.ui.components.DropDownBuilder";
haxe_ui_components_DropDownBuilder.__super__ = haxe_ui_components_ButtonBuilder;
haxe_ui_components_DropDownBuilder.prototype = $extend(haxe_ui_components_ButtonBuilder.prototype,{
	_dropdown: null
	,_handler: null
	,handler: null
	,get_handler: function() {
		if(this._handler == null) {
			var this1 = haxe_ui_components_DropDownBuilder.HANDLER_MAP;
			var key = this._dropdown.get_type();
			var handlerClass = this1.h[key];
			if(handlerClass == null) {
				handlerClass = this._dropdown.get_type();
			}
			this._handler = Type.createInstance($hxClasses[handlerClass],[this._dropdown]);
		}
		return this._handler;
	}
	,onReady: function() {
		haxe_ui_components_ButtonBuilder.prototype.onReady.call(this);
		if(this._dropdown.get_text() == null) {
			this.get_handler().applyDefault();
		}
	}
	,create: function() {
		this._dropdown.set_toggle(true);
		if(this._dropdown.findComponent(null,haxe_ui_core_ItemRenderer) == null) {
			this._dropdown.addComponent(new haxe_ui_core_BasicItemRenderer());
		}
	}
	,destroy: function() {
		var events = js_Boot.__cast(this._dropdown._internalEvents , haxe_ui_components_DropDownEvents);
		events.hideDropDown();
		if(events._wrapper != null) {
			haxe_ui_core_Screen.get_instance().removeComponent(events._wrapper);
			events._wrapper = null;
		}
	}
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_core_ItemRenderer)) {
			this._dropdown.set_itemRenderer(child.cloneComponent());
			if(child.get_id() == "dropdown-renderer" || child.get_id() == "dropdownRenderer") {
				return child;
			}
		}
		return haxe_ui_components_ButtonBuilder.prototype.addComponent.call(this,child);
	}
	,onThemeChanged: function() {
		if(this._handler != null) {
			haxe_ui_core_Screen.get_instance().invalidateChildren(this._handler.get_component());
			haxe_ui_core_Screen.get_instance().onThemeChangedChildren(this._handler.get_component());
		}
	}
	,__class__: haxe_ui_components_DropDownBuilder
	,__properties__: $extend(haxe_ui_components_ButtonBuilder.prototype.__properties__,{get_handler:"get_handler"})
});
var haxe_ui_core_IDirectionalComponent = function() { };
$hxClasses["haxe.ui.core.IDirectionalComponent"] = haxe_ui_core_IDirectionalComponent;
haxe_ui_core_IDirectionalComponent.__name__ = "haxe.ui.core.IDirectionalComponent";
haxe_ui_core_IDirectionalComponent.__isInterface__ = true;
var haxe_ui_components_Range = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.Range"] = haxe_ui_components_Range;
haxe_ui_components_Range.__name__ = "haxe.ui.components.Range";
haxe_ui_components_Range.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_components_Range.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Range.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	virtualStart: null
	,virtualEnd: null
	,posFromCoord: function(coord) {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	,get_cssName: function() {
		return "range";
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("min",haxe_ui_components__$Range_RangeMin,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("max",haxe_ui_components__$Range_RangeMax,haxe_ui_util_Variant.fromInt(100));
		this.behaviours.register("start",haxe_ui_components__$Range_RangeStart,null);
		this.behaviours.register("end",haxe_ui_components__$Range_RangeEnd,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("precision",haxe_ui_behaviours_InvalidatingBehaviour);
		this.behaviours.register("step",haxe_ui_behaviours_InvalidatingBehaviour);
		this.behaviours.register("allowInteraction",haxe_ui_components__$Range_AllowInteraction,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("posFromCoord",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_min: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("min"));
	}
	,set_min: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("min",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"min"));
		return value;
	}
	,get_max: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("max"));
	}
	,set_max: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("max",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"max"));
		return value;
	}
	,get_start: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("start"));
	}
	,set_start: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("start",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"start"));
		return value;
	}
	,get_end: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("end"));
	}
	,set_end: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("end",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"end"));
		return value;
	}
	,get_precision: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("precision"));
	}
	,set_precision: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("precision",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"precision"));
		return value;
	}
	,get_step: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("step"));
	}
	,set_step: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("step",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"step"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if(this.get_min() != null) {
			c.set_min(this.get_min());
		}
		if(this.get_max() != null) {
			c.set_max(this.get_max());
		}
		if(this.get_start() != null) {
			c.set_start(this.get_start());
		}
		c.set_end(this.get_end());
		c.set_precision(this.get_precision());
		c.set_step(this.get_step());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Range();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components_RangeBuilder;
	}
	,__class__: haxe_ui_components_Range
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_step:"set_step",get_step:"get_step",set_precision:"set_precision",get_precision:"get_precision",set_end:"set_end",get_end:"get_end",set_start:"set_start",get_start:"get_start",set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min"})
});
var haxe_ui_components_HorizontalRange = function() {
	haxe_ui_components_Range.call(this);
};
$hxClasses["haxe.ui.components.HorizontalRange"] = haxe_ui_components_HorizontalRange;
haxe_ui_components_HorizontalRange.__name__ = "haxe.ui.components.HorizontalRange";
haxe_ui_components_HorizontalRange.__super__ = haxe_ui_components_Range;
haxe_ui_components_HorizontalRange.prototype = $extend(haxe_ui_components_Range.prototype,{
	posFromCoord: function(coord) {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	,registerComposite: function() {
		haxe_ui_components_Range.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components_HorizontalRangeLayout;
		this._compositeBuilderClass = haxe_ui_components__$HorizontalRange_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Range.prototype.registerBehaviours.call(this);
		this.behaviours.register("posFromCoord",haxe_ui_components_HorizontalRangePosFromCoord);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Range.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_HorizontalRange();
	}
	,__class__: haxe_ui_components_HorizontalRange
});
var haxe_ui_components_HorizontalRangePosFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.HorizontalRangePosFromCoord"] = haxe_ui_components_HorizontalRangePosFromCoord;
haxe_ui_components_HorizontalRangePosFromCoord.__name__ = "haxe.ui.components.HorizontalRangePosFromCoord";
haxe_ui_components_HorizontalRangePosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components_HorizontalRangePosFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		p.x -= this._component.getComponentOffset().x;
		var xpos = p.x - range.get_layout().get_paddingLeft();
		var ucx = range.get_layout().get_usableWidth() * haxe_ui_Toolkit.get_scaleX();
		if(xpos >= ucx) {
			xpos = ucx;
		}
		var min = range.get_min();
		if(min == null) {
			min = 0;
		}
		var m = range.get_max() - min;
		var d = ucx / m;
		var v = xpos + range.get_start() * d;
		var p = v / d;
		return haxe_ui_util_Variant.fromFloat(p);
	}
	,__class__: haxe_ui_components_HorizontalRangePosFromCoord
});
var haxe_ui_components_HorizontalRangeLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.HorizontalRangeLayout"] = haxe_ui_components_HorizontalRangeLayout;
haxe_ui_components_HorizontalRangeLayout.__name__ = "haxe.ui.components.HorizontalRangeLayout";
haxe_ui_components_HorizontalRangeLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_HorizontalRangeLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var range = js_Boot.__cast(this.get_component() , haxe_ui_components_Range);
		var value = this.findComponent("" + range.get_cssName() + "-value");
		if(value != null) {
			var ucx = this.get_usableWidth();
			var start = range.get_start();
			if(start == null) {
				start = 0;
			}
			var end = range.get_end();
			if(range.virtualStart != null) {
				start = range.virtualStart;
			}
			if(range.virtualEnd != null) {
				end = range.virtualEnd;
			}
			var min = range.get_min();
			if(min == null) {
				min = 0;
			}
			var m = range.get_max() - min;
			var d = ucx / m;
			var startInPixels = start * d - min * d;
			var endInPixels = end * d - min * d;
			var cx = Math.ceil(endInPixels - startInPixels);
			if(cx < 0) {
				cx = 0;
			} else if(cx > ucx) {
				cx = ucx;
			}
			if(cx == 0) {
				value.set_width(0);
				value.set_hidden(true);
			} else {
				value.set_width(cx);
				value.set_hidden(false);
			}
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var range = js_Boot.__cast(this.get_component() , haxe_ui_components_Range);
		var value = this.findComponent("" + range.get_cssName() + "-value");
		var start = range.get_start();
		if(start == null) {
			start = 0;
		}
		if(range.virtualStart != null) {
			start = range.virtualStart;
		}
		var min = range.get_min();
		if(min == null) {
			min = 0;
		}
		var ucx = this.get_usableWidth();
		var m = range.get_max() - min;
		var d = ucx / m;
		var startInPixels = start * d - min * d;
		value.set_left(Math.floor(this.get_paddingLeft() + startInPixels));
		value.set_top(this.get_paddingTop());
	}
	,__class__: haxe_ui_components_HorizontalRangeLayout
});
var haxe_ui_components_RangeBuilder = function(component) {
	haxe_ui_core_CompositeBuilder.call(this,component);
	this.showWarning();
};
$hxClasses["haxe.ui.components.RangeBuilder"] = haxe_ui_components_RangeBuilder;
haxe_ui_components_RangeBuilder.__name__ = "haxe.ui.components.RangeBuilder";
haxe_ui_components_RangeBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components_RangeBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	create: function() {
		haxe_ui_core_CompositeBuilder.prototype.create.call(this);
		if(this._component.findComponent("${_component.cssName}-value") == null) {
			var v = new haxe_ui_core_Component();
			v.set_id("" + this._component.get_cssName() + "-value");
			v.addClass("" + this._component.get_cssName() + "-value",false);
			this._component.addComponent(v);
		}
	}
	,showWarning: function() {
		var name = this._component.get_className().split(".").pop();
		haxe_Log.trace("WARNING: trying to create an instance of '" + name + "' directly, use either 'Horizontal" + name + "' or 'Vertical" + name + "'",{ fileName : "haxe/ui/components/Range.hx", lineNumber : 266, className : "haxe.ui.components.RangeBuilder", methodName : "showWarning"});
	}
	,__class__: haxe_ui_components_RangeBuilder
});
var haxe_ui_components__$HorizontalRange_Builder = function(component) {
	haxe_ui_components_RangeBuilder.call(this,component);
};
$hxClasses["haxe.ui.components._HorizontalRange.Builder"] = haxe_ui_components__$HorizontalRange_Builder;
haxe_ui_components__$HorizontalRange_Builder.__name__ = "haxe.ui.components._HorizontalRange.Builder";
haxe_ui_components__$HorizontalRange_Builder.__super__ = haxe_ui_components_RangeBuilder;
haxe_ui_components__$HorizontalRange_Builder.prototype = $extend(haxe_ui_components_RangeBuilder.prototype,{
	showWarning: function() {
	}
	,__class__: haxe_ui_components__$HorizontalRange_Builder
});
var haxe_ui_components_Rule = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Rule"] = haxe_ui_components_Rule;
haxe_ui_components_Rule.__name__ = "haxe.ui.components.Rule";
haxe_ui_components_Rule.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_components_Rule.__super__ = haxe_ui_core_Component;
haxe_ui_components_Rule.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components_RuleBuilder;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Rule();
	}
	,__class__: haxe_ui_components_Rule
});
var haxe_ui_components_HorizontalRule = function() {
	haxe_ui_components_Rule.call(this);
};
$hxClasses["haxe.ui.components.HorizontalRule"] = haxe_ui_components_HorizontalRule;
haxe_ui_components_HorizontalRule.__name__ = "haxe.ui.components.HorizontalRule";
haxe_ui_components_HorizontalRule.__super__ = haxe_ui_components_Rule;
haxe_ui_components_HorizontalRule.prototype = $extend(haxe_ui_components_Rule.prototype,{
	registerBehaviours: function() {
		haxe_ui_components_Rule.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Rule.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_HorizontalRule();
	}
	,registerComposite: function() {
		haxe_ui_components_Rule.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components__$HorizontalRule_Builder;
	}
	,__class__: haxe_ui_components_HorizontalRule
});
var haxe_ui_components_RuleBuilder = function(component) {
	haxe_ui_core_CompositeBuilder.call(this,component);
	this.showWarning();
};
$hxClasses["haxe.ui.components.RuleBuilder"] = haxe_ui_components_RuleBuilder;
haxe_ui_components_RuleBuilder.__name__ = "haxe.ui.components.RuleBuilder";
haxe_ui_components_RuleBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components_RuleBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	showWarning: function() {
		haxe_Log.trace("WARNING: trying to create an instance of 'Rule' directly, use either 'HorizontalRule' or 'VerticalRule'",{ fileName : "haxe/ui/components/Rule.hx", lineNumber : 35, className : "haxe.ui.components.RuleBuilder", methodName : "showWarning"});
	}
	,__class__: haxe_ui_components_RuleBuilder
});
var haxe_ui_components__$HorizontalRule_Builder = function(component) {
	haxe_ui_components_RuleBuilder.call(this,component);
};
$hxClasses["haxe.ui.components._HorizontalRule.Builder"] = haxe_ui_components__$HorizontalRule_Builder;
haxe_ui_components__$HorizontalRule_Builder.__name__ = "haxe.ui.components._HorizontalRule.Builder";
haxe_ui_components__$HorizontalRule_Builder.__super__ = haxe_ui_components_RuleBuilder;
haxe_ui_components__$HorizontalRule_Builder.prototype = $extend(haxe_ui_components_RuleBuilder.prototype,{
	showWarning: function() {
	}
	,__class__: haxe_ui_components__$HorizontalRule_Builder
});
var haxe_ui_components_Scroll = function() {
	haxe_ui_core_InteractiveComponent.call(this);
	this.cascadeActive = true;
};
$hxClasses["haxe.ui.components.Scroll"] = haxe_ui_components_Scroll;
haxe_ui_components_Scroll.__name__ = "haxe.ui.components.Scroll";
haxe_ui_components_Scroll.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_components_Scroll.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Scroll.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	posFromCoord: function(coord) {
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	,applyPageFromCoord: function(coord) {
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("applyPageFromCoord",coord));
	}
	,createChildren: function() {
		this.createButton("deinc",true).set_repeater(true);
		this.createButton("inc",true).set_repeater(true);
		this.createButton("thumb").set_remainPressed(true);
		this.registerInternalEvents(haxe_ui_components__$Scroll_Events);
	}
	,createButton: function(type,hidden) {
		if(hidden == null) {
			hidden = false;
		}
		var b = this.findComponent("scroll-" + type + "-button",haxe_ui_components_Button);
		if(b == null) {
			b = new haxe_ui_components_Button();
			b.set_hidden(hidden);
			b.set_scriptAccess(false);
			b.get_customStyle().native = false;
			b.set_id("scroll-" + type + "-button");
			b.addClass(type);
			b.set_allowFocus(false);
			this.addComponent(b);
		}
		return b;
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("min",haxe_ui_components__$Scroll_ScrollMinMaxBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("max",haxe_ui_components__$Scroll_ScrollMinMaxBehaviour,haxe_ui_util_Variant.fromInt(100));
		this.behaviours.register("pageSize",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("pos",haxe_ui_components__$Scroll_ScrollValueBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("increment",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(20));
		this.behaviours.register("thumbSize",haxe_ui_behaviours_DefaultBehaviour,null);
	}
	,get_min: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("min"));
	}
	,set_min: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("min",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"min"));
		return value;
	}
	,get_max: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("max"));
	}
	,set_max: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("max",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"max"));
		return value;
	}
	,get_pageSize: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pageSize"));
	}
	,set_pageSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("pageSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"pageSize"));
		return value;
	}
	,get_pos: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pos"));
	}
	,set_pos: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("pos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"pos"));
		return value;
	}
	,get_increment: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("increment"));
	}
	,set_increment: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("increment",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"increment"));
		return value;
	}
	,get_thumbSize: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("thumbSize"));
	}
	,set_thumbSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("thumbSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"thumbSize"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Scroll();
	}
	,__class__: haxe_ui_components_Scroll
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_thumbSize:"set_thumbSize",get_thumbSize:"get_thumbSize",set_increment:"set_increment",get_increment:"get_increment",set_pos:"set_pos",get_pos:"get_pos",set_pageSize:"set_pageSize",get_pageSize:"get_pageSize",set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min"})
});
var haxe_ui_components_HorizontalScroll = function() {
	haxe_ui_components_Scroll.call(this);
};
$hxClasses["haxe.ui.components.HorizontalScroll"] = haxe_ui_components_HorizontalScroll;
haxe_ui_components_HorizontalScroll.__name__ = "haxe.ui.components.HorizontalScroll";
haxe_ui_components_HorizontalScroll.__super__ = haxe_ui_components_Scroll;
haxe_ui_components_HorizontalScroll.prototype = $extend(haxe_ui_components_Scroll.prototype,{
	registerBehaviours: function() {
		haxe_ui_components_Scroll.prototype.registerBehaviours.call(this);
		this.behaviours.register("posFromCoord",haxe_ui_components__$HorizontalScroll_PosFromCoord);
		this.behaviours.register("applyPageFromCoord",haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord);
	}
	,createChildren: function() {
		haxe_ui_components_Scroll.prototype.createChildren.call(this);
		if(this.get_componentWidth() <= 0) {
			this.set_componentWidth(150);
		}
	}
	,createDefaults: function() {
		haxe_ui_components_Scroll.prototype.createDefaults.call(this);
		this._defaultLayoutClass = haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Scroll.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_HorizontalScroll();
	}
	,__class__: haxe_ui_components_HorizontalScroll
});
var haxe_ui_components__$HorizontalScroll_PosFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._HorizontalScroll.PosFromCoord"] = haxe_ui_components__$HorizontalScroll_PosFromCoord;
haxe_ui_components__$HorizontalScroll_PosFromCoord.__name__ = "haxe.ui.components._HorizontalScroll.PosFromCoord";
haxe_ui_components__$HorizontalScroll_PosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$HorizontalScroll_PosFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var deinc = this._component.findComponent("scroll-deinc-button");
		var thumb = this._component.findComponent("scroll-thumb-button");
		var xpos = p.x;
		var minX = 0;
		if(deinc != null && deinc.get_hidden() == false) {
			minX = deinc.get_width() + scroll.get_layout().get_horizontalSpacing();
		}
		var maxX = scroll.get_layout().get_usableWidth() - thumb.get_width();
		if(deinc != null && deinc.get_hidden() == false) {
			maxX += deinc.get_width() + scroll.get_layout().get_horizontalSpacing();
		}
		if(xpos < minX) {
			xpos = minX;
		} else if(xpos > maxX) {
			xpos = maxX;
		}
		var ucx = scroll.get_layout().get_usableWidth();
		ucx -= thumb.get_width();
		var m = scroll.get_max() - scroll.get_min() | 0;
		var v = xpos - minX;
		var value = scroll.get_min() + v / ucx * m;
		return haxe_ui_util_Variant.fromFloat(value);
	}
	,__class__: haxe_ui_components__$HorizontalScroll_PosFromCoord
});
var haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._HorizontalScroll.ApplyPageFromCoord"] = haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord;
haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord.__name__ = "haxe.ui.components._HorizontalScroll.ApplyPageFromCoord";
haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var thumb = this._component.findComponent("scroll-thumb-button");
		if(p.x < thumb.get_screenLeft()) {
			scroll.set_pos(scroll.get_pos() - scroll.get_pageSize());
		} else if(p.x > thumb.get_screenLeft() + thumb.get_width()) {
			scroll.set_pos(scroll.get_pos() + scroll.get_pageSize());
		}
		return null;
	}
	,__class__: haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord
});
var haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._HorizontalScroll.HorizontalScrollLayout"] = haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout;
haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout.__name__ = "haxe.ui.components._HorizontalScroll.HorizontalScrollLayout";
haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			if(scroll.get_min() == scroll.get_max()) {
				thumb.hide();
			} else {
				var m = scroll.get_max() - scroll.get_min();
				var ucx = this.get_usableWidth();
				var thumbWidth = scroll.get_pageSize() / m * ucx;
				if(scroll.get_thumbSize() != null) {
					thumbWidth = scroll.get_thumbSize();
				}
				if(thumbWidth < this.get_innerHeight()) {
					thumbWidth = this.get_innerHeight();
				} else if(thumbWidth > ucx) {
					thumbWidth = ucx;
				}
				if(thumbWidth > 0 && isNaN(thumbWidth) == false) {
					thumb.set_width(thumbWidth);
				}
				thumb.show();
			}
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(inc != null && this.hidden(inc) == false) {
			inc.set_left(this.get_component().get_width() - inc.get_width() - this.get_paddingRight());
		}
		var scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var u = this.get_usableWidth();
			u -= thumb.get_componentWidth();
			var x = (scroll.get_pos() - scroll.get_min()) / m * u;
			x += this.get_paddingLeft();
			if(deinc != null && this.hidden(deinc) == false) {
				x += deinc.get_width() + this.get_horizontalSpacing();
			}
			thumb.set_left(x);
			thumb.set_top(Math.round(thumb.get_top()));
		}
	}
	,get_usableWidth: function() {
		var ucx = this.get_innerWidth();
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(deinc != null && this.hidden(deinc) == false) {
			ucx -= deinc.get_width() + this.get_horizontalSpacing();
		}
		if(inc != null && this.hidden(inc) == false) {
			ucx -= inc.get_width() + this.get_horizontalSpacing();
		}
		return ucx;
	}
	,__class__: haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout
});
var haxe_ui_components_Slider = function() {
	haxe_ui_core_InteractiveComponent.call(this);
	this.cascadeActive = true;
	this.actionRepeatInterval = 10;
};
$hxClasses["haxe.ui.components.Slider"] = haxe_ui_components_Slider;
haxe_ui_components_Slider.__name__ = "haxe.ui.components.Slider";
haxe_ui_components_Slider.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_components_Slider.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Slider.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	posFromCoord: function(coord) {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("min",haxe_ui_components__$Slider_MinBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("max",haxe_ui_components__$Slider_MaxBehaviour,haxe_ui_util_Variant.fromInt(100));
		this.behaviours.register("precision",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("start",haxe_ui_components__$Slider_StartBehaviour,null);
		this.behaviours.register("end",haxe_ui_components__$Slider_EndBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("pos",haxe_ui_components__$Slider_PosBehaviour);
		this.behaviours.register("center",haxe_ui_components__$Slider_CenterBehaviour,null);
		this.behaviours.register("step",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("minorTicks",haxe_ui_components__$Slider_MinorTicks,null);
		this.behaviours.register("majorTicks",haxe_ui_components__$Slider_MajorTicks,null);
		this.behaviours.register("posFromCoord",haxe_ui_components__$Slider_PosFromCoord);
	}
	,get_min: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("min"));
	}
	,set_min: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("min",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"min"));
		return value;
	}
	,get_max: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("max"));
	}
	,set_max: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("max",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"max"));
		return value;
	}
	,get_precision: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("precision"));
	}
	,set_precision: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("precision",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"precision"));
		return value;
	}
	,get_start: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("start"));
	}
	,set_start: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("start",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"start"));
		return value;
	}
	,get_end: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("end"));
	}
	,set_end: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("end",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"end"));
		return value;
	}
	,get_pos: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pos"));
	}
	,set_pos: function(value) {
		this.behaviours.set("pos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"pos"));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,get_center: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("center"));
	}
	,set_center: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("center",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"center"));
		return value;
	}
	,get_step: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("step"));
	}
	,set_step: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("step",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"step"));
		return value;
	}
	,get_minorTicks: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("minorTicks"));
	}
	,set_minorTicks: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("minorTicks",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"minorTicks"));
		return value;
	}
	,get_majorTicks: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("majorTicks"));
	}
	,set_majorTicks: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("majorTicks",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"majorTicks"));
		return value;
	}
	,get_value: function() {
		return this.get_pos();
	}
	,set_value: function(value) {
		this.set_pos(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_min(this.get_min());
		c.set_max(this.get_max());
		if(this.get_precision() != null) {
			c.set_precision(this.get_precision());
		}
		if(this.get_start() != null) {
			c.set_start(this.get_start());
		}
		c.set_end(this.get_end());
		c.set_pos(this.get_pos());
		if(this.get_center() != null) {
			c.set_center(this.get_center());
		}
		if(this.get_step() != null) {
			c.set_step(this.get_step());
		}
		if(this.get_minorTicks() != null) {
			c.set_minorTicks(this.get_minorTicks());
		}
		if(this.get_majorTicks() != null) {
			c.set_majorTicks(this.get_majorTicks());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Slider();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components_SliderBuilder;
	}
	,__class__: haxe_ui_components_Slider
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_majorTicks:"set_majorTicks",get_majorTicks:"get_majorTicks",set_minorTicks:"set_minorTicks",get_minorTicks:"get_minorTicks",set_step:"set_step",get_step:"get_step",set_center:"set_center",get_center:"get_center",set_pos:"set_pos",get_pos:"get_pos",set_end:"set_end",get_end:"get_end",set_start:"set_start",get_start:"get_start",set_precision:"set_precision",get_precision:"get_precision",set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min"})
});
var haxe_ui_components_HorizontalSlider = function() {
	haxe_ui_components_Slider.call(this);
};
$hxClasses["haxe.ui.components.HorizontalSlider"] = haxe_ui_components_HorizontalSlider;
haxe_ui_components_HorizontalSlider.__name__ = "haxe.ui.components.HorizontalSlider";
haxe_ui_components_HorizontalSlider.__super__ = haxe_ui_components_Slider;
haxe_ui_components_HorizontalSlider.prototype = $extend(haxe_ui_components_Slider.prototype,{
	registerComposite: function() {
		haxe_ui_components_Slider.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components_HorizontalSliderLayout;
		this._compositeBuilderClass = haxe_ui_components__$HorizontalSlider_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Slider.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Slider.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_HorizontalSlider();
	}
	,__class__: haxe_ui_components_HorizontalSlider
});
var haxe_ui_components_HorizontalSliderLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.HorizontalSliderLayout"] = haxe_ui_components_HorizontalSliderLayout;
haxe_ui_components_HorizontalSliderLayout.__name__ = "haxe.ui.components.HorizontalSliderLayout";
haxe_ui_components_HorizontalSliderLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_HorizontalSliderLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var slider = js_Boot.__cast(this._component , haxe_ui_components_Slider);
		var range = this.findComponent(null,haxe_ui_components_Range);
		var rangeValue = range.findComponent("range-value");
		var startThumb = this.findComponent("start-thumb");
		var endThumb = this.findComponent("end-thumb");
		var padding = 0;
		if(range != null && range.get_layout() != null) {
			padding = range.get_layout().get_paddingLeft();
		}
		if(startThumb != null) {
			startThumb.set_left(range.get_left() + rangeValue.get_left() - startThumb.get_width() / 2);
			startThumb.set_left(Math.ceil(startThumb.get_left()));
			if(padding > 1 && startThumb.get_left() % 2 != 0) {
				startThumb.set_left(startThumb.get_left() + padding / 2);
			}
		}
		var cx = rangeValue.get_width();
		if(rangeValue.get_hidden() == true && this._component.get_hidden() == false) {
			cx = 0;
		}
		if(slider.get_center() != null) {
			if(slider.get_pos() >= slider.get_center()) {
				endThumb.set_left(range.get_left() + rangeValue.get_left() + cx - endThumb.get_width() / 2);
			} else {
				endThumb.set_left(range.get_left() + rangeValue.get_left() - endThumb.get_width() / 2);
				if(padding > 1 && cx % 2 == 0) {
					endThumb.set_left(endThumb.get_left() + padding / 2);
				}
			}
		} else {
			endThumb.set_left(range.get_left() + rangeValue.get_left() + cx - endThumb.get_width() / 2);
			endThumb.set_left(Math.ceil(endThumb.get_left()));
			if(startThumb != null && endThumb.get_left() % 2 == 0) {
				endThumb.set_left(endThumb.get_left() + 1);
			}
		}
		if(slider.get_minorTicks() != null && range != null && range.get_layout() != null) {
			var minorTicks = this.findComponents("minor-tick",haxe_ui_core_Component,1);
			if(minorTicks != null && minorTicks.length > 0) {
				var m = slider.get_max() - slider.get_min();
				var v = slider.get_minorTicks();
				var n = m / v | 0;
				var i = 0;
				var padding = range.get_layout().get_paddingLeft() + this.get_paddingLeft();
				var tcx = range.get_layout().get_usableWidth() / n;
				var _g = 0;
				while(_g < minorTicks.length) {
					var tick = minorTicks[_g];
					++_g;
					tick.set_left(i * tcx + padding);
					tick.set_left(Math.ceil(tick.get_left()));
					++i;
				}
			}
		}
		if(slider.get_majorTicks() != null && range != null && range.get_layout() != null) {
			var majorTicks = this.findComponents("major-tick",haxe_ui_core_Component,1);
			if(majorTicks != null && majorTicks.length > 0) {
				var m = slider.get_max() - slider.get_min();
				var v = slider.get_majorTicks();
				var n = m / v | 0;
				var i = 0;
				var padding = range.get_layout().get_paddingLeft() + this.get_paddingLeft();
				var tcx = range.get_layout().get_usableWidth() / n;
				var _g = 0;
				while(_g < majorTicks.length) {
					var tick = majorTicks[_g];
					++_g;
					tick.set_left(i * tcx + padding);
					tick.set_left(Math.ceil(tick.get_left()));
					++i;
				}
			}
		}
	}
	,__class__: haxe_ui_components_HorizontalSliderLayout
});
var haxe_ui_components_SliderBuilder = function(slider) {
	haxe_ui_core_CompositeBuilder.call(this,slider);
	this._slider = slider;
	this.showWarning();
};
$hxClasses["haxe.ui.components.SliderBuilder"] = haxe_ui_components_SliderBuilder;
haxe_ui_components_SliderBuilder.__name__ = "haxe.ui.components.SliderBuilder";
haxe_ui_components_SliderBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components_SliderBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_slider: null
	,create: function() {
		if(this._component.findComponent("range") == null) {
			var v = this.createValueComponent();
			if(v != null) {
				v.set_scriptAccess(false);
				v.set_allowFocus(false);
				v.set_id("range");
				v.addClass("slider-value");
				v.set_start(v.set_end(0));
				if(this._slider.get_center() != null) {
					this._slider.set_pos(this._slider.get_center());
					v.virtualStart = this._slider.get_center();
				}
				this._component.addComponent(v);
			}
		}
		this.createThumb("end-thumb");
	}
	,getStartOffset: function() {
		return 0;
	}
	,createValueComponent: function() {
		return null;
	}
	,createThumb: function(id) {
		if(this._component.findComponent(id) != null) {
			return;
		}
		var b = new haxe_ui_components_Button();
		b.set_scriptAccess(false);
		b.set_allowFocus(false);
		b.set_id(id);
		b.addClass(id);
		b.set_remainPressed(true);
		this._component.addComponent(b);
		this._component.registerInternalEvents(haxe_ui_components__$Slider_Events,true);
	}
	,showWarning: function() {
		haxe_Log.trace("WARNING: trying to create an instance of 'Slider' directly, use either 'HorizontalSlider' or 'VerticalSlider'",{ fileName : "haxe/ui/components/Slider.hx", lineNumber : 546, className : "haxe.ui.components.SliderBuilder", methodName : "showWarning"});
	}
	,__class__: haxe_ui_components_SliderBuilder
});
var haxe_ui_components__$HorizontalSlider_Builder = function(slider) {
	haxe_ui_components_SliderBuilder.call(this,slider);
	this._slider = slider;
};
$hxClasses["haxe.ui.components._HorizontalSlider.Builder"] = haxe_ui_components__$HorizontalSlider_Builder;
haxe_ui_components__$HorizontalSlider_Builder.__name__ = "haxe.ui.components._HorizontalSlider.Builder";
haxe_ui_components__$HorizontalSlider_Builder.__super__ = haxe_ui_components_SliderBuilder;
haxe_ui_components__$HorizontalSlider_Builder.prototype = $extend(haxe_ui_components_SliderBuilder.prototype,{
	createValueComponent: function() {
		return new haxe_ui_components_HorizontalRange();
	}
	,getStartOffset: function() {
		var start = 0;
		if(this._slider.get_start() != null) {
			start = this._slider.get_start();
		}
		return start;
	}
	,showWarning: function() {
	}
	,__class__: haxe_ui_components__$HorizontalSlider_Builder
});
var haxe_ui_components__$Image_ImageLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._Image.ImageLayout"] = haxe_ui_components__$Image_ImageLayout;
haxe_ui_components__$Image_ImageLayout.__name__ = "haxe.ui.components._Image.ImageLayout";
haxe_ui_components__$Image_ImageLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$Image_ImageLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	get_imageScaleMode: function() {
		return (js_Boot.__cast(this._component , haxe_ui_components_Image)).get_scaleMode();
	}
	,get_imageHorizontalAlign: function() {
		return (js_Boot.__cast(this._component , haxe_ui_components_Image)).get_imageHorizontalAlign();
	}
	,get_imageVerticalAlign: function() {
		return (js_Boot.__cast(this._component , haxe_ui_components_Image)).get_imageVerticalAlign();
	}
	,resizeChildren: function() {
		if(this.get_component().hasImageDisplay()) {
			var image = js_Boot.__cast(this._component , haxe_ui_components_Image);
			var imageDisplay = image.getImageDisplay();
			var maxWidth = this.get_usableSize().width;
			var maxHeight = this.get_usableSize().height;
			if(this.get_component().get_autoWidth() == true) {
				maxWidth = -1;
			}
			if(this._component.get_autoHeight() == true) {
				maxHeight = -1;
			}
			var scaleW = maxWidth != -1 ? maxWidth / image.get_originalWidth() : 1;
			var scaleH = maxHeight != -1 ? maxHeight / image.get_originalHeight() : 1;
			scaleW *= image.get_imageScale();
			scaleH *= image.get_imageScale();
			if(this.get_imageScaleMode() != "fill") {
				var scale;
				switch(this.get_imageScaleMode()) {
				case "fitheight":
					scale = scaleH;
					break;
				case "fitinside":
					scale = scaleW < scaleH ? scaleW : scaleH;
					break;
				case "fitoutside":
					scale = scaleW > scaleH ? scaleW : scaleH;
					break;
				case "fitwidth":
					scale = scaleW;
					break;
				default:
					scale = 1;
				}
				imageDisplay.set_imageWidth(image.get_originalWidth() * scale);
				imageDisplay.set_imageHeight(image.get_originalHeight() * scale);
			} else {
				imageDisplay.set_imageWidth(image.get_originalWidth() * scaleW);
				imageDisplay.set_imageHeight(image.get_originalHeight() * scaleH);
			}
		}
	}
	,repositionChildren: function() {
		if(this.get_component().hasImageDisplay()) {
			var image = js_Boot.__cast(this._component , haxe_ui_components_Image);
			var imageDisplay = this._component.getImageDisplay();
			switch(image.get_imageHorizontalAlign()) {
			case "center":
				imageDisplay.set_left((this._component.get_componentWidth() - imageDisplay.get_imageWidth()) / 2);
				break;
			case "left":
				imageDisplay.set_left(this.get_paddingLeft());
				break;
			case "right":
				imageDisplay.set_left(this._component.get_componentWidth() - imageDisplay.get_imageWidth() - this.get_paddingRight());
				break;
			}
			switch(image.get_imageVerticalAlign()) {
			case "bottom":
				imageDisplay.set_top(this._component.get_componentHeight() - imageDisplay.get_imageHeight() - this.get_paddingBottom());
				break;
			case "center":
				imageDisplay.set_top((this._component.get_componentHeight() - imageDisplay.get_imageHeight()) / 2);
				break;
			case "top":
				imageDisplay.set_top(this.get_paddingTop());
				break;
			}
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this.get_component().hasImageDisplay()) {
			size.width += this.get_component().getImageDisplay().get_imageWidth();
			size.height += this.get_component().getImageDisplay().get_imageHeight();
		}
		return size;
	}
	,refresh: function() {
		haxe_ui_layouts_DefaultLayout.prototype.refresh.call(this);
		this.updateClipRect();
	}
	,updateClipRect: function() {
		if(this.get_component().hasImageDisplay()) {
			var usz = this.get_usableSize();
			var imageDisplay = this.get_component().getImageDisplay();
			var rc = imageDisplay.get_imageClipRect();
			if(imageDisplay.get_imageWidth() > usz.width || imageDisplay.get_imageHeight() > usz.height) {
				if(rc == null) {
					rc = new haxe_ui_geom_Rectangle();
				}
				rc.top = this.get_paddingLeft();
				rc.left = this.get_paddingTop();
				rc.width = usz.width;
				rc.height = usz.height;
			} else {
				rc = null;
			}
			imageDisplay.set_imageClipRect(rc);
		}
	}
	,__class__: haxe_ui_components__$Image_ImageLayout
	,__properties__: $extend(haxe_ui_layouts_DefaultLayout.prototype.__properties__,{get_imageVerticalAlign:"get_imageVerticalAlign",get_imageHorizontalAlign:"get_imageHorizontalAlign",get_imageScaleMode:"get_imageScaleMode"})
});
var haxe_ui_components__$Image_ResourceBehaviour = function(component) {
	this._canvasMap = null;
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Image.ResourceBehaviour"] = haxe_ui_components__$Image_ResourceBehaviour;
haxe_ui_components__$Image_ResourceBehaviour.__name__ = "haxe.ui.components._Image.ResourceBehaviour";
haxe_ui_components__$Image_ResourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Image_ResourceBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_canvasMap: null
	,validateData: function() {
		var _gthis = this;
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			this._component.removeImageDisplay();
			this._component.invalidateComponent();
			return;
		}
		if(haxe_ui_util_Variant.get_isComponent(this._value) && ((haxe_ui_util_Variant.toComponent(this._value)) instanceof haxe_ui_components_Canvas)) {
			var newCanvas = null;
			if(this._canvasMap == null) {
				this._canvasMap = new haxe_ds_StringMap();
			}
			var canvas = haxe_ui_util_Variant.toComponent(this._value);
			if(canvas.get_id() == null) {
				canvas.set_id(haxe_ui_util_GUID.uuid());
			}
			var existingCanvas = this._component.findComponent(null,haxe_ui_components_Canvas,false);
			if(existingCanvas != null && existingCanvas.get_id() == canvas.get_id()) {
				return;
			}
			if(existingCanvas != null) {
				this._component.removeComponent(existingCanvas,false);
			}
			var this1 = this._canvasMap;
			var key = canvas.get_id();
			if(Object.prototype.hasOwnProperty.call(this1.h,key)) {
				var this1 = this._canvasMap;
				var key = canvas.get_id();
				newCanvas = this1.h[key];
			} else {
				newCanvas = haxe_ui_util_Variant.toComponent(this._value).cloneComponent();
				var this1 = this._canvasMap;
				var key = canvas.get_id();
				this1.h[key] = newCanvas;
			}
			this._component.addComponent(newCanvas);
		} else if(haxe_ui_util_Variant.get_isComponent(this._value) && ((haxe_ui_util_Variant.toComponent(this._value)) instanceof haxe_ui_components_Image)) {
			var image = js_Boot.__cast(haxe_ui_util_Variant.toComponent(this._value) , haxe_ui_components_Image);
			this._component.addComponent(image);
		} else {
			var imageLoader = new haxe_ui_util_ImageLoader(this._value);
			imageLoader.load(function(imageInfo) {
				if(imageInfo != null) {
					if(_gthis._value == null || haxe_ui_util_Variant.get_isNull(_gthis._value)) {
						_gthis._component.removeImageDisplay();
						_gthis._component.invalidateComponent();
						return;
					}
					var image = js_Boot.__cast(_gthis._component , haxe_ui_components_Image);
					if(image == null) {
						return;
					}
					var display = image.getImageDisplay();
					if(display != null) {
						display.set_imageInfo(imageInfo);
						image.set_originalWidth(imageInfo.width);
						image.set_originalHeight(imageInfo.height);
						if(image.autoSize() == true && image.parentComponent != null) {
							var _this = image.parentComponent;
							if(!(_this._layout == null || _this._layoutLocked == true)) {
								_this.invalidateComponent("layout",false);
							}
						}
						image.invalidateComponent();
						display.validateComponent();
						var event = new haxe_ui_events_UIEvent("change");
						image.dispatch(event);
					}
				}
			});
		}
	}
	,__class__: haxe_ui_components__$Image_ResourceBehaviour
});
var haxe_ui_components__$Image_Builder = function(image) {
	var _gthis = this;
	haxe_ui_core_CompositeBuilder.call(this,image);
	this._image = image;
	this._image.registerEvent("shown",function(_) {
		if(_gthis._image.parentComponent != null) {
			var _this = _gthis._image.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
	});
};
$hxClasses["haxe.ui.components._Image.Builder"] = haxe_ui_components__$Image_Builder;
haxe_ui_components__$Image_Builder.__name__ = "haxe.ui.components._Image.Builder";
haxe_ui_components__$Image_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Image_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_image: null
	,applyStyle: function(style) {
		if(style.resource != null) {
			this._image.set_resource(style.resource);
		}
	}
	,__class__: haxe_ui_components__$Image_Builder
});
var haxe_ui_components__$Label_LabelLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._Label.LabelLayout"] = haxe_ui_components__$Label_LabelLayout;
haxe_ui_components__$Label_LabelLayout.__name__ = "haxe.ui.components._Label.LabelLayout";
haxe_ui_components__$Label_LabelLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$Label_LabelLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		if(this.get_component().get_autoWidth() == false) {
			this.get_component().getTextDisplay().set_width(this.get_component().get_componentWidth() - this.get_paddingLeft() - this.get_paddingRight());
			var wordWrap = true;
			if(this._component.get_style() != null && this._component.get_style().wordWrap != null) {
				wordWrap = this._component.get_style().wordWrap;
			}
			this.get_component().getTextDisplay().set_wordWrap(wordWrap);
		} else {
			this.get_component().getTextDisplay().set_width(this.get_component().getTextDisplay().get_textWidth());
		}
		if(this.get_component().get_autoHeight() == true) {
			this.get_component().getTextDisplay().set_height(this.get_component().getTextDisplay().get_textHeight());
		} else {
			this.get_component().getTextDisplay().set_height(this.get_component().get_height());
		}
	}
	,repositionChildren: function() {
		if(this.get_component().hasTextDisplay() == true) {
			this.get_component().getTextDisplay().set_left(this.get_paddingLeft());
			this.get_component().getTextDisplay().set_top(this.get_paddingTop());
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this.get_component().hasTextDisplay() == true) {
			size.width += this.get_component().getTextDisplay().get_textWidth();
			size.height += this.get_component().getTextDisplay().get_textHeight();
		}
		return size;
	}
	,textAlign: function(child) {
		if(child == null || child.get_style() == null || child.get_style().textAlign == null) {
			return "left";
		}
		return child.get_style().textAlign;
	}
	,__class__: haxe_ui_components__$Label_LabelLayout
});
var haxe_ui_components__$Label_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Label.TextBehaviour"] = haxe_ui_components__$Label_TextBehaviour;
haxe_ui_components__$Label_TextBehaviour.__name__ = "haxe.ui.components._Label.TextBehaviour";
haxe_ui_components__$Label_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Label_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._component.getTextDisplay().get_textStyle() != this._component.get_style()) {
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		this._component.getTextDisplay().set_text("" + (this._value == null ? "null" : haxe_ui_util_Variant.toString(this._value)));
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_components__$Label_TextBehaviour
});
var haxe_ui_components__$Label_HtmlTextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Label.HtmlTextBehaviour"] = haxe_ui_components__$Label_HtmlTextBehaviour;
haxe_ui_components__$Label_HtmlTextBehaviour.__name__ = "haxe.ui.components._Label.HtmlTextBehaviour";
haxe_ui_components__$Label_HtmlTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Label_HtmlTextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._component.getTextDisplay().get_textStyle() != this._component.get_style()) {
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		this._component.getTextDisplay().set_htmlText("" + (this._value == null ? "null" : haxe_ui_util_Variant.toString(this._value)));
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_components__$Label_HtmlTextBehaviour
});
var haxe_ui_components__$Label_Builder = function(label) {
	haxe_ui_core_CompositeBuilder.call(this,label);
	this._label = label;
};
$hxClasses["haxe.ui.components._Label.Builder"] = haxe_ui_components__$Label_Builder;
haxe_ui_components__$Label_Builder.__name__ = "haxe.ui.components._Label.Builder";
haxe_ui_components__$Label_Builder.isHtml = function(v) {
	if(v == null) {
		return false;
	} else {
		return v.indexOf("<font ") != -1;
	}
};
haxe_ui_components__$Label_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Label_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_label: null
	,applyStyle: function(style) {
		if(this._label.hasTextDisplay() == true) {
			this._label.getTextDisplay().set_textStyle(style);
			var tmp;
			if((style.contentType == "auto" || style.contentType == "html") && this._label.getTextDisplay().get_supportsHtml()) {
				var v = Std.string(this._component.get_text());
				tmp = v == null ? false : v.indexOf("<font ") != -1;
			} else {
				tmp = false;
			}
			if(tmp) {
				this._label.set_htmlText(this._label.get_text());
			}
		}
	}
	,get_isComponentClipped: function() {
		var componentClipRect = this._component.get_componentClipRect();
		if(componentClipRect == null) {
			return false;
		}
		return this._label.getTextDisplay().measureTextWidth() > componentClipRect.width;
	}
	,__class__: haxe_ui_components__$Label_Builder
});
var haxe_ui_components_OptionStepper = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.OptionStepper"] = haxe_ui_components_OptionStepper;
haxe_ui_components_OptionStepper.__name__ = "haxe.ui.components.OptionStepper";
haxe_ui_components_OptionStepper.__interfaces__ = [haxe_ui_core_IDataComponent];
haxe_ui_components_OptionStepper.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_OptionStepper.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("selectedIndex",haxe_ui_components__$OptionStepper_SelectedIndexBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("selectedItem",haxe_ui_components__$OptionStepper_SelectedItemBehaviour);
		this.behaviours.register("dataSource",haxe_ui_components__$OptionStepper_DataSourceBehaviour);
	}
	,get_selectedIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedIndex"));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,get_selectedItem: function() {
		return this.behaviours.getDynamic("selectedItem");
	}
	,set_selectedItem: function(value) {
		this.behaviours.setDynamic("selectedItem",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedItem"));
		return value;
	}
	,get_dataSource: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDataSource(this.behaviours.get("dataSource"));
	}
	,set_dataSource: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dataSource",haxe_ui_util_Variant.fromDataSource(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"dataSource"));
		return value;
	}
	,get_value: function() {
		return this.get_selectedIndex();
	}
	,set_value: function(value) {
		this.set_selectedIndex(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_selectedIndex(this.get_selectedIndex());
		if(this.get_dataSource() != null) {
			c.set_dataSource(this.get_dataSource());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_OptionStepper();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$OptionStepper_Events;
		this._compositeBuilderClass = haxe_ui_components__$OptionStepper_Builder;
		this._defaultLayoutClass = haxe_ui_components__$OptionStepper_Layout;
	}
	,__class__: haxe_ui_components_OptionStepper
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_dataSource:"set_dataSource",get_dataSource:"get_dataSource",set_selectedItem:"set_selectedItem",get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex"})
});
var haxe_ui_components__$OptionStepper_DataSourceBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._OptionStepper.DataSourceBehaviour"] = haxe_ui_components__$OptionStepper_DataSourceBehaviour;
haxe_ui_components__$OptionStepper_DataSourceBehaviour.__name__ = "haxe.ui.components._OptionStepper.DataSourceBehaviour";
haxe_ui_components__$OptionStepper_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$OptionStepper_DataSourceBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	__class__: haxe_ui_components__$OptionStepper_DataSourceBehaviour
});
var haxe_ui_components__$OptionStepper_SelectedIndexBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._OptionStepper.SelectedIndexBehaviour"] = haxe_ui_components__$OptionStepper_SelectedIndexBehaviour;
haxe_ui_components__$OptionStepper_SelectedIndexBehaviour.__name__ = "haxe.ui.components._OptionStepper.SelectedIndexBehaviour";
haxe_ui_components__$OptionStepper_SelectedIndexBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$OptionStepper_SelectedIndexBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var stepper = js_Boot.__cast(this._component , haxe_ui_components_OptionStepper);
		var ds = stepper.get_dataSource();
		if(ds == null) {
			return;
		}
		var v = ds.get(haxe_ui_util_Variant.toInt(this._value));
		if(v == null) {
			return;
		}
		if(v.value != null) {
			v = Std.string(v.value);
		} else if(v.text != null) {
			v = Std.string(v.text);
		}
		var value = stepper.findComponent("value",haxe_ui_components_Label);
		value.set_text(v);
		var event = new haxe_ui_events_UIEvent("change");
		event.previousValue = this._previousValue;
		event.value = this._value;
		this._component.dispatch(event);
	}
	,__class__: haxe_ui_components__$OptionStepper_SelectedIndexBehaviour
});
var haxe_ui_components__$OptionStepper_SelectedItemBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._OptionStepper.SelectedItemBehaviour"] = haxe_ui_components__$OptionStepper_SelectedItemBehaviour;
haxe_ui_components__$OptionStepper_SelectedItemBehaviour.__name__ = "haxe.ui.components._OptionStepper.SelectedItemBehaviour";
haxe_ui_components__$OptionStepper_SelectedItemBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$OptionStepper_SelectedItemBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	getDynamic: function() {
		var stepper = js_Boot.__cast(this._component , haxe_ui_components_OptionStepper);
		var ds = stepper.get_dataSource();
		return ds.get(stepper.get_selectedIndex());
	}
	,__class__: haxe_ui_components__$OptionStepper_SelectedItemBehaviour
});
var haxe_ui_components__$OptionStepper_Builder = function(stepper) {
	haxe_ui_core_CompositeBuilder.call(this,stepper);
	this._stepper = stepper;
};
$hxClasses["haxe.ui.components._OptionStepper.Builder"] = haxe_ui_components__$OptionStepper_Builder;
haxe_ui_components__$OptionStepper_Builder.__name__ = "haxe.ui.components._OptionStepper.Builder";
haxe_ui_components__$OptionStepper_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$OptionStepper_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_stepper: null
	,create: function() {
		var value = new haxe_ui_components_Label();
		value.set_id("value");
		value.addClass("stepper-value");
		value.set_scriptAccess(false);
		this._stepper.addComponent(value);
		var deinc = new haxe_ui_components_Button();
		deinc.set_id("deinc");
		deinc.addClass("stepper-deinc");
		deinc.set_allowFocus(false);
		deinc.set_scriptAccess(false);
		deinc.set_repeater(true);
		this._stepper.addComponent(deinc);
		var inc = new haxe_ui_components_Button();
		inc.set_id("inc");
		inc.addClass("stepper-inc");
		inc.set_allowFocus(false);
		inc.set_scriptAccess(false);
		inc.set_repeater(true);
		this._stepper.addComponent(inc);
	}
	,applyStyle: function(style) {
		var value = this._stepper.findComponent("value",haxe_ui_components_Label);
		if(value != null && (value.get_customStyle().color != style.color || value.get_customStyle().fontName != style.fontName || value.get_customStyle().fontSize != style.fontSize || value.get_customStyle().cursor != style.cursor || value.get_customStyle().textAlign != style.textAlign)) {
			value.get_customStyle().color = style.color;
			value.get_customStyle().fontName = style.fontName;
			value.get_customStyle().fontSize = style.fontSize;
			value.get_customStyle().cursor = style.cursor;
			value.get_customStyle().textAlign = style.textAlign;
			value.invalidateComponent("style",false);
		}
	}
	,__class__: haxe_ui_components__$OptionStepper_Builder
});
var haxe_ui_components__$OptionStepper_Events = function(stepper) {
	haxe_ui_events_Events.call(this,stepper);
	this._stepper = stepper;
};
$hxClasses["haxe.ui.components._OptionStepper.Events"] = haxe_ui_components__$OptionStepper_Events;
haxe_ui_components__$OptionStepper_Events.__name__ = "haxe.ui.components._OptionStepper.Events";
haxe_ui_components__$OptionStepper_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$OptionStepper_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_stepper: null
	,register: function() {
		if(!this._stepper.hasEvent("click",$bind(this,this.onClick))) {
			this._stepper.registerEvent("click",$bind(this,this.onClick));
		}
		if(!this._stepper.hasEvent("mousewheel",$bind(this,this.onMouseWheel))) {
			this._stepper.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
		}
		var deinc = this._stepper.findComponent("deinc",haxe_ui_components_Button);
		if(!deinc.hasEvent("click",$bind(this,this.onDeinc))) {
			deinc.registerEvent("click",$bind(this,this.onDeinc));
		}
		var inc = this._stepper.findComponent("inc",haxe_ui_components_Button);
		if(!inc.hasEvent("click",$bind(this,this.onInc))) {
			inc.registerEvent("click",$bind(this,this.onInc));
		}
		if(!this.hasEvent("actionstart",$bind(this,this.onActionStart))) {
			this.registerEvent("actionstart",$bind(this,this.onActionStart));
		}
	}
	,unregister: function() {
		this._stepper.unregisterEvent("click",$bind(this,this.onClick));
		this._stepper.unregisterEvent("mousewheel",$bind(this,this.onMouseWheel));
		var deinc = this._stepper.findComponent("deinc",haxe_ui_components_Button);
		deinc.unregisterEvent("click",$bind(this,this.onDeinc));
		var inc = this._stepper.findComponent("inc",haxe_ui_components_Button);
		inc.unregisterEvent("click",$bind(this,this.onInc));
		this.unregisterEvent("actionstart",$bind(this,this.onActionStart));
	}
	,onClick: function(_) {
		this._stepper.set_focus(true);
	}
	,onDeinc: function(event) {
		this._stepper.set_focus(true);
		this.deincrementValue();
	}
	,onInc: function(event) {
		this._stepper.set_focus(true);
		this.incrementValue();
	}
	,isInScroller: function() {
		var p = this._stepper.parentComponent;
		while(p != null) {
			if(p.get_isScroller()) {
				var vscroll = p.findComponent("scrollview-vscroll",haxe_ui_core_Component);
				if(vscroll != null && vscroll.get_hidden() == false) {
					return true;
				}
			}
			p = p.parentComponent;
		}
		return false;
	}
	,onMouseWheel: function(event) {
		if(this.isInScroller() && this._stepper.get_focus() == false) {
			return;
		}
		event.cancel();
		this._stepper.set_focus(true);
		if(event.delta > 0) {
			this.incrementValue();
		} else {
			this.deincrementValue();
		}
	}
	,onActionStart: function(event) {
		switch(event.action) {
		case "actionDown":
			this.deincrementValue();
			event.repeater = true;
			break;
		case "actionLeft":
			this.deincrementValue();
			event.repeater = true;
			break;
		case "actionRight":
			this.incrementValue();
			event.repeater = true;
			break;
		case "actionUp":
			this.incrementValue();
			event.repeater = true;
			break;
		default:
		}
	}
	,incrementValue: function() {
		if(this._stepper.get_dataSource() == null) {
			return;
		}
		var n = this._stepper.get_selectedIndex();
		var m = this._stepper.get_dataSource().get_size();
		++n;
		if(n > m - 1) {
			n = 0;
		}
		this._stepper.set_selectedIndex(n);
	}
	,deincrementValue: function() {
		if(this._stepper.get_dataSource() == null) {
			return;
		}
		var n = this._stepper.get_selectedIndex();
		var m = this._stepper.get_dataSource().get_size();
		--n;
		if(n < 0) {
			n = m - 1;
		}
		this._stepper.set_selectedIndex(n);
	}
	,__class__: haxe_ui_components__$OptionStepper_Events
});
var haxe_ui_components__$OptionStepper_Layout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._OptionStepper.Layout"] = haxe_ui_components__$OptionStepper_Layout;
haxe_ui_components__$OptionStepper_Layout.__name__ = "haxe.ui.components._OptionStepper.Layout";
haxe_ui_components__$OptionStepper_Layout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$OptionStepper_Layout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		var value = this.findComponent("value",haxe_ui_components_Label);
		var deinc = this.findComponent("deinc",haxe_ui_components_Button);
		var inc = this.findComponent("inc",haxe_ui_components_Button);
		var u = this.get_usableSize();
		deinc.set_height(u.height - this.get_borderSize() * 2);
		value.set_width(u.width - (deinc.get_width() + inc.get_width()));
		inc.set_height(u.height - this.get_borderSize() * 2);
	}
	,repositionChildren: function() {
		var value = this.findComponent("value",haxe_ui_components_Label);
		var deinc = this.findComponent("deinc",haxe_ui_components_Button);
		var inc = this.findComponent("inc",haxe_ui_components_Button);
		deinc.set_left(this.get_paddingLeft() + this.get_borderSize());
		deinc.set_top(this.get_paddingTop() + this.get_borderSize());
		value.set_left(deinc.get_left() + deinc.get_width());
		value.set_top(this.get_paddingTop() + this.marginTop(value));
		inc.set_left(value.get_left() + value.get_width() - this.get_borderSize() - this.get_borderSize());
		inc.set_top(this.get_paddingTop() + this.get_borderSize());
	}
	,get_borderSize: function() {
		if(this._component.get_style() == null) {
			return 0;
		}
		var n = this._component.get_style().get_fullBorderSize();
		return n;
	}
	,__class__: haxe_ui_components__$OptionStepper_Layout
});
var haxe_ui_components_Progress = function() {
	haxe_ui_components_Range.call(this);
	this.behaviours.set_updateOrder(["min","max","pos","indeterminate"]);
};
$hxClasses["haxe.ui.components.Progress"] = haxe_ui_components_Progress;
haxe_ui_components_Progress.__name__ = "haxe.ui.components.Progress";
haxe_ui_components_Progress.__interfaces__ = [haxe_ui_core_IValueComponent,haxe_ui_core_IDirectionalComponent];
haxe_ui_components_Progress.__super__ = haxe_ui_components_Range;
haxe_ui_components_Progress.prototype = $extend(haxe_ui_components_Range.prototype,{
	get_cssName: function() {
		return "progress";
	}
	,registerComposite: function() {
		haxe_ui_components_Range.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components_ProgressBuilder;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Range.prototype.registerBehaviours.call(this);
		this.behaviours.register("indeterminate",haxe_ui_components__$Progress_Indeterminate);
		this.behaviours.register("pos",haxe_ui_components__$Progress_Pos);
		this.behaviours.register("min",haxe_ui_components__$Progress_Min);
	}
	,get_indeterminate: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("indeterminate"));
	}
	,set_indeterminate: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("indeterminate",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"indeterminate"));
		return value;
	}
	,get_pos: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pos"));
	}
	,set_pos: function(value) {
		this.behaviours.set("pos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"pos"));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,get_value: function() {
		return this.get_pos();
	}
	,set_value: function(value) {
		this.set_pos(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Range.prototype.cloneComponent.call(this);
		c.set_indeterminate(this.get_indeterminate());
		c.set_pos(this.get_pos());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Progress();
	}
	,__class__: haxe_ui_components_Progress
	,__properties__: $extend(haxe_ui_components_Range.prototype.__properties__,{set_pos:"set_pos",get_pos:"get_pos",set_indeterminate:"set_indeterminate",get_indeterminate:"get_indeterminate"})
});
var haxe_ui_components__$Progress_Pos = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Progress.Pos"] = haxe_ui_components__$Progress_Pos;
haxe_ui_components__$Progress_Pos.__name__ = "haxe.ui.components._Progress.Pos";
haxe_ui_components__$Progress_Pos.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$Progress_Pos.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		var progress = js_Boot.__cast(this._component , haxe_ui_components_Progress);
		return haxe_ui_util_Variant.fromFloat(progress.get_end());
	}
	,set: function(value) {
		var progress = js_Boot.__cast(this._component , haxe_ui_components_Progress);
		progress.set_end(haxe_ui_util_Variant.toFloat(value));
	}
	,__class__: haxe_ui_components__$Progress_Pos
});
var haxe_ui_components__$Progress_Min = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Progress.Min"] = haxe_ui_components__$Progress_Min;
haxe_ui_components__$Progress_Min.__name__ = "haxe.ui.components._Progress.Min";
haxe_ui_components__$Progress_Min.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$Progress_Min.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		var progress = js_Boot.__cast(this._component , haxe_ui_components_Progress);
		progress.set_start(haxe_ui_util_Variant.toFloat(value));
	}
	,__class__: haxe_ui_components__$Progress_Min
});
var haxe_ui_components__$Progress_Indeterminate = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Progress.Indeterminate"] = haxe_ui_components__$Progress_Indeterminate;
haxe_ui_components__$Progress_Indeterminate.__name__ = "haxe.ui.components._Progress.Indeterminate";
haxe_ui_components__$Progress_Indeterminate.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_components__$Progress_Indeterminate.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		haxe_ui_behaviours_ValueBehaviour.prototype.set.call(this,value);
		if(haxe_ui_util_Variant.eq(value,haxe_ui_util_Variant.fromBool(false))) {
			this._component.removeClass(":indeterminate");
		} else {
			this._component.addClass(":indeterminate");
		}
	}
	,detatch: function() {
		haxe_ui_behaviours_ValueBehaviour.prototype.detatch.call(this);
		this._component.removeClass(":indeterminate");
	}
	,__class__: haxe_ui_components__$Progress_Indeterminate
});
var haxe_ui_components_ProgressBuilder = function(component) {
	haxe_ui_components_RangeBuilder.call(this,component);
};
$hxClasses["haxe.ui.components.ProgressBuilder"] = haxe_ui_components_ProgressBuilder;
haxe_ui_components_ProgressBuilder.__name__ = "haxe.ui.components.ProgressBuilder";
haxe_ui_components_ProgressBuilder.__super__ = haxe_ui_components_RangeBuilder;
haxe_ui_components_ProgressBuilder.prototype = $extend(haxe_ui_components_RangeBuilder.prototype,{
	__class__: haxe_ui_components_ProgressBuilder
});
var haxe_ui_components__$Range_RangeMin = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Range.RangeMin"] = haxe_ui_components__$Range_RangeMin;
haxe_ui_components__$Range_RangeMin.__name__ = "haxe.ui.components._Range.RangeMin";
haxe_ui_components__$Range_RangeMin.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Range_RangeMin.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		range.set_min(haxe_ui_util_Variant.toFloat(this._value));
		if(range.get_start() < range.get_min()) {
			range.set_start(range.get_min());
		}
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,__class__: haxe_ui_components__$Range_RangeMin
});
var haxe_ui_components__$Range_RangeMax = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Range.RangeMax"] = haxe_ui_components__$Range_RangeMax;
haxe_ui_components__$Range_RangeMax.__name__ = "haxe.ui.components._Range.RangeMax";
haxe_ui_components__$Range_RangeMax.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Range_RangeMax.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		range.set_max(haxe_ui_util_Variant.toFloat(this._value));
		if(range.get_end() > range.get_max()) {
			range.set_end(range.get_max());
		}
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,__class__: haxe_ui_components__$Range_RangeMax
});
var haxe_ui_components__$Range_RangeStart = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Range.RangeStart"] = haxe_ui_components__$Range_RangeStart;
haxe_ui_components__$Range_RangeStart.__name__ = "haxe.ui.components._Range.RangeStart";
haxe_ui_components__$Range_RangeStart.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Range_RangeStart.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		if(this._value != null && haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromFloat(range.get_min()))) {
			this._value = haxe_ui_util_Variant.fromFloat(range.get_min());
		} else if(this._value != null && haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromFloat(range.get_max()))) {
			this._value = haxe_ui_util_Variant.fromFloat(range.get_max());
		}
		range.set_start(haxe_ui_util_Variant.toFloat(this._value));
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
		var changeEvent = new haxe_ui_events_UIEvent("change");
		changeEvent.previousValue = this._previousValue;
		changeEvent.value = this._value;
		this._component.dispatch(changeEvent);
	}
	,__class__: haxe_ui_components__$Range_RangeStart
});
var haxe_ui_components__$Range_RangeEnd = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Range.RangeEnd"] = haxe_ui_components__$Range_RangeEnd;
haxe_ui_components__$Range_RangeEnd.__name__ = "haxe.ui.components._Range.RangeEnd";
haxe_ui_components__$Range_RangeEnd.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Range_RangeEnd.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		if(this._value != null && haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromFloat(range.get_min()))) {
			this._value = haxe_ui_util_Variant.fromFloat(range.get_min());
		} else if(this._value != null && haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromFloat(range.get_max()))) {
			this._value = haxe_ui_util_Variant.fromFloat(range.get_max());
		}
		range.set_end(haxe_ui_util_Variant.toFloat(this._value));
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
		var changeEvent = new haxe_ui_events_UIEvent("change");
		changeEvent.previousValue = this._previousValue;
		changeEvent.value = this._value;
		this._component.dispatch(changeEvent);
	}
	,__class__: haxe_ui_components__$Range_RangeEnd
});
var haxe_ui_components__$Range_AllowInteraction = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Range.AllowInteraction"] = haxe_ui_components__$Range_AllowInteraction;
haxe_ui_components__$Range_AllowInteraction.__name__ = "haxe.ui.components._Range.AllowInteraction";
haxe_ui_components__$Range_AllowInteraction.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$Range_AllowInteraction.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		return haxe_ui_util_Variant.fromBool(this._component._internalEvents != null);
	}
	,set: function(value) {
		if(this._component.get_native() == true) {
			return;
		}
		if(haxe_ui_util_Variant.eq(value,haxe_ui_util_Variant.fromBool(true))) {
			this._component.registerInternalEvents(haxe_ui_components__$Range_Events);
		} else {
			this._component.unregisterInternalEvents();
		}
	}
	,__class__: haxe_ui_components__$Range_AllowInteraction
});
var haxe_ui_components__$Range_Events = function(range) {
	haxe_ui_events_Events.call(this,range);
	this._range = range;
	this.register();
};
$hxClasses["haxe.ui.components._Range.Events"] = haxe_ui_components__$Range_Events;
haxe_ui_components__$Range_Events.__name__ = "haxe.ui.components._Range.Events";
haxe_ui_components__$Range_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$Range_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_range: null
	,register: function() {
		this._range.registerEvent("mousedown",$bind(this,this.onMouseDown));
	}
	,unregister: function() {
		this._range.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
	}
	,onMouseDown: function(e) {
		var pt = new haxe_ui_geom_Point(e.get_localX(),e.get_localY());
		var pos = this._range.posFromCoord(pt);
		this.applyPos(pos);
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,onScreenMouseUp: function(e) {
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,onScreenMouseMove: function(e) {
		var pt = new haxe_ui_geom_Point(e.screenX - this._range.get_screenLeft(),e.screenY - this._range.get_screenTop());
		var pos = this._range.posFromCoord(pt);
		this.applyPos(pos);
	}
	,applyPos: function(pos) {
		var precision = this._range.get_precision();
		if(precision == null) {
			precision = 0;
		}
		pos = Math.round(pos * Math.pow(10,precision)) / Math.pow(10,precision);
		if(this._range.get_step() > 0) {
			pos = Math.ceil(pos / this._range.get_step()) * this._range.get_step();
		}
		if(((this._range) instanceof haxe_ui_components_Progress)) {
			(js_Boot.__cast(this._range , haxe_ui_components_Progress)).set_pos(pos);
			return;
		}
		var d1 = this._range.get_end() - this._range.get_start();
		var d2 = pos - this._range.get_start();
		if(d2 < d1 / 2) {
			this._range.set_start(pos);
		} else if(d2 >= d1 / 2) {
			this._range.set_end(pos);
		} else if(pos > this._range.get_start()) {
			this._range.set_end(pos);
		} else if(pos < this._range.get_end()) {
			this._range.set_start(pos);
		}
	}
	,__class__: haxe_ui_components__$Range_Events
});
var haxe_ui_components__$Scroll_Events = function(scroll) {
	haxe_ui_events_Events.call(this,scroll);
	this._scroll = scroll;
	this._deincButton = this._scroll.findComponent("scroll-deinc-button");
	this._incButton = this._scroll.findComponent("scroll-inc-button");
	this._thumb = this._scroll.findComponent("scroll-thumb-button");
};
$hxClasses["haxe.ui.components._Scroll.Events"] = haxe_ui_components__$Scroll_Events;
haxe_ui_components__$Scroll_Events.__name__ = "haxe.ui.components._Scroll.Events";
haxe_ui_components__$Scroll_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$Scroll_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_scroll: null
	,_deincButton: null
	,_incButton: null
	,_thumb: null
	,register: function() {
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this._deincButton != null && this._deincButton.hasEvent("click",$bind(this,this.onDeinc)) == false) {
			this._deincButton.registerEvent("click",$bind(this,this.onDeinc));
		}
		if(this._incButton != null && this._incButton.hasEvent("click",$bind(this,this.onInc)) == false) {
			this._incButton.registerEvent("click",$bind(this,this.onInc));
		}
		if(this._thumb != null && this._thumb.hasEvent("mousedown",$bind(this,this.onThumbMouseDown)) == false) {
			this._thumb.registerEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
	}
	,unregister: function() {
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		if(this._deincButton != null) {
			this._deincButton.unregisterEvent("click",$bind(this,this.onDeinc));
		}
		if(this._incButton != null) {
			this._incButton.unregisterEvent("click",$bind(this,this.onInc));
		}
		if(this._thumb != null) {
			this._thumb.unregisterEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
	}
	,onMouseDown: function(event) {
		var componentOffset = this._scroll.getComponentOffset();
		if(this._deincButton.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == false && this._incButton.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == false) {
			this._scroll.applyPageFromCoord(new haxe_ui_geom_Point(event.screenX - componentOffset.x,event.screenY - componentOffset.y));
		}
	}
	,onDeinc: function(event) {
		var fh = this._scroll;
		fh.set_pos(fh.get_pos() - this._scroll.get_increment());
	}
	,onInc: function(event) {
		var fh = this._scroll;
		fh.set_pos(fh.get_pos() + this._scroll.get_increment());
	}
	,_mouseDownOffset: null
	,onThumbMouseDown: function(event) {
		this._mouseDownOffset = new haxe_ui_geom_Point();
		var tmp = event.screenX - this._thumb.get_left();
		var tmp1 = this._scroll.get_layout().get_paddingLeft();
		this._mouseDownOffset.x = tmp + tmp1;
		var tmp = event.screenY - this._thumb.get_top();
		var tmp1 = this._scroll.get_layout().get_paddingTop();
		this._mouseDownOffset.y = tmp + tmp1;
		this._scroll.get_screen().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this._scroll.get_screen().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,onScreenMouseUp: function(event) {
		this._mouseDownOffset = null;
		this._scroll.get_screen().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this._scroll.get_screen().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,onScreenMouseMove: function(event) {
		if(this._mouseDownOffset == null) {
			return;
		}
		var coord = new haxe_ui_geom_Point(event.screenX - this._mouseDownOffset.x,event.screenY - this._mouseDownOffset.y);
		this._scroll.set_pos(this._scroll.posFromCoord(coord));
	}
	,__class__: haxe_ui_components__$Scroll_Events
});
var haxe_ui_components__$Scroll_ScrollValueBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Scroll.ScrollValueBehaviour"] = haxe_ui_components__$Scroll_ScrollValueBehaviour;
haxe_ui_components__$Scroll_ScrollValueBehaviour.__name__ = "haxe.ui.components._Scroll.ScrollValueBehaviour";
haxe_ui_components__$Scroll_ScrollValueBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Scroll_ScrollValueBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,validateData: function() {
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var pos = scroll.get_pos();
		var min = scroll.get_min();
		var max = scroll.get_max();
		if(pos < min) {
			scroll.set_pos(min);
		} else if(pos > max) {
			scroll.set_pos(max);
		}
		var changeEvent = new haxe_ui_events_UIEvent("change");
		scroll.dispatch(changeEvent);
		var scrollEvent = new haxe_ui_events_ScrollEvent("scrollscroll");
		scroll.dispatch(scrollEvent);
	}
	,__class__: haxe_ui_components__$Scroll_ScrollValueBehaviour
});
var haxe_ui_components__$Scroll_ScrollMinMaxBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Scroll.ScrollMinMaxBehaviour"] = haxe_ui_components__$Scroll_ScrollMinMaxBehaviour;
haxe_ui_components__$Scroll_ScrollMinMaxBehaviour.__name__ = "haxe.ui.components._Scroll.ScrollMinMaxBehaviour";
haxe_ui_components__$Scroll_ScrollMinMaxBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Scroll_ScrollMinMaxBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,validateData: function() {
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var pos = scroll.get_pos();
		var min = scroll.get_min();
		var max = scroll.get_max();
		if(pos < min) {
			scroll.set_pos(min);
		} else if(pos > max) {
			scroll.set_pos(max);
		}
		var changeEvent = new haxe_ui_events_UIEvent("change");
		scroll.dispatch(changeEvent);
	}
	,__class__: haxe_ui_components__$Scroll_ScrollMinMaxBehaviour
});
var haxe_ui_components_SectionHeader = function() {
	haxe_ui_containers_VBox.call(this);
};
$hxClasses["haxe.ui.components.SectionHeader"] = haxe_ui_components_SectionHeader;
haxe_ui_components_SectionHeader.__name__ = "haxe.ui.components.SectionHeader";
haxe_ui_components_SectionHeader.__super__ = haxe_ui_containers_VBox;
haxe_ui_components_SectionHeader.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	registerComposite: function() {
		haxe_ui_containers_VBox.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components__$SectionHeader_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_components__$SectionHeader_TextBehaviour);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_SectionHeader();
	}
	,__class__: haxe_ui_components_SectionHeader
});
var haxe_ui_components__$SectionHeader_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._SectionHeader.TextBehaviour"] = haxe_ui_components__$SectionHeader_TextBehaviour;
haxe_ui_components__$SectionHeader_TextBehaviour.__name__ = "haxe.ui.components._SectionHeader.TextBehaviour";
haxe_ui_components__$SectionHeader_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$SectionHeader_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent(null,haxe_ui_components_Label,false);
		label.set_text(haxe_ui_util_Variant.toString(this._value));
	}
	,__class__: haxe_ui_components__$SectionHeader_TextBehaviour
});
var haxe_ui_components__$SectionHeader_Builder = function(component) {
	haxe_ui_core_CompositeBuilder.call(this,component);
};
$hxClasses["haxe.ui.components._SectionHeader.Builder"] = haxe_ui_components__$SectionHeader_Builder;
haxe_ui_components__$SectionHeader_Builder.__name__ = "haxe.ui.components._SectionHeader.Builder";
haxe_ui_components__$SectionHeader_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$SectionHeader_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	create: function() {
		haxe_ui_core_CompositeBuilder.prototype.create.call(this);
		var label = new haxe_ui_components_Label();
		label.set_text("Section Header");
		label.set_scriptAccess(false);
		this._component.addComponent(label);
		var line = new haxe_ui_components_HorizontalRule();
		line.addClasses(["section-line","line"]);
		line.set_scriptAccess(false);
		this._component.addComponent(line);
	}
	,__class__: haxe_ui_components__$SectionHeader_Builder
});
var haxe_ui_components__$Slider_StartBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.StartBehaviour"] = haxe_ui_components__$Slider_StartBehaviour;
haxe_ui_components__$Slider_StartBehaviour.__name__ = "haxe.ui.components._Slider.StartBehaviour";
haxe_ui_components__$Slider_StartBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Slider_StartBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_SliderBuilder);
		if(this._component.findComponent("start-thumb") == null) {
			builder.createThumb("start-thumb");
		}
		var slider = js_Boot.__cast(this._component , haxe_ui_components_Slider);
		if(this._value != null && haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromFloat(slider.get_min()))) {
			this._value = haxe_ui_util_Variant.fromFloat(slider.get_min());
		}
		if(this._value != null && haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromFloat(slider.get_max()))) {
			this._value = haxe_ui_util_Variant.fromFloat(slider.get_max());
		}
		if(slider.get_precision() != null) {
			var v = haxe_ui_util_Variant.toFloat(this._value);
			var precision = slider.get_precision();
			if(precision == null) {
				precision = 0;
			}
			this._value = haxe_ui_util_Variant.fromFloat(Math.round(v * Math.pow(10,precision)) / Math.pow(10,precision));
		}
		if(slider.get_step() != null) {
			var v = haxe_ui_util_Variant.toFloat(this._value);
			var n = slider.get_step();
			var r = v % n;
			this._value = haxe_ui_util_Variant.fromFloat(r <= n / 2 ? Math.round(v - r) : Math.round(v + n - r));
		}
		this._component.findComponent(null,haxe_ui_components_Range).set_start(haxe_ui_util_Variant.toFloat(this._value));
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,__class__: haxe_ui_components__$Slider_StartBehaviour
});
var haxe_ui_components__$Slider_EndBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.EndBehaviour"] = haxe_ui_components__$Slider_EndBehaviour;
haxe_ui_components__$Slider_EndBehaviour.__name__ = "haxe.ui.components._Slider.EndBehaviour";
haxe_ui_components__$Slider_EndBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Slider_EndBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var range = this._component.findComponent(null,haxe_ui_components_Range);
		if(range == null) {
			return;
		}
		var slider = js_Boot.__cast(this._component , haxe_ui_components_Slider);
		if(this._value != null && haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromFloat(slider.get_min()))) {
			this._value = haxe_ui_util_Variant.fromFloat(slider.get_min());
		}
		if(this._value != null && haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromFloat(slider.get_max()))) {
			this._value = haxe_ui_util_Variant.fromFloat(slider.get_max());
		}
		if(slider.get_precision() != null) {
			var v = haxe_ui_util_Variant.toFloat(this._value);
			var precision = slider.get_precision();
			if(precision == null) {
				precision = 0;
			}
			this._value = haxe_ui_util_Variant.fromFloat(Math.round(v * Math.pow(10,precision)) / Math.pow(10,precision));
		}
		if(slider.get_step() != null) {
			var v = haxe_ui_util_Variant.toFloat(this._value);
			var n = slider.get_step();
			var r = v % n;
			this._value = haxe_ui_util_Variant.fromFloat(r <= n / 2 ? Math.round(v - r) : Math.round(v + n - r));
		}
		if(slider.get_center() != null) {
			if(haxe_ui_util_Variant.gte(this._value,haxe_ui_util_Variant.fromFloat(slider.get_center()))) {
				range.virtualStart = slider.get_center();
				range.virtualEnd = haxe_ui_util_Variant.toFloat(this._value);
			} else if(haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromFloat(slider.get_center()))) {
				range.virtualStart = haxe_ui_util_Variant.toFloat(this._value);
				range.virtualEnd = slider.get_center();
			}
		}
		range.set_end(haxe_ui_util_Variant.toFloat(this._value));
		(js_Boot.__cast(this._component , haxe_ui_components_Slider)).set_pos(haxe_ui_util_Variant.toFloat(this._value));
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,__class__: haxe_ui_components__$Slider_EndBehaviour
});
var haxe_ui_components__$Slider_MinBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.MinBehaviour"] = haxe_ui_components__$Slider_MinBehaviour;
haxe_ui_components__$Slider_MinBehaviour.__name__ = "haxe.ui.components._Slider.MinBehaviour";
haxe_ui_components__$Slider_MinBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Slider_MinBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var range = this._component.findComponent(null,haxe_ui_components_Range);
		if(range == null) {
			return;
		}
		if((js_Boot.__cast(this._component , haxe_ui_components_Slider)).get_start() == null) {
			range.set_start(haxe_ui_util_Variant.toFloat(this._value));
		}
		range.set_min(haxe_ui_util_Variant.toFloat(this._value));
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,__class__: haxe_ui_components__$Slider_MinBehaviour
});
var haxe_ui_components__$Slider_MaxBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.MaxBehaviour"] = haxe_ui_components__$Slider_MaxBehaviour;
haxe_ui_components__$Slider_MaxBehaviour.__name__ = "haxe.ui.components._Slider.MaxBehaviour";
haxe_ui_components__$Slider_MaxBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Slider_MaxBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var range = this._component.findComponent(null,haxe_ui_components_Range);
		if(range == null) {
			return;
		}
		range.set_max(haxe_ui_util_Variant.toFloat(this._value));
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,__class__: haxe_ui_components__$Slider_MaxBehaviour
});
var haxe_ui_components__$Slider_PosBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.PosBehaviour"] = haxe_ui_components__$Slider_PosBehaviour;
haxe_ui_components__$Slider_PosBehaviour.__name__ = "haxe.ui.components._Slider.PosBehaviour";
haxe_ui_components__$Slider_PosBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Slider_PosBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		if(this._component.get_isReady() == false) {
			return this._value;
		}
		return haxe_ui_util_Variant.fromFloat((js_Boot.__cast(this._component , haxe_ui_components_Slider)).get_end());
	}
	,validateData: function() {
		(js_Boot.__cast(this._component , haxe_ui_components_Slider)).set_end(haxe_ui_util_Variant.toFloat(this._value));
	}
	,__class__: haxe_ui_components__$Slider_PosBehaviour
});
var haxe_ui_components__$Slider_CenterBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.CenterBehaviour"] = haxe_ui_components__$Slider_CenterBehaviour;
haxe_ui_components__$Slider_CenterBehaviour.__name__ = "haxe.ui.components._Slider.CenterBehaviour";
haxe_ui_components__$Slider_CenterBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$Slider_CenterBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
		if(value != null && haxe_ui_util_Variant.get_isNull(value) == false) {
			var slider = js_Boot.__cast(this._component , haxe_ui_components_Slider);
			slider.set_pos(haxe_ui_util_Variant.toFloat(this._value));
			var v = this._component.findComponent(null,haxe_ui_components_Range);
			if(v != null) {
				v.virtualStart = haxe_ui_util_Variant.toFloat(this._value);
			}
			this._component.addClass("with-center");
		} else {
			this._component.removeClass("with-center");
		}
	}
	,__class__: haxe_ui_components__$Slider_CenterBehaviour
});
var haxe_ui_components__$Slider_MinorTicks = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.MinorTicks"] = haxe_ui_components__$Slider_MinorTicks;
haxe_ui_components__$Slider_MinorTicks.__name__ = "haxe.ui.components._Slider.MinorTicks";
haxe_ui_components__$Slider_MinorTicks.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Slider_MinorTicks.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value != null && haxe_ui_util_Variant.get_isNull(this._value) == false) {
			var slider = js_Boot.__cast(this._component , haxe_ui_components_Slider);
			var ticks = slider.findComponents("minor-tick",null,1);
			if(ticks == null || ticks.length == 0) {
				var m = slider.get_max() - slider.get_min();
				var v = haxe_ui_util_Variant.toFloat(this._value);
				var n = m / v | 0;
				var index = slider.getComponentIndex(slider.findComponent(null,haxe_ui_components_Range));
				var _g = 0;
				var _g1 = n + 1;
				while(_g < _g1) {
					var _ = _g++;
					var tick = new haxe_ui_core_Component();
					tick.addClass("minor-tick");
					tick.set_scriptAccess(false);
					slider.addComponentAt(tick,index + 1);
				}
			}
		}
	}
	,__class__: haxe_ui_components__$Slider_MinorTicks
});
var haxe_ui_components__$Slider_MajorTicks = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.MajorTicks"] = haxe_ui_components__$Slider_MajorTicks;
haxe_ui_components__$Slider_MajorTicks.__name__ = "haxe.ui.components._Slider.MajorTicks";
haxe_ui_components__$Slider_MajorTicks.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Slider_MajorTicks.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value != null && haxe_ui_util_Variant.get_isNull(this._value) == false) {
			var slider = js_Boot.__cast(this._component , haxe_ui_components_Slider);
			var ticks = slider.findComponents("major-tick",null,1);
			if(ticks == null || ticks.length == 0) {
				var m = slider.get_max() - slider.get_min();
				var v = haxe_ui_util_Variant.toFloat(this._value);
				var n = m / v | 0;
				var index = slider.getComponentIndex(slider.findComponent(null,haxe_ui_components_Range));
				var _g = 0;
				var _g1 = n + 1;
				while(_g < _g1) {
					var _ = _g++;
					var tick = new haxe_ui_core_Component();
					tick.addClass("major-tick");
					tick.set_scriptAccess(false);
					slider.addComponentAt(tick,index + 1);
				}
			}
		}
	}
	,__class__: haxe_ui_components__$Slider_MajorTicks
});
var haxe_ui_components__$Slider_PosFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.PosFromCoord"] = haxe_ui_components__$Slider_PosFromCoord;
haxe_ui_components__$Slider_PosFromCoord.__name__ = "haxe.ui.components._Slider.PosFromCoord";
haxe_ui_components__$Slider_PosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Slider_PosFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(coord) {
		var range = this._component.findComponent(null,haxe_ui_components_Range);
		return haxe_ui_util_Variant.fromFloat(range.posFromCoord(coord));
	}
	,__class__: haxe_ui_components__$Slider_PosFromCoord
});
var haxe_ui_components__$Slider_Events = function(slider) {
	this._offset = null;
	this._rangeSynced = false;
	haxe_ui_events_Events.call(this,slider);
	this._slider = slider;
	this._range = slider.findComponent(null,haxe_ui_components_Range);
};
$hxClasses["haxe.ui.components._Slider.Events"] = haxe_ui_components__$Slider_Events;
haxe_ui_components__$Slider_Events.__name__ = "haxe.ui.components._Slider.Events";
haxe_ui_components__$Slider_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$Slider_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_slider: null
	,_endThumb: null
	,_startThumb: null
	,_range: null
	,_activeThumb: null
	,register: function() {
		this._startThumb = this._slider.findComponent("start-thumb");
		if(this._startThumb != null && this._startThumb.hasEvent("mousedown",$bind(this,this.onThumbMouseDown)) == false) {
			this._startThumb.registerEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
		this._endThumb = this._slider.findComponent("end-thumb");
		if(this._endThumb != null && this._endThumb.hasEvent("mousedown",$bind(this,this.onThumbMouseDown)) == false) {
			this._endThumb.registerEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
		if(this._range != null && this._range.hasEvent("mousedown",$bind(this,this.onRangeMouseDown)) == false) {
			this._range.registerEvent("mousedown",$bind(this,this.onRangeMouseDown));
		}
		if(this._range != null && this._range.hasEvent("change",$bind(this,this.onRangeChange)) == false) {
			this._range.registerEvent("change",$bind(this,this.onRangeChange));
		}
		if(this.hasEvent("actionstart",$bind(this,this.onActionStart)) == false) {
			this.registerEvent("actionstart",$bind(this,this.onActionStart));
		}
	}
	,unregister: function() {
		if(this._startThumb != null) {
			this._startThumb.unregisterEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
		if(this._endThumb != null) {
			this._endThumb.unregisterEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
		if(this._range != null) {
			this._range.unregisterEvent("mousedown",$bind(this,this.onRangeMouseDown));
			this._range.unregisterEvent("change",$bind(this,this.onRangeChange));
		}
		this.unregisterEvent("actionstart",$bind(this,this.onActionStart));
	}
	,_rangeSynced: null
	,onRangeChange: function(e) {
		if(this._rangeSynced == false && this._range.get_end() == this._slider.get_end()) {
			this._rangeSynced = true;
			if(this._slider.get_end() == 0) {
				return;
			}
		}
		if(this._rangeSynced == false) {
			return;
		}
		var event = new haxe_ui_events_UIEvent("change");
		event.previousValue = e.previousValue;
		event.value = e.value;
		this._slider.dispatch(event);
	}
	,onRangeMouseDown: function(e) {
		if(this._startThumb != null && this._startThumb.hitTest(e.screenX,e.screenY) == true) {
			return;
		}
		if(this._endThumb != null && this._endThumb.hitTest(e.screenX,e.screenY) == true) {
			return;
		}
		this._slider.set_focus(true);
		e.screenX *= haxe_ui_Toolkit.get_scaleX();
		e.screenY *= haxe_ui_Toolkit.get_scaleY();
		e.cancel();
		var coord = new haxe_ui_geom_Point();
		coord.x = e.screenX - this._slider.get_screenLeft() - this._slider.get_paddingLeft() * haxe_ui_Toolkit.get_scaleX();
		coord.y = e.screenY - this._slider.get_screenTop() - this._slider.get_paddingTop() * haxe_ui_Toolkit.get_scaleY();
		var pos = this._slider.posFromCoord(coord);
		if(this._startThumb == null) {
			this._slider.set_pos(pos);
			this.startDrag(this._endThumb,this._endThumb.get_actualComponentWidth() / 2,this._endThumb.get_actualComponentHeight() / 2);
			return;
		}
		var builder = js_Boot.__cast(this._slider._compositeBuilder , haxe_ui_components_SliderBuilder);
		var d1 = this._slider.get_end() - this._slider.get_start();
		var d2 = pos - this._slider.get_start();
		if(d2 < d1 / 2) {
			pos -= builder.getStartOffset();
			this._slider.set_start(pos);
			this.startDrag(this._startThumb,this._startThumb.get_actualComponentWidth() / 2,this._startThumb.get_actualComponentHeight() / 2);
		} else if(d2 >= d1 / 2) {
			pos -= builder.getStartOffset();
			this._slider.set_end(pos);
			this.startDrag(this._endThumb,this._endThumb.get_actualComponentWidth() / 2,this._endThumb.get_actualComponentHeight() / 2);
		} else if(pos > this._slider.get_start()) {
			this._slider.set_end(pos);
			this.startDrag(this._endThumb,this._endThumb.get_actualComponentWidth() / 2,this._endThumb.get_actualComponentHeight() / 2);
		} else if(pos < this._slider.get_end()) {
			this._slider.set_start(pos);
			this.startDrag(this._startThumb,this._startThumb.get_actualComponentWidth() / 2,this._startThumb.get_actualComponentHeight() / 2);
		}
	}
	,_offset: null
	,onThumbMouseDown: function(e) {
		e.cancel();
		this._slider.set_focus(true);
		this.startDrag(js_Boot.__cast(e.target , haxe_ui_components_Button),e.get_localX() * haxe_ui_Toolkit.get_scaleX(),e.get_localY() * haxe_ui_Toolkit.get_scaleX());
	}
	,startDrag: function(thumb,offsetX,offsetY) {
		this._offset = new haxe_ui_geom_Point(offsetX,offsetY);
		this._activeThumb = thumb;
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this._slider.dispatch(new haxe_ui_events_DragEvent("dragstart"));
	}
	,onScreenMouseUp: function(e) {
		this._activeThumb = null;
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
		this._slider.dispatch(new haxe_ui_events_DragEvent("dragend"));
	}
	,onScreenMouseMove: function(e) {
		e.screenX *= haxe_ui_Toolkit.get_scaleX();
		e.screenY *= haxe_ui_Toolkit.get_scaleY();
		var coord = new haxe_ui_geom_Point();
		coord.x = e.screenX - this._slider.get_screenLeft() - this._offset.x - this._slider.get_paddingLeft() * haxe_ui_Toolkit.get_scaleX() + this._activeThumb.get_actualComponentWidth() / 2;
		coord.y = e.screenY - this._slider.get_screenTop() - this._offset.y - this._slider.get_paddingTop() * haxe_ui_Toolkit.get_scaleX() + this._activeThumb.get_actualComponentHeight() / 2;
		var pos = this._slider.posFromCoord(coord);
		var builder = js_Boot.__cast(this._slider._compositeBuilder , haxe_ui_components_SliderBuilder);
		if(this._activeThumb == this._startThumb) {
			pos -= builder.getStartOffset();
			if(pos > this._slider.get_end()) {
				pos = this._slider.get_end();
			}
			this._slider.set_start(pos);
		} else if(this._activeThumb == this._endThumb) {
			pos -= builder.getStartOffset();
			this._slider.set_end(pos);
		}
	}
	,onActionStart: function(event) {
		switch(event.action) {
		case "actionDown":case "actionLeft":
			event.repeater = true;
			var fh = this._slider;
			fh.set_value(fh.get_value() - 1);
			break;
		case "actionRight":case "actionUp":
			event.repeater = true;
			var fh = this._slider;
			fh.set_value(fh.get_value() + 1);
			break;
		default:
		}
	}
	,__class__: haxe_ui_components__$Slider_Events
});
var haxe_ui_components_Spacer = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Spacer"] = haxe_ui_components_Spacer;
haxe_ui_components_Spacer.__name__ = "haxe.ui.components.Spacer";
haxe_ui_components_Spacer.__super__ = haxe_ui_core_Component;
haxe_ui_components_Spacer.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Spacer();
	}
	,__class__: haxe_ui_components_Spacer
});
var haxe_ui_components_Stepper = function() {
	haxe_ui_containers_VBox.call(this);
};
$hxClasses["haxe.ui.components.Stepper"] = haxe_ui_components_Stepper;
haxe_ui_components_Stepper.__name__ = "haxe.ui.components.Stepper";
haxe_ui_components_Stepper.__interfaces__ = [haxe_ui_core_IValueComponent];
haxe_ui_components_Stepper.__super__ = haxe_ui_containers_VBox;
haxe_ui_components_Stepper.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	increment: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("increment",null);
	}
	,deincrement: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("deincrement",null);
	}
	,registerComposite: function() {
		haxe_ui_containers_VBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$Stepper_Events;
		this._compositeBuilderClass = haxe_ui_components__$Stepper_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("pos",haxe_ui_components__$Stepper_PosBehaviour);
		this.behaviours.register("step",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(1));
		this.behaviours.register("min",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("max",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("precision",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("repeater",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(true));
		this.behaviours.register("repeatInterval",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(100));
		this.behaviours.register("increment",haxe_ui_components__$Stepper_IncBehaviour);
		this.behaviours.register("deincrement",haxe_ui_components__$Stepper_DeincBehaviour);
	}
	,get_pos: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pos"));
	}
	,set_pos: function(value) {
		this.behaviours.set("pos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"pos"));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,get_step: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("step"));
	}
	,set_step: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("step",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"step"));
		return value;
	}
	,get_min: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("min"));
	}
	,set_min: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("min",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"min"));
		return value;
	}
	,get_max: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("max"));
	}
	,set_max: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("max",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"max"));
		return value;
	}
	,get_precision: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("precision"));
	}
	,set_precision: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("precision",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"precision"));
		return value;
	}
	,get_repeater: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("repeater"));
	}
	,set_repeater: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("repeater",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"repeater"));
		return value;
	}
	,get_repeatInterval: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("repeatInterval"));
	}
	,set_repeatInterval: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("repeatInterval",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"repeatInterval"));
		return value;
	}
	,get_value: function() {
		return this.get_pos();
	}
	,set_value: function(value) {
		this.set_pos(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		c.set_pos(this.get_pos());
		c.set_step(this.get_step());
		if(this.get_min() != null) {
			c.set_min(this.get_min());
		}
		if(this.get_max() != null) {
			c.set_max(this.get_max());
		}
		if(this.get_precision() != null) {
			c.set_precision(this.get_precision());
		}
		c.set_repeater(this.get_repeater());
		c.set_repeatInterval(this.get_repeatInterval());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Stepper();
	}
	,__class__: haxe_ui_components_Stepper
	,__properties__: $extend(haxe_ui_containers_VBox.prototype.__properties__,{set_repeatInterval:"set_repeatInterval",get_repeatInterval:"get_repeatInterval",set_repeater:"set_repeater",get_repeater:"get_repeater",set_precision:"set_precision",get_precision:"get_precision",set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min",set_step:"set_step",get_step:"get_step",set_pos:"set_pos",get_pos:"get_pos"})
});
var haxe_ui_components__$Stepper_PosBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Stepper.PosBehaviour"] = haxe_ui_components__$Stepper_PosBehaviour;
haxe_ui_components__$Stepper_PosBehaviour.__name__ = "haxe.ui.components._Stepper.PosBehaviour";
haxe_ui_components__$Stepper_PosBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Stepper_PosBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var stepper = js_Boot.__cast(this._component , haxe_ui_components_Stepper);
		var v = haxe_ui_util_Variant.toFloat(this._value);
		var min = stepper.get_min();
		var max = stepper.get_max();
		var v1;
		if(v == null || isNaN(v)) {
			v1 = min;
		} else {
			if(min != null && v < min) {
				v = min;
			} else if(max != null && v > max) {
				v = max;
			}
			v1 = v;
		}
		stepper.set_pos(v1);
		this._value = haxe_ui_util_Variant.fromFloat(v1);
		var event = new haxe_ui_events_UIEvent("change");
		this._component.dispatch(event);
	}
	,__class__: haxe_ui_components__$Stepper_PosBehaviour
});
var haxe_ui_components__$Stepper_IncBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Stepper.IncBehaviour"] = haxe_ui_components__$Stepper_IncBehaviour;
haxe_ui_components__$Stepper_IncBehaviour.__name__ = "haxe.ui.components._Stepper.IncBehaviour";
haxe_ui_components__$Stepper_IncBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Stepper_IncBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var stepper = js_Boot.__cast(this._component , haxe_ui_components_Stepper);
		var newPos = stepper.get_pos();
		newPos += stepper.get_step();
		if(stepper.get_max() != null && newPos > stepper.get_max()) {
			newPos = stepper.get_max();
		}
		if(stepper.get_precision() != null) {
			var precision = stepper.get_precision();
			if(precision == null) {
				precision = 0;
			}
			newPos = Math.round(newPos * Math.pow(10,precision)) / Math.pow(10,precision);
		}
		stepper.set_pos(newPos);
		return null;
	}
	,__class__: haxe_ui_components__$Stepper_IncBehaviour
});
var haxe_ui_components__$Stepper_DeincBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Stepper.DeincBehaviour"] = haxe_ui_components__$Stepper_DeincBehaviour;
haxe_ui_components__$Stepper_DeincBehaviour.__name__ = "haxe.ui.components._Stepper.DeincBehaviour";
haxe_ui_components__$Stepper_DeincBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Stepper_DeincBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var stepper = js_Boot.__cast(this._component , haxe_ui_components_Stepper);
		var newPos = stepper.get_pos();
		newPos -= stepper.get_step();
		if(stepper.get_min() != null && newPos < stepper.get_min()) {
			newPos = stepper.get_min();
		}
		if(stepper.get_precision() != null) {
			var precision = stepper.get_precision();
			if(precision == null) {
				precision = 0;
			}
			newPos = Math.round(newPos * Math.pow(10,precision)) / Math.pow(10,precision);
		}
		stepper.set_pos(newPos);
		return null;
	}
	,__class__: haxe_ui_components__$Stepper_DeincBehaviour
});
var haxe_ui_components__$Stepper_Builder = function(stepper) {
	haxe_ui_core_CompositeBuilder.call(this,stepper);
	this._stepper = stepper;
};
$hxClasses["haxe.ui.components._Stepper.Builder"] = haxe_ui_components__$Stepper_Builder;
haxe_ui_components__$Stepper_Builder.__name__ = "haxe.ui.components._Stepper.Builder";
haxe_ui_components__$Stepper_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Stepper_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_stepper: null
	,create: function() {
		var button = new haxe_ui_components_Button();
		button.set_styleNames("stepper-button stepper-inc");
		button.set_id("stepper-inc");
		button.set_repeater(this._stepper.get_repeater());
		button.set_easeInRepeater(true);
		button.set_allowFocus(false);
		button.set_repeatInterval(this._stepper.get_repeatInterval());
		this._stepper.addComponent(button);
		var button = new haxe_ui_components_Button();
		button.set_styleNames("stepper-button stepper-deinc");
		button.set_id("stepper-deinc");
		button.set_repeater(this._stepper.get_repeater());
		button.set_easeInRepeater(true);
		button.set_allowFocus(false);
		button.set_repeatInterval(this._stepper.get_repeatInterval());
		this._stepper.addComponent(button);
	}
	,__class__: haxe_ui_components__$Stepper_Builder
});
var haxe_ui_components__$Stepper_Events = function(stepper) {
	haxe_ui_events_Events.call(this,stepper);
	this._stepper = stepper;
};
$hxClasses["haxe.ui.components._Stepper.Events"] = haxe_ui_components__$Stepper_Events;
haxe_ui_components__$Stepper_Events.__name__ = "haxe.ui.components._Stepper.Events";
haxe_ui_components__$Stepper_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$Stepper_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_stepper: null
	,register: function() {
		var button = this._stepper.findComponent("stepper-inc",haxe_ui_components_Button);
		if(!button.hasEvent("click",$bind(this,this.onInc))) {
			button.registerEvent("click",$bind(this,this.onInc));
		}
		var button = this._stepper.findComponent("stepper-deinc",haxe_ui_components_Button);
		if(!button.hasEvent("click",$bind(this,this.onDeinc))) {
			button.registerEvent("click",$bind(this,this.onDeinc));
		}
	}
	,unregister: function() {
		var button = this._stepper.findComponent("stepper-inc",haxe_ui_components_Button);
		button.unregisterEvent("click",$bind(this,this.onInc));
		var button = this._stepper.findComponent("stepper-deinc",haxe_ui_components_Button);
		button.unregisterEvent("click",$bind(this,this.onDeinc));
	}
	,onInc: function(event) {
		this._stepper.increment();
	}
	,onDeinc: function(event) {
		this._stepper.deincrement();
	}
	,__class__: haxe_ui_components__$Stepper_Events
});
var haxe_ui_components_Switch = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Switch"] = haxe_ui_components_Switch;
haxe_ui_components_Switch.__name__ = "haxe.ui.components.Switch";
haxe_ui_components_Switch.__interfaces__ = [haxe_ui_core_IValueComponent];
haxe_ui_components_Switch.__super__ = haxe_ui_core_Component;
haxe_ui_components_Switch.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components__$Switch_Builder;
		this._defaultLayoutClass = haxe_ui_layouts_HorizontalLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("selected",haxe_ui_components__$Switch_SelectedBehaviour);
		this.behaviours.register("text",haxe_ui_components__$Switch_TextBehaviour);
		this.behaviours.register("textOn",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("textOff",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_selected: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("selected"));
	}
	,set_selected: function(value) {
		this.behaviours.set("selected",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selected"));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,get_textOn: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("textOn"));
	}
	,set_textOn: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"textOn",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("textOn",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"textOn"));
		return value;
	}
	,get_textOff: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("textOff"));
	}
	,set_textOff: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"textOff",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("textOff",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"textOff"));
		return value;
	}
	,get_value: function() {
		return this.get_selected();
	}
	,set_value: function(value) {
		this.set_selected(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		c.set_selected(this.get_selected());
		if(this.get_textOn() != null) {
			c.set_textOn(this.get_textOn());
		}
		if(this.get_textOff() != null) {
			c.set_textOff(this.get_textOff());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Switch();
	}
	,__class__: haxe_ui_components_Switch
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_textOff:"set_textOff",get_textOff:"get_textOff",set_textOn:"set_textOn",get_textOn:"get_textOn",set_selected:"set_selected",get_selected:"get_selected"})
});
var haxe_ui_components__$Switch_SelectedBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Switch.SelectedBehaviour"] = haxe_ui_components__$Switch_SelectedBehaviour;
haxe_ui_components__$Switch_SelectedBehaviour.__name__ = "haxe.ui.components._Switch.SelectedBehaviour";
haxe_ui_components__$Switch_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Switch_SelectedBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		this._component.findComponent(null,haxe_ui_components__$Switch_SwitchButtonSub).set_selected(haxe_ui_util_Variant.toBool(this._value));
	}
	,__class__: haxe_ui_components__$Switch_SelectedBehaviour
});
var haxe_ui_components__$Switch_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Switch.TextBehaviour"] = haxe_ui_components__$Switch_TextBehaviour;
haxe_ui_components__$Switch_TextBehaviour.__name__ = "haxe.ui.components._Switch.TextBehaviour";
haxe_ui_components__$Switch_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Switch_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent(null,haxe_ui_components_Label,false);
		if(label == null) {
			label = new haxe_ui_components_Label();
			label.set_styleNames("switch-label");
			label.set_id("switch-label");
			label.set_scriptAccess(false);
			this._component.addComponentAt(label,0);
			var spacer = new haxe_ui_components_Spacer();
			spacer.set_percentWidth(100);
			this._component.addComponentAt(spacer,1);
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		label.set_text(haxe_ui_util_Variant.toString(this._value));
	}
	,__class__: haxe_ui_components__$Switch_TextBehaviour
});
var haxe_ui_components__$Switch_Builder = function(s) {
	haxe_ui_core_CompositeBuilder.call(this,s);
	this._switch = s;
};
$hxClasses["haxe.ui.components._Switch.Builder"] = haxe_ui_components__$Switch_Builder;
haxe_ui_components__$Switch_Builder.__name__ = "haxe.ui.components._Switch.Builder";
haxe_ui_components__$Switch_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Switch_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_switch: null
	,_button: null
	,_label: null
	,create: function() {
		var _gthis = this;
		if(this._button == null) {
			this._button = new haxe_ui_components__$Switch_SwitchButtonSub();
			this._button.set_onChange(function(e) {
				_gthis._switch.set_selected(_gthis._button.get_selected());
				_gthis._switch.dispatch(new haxe_ui_events_UIEvent("change"));
			});
			this._component.addComponent(this._button);
		}
	}
	,__class__: haxe_ui_components__$Switch_Builder
});
var haxe_ui_components__$Switch_SwitchButtonSub = function() {
	this._pos = 0;
	this._unselectedText = "";
	this._selectedText = "";
	this._selected = false;
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components._Switch.SwitchButtonSub"] = haxe_ui_components__$Switch_SwitchButtonSub;
haxe_ui_components__$Switch_SwitchButtonSub.__name__ = "haxe.ui.components._Switch.SwitchButtonSub";
haxe_ui_components__$Switch_SwitchButtonSub.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components__$Switch_SwitchButtonSub.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	_button: null
	,_label: null
	,createChildren: function() {
		var _gthis = this;
		haxe_ui_core_InteractiveComponent.prototype.createChildren.call(this);
		if(this._button == null) {
			this._label = new haxe_ui_components_Label();
			this._label.set_id("switch-label");
			this._label.addClass("switch-label");
			this._label.set_text(this._unselectedText);
			this.addComponent(this._label);
			this._button = new haxe_ui_components_Button();
			this._button.set_id("switch-button");
			this._button.addClass("switch-button");
			this.addComponent(this._button);
			this.set_onClick(function(e) {
				_gthis.set_selected(!_gthis.get_selected());
			});
			var component = new haxe_ui_core_Component();
			component.addClass("switch-button-sub-extra");
			this.addComponentAt(component,0);
		}
	}
	,_selected: null
	,get_selected: function() {
		return this._selected;
	}
	,set_selected: function(value) {
		if(value == this._selected) {
			return value;
		}
		this.invalidateComponent("data",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		this._selected = value;
		if(this._selected == false) {
			this._label.set_text(this._unselectedText);
			this._label.removeClass(":selected");
			this.removeClass(":selected",true,true);
			this.addClass(":unselected",true,true);
		} else {
			this._label.set_text(this._selectedText);
			this._label.addClass(":selected");
			this.removeClass(":unselected",true,true);
			this.addClass(":selected",true,true);
		}
		var event = new haxe_ui_events_UIEvent("change");
		this.dispatch(event);
		return value;
	}
	,_selectedText: null
	,get_selectedText: function() {
		return this._selectedText;
	}
	,set_selectedText: function(value) {
		this._selectedText = value;
		if(this._ready && this._selected == true) {
			this._label.set_text(this._selectedText);
		}
		return value;
	}
	,_unselectedText: null
	,get_unselectedText: function() {
		return this._unselectedText;
	}
	,set_unselectedText: function(value) {
		this._unselectedText = value;
		if(this._ready && this._selected == false) {
			this._label.set_text(this._unselectedText);
		}
		return value;
	}
	,_pos: null
	,get_pos: function() {
		return this._pos;
	}
	,set_pos: function(value) {
		if(this._pos == value) {
			return value;
		}
		this._pos = value;
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_selected(this.get_selected());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components__$Switch_SwitchButtonSub();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components__$Switch_SwitchButtonLayout;
	}
	,__class__: haxe_ui_components__$Switch_SwitchButtonSub
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_pos:"set_pos",get_pos:"get_pos",set_unselectedText:"set_unselectedText",get_unselectedText:"get_unselectedText",set_selectedText:"set_selectedText",get_selectedText:"get_selectedText",set_selected:"set_selected",get_selected:"get_selected"})
});
var haxe_ui_components__$Switch_SwitchButtonLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._Switch.SwitchButtonLayout"] = haxe_ui_components__$Switch_SwitchButtonLayout;
haxe_ui_components__$Switch_SwitchButtonLayout.__name__ = "haxe.ui.components._Switch.SwitchButtonLayout";
haxe_ui_components__$Switch_SwitchButtonLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$Switch_SwitchButtonLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var switchComp = js_Boot.__cast(this._component , haxe_ui_components__$Switch_SwitchButtonSub);
		var button = switchComp.findComponent("switch-button");
		var label = switchComp.findComponent("switch-label");
		if(button == null || label == null) {
			return;
		}
		button.set_top(this.get_paddingTop());
		label.set_top(this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2);
		if(switchComp.get_selected() == true) {
			label.set_left(button.get_componentWidth() / 2 - label.get_componentWidth() / 2);
		} else {
			label.set_left(button.get_left() + button.get_componentWidth() + button.get_componentWidth() / 2 - label.get_componentWidth() / 2);
		}
		var ucx = this.get_usableWidth() - button.get_width();
		var min = 0;
		var max = 100;
		var x = (switchComp.get_pos() - min) / (max - min) * ucx;
		button.set_left(this.get_paddingLeft() + x);
		var extra = switchComp.findComponent("switch-button-sub-extra",null,null,"css");
		if(extra != null) {
			extra.set_top(this._component.get_height() / 2 - extra.get_height() / 2);
		}
	}
	,__class__: haxe_ui_components__$Switch_SwitchButtonLayout
});
var haxe_ui_components_TabBar = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.TabBar"] = haxe_ui_components_TabBar;
haxe_ui_components_TabBar.__name__ = "haxe.ui.components.TabBar";
haxe_ui_components_TabBar.__super__ = haxe_ui_core_Component;
haxe_ui_components_TabBar.prototype = $extend(haxe_ui_core_Component.prototype,{
	removeTab: function(index) {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("removeTab",index);
	}
	,getTab: function(index) {
		return haxe_ui_util_Variant.toComponent(this.behaviours.call("getTab",index));
	}
	,registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components__$TabBar_Builder;
		this._internalEventsClass = haxe_ui_components__$TabBar_Events;
		this._defaultLayoutClass = haxe_ui_components_TabBarLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("selectedIndex",haxe_ui_components__$TabBar_SelectedIndex,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedTab",haxe_ui_components__$TabBar_SelectedTab);
		this.behaviours.register("tabPosition",haxe_ui_components__$TabBar_TabPosition,haxe_ui_util_Variant.fromString("top"));
		this.behaviours.register("tabCount",haxe_ui_components__$TabBar_TabCount);
		this.behaviours.register("closable",haxe_ui_components__$TabBar_Closable,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("buttonWidth",haxe_ui_components__$TabBar_ButtonWidth,null);
		this.behaviours.register("buttonHeight",haxe_ui_components__$TabBar_ButtonHeight,null);
		this.behaviours.register("removeTab",haxe_ui_components__$TabBar_RemoveTab);
		this.behaviours.register("getTab",haxe_ui_components__$TabBar_GetTab);
	}
	,get_selectedIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedIndex"));
		return value;
	}
	,get_selectedTab: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("selectedTab"));
	}
	,set_selectedTab: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedTab",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedTab"));
		return value;
	}
	,get_tabPosition: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("tabPosition"));
	}
	,set_tabPosition: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"tabPosition",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("tabPosition",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"tabPosition"));
		return value;
	}
	,get_tabCount: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("tabCount"));
	}
	,set_tabCount: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("tabCount",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"tabCount"));
		return value;
	}
	,get_closable: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("closable"));
	}
	,set_closable: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("closable",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"closable"));
		return value;
	}
	,get_buttonWidth: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("buttonWidth"));
	}
	,set_buttonWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("buttonWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"buttonWidth"));
		return value;
	}
	,get_buttonHeight: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("buttonHeight"));
	}
	,set_buttonHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("buttonHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"buttonHeight"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_TabBar();
	}
	,__class__: haxe_ui_components_TabBar
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_buttonHeight:"set_buttonHeight",get_buttonHeight:"get_buttonHeight",set_buttonWidth:"set_buttonWidth",get_buttonWidth:"get_buttonWidth",set_closable:"set_closable",get_closable:"get_closable",set_tabCount:"set_tabCount",get_tabCount:"get_tabCount",set_tabPosition:"set_tabPosition",get_tabPosition:"get_tabPosition",set_selectedTab:"set_selectedTab",get_selectedTab:"get_selectedTab",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex"})
});
var haxe_ui_components_TabBarLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
	this._roundFullWidths = true;
};
$hxClasses["haxe.ui.components.TabBarLayout"] = haxe_ui_components_TabBarLayout;
haxe_ui_components_TabBarLayout.__name__ = "haxe.ui.components.TabBarLayout";
haxe_ui_components_TabBarLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_TabBarLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var filler = this._component.findComponent("tabbar-filler",null,false);
		var container = this._component.findComponent("tabbar-contents",null,false);
		if(filler != null) {
			filler.set_width(this._component.get_width() - container.get_width());
			filler.set_height(this._component.get_height());
			filler.set_left(container.get_width());
		}
		var max = 0;
		var _g = 0;
		var _g1 = container._children == null ? [] : container._children;
		while(_g < _g1.length) {
			var button = _g1[_g];
			++_g;
			button.syncComponentValidation();
			if(button.get_height() > max) {
				max = button.get_height();
			}
		}
		if(max > 0) {
			var _g = 0;
			var _g1 = container._children == null ? [] : container._children;
			while(_g < _g1.length) {
				var button = _g1[_g];
				++_g;
				button.set_height(max);
			}
		}
		var left = this._component.findComponent("tabbar-scroll-left",null,false);
		var right = this._component.findComponent("tabbar-scroll-right",null,false);
		if(left != null && this.hidden(left) == false) {
			var x = this._component.get_width() - left.get_width();
			if(right != null) {
				x -= right.get_width();
			}
			left.set_left(x + 1);
			left.set_top(this._component.get_height() / 2 - left.get_height() / 2);
		}
		if(right != null && this.hidden(right) == false) {
			right.set_left(this._component.get_width() - right.get_width());
			right.set_top(this._component.get_height() / 2 - right.get_height() / 2);
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this);
		var max = 0;
		var _g = 0;
		var _g1 = this._component.findComponents(null,haxe_ui_components__$TabBar_TabBarButton);
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			if(b.get_height() > max) {
				max = b.get_height();
			}
		}
		size.height = max;
		return size;
	}
	,__class__: haxe_ui_components_TabBarLayout
});
var haxe_ui_components__$TabBar_Closable = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.Closable"] = haxe_ui_components__$TabBar_Closable;
haxe_ui_components__$TabBar_Closable.__name__ = "haxe.ui.components._TabBar.Closable";
haxe_ui_components__$TabBar_Closable.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TabBar_Closable.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		if(builder._container == null) {
			return;
		}
		var buttons = builder._container.findComponents(null,haxe_ui_components__$TabBar_TabBarButton,1);
		var _g = 0;
		while(_g < buttons.length) {
			var b = buttons[_g];
			++_g;
			b.set_closable(haxe_ui_util_Variant.toBool(this._value));
		}
	}
	,__class__: haxe_ui_components__$TabBar_Closable
});
var haxe_ui_components__$TabBar_SelectedIndex = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.SelectedIndex"] = haxe_ui_components__$TabBar_SelectedIndex;
haxe_ui_components__$TabBar_SelectedIndex.__name__ = "haxe.ui.components._TabBar.SelectedIndex";
haxe_ui_components__$TabBar_SelectedIndex.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TabBar_SelectedIndex.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		if(builder._container == null) {
			return;
		}
		if(haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromInt(0))) {
			return;
		}
		var _this = builder._container;
		if(haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromInt((_this._children == null ? [] : _this._children).length - 1))) {
			var _this = builder._container;
			this._value = haxe_ui_util_Variant.fromInt((_this._children == null ? [] : _this._children).length - 1);
			return;
		}
		var beforeChangeEvent = new haxe_ui_events_UIEvent("beforechange");
		beforeChangeEvent.value = this._value;
		this._component.dispatch(beforeChangeEvent);
		if(beforeChangeEvent.canceled) {
			this._value = this._previousValue;
			return;
		}
		var tab = js_Boot.__cast(builder._container.getComponentAt(haxe_ui_util_Variant.toInt(this._value)) , haxe_ui_components_Button);
		if(tab != null) {
			var selectedTab = (js_Boot.__cast(this._component , haxe_ui_components_TabBar)).get_selectedTab();
			if(selectedTab != null) {
				selectedTab.removeClass("tabbar-button-selected");
				var label = selectedTab.findComponent(null,haxe_ui_components_Label);
				if(label != null) {
					label.invalidateComponent();
				}
				var icon = selectedTab.findComponent(null,haxe_ui_components_Image);
				if(icon != null) {
					icon.invalidateComponent();
				}
			}
			tab.addClass("tabbar-button-selected");
			var label = tab.findComponent(null,haxe_ui_components_Label);
			if(label != null) {
				label.invalidateComponent();
			}
			var icon = tab.findComponent(null,haxe_ui_components_Image);
			if(icon != null) {
				icon.invalidateComponent();
			}
			var rangeMin = Math.abs(builder._container.get_left());
			var rangeMax = rangeMin + this._component.get_width();
			var left = this._component.findComponent("tabbar-scroll-left",haxe_ui_components_Button);
			var right = this._component.findComponent("tabbar-scroll-right",haxe_ui_components_Button);
			if(left != null && left.get_hidden() == false) {
				rangeMax -= left.get_width();
				rangeMax -= this._component.get_layout().get_horizontalSpacing();
			}
			if(right != null && right.get_hidden() == false) {
				rangeMax -= right.get_width();
			}
			if(tab.get_left() < rangeMin || tab.get_left() + tab.get_width() > rangeMax) {
				var max = -(builder._container.get_width() - this._component.get_width());
				var x = -tab.get_left() + this._component.get_layout().get_paddingLeft();
				if(left != null && left.get_hidden() == false) {
					max -= left.get_width();
					max -= this._component.get_layout().get_horizontalSpacing();
				}
				if(right != null && right.get_hidden() == false) {
					max -= right.get_width();
				}
				if(x < max) {
					x = max;
				}
				builder._containerPosition = x;
				builder._container.set_left(x);
			}
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
			this._component.dispatch(new haxe_ui_events_UIEvent("change"));
		}
	}
	,__class__: haxe_ui_components__$TabBar_SelectedIndex
});
var haxe_ui_components__$TabBar_SelectedTab = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.SelectedTab"] = haxe_ui_components__$TabBar_SelectedTab;
haxe_ui_components__$TabBar_SelectedTab.__name__ = "haxe.ui.components._TabBar.SelectedTab";
haxe_ui_components__$TabBar_SelectedTab.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TabBar_SelectedTab.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		return haxe_ui_util_Variant.fromComponent(builder._container.findComponent("tabbar-button-selected",null,false,"css"));
	}
	,__class__: haxe_ui_components__$TabBar_SelectedTab
});
var haxe_ui_components__$TabBar_TabPosition = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.TabPosition"] = haxe_ui_components__$TabBar_TabPosition;
haxe_ui_components__$TabBar_TabPosition.__name__ = "haxe.ui.components._TabBar.TabPosition";
haxe_ui_components__$TabBar_TabPosition.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TabBar_TabPosition.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromString("bottom"))) {
			this._component.addClass(":bottom");
			var _g = 0;
			var _this = builder._container;
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.addClass(":bottom");
			}
		} else {
			this._component.removeClass(":bottom");
			var _g = 0;
			var _this = builder._container;
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.removeClass(":bottom");
			}
		}
	}
	,__class__: haxe_ui_components__$TabBar_TabPosition
});
var haxe_ui_components__$TabBar_TabCount = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.TabCount"] = haxe_ui_components__$TabBar_TabCount;
haxe_ui_components__$TabBar_TabCount.__name__ = "haxe.ui.components._TabBar.TabCount";
haxe_ui_components__$TabBar_TabCount.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$TabBar_TabCount.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var _this = builder._container;
		return haxe_ui_util_Variant.fromInt((_this._children == null ? [] : _this._children).length);
	}
	,__class__: haxe_ui_components__$TabBar_TabCount
});
var haxe_ui_components__$TabBar_RemoveTab = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.RemoveTab"] = haxe_ui_components__$TabBar_RemoveTab;
haxe_ui_components__$TabBar_RemoveTab.__name__ = "haxe.ui.components._TabBar.RemoveTab";
haxe_ui_components__$TabBar_RemoveTab.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$TabBar_RemoveTab.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var index = param;
		var _this = builder._container;
		if(index < (_this._children == null ? [] : _this._children).length) {
			var selectedIndex = (js_Boot.__cast(this._component , haxe_ui_components_TabBar)).get_selectedIndex();
			var newSelectedIndex = selectedIndex;
			if(index < selectedIndex) {
				--newSelectedIndex;
			} else if(index == selectedIndex) {
				(js_Boot.__cast(this._component , haxe_ui_components_TabBar)).set_selectedIndex(-1);
				newSelectedIndex = selectedIndex;
				var _this = builder._container;
				if(newSelectedIndex > (_this._children == null ? [] : _this._children).length - 2) {
					var _this = builder._container;
					newSelectedIndex = (_this._children == null ? [] : _this._children).length - 2;
				}
			}
			builder._container.removeComponentAt(index);
			this._component.dispatch(new haxe_ui_events_UIEvent("close",null,index));
			(js_Boot.__cast(this._component , haxe_ui_components_TabBar)).set_selectedIndex(newSelectedIndex);
		}
		return null;
	}
	,__class__: haxe_ui_components__$TabBar_RemoveTab
});
var haxe_ui_components__$TabBar_GetTab = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.GetTab"] = haxe_ui_components__$TabBar_GetTab;
haxe_ui_components__$TabBar_GetTab.__name__ = "haxe.ui.components._TabBar.GetTab";
haxe_ui_components__$TabBar_GetTab.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$TabBar_GetTab.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var index = param;
		var tab = null;
		var _this = builder._container;
		if(index < (_this._children == null ? [] : _this._children).length) {
			var _this = builder._container;
			tab = (_this._children == null ? [] : _this._children)[index];
		}
		return haxe_ui_util_Variant.fromComponent(tab);
	}
	,__class__: haxe_ui_components__$TabBar_GetTab
});
var haxe_ui_components__$TabBar_ButtonWidth = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.ButtonWidth"] = haxe_ui_components__$TabBar_ButtonWidth;
haxe_ui_components__$TabBar_ButtonWidth.__name__ = "haxe.ui.components._TabBar.ButtonWidth";
haxe_ui_components__$TabBar_ButtonWidth.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TabBar_ButtonWidth.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			return;
		}
		var _g = 0;
		var _g1 = this._component.findComponents(null,haxe_ui_components_Button);
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			b.set_width(haxe_ui_util_Variant.toFloat(this._value));
		}
	}
	,__class__: haxe_ui_components__$TabBar_ButtonWidth
});
var haxe_ui_components__$TabBar_ButtonHeight = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.ButtonHeight"] = haxe_ui_components__$TabBar_ButtonHeight;
haxe_ui_components__$TabBar_ButtonHeight.__name__ = "haxe.ui.components._TabBar.ButtonHeight";
haxe_ui_components__$TabBar_ButtonHeight.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TabBar_ButtonHeight.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			return;
		}
		var _g = 0;
		var _g1 = this._component.findComponents(null,haxe_ui_components_Button);
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			b.set_height(haxe_ui_util_Variant.toFloat(this._value));
		}
	}
	,__class__: haxe_ui_components__$TabBar_ButtonHeight
});
var haxe_ui_components__$TabBar_Events = function(tabbar) {
	haxe_ui_events_Events.call(this,tabbar);
	this._tabbar = tabbar;
};
$hxClasses["haxe.ui.components._TabBar.Events"] = haxe_ui_components__$TabBar_Events;
haxe_ui_components__$TabBar_Events.__name__ = "haxe.ui.components._TabBar.Events";
haxe_ui_components__$TabBar_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$TabBar_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_tabbar: null
	,register: function() {
		var builder = js_Boot.__cast(this._tabbar._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var _g = 0;
		var _this = builder._container;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			if(t.hasEvent("mousedown",$bind(this,this.onTabMouseDown)) == false) {
				t.registerEvent("mousedown",$bind(this,this.onTabMouseDown));
			}
		}
		this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
	}
	,unregister: function() {
		this.unregisterEvent("mousewheel",$bind(this,this.onMouseWheel));
	}
	,onMouseWheel: function(event) {
		var builder = js_Boot.__cast(this._tabbar._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		if(builder._scrollLeft == null || builder._scrollLeft.get_hidden() == true) {
			return;
		}
		if(event.delta < 0) {
			builder.scrollRight();
		} else {
			builder.scrollLeft();
		}
		event.cancel();
	}
	,onTabMouseDown: function(event) {
		var builder = js_Boot.__cast(this._tabbar._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var button = event.target;
		var close = button.findComponent("tab-close-button",haxe_ui_components_Image,false);
		var select = true;
		if(close != null) {
			select = !close.hitTest(event.screenX,event.screenY);
		}
		if(select == true) {
			this._tabbar.set_selectedIndex(builder._container.getComponentIndex(button));
		}
	}
	,__class__: haxe_ui_components__$TabBar_Events
});
var haxe_ui_components__$TabBar_Builder = function(tabbar) {
	haxe_ui_core_CompositeBuilder.call(this,tabbar);
	this._tabbar = tabbar;
	this.createContainer();
};
$hxClasses["haxe.ui.components._TabBar.Builder"] = haxe_ui_components__$TabBar_Builder;
haxe_ui_components__$TabBar_Builder.__name__ = "haxe.ui.components._TabBar.Builder";
haxe_ui_components__$TabBar_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$TabBar_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_tabbar: null
	,_container: null
	,_filler: null
	,create: function() {
		this.createContainer();
	}
	,createContainer: function() {
		if(this._filler == null) {
			this._filler = new haxe_ui_containers_Box();
			this._filler.set_id("tabbar-filler");
			this._filler.addClass("tabbar-filler");
			this._tabbar.addComponent(this._filler);
		}
		if(this._container == null) {
			this._container = new haxe_ui_containers_HBox();
			this._container.set_id("tabbar-contents");
			this._container.addClass("tabbar-contents");
			this._tabbar.addComponent(this._container);
		}
	}
	,addTab: function(child) {
		var button = this.createTabBarButton(child);
		var v = this._container.addComponent(button);
		this._tabbar.registerInternalEvents(haxe_ui_components__$TabBar_Events,true);
		if(this._tabbar.get_selectedIndex() < 0) {
			this._tabbar.set_selectedIndex(0);
		}
		return v;
	}
	,addTabAt: function(child,index) {
		var button = this.createTabBarButton(child);
		var v = this._container.addComponentAt(button,index);
		this._tabbar.registerInternalEvents(haxe_ui_components__$TabBar_Events,true);
		if(this._tabbar.get_selectedIndex() < 0) {
			this._tabbar.set_selectedIndex(0);
		} else if(index <= this._tabbar.get_selectedIndex()) {
			var fh = this._tabbar;
			fh.set_selectedIndex(fh.get_selectedIndex() + 1);
		}
		return v;
	}
	,createTabBarButton: function(child) {
		var button = new haxe_ui_components__$TabBar_TabBarButton();
		button.addClass("tabbar-button");
		if(this._tabbar.get_tabPosition() == "bottom") {
			button.addClass(":bottom");
		}
		if(child.get_disabled() == true) {
			button.set_disabled(child.get_disabled());
		}
		button.set_id(child.get_id());
		button.set_text(child.get_text());
		button.set_tooltip(child.get_tooltip());
		if(((child) instanceof haxe_ui_components_Button)) {
			button.set_icon((js_Boot.__cast(child , haxe_ui_components_Button)).get_icon());
		}
		button.set_closable(this._tabbar.get_closable());
		if(this._tabbar.get_buttonWidth() != null) {
			button.set_componentWidth(this._tabbar.get_buttonWidth());
		}
		if(this._tabbar.get_buttonHeight() != null) {
			button.set_componentHeight(this._tabbar.get_buttonHeight());
		}
		return button;
	}
	,get_numComponents: function() {
		return this._container.get_numComponents();
	}
	,addComponent: function(child) {
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight && child != this._filler) {
			return this.addTab(child);
		}
		return null;
	}
	,addComponentAt: function(child,index) {
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight && child != this._filler) {
			return this.addTabAt(child,index);
		}
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight && child != this._filler) {
			var index = this._container.getComponentIndex(child);
			if(index != -1) {
				this._tabbar.removeTab(index);
				return child;
			}
		}
		return null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		var child = this._container.getComponentAt(index);
		if(child != null) {
			this._tabbar.removeTab(index);
		}
		return child;
	}
	,getComponentIndex: function(child) {
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight && child != this._filler) {
			return this._container.getComponentIndex(child);
		}
		return -1;
	}
	,setComponentIndex: function(child,index) {
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight && child != this._filler) {
			return this._container.setComponentIndex(child,index);
		}
		return null;
	}
	,getComponentAt: function(index) {
		return this._container.getComponentAt(index);
	}
	,validateComponentLayout: function() {
		if(this._tabbar.get_native() == true || this._container == null) {
			return false;
		}
		if(this._containerPosition == null) {
			this._containerPosition = this._tabbar.get_layout().get_paddingLeft();
		}
		if(this._container.get_width() > this._tabbar.get_layout().get_usableWidth() && this._tabbar.get_layout().get_usableWidth() > 0) {
			this.showScrollButtons();
			this._container.set_left(this._containerPosition);
		} else {
			this.hideScrollButtons();
			this._containerPosition = null;
		}
		return true;
	}
	,_scrollLeft: null
	,_scrollRight: null
	,showScrollButtons: function() {
		var _gthis = this;
		if(this._scrollLeft == null) {
			this._scrollLeft = new haxe_ui_components_Button();
			this._scrollLeft.set_id("tabbar-scroll-left");
			this._scrollLeft.addClass("tabbar-scroll-left");
			this._scrollLeft.set_includeInLayout(false);
			this._scrollLeft.set_repeater(true);
			this._tabbar.addComponent(this._scrollLeft);
			this._scrollLeft.set_onClick(function(e) {
				_gthis.scrollLeft();
			});
		} else {
			this._scrollLeft.show();
		}
		if(this._scrollRight == null) {
			this._scrollRight = new haxe_ui_components_Button();
			this._scrollRight.set_id("tabbar-scroll-right");
			this._scrollRight.addClass("tabbar-scroll-right");
			this._scrollRight.set_includeInLayout(false);
			this._scrollRight.set_repeater(true);
			this._tabbar.addComponent(this._scrollRight);
			this._scrollRight.set_onClick(function(e) {
				_gthis.scrollRight();
			});
		} else {
			this._scrollRight.show();
		}
	}
	,_containerPosition: null
	,scrollLeft: function() {
		if(this._scrollLeft == null || this._scrollLeft.get_hidden() == true) {
			return;
		}
		var x = this._container.get_left() + 20;
		if(x > this._tabbar.get_layout().get_paddingLeft()) {
			x = this._tabbar.get_layout().get_paddingLeft();
		}
		this._containerPosition = x;
		this._container.set_left(x);
	}
	,scrollRight: function() {
		if(this._scrollLeft == null || this._scrollLeft.get_hidden() == true) {
			return;
		}
		var x = this._container.get_left() - 20;
		var max = -(this._container.get_width() - this._tabbar.get_width());
		var left = this._tabbar.findComponent("tabbar-scroll-left",haxe_ui_components_Button);
		var right = this._tabbar.findComponent("tabbar-scroll-right",haxe_ui_components_Button);
		if(left != null && left.get_hidden() == false) {
			max -= left.get_width();
			max -= this._tabbar.get_layout().get_horizontalSpacing();
		}
		if(right != null && right.get_hidden() == false) {
			max -= right.get_width();
		}
		if(x < max) {
			x = max;
		}
		this._containerPosition = x;
		this._container.set_left(x);
	}
	,hideScrollButtons: function() {
		if(this._scrollLeft != null) {
			this._scrollLeft.hide();
		}
		if(this._scrollRight != null) {
			this._scrollRight.hide();
		}
	}
	,applyStyle: function(style) {
		haxe_ui_core_CompositeBuilder.prototype.applyStyle.call(this,style);
		var list = this._component.findComponents(null,haxe_ui_components_Button,16777215);
		var _g = 0;
		while(_g < list.length) {
			var c = list[_g];
			++_g;
			var invalidate = false;
			if(style.color != null && c.get_customStyle().color != style.color) {
				c.get_customStyle().color = style.color;
				invalidate = true;
			}
			if(style.fontName != null && c.get_customStyle().fontName != style.fontName) {
				c.get_customStyle().fontName = style.fontName;
				invalidate = true;
			}
			if(style.fontSize != null && c.get_customStyle().fontSize != style.fontSize) {
				c.get_customStyle().fontSize = style.fontSize;
				invalidate = true;
			}
			if(style.textAlign != null && c.get_customStyle().textAlign != style.textAlign) {
				c.get_customStyle().textAlign = style.textAlign;
				invalidate = true;
			}
			if(style.fontBold != null && c.get_customStyle().fontBold != style.fontBold) {
				c.get_customStyle().fontBold = style.fontBold;
				invalidate = true;
			}
			if(style.fontUnderline != null && c.get_customStyle().fontUnderline != style.fontUnderline) {
				c.get_customStyle().fontUnderline = style.fontUnderline;
				invalidate = true;
			}
			if(style.fontItalic != null && c.get_customStyle().fontItalic != style.fontItalic) {
				c.get_customStyle().fontItalic = style.fontItalic;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
	}
	,__class__: haxe_ui_components__$TabBar_Builder
});
var haxe_ui_components__$TabBar_TabBarButton = function() {
	this._closable = false;
	haxe_ui_components_Button.call(this);
};
$hxClasses["haxe.ui.components._TabBar.TabBarButton"] = haxe_ui_components__$TabBar_TabBarButton;
haxe_ui_components__$TabBar_TabBarButton.__name__ = "haxe.ui.components._TabBar.TabBarButton";
haxe_ui_components__$TabBar_TabBarButton.__super__ = haxe_ui_components_Button;
haxe_ui_components__$TabBar_TabBarButton.prototype = $extend(haxe_ui_components_Button.prototype,{
	_closable: null
	,get_closable: function() {
		return this._closable;
	}
	,set_closable: function(value) {
		if(this._closable == value) {
			return value;
		}
		this._closable = value;
		var existing = this.findComponent("tab-close-button",haxe_ui_components_Image,false);
		var events = js_Boot.__cast(this._internalEvents , haxe_ui_components_ButtonEvents);
		events.recursiveStyling = false;
		if(this._closable == true && existing == null) {
			this.set_iconPosition("far-left");
			var image = new haxe_ui_components_Image();
			image.set_id("tab-close-button");
			image.addClass("tab-close-button");
			image.set_includeInLayout(false);
			image.set_scriptAccess(false);
			image.set_onClick($bind(this,this.onCloseClicked));
			this.addComponent(image);
		} else if(existing != null) {
			this.removeComponent(existing);
		}
		return value;
	}
	,onCloseClicked: function(e) {
		var tabbar = this.findAncestor(null,haxe_ui_components_TabBar);
		var builder = js_Boot.__cast(tabbar._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var index = builder._container.getComponentIndex(this);
		var event = new haxe_ui_events_UIEvent("beforeclose",null,index);
		tabbar.dispatch(event);
		if(event.canceled == false) {
			if(index != -1) {
				tabbar.removeTab(index);
			}
		}
	}
	,registerComposite: function() {
		haxe_ui_components_Button.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components__$TabBar_TabBarButtonLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Button.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Button.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components__$TabBar_TabBarButton();
	}
	,__class__: haxe_ui_components__$TabBar_TabBarButton
	,__properties__: $extend(haxe_ui_components_Button.prototype.__properties__,{set_closable:"set_closable",get_closable:"get_closable"})
});
var haxe_ui_components__$TabBar_TabBarButtonLayout = function() {
	haxe_ui_components_ButtonLayout.call(this);
};
$hxClasses["haxe.ui.components._TabBar.TabBarButtonLayout"] = haxe_ui_components__$TabBar_TabBarButtonLayout;
haxe_ui_components__$TabBar_TabBarButtonLayout.__name__ = "haxe.ui.components._TabBar.TabBarButtonLayout";
haxe_ui_components__$TabBar_TabBarButtonLayout.__super__ = haxe_ui_components_ButtonLayout;
haxe_ui_components__$TabBar_TabBarButtonLayout.prototype = $extend(haxe_ui_components_ButtonLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_components_ButtonLayout.prototype.repositionChildren.call(this);
		var image = this._component.findComponent("tab-close-button",haxe_ui_components_Image,false);
		if(image != null && image.get_hidden() == false && this.get_component().get_componentWidth() > 0) {
			image.set_top((this.get_component().get_componentHeight() / 2 - image.get_componentHeight() / 2 | 0) + this.marginTop(image) - this.marginBottom(image));
			image.set_left(this.get_component().get_componentWidth() - image.get_componentWidth() - this.get_paddingRight() + this.marginLeft(image) - this.marginRight(image));
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_components_ButtonLayout.prototype.calcAutoSize.call(this,exclusions);
		var image = this._component.findComponent("tab-close-button",haxe_ui_components_Image,false);
		if(image != null && image.get_hidden() == false) {
			size.width += image.get_width() + this.get_horizontalSpacing();
		}
		return size;
	}
	,__class__: haxe_ui_components__$TabBar_TabBarButtonLayout
});
var haxe_ui_components_TextArea = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.TextArea"] = haxe_ui_components_TextArea;
haxe_ui_components_TextArea.__name__ = "haxe.ui.components.TextArea";
haxe_ui_components_TextArea.__interfaces__ = [haxe_ui_focus_IFocusable];
haxe_ui_components_TextArea.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_TextArea.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	scrollToTop: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("scrollToTop",null);
	}
	,scrollToBottom: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("scrollToBottom",null);
	}
	,invalidateComponentScroll: function() {
		this.invalidateComponent("scroll");
	}
	,validateComponentInternal: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		var dataInvalid = this.isComponentInvalid("data");
		var scrollInvalid = this.isComponentInvalid("scroll");
		var layoutInvalid = this.isComponentInvalid("layout");
		haxe_ui_core_InteractiveComponent.prototype.validateComponentInternal.call(this,nextFrame);
		if(scrollInvalid || layoutInvalid || dataInvalid) {
			if(this._compositeBuilder != null) {
				(js_Boot.__cast(this._compositeBuilder , haxe_ui_components__$TextArea_TextAreaBuilder)).checkScrolls();
			}
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_components__$TextArea_TextBehaviour);
		this.behaviours.register("htmlText",haxe_ui_components__$TextArea_HtmlTextBehaviour);
		this.behaviours.register("placeholder",haxe_ui_components__$TextArea_PlaceholderBehaviour);
		this.behaviours.register("wrap",haxe_ui_components__$TextArea_WrapBehaviour,haxe_ui_util_Variant.fromBool(true));
		this.behaviours.register("dataSource",haxe_ui_components__$TextArea_DataSourceBehaviour);
		this.behaviours.register("autoScrollToBottom",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("scrollToTop",haxe_ui_components__$TextArea_ScrollToTop);
		this.behaviours.register("scrollToBottom",haxe_ui_components__$TextArea_ScrollToBottom);
	}
	,get_htmlText: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("htmlText"));
	}
	,set_htmlText: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"htmlText",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("htmlText",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"htmlText"));
		return value;
	}
	,get_placeholder: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("placeholder"));
	}
	,set_placeholder: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"placeholder",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("placeholder",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"placeholder"));
		return value;
	}
	,get_wrap: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("wrap"));
	}
	,set_wrap: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("wrap",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"wrap"));
		return value;
	}
	,get_dataSource: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDataSource(this.behaviours.get("dataSource"));
	}
	,set_dataSource: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dataSource",haxe_ui_util_Variant.fromDataSource(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"dataSource"));
		return value;
	}
	,get_autoScrollToBottom: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("autoScrollToBottom"));
	}
	,set_autoScrollToBottom: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("autoScrollToBottom",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"autoScrollToBottom"));
		return value;
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		this.set_text(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_TextArea();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$TextArea_Events;
		this._compositeBuilderClass = haxe_ui_components__$TextArea_TextAreaBuilder;
		this._defaultLayoutClass = haxe_ui_components__$TextArea_TextAreaLayout;
	}
	,__class__: haxe_ui_components_TextArea
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_autoScrollToBottom:"set_autoScrollToBottom",get_autoScrollToBottom:"get_autoScrollToBottom",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource",set_wrap:"set_wrap",get_wrap:"get_wrap",set_placeholder:"set_placeholder",get_placeholder:"get_placeholder",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText"})
});
var haxe_ui_components__$TextArea_TextAreaLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._TextArea.TextAreaLayout"] = haxe_ui_components__$TextArea_TextAreaLayout;
haxe_ui_components__$TextArea_TextAreaLayout.__name__ = "haxe.ui.components._TextArea.TextAreaLayout";
haxe_ui_components__$TextArea_TextAreaLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$TextArea_TextAreaLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var ucx = this.get_innerWidth();
		var ucy = this.get_innerHeight();
		if(hscroll != null && this.hidden(hscroll) == false) {
			hscroll.set_left(this.get_paddingLeft());
			hscroll.set_top(ucy - hscroll.get_componentHeight() + this.get_paddingBottom());
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			vscroll.set_left(ucx - vscroll.get_componentWidth() + this.get_paddingRight());
			vscroll.set_top(this.get_paddingTop());
		}
		if(this.get_component().hasTextInput() == true) {
			this.get_component().getTextInput().set_left(this.get_paddingLeft() + 2);
			this.get_component().getTextInput().set_top(this.get_paddingTop() + 2);
		}
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var usableSize = this.get_usableSize();
		if(hscroll != null && this.hidden(hscroll) == false) {
			hscroll.set_width(usableSize.width);
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			vscroll.set_height(usableSize.height);
		}
		if(this.get_component().hasTextInput() == true) {
			var size = usableSize;
			this.get_component().getTextInput().set_width(size.width - 4);
			this.get_component().getTextInput().set_height(size.height - 4);
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll != null && this.hidden(hscroll) == false) {
			size.height -= hscroll.get_componentHeight();
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			size.width -= vscroll.get_componentWidth();
		}
		return size;
	}
	,__class__: haxe_ui_components__$TextArea_TextAreaLayout
});
var haxe_ui_components__$TextArea_DataSourceBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.DataSourceBehaviour"] = haxe_ui_components__$TextArea_DataSourceBehaviour;
haxe_ui_components__$TextArea_DataSourceBehaviour.__name__ = "haxe.ui.components._TextArea.DataSourceBehaviour";
haxe_ui_components__$TextArea_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_DataSourceBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	set: function(value) {
		this._value = value;
		this._component.getTextInput().set_dataSource(haxe_ui_util_Variant.toDataSource(value));
	}
	,get: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			this._value = haxe_ui_util_Variant.fromDataSource(new haxe_ui_data_ArrayDataSource());
			this.set(this._value);
		}
		return this._value;
	}
	,__class__: haxe_ui_components__$TextArea_DataSourceBehaviour
});
var haxe_ui_components__$TextArea_PlaceholderBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.PlaceholderBehaviour"] = haxe_ui_components__$TextArea_PlaceholderBehaviour;
haxe_ui_components__$TextArea_PlaceholderBehaviour.__name__ = "haxe.ui.components._TextArea.PlaceholderBehaviour";
haxe_ui_components__$TextArea_PlaceholderBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_PlaceholderBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textarea = js_Boot.__cast(this._component , haxe_ui_components_TextArea);
		haxe_ui_components__$TextArea_TextAreaHelper.validateText(textarea,textarea.get_text());
	}
	,__class__: haxe_ui_components__$TextArea_PlaceholderBehaviour
});
var haxe_ui_components__$TextArea_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.TextBehaviour"] = haxe_ui_components__$TextArea_TextBehaviour;
haxe_ui_components__$TextArea_TextBehaviour.__name__ = "haxe.ui.components._TextArea.TextBehaviour";
haxe_ui_components__$TextArea_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textarea = js_Boot.__cast(this._component , haxe_ui_components_TextArea);
		var text = this._value != null ? haxe_ui_util_Variant.toString(this._value) : "";
		haxe_ui_components__$TextArea_TextAreaHelper.validateText(textarea,text);
		if(textarea.get_autoScrollToBottom() == true) {
			textarea.scrollToBottom();
		}
	}
	,__class__: haxe_ui_components__$TextArea_TextBehaviour
});
var haxe_ui_components__$TextArea_HtmlTextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.HtmlTextBehaviour"] = haxe_ui_components__$TextArea_HtmlTextBehaviour;
haxe_ui_components__$TextArea_HtmlTextBehaviour.__name__ = "haxe.ui.components._TextArea.HtmlTextBehaviour";
haxe_ui_components__$TextArea_HtmlTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_HtmlTextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textarea = js_Boot.__cast(this._component , haxe_ui_components_TextArea);
		var htmlText = this._value != null ? haxe_ui_util_Variant.toString(this._value) : "";
		haxe_ui_components__$TextArea_TextAreaHelper.validateHtmlText(textarea,htmlText);
		if(textarea.get_autoScrollToBottom() == true) {
			textarea.scrollToBottom();
		}
	}
	,__class__: haxe_ui_components__$TextArea_HtmlTextBehaviour
});
var haxe_ui_components__$TextArea_WrapBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.WrapBehaviour"] = haxe_ui_components__$TextArea_WrapBehaviour;
haxe_ui_components__$TextArea_WrapBehaviour.__name__ = "haxe.ui.components._TextArea.WrapBehaviour";
haxe_ui_components__$TextArea_WrapBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_WrapBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textarea = js_Boot.__cast(this._component , haxe_ui_components_TextArea);
		textarea.getTextInput().set_wordWrap(haxe_ui_util_Variant.toBool(this._value));
	}
	,__class__: haxe_ui_components__$TextArea_WrapBehaviour
});
var haxe_ui_components__$TextArea_ScrollToTop = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.ScrollToTop"] = haxe_ui_components__$TextArea_ScrollToTop;
haxe_ui_components__$TextArea_ScrollToTop.__name__ = "haxe.ui.components._TextArea.ScrollToTop";
haxe_ui_components__$TextArea_ScrollToTop.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$TextArea_ScrollToTop.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.set_pos(0);
		}
		return null;
	}
	,__class__: haxe_ui_components__$TextArea_ScrollToTop
});
var haxe_ui_components__$TextArea_ScrollToBottom = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.ScrollToBottom"] = haxe_ui_components__$TextArea_ScrollToBottom;
haxe_ui_components__$TextArea_ScrollToBottom.__name__ = "haxe.ui.components._TextArea.ScrollToBottom";
haxe_ui_components__$TextArea_ScrollToBottom.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$TextArea_ScrollToBottom.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.set_pos(vscroll.get_max());
		}
		return null;
	}
	,__class__: haxe_ui_components__$TextArea_ScrollToBottom
});
var haxe_ui_components__$TextArea_TextAreaHelper = function() { };
$hxClasses["haxe.ui.components._TextArea.TextAreaHelper"] = haxe_ui_components__$TextArea_TextAreaHelper;
haxe_ui_components__$TextArea_TextAreaHelper.__name__ = "haxe.ui.components._TextArea.TextAreaHelper";
haxe_ui_components__$TextArea_TextAreaHelper.validateText = function(textarea,text) {
	if(text == null) {
		text = "";
	}
	var placeholderVisible = text.length == 0;
	if(textarea.get_placeholder() != null) {
		if(textarea.get_focus() == false) {
			if(text.length == 0) {
				text = textarea.get_placeholder();
				textarea.addClass(":empty");
			} else if(text != textarea.get_placeholder()) {
				textarea.removeClass(":empty");
			}
		} else {
			textarea.removeClass(":empty");
			if(text == textarea.get_placeholder()) {
				text = "";
			}
		}
	} else if(placeholderVisible == true) {
		textarea.removeClass(":empty");
	}
	textarea.getTextInput().set_text("" + text);
	textarea.getTextInput().invalidateComponent("measure");
	if(!(textarea._layout == null || textarea._layoutLocked == true)) {
		textarea.invalidateComponent("layout",false);
	}
};
haxe_ui_components__$TextArea_TextAreaHelper.validateHtmlText = function(textarea,htmlText) {
	if(htmlText == null) {
		htmlText = "";
	}
	var placeholderVisible = htmlText.length == 0;
	if(textarea.get_placeholder() != null) {
		if(textarea.get_focus() == false) {
			if(htmlText.length == 0) {
				htmlText = textarea.get_placeholder();
				textarea.addClass(":empty");
			} else if(htmlText != textarea.get_placeholder()) {
				textarea.removeClass(":empty");
			}
		} else {
			textarea.removeClass(":empty");
			if(htmlText == textarea.get_placeholder()) {
				htmlText = "";
			}
		}
	} else if(placeholderVisible == true) {
		textarea.removeClass(":empty");
	}
	textarea.getTextInput().set_htmlText("" + htmlText);
	textarea.getTextInput().invalidateComponent("measure");
	if(!(textarea._layout == null || textarea._layoutLocked == true)) {
		textarea.invalidateComponent("layout",false);
	}
};
var haxe_ui_components__$TextArea_Events = function(textarea) {
	haxe_ui_events_Events.call(this,textarea);
	this._textarea = textarea;
};
$hxClasses["haxe.ui.components._TextArea.Events"] = haxe_ui_components__$TextArea_Events;
haxe_ui_components__$TextArea_Events.__name__ = "haxe.ui.components._TextArea.Events";
haxe_ui_components__$TextArea_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$TextArea_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_textarea: null
	,register: function() {
		var _gthis = this;
		if(this._textarea.getTextInput().get_data().onChangedCallback == null) {
			this._textarea.getTextInput().set_multiline(true);
			this._textarea.getTextInput().get_data().onChangedCallback = function() {
				if(_gthis._textarea.classes.indexOf(":empty") != -1 == false) {
					var text = _gthis._textarea.getTextInput().get_text();
					if(text == null) {
						text = "";
					}
					_gthis._textarea.set_text(text);
					_gthis._textarea.dispatch(new haxe_ui_events_UIEvent("change"));
					if(_gthis._textarea.get_style().autoHeight == true) {
						var maxHeight = _gthis._textarea.get_style().maxHeight;
						var newHeight = _gthis._textarea.getTextInput().get_textHeight() + 8;
						if(maxHeight == null || newHeight < maxHeight) {
							_gthis._textarea.set_height(newHeight);
						}
					}
					(js_Boot.__cast(_gthis._textarea._compositeBuilder , haxe_ui_components__$TextArea_TextAreaBuilder)).checkScrolls();
				}
			};
		}
		if(this._textarea.getTextInput().get_data().onScrollCallback == null) {
			this._textarea.getTextInput().get_data().onScrollCallback = function() {
				var hscroll = _gthis._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
				if(hscroll != null) {
					hscroll.set_pos(_gthis._textarea.getTextInput().get_hscrollPos());
				}
				var vscroll = _gthis._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
				if(vscroll != null) {
					vscroll.set_pos(_gthis._textarea.getTextInput().get_vscrollPos());
				}
			};
		}
		var hscroll = this._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null && hscroll.hasEvent("change",$bind(this,this.onScrollChange)) == false) {
			hscroll.registerEvent("change",$bind(this,this.onScrollChange));
		}
		var vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null && vscroll.hasEvent("change",$bind(this,this.onScrollChange)) == false) {
			vscroll.registerEvent("change",$bind(this,this.onScrollChange));
		}
		if(this.hasEvent("mousewheel",$bind(this,this.onMouseWheel)) == false) {
			this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
		}
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this.hasEvent("focusin",$bind(this,this.onFocusChange)) == false) {
			this.registerEvent("focusin",$bind(this,this.onFocusChange));
		}
		if(this.hasEvent("focusout",$bind(this,this.onFocusChange)) == false) {
			this.registerEvent("focusout",$bind(this,this.onFocusChange));
		}
	}
	,unregister: function() {
		this._textarea.getTextInput().get_data().onChangedCallback = null;
		this._textarea.getTextInput().get_data().onScrollCallback = null;
		var hscroll = this._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			hscroll.unregisterEvent("change",$bind(this,this.onScrollChange));
		}
		var vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.unregisterEvent("change",$bind(this,this.onScrollChange));
		}
		this.unregisterEvent("mousewheel",$bind(this,this.onMouseWheel));
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("focusin",$bind(this,this.onFocusChange));
		this.unregisterEvent("focusout",$bind(this,this.onFocusChange));
	}
	,onMouseWheel: function(event) {
		if(this._textarea.getTextInput().get_data().vscrollNativeWheel == true) {
			return;
		}
		var vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			event.cancel();
			var step = 20;
			if(this._textarea.getTextInput().get_data().vscrollPageStep != null) {
				step = this._textarea.getTextInput().get_data().vscrollPageStep;
			} else {
				step = Math.ceil((this._textarea.getTextInput().get_textStyle().fontSize + 1) / 10) * 10;
			}
			if(event.delta > 0) {
				vscroll.set_pos(vscroll.get_pos() - step);
			} else if(event.delta < 0) {
				vscroll.set_pos(vscroll.get_pos() + step);
			}
		}
	}
	,onScrollChange: function(event) {
		if(this._textarea.get_style().autoHeight == true) {
			var maxHeight = this._textarea.get_style().maxHeight;
			var newHeight = this._textarea.getTextInput().get_textHeight() + 8;
			if(maxHeight == null || newHeight < maxHeight) {
				this._textarea.set_height(newHeight);
			}
			if(maxHeight != null && newHeight > maxHeight) {
				this._textarea.set_height(maxHeight);
			}
		}
		var hscroll = this._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			this._textarea.getTextInput().set_hscrollPos(hscroll.get_pos());
		}
		var vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			this._textarea.getTextInput().set_vscrollPos(vscroll.get_pos());
		}
	}
	,onMouseDown: function(event) {
		this._textarea.set_focus(true);
	}
	,onFocusChange: function(event) {
		if(this._textarea.get_focus() == true) {
			this._textarea.getTextInput().focus();
		} else {
			this._textarea.getTextInput().blur();
		}
		haxe_ui_components__$TextArea_TextAreaHelper.validateText(this._textarea,this._textarea.get_text());
	}
	,__class__: haxe_ui_components__$TextArea_Events
});
var haxe_ui_components__$TextArea_TextAreaBuilder = function(textarea) {
	haxe_ui_core_CompositeBuilder.call(this,textarea);
	this._textarea = textarea;
};
$hxClasses["haxe.ui.components._TextArea.TextAreaBuilder"] = haxe_ui_components__$TextArea_TextAreaBuilder;
haxe_ui_components__$TextArea_TextAreaBuilder.__name__ = "haxe.ui.components._TextArea.TextAreaBuilder";
haxe_ui_components__$TextArea_TextAreaBuilder.isHtml = function(v) {
	if(v == null) {
		return false;
	} else {
		return v.indexOf("<font ") != -1;
	}
};
haxe_ui_components__$TextArea_TextAreaBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$TextArea_TextAreaBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_textarea: null
	,checkScrolls: function() {
		if(this._textarea.get_native() == true) {
			return;
		}
		var textInput = this._textarea.getTextInput();
		var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(textInput.get_textWidth() - textInput.get_width() > 1) {
			if(hscroll == null) {
				hscroll = this.createHScroll();
			}
			hscroll.set_max(textInput.get_hscrollMax());
			hscroll.set_pos(textInput.get_hscrollPos());
			hscroll.set_pageSize(textInput.get_hscrollPageSize());
		} else if(hscroll != null) {
			this._component.removeComponent(hscroll);
		}
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(textInput.get_textHeight() - textInput.get_height() > 1) {
			if(vscroll == null) {
				vscroll = this.createVScroll();
			}
			vscroll.set_max(textInput.get_vscrollMax());
			vscroll.set_pos(textInput.get_vscrollPos());
			vscroll.set_pageSize(textInput.get_vscrollPageSize());
			if(this._textarea.get_autoScrollToBottom() == true) {
				this._textarea.scrollToBottom();
			}
		} else if(vscroll != null) {
			this._component.removeComponent(vscroll);
		}
	}
	,createHScroll: function() {
		var hscroll = new haxe_ui_components_HorizontalScroll();
		hscroll.set_percentWidth(100);
		hscroll.set_id("textarea-hscroll");
		hscroll.set_allowFocus(false);
		hscroll.set_scriptAccess(false);
		this._component.addComponent(hscroll);
		this._component.registerInternalEvents(null,true);
		return hscroll;
	}
	,createVScroll: function() {
		var vscroll = new haxe_ui_components_VerticalScroll();
		if(this._textarea.getTextInput().get_data().vscrollPageStep != null) {
			vscroll.set_increment(this._textarea.getTextInput().get_data().vscrollPageStep);
		}
		vscroll.set_percentHeight(100);
		vscroll.set_id("textarea-vscroll");
		vscroll.set_allowFocus(false);
		vscroll.set_scriptAccess(false);
		this._component.addComponent(vscroll);
		this._component.registerInternalEvents(null,true);
		return vscroll;
	}
	,applyStyle: function(style) {
		haxe_ui_core_CompositeBuilder.prototype.applyStyle.call(this,style);
		if(this._textarea.hasTextInput() == true) {
			this._textarea.getTextInput().set_textStyle(style);
			var tmp;
			if((style.contentType == "auto" || style.contentType == "html") && this._textarea.getTextInput().get_supportsHtml()) {
				var v = Std.string(this._textarea.get_text());
				tmp = v == null ? false : v.indexOf("<font ") != -1;
			} else {
				tmp = false;
			}
			if(tmp) {
				this._textarea.set_htmlText(this._textarea.get_text());
			}
		}
	}
	,__class__: haxe_ui_components__$TextArea_TextAreaBuilder
});
var haxe_ui_components_TextField = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.TextField"] = haxe_ui_components_TextField;
haxe_ui_components_TextField.__name__ = "haxe.ui.components.TextField";
haxe_ui_components_TextField.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_TextField.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("password",haxe_ui_components__$TextField_PasswordBehaviour);
		this.behaviours.register("maxChars",haxe_ui_components__$TextField_MaxCharsBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("restrictChars",haxe_ui_components__$TextField_RestrictCharsBehaviour);
		this.behaviours.register("placeholder",haxe_ui_components__$TextField_PlaceholderBehaviour);
		this.behaviours.register("text",haxe_ui_components__$TextField_TextBehaviour);
		this.behaviours.register("htmlText",haxe_ui_components__$TextField_HtmlTextBehaviour);
		this.behaviours.register("icon",haxe_ui_components__$TextField_IconBehaviour);
		this.behaviours.register("caretIndex",haxe_ui_components__$TextField_CaretIndexBehaviour);
		this.behaviours.register("selectionStartIndex",haxe_ui_components__$TextField_SelectionStartIndexBehaviour);
		this.behaviours.register("selectionEndIndex",haxe_ui_components__$TextField_SelectionEndIndexBehaviour);
	}
	,get_password: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("password"));
	}
	,set_password: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("password",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"password"));
		return value;
	}
	,get_maxChars: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("maxChars"));
	}
	,set_maxChars: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("maxChars",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"maxChars"));
		return value;
	}
	,get_restrictChars: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("restrictChars"));
	}
	,set_restrictChars: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"restrictChars",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("restrictChars",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"restrictChars"));
		return value;
	}
	,get_placeholder: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("placeholder"));
	}
	,set_placeholder: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"placeholder",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("placeholder",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"placeholder"));
		return value;
	}
	,get_htmlText: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("htmlText"));
	}
	,set_htmlText: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"htmlText",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("htmlText",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"htmlText"));
		return value;
	}
	,get_icon: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("icon"));
	}
	,set_icon: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"icon",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("icon",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"icon"));
		return value;
	}
	,get_caretIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("caretIndex"));
	}
	,set_caretIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("caretIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"caretIndex"));
		return value;
	}
	,get_selectionStartIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectionStartIndex"));
	}
	,set_selectionStartIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectionStartIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectionStartIndex"));
		return value;
	}
	,get_selectionEndIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectionEndIndex"));
	}
	,set_selectionEndIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectionEndIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectionEndIndex"));
		return value;
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		this.set_text(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_password(this.get_password());
		c.set_maxChars(this.get_maxChars());
		if(this.get_restrictChars() != null) {
			c.set_restrictChars(this.get_restrictChars());
		}
		if(this.get_placeholder() != null) {
			c.set_placeholder(this.get_placeholder());
		}
		if(this.get_htmlText() != null) {
			c.set_htmlText(this.get_htmlText());
		}
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		c.set_caretIndex(this.get_caretIndex());
		c.set_selectionStartIndex(this.get_selectionStartIndex());
		c.set_selectionEndIndex(this.get_selectionEndIndex());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_TextField();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$TextField_Events;
		this._compositeBuilderClass = haxe_ui_components__$TextField_Builder;
		this._defaultLayoutClass = haxe_ui_components__$TextField_TextFieldLayout;
	}
	,__class__: haxe_ui_components_TextField
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_selectionEndIndex:"set_selectionEndIndex",get_selectionEndIndex:"get_selectionEndIndex",set_selectionStartIndex:"set_selectionStartIndex",get_selectionStartIndex:"get_selectionStartIndex",set_caretIndex:"set_caretIndex",get_caretIndex:"get_caretIndex",set_icon:"set_icon",get_icon:"get_icon",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText",set_placeholder:"set_placeholder",get_placeholder:"get_placeholder",set_restrictChars:"set_restrictChars",get_restrictChars:"get_restrictChars",set_maxChars:"set_maxChars",get_maxChars:"get_maxChars",set_password:"set_password",get_password:"get_password"})
});
var haxe_ui_components__$TextField_TextFieldLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._TextField.TextFieldLayout"] = haxe_ui_components__$TextField_TextFieldLayout;
haxe_ui_components__$TextField_TextFieldLayout.__name__ = "haxe.ui.components._TextField.TextFieldLayout";
haxe_ui_components__$TextField_TextFieldLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$TextField_TextFieldLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	iconPosition: null
	,get_iconPosition: function() {
		if(this.get_component().get_style().iconPosition == null) {
			return "left";
		}
		return this.get_component().get_style().iconPosition;
	}
	,repositionChildren: function() {
		var icon = this.get_component().findComponent(null,haxe_ui_components_Image,false);
		var xpos = this.get_paddingLeft();
		if(icon != null) {
			switch(this.get_iconPosition()) {
			case "left":
				icon.set_left(xpos);
				icon.set_top(this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2);
				xpos += icon.get_componentWidth() + this.get_horizontalSpacing();
				break;
			case "right":
				icon.set_left(this.get_component().get_componentWidth() - icon.get_componentWidth() - this.get_paddingRight());
				icon.set_top(this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2);
				break;
			}
		}
		if(this.get_component().hasTextInput() == true) {
			this.get_component().getTextInput().set_left(xpos);
			this.get_component().getTextInput().set_top(this.get_paddingTop() + this.get_component().get_componentHeight() / 2 - (this.get_component().getTextInput().get_height() + this.get_paddingTop() + this.get_paddingBottom()) / 2);
		}
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		if(this.get_component().hasTextInput() == true) {
			var size = this.get_usableSize();
			this.get_component().getTextInput().set_width(size.width);
			this.get_component().getTextInput().set_height(size.height);
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this.get_component().hasTextInput() == true) {
			if(this.get_component().getTextInput().get_textWidth() + this.get_paddingLeft() + this.get_paddingRight() > size.width) {
				size.width = this.get_component().getTextInput().get_textWidth() + this.get_paddingLeft() + this.get_paddingRight();
			}
			if(this.get_component().getTextInput().get_textHeight() + this.get_paddingTop() + this.get_paddingBottom() > size.height) {
				size.height = this.get_component().getTextInput().get_textHeight() + this.get_paddingTop() + this.get_paddingBottom();
			}
		}
		return size;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var icon = this.get_component().findComponent(null,haxe_ui_components_Image,false);
		if(icon != null) {
			size.width -= icon.get_componentWidth() + this.get_horizontalSpacing();
		}
		return size;
	}
	,__class__: haxe_ui_components__$TextField_TextFieldLayout
	,__properties__: $extend(haxe_ui_layouts_DefaultLayout.prototype.__properties__,{get_iconPosition:"get_iconPosition"})
});
var haxe_ui_components__$TextField_PasswordBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.PasswordBehaviour"] = haxe_ui_components__$TextField_PasswordBehaviour;
haxe_ui_components__$TextField_PasswordBehaviour.__name__ = "haxe.ui.components._TextField.PasswordBehaviour";
haxe_ui_components__$TextField_PasswordBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_PasswordBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	originalValue: null
	,validateData: function() {
		if(this.originalValue == null) {
			this.originalValue = this._value;
		}
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		textfield.getTextInput().set_password(haxe_ui_util_Variant.toBool(this._value));
	}
	,__class__: haxe_ui_components__$TextField_PasswordBehaviour
});
var haxe_ui_components__$TextField_MaxCharsBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.MaxCharsBehaviour"] = haxe_ui_components__$TextField_MaxCharsBehaviour;
haxe_ui_components__$TextField_MaxCharsBehaviour.__name__ = "haxe.ui.components._TextField.MaxCharsBehaviour";
haxe_ui_components__$TextField_MaxCharsBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_MaxCharsBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,textfield.get_text());
	}
	,__class__: haxe_ui_components__$TextField_MaxCharsBehaviour
});
var haxe_ui_components__$TextField_RestrictCharsBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.RestrictCharsBehaviour"] = haxe_ui_components__$TextField_RestrictCharsBehaviour;
haxe_ui_components__$TextField_RestrictCharsBehaviour.__name__ = "haxe.ui.components._TextField.RestrictCharsBehaviour";
haxe_ui_components__$TextField_RestrictCharsBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_RestrictCharsBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	regexp: null
	,validateData: function() {
		var excludeEReg = new EReg("\\^(.-.|.)","gu");
		var excludeChars = "";
		var includeChars = excludeEReg.map(haxe_ui_util_Variant.toString(this._value),function(ereg) {
			excludeChars += ereg.matched(1);
			return "";
		});
		var testRegexpParts = [];
		if(includeChars.length > 0) {
			testRegexpParts.push("[^" + (this._value == null ? "null" : haxe_ui_util_Variant.toString(this._value)) + "]");
		}
		if(excludeChars.length > 0) {
			testRegexpParts.push("[" + excludeChars + "]");
		}
		this.regexp = new EReg("(" + testRegexpParts.join(" | ") + ")","g");
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,textfield.get_text());
	}
	,__class__: haxe_ui_components__$TextField_RestrictCharsBehaviour
});
var haxe_ui_components__$TextField_PlaceholderBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.PlaceholderBehaviour"] = haxe_ui_components__$TextField_PlaceholderBehaviour;
haxe_ui_components__$TextField_PlaceholderBehaviour.__name__ = "haxe.ui.components._TextField.PlaceholderBehaviour";
haxe_ui_components__$TextField_PlaceholderBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_PlaceholderBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,textfield.get_text());
	}
	,__class__: haxe_ui_components__$TextField_PlaceholderBehaviour
});
var haxe_ui_components__$TextField_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.TextBehaviour"] = haxe_ui_components__$TextField_TextBehaviour;
haxe_ui_components__$TextField_TextBehaviour.__name__ = "haxe.ui.components._TextField.TextBehaviour";
haxe_ui_components__$TextField_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,haxe_ui_util_Variant.toString(this._value));
		if(this._value != null && haxe_ui_util_Variant.neq(this._value,haxe_ui_util_Variant.fromString(""))) {
			this._value = haxe_ui_util_Variant.fromString(textfield.getTextInput().get_text());
		}
	}
	,__class__: haxe_ui_components__$TextField_TextBehaviour
});
var haxe_ui_components__$TextField_HtmlTextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.HtmlTextBehaviour"] = haxe_ui_components__$TextField_HtmlTextBehaviour;
haxe_ui_components__$TextField_HtmlTextBehaviour.__name__ = "haxe.ui.components._TextField.HtmlTextBehaviour";
haxe_ui_components__$TextField_HtmlTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_HtmlTextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateHtmlText(textfield,haxe_ui_util_Variant.toString(this._value));
		if(this._value != null && haxe_ui_util_Variant.neq(this._value,haxe_ui_util_Variant.fromString(""))) {
			this._value = haxe_ui_util_Variant.fromString(textfield.getTextInput().get_htmlText());
		}
	}
	,__class__: haxe_ui_components__$TextField_HtmlTextBehaviour
});
var haxe_ui_components__$TextField_IconBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.IconBehaviour"] = haxe_ui_components__$TextField_IconBehaviour;
haxe_ui_components__$TextField_IconBehaviour.__name__ = "haxe.ui.components._TextField.IconBehaviour";
haxe_ui_components__$TextField_IconBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_IconBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		var icon = textfield.findComponent(null,haxe_ui_components_Image,false);
		if((this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) && icon != null) {
			textfield.removeComponent(icon);
		} else {
			if(icon == null) {
				icon = new haxe_ui_components_Image();
				icon.set_id("textfield-icon");
				icon.addClass("icon");
				icon.set_scriptAccess(false);
				textfield.addComponentAt(icon,0);
			}
			icon.set_resource(haxe_ui_util_Variant.fromString(haxe_ui_util_Variant.toString(this._value)));
		}
	}
	,__class__: haxe_ui_components__$TextField_IconBehaviour
});
var haxe_ui_components__$TextField_CaretIndexBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.CaretIndexBehaviour"] = haxe_ui_components__$TextField_CaretIndexBehaviour;
haxe_ui_components__$TextField_CaretIndexBehaviour.__name__ = "haxe.ui.components._TextField.CaretIndexBehaviour";
haxe_ui_components__$TextField_CaretIndexBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_components__$TextField_CaretIndexBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	get: function() {
		return haxe_ui_util_Variant.fromInt(this._component.getTextInput().get_caretIndex());
	}
	,set: function(value) {
		haxe_ui_behaviours_ValueBehaviour.prototype.set.call(this,value);
		this._component.syncComponentValidation();
		this._component.getTextInput().set_caretIndex(haxe_ui_util_Variant.toInt(value));
	}
	,__class__: haxe_ui_components__$TextField_CaretIndexBehaviour
});
var haxe_ui_components__$TextField_SelectionStartIndexBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.SelectionStartIndexBehaviour"] = haxe_ui_components__$TextField_SelectionStartIndexBehaviour;
haxe_ui_components__$TextField_SelectionStartIndexBehaviour.__name__ = "haxe.ui.components._TextField.SelectionStartIndexBehaviour";
haxe_ui_components__$TextField_SelectionStartIndexBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_components__$TextField_SelectionStartIndexBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	get: function() {
		return haxe_ui_util_Variant.fromInt(this._component.getTextInput().get_selectionStartIndex());
	}
	,set: function(value) {
		haxe_ui_behaviours_ValueBehaviour.prototype.set.call(this,value);
		this._component.syncComponentValidation();
		this._component.getTextInput().set_selectionStartIndex(haxe_ui_util_Variant.toInt(value));
	}
	,__class__: haxe_ui_components__$TextField_SelectionStartIndexBehaviour
});
var haxe_ui_components__$TextField_SelectionEndIndexBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.SelectionEndIndexBehaviour"] = haxe_ui_components__$TextField_SelectionEndIndexBehaviour;
haxe_ui_components__$TextField_SelectionEndIndexBehaviour.__name__ = "haxe.ui.components._TextField.SelectionEndIndexBehaviour";
haxe_ui_components__$TextField_SelectionEndIndexBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_components__$TextField_SelectionEndIndexBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	get: function() {
		return haxe_ui_util_Variant.fromInt(this._component.getTextInput().get_selectionEndIndex());
	}
	,set: function(value) {
		haxe_ui_behaviours_ValueBehaviour.prototype.set.call(this,value);
		this._component.syncComponentValidation();
		this._component.getTextInput().set_selectionEndIndex(haxe_ui_util_Variant.toInt(value));
	}
	,__class__: haxe_ui_components__$TextField_SelectionEndIndexBehaviour
});
var haxe_ui_components__$TextField_TextFieldHelper = function() { };
$hxClasses["haxe.ui.components._TextField.TextFieldHelper"] = haxe_ui_components__$TextField_TextFieldHelper;
haxe_ui_components__$TextField_TextFieldHelper.__name__ = "haxe.ui.components._TextField.TextFieldHelper";
haxe_ui_components__$TextField_TextFieldHelper.validateText = function(textfield,text) {
	if(text == null) {
		text = "";
	}
	var placeholderVisible = text.length == 0;
	var password = (js_Boot.__cast(textfield.behaviours.find("password") , haxe_ui_components__$TextField_PasswordBehaviour)).originalValue;
	var regexp = (js_Boot.__cast(textfield.behaviours.find("restrictChars") , haxe_ui_components__$TextField_RestrictCharsBehaviour)).regexp;
	if(textfield.get_maxChars() > 0 && text.length > textfield.get_maxChars() && placeholderVisible == false) {
		text = HxOverrides.substr(text,0,textfield.get_maxChars());
	}
	if(regexp != null) {
		text = text.replace(regexp.r,"");
	}
	if(textfield.get_placeholder() != null) {
		if(textfield.get_focus() == false) {
			if(text.length == 0) {
				text = textfield.get_placeholder();
				textfield.set_password(false);
				textfield.addClass(":empty");
			} else if(text != textfield.get_placeholder()) {
				textfield.set_password(haxe_ui_util_Variant.toBool(password));
				textfield.removeClass(":empty");
			}
		} else {
			textfield.removeClass(":empty");
			textfield.set_password(haxe_ui_util_Variant.toBool(password));
		}
	} else {
		textfield.set_password(haxe_ui_util_Variant.toBool(password));
		if(placeholderVisible == true) {
			textfield.removeClass(":empty");
		}
	}
	textfield.getTextInput().set_text("" + text);
	if(!(textfield._layout == null || textfield._layoutLocked == true)) {
		textfield.invalidateComponent("layout",false);
	}
};
haxe_ui_components__$TextField_TextFieldHelper.validateHtmlText = function(textfield,htmlText) {
	if(htmlText == null) {
		htmlText = "";
	}
	var placeholderVisible = htmlText.length == 0;
	var password = (js_Boot.__cast(textfield.behaviours.find("password") , haxe_ui_components__$TextField_PasswordBehaviour)).originalValue;
	var regexp = (js_Boot.__cast(textfield.behaviours.find("restrictChars") , haxe_ui_components__$TextField_RestrictCharsBehaviour)).regexp;
	if(textfield.get_maxChars() > 0 && htmlText.length > textfield.get_maxChars() && placeholderVisible == false) {
		htmlText = HxOverrides.substr(htmlText,0,textfield.get_maxChars());
	}
	if(regexp != null) {
		htmlText = htmlText.replace(regexp.r,"");
	}
	if(textfield.get_placeholder() != null) {
		if(textfield.get_focus() == false) {
			if(htmlText.length == 0) {
				htmlText = textfield.get_placeholder();
				textfield.set_password(false);
				textfield.addClass(":empty");
			} else if(htmlText != textfield.get_placeholder()) {
				textfield.set_password(haxe_ui_util_Variant.toBool(password));
				textfield.removeClass(":empty");
			}
		} else {
			textfield.removeClass(":empty");
			textfield.set_password(haxe_ui_util_Variant.toBool(password));
		}
	} else {
		textfield.set_password(haxe_ui_util_Variant.toBool(password));
		if(placeholderVisible == true) {
			textfield.removeClass(":empty");
		}
	}
	textfield.getTextInput().set_htmlText("" + htmlText);
	if(!(textfield._layout == null || textfield._layoutLocked == true)) {
		textfield.invalidateComponent("layout",false);
	}
};
var haxe_ui_components__$TextField_Events = function(textfield) {
	haxe_ui_events_Events.call(this,textfield);
	this._textfield = textfield;
};
$hxClasses["haxe.ui.components._TextField.Events"] = haxe_ui_components__$TextField_Events;
haxe_ui_components__$TextField_Events.__name__ = "haxe.ui.components._TextField.Events";
haxe_ui_components__$TextField_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$TextField_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_textfield: null
	,register: function() {
		var _gthis = this;
		if(this._textfield.getTextInput().get_data().onChangedCallback == null) {
			this._textfield.getTextInput().set_multiline(false);
			this._textfield.getTextInput().get_data().onChangedCallback = function() {
				if(_gthis._textfield.classes.indexOf(":empty") != -1 == false) {
					_gthis._textfield.set_text(_gthis._textfield.getTextInput().get_text());
					_gthis._textfield.dispatch(new haxe_ui_events_UIEvent("change"));
				}
			};
		}
		this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		this.registerEvent("focusin",$bind(this,this.onFocusChange));
		this.registerEvent("focusout",$bind(this,this.onFocusChange));
	}
	,unregister: function() {
		this._textfield.getTextInput().get_data().onChangedCallback = null;
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("focusin",$bind(this,this.onFocusChange));
		this.unregisterEvent("focusout",$bind(this,this.onFocusChange));
	}
	,onMouseDown: function(event) {
		this._textfield.set_focus(true);
	}
	,onFocusChange: function(event) {
		if(this._textfield.get_focus() == true) {
			this._textfield.getTextInput().focus();
		} else {
			this._textfield.getTextInput().blur();
		}
		haxe_ui_components__$TextField_TextFieldHelper.validateText(this._textfield,this._textfield.get_text());
	}
	,__class__: haxe_ui_components__$TextField_Events
});
var haxe_ui_components__$TextField_Builder = function(textfield) {
	haxe_ui_core_CompositeBuilder.call(this,textfield);
	this._textfield = textfield;
};
$hxClasses["haxe.ui.components._TextField.Builder"] = haxe_ui_components__$TextField_Builder;
haxe_ui_components__$TextField_Builder.__name__ = "haxe.ui.components._TextField.Builder";
haxe_ui_components__$TextField_Builder.isHtml = function(v) {
	if(v == null) {
		return false;
	} else {
		return v.indexOf("<font ") != -1;
	}
};
haxe_ui_components__$TextField_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$TextField_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_textfield: null
	,applyStyle: function(style) {
		if(style.icon != null) {
			this._textfield.set_icon(haxe_ui_util_Variant.toString(style.icon));
		}
		if(this._textfield.hasTextInput() == true) {
			this._textfield.getTextInput().set_textStyle(style);
			var tmp;
			if((style.contentType == "auto" || style.contentType == "html") && this._textfield.getTextInput().get_supportsHtml()) {
				var v = Std.string(this._textfield.get_text());
				tmp = v == null ? false : v.indexOf("<font ") != -1;
			} else {
				tmp = false;
			}
			if(tmp) {
				this._textfield.set_htmlText(this._textfield.get_text());
			}
		}
	}
	,__class__: haxe_ui_components__$TextField_Builder
});
var haxe_ui_components_VerticalScroll = function() {
	haxe_ui_components_Scroll.call(this);
};
$hxClasses["haxe.ui.components.VerticalScroll"] = haxe_ui_components_VerticalScroll;
haxe_ui_components_VerticalScroll.__name__ = "haxe.ui.components.VerticalScroll";
haxe_ui_components_VerticalScroll.__super__ = haxe_ui_components_Scroll;
haxe_ui_components_VerticalScroll.prototype = $extend(haxe_ui_components_Scroll.prototype,{
	registerBehaviours: function() {
		haxe_ui_components_Scroll.prototype.registerBehaviours.call(this);
		this.behaviours.register("posFromCoord",haxe_ui_components__$VerticalScroll_PosFromCoord);
		this.behaviours.register("applyPageFromCoord",haxe_ui_components__$VerticalScroll_ApplyPageFromCoord);
	}
	,createChildren: function() {
		haxe_ui_components_Scroll.prototype.createChildren.call(this);
		if(this.get_componentHeight() <= 0) {
			this.set_componentHeight(150);
		}
	}
	,createDefaults: function() {
		haxe_ui_components_Scroll.prototype.createDefaults.call(this);
		this._defaultLayoutClass = haxe_ui_components__$VerticalScroll_VerticalScrollLayout;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Scroll.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_VerticalScroll();
	}
	,__class__: haxe_ui_components_VerticalScroll
});
var haxe_ui_components__$VerticalScroll_PosFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._VerticalScroll.PosFromCoord"] = haxe_ui_components__$VerticalScroll_PosFromCoord;
haxe_ui_components__$VerticalScroll_PosFromCoord.__name__ = "haxe.ui.components._VerticalScroll.PosFromCoord";
haxe_ui_components__$VerticalScroll_PosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$VerticalScroll_PosFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var deinc = this._component.findComponent("scroll-deinc-button");
		var thumb = this._component.findComponent("scroll-thumb-button");
		var ypos = p.y;
		var minY = 0;
		if(deinc != null && deinc.get_hidden() == false) {
			minY = deinc.get_height() + scroll.get_layout().get_verticalSpacing();
		}
		var maxY = scroll.get_layout().get_usableHeight() - thumb.get_height();
		if(deinc != null && deinc.get_hidden() == false) {
			maxY += deinc.get_height() + scroll.get_layout().get_verticalSpacing();
		}
		if(ypos < minY) {
			ypos = minY;
		} else if(ypos > maxY) {
			ypos = maxY;
		}
		var ucy = scroll.get_layout().get_usableHeight();
		ucy -= thumb.get_height();
		var m = scroll.get_max() - scroll.get_min() | 0;
		var v = ypos - minY;
		var value = scroll.get_min() + v / ucy * m;
		return haxe_ui_util_Variant.fromFloat(value);
	}
	,__class__: haxe_ui_components__$VerticalScroll_PosFromCoord
});
var haxe_ui_components__$VerticalScroll_ApplyPageFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._VerticalScroll.ApplyPageFromCoord"] = haxe_ui_components__$VerticalScroll_ApplyPageFromCoord;
haxe_ui_components__$VerticalScroll_ApplyPageFromCoord.__name__ = "haxe.ui.components._VerticalScroll.ApplyPageFromCoord";
haxe_ui_components__$VerticalScroll_ApplyPageFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$VerticalScroll_ApplyPageFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var thumb = this._component.findComponent("scroll-thumb-button");
		if(p.y < thumb.get_screenTop()) {
			scroll.set_pos(scroll.get_pos() - scroll.get_pageSize());
		} else if(p.y > thumb.get_screenTop() + thumb.get_height()) {
			scroll.set_pos(scroll.get_pos() + scroll.get_pageSize());
		}
		return null;
	}
	,__class__: haxe_ui_components__$VerticalScroll_ApplyPageFromCoord
});
var haxe_ui_components__$VerticalScroll_VerticalScrollLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._VerticalScroll.VerticalScrollLayout"] = haxe_ui_components__$VerticalScroll_VerticalScrollLayout;
haxe_ui_components__$VerticalScroll_VerticalScrollLayout.__name__ = "haxe.ui.components._VerticalScroll.VerticalScrollLayout";
haxe_ui_components__$VerticalScroll_VerticalScrollLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$VerticalScroll_VerticalScrollLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			if(scroll.get_min() == scroll.get_max()) {
				thumb.hide();
			} else {
				var m = scroll.get_max() - scroll.get_min();
				var ucy = this.get_usableHeight();
				var thumbHeight = scroll.get_pageSize() / m * ucy;
				if(scroll.get_thumbSize() != null) {
					thumbHeight = scroll.get_thumbSize();
				}
				if(thumbHeight < this.get_innerWidth()) {
					thumbHeight = this.get_innerWidth();
				} else if(thumbHeight > ucy) {
					thumbHeight = ucy;
				}
				if(thumbHeight > 0 && isNaN(thumbHeight) == false) {
					thumb.set_height(thumbHeight);
				}
				thumb.show();
			}
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(inc != null && this.hidden(inc) == false) {
			inc.set_top(this.get_component().get_height() - inc.get_height() - this.get_paddingBottom());
		}
		var scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var u = this.get_usableHeight();
			u -= thumb.get_height();
			var y = (scroll.get_pos() - scroll.get_min()) / m * u;
			y += this.get_paddingTop();
			if(deinc != null && this.hidden(deinc) == false) {
				y += deinc.get_height() + this.get_verticalSpacing();
			}
			thumb.set_left(Math.round(thumb.get_left()));
			thumb.set_top(y);
		}
	}
	,get_usableHeight: function() {
		var ucy = this.get_innerHeight();
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(deinc != null && this.hidden(deinc) == false) {
			ucy -= deinc.get_height() + this.get_verticalSpacing();
		}
		if(inc != null && this.hidden(inc) == false) {
			ucy -= inc.get_height() + this.get_verticalSpacing();
		}
		return ucy;
	}
	,__class__: haxe_ui_components__$VerticalScroll_VerticalScrollLayout
});
var haxe_ui_components_popups_ColorPickerPopup = function() {
	this._liveTracking = true;
	haxe_ui_components_DropDown.call(this);
	var c0 = new haxe_ui_core_ItemRenderer();
	c0.set_percentWidth(100.);
	var c1 = new haxe_ui_containers_Box();
	c1.set_id("selectedColorPreviewContainer");
	c1.set_percentWidth(100.);
	var c2 = new haxe_ui_containers_Box();
	c2.set_id("selectedColorPreview");
	c2.set_percentWidth(100.);
	c2.set_styleString("background-color:#ff0000");
	var c3 = new haxe_ui_components_Label();
	c3.set_text("");
	c2.addComponent(c3);
	c1.addComponent(c2);
	c0.addComponent(c1);
	this.addComponent(c0);
	this.set_width(65.);
	this.set_type("color");
	this.bindingRoot = true;
	var this1 = haxe_ui_components_DropDownBuilder.HANDLER_MAP;
	var value = haxe_ui_components_popups__$ColorPickerPopup_ColorPickerPopupHandler.__name__;
	this1.h["color"] = value;
};
$hxClasses["haxe.ui.components.popups.ColorPickerPopup"] = haxe_ui_components_popups_ColorPickerPopup;
haxe_ui_components_popups_ColorPickerPopup.__name__ = "haxe.ui.components.popups.ColorPickerPopup";
haxe_ui_components_popups_ColorPickerPopup.__super__ = haxe_ui_components_DropDown;
haxe_ui_components_popups_ColorPickerPopup.prototype = $extend(haxe_ui_components_DropDown.prototype,{
	_liveTracking: null
	,get_liveTracking: function() {
		return this._liveTracking;
	}
	,set_liveTracking: function(value) {
		this._liveTracking = value;
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_components_DropDown.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_DropDown.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_popups_ColorPickerPopup();
	}
	,__class__: haxe_ui_components_popups_ColorPickerPopup
	,__properties__: $extend(haxe_ui_components_DropDown.prototype.__properties__,{set_liveTracking:"set_liveTracking",get_liveTracking:"get_liveTracking"})
});
var haxe_ui_components_popups__$ColorPickerPopup_ColorPickerPopupHandler = function(dropdown) {
	this._cachedSelectedColor = null;
	this._view = null;
	haxe_ui_components_DropDownHandler.call(this,dropdown);
};
$hxClasses["haxe.ui.components.popups._ColorPickerPopup.ColorPickerPopupHandler"] = haxe_ui_components_popups__$ColorPickerPopup_ColorPickerPopupHandler;
haxe_ui_components_popups__$ColorPickerPopup_ColorPickerPopupHandler.__name__ = "haxe.ui.components.popups._ColorPickerPopup.ColorPickerPopupHandler";
haxe_ui_components_popups__$ColorPickerPopup_ColorPickerPopupHandler.__super__ = haxe_ui_components_DropDownHandler;
haxe_ui_components_popups__$ColorPickerPopup_ColorPickerPopupHandler.prototype = $extend(haxe_ui_components_DropDownHandler.prototype,{
	_view: null
	,get_component: function() {
		if(this._view == null) {
			this._view = new haxe_ui_components_popups__$ColorPickerPopup_ColorPickerPopupView();
			this._view.dropdown = this._dropdown;
			this._view.set_liveTracking((js_Boot.__cast(this._dropdown , haxe_ui_components_popups_ColorPickerPopup)).get_liveTracking());
			this._view.set_currentColor(this._cachedSelectedColor);
			this._view.set_onChange($bind(this,this.onColorChange));
		}
		return this._view;
	}
	,prepare: function(wrapper) {
		haxe_ui_components_DropDownHandler.prototype.prepare.call(this,wrapper);
		if(this._cachedSelectedColor != null) {
			this.set_selectedItem(this._cachedSelectedColor);
		}
	}
	,_cachedSelectedColor: null
	,get_selectedItem: function() {
		if(this._view != null) {
			this._cachedSelectedColor = this._view.get_currentColor();
			return this._view.get_currentColor();
		}
		return this._cachedSelectedColor;
	}
	,set_selectedItem: function(value) {
		if(typeof(value) == "string") {
			this._cachedSelectedColor = haxe_ui_util_Color.fromString(value);
		} else {
			this._cachedSelectedColor = value;
		}
		if(this._view != null) {
			this._view.set_currentColor(this._cachedSelectedColor);
		}
		this.onColorChange(null);
		return value;
	}
	,onColorChange: function(e) {
		if(this._view != null) {
			this._cachedSelectedColor = this._view.get_currentColor();
		}
		var itemRenderer = this._dropdown.findComponent(null,haxe_ui_core_ItemRenderer);
		if(itemRenderer != null) {
			var preview = itemRenderer.findComponent("selectedColorPreview",haxe_ui_containers_Box);
			if(preview != null) {
				preview.set_backgroundColor(haxe_ui_util_Color.fromString(haxe_ui_util_Color.toHex(this._cachedSelectedColor)));
				var event = new haxe_ui_events_UIEvent("change");
				event.value = haxe_ui_util_Variant.fromString(haxe_ui_util_Color.toHex(this._cachedSelectedColor));
				this._dropdown.dispatch(event);
			}
		}
	}
	,__class__: haxe_ui_components_popups__$ColorPickerPopup_ColorPickerPopupHandler
});
var haxe_ui_components_popups__$ColorPickerPopup_ColorPickerPopupView = function() {
	this._liveTracking = true;
	this.dropdown = null;
	haxe_ui_containers_VBox.call(this);
	var c0 = new haxe_ui_components_ColorPicker();
	c0.set_id("picker");
	this.addComponent(c0);
	var c1 = new haxe_ui_containers_Box();
	c1.set_id("cancelApplyButtons");
	c1.set_percentWidth(100.);
	c1.set_styleString("padding-top: 5px;");
	c1.set_hidden(true);
	var c2 = new haxe_ui_containers_HBox();
	c2.set_horizontalAlign("right");
	var c3 = new haxe_ui_components_Button();
	c3.set_id("cancelButton");
	c3.set_text("Cancel");
	c3.set_styleNames("text-small");
	c3.set_styleString("padding: 4px 8px;");
	c2.addComponent(c3);
	var c4 = new haxe_ui_components_Button();
	c4.set_id("applyButton");
	c4.set_text("Apply");
	c4.set_styleNames("text-small");
	c4.set_styleString("padding: 4px 8px;");
	c2.addComponent(c4);
	c1.addComponent(c2);
	this.addComponent(c1);
	this.set_styleString("spacing:0;padding:5px;");
	this.bindingRoot = true;
	this.picker = c0;
	this.cancelButton = c3;
	this.cancelApplyButtons = c1;
	this.applyButton = c4;
	var c = this.picker;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onPickerChange));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "picker" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components.popups._ColorPickerPopup.ColorPickerPopupView", methodName : "new"});
	}
	var c = this.cancelButton;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onCancel));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "cancelButton" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components.popups._ColorPickerPopup.ColorPickerPopupView", methodName : "new"});
	}
	var c = this.applyButton;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onApply));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "applyButton" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "haxe.ui.components.popups._ColorPickerPopup.ColorPickerPopupView", methodName : "new"});
	}
};
$hxClasses["haxe.ui.components.popups._ColorPickerPopup.ColorPickerPopupView"] = haxe_ui_components_popups__$ColorPickerPopup_ColorPickerPopupView;
haxe_ui_components_popups__$ColorPickerPopup_ColorPickerPopupView.__name__ = "haxe.ui.components.popups._ColorPickerPopup.ColorPickerPopupView";
haxe_ui_components_popups__$ColorPickerPopup_ColorPickerPopupView.__super__ = haxe_ui_containers_VBox;
haxe_ui_components_popups__$ColorPickerPopup_ColorPickerPopupView.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	dropdown: null
	,onPickerChange: function(_) {
		if(this._liveTracking == true) {
			this.dispatch(new haxe_ui_events_UIEvent("change"));
		}
	}
	,get_currentColor: function() {
		return this.picker.get_currentColor();
	}
	,set_currentColor: function(value) {
		this.picker.set_currentColor(value);
		return value;
	}
	,_liveTracking: null
	,get_liveTracking: function() {
		return this._liveTracking;
	}
	,set_liveTracking: function(value) {
		this._liveTracking = value;
		if(this._liveTracking == true) {
			this.cancelApplyButtons.hide();
		} else {
			this.cancelApplyButtons.show();
		}
		return value;
	}
	,onCancel: function(_) {
		this.dropdown.hideDropDown();
	}
	,onApply: function(_) {
		this.dispatch(new haxe_ui_events_UIEvent("change"));
		this.dropdown.hideDropDown();
	}
	,picker: null
	,cancelButton: null
	,cancelApplyButtons: null
	,applyButton: null
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_popups__$ColorPickerPopup_ColorPickerPopupView();
	}
	,__class__: haxe_ui_components_popups__$ColorPickerPopup_ColorPickerPopupView
	,__properties__: $extend(haxe_ui_containers_VBox.prototype.__properties__,{set_liveTracking:"set_liveTracking",get_liveTracking:"get_liveTracking",set_currentColor:"set_currentColor",get_currentColor:"get_currentColor"})
});
var haxe_ui_containers_ButtonBar = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.containers.ButtonBar"] = haxe_ui_containers_ButtonBar;
haxe_ui_containers_ButtonBar.__name__ = "haxe.ui.containers.ButtonBar";
haxe_ui_containers_ButtonBar.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_containers_ButtonBar.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_ButtonBar.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
		this.behaviours.register("toggle",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(true));
		this.behaviours.register("allowUnselection",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("selectedIndex",haxe_ui_containers__$ButtonBar_SelectedIndex);
		this.behaviours.register("selectedButton",haxe_ui_containers__$ButtonBar_SelectedButton);
	}
	,get_toggle: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("toggle"));
	}
	,set_toggle: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("toggle",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"toggle"));
		return value;
	}
	,get_allowUnselection: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("allowUnselection"));
	}
	,set_allowUnselection: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("allowUnselection",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"allowUnselection"));
		return value;
	}
	,get_selectedIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedIndex"));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,get_selectedButton: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("selectedButton"));
	}
	,set_selectedButton: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedButton",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedButton"));
		return value;
	}
	,get_value: function() {
		return this.get_selectedIndex();
	}
	,set_value: function(value) {
		this.set_selectedIndex(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		c.set_toggle(this.get_toggle());
		c.set_allowUnselection(this.get_allowUnselection());
		c.set_selectedIndex(this.get_selectedIndex());
		if(this.get_selectedButton() != null) {
			c.set_selectedButton(this.get_selectedButton());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_ButtonBar();
	}
	,registerComposite: function() {
		haxe_ui_containers_Box.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers__$ButtonBar_Events;
		this._compositeBuilderClass = haxe_ui_containers_ButtonBarBuilder;
	}
	,__class__: haxe_ui_containers_ButtonBar
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_selectedButton:"set_selectedButton",get_selectedButton:"get_selectedButton",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",set_allowUnselection:"set_allowUnselection",get_allowUnselection:"get_allowUnselection",set_toggle:"set_toggle",get_toggle:"get_toggle"})
});
var haxe_ui_containers__$ButtonBar_SelectedIndex = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ButtonBar.SelectedIndex"] = haxe_ui_containers__$ButtonBar_SelectedIndex;
haxe_ui_containers__$ButtonBar_SelectedIndex.__name__ = "haxe.ui.containers._ButtonBar.SelectedIndex";
haxe_ui_containers__$ButtonBar_SelectedIndex.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ButtonBar_SelectedIndex.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers_ButtonBarBuilder);
		var currentButton = builder._currentButton;
		var button = js_Boot.__cast(this._component.getComponentAt(haxe_ui_util_Variant.toInt(this._value)) , haxe_ui_components_Button);
		if(currentButton == button) {
			return;
		}
		if(currentButton != null && haxe_ui_util_Variant.toInt(this._value) < this._component.get_numComponents()) {
			builder._currentButton.set_selected(false);
		}
		if(button != null) {
			button.set_selected(true);
			builder._currentButton = button;
		}
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_containers__$ButtonBar_SelectedIndex
});
var haxe_ui_containers__$ButtonBar_SelectedButton = function(bar) {
	haxe_ui_behaviours_DataBehaviour.call(this,bar);
	this._bar = bar;
};
$hxClasses["haxe.ui.containers._ButtonBar.SelectedButton"] = haxe_ui_containers__$ButtonBar_SelectedButton;
haxe_ui_containers__$ButtonBar_SelectedButton.__name__ = "haxe.ui.containers._ButtonBar.SelectedButton";
haxe_ui_containers__$ButtonBar_SelectedButton.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ButtonBar_SelectedButton.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_bar: null
	,get: function() {
		var _g = 0;
		var _this = this._component;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(((child) instanceof haxe_ui_components_Button) && (js_Boot.__cast(child , haxe_ui_components_Button)).get_selected() == true) {
				return haxe_ui_util_Variant.fromComponent(child);
			}
		}
		return null;
	}
	,set: function(value) {
		this._bar.set_selectedIndex(this._component.getComponentIndex(haxe_ui_util_Variant.toComponent(value)));
	}
	,__class__: haxe_ui_containers__$ButtonBar_SelectedButton
});
var haxe_ui_containers__$ButtonBar_Events = function(bar) {
	haxe_ui_events_Events.call(this,bar);
	this._bar = bar;
};
$hxClasses["haxe.ui.containers._ButtonBar.Events"] = haxe_ui_containers__$ButtonBar_Events;
haxe_ui_containers__$ButtonBar_Events.__name__ = "haxe.ui.containers._ButtonBar.Events";
haxe_ui_containers__$ButtonBar_Events.__super__ = haxe_ui_events_Events;
haxe_ui_containers__$ButtonBar_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_bar: null
	,register: function() {
		var buttons = this._target.findComponents(null,haxe_ui_components_Button,1);
		var _g = 0;
		while(_g < buttons.length) {
			var button = buttons[_g];
			++_g;
			if(button.hasEvent("change",$bind(this,this.onButtonChanged)) == false) {
				button.registerEvent("change",$bind(this,this.onButtonChanged));
			}
		}
	}
	,unregister: function() {
		var buttons = this._target.findComponents(null,haxe_ui_components_Button,1);
		var _g = 0;
		while(_g < buttons.length) {
			var button = buttons[_g];
			++_g;
			button.unregisterEvent("change",$bind(this,this.onButtonChanged));
		}
	}
	,onButtonChanged: function(event) {
		var button = js_Boot.__cast(event.target , haxe_ui_components_Button);
		var index = this._bar.getComponentIndex(button);
		if(this._bar.get_allowUnselection() == false && index == this._bar.get_selectedIndex() && button.get_selected() == false) {
			button.set_selected(true);
			return;
		}
		if(button.get_selected() == true) {
			this._bar.set_selectedIndex(index);
		}
	}
	,__class__: haxe_ui_containers__$ButtonBar_Events
});
var haxe_ui_containers_ButtonBarBuilder = function(bar) {
	haxe_ui_core_CompositeBuilder.call(this,bar);
	this._bar = bar;
	this.showWarning();
};
$hxClasses["haxe.ui.containers.ButtonBarBuilder"] = haxe_ui_containers_ButtonBarBuilder;
haxe_ui_containers_ButtonBarBuilder.__name__ = "haxe.ui.containers.ButtonBarBuilder";
haxe_ui_containers_ButtonBarBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_ButtonBarBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_bar: null
	,_currentButton: null
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_components_Button)) {
			(js_Boot.__cast(child , haxe_ui_components_Button)).set_toggle(this._bar.get_toggle());
		}
		return null;
	}
	,onComponentAdded: function(child) {
		this._component.registerInternalEvents(null,true);
	}
	,onReady: function() {
		this._component.registerInternalEvents(null,true);
	}
	,applyStyle: function(style) {
		if(style.direction != null) {
			var direction = style.direction;
			if(direction == "vertical") {
				this._component.swapClass("vertical-button-bar","horizontal-button-bar");
			} else if(direction == "horizontal") {
				this._component.swapClass("horizontal-button-bar","vertical-button-bar");
			}
			this._component.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(direction));
		}
	}
	,showWarning: function() {
		haxe_Log.trace("WARNING: trying to create an instance of 'ButtonBar' directly, use either 'HorizontalButtonBar' or 'VerticalButtonBar'",{ fileName : "haxe/ui/containers/ButtonBar.hx", lineNumber : 166, className : "haxe.ui.containers.ButtonBarBuilder", methodName : "showWarning"});
	}
	,__class__: haxe_ui_containers_ButtonBarBuilder
});
var haxe_ui_containers_CalendarView = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.containers.CalendarView"] = haxe_ui_containers_CalendarView;
haxe_ui_containers_CalendarView.__name__ = "haxe.ui.containers.CalendarView";
haxe_ui_containers_CalendarView.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_CalendarView.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
		this.behaviours.register("selectedDate",haxe_ui_containers__$CalendarView_SelectedDateBehaviour,haxe_ui_util_Variant.fromDate(new Date()));
	}
	,get_selectedDate: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDate(this.behaviours.get("selectedDate"));
	}
	,set_selectedDate: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedDate",haxe_ui_util_Variant.fromDate(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedDate"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_CalendarView();
	}
	,registerComposite: function() {
		haxe_ui_containers_Box.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers__$CalendarView_Events;
		this._defaultLayoutClass = haxe_ui_layouts_VerticalLayout;
		this._compositeBuilderClass = haxe_ui_containers__$CalendarView_Builder;
	}
	,__class__: haxe_ui_containers_CalendarView
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_selectedDate:"set_selectedDate",get_selectedDate:"get_selectedDate"})
});
var haxe_ui_containers__$CalendarView_SelectedDateBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._CalendarView.SelectedDateBehaviour"] = haxe_ui_containers__$CalendarView_SelectedDateBehaviour;
haxe_ui_containers__$CalendarView_SelectedDateBehaviour.__name__ = "haxe.ui.containers._CalendarView.SelectedDateBehaviour";
haxe_ui_containers__$CalendarView_SelectedDateBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$CalendarView_SelectedDateBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		return haxe_ui_util_Variant.fromDate(this._component.findComponent(null,haxe_ui_components_Calendar).get_selectedDate());
	}
	,set: function(value) {
		this._component.findComponent(null,haxe_ui_components_Calendar).set_selectedDate(haxe_ui_util_Variant.toDate(value));
	}
	,__class__: haxe_ui_containers__$CalendarView_SelectedDateBehaviour
});
var haxe_ui_containers__$CalendarView_Events = function(target) {
	haxe_ui_events_Events.call(this,target);
};
$hxClasses["haxe.ui.containers._CalendarView.Events"] = haxe_ui_containers__$CalendarView_Events;
haxe_ui_containers__$CalendarView_Events.__name__ = "haxe.ui.containers._CalendarView.Events";
haxe_ui_containers__$CalendarView_Events.__super__ = haxe_ui_events_Events;
haxe_ui_containers__$CalendarView_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	register: function() {
		var button = this._target.findComponent("prev-month");
		if(button != null && button.hasEvent("click") == false) {
			button.registerEvent("click",$bind(this,this.onPrevMonth));
		}
		var button = this._target.findComponent("next-month");
		if(button != null && button.hasEvent("click") == false) {
			button.registerEvent("click",$bind(this,this.onNextMonth));
		}
		var stepper = this._target.findComponent("current-year");
		if(stepper != null && stepper.hasEvent("change") == false) {
			stepper.registerEvent("change",$bind(this,this.onYearChange));
		}
		if(this._target.findComponent(null,haxe_ui_components_Calendar).hasEvent("datechange",$bind(this,this.onDateChange)) == false) {
			this._target.findComponent(null,haxe_ui_components_Calendar).registerEvent("datechange",$bind(this,this.onDateChange));
		}
		if(this._target.findComponent(null,haxe_ui_components_Calendar).hasEvent("change",$bind(this,this.onCalendarChange)) == false) {
			this._target.findComponent(null,haxe_ui_components_Calendar).registerEvent("change",$bind(this,this.onCalendarChange));
		}
		this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
	}
	,onPrevMonth: function(event) {
		this._target.findComponent(null,haxe_ui_components_Calendar).previousMonth();
	}
	,onNextMonth: function(event) {
		this._target.findComponent(null,haxe_ui_components_Calendar).nextMonth();
	}
	,onYearChange: function(event) {
		var calendar = this._target.findComponent(null,haxe_ui_components_Calendar);
		var stepper = this._target.findComponent("current-year");
		if(stepper.get_pos() > calendar.get_date().getFullYear()) {
			calendar.nextYear();
		} else if(stepper.get_pos() < calendar.get_date().getFullYear()) {
			calendar.previousYear();
		}
	}
	,onDateChange: function(event) {
		var calendar = this._target.findComponent(null,haxe_ui_components_Calendar);
		var monthName = haxe_ui_containers_CalendarView.MONTH_NAMES[calendar.get_date().getMonth()];
		this._target.findComponent("current-month",haxe_ui_components_Label).set_text(monthName + "  " + calendar.get_date().getFullYear());
	}
	,onCalendarChange: function(event) {
		var calendar = this._target.findComponent(null,haxe_ui_components_Calendar);
		var stepper = this._target.findComponent("current-year");
		stepper.set_pos(calendar.get_selectedDate().getFullYear());
		this._target.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,onMouseWheel: function(event) {
		if(event.delta >= 1) {
			this._target.findComponent(null,haxe_ui_components_Calendar).nextMonth();
		} else {
			this._target.findComponent(null,haxe_ui_components_Calendar).previousMonth();
		}
	}
	,__class__: haxe_ui_containers__$CalendarView_Events
});
var haxe_ui_containers__$CalendarView_Builder = function(calendarView) {
	haxe_ui_core_CompositeBuilder.call(this,calendarView);
	this._calendarView = calendarView;
};
$hxClasses["haxe.ui.containers._CalendarView.Builder"] = haxe_ui_containers__$CalendarView_Builder;
haxe_ui_containers__$CalendarView_Builder.__name__ = "haxe.ui.containers._CalendarView.Builder";
haxe_ui_containers__$CalendarView_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$CalendarView_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_calendarView: null
	,create: function() {
		var box = new haxe_ui_containers_Box();
		box.set_percentWidth(100);
		var button = new haxe_ui_components_Button();
		button.set_id("prev-month");
		box.addComponent(button);
		var hbox = new haxe_ui_containers_HBox();
		hbox.set_horizontalAlign("center");
		hbox.set_verticalAlign("center");
		var label = new haxe_ui_components_Label();
		label.set_id("current-month");
		var now = new Date();
		label.set_text(haxe_ui_containers_CalendarView.MONTH_NAMES[now.getMonth()] + "  " + now.getFullYear());
		hbox.addComponent(label);
		var stepper = new haxe_ui_components_Stepper();
		stepper.set_id("current-year");
		stepper.set_min(0);
		stepper.set_max(now.getFullYear() + 1000);
		stepper.set_pos(now.getFullYear());
		stepper.set_repeater(false);
		hbox.addComponent(stepper);
		box.addComponent(hbox);
		var button = new haxe_ui_components_Button();
		button.set_id("next-month");
		button.set_horizontalAlign("right");
		box.addComponent(button);
		this._calendarView.addComponent(box);
		var calendar = new haxe_ui_components_Calendar();
		calendar.set_horizontalAlign("center");
		this._calendarView.addComponent(calendar);
	}
	,__class__: haxe_ui_containers__$CalendarView_Builder
});
var haxe_ui_containers__$Card_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._Card.TextBehaviour"] = haxe_ui_containers__$Card_TextBehaviour;
haxe_ui_containers__$Card_TextBehaviour.__name__ = "haxe.ui.containers._Card.TextBehaviour";
haxe_ui_containers__$Card_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$Card_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$Card_Builder);
		builder.getTitleLabel().set_text(haxe_ui_util_Variant.toString(this._value));
	}
	,__class__: haxe_ui_containers__$Card_TextBehaviour
});
var haxe_ui_containers__$Card_Builder = function(card) {
	haxe_ui_core_CompositeBuilder.call(this,card);
	this._card = card;
};
$hxClasses["haxe.ui.containers._Card.Builder"] = haxe_ui_containers__$Card_Builder;
haxe_ui_containers__$Card_Builder.__name__ = "haxe.ui.containers._Card.Builder";
haxe_ui_containers__$Card_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$Card_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_card: null
	,getTitleLabel: function() {
		var titleContainer = this.getTitleContainer();
		var titleLabel = titleContainer.findComponent("card-title-label",haxe_ui_components_Label);
		if(titleLabel == null) {
			this._card.set_layoutName("vertical");
			var hbox = titleContainer.findComponent("card-title-box",haxe_ui_containers_HBox);
			if(hbox == null) {
				hbox = new haxe_ui_containers_HBox();
				hbox.addClass("card-title-box");
				hbox.set_id("card-title-box");
				hbox.set_scriptAccess(false);
				titleContainer.addComponent(hbox);
			}
			titleLabel = new haxe_ui_components_Label();
			titleLabel.addClass("card-title-label");
			titleLabel.set_id("card-title-label");
			titleLabel.set_scriptAccess(false);
			hbox.addComponentAt(titleLabel,0);
			var line = titleContainer.findComponent("card-title-line",haxe_ui_core_Component);
			if(line == null) {
				line = new haxe_ui_core_Component();
				line.set_id("card-title-line");
				line.addClass("card-title-line");
				line.set_scriptAccess(false);
				titleContainer.addComponent(line);
			}
		}
		return titleLabel;
	}
	,getTitleContainer: function() {
		var titleContainer = this._component.findComponent("card-title-container",haxe_ui_containers_VBox);
		if(titleContainer == null) {
			titleContainer = new haxe_ui_containers_VBox();
			titleContainer.addClass("card-title-container");
			titleContainer.set_id("card-title-container");
			titleContainer.set_scriptAccess(false);
			this._card.addComponentAt(titleContainer,0);
		}
		return titleContainer;
	}
	,__class__: haxe_ui_containers__$Card_Builder
});
var haxe_ui_containers_Header = function() {
	haxe_ui_containers_HBox.call(this);
	this.set_layout(new haxe_ui_containers__$Header_Layout());
};
$hxClasses["haxe.ui.containers.Header"] = haxe_ui_containers_Header;
haxe_ui_containers_Header.__name__ = "haxe.ui.containers.Header";
haxe_ui_containers_Header.__super__ = haxe_ui_containers_HBox;
haxe_ui_containers_Header.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	registerComposite: function() {
		haxe_ui_containers_HBox.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_containers__$Header_Layout;
		this._compositeBuilderClass = haxe_ui_containers__$Header_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Header();
	}
	,__class__: haxe_ui_containers_Header
});
var haxe_ui_containers__$Header_Builder = function(header) {
	haxe_ui_core_CompositeBuilder.call(this,header);
	this._header = header;
};
$hxClasses["haxe.ui.containers._Header.Builder"] = haxe_ui_containers__$Header_Builder;
haxe_ui_containers__$Header_Builder.__name__ = "haxe.ui.containers._Header.Builder";
haxe_ui_containers__$Header_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$Header_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_header: null
	,addComponent: function(child) {
		this.addEventListeners(child);
		return null;
	}
	,addComponentAt: function(child,index) {
		this.addEventListeners(child);
		return null;
	}
	,addEventListeners: function(c) {
		if(!((c) instanceof haxe_ui_components_Column)) {
			return;
		}
		var column = js_Boot.__cast(c , haxe_ui_components_Column);
		column.registerEvent("sortchanged",$bind(this,this.onSortChanged));
	}
	,onSortChanged: function(e) {
		var _g = 0;
		var _this = this._header;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(e.target == c) {
				this._header.dispatch(e);
			} else {
				(js_Boot.__cast(c , haxe_ui_components_Column)).set_sortDirection(null);
			}
		}
	}
	,__class__: haxe_ui_containers__$Header_Builder
});
var haxe_ui_containers__$Header_Layout = function() {
	haxe_ui_layouts_HorizontalLayout.call(this);
};
$hxClasses["haxe.ui.containers._Header.Layout"] = haxe_ui_containers__$Header_Layout;
haxe_ui_containers__$Header_Layout.__name__ = "haxe.ui.containers._Header.Layout";
haxe_ui_containers__$Header_Layout.__super__ = haxe_ui_layouts_HorizontalLayout;
haxe_ui_containers__$Header_Layout.prototype = $extend(haxe_ui_layouts_HorizontalLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_HorizontalLayout.prototype.resizeChildren.call(this);
		var max = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_height() > max) {
				max = child.get_height();
			}
		}
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(!((child) instanceof haxe_ui_components_Column)) {
				continue;
			}
			if(child.get_text() == null || child.get_text().length == 0 || child.get_height() < max) {
				child.set_height(max);
			}
		}
	}
	,__class__: haxe_ui_containers__$Header_Layout
});
var haxe_ui_containers_HorizontalButtonBar = function() {
	haxe_ui_containers_ButtonBar.call(this);
};
$hxClasses["haxe.ui.containers.HorizontalButtonBar"] = haxe_ui_containers_HorizontalButtonBar;
haxe_ui_containers_HorizontalButtonBar.__name__ = "haxe.ui.containers.HorizontalButtonBar";
haxe_ui_containers_HorizontalButtonBar.__super__ = haxe_ui_containers_ButtonBar;
haxe_ui_containers_HorizontalButtonBar.prototype = $extend(haxe_ui_containers_ButtonBar.prototype,{
	registerComposite: function() {
		haxe_ui_containers_ButtonBar.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_containers__$HorizontalButtonBar_Layout;
		this._compositeBuilderClass = haxe_ui_containers__$HorizontalButtonBar_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_ButtonBar.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ButtonBar.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_HorizontalButtonBar();
	}
	,__class__: haxe_ui_containers_HorizontalButtonBar
});
var haxe_ui_containers__$HorizontalButtonBar_Layout = function() {
	haxe_ui_layouts_HorizontalLayout.call(this);
};
$hxClasses["haxe.ui.containers._HorizontalButtonBar.Layout"] = haxe_ui_containers__$HorizontalButtonBar_Layout;
haxe_ui_containers__$HorizontalButtonBar_Layout.__name__ = "haxe.ui.containers._HorizontalButtonBar.Layout";
haxe_ui_containers__$HorizontalButtonBar_Layout.__super__ = haxe_ui_layouts_HorizontalLayout;
haxe_ui_containers__$HorizontalButtonBar_Layout.prototype = $extend(haxe_ui_layouts_HorizontalLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_HorizontalLayout.prototype.resizeChildren.call(this);
		var max = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_height() > max) {
				max = child.get_height();
			}
		}
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_text() == null || child.get_text().length == 0 || child.get_height() < max) {
				child.set_height(max);
			}
		}
	}
	,__class__: haxe_ui_containers__$HorizontalButtonBar_Layout
});
var haxe_ui_containers__$HorizontalButtonBar_Builder = function(bar) {
	haxe_ui_containers_ButtonBarBuilder.call(this,bar);
};
$hxClasses["haxe.ui.containers._HorizontalButtonBar.Builder"] = haxe_ui_containers__$HorizontalButtonBar_Builder;
haxe_ui_containers__$HorizontalButtonBar_Builder.__name__ = "haxe.ui.containers._HorizontalButtonBar.Builder";
haxe_ui_containers__$HorizontalButtonBar_Builder.__super__ = haxe_ui_containers_ButtonBarBuilder;
haxe_ui_containers__$HorizontalButtonBar_Builder.prototype = $extend(haxe_ui_containers_ButtonBarBuilder.prototype,{
	showWarning: function() {
	}
	,__class__: haxe_ui_containers__$HorizontalButtonBar_Builder
});
var haxe_ui_containers_ScrollViewEvents = function(scrollview) {
	this._fadeTimer = null;
	this._containerEventsPaused = false;
	this._lastMousePos = null;
	this._movementThreshold = 3;
	this._inertia = null;
	haxe_ui_events_Events.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers.ScrollViewEvents"] = haxe_ui_containers_ScrollViewEvents;
haxe_ui_containers_ScrollViewEvents.__name__ = "haxe.ui.containers.ScrollViewEvents";
haxe_ui_containers_ScrollViewEvents.__super__ = haxe_ui_events_Events;
haxe_ui_containers_ScrollViewEvents.prototype = $extend(haxe_ui_events_Events.prototype,{
	_scrollview: null
	,register: function() {
		var contents = this._scrollview.findComponent("scrollview-contents",null,false,"css");
		if(contents != null && contents.hasEvent("resize",$bind(this,this.onContentsResized)) == false) {
			contents.registerEvent("resize",$bind(this,this.onContentsResized));
		}
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null && hscroll.hasEvent("change",$bind(this,this.onHScroll)) == false) {
			hscroll.registerEvent("change",$bind(this,this.onHScroll));
		}
		if(hscroll != null && hscroll.hasEvent("scrollscroll",$bind(this,this.onHScrollScroll)) == false) {
			hscroll.registerEvent("scrollscroll",$bind(this,this.onHScrollScroll));
		}
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null && vscroll.hasEvent("change",$bind(this,this.onVScroll)) == false) {
			vscroll.registerEvent("change",$bind(this,this.onVScroll));
		}
		if(vscroll != null && vscroll.hasEvent("scrollscroll",$bind(this,this.onVScrollScroll)) == false) {
			vscroll.registerEvent("scrollscroll",$bind(this,this.onVScrollScroll));
		}
		if(this._scrollview.get_scrollMode() == "drag" || this._scrollview.get_scrollMode() == "inertial") {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		} else if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this._scrollview.hasEvent("shown") == false) {
			this.registerEvent("shown",$bind(this,this.onShown));
		}
		this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
		this.registerEvent("actionstart",$bind(this,this.onActionStart),-100);
	}
	,unregister: function() {
		var contents = this._scrollview.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.unregisterEvent("resize",$bind(this,this.onContentsResized));
		}
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			hscroll.unregisterEvent("change",$bind(this,this.onHScroll));
			hscroll.unregisterEvent("scrollscroll",$bind(this,this.onHScrollScroll));
		}
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.unregisterEvent("change",$bind(this,this.onVScroll));
			vscroll.unregisterEvent("scrollscroll",$bind(this,this.onVScrollScroll));
		}
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("mousewheel",$bind(this,this.onMouseWheel));
		this.unregisterEvent("shown",$bind(this,this.onShown));
		this.unregisterEvent("actionstart",$bind(this,this.onActionStart));
	}
	,onShown: function(event) {
		var _this = this._scrollview;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			if(!(hscroll._layout == null || hscroll._layoutLocked == true)) {
				hscroll.invalidateComponent("layout",false);
			}
		}
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			if(!(vscroll._layout == null || vscroll._layoutLocked == true)) {
				vscroll.invalidateComponent("layout",false);
			}
		}
	}
	,onContentsResized: function(event) {
		this._scrollview.invalidateComponent("scroll");
	}
	,onHScroll: function(event) {
		this._scrollview.invalidateComponent("scroll");
		this._target.dispatch(new haxe_ui_events_ScrollEvent("scrollchange"));
	}
	,onHScrollScroll: function(event) {
		this._target.dispatch(new haxe_ui_events_ScrollEvent("scrollscroll"));
	}
	,onVScroll: function(event) {
		this._scrollview.invalidateComponent("scroll");
		this._target.dispatch(new haxe_ui_events_ScrollEvent("scrollchange"));
	}
	,onVScrollScroll: function(event) {
		this._target.dispatch(new haxe_ui_events_ScrollEvent("scrollscroll"));
	}
	,_offset: null
	,_inertia: null
	,onMouseDown: function(event) {
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll == null && vscroll == null) {
			return;
		}
		this._scrollview.addClass(":down");
		this._lastMousePos = new haxe_ui_geom_Point(event.screenX,event.screenY);
		var componentOffset = this._scrollview.getComponentOffset();
		var under = this._scrollview.findComponentsUnderPoint(event.screenX - componentOffset.x,event.screenY - componentOffset.y);
		var _g = 0;
		while(_g < under.length) {
			var c = under[_g];
			++_g;
			if(c.hasTextInput() || ((c) instanceof haxe_ui_components_Scroll)) {
				return;
			}
		}
		this._offset = new haxe_ui_geom_Point();
		if(hscroll != null) {
			var tmp = hscroll.get_pos();
			this._offset.x = tmp + event.screenX;
		}
		if(vscroll != null) {
			var tmp = vscroll.get_pos();
			this._offset.y = tmp + event.screenY;
		}
		if(this._scrollview.get_scrollMode() == "inertial") {
			if(this._inertia == null) {
				this._inertia = { screen : new haxe_ui_geom_Point(), target : new haxe_ui_geom_Point(), amplitude : new haxe_ui_geom_Point(), direction : new haxe_ui_geom_Point(), timestamp : 0};
			}
			this._inertia.target.x = this._scrollview.get_hscrollPos();
			this._inertia.target.y = this._scrollview.get_vscrollPos();
			this._inertia.amplitude.x = 0;
			this._inertia.amplitude.y = 0;
			this._inertia.screen.x = event.screenX;
			this._inertia.screen.y = event.screenY;
			this._inertia.timestamp = HxOverrides.now() / 1000;
		}
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onMouseUp));
	}
	,_movementThreshold: null
	,_lastMousePos: null
	,onMouseMove: function(event) {
		event.cancel();
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			hscroll.set_pos(this._offset.x - event.screenX);
			var distX = Math.abs(event.screenX - this._lastMousePos.x);
			if(distX > haxe_ui_Toolkit.get_scaleX()) {
				this.pauseContainerEvents();
			}
		}
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.set_pos(this._offset.y - event.screenY);
			var distY = Math.abs(event.screenY - this._lastMousePos.y);
			if(distY > haxe_ui_Toolkit.get_scaleY()) {
				this.pauseContainerEvents();
			}
		}
		this._lastMousePos = new haxe_ui_geom_Point(event.screenX,event.screenY);
	}
	,_containerEventsPaused: null
	,pauseContainerEvents: function() {
		if(this._containerEventsPaused == true) {
			return;
		}
		this._containerEventsPaused = true;
		this.onContainerEventsStatusChanged();
	}
	,resumeContainerEvents: function() {
		if(this._containerEventsPaused == false) {
			return;
		}
		this._containerEventsPaused = false;
		this.onContainerEventsStatusChanged();
	}
	,onContainerEventsStatusChanged: function() {
		this._scrollview.findComponent("scrollview-contents",haxe_ui_core_Component,true,"css").disableInteractivity(this._containerEventsPaused);
		if(this._containerEventsPaused == true) {
			this._scrollview.findComponent("scrollview-contents",haxe_ui_core_Component,true,"css").removeClass(":hover",true,true);
		}
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll != null || vscroll != null) {
			if(this._scrollview.get_autoHideScrolls() == true) {
				if(this._containerEventsPaused == true) {
					if(hscroll != null) {
						hscroll.fadeIn();
					}
					if(vscroll != null) {
						vscroll.fadeIn();
					}
				} else {
					if(hscroll != null) {
						hscroll.fadeOut();
					}
					if(vscroll != null) {
						vscroll.fadeOut();
					}
				}
			}
		}
	}
	,onMouseUp: function(event) {
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onMouseMove));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onMouseUp));
		if(this._scrollview.get_scrollMode() == "inertial") {
			var now = HxOverrides.now() / 1000;
			var elapsed = (now - this._inertia.timestamp) * 1000;
			var deltaX = Math.abs(this._inertia.screen.x - event.screenX);
			var deltaY = Math.abs(this._inertia.screen.y - event.screenY);
			this._inertia.direction.x = this._inertia.screen.x - event.screenX < 0 ? 0 : 1;
			var velocityX = deltaX / elapsed;
			var v = 1000 * deltaX / (1 + elapsed);
			velocityX = 0.8 * v + 0.2 * velocityX;
			this._inertia.direction.y = this._inertia.screen.y - event.screenY < 0 ? 0 : 1;
			var velocityY = deltaY / elapsed;
			var v = 1000 * deltaY / (1 + elapsed);
			velocityY = 0.8 * v + 0.2 * velocityY;
			if(velocityX <= 75 && velocityY <= 75) {
				this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
				haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
				return;
			}
			this._inertia.timestamp = HxOverrides.now() / 1000;
			var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(hscroll != null) {
				this._inertia.amplitude.x = 0.8 * velocityX;
			}
			if(this._inertia.direction.x == 0) {
				var tmp = this._scrollview.get_hscrollPos() - this._inertia.amplitude.x;
				this._inertia.target.x = Math.round(tmp);
			} else {
				var tmp = this._scrollview.get_hscrollPos() + this._inertia.amplitude.x;
				this._inertia.target.x = Math.round(tmp);
			}
			var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(vscroll != null) {
				this._inertia.amplitude.y = 0.8 * velocityY;
			}
			if(this._inertia.direction.y == 0) {
				var tmp = this._scrollview.get_vscrollPos() - this._inertia.amplitude.y;
				this._inertia.target.y = Math.round(tmp);
			} else {
				var tmp = this._scrollview.get_vscrollPos() + this._inertia.amplitude.y;
				this._inertia.target.y = Math.round(tmp);
			}
			if(this._scrollview.get_hscrollPos() == this._inertia.target.x && this._scrollview.get_vscrollPos() == this._inertia.target.y) {
				this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
				haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
				return;
			}
			if(this._scrollview.get_hscrollPos() == this._inertia.target.x) {
				this._inertia.amplitude.x = 0;
			}
			if(this._scrollview.get_vscrollPos() == this._inertia.target.y) {
				this._inertia.amplitude.y = 0;
			}
			haxe_ui_Toolkit.callLater($bind(this,this.inertialScroll));
		} else {
			this._scrollview.removeClass(":down");
			this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
			haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
		}
	}
	,inertialScroll: function() {
		var elapsed = (HxOverrides.now() / 1000 - this._inertia.timestamp) * 1000;
		var finishedX = false;
		if(this._inertia.amplitude.x != 0) {
			var deltaX = -this._inertia.amplitude.x * Math.exp(-elapsed / 325);
			if(deltaX > 0.5 || deltaX < -0.5) {
				var oldPos = this._scrollview.get_hscrollPos();
				var newPos = 0;
				if(this._inertia.direction.x == 0) {
					newPos = this._inertia.target.x - deltaX;
				} else {
					newPos = this._inertia.target.x + deltaX;
				}
				if(newPos < 0) {
					newPos = 0;
				} else if(newPos > this._scrollview.get_hscrollMax()) {
					newPos = this._scrollview.get_hscrollMax();
				}
				this._scrollview.set_hscrollPos(newPos);
				finishedX = newPos == oldPos || newPos == 0 || newPos == this._scrollview.get_hscrollMax();
			} else {
				finishedX = true;
			}
		} else {
			finishedX = true;
		}
		var finishedY = false;
		if(this._inertia.amplitude.y != 0) {
			var deltaY = -this._inertia.amplitude.y * Math.exp(-elapsed / 325);
			if(deltaY > 0.5 || deltaY < -0.5) {
				var oldPos = this._scrollview.get_vscrollPos();
				var newPos = 0;
				if(this._inertia.direction.y == 0) {
					newPos = this._inertia.target.y - deltaY;
				} else {
					newPos = this._inertia.target.y + deltaY;
				}
				if(newPos < 0) {
					newPos = 0;
				} else if(newPos > this._scrollview.get_vscrollMax()) {
					newPos = this._scrollview.get_vscrollMax();
				}
				this._scrollview.set_vscrollPos(newPos);
				finishedY = newPos == oldPos || newPos == 0 || newPos == this._scrollview.get_vscrollMax();
			} else {
				finishedY = true;
			}
		} else {
			finishedY = true;
		}
		if(finishedX == true && finishedY == true) {
			this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
			haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
		} else {
			haxe_ui_Toolkit.callLater($bind(this,this.inertialScroll));
		}
	}
	,_fadeTimer: null
	,onMouseWheel: function(event) {
		var _gthis = this;
		var primaryType = haxe_ui_components_VerticalScroll;
		var secondaryType = haxe_ui_components_HorizontalScroll;
		if(event.shiftKey) {
			primaryType = haxe_ui_components_HorizontalScroll;
			secondaryType = haxe_ui_components_VerticalScroll;
		}
		var scroll = this._scrollview.findComponent(null,primaryType,false);
		if(scroll == null) {
			scroll = this._scrollview.findComponent(null,secondaryType,false);
		}
		if(scroll != null) {
			if(this._scrollview.get_autoHideScrolls() == true && this._fadeTimer == null) {
				scroll.fadeIn();
			}
			event.cancel();
			var amount = 50;
			if(event.delta > 0) {
				scroll.set_pos(scroll.get_pos() - amount);
			} else if(event.delta < 0) {
				scroll.set_pos(scroll.get_pos() + amount);
			}
			if(this._scrollview.get_autoHideScrolls() == true) {
				if(this._fadeTimer != null) {
					this._fadeTimer.stop();
					this._fadeTimer = null;
				}
				this._fadeTimer = new haxe_ui_util_Timer(300,function() {
					scroll.fadeOut();
					_gthis._fadeTimer.stop();
					_gthis._fadeTimer = null;
				});
			}
		}
	}
	,onActionStart: function(event) {
		switch(event.action) {
		case "actionDown":
			var fh = this._scrollview;
			fh.set_vscrollPos(fh.get_vscrollPos() + 1);
			event.repeater = true;
			break;
		case "actionLeft":
			var fh = this._scrollview;
			fh.set_hscrollPos(fh.get_hscrollPos() - 1);
			event.repeater = true;
			break;
		case "actionRight":
			var fh = this._scrollview;
			fh.set_hscrollPos(fh.get_hscrollPos() + 1);
			event.repeater = true;
			break;
		case "actionUp":
			var fh = this._scrollview;
			fh.set_vscrollPos(fh.get_vscrollPos() - 1);
			event.repeater = true;
			break;
		default:
		}
	}
	,__class__: haxe_ui_containers_ScrollViewEvents
});
var haxe_ui_containers_ListViewEvents = function(listview) {
	haxe_ui_containers_ScrollViewEvents.call(this,listview);
	this._listview = listview;
};
$hxClasses["haxe.ui.containers.ListViewEvents"] = haxe_ui_containers_ListViewEvents;
haxe_ui_containers_ListViewEvents.__name__ = "haxe.ui.containers.ListViewEvents";
haxe_ui_containers_ListViewEvents.__super__ = haxe_ui_containers_ScrollViewEvents;
haxe_ui_containers_ListViewEvents.prototype = $extend(haxe_ui_containers_ScrollViewEvents.prototype,{
	_listview: null
	,lastEvent: null
	,register: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.register.call(this);
		this.registerEvent("scrollchange",$bind(this,this.onScrollChange));
		this.registerEvent("renderercreated",$bind(this,this.onRendererCreated));
		this.registerEvent("rendererdestroyed",$bind(this,this.onRendererDestroyed));
	}
	,unregister: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.unregister.call(this);
		this.unregisterEvent("scrollchange",$bind(this,this.onScrollChange));
		this.unregisterEvent("renderercreated",$bind(this,this.onRendererCreated));
		this.unregisterEvent("rendererdestroyed",$bind(this,this.onRendererDestroyed));
	}
	,onScrollChange: function(e) {
		if(this._listview.get_virtual() == true) {
			var _this = this._listview;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
	}
	,onRendererCreated: function(e) {
		var instance = js_Boot.__cast(e.data , haxe_ui_core_ItemRenderer);
		instance.registerEvent("mousedown",$bind(this,this.onRendererMouseDown));
		instance.registerEvent("click",$bind(this,this.onRendererClick));
		instance.registerEvent("rightclick",$bind(this,this.onRendererClick));
		if(this._listview.get_selectedIndices().indexOf(instance.itemIndex) != -1) {
			var builder = js_Boot.__cast(this._listview._compositeBuilder , haxe_ui_containers__$ListView_ListViewBuilder);
			builder.addItemRendererClass(instance,":selected");
		}
	}
	,onRendererDestroyed: function(e) {
		var instance = js_Boot.__cast(e.data , haxe_ui_core_ItemRenderer);
		instance.unregisterEvent("mousedown",$bind(this,this.onRendererMouseDown));
		instance.unregisterEvent("click",$bind(this,this.onRendererClick));
		instance.unregisterEvent("rightclick",$bind(this,this.onRendererClick));
		if(this._listview.get_selectedIndices().indexOf(instance.itemIndex) != -1) {
			var builder = js_Boot.__cast(this._listview._compositeBuilder , haxe_ui_containers__$ListView_ListViewBuilder);
			builder.addItemRendererClass(instance,":selected",false);
		}
	}
	,onRendererMouseDown: function(e) {
		this._listview.set_focus(true);
		if(this._listview.get_selectionMode() == "multiple-long-press") {
			if(this._listview.get_selectedIndices().length == 0) {
				this.startLongPressSelection(e);
			}
		} else if(this._listview.classes.indexOf(":mobile") != -1 == false) {
			e.target.addClass(":hover");
		}
	}
	,startLongPressSelection: function(e) {
		var _gthis = this;
		var timerClick = null;
		var currentMouseX = e.screenX;
		var currentMouseY = e.screenY;
		var renderer = js_Boot.__cast(e.target , haxe_ui_core_ItemRenderer);
		var __onMouseMove = null;
		var __onMouseUp = null;
		var __onMouseClick = null;
		__onMouseMove = function(_e) {
			currentMouseX = _e.screenX;
			currentMouseY = _e.screenY;
		};
		__onMouseUp = function(_e) {
			if(timerClick != null) {
				timerClick.stop();
				timerClick = null;
			}
			renderer.get_screen().unregisterEvent("mousemove",__onMouseMove);
			renderer.get_screen().unregisterEvent("mouseup",__onMouseUp);
		};
		__onMouseClick = function(_e) {
			_e.cancel();
			renderer.unregisterEvent("click",__onMouseClick);
		};
		renderer.get_screen().registerEvent("mousemove",__onMouseMove);
		renderer.get_screen().registerEvent("mouseup",__onMouseUp);
		timerClick = haxe_Timer.delay(function() {
			if(timerClick != null) {
				timerClick = null;
				var timerClick1;
				if(renderer.hitTest(currentMouseX,currentMouseY)) {
					var x1 = e.screenX;
					var y1 = e.screenY;
					timerClick1 = Math.sqrt((x1 - currentMouseX) * (x1 - currentMouseX) + (y1 - currentMouseY) * (y1 - currentMouseY)) < 2 * haxe_ui_Toolkit.pixelsPerRem;
				} else {
					timerClick1 = false;
				}
				if(timerClick1) {
					_gthis.toggleSelection(renderer);
					renderer.registerEvent("click",__onMouseClick,1);
				}
			}
		},this._listview.get_longPressSelectionTime());
	}
	,onContainerEventsStatusChanged: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.onContainerEventsStatusChanged.call(this);
		if(this._containerEventsPaused == true) {
			this._scrollview.findComponent("listview-contents",haxe_ui_core_Component,true,"css").removeClass(":hover",true,true);
		} else {
			var tmp = this._lastMousePos != null;
		}
	}
	,onRendererClick: function(e) {
		if(this._containerEventsPaused == true) {
			return;
		}
		var components = e.target.findComponentsUnderPoint(e.screenX,e.screenY);
		var _g = 0;
		while(_g < components.length) {
			var component = components[_g];
			++_g;
			if(component != e.target && ((component) instanceof haxe_ui_core_InteractiveComponent) && (js_Boot.__cast(component , haxe_ui_core_InteractiveComponent)).get_allowInteraction() == true) {
				return;
			}
		}
		this.lastEvent = e;
		var renderer = js_Boot.__cast(e.target , haxe_ui_core_ItemRenderer);
		switch(this._listview.get_selectionMode()) {
		case "disabled":
			break;
		case "multiple-click-modifier-key":case "multiple-modifier-key":
			if(e.ctrlKey == true) {
				this.toggleSelection(renderer);
			} else if(e.shiftKey == true) {
				var selectedIndices = this._listview.get_selectedIndices();
				var fromIndex = selectedIndices.length > 0 ? selectedIndices[selectedIndices.length - 1] : 0;
				var toIndex = renderer.itemIndex;
				if(fromIndex < toIndex) {
					var _g = 0;
					while(_g < selectedIndices.length) {
						var i = selectedIndices[_g];
						++_g;
						if(i < fromIndex) {
							fromIndex = i;
						}
					}
				} else {
					var tmp = fromIndex;
					fromIndex = toIndex;
					toIndex = tmp;
				}
				this.selectRange(fromIndex,toIndex);
			} else if(this._listview.get_selectionMode() == "multiple-click-modifier-key") {
				this._listview.set_selectedIndex(renderer.itemIndex);
			}
			break;
		case "multiple-long-press":
			var selectedIndices = this._listview.get_selectedIndices();
			if(selectedIndices.length > 0) {
				this.toggleSelection(renderer);
			}
			break;
		case "one-item":
			this._listview.set_selectedIndex(renderer.itemIndex);
			break;
		case "one-item-repeated":
			this._listview.set_selectedIndices([renderer.itemIndex]);
			break;
		default:
		}
	}
	,toggleSelection: function(renderer) {
		var itemIndex = renderer.itemIndex;
		var selectedIndices = this._listview.get_selectedIndices().slice();
		var index = selectedIndices.indexOf(itemIndex);
		if(index == -1) {
			selectedIndices.push(itemIndex);
		} else {
			selectedIndices.splice(index,1);
		}
		this._listview.set_selectedIndices(selectedIndices);
	}
	,selectRange: function(fromIndex,toIndex) {
		var tmp = this._listview;
		var _g = [];
		var _g1 = fromIndex;
		var _g2 = toIndex + 1;
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push(i);
		}
		tmp.set_selectedIndices(_g);
	}
	,onActionStart: function(event) {
		this.lastEvent = event;
		switch(event.action) {
		case "actionDown":
			if(this._listview.get_selectedIndex() < 0) {
				this._listview.set_selectedIndex(0);
			} else {
				var n = this._listview.get_selectedIndex();
				++n;
				if(n > this._listview.get_dataSource().get_size() - 1) {
					n = 0;
				}
				this._listview.set_selectedIndex(n);
			}
			event.repeater = true;
			break;
		case "actionUp":
			if(this._listview.get_selectedIndex() < 0) {
				this._listview.set_selectedIndex(this._listview.get_dataSource().get_size() - 1);
			} else {
				var n = this._listview.get_selectedIndex();
				--n;
				if(n < 0) {
					n = this._listview.set_selectedIndex(this._listview.get_dataSource().get_size() - 1);
				}
				this._listview.set_selectedIndex(n);
			}
			event.repeater = true;
			break;
		default:
		}
	}
	,__class__: haxe_ui_containers_ListViewEvents
});
var haxe_ui_containers_ScrollViewBuilder = function(scrollview) {
	haxe_ui_core_CompositeBuilder.call(this,scrollview);
	this._scrollview = scrollview;
	this._scrollview.cascadeActive = true;
};
$hxClasses["haxe.ui.containers.ScrollViewBuilder"] = haxe_ui_containers_ScrollViewBuilder;
haxe_ui_containers_ScrollViewBuilder.__name__ = "haxe.ui.containers.ScrollViewBuilder";
haxe_ui_containers_ScrollViewBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_ScrollViewBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_scrollview: null
	,_contents: null
	,_contentsLayoutName: null
	,create: function() {
		var contentLayoutName = this._scrollview.get_contentLayoutName();
		if(contentLayoutName == null) {
			contentLayoutName = "vertical";
		}
		this.createContentContainer(contentLayoutName);
	}
	,destroy: function() {
	}
	,get_numComponents: function() {
		return this._contents.get_numComponents();
	}
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.classes.indexOf("scrollview-contents") != -1 == false) {
			return this._contents.addComponent(child);
		}
		return null;
	}
	,addComponentAt: function(child,index) {
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.classes.indexOf("scrollview-contents") != -1 == false) {
			return this._contents.addComponentAt(child,index);
		}
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.classes.indexOf("scrollview-contents") != -1 == false) {
			return this._contents.removeComponent(child,dispose,invalidate);
		}
		return null;
	}
	,removeAllComponents: function(dispose) {
		if(dispose == null) {
			dispose = true;
		}
		this._contents.removeAllComponents(dispose);
		return true;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return this._contents.removeComponentAt(index,dispose,invalidate);
	}
	,getComponentIndex: function(child) {
		return this._contents.getComponentIndex(child);
	}
	,setComponentIndex: function(child,index) {
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.classes.indexOf("scrollview-contents") != -1 == false) {
			return this._contents.setComponentIndex(child,index);
		}
		return null;
	}
	,getComponentAt: function(index) {
		return this._contents.getComponentAt(index);
	}
	,createContentContainer: function(layoutName) {
		if(this._contents == null) {
			this._contents = new haxe_ui_containers_Box();
			this._contents.addClass("scrollview-contents");
			this._contents.set_id("scrollview-contents");
			this._contents.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(layoutName));
			this._component.addComponent(this._contents);
			this._contentsLayoutName = layoutName;
		}
	}
	,horizontalConstraintModifier: function() {
		return 0;
	}
	,verticalConstraintModifier: function() {
		return 0;
	}
	,checkScrolls: function() {
		if(this._component.get_isNativeScroller() == true) {
			return;
		}
		var usableSize = this._component.get_layout().get_usableSize();
		if(this.get_virtualHorizontal() == false && usableSize.width > 0) {
			var horizontalConstraint = this._contents;
			var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			var vcw = horizontalConstraint.get_width() + this.horizontalConstraintModifier();
			if(vcw > usableSize.width) {
				if(hscroll == null) {
					hscroll = this.createHScroll();
				}
				hscroll.set_max(vcw - usableSize.width);
				if(this._scrollview.get_hscrollThumbSize() == null) {
					hscroll.set_pageSize(usableSize.width / vcw * hscroll.get_max());
				}
				hscroll.syncComponentValidation();
			} else if(this._scrollview.get_horizontalScrollPolicy() == "always") {
				if(hscroll == null) {
					hscroll = this.createHScroll();
				}
				hscroll.set_max(0);
				hscroll.set_pageSize(0);
			} else if(this._scrollview.get_horizontalScrollPolicy() != "always" && hscroll != null) {
				this.destroyHScroll();
			}
		}
		if(this.get_virtualVertical() == false && usableSize.height > 0) {
			var verticalConstraint = this._contents;
			var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
			var vch = verticalConstraint.get_height() + this.verticalConstraintModifier();
			if(vch > usableSize.height) {
				if(vscroll == null) {
					vscroll = this.createVScroll();
				}
				vscroll.set_max(vch - usableSize.height);
				if(this._scrollview.get_vscrollThumbSize() == null) {
					vscroll.set_pageSize(usableSize.height / vch * vscroll.get_max());
				}
				vscroll.syncComponentValidation();
			} else if(this._scrollview.get_verticalScrollPolicy() == "always") {
				if(vscroll == null) {
					vscroll = this.createVScroll();
				}
				vscroll.set_max(0);
				vscroll.set_pageSize(0);
			} else if(this._scrollview.get_verticalScrollPolicy() != "always" && vscroll != null) {
				this.destroyVScroll();
			}
		}
	}
	,createHScroll: function() {
		if(this._component.get_isNativeScroller() == true) {
			return null;
		}
		var usableSize = this._component.get_layout().get_usableSize();
		var horizontalConstraint = this._contents;
		var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vcw = horizontalConstraint.get_width() + this.horizontalConstraintModifier();
		if(usableSize.width <= 0) {
			return hscroll;
		}
		if(vcw > usableSize.width && hscroll == null || this._scrollview.get_horizontalScrollPolicy() == "always") {
			hscroll = new haxe_ui_components_HorizontalScroll();
			hscroll.set_scriptAccess(false);
			hscroll.set_includeInLayout(!this._scrollview.get_autoHideScrolls());
			hscroll.set_hidden(this._scrollview.get_autoHideScrolls());
			hscroll.set_percentWidth(100);
			hscroll.set_allowFocus(false);
			hscroll.set_id("scrollview-hscroll");
			if(this._scrollview.get_hscrollThumbSize() != null) {
				hscroll.set_thumbSize(this._scrollview.get_hscrollThumbSize());
			}
			this._component.addComponent(hscroll);
			this._component.registerInternalEvents(null,true);
		}
		if(this._scrollview.get_horizontalScrollPolicy() == "never") {
			hscroll.set_includeInLayout(false);
			hscroll.set_hidden(true);
		} else if(this._scrollview.get_horizontalScrollPolicy() == "always") {
			hscroll.set_includeInLayout(true);
			hscroll.set_hidden(false);
		}
		return hscroll;
	}
	,createVScroll: function() {
		if(this._component.get_isNativeScroller() == true) {
			return null;
		}
		var usableSize = this._component.get_layout().get_usableSize();
		var verticalConstraint = this._contents;
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		var vch = verticalConstraint.get_height() + this.verticalConstraintModifier();
		if(usableSize.height <= 0) {
			return vscroll;
		}
		if(vch > usableSize.height && vscroll == null || this._scrollview.get_verticalScrollPolicy() == "always") {
			vscroll = new haxe_ui_components_VerticalScroll();
			vscroll.set_scriptAccess(false);
			vscroll.set_includeInLayout(!this._scrollview.get_autoHideScrolls());
			vscroll.set_hidden(this._scrollview.get_autoHideScrolls());
			vscroll.set_percentHeight(100);
			vscroll.set_allowFocus(false);
			vscroll.set_id("scrollview-vscroll");
			if(this._scrollview.get_vscrollThumbSize() != null) {
				vscroll.set_thumbSize(this._scrollview.get_vscrollThumbSize());
			}
			this._component.addComponent(vscroll);
			this._component.registerInternalEvents(null,true);
		}
		if(this._scrollview.get_verticalScrollPolicy() == "never") {
			vscroll.set_includeInLayout(false);
			vscroll.set_hidden(true);
		} else if(this._scrollview.get_verticalScrollPolicy() == "always") {
			vscroll.set_includeInLayout(true);
			vscroll.set_hidden(false);
		}
		return vscroll;
	}
	,destroyHScroll: function() {
		var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			this._component.removeComponent(hscroll);
		}
	}
	,destroyVScroll: function() {
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			this._component.removeComponent(vscroll);
		}
	}
	,updateScrollRect: function() {
		if(this._contents == null) {
			return;
		}
		var usableSize = this._component.get_layout().get_usableSize();
		var clipCX = usableSize.width - this.horizontalConstraintModifier();
		if(clipCX > this._contents.get_width()) {
			clipCX = this._contents.get_width() + this.horizontalConstraintModifier();
		}
		var clipCY = usableSize.height - this.verticalConstraintModifier();
		if(clipCY > this._contents.get_height()) {
			clipCY = this._contents.get_height() + this.verticalConstraintModifier();
		}
		var xpos = 0;
		var ypos = 0;
		if(this.get_virtualHorizontal() == false) {
			var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(hscroll != null) {
				xpos = hscroll.get_pos();
			}
		} else if(this._contents.get_componentClipRect() != null) {
			clipCX = this._contents.get_componentClipRect().width;
		}
		if(this.get_virtualVertical() == false) {
			var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(vscroll != null) {
				ypos = vscroll.get_pos();
			}
		} else if(this._contents.get_componentClipRect() != null) {
			clipCY = this._contents.get_componentClipRect().height;
		}
		var newClipRect = new haxe_ui_geom_Rectangle(Math.round(xpos),Math.round(ypos),Math.round(clipCX),Math.round(clipCY));
		this._contents.set_componentClipRect(newClipRect);
		this._contents.walkComponents(function(c) {
			if(c.hasEvent("move")) {
				c.dispatch(new haxe_ui_events_UIEvent("move"));
			}
			return true;
		});
	}
	,virtualHorizontal: null
	,get_virtualHorizontal: function() {
		return this._scrollview.get_virtual();
	}
	,virtualVertical: null
	,get_virtualVertical: function() {
		return this._scrollview.get_virtual();
	}
	,onVirtualChanged: function() {
	}
	,applyStyle: function(style) {
		haxe_ui_core_CompositeBuilder.prototype.applyStyle.call(this,style);
		if(style.mode == "mobile") {
			this._scrollview.set_autoHideScrolls(true);
		}
		if(style.contentWidth != null && style.contentWidth != this._scrollview.get_contentWidth()) {
			this._scrollview.set_contentWidth(style.contentWidth);
		} else if(style.contentWidthPercent != null && style.contentWidthPercent != this._scrollview.get_percentContentWidth()) {
			this._scrollview.set_percentContentWidth(style.contentWidthPercent);
		}
		if(style.contentHeight != null && style.contentHeight != this._scrollview.get_contentHeight()) {
			this._scrollview.set_contentHeight(style.contentHeight);
		} else if(style.contentHeightPercent != null && style.contentHeightPercent != this._scrollview.get_percentContentHeight()) {
			this._scrollview.set_percentContentHeight(style.contentHeightPercent);
		}
	}
	,__class__: haxe_ui_containers_ScrollViewBuilder
	,__properties__: $extend(haxe_ui_core_CompositeBuilder.prototype.__properties__,{get_virtualVertical:"get_virtualVertical",get_virtualHorizontal:"get_virtualHorizontal"})
});
var haxe_ui_containers__$ListView_ListViewBuilder = function(listview) {
	haxe_ui_containers_ScrollViewBuilder.call(this,listview);
	this._listview = listview;
};
$hxClasses["haxe.ui.containers._ListView.ListViewBuilder"] = haxe_ui_containers__$ListView_ListViewBuilder;
haxe_ui_containers__$ListView_ListViewBuilder.__name__ = "haxe.ui.containers._ListView.ListViewBuilder";
haxe_ui_containers__$ListView_ListViewBuilder.__super__ = haxe_ui_containers_ScrollViewBuilder;
haxe_ui_containers__$ListView_ListViewBuilder.prototype = $extend(haxe_ui_containers_ScrollViewBuilder.prototype,{
	_listview: null
	,create: function() {
		this.createContentContainer(this._listview.get_virtual() ? "absolute" : "vertical");
	}
	,createContentContainer: function(layoutName) {
		if(this._contents == null) {
			haxe_ui_containers_ScrollViewBuilder.prototype.createContentContainer.call(this,layoutName);
			this._contents.addClass("listview-contents");
		}
	}
	,addComponent: function(child) {
		var r = null;
		if(((child) instanceof haxe_ui_core_ItemRenderer) && (this._listview.get_itemRenderer() == null && this._listview.get_itemRendererClass() == null)) {
			this._listview.set_itemRenderer(js_Boot.__cast(child , haxe_ui_core_ItemRenderer));
			this._listview.get_itemRenderer().ready();
			this._listview.get_itemRenderer().handleVisibility(false);
			r = child;
		} else {
			r = haxe_ui_containers_ScrollViewBuilder.prototype.addComponent.call(this,child);
		}
		return r;
	}
	,onVirtualChanged: function() {
		this._contents.set_layoutName(this._listview.get_virtual() ? "absolute" : "vertical");
	}
	,addItemRendererClass: function(child,className,add) {
		if(add == null) {
			add = true;
		}
		var _gthis = this;
		child.walkComponents(function(c) {
			if(((c) instanceof haxe_ui_core_ItemRenderer)) {
				if(add == true) {
					c.addClass(className);
					haxe_ui_Toolkit.callLater(function() {
						_gthis.ensureVisible(js_Boot.__cast(c , haxe_ui_core_ItemRenderer));
					});
				} else {
					c.removeClass(className);
				}
			} else {
				c.invalidateComponent("style",false);
			}
			return true;
		});
	}
	,ensureVisible: function(itemToEnsure) {
		if(itemToEnsure != null && this._listview.get_virtual() == false) {
			var vscroll = this._listview.findComponent(null,haxe_ui_components_VerticalScroll);
			if(vscroll != null) {
				var vpos = vscroll.get_pos();
				var contents = this._listview.findComponent("listview-contents",null,null,"css");
				if(itemToEnsure.get_top() + itemToEnsure.get_height() > vpos + contents.get_componentClipRect().height) {
					vscroll.set_pos(itemToEnsure.get_top() + itemToEnsure.get_height() - contents.get_componentClipRect().height);
				} else if(itemToEnsure.get_top() < vpos) {
					vscroll.set_pos(itemToEnsure.get_top());
				}
			}
		}
	}
	,ensureVirtualItemVisible: function(index) {
		var vscroll = this._listview.findComponent(null,haxe_ui_components_VerticalScroll);
		if(vscroll != null) {
			var layout = js_Boot.__cast(this._listview.get_layout() , haxe_ui_layouts_VerticalVirtualLayout);
			var itemHeight = layout.get_itemHeight();
			var itemTop = index * itemHeight;
			var vpos = vscroll.get_pos();
			var contents = this._listview.findComponent("listview-contents",null,null,"css");
			if(itemTop + itemHeight > vpos + contents.get_componentClipRect().height) {
				vscroll.set_pos(itemTop + itemHeight - contents.get_componentClipRect().height);
			} else if(itemTop < vpos) {
				vscroll.set_pos(itemTop);
			}
		}
	}
	,applyStyle: function(style) {
		haxe_ui_containers_ScrollViewBuilder.prototype.applyStyle.call(this,style);
		var list = this._component.findComponents(null,haxe_ui_components_Label,16777215);
		var _g = 0;
		while(_g < list.length) {
			var c = list[_g];
			++_g;
			var invalidate = false;
			if(style.color != null && c.get_customStyle().color != style.color) {
				c.get_customStyle().color = style.color;
				invalidate = true;
			}
			if(style.fontName != null && c.get_customStyle().fontName != style.fontName) {
				c.get_customStyle().fontName = style.fontName;
				invalidate = true;
			}
			if(style.fontSize != null && c.get_customStyle().fontSize != style.fontSize) {
				c.get_customStyle().fontSize = style.fontSize;
				invalidate = true;
			}
			if(style.cursor != null && c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(style.textAlign != null && c.get_customStyle().textAlign != style.textAlign) {
				c.get_customStyle().textAlign = style.textAlign;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
	}
	,__class__: haxe_ui_containers__$ListView_ListViewBuilder
});
var haxe_ui_containers__$ListView_DataSourceBehaviour = function(component) {
	this._firstPass = true;
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.DataSourceBehaviour"] = haxe_ui_containers__$ListView_DataSourceBehaviour;
haxe_ui_containers__$ListView_DataSourceBehaviour.__name__ = "haxe.ui.containers._ListView.DataSourceBehaviour";
haxe_ui_containers__$ListView_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ListView_DataSourceBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_firstPass: null
	,set: function(value) {
		var _gthis = this;
		haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
		var dataSource = haxe_ui_util_Variant.toDataSource(this._value);
		if(dataSource != null) {
			dataSource.onDataSourceChange = function() {
				var _this = _gthis._component;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
				if(_gthis._firstPass == true) {
					_gthis._firstPass = false;
					var _this = _gthis._component;
					if(!(_this._layout == null || _this._layoutLocked == true)) {
						_this.invalidateComponent("layout",false);
					}
				}
				_gthis.dispatchChanged();
			};
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		} else {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		this.dispatchChanged();
	}
	,get: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			this._value = haxe_ui_util_Variant.fromDataSource(new haxe_ui_data_ArrayDataSource());
			this.set(this._value);
		}
		return this._value;
	}
	,dispatchChanged: function() {
		var _gthis = this;
		haxe_ui_Toolkit.callLater(function() {
			_gthis._component.dispatch(new haxe_ui_events_UIEvent("propertychange",false,"dataSource"));
		});
	}
	,__class__: haxe_ui_containers__$ListView_DataSourceBehaviour
});
var haxe_ui_containers__$ListView_SelectedIndexBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.SelectedIndexBehaviour"] = haxe_ui_containers__$ListView_SelectedIndexBehaviour;
haxe_ui_containers__$ListView_SelectedIndexBehaviour.__name__ = "haxe.ui.containers._ListView.SelectedIndexBehaviour";
haxe_ui_containers__$ListView_SelectedIndexBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ListView_SelectedIndexBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedIndices = listView.get_selectedIndices();
		if(selectedIndices != null && selectedIndices.length > 0) {
			return haxe_ui_util_Variant.fromInt(selectedIndices[selectedIndices.length - 1]);
		} else {
			return haxe_ui_util_Variant.fromInt(-1);
		}
	}
	,set: function(value) {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		listView.set_selectedIndices(haxe_ui_util_Variant.neq(value,haxe_ui_util_Variant.fromInt(-1)) ? [haxe_ui_util_Variant.toInt(value)] : null);
	}
	,__class__: haxe_ui_containers__$ListView_SelectedIndexBehaviour
});
var haxe_ui_containers__$ListView_SelectedItemBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.SelectedItemBehaviour"] = haxe_ui_containers__$ListView_SelectedItemBehaviour;
haxe_ui_containers__$ListView_SelectedItemBehaviour.__name__ = "haxe.ui.containers._ListView.SelectedItemBehaviour";
haxe_ui_containers__$ListView_SelectedItemBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ListView_SelectedItemBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	getDynamic: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedIndices = listView.get_selectedIndices();
		if(selectedIndices.length > 0) {
			return listView.get_dataSource().get(selectedIndices[selectedIndices.length - 1]);
		} else {
			return null;
		}
	}
	,set: function(value) {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var index = listView.get_dataSource().indexOf(value);
		if(index != -1 && listView.get_selectedIndices().indexOf(index) == -1) {
			listView.set_selectedIndices([index]);
		}
	}
	,__class__: haxe_ui_containers__$ListView_SelectedItemBehaviour
});
var haxe_ui_containers__$ListView_SelectedIndicesBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.SelectedIndicesBehaviour"] = haxe_ui_containers__$ListView_SelectedIndicesBehaviour;
haxe_ui_containers__$ListView_SelectedIndicesBehaviour.__name__ = "haxe.ui.containers._ListView.SelectedIndicesBehaviour";
haxe_ui_containers__$ListView_SelectedIndicesBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ListView_SelectedIndicesBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		if(haxe_ui_util_Variant.get_isNull(this._value)) {
			return haxe_ui_util_Variant.fromArray([]);
		} else {
			return this._value;
		}
	}
	,validateData: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedIndices = listView.get_selectedIndices();
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$ListView_ListViewBuilder);
		var events = js_Boot.__cast(this._component._internalEvents , haxe_ui_containers_ListViewEvents);
		var _g = 0;
		var _g1 = contents._children == null ? [] : contents._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(selectedIndices.indexOf((js_Boot.__cast(child , haxe_ui_core_ItemRenderer)).itemIndex) != -1) {
				builder.addItemRendererClass(child,":selected");
			} else {
				builder.addItemRendererClass(child,":selected",false);
			}
		}
		if(listView.get_virtual() == true) {
			var _g = 0;
			while(_g < selectedIndices.length) {
				var i = selectedIndices[_g];
				++_g;
				builder.ensureVirtualItemVisible(i);
			}
		}
		if(listView.get_selectedIndex() != -1 && listView.get_selectedIndices().length != 0) {
			var event = new haxe_ui_events_UIEvent("change");
			event.relatedEvent = events.lastEvent;
			this._component.dispatch(event);
		}
	}
	,__class__: haxe_ui_containers__$ListView_SelectedIndicesBehaviour
});
var haxe_ui_containers__$ListView_SelectedItemsBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.SelectedItemsBehaviour"] = haxe_ui_containers__$ListView_SelectedItemsBehaviour;
haxe_ui_containers__$ListView_SelectedItemsBehaviour.__name__ = "haxe.ui.containers._ListView.SelectedItemsBehaviour";
haxe_ui_containers__$ListView_SelectedItemsBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ListView_SelectedItemsBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedIndices = listView.get_selectedIndices();
		if(selectedIndices != null && selectedIndices.length > 0) {
			var selectedItems = [];
			var _g = 0;
			while(_g < selectedIndices.length) {
				var i = selectedIndices[_g];
				++_g;
				if(i < 0 || i >= listView.get_dataSource().get_size()) {
					continue;
				}
				var data = listView.get_dataSource().get(i);
				selectedItems.push(data);
			}
			return haxe_ui_util_Variant.fromArray(selectedItems);
		} else {
			return haxe_ui_util_Variant.fromArray([]);
		}
	}
	,set: function(value) {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedItems = haxe_ui_util_Variant.toArray(value);
		if(selectedItems != null && selectedItems.length > 0) {
			var selectedIndices = [];
			var index;
			var _g = 0;
			while(_g < selectedItems.length) {
				var item = selectedItems[_g];
				++_g;
				index = listView.get_dataSource().indexOf(item);
				if(index != -1) {
					selectedIndices.push(index);
				}
			}
			listView.set_selectedIndices(selectedIndices);
		} else {
			listView.set_selectedIndices([]);
		}
	}
	,__class__: haxe_ui_containers__$ListView_SelectedItemsBehaviour
});
var haxe_ui_containers__$ListView_SelectionModeBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.SelectionModeBehaviour"] = haxe_ui_containers__$ListView_SelectionModeBehaviour;
haxe_ui_containers__$ListView_SelectionModeBehaviour.__name__ = "haxe.ui.containers._ListView.SelectionModeBehaviour";
haxe_ui_containers__$ListView_SelectionModeBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ListView_SelectionModeBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedIndices = listView.get_selectedIndices();
		if(selectedIndices == null || selectedIndices.length == 0) {
			return;
		}
		var selectionMode = haxe_ui_util_Variant.toString(this._value);
		switch(selectionMode) {
		case "disabled":
			listView.set_selectedIndices(null);
			break;
		case "one-item":
			if(selectedIndices.length > 1) {
				listView.set_selectedIndices([selectedIndices[0]]);
			}
			break;
		default:
		}
	}
	,__class__: haxe_ui_containers__$ListView_SelectionModeBehaviour
});
var haxe_ui_containers__$ScrollView_EnsureVisible = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.EnsureVisible"] = haxe_ui_containers__$ScrollView_EnsureVisible;
haxe_ui_containers__$ScrollView_EnsureVisible.__name__ = "haxe.ui.containers._ScrollView.EnsureVisible";
haxe_ui_containers__$ScrollView_EnsureVisible.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$ScrollView_EnsureVisible.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	call: function(param) {
		var scrollview = js_Boot.__cast(this._component , haxe_ui_containers_ScrollView);
		if(scrollview.get_allowAutoScroll() == false) {
			return null;
		}
		var c = js_Boot.__cast(param , haxe_ui_core_Component);
		if(c == scrollview) {
			return null;
		}
		var hscroll = scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var hscrollPos = 0;
		if(hscroll != null) {
			hscrollPos = hscroll.get_pos();
		}
		var vscroll = scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		var vscrollPos = 0;
		if(vscroll != null) {
			vscrollPos = vscroll.get_pos();
		}
		var componentScreenRect = new haxe_ui_geom_Rectangle(c.get_screenLeft(),c.get_screenTop(),c.get_width(),c.get_height());
		var componentRect = new haxe_ui_geom_Rectangle(c.get_screenLeft() + hscrollPos,c.get_screenTop() + vscrollPos,c.get_width(),c.get_height());
		var scrollRect = new haxe_ui_geom_Rectangle(scrollview.get_screenLeft(),scrollview.get_screenTop(),scrollview.get_width(),scrollview.get_height());
		var scrollRectFixed = scrollRect.copy();
		var usableSize = scrollview.get_layout().get_usableSize();
		scrollRectFixed.width = usableSize.width;
		scrollRectFixed.height = usableSize.height;
		if(scrollRectFixed.containsRect(componentScreenRect)) {
			return null;
		}
		var newHScrollPos = hscrollPos;
		var newVScrollPos = vscrollPos;
		var fixedRight = componentRect.get_right() - scrollRect.left;
		var fixedLeft = componentRect.left - scrollRect.left;
		var fixedBottom = componentRect.get_bottom() - scrollRect.top;
		var fixedTop = componentRect.top - scrollRect.top;
		var offsetLeft = 1;
		var offsetTop = 1;
		if(scrollRectFixed.containsPoint(componentScreenRect.get_right(),componentScreenRect.top) == false) {
			newHScrollPos = fixedRight - usableSize.width + (this.calcOffset(c,"right") - offsetLeft);
		} else if(scrollRectFixed.containsPoint(componentScreenRect.left,componentScreenRect.top) == false) {
			newHScrollPos = fixedLeft - (this.calcOffset(c,"left") + offsetLeft);
		}
		if(scrollRectFixed.containsPoint(componentScreenRect.left,componentScreenRect.get_bottom()) == false) {
			newVScrollPos = fixedBottom - usableSize.height + (this.calcOffset(c,"bottom") - offsetTop);
		} else if(scrollRectFixed.containsPoint(componentScreenRect.left,componentScreenRect.top) == false) {
			newVScrollPos = fixedTop - (this.calcOffset(c,"top") + offsetTop);
		}
		if(hscroll != null) {
			hscroll.set_pos(newHScrollPos);
		}
		if(vscroll != null) {
			vscroll.set_pos(newVScrollPos);
		}
		return null;
	}
	,calcOffset: function(c,which) {
		var p = 0;
		var r = c.parentComponent;
		while(r != null) {
			if(r.get_style() != null) {
				switch(which) {
				case "bottom":
					if(r.get_paddingBottom() != null) {
						p += r.get_paddingBottom();
					}
					break;
				case "left":
					if(r.get_paddingLeft() != null) {
						p += r.get_paddingLeft();
					}
					break;
				case "right":
					if(r.get_paddingRight() != null) {
						p += r.get_paddingRight();
					}
					break;
				case "top":
					if(r.get_paddingTop() != null) {
						p += r.get_paddingTop();
					}
					break;
				}
			}
			r = r.parentComponent;
			if(r == this._component) {
				break;
			}
		}
		return p;
	}
	,__class__: haxe_ui_containers__$ScrollView_EnsureVisible
});
var haxe_ui_containers__$ScrollView_Virtual = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.Virtual"] = haxe_ui_containers__$ScrollView_Virtual;
haxe_ui_containers__$ScrollView_Virtual.__name__ = "haxe.ui.containers._ScrollView.Virtual";
haxe_ui_containers__$ScrollView_Virtual.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$ScrollView_Virtual.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
		if(this._component._compositeBuilder != null) {
			(js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).onVirtualChanged();
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_Virtual
});
var haxe_ui_containers__$ScrollView_ContentLayoutName = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.ContentLayoutName"] = haxe_ui_containers__$ScrollView_ContentLayoutName;
haxe_ui_containers__$ScrollView_ContentLayoutName.__name__ = "haxe.ui.containers._ScrollView.ContentLayoutName";
haxe_ui_containers__$ScrollView_ContentLayoutName.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$ScrollView_ContentLayoutName.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers_ScrollViewBuilder);
		if(builder != null && haxe_ui_util_Variant.fromString(builder._contentsLayoutName) != value) {
			builder._contentsLayoutName = haxe_ui_util_Variant.toString(value);
			builder._contents.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(haxe_ui_util_Variant.toString(value)));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_ContentLayoutName
});
var haxe_ui_containers__$ScrollView_ContentWidth = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.ContentWidth"] = haxe_ui_containers__$ScrollView_ContentWidth;
haxe_ui_containers__$ScrollView_ContentWidth.__name__ = "haxe.ui.containers._ScrollView.ContentWidth";
haxe_ui_containers__$ScrollView_ContentWidth.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ScrollView_ContentWidth.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util_Variant.fromFloat(contents.get_width());
	}
	,set: function(value) {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_percentWidth(null);
			contents.set_width(haxe_ui_util_Variant.toFloat(value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_ContentWidth
});
var haxe_ui_containers__$ScrollView_PercentContentWidth = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.PercentContentWidth"] = haxe_ui_containers__$ScrollView_PercentContentWidth;
haxe_ui_containers__$ScrollView_PercentContentWidth.__name__ = "haxe.ui.containers._ScrollView.PercentContentWidth";
haxe_ui_containers__$ScrollView_PercentContentWidth.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ScrollView_PercentContentWidth.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util_Variant.fromFloat(contents.get_percentWidth());
	}
	,set: function(value) {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_componentWidth(null);
			contents.set_percentWidth(haxe_ui_util_Variant.toFloat(value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_PercentContentWidth
});
var haxe_ui_containers__$ScrollView_ContentHeight = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.ContentHeight"] = haxe_ui_containers__$ScrollView_ContentHeight;
haxe_ui_containers__$ScrollView_ContentHeight.__name__ = "haxe.ui.containers._ScrollView.ContentHeight";
haxe_ui_containers__$ScrollView_ContentHeight.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ScrollView_ContentHeight.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util_Variant.fromFloat(contents.get_height());
	}
	,set: function(value) {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_percentHeight(null);
			contents.set_height(haxe_ui_util_Variant.toFloat(value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_ContentHeight
});
var haxe_ui_containers__$ScrollView_PercentContentHeight = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.PercentContentHeight"] = haxe_ui_containers__$ScrollView_PercentContentHeight;
haxe_ui_containers__$ScrollView_PercentContentHeight.__name__ = "haxe.ui.containers._ScrollView.PercentContentHeight";
haxe_ui_containers__$ScrollView_PercentContentHeight.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ScrollView_PercentContentHeight.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util_Variant.fromFloat(contents.get_percentHeight());
	}
	,set: function(value) {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_componentHeight(null);
			contents.set_percentHeight(haxe_ui_util_Variant.toFloat(value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_PercentContentHeight
});
var haxe_ui_containers__$ScrollView_HScrollPos = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.HScrollPos"] = haxe_ui_containers__$ScrollView_HScrollPos;
haxe_ui_containers__$ScrollView_HScrollPos.__name__ = "haxe.ui.containers._ScrollView.HScrollPos";
haxe_ui_containers__$ScrollView_HScrollPos.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_HScrollPos.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,get: function() {
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll == null) {
			return haxe_ui_util_Variant.fromInt(0);
		}
		return haxe_ui_util_Variant.fromFloat(hscroll.get_pos());
	}
	,validateData: function() {
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(this._scrollview.get_virtual() == true) {
			if(hscroll == null) {
				hscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createHScroll();
			}
			if(hscroll != null) {
				hscroll.set_pos(haxe_ui_util_Variant.toFloat(this._value));
			}
		} else if(hscroll != null) {
			hscroll.set_pos(haxe_ui_util_Variant.toFloat(this._value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_HScrollPos
});
var haxe_ui_containers__$ScrollView_VScrollPos = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.VScrollPos"] = haxe_ui_containers__$ScrollView_VScrollPos;
haxe_ui_containers__$ScrollView_VScrollPos.__name__ = "haxe.ui.containers._ScrollView.VScrollPos";
haxe_ui_containers__$ScrollView_VScrollPos.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_VScrollPos.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,get: function() {
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll == null) {
			return haxe_ui_util_Variant.fromInt(0);
		}
		return haxe_ui_util_Variant.fromFloat(vscroll.get_pos());
	}
	,validateData: function() {
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(this._scrollview.get_virtual() == true) {
			if(vscroll == null) {
				vscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createVScroll();
			}
			if(vscroll != null) {
				vscroll.set_pos(haxe_ui_util_Variant.toFloat(this._value));
			}
		} else if(vscroll != null) {
			vscroll.set_pos(haxe_ui_util_Variant.toFloat(this._value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_VScrollPos
});
var haxe_ui_containers__$ScrollView_HScrollMax = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.HScrollMax"] = haxe_ui_containers__$ScrollView_HScrollMax;
haxe_ui_containers__$ScrollView_HScrollMax.__name__ = "haxe.ui.containers._ScrollView.HScrollMax";
haxe_ui_containers__$ScrollView_HScrollMax.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_HScrollMax.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,get: function() {
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll == null) {
			return haxe_ui_util_Variant.fromInt(0);
		}
		return haxe_ui_util_Variant.fromFloat(hscroll.get_max());
	}
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromInt(0))) {
				if(hscroll == null) {
					hscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createHScroll();
				}
			} else if(hscroll != null) {
				(js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).destroyHScroll();
			}
			if(hscroll != null) {
				hscroll.set_max(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_HScrollMax
});
var haxe_ui_containers__$ScrollView_VScrollMax = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.VScrollMax"] = haxe_ui_containers__$ScrollView_VScrollMax;
haxe_ui_containers__$ScrollView_VScrollMax.__name__ = "haxe.ui.containers._ScrollView.VScrollMax";
haxe_ui_containers__$ScrollView_VScrollMax.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_VScrollMax.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,get: function() {
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll == null) {
			return haxe_ui_util_Variant.fromInt(0);
		}
		return haxe_ui_util_Variant.fromFloat(vscroll.get_max());
	}
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromInt(0))) {
				if(vscroll == null) {
					vscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createVScroll();
				}
			} else if(vscroll != null) {
				(js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).destroyVScroll();
			}
			if(vscroll != null) {
				vscroll.set_max(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_VScrollMax
});
var haxe_ui_containers__$ScrollView_HScrollPageSize = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.HScrollPageSize"] = haxe_ui_containers__$ScrollView_HScrollPageSize;
haxe_ui_containers__$ScrollView_HScrollPageSize.__name__ = "haxe.ui.containers._ScrollView.HScrollPageSize";
haxe_ui_containers__$ScrollView_HScrollPageSize.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_HScrollPageSize.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(hscroll == null) {
				hscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createHScroll();
			}
			if(hscroll != null) {
				hscroll.set_pageSize(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_HScrollPageSize
});
var haxe_ui_containers__$ScrollView_HScrollThumbSize = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.HScrollThumbSize"] = haxe_ui_containers__$ScrollView_HScrollThumbSize;
haxe_ui_containers__$ScrollView_HScrollThumbSize.__name__ = "haxe.ui.containers._ScrollView.HScrollThumbSize";
haxe_ui_containers__$ScrollView_HScrollThumbSize.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_HScrollThumbSize.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(hscroll == null) {
				hscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createHScroll();
			}
			if(hscroll != null) {
				hscroll.set_thumbSize(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_HScrollThumbSize
});
var haxe_ui_containers__$ScrollView_VScrollPageSize = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.VScrollPageSize"] = haxe_ui_containers__$ScrollView_VScrollPageSize;
haxe_ui_containers__$ScrollView_VScrollPageSize.__name__ = "haxe.ui.containers._ScrollView.VScrollPageSize";
haxe_ui_containers__$ScrollView_VScrollPageSize.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_VScrollPageSize.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(vscroll == null) {
				vscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createVScroll();
			}
			if(vscroll != null) {
				vscroll.set_pageSize(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_VScrollPageSize
});
var haxe_ui_containers__$ScrollView_VScrollThumbSize = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.VScrollThumbSize"] = haxe_ui_containers__$ScrollView_VScrollThumbSize;
haxe_ui_containers__$ScrollView_VScrollThumbSize.__name__ = "haxe.ui.containers._ScrollView.VScrollThumbSize";
haxe_ui_containers__$ScrollView_VScrollThumbSize.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_VScrollThumbSize.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(vscroll == null) {
				vscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createVScroll();
			}
			if(vscroll != null) {
				vscroll.set_thumbSize(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_VScrollThumbSize
});
var haxe_ui_containers__$ScrollView_ThumbSize = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.ThumbSize"] = haxe_ui_containers__$ScrollView_ThumbSize;
haxe_ui_containers__$ScrollView_ThumbSize.__name__ = "haxe.ui.containers._ScrollView.ThumbSize";
haxe_ui_containers__$ScrollView_ThumbSize.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_ThumbSize.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		this._scrollview.set_hscrollThumbSize(haxe_ui_util_Variant.toFloat(this._value));
		this._scrollview.set_vscrollThumbSize(haxe_ui_util_Variant.toFloat(this._value));
	}
	,__class__: haxe_ui_containers__$ScrollView_ThumbSize
});
var haxe_ui_containers__$ScrollView_ScrollModeBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.ScrollModeBehaviour"] = haxe_ui_containers__$ScrollView_ScrollModeBehaviour;
haxe_ui_containers__$ScrollView_ScrollModeBehaviour.__name__ = "haxe.ui.containers._ScrollView.ScrollModeBehaviour";
haxe_ui_containers__$ScrollView_ScrollModeBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_ScrollModeBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		this._component.registerInternalEvents(null,true);
	}
	,__class__: haxe_ui_containers__$ScrollView_ScrollModeBehaviour
});
var haxe_ui_containers__$ScrollView_ScrollPolicyBehaviour = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.ScrollPolicyBehaviour"] = haxe_ui_containers__$ScrollView_ScrollPolicyBehaviour;
haxe_ui_containers__$ScrollView_ScrollPolicyBehaviour.__name__ = "haxe.ui.containers._ScrollView.ScrollPolicyBehaviour";
haxe_ui_containers__$ScrollView_ScrollPolicyBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_ScrollPolicyBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		this._scrollview.set_horizontalScrollPolicy(haxe_ui_util_Variant.toString(this._value));
		this._scrollview.set_verticalScrollPolicy(haxe_ui_util_Variant.toString(this._value));
	}
	,__class__: haxe_ui_containers__$ScrollView_ScrollPolicyBehaviour
});
var haxe_ui_containers__$ScrollView_HScrollPolicyBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.HScrollPolicyBehaviour"] = haxe_ui_containers__$ScrollView_HScrollPolicyBehaviour;
haxe_ui_containers__$ScrollView_HScrollPolicyBehaviour.__name__ = "haxe.ui.containers._ScrollView.HScrollPolicyBehaviour";
haxe_ui_containers__$ScrollView_HScrollPolicyBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_HScrollPolicyBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	__class__: haxe_ui_containers__$ScrollView_HScrollPolicyBehaviour
});
var haxe_ui_containers__$ScrollView_VScrollPolicyBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.VScrollPolicyBehaviour"] = haxe_ui_containers__$ScrollView_VScrollPolicyBehaviour;
haxe_ui_containers__$ScrollView_VScrollPolicyBehaviour.__name__ = "haxe.ui.containers._ScrollView.VScrollPolicyBehaviour";
haxe_ui_containers__$ScrollView_VScrollPolicyBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_VScrollPolicyBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	__class__: haxe_ui_containers__$ScrollView_VScrollPolicyBehaviour
});
var haxe_ui_containers__$ScrollView_GetContents = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.GetContents"] = haxe_ui_containers__$ScrollView_GetContents;
haxe_ui_containers__$ScrollView_GetContents.__name__ = "haxe.ui.containers._ScrollView.GetContents";
haxe_ui_containers__$ScrollView_GetContents.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$ScrollView_GetContents.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		return haxe_ui_util_Variant.fromComponent(contents);
	}
	,__class__: haxe_ui_containers__$ScrollView_GetContents
});
var haxe_ui_containers_Stack = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.containers.Stack"] = haxe_ui_containers_Stack;
haxe_ui_containers_Stack.__name__ = "haxe.ui.containers.Stack";
haxe_ui_containers_Stack.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Stack.prototype = $extend(haxe_ui_containers_Box.prototype,{
	prevPage: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("prevPage",null);
	}
	,nextPage: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("nextPage",null);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
		this.behaviours.register("selectedIndex",haxe_ui_containers__$Stack_SelectedIndex,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedId",haxe_ui_containers__$Stack_SelectedId);
		this.behaviours.register("prevPage",haxe_ui_containers__$Stack_PrevPage);
		this.behaviours.register("nextPage",haxe_ui_containers__$Stack_NextPage);
	}
	,get_selectedIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedIndex"));
		return value;
	}
	,get_selectedId: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("selectedId"));
	}
	,set_selectedId: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"selectedId",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("selectedId",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedId"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Stack();
	}
	,registerComposite: function() {
		haxe_ui_containers_Box.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_containers__$Stack_Builder;
	}
	,__class__: haxe_ui_containers_Stack
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_selectedId:"set_selectedId",get_selectedId:"get_selectedId",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex"})
});
var haxe_ui_containers__$Stack_SelectedIndex = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._Stack.SelectedIndex"] = haxe_ui_containers__$Stack_SelectedIndex;
haxe_ui_containers__$Stack_SelectedIndex.__name__ = "haxe.ui.containers._Stack.SelectedIndex";
haxe_ui_containers__$Stack_SelectedIndex.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$Stack_SelectedIndex.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$Stack_Builder);
		if(haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromInt(0))) {
			return;
		}
		var _this = this._component;
		if(haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromInt((_this._children == null ? [] : _this._children).length - 1))) {
			var _this = this._component;
			this._value = haxe_ui_util_Variant.fromInt((_this._children == null ? [] : _this._children).length - 1);
			return;
		}
		if(builder._currentPage != null) {
			builder._currentPage.hide();
		}
		var _this = this._component;
		builder._currentPage = (_this._children == null ? [] : _this._children)[haxe_ui_util_Variant.toInt(this._value)];
		builder._currentPage.show();
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_containers__$Stack_SelectedIndex
});
var haxe_ui_containers__$Stack_SelectedId = function(stack) {
	haxe_ui_behaviours_DataBehaviour.call(this,stack);
	this._stack = stack;
};
$hxClasses["haxe.ui.containers._Stack.SelectedId"] = haxe_ui_containers__$Stack_SelectedId;
haxe_ui_containers__$Stack_SelectedId.__name__ = "haxe.ui.containers._Stack.SelectedId";
haxe_ui_containers__$Stack_SelectedId.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$Stack_SelectedId.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_stack: null
	,validateData: function() {
		var item = this._component.findComponent(haxe_ui_util_Variant.toString(this._value),haxe_ui_core_Component,false);
		if(item != null) {
			this._stack.set_selectedIndex(this._component.getComponentIndex(item));
		}
	}
	,__class__: haxe_ui_containers__$Stack_SelectedId
});
var haxe_ui_containers__$Stack_PrevPage = function(stack) {
	haxe_ui_behaviours_DataBehaviour.call(this,stack);
	this._stack = stack;
};
$hxClasses["haxe.ui.containers._Stack.PrevPage"] = haxe_ui_containers__$Stack_PrevPage;
haxe_ui_containers__$Stack_PrevPage.__name__ = "haxe.ui.containers._Stack.PrevPage";
haxe_ui_containers__$Stack_PrevPage.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$Stack_PrevPage.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_stack: null
	,call: function(param) {
		var pageCount = this._stack.get_numComponents();
		var newIndex = this._stack.get_selectedIndex();
		--newIndex;
		if(newIndex < 0) {
			newIndex = pageCount - 1;
		}
		this._stack.set_selectedIndex(newIndex);
		return null;
	}
	,__class__: haxe_ui_containers__$Stack_PrevPage
});
var haxe_ui_containers__$Stack_NextPage = function(stack) {
	haxe_ui_behaviours_DataBehaviour.call(this,stack);
	this._stack = stack;
};
$hxClasses["haxe.ui.containers._Stack.NextPage"] = haxe_ui_containers__$Stack_NextPage;
haxe_ui_containers__$Stack_NextPage.__name__ = "haxe.ui.containers._Stack.NextPage";
haxe_ui_containers__$Stack_NextPage.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$Stack_NextPage.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_stack: null
	,call: function(param) {
		var pageCount = this._stack.get_numComponents();
		var newIndex = this._stack.get_selectedIndex();
		++newIndex;
		if(newIndex > pageCount - 1) {
			newIndex = 0;
		}
		this._stack.set_selectedIndex(newIndex);
		return null;
	}
	,__class__: haxe_ui_containers__$Stack_NextPage
});
var haxe_ui_containers__$Stack_Builder = function(stack) {
	this._currentPage = null;
	haxe_ui_core_CompositeBuilder.call(this,stack);
	this._stack = stack;
};
$hxClasses["haxe.ui.containers._Stack.Builder"] = haxe_ui_containers__$Stack_Builder;
haxe_ui_containers__$Stack_Builder.__name__ = "haxe.ui.containers._Stack.Builder";
haxe_ui_containers__$Stack_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$Stack_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_stack: null
	,_currentPage: null
	,onReady: function() {
		haxe_ui_core_CompositeBuilder.prototype.onReady.call(this);
		if(this._stack.get_selectedIndex() < 0) {
			this._stack.set_selectedIndex(0);
		}
	}
	,onComponentAdded: function(child) {
		child.hide();
	}
	,__class__: haxe_ui_containers__$Stack_Builder
});
var haxe_ui_containers__$TabView_Layout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.containers._TabView.Layout"] = haxe_ui_containers__$TabView_Layout;
haxe_ui_containers__$TabView_Layout.__name__ = "haxe.ui.containers._TabView.Layout";
haxe_ui_containers__$TabView_Layout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_containers__$TabView_Layout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var tabs = this.get_component().findComponent(null,haxe_ui_components_TabBar,false);
		var content = this.get_component().findComponent(null,haxe_ui_containers_Box,false);
		if(tabs == null || content == null) {
			return;
		}
		if(this.get_component().classes.indexOf(":bottom") != -1) {
			content.set_left(this.get_paddingLeft());
			content.set_top(this.get_paddingTop());
			tabs.set_left(this.get_paddingLeft());
			if(tabs.get_height() != 0) {
				tabs.set_top(this.get_component().get_height() - tabs.get_height() - this.get_paddingBottom() + this.marginTop(tabs));
			}
		} else {
			tabs.set_left(this.get_paddingLeft());
			tabs.set_top(this.get_paddingTop() + this.marginTop(tabs));
			content.set_left(this.get_paddingLeft());
			if(tabs.get_height() != 0) {
				content.set_top(tabs.get_top() + tabs.get_height() - this.marginTop(tabs) + this.marginTop(content));
			}
		}
	}
	,resizeChildren: function() {
		var tabs = this.get_component().findComponent(null,haxe_ui_components_TabBar,false);
		var content = this.get_component().findComponent(null,haxe_ui_containers_Box,false);
		if(tabs == null || content == null) {
			return;
		}
		var usableSize = this.get_usableSize();
		tabs.set_width(usableSize.width);
		if(this.get_component().get_autoHeight() == false) {
			content.set_height(usableSize.height + 1);
		}
		if(this.get_component().get_autoWidth() == false) {
			content.set_width(this.get_component().get_width());
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var tabs = this.get_component().findComponent(null,haxe_ui_components_TabBar,false);
		if(tabs != null && tabs.get_componentHeight() != null) {
			size.height -= tabs.get_componentHeight();
		}
		return size;
	}
	,__class__: haxe_ui_containers__$TabView_Layout
});
var haxe_ui_containers__$TabView_Closable = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.Closable"] = haxe_ui_containers__$TabView_Closable;
haxe_ui_containers__$TabView_Closable.__name__ = "haxe.ui.containers._TabView.Closable";
haxe_ui_containers__$TabView_Closable.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TabView_Closable.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._component.get_native() == true) {
			return;
		}
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		builder._tabs.set_closable(haxe_ui_util_Variant.toBool(this._value));
	}
	,__class__: haxe_ui_containers__$TabView_Closable
});
var haxe_ui_containers__$TabView_PageIndex = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.PageIndex"] = haxe_ui_containers__$TabView_PageIndex;
haxe_ui_containers__$TabView_PageIndex.__name__ = "haxe.ui.containers._TabView.PageIndex";
haxe_ui_containers__$TabView_PageIndex.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TabView_PageIndex.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.gt(value,haxe_ui_util_Variant.fromInt(-1))) {
			var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
			builder._tabs.set_selectedIndex(haxe_ui_util_Variant.toInt(value));
		}
		haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
	}
	,validateData: function() {
		if(this._component.get_native() == true) {
			return;
		}
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		if(haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromInt(0))) {
			return;
		}
		if(haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromInt(builder._views.length - 1))) {
			this._value = haxe_ui_util_Variant.fromInt(builder._views.length - 1);
			return;
		}
		builder._tabs.set_selectedIndex(haxe_ui_util_Variant.toInt(this._value));
		var view = builder._views[haxe_ui_util_Variant.toInt(this._value)];
		if(view != null) {
			if(builder._currentView != null) {
				builder._currentView.hide();
			}
			if(builder._content.getComponentIndex(view) == -1) {
				builder._content.addComponent(view);
			} else {
				view.show();
			}
			builder._currentView = view;
		}
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_containers__$TabView_PageIndex
});
var haxe_ui_containers__$TabView_SelectedPage = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.SelectedPage"] = haxe_ui_containers__$TabView_SelectedPage;
haxe_ui_containers__$TabView_SelectedPage.__name__ = "haxe.ui.containers._TabView.SelectedPage";
haxe_ui_containers__$TabView_SelectedPage.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$TabView_SelectedPage.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		var tabview = js_Boot.__cast(this._component , haxe_ui_containers_TabView);
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		var view = builder._views[tabview.get_pageIndex()];
		return haxe_ui_util_Variant.fromComponent(view);
	}
	,set: function(value) {
		var tabview = js_Boot.__cast(this._component , haxe_ui_containers_TabView);
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		var view = haxe_ui_util_Variant.toComponent(value);
		var viewIndex = builder._views.indexOf(view);
		if(viewIndex != -1) {
			tabview.set_pageIndex(viewIndex);
		}
	}
	,__class__: haxe_ui_containers__$TabView_SelectedPage
});
var haxe_ui_containers__$TabView_TabPosition = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.TabPosition"] = haxe_ui_containers__$TabView_TabPosition;
haxe_ui_containers__$TabView_TabPosition.__name__ = "haxe.ui.containers._TabView.TabPosition";
haxe_ui_containers__$TabView_TabPosition.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TabView_TabPosition.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromString("bottom"))) {
			this._component.addClass(":bottom");
			this._component.findComponent(null,haxe_ui_components_TabBar,false).componentTabIndex = 1;
			this._component.findComponent("tabview-content",haxe_ui_containers_Box,false).componentTabIndex = 0;
		} else {
			this._component.removeClass(":bottom");
			this._component.findComponent(null,haxe_ui_components_TabBar,false).componentTabIndex = 0;
			this._component.findComponent("tabview-content",haxe_ui_containers_Box,false).componentTabIndex = 1;
		}
		this._component.findComponent(null,haxe_ui_components_TabBar,false).set_tabPosition(haxe_ui_util_Variant.toString(this._value));
	}
	,__class__: haxe_ui_containers__$TabView_TabPosition
});
var haxe_ui_containers__$TabView_PageCount = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.PageCount"] = haxe_ui_containers__$TabView_PageCount;
haxe_ui_containers__$TabView_PageCount.__name__ = "haxe.ui.containers._TabView.PageCount";
haxe_ui_containers__$TabView_PageCount.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TabView_PageCount.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		return haxe_ui_util_Variant.fromInt(builder._tabs.get_tabCount());
	}
	,__class__: haxe_ui_containers__$TabView_PageCount
});
var haxe_ui_containers__$TabView_RemovePage = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.RemovePage"] = haxe_ui_containers__$TabView_RemovePage;
haxe_ui_containers__$TabView_RemovePage.__name__ = "haxe.ui.containers._TabView.RemovePage";
haxe_ui_containers__$TabView_RemovePage.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TabView_RemovePage.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		var index = param;
		if(index < builder._views.length) {
			builder._tabs.removeTab(index);
		}
		return null;
	}
	,__class__: haxe_ui_containers__$TabView_RemovePage
});
var haxe_ui_containers__$TabView_GetPage = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.GetPage"] = haxe_ui_containers__$TabView_GetPage;
haxe_ui_containers__$TabView_GetPage.__name__ = "haxe.ui.containers._TabView.GetPage";
haxe_ui_containers__$TabView_GetPage.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TabView_GetPage.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		var index = param;
		var page = null;
		if(index < builder._views.length) {
			page = builder._views[index];
		}
		return haxe_ui_util_Variant.fromComponent(page);
	}
	,__class__: haxe_ui_containers__$TabView_GetPage
});
var haxe_ui_containers__$TabView_GetPageById = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.GetPageById"] = haxe_ui_containers__$TabView_GetPageById;
haxe_ui_containers__$TabView_GetPageById.__name__ = "haxe.ui.containers._TabView.GetPageById";
haxe_ui_containers__$TabView_GetPageById.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TabView_GetPageById.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		var id = param;
		var page = null;
		var _g = 0;
		var _g1 = builder._views;
		while(_g < _g1.length) {
			var view = _g1[_g];
			++_g;
			if(view.get_id() == id) {
				page = view;
				break;
			}
		}
		return haxe_ui_util_Variant.fromComponent(page);
	}
	,__class__: haxe_ui_containers__$TabView_GetPageById
});
var haxe_ui_containers__$TabView_RemoveAllPages = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.RemoveAllPages"] = haxe_ui_containers__$TabView_RemoveAllPages;
haxe_ui_containers__$TabView_RemoveAllPages.__name__ = "haxe.ui.containers._TabView.RemoveAllPages";
haxe_ui_containers__$TabView_RemoveAllPages.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TabView_RemoveAllPages.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		while(builder._views.length > 0) builder._tabs.removeTab(0);
		(js_Boot.__cast(this._component , haxe_ui_containers_TabView)).set_pageIndex(-1);
		builder._tabs.set_selectedIndex(-1);
		return null;
	}
	,__class__: haxe_ui_containers__$TabView_RemoveAllPages
});
var haxe_ui_containers__$TabView_ButtonWidth = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.ButtonWidth"] = haxe_ui_containers__$TabView_ButtonWidth;
haxe_ui_containers__$TabView_ButtonWidth.__name__ = "haxe.ui.containers._TabView.ButtonWidth";
haxe_ui_containers__$TabView_ButtonWidth.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TabView_ButtonWidth.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var tabbar = this._component.findComponent("tabview-tabs",haxe_ui_components_TabBar);
		if(tabbar != null) {
			tabbar.set_buttonWidth(haxe_ui_util_Variant.toFloat(this._value));
		}
	}
	,__class__: haxe_ui_containers__$TabView_ButtonWidth
});
var haxe_ui_containers__$TabView_ButtonHeight = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.ButtonHeight"] = haxe_ui_containers__$TabView_ButtonHeight;
haxe_ui_containers__$TabView_ButtonHeight.__name__ = "haxe.ui.containers._TabView.ButtonHeight";
haxe_ui_containers__$TabView_ButtonHeight.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TabView_ButtonHeight.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var tabbar = this._component.findComponent("tabview-tabs",haxe_ui_components_TabBar);
		if(tabbar != null) {
			tabbar.set_buttonHeight(haxe_ui_util_Variant.toFloat(this._value));
		}
	}
	,__class__: haxe_ui_containers__$TabView_ButtonHeight
});
var haxe_ui_containers__$TabView_Events = function(tabview) {
	haxe_ui_events_Events.call(this,tabview);
	this._tabview = tabview;
};
$hxClasses["haxe.ui.containers._TabView.Events"] = haxe_ui_containers__$TabView_Events;
haxe_ui_containers__$TabView_Events.__name__ = "haxe.ui.containers._TabView.Events";
haxe_ui_containers__$TabView_Events.__super__ = haxe_ui_events_Events;
haxe_ui_containers__$TabView_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_tabview: null
	,register: function() {
		var tabs = this._tabview.findComponent(null,haxe_ui_components_TabBar,false);
		if(tabs.hasEvent("change",$bind(this,this.onTabChanged)) == false) {
			tabs.registerEvent("change",$bind(this,this.onTabChanged));
		}
		if(tabs.hasEvent("beforechange",$bind(this,this.onTabBeforeChanged)) == false) {
			tabs.registerEvent("beforechange",$bind(this,this.onTabBeforeChanged));
		}
		if(tabs.hasEvent("beforeclose",$bind(this,this.onBeforeTabClosed)) == false) {
			tabs.registerEvent("beforeclose",$bind(this,this.onBeforeTabClosed));
		}
		if(tabs.hasEvent("close",$bind(this,this.onTabClosed)) == false) {
			tabs.registerEvent("close",$bind(this,this.onTabClosed));
		}
	}
	,unregister: function() {
		var tabs = this._tabview.findComponent(null,haxe_ui_components_TabBar,false);
		tabs.unregisterEvent("change",$bind(this,this.onTabChanged));
		tabs.unregisterEvent("beforechange",$bind(this,this.onTabBeforeChanged));
		tabs.unregisterEvent("beforeclose",$bind(this,this.onBeforeTabClosed));
		tabs.unregisterEvent("close",$bind(this,this.onTabClosed));
	}
	,onBeforeTabClosed: function(event) {
		this._tabview.dispatch(event);
	}
	,onTabClosed: function(event) {
		var builder = js_Boot.__cast(this._tabview._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		var view = builder._views[event.data];
		HxOverrides.remove(builder._views,view);
		if(builder._content.getComponentIndex(view) != -1) {
			builder._content.removeComponent(view);
		}
		this._tabview.dispatch(new haxe_ui_events_UIEvent("close",event.data));
	}
	,onTabChanged: function(event) {
		var tabs = this._tabview.findComponent(null,haxe_ui_components_TabBar,false);
		this._tabview.set_pageIndex(-1);
		this._tabview.set_pageIndex(tabs.get_selectedIndex());
	}
	,onTabBeforeChanged: function(event) {
		this._tabview.dispatch(event);
	}
	,__class__: haxe_ui_containers__$TabView_Events
});
var haxe_ui_containers__$TabView_Builder = function(tabview) {
	this._views = [];
	this._currentView = null;
	haxe_ui_core_CompositeBuilder.call(this,tabview);
	this._tabview = tabview;
};
$hxClasses["haxe.ui.containers._TabView.Builder"] = haxe_ui_containers__$TabView_Builder;
haxe_ui_containers__$TabView_Builder.__name__ = "haxe.ui.containers._TabView.Builder";
haxe_ui_containers__$TabView_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$TabView_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_tabview: null
	,_tabs: null
	,_content: null
	,_currentView: null
	,_views: null
	,create: function() {
		if(this._content == null) {
			this._content = new haxe_ui_containers_Box();
			this._content.set_id("tabview-content");
			this._content.addClass("tabview-content");
			this._content.set_layout(haxe_ui_layouts_LayoutFactory.createFromName("vertical"));
			this._content.componentTabIndex = 1;
			this._tabview.addComponent(this._content);
		}
		if(this._tabs == null) {
			this._tabs = new haxe_ui_components_TabBar();
			this._tabs.set_id("tabview-tabs");
			this._tabs.addClass("tabview-tabs");
			this._tabs.componentTabIndex = 0;
			this._tabview.addComponent(this._tabs);
		}
	}
	,get_numComponents: function() {
		return this._views.length;
	}
	,addComponent: function(child) {
		if(child != this._content && child != this._tabs) {
			var text = child.get_text();
			var icon = null;
			if(((child) instanceof haxe_ui_containers_Box)) {
				icon = haxe_ui_util_Variant.toString((js_Boot.__cast(child , haxe_ui_containers_Box)).get_icon());
			}
			child.registerEvent("propertychange",$bind(this,this.onPagePropertyChanged));
			this._views.push(child);
			var button = new haxe_ui_components_Button();
			if(child.get_disabled() == true) {
				button.set_disabled(true);
			}
			button.set_text(text);
			button.set_icon(haxe_ui_util_Variant.fromString(icon));
			button.set_tooltip(child.get_tooltip());
			if(child.get_id() != null) {
				button.set_id(child.get_id() + "_button");
			}
			this._tabs.addComponent(button);
			return child;
		}
		return null;
	}
	,addComponentAt: function(child,index) {
		if(child != this._content && child != this._tabs) {
			var text = child.get_text();
			var icon = null;
			if(((child) instanceof haxe_ui_containers_Box)) {
				icon = haxe_ui_util_Variant.toString((js_Boot.__cast(child , haxe_ui_containers_Box)).get_icon());
			}
			child.registerEvent("propertychange",$bind(this,this.onPagePropertyChanged));
			this._views.splice(index,0,child);
			var button = new haxe_ui_components_Button();
			button.set_text(text);
			button.set_icon(haxe_ui_util_Variant.fromString(icon));
			button.set_tooltip(child.get_tooltip());
			if(child.get_id() != null) {
				button.set_id(child.get_id() + "_button");
			}
			this._tabs.addComponentAt(button,index);
			return child;
		}
		return null;
	}
	,onPagePropertyChanged: function(event) {
		if(event.data == "text") {
			var index = this._views.indexOf(event.target);
			var button = this._tabs.getTab(index);
			if(button != null && button.get_text() != event.target.get_text()) {
				button.set_text(event.target.get_text());
			}
		} else if(event.data == "icon") {
			var index = this._views.indexOf(event.target);
			var button = js_Boot.__cast(this._tabs.getTab(index) , haxe_ui_components_Button);
			if(button != null && haxe_ui_util_Variant.neq(button.get_icon(),(js_Boot.__cast(event.target , haxe_ui_containers_Box)).get_icon())) {
				button.set_icon((js_Boot.__cast(event.target , haxe_ui_containers_Box)).get_icon());
			}
		} else if(event.data == "disabled") {
			var index = this._views.indexOf(event.target);
			var button = js_Boot.__cast(this._tabs.getTab(index) , haxe_ui_components_Button);
			if(button != null && button.get_disabled() != (js_Boot.__cast(event.target , haxe_ui_containers_Box)).get_disabled()) {
				button.set_disabled((js_Boot.__cast(event.target , haxe_ui_containers_Box)).get_disabled());
			}
		}
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(child != this._content && child != this._tabs) {
			var _g = this._views.indexOf(child);
			if(_g != -1) {
				var i = _g;
				this._tabs.removeComponentAt(i,dispose,invalidate);
				return child;
			}
		}
		return null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return this._tabs.removeComponentAt(index,dispose,invalidate);
	}
	,getComponentIndex: function(child) {
		return this._views.indexOf(child);
	}
	,setComponentIndex: function(child,index) {
		if(child != this._content && child != this._tabs) {
			var _g = this._views.indexOf(child);
			if(_g != -1) {
				var i = _g;
				this._views.splice(i,1);
				this._views.splice(index,0,child);
				this._tabs.setComponentIndex(this._tabs.getComponentAt(i),index);
				return child;
			}
		}
		return null;
	}
	,getComponentAt: function(index) {
		return this._views[index];
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		var match = haxe_ui_core_CompositeBuilder.prototype.findComponent.call(this,criteria,type,recursive,searchType);
		if(match == null) {
			var _g = 0;
			var _g1 = this._views;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				match = view.findComponent(criteria,type,recursive,searchType);
				if(view.matchesSearch(criteria,type,searchType)) {
					return view;
				} else {
					match = view.findComponent(criteria,type,recursive,searchType);
				}
				if(match != null) {
					break;
				}
			}
		}
		return match;
	}
	,applyStyle: function(style) {
		haxe_ui_core_CompositeBuilder.prototype.applyStyle.call(this,style);
		var c = this._component.findComponent("tabview-tabs",haxe_ui_core_Component,false);
		if(c != null) {
			var invalidate = false;
			if(style.color != null && c.get_customStyle().color != style.color) {
				c.get_customStyle().color = style.color;
				invalidate = true;
			}
			if(style.fontName != null && c.get_customStyle().fontName != style.fontName) {
				c.get_customStyle().fontName = style.fontName;
				invalidate = true;
			}
			if(style.fontSize != null && c.get_customStyle().fontSize != style.fontSize) {
				c.get_customStyle().fontSize = style.fontSize;
				invalidate = true;
			}
			if(style.cursor != null && c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(style.textAlign != null && c.get_customStyle().textAlign != style.textAlign) {
				c.get_customStyle().textAlign = style.textAlign;
				invalidate = true;
			}
			if(style.fontBold != null && c.get_customStyle().fontBold != style.fontBold) {
				c.get_customStyle().fontBold = style.fontBold;
				invalidate = true;
			}
			if(style.fontUnderline != null && c.get_customStyle().fontUnderline != style.fontUnderline) {
				c.get_customStyle().fontUnderline = style.fontUnderline;
				invalidate = true;
			}
			if(style.fontItalic != null && c.get_customStyle().fontItalic != style.fontItalic) {
				c.get_customStyle().fontItalic = style.fontItalic;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
	}
	,__class__: haxe_ui_containers__$TabView_Builder
});
var haxe_ui_containers_TableView = function() {
	haxe_ui_containers_ScrollView.call(this);
};
$hxClasses["haxe.ui.containers.TableView"] = haxe_ui_containers_TableView;
haxe_ui_containers_TableView.__name__ = "haxe.ui.containers.TableView";
haxe_ui_containers_TableView.__interfaces__ = [haxe_ui_containers_IVirtualContainer,haxe_ui_core_IDataComponent];
haxe_ui_containers_TableView.__super__ = haxe_ui_containers_ScrollView;
haxe_ui_containers_TableView.prototype = $extend(haxe_ui_containers_ScrollView.prototype,{
	clearContents: function(clearHeader) {
		if(clearHeader == null) {
			clearHeader = false;
		}
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("clearContents",clearHeader);
	}
	,addColumn: function(text) {
		return haxe_ui_util_Variant.toComponent(this.behaviours.call("addColumn",text));
	}
	,removeColumn: function(text) {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("removeColumn",text);
	}
	,_itemRendererClass: null
	,get_itemRendererClass: function() {
		return this._itemRendererClass;
	}
	,set_itemRendererClass: function(value) {
		if(this._itemRendererClass != value) {
			this._itemRendererClass = value;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,_itemRenderer: null
	,get_itemRenderer: function() {
		return this._itemRenderer;
	}
	,set_itemRenderer: function(value) {
		if(this._itemRenderer != value) {
			this._itemRenderer = value;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,registerComposite: function() {
		haxe_ui_containers_ScrollView.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers__$TableView_Events;
		this._compositeBuilderClass = haxe_ui_containers__$TableView_Builder;
		this._defaultLayoutClass = haxe_ui_containers__$TableView_Layout;
	}
	,_internal__onComponentEvent: null
	,onComponentEvent: null
	,set_onComponentEvent: function(value) {
		if(this._internal__onComponentEvent != null) {
			this.unregisterEvent("itemcomponentevent",this._internal__onComponentEvent);
			this._internal__onComponentEvent = null;
		}
		if(value != null) {
			this._internal__onComponentEvent = value;
			this.registerEvent("itemcomponentevent",value);
		}
		return value;
	}
	,_internal__onSortChanged: null
	,onSortChanged: null
	,set_onSortChanged: function(value) {
		if(this._internal__onSortChanged != null) {
			this.unregisterEvent("sortchanged",this._internal__onSortChanged);
			this._internal__onSortChanged = null;
		}
		if(value != null) {
			this._internal__onSortChanged = value;
			this.registerEvent("sortchanged",value);
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_ScrollView.prototype.registerBehaviours.call(this);
		this.behaviours.register("dataSource",haxe_ui_containers__$TableView_DataSourceBehaviour);
		this.behaviours.register("itemWidth",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("itemHeight",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("itemCount",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("variableItemSize",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("selectedIndex",haxe_ui_containers__$TableView_SelectedIndexBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedItem",haxe_ui_containers__$TableView_SelectedItemBehaviour);
		this.behaviours.register("selectedIndices",haxe_ui_containers__$TableView_SelectedIndicesBehaviour);
		this.behaviours.register("selectedItems",haxe_ui_containers__$TableView_SelectedItemsBehaviour);
		this.behaviours.register("selectionMode",haxe_ui_containers__$TableView_SelectionModeBehaviour,haxe_ui_util_Variant.fromString("one-item"));
		this.behaviours.register("longPressSelectionTime",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(500));
		this.behaviours.register("header",haxe_ui_containers__$TableView_GetHeader);
		this.behaviours.register("clearContents",haxe_ui_containers__$TableView_ClearTable);
		this.behaviours.register("addColumn",haxe_ui_containers__$TableView_AddColumn);
		this.behaviours.register("removeColumn",haxe_ui_containers__$TableView_RemoveColumn);
	}
	,get_dataSource: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDataSource(this.behaviours.get("dataSource"));
	}
	,set_dataSource: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dataSource",haxe_ui_util_Variant.fromDataSource(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"dataSource"));
		return value;
	}
	,get_itemWidth: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("itemWidth"));
	}
	,set_itemWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("itemWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"itemWidth"));
		return value;
	}
	,get_itemHeight: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("itemHeight"));
	}
	,set_itemHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("itemHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"itemHeight"));
		return value;
	}
	,get_itemCount: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("itemCount"));
	}
	,set_itemCount: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("itemCount",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"itemCount"));
		return value;
	}
	,get_variableItemSize: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("variableItemSize"));
	}
	,set_variableItemSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("variableItemSize",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"variableItemSize"));
		return value;
	}
	,get_selectedIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedIndex"));
		return value;
	}
	,get_selectedItem: function() {
		return this.behaviours.getDynamic("selectedItem");
	}
	,set_selectedItem: function(value) {
		this.behaviours.setDynamic("selectedItem",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedItem"));
		return value;
	}
	,get_selectedIndices: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toArray(this.behaviours.get("selectedIndices"));
	}
	,set_selectedIndices: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedIndices",haxe_ui_util_Variant.fromArray(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedIndices"));
		return value;
	}
	,get_selectedItems: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toArray(this.behaviours.get("selectedItems"));
	}
	,set_selectedItems: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedItems",haxe_ui_util_Variant.fromArray(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedItems"));
		return value;
	}
	,get_selectionMode: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("selectionMode"));
	}
	,set_selectionMode: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectionMode",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectionMode"));
		return value;
	}
	,get_longPressSelectionTime: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("longPressSelectionTime"));
	}
	,set_longPressSelectionTime: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("longPressSelectionTime",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"longPressSelectionTime"));
		return value;
	}
	,get_header: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("header"));
	}
	,set_header: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("header",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"header"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ScrollView.prototype.cloneComponent.call(this);
		if(this.get_itemRendererClass() != null) {
			c.set_itemRendererClass(this.get_itemRendererClass());
		}
		if(this.get_itemRenderer() != null) {
			c.set_itemRenderer(this.get_itemRenderer());
		}
		if(this.get_dataSource() != null) {
			c.set_dataSource(this.get_dataSource());
		}
		c.set_itemWidth(this.get_itemWidth());
		c.set_itemHeight(this.get_itemHeight());
		c.set_itemCount(this.get_itemCount());
		c.set_variableItemSize(this.get_variableItemSize());
		c.set_selectedIndex(this.get_selectedIndex());
		if(this.get_selectedItem() != null) {
			c.set_selectedItem(this.get_selectedItem());
		}
		if(this.get_selectedIndices() != null) {
			c.set_selectedIndices(this.get_selectedIndices());
		}
		if(this.get_selectedItems() != null) {
			c.set_selectedItems(this.get_selectedItems());
		}
		if(this.get_selectionMode() != null) {
			c.set_selectionMode(this.get_selectionMode());
		}
		c.set_longPressSelectionTime(this.get_longPressSelectionTime());
		if(this.get_header() != null) {
			c.set_header(this.get_header());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_TableView();
	}
	,__class__: haxe_ui_containers_TableView
	,__properties__: $extend(haxe_ui_containers_ScrollView.prototype.__properties__,{set_header:"set_header",get_header:"get_header",set_longPressSelectionTime:"set_longPressSelectionTime",get_longPressSelectionTime:"get_longPressSelectionTime",set_selectionMode:"set_selectionMode",get_selectionMode:"get_selectionMode",set_selectedItems:"set_selectedItems",get_selectedItems:"get_selectedItems",set_selectedIndices:"set_selectedIndices",get_selectedIndices:"get_selectedIndices",set_selectedItem:"set_selectedItem",get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",set_variableItemSize:"set_variableItemSize",get_variableItemSize:"get_variableItemSize",set_itemCount:"set_itemCount",get_itemCount:"get_itemCount",set_itemHeight:"set_itemHeight",get_itemHeight:"get_itemHeight",set_itemWidth:"set_itemWidth",get_itemWidth:"get_itemWidth",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource",set_onSortChanged:"set_onSortChanged",set_onComponentEvent:"set_onComponentEvent",set_itemRenderer:"set_itemRenderer",get_itemRenderer:"get_itemRenderer",set_itemRendererClass:"set_itemRendererClass",get_itemRendererClass:"get_itemRendererClass"})
});
var haxe_ui_containers__$TableView_CompoundItemRenderer = function() {
	haxe_ui_core_ItemRenderer.call(this);
	this.set_layout(haxe_ui_layouts_LayoutFactory.createFromName("horizontal"));
	this.set_styleString("spacing: 2px;");
	this.removeClass("itemrenderer");
};
$hxClasses["haxe.ui.containers._TableView.CompoundItemRenderer"] = haxe_ui_containers__$TableView_CompoundItemRenderer;
haxe_ui_containers__$TableView_CompoundItemRenderer.__name__ = "haxe.ui.containers._TableView.CompoundItemRenderer";
haxe_ui_containers__$TableView_CompoundItemRenderer.__super__ = haxe_ui_core_ItemRenderer;
haxe_ui_containers__$TableView_CompoundItemRenderer.prototype = $extend(haxe_ui_core_ItemRenderer.prototype,{
	onDataChanged: function(data) {
		var renderers = this.findComponents(null,haxe_ui_core_ItemRenderer);
		var _g = 0;
		while(_g < renderers.length) {
			var r = renderers[_g];
			++_g;
			r.onDataChanged(data);
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_ItemRenderer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ItemRenderer.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers__$TableView_CompoundItemRenderer();
	}
	,__class__: haxe_ui_containers__$TableView_CompoundItemRenderer
});
var haxe_ui_containers__$TableView_Events = function(tableview) {
	haxe_ui_containers_ScrollViewEvents.call(this,tableview);
	this._tableview = tableview;
};
$hxClasses["haxe.ui.containers._TableView.Events"] = haxe_ui_containers__$TableView_Events;
haxe_ui_containers__$TableView_Events.__name__ = "haxe.ui.containers._TableView.Events";
haxe_ui_containers__$TableView_Events.__super__ = haxe_ui_containers_ScrollViewEvents;
haxe_ui_containers__$TableView_Events.prototype = $extend(haxe_ui_containers_ScrollViewEvents.prototype,{
	_tableview: null
	,register: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.register.call(this);
		this.registerEvent("scrollchange",$bind(this,this.onScrollChange));
		this.registerEvent("renderercreated",$bind(this,this.onRendererCreated));
		this.registerEvent("rendererdestroyed",$bind(this,this.onRendererDestroyed));
	}
	,unregister: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.unregister.call(this);
		this.unregisterEvent("scrollchange",$bind(this,this.onScrollChange));
		this.unregisterEvent("renderercreated",$bind(this,this.onRendererCreated));
		this.unregisterEvent("rendererdestroyed",$bind(this,this.onRendererDestroyed));
	}
	,onScrollChange: function(e) {
		if(this._tableview.get_virtual()) {
			var _this = this._tableview;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		var header = this._tableview.findComponent(null,haxe_ui_containers_Header,true);
		if(header == null) {
			return;
		}
		var vscroll = this._tableview.findComponent(null,haxe_ui_components_VerticalScroll);
		if(vscroll != null && vscroll.get_hidden() == false) {
			header.addClass("scrolling");
			header.invalidateComponent(null,true);
		} else {
			header.removeClass("scrolling");
			header.invalidateComponent(null,true);
		}
		var usableWidth = this._tableview.get_layout().get_usableWidth();
		var rc = new haxe_ui_geom_Rectangle(this._tableview.get_hscrollPos(),1,usableWidth,header.get_height());
		header.set_componentClipRect(rc);
	}
	,onRendererCreated: function(e) {
		var instance = js_Boot.__cast(e.data , haxe_ui_core_ItemRenderer);
		instance.registerEvent("mousedown",$bind(this,this.onRendererMouseDown));
		instance.registerEvent("click",$bind(this,this.onRendererClick));
		instance.registerEvent("rightclick",$bind(this,this.onRendererClick));
		if(this._tableview.get_selectedIndices().indexOf(instance.itemIndex) != -1) {
			var builder = js_Boot.__cast(this._tableview._compositeBuilder , haxe_ui_containers__$TableView_Builder);
			builder.addItemRendererClass(instance,":selected");
		}
	}
	,onRendererDestroyed: function(e) {
		var instance = js_Boot.__cast(e.data , haxe_ui_core_ItemRenderer);
		instance.unregisterEvent("mousedown",$bind(this,this.onRendererMouseDown));
		instance.unregisterEvent("click",$bind(this,this.onRendererClick));
		instance.unregisterEvent("rightclick",$bind(this,this.onRendererClick));
		if(this._tableview.get_selectedIndices().indexOf(instance.itemIndex) != -1) {
			var builder = js_Boot.__cast(this._tableview._compositeBuilder , haxe_ui_containers__$TableView_Builder);
			builder.addItemRendererClass(instance,":selected",false);
		}
	}
	,onRendererMouseDown: function(e) {
		if(this._tableview.get_selectionMode() == "multiple-long-press") {
			if(this._tableview.get_selectedIndices().length == 0) {
				this.startLongPressSelection(e);
			}
		}
	}
	,startLongPressSelection: function(e) {
		var _gthis = this;
		var timerClick = null;
		var currentMouseX = e.screenX;
		var currentMouseY = e.screenY;
		var renderer = js_Boot.__cast(e.target , haxe_ui_core_ItemRenderer);
		var __onMouseMove = null;
		var __onMouseUp = null;
		var __onMouseClick = null;
		__onMouseMove = function(_e) {
			currentMouseX = _e.screenX;
			currentMouseY = _e.screenY;
		};
		__onMouseUp = function(_e) {
			if(timerClick != null) {
				timerClick.stop();
				timerClick = null;
			}
			renderer.get_screen().unregisterEvent("mousemove",__onMouseMove);
			renderer.get_screen().unregisterEvent("mouseup",__onMouseUp);
		};
		__onMouseClick = function(_e) {
			_e.cancel();
			renderer.unregisterEvent("click",__onMouseClick);
		};
		renderer.get_screen().registerEvent("mousemove",__onMouseMove);
		renderer.get_screen().registerEvent("mouseup",__onMouseUp);
		timerClick = haxe_Timer.delay(function() {
			if(timerClick != null) {
				timerClick = null;
				var timerClick1;
				if(renderer.hitTest(currentMouseX,currentMouseY)) {
					var x1 = e.screenX;
					var y1 = e.screenY;
					timerClick1 = Math.sqrt((x1 - currentMouseX) * (x1 - currentMouseX) + (y1 - currentMouseY) * (y1 - currentMouseY)) < 2 * haxe_ui_Toolkit.pixelsPerRem;
				} else {
					timerClick1 = false;
				}
				if(timerClick1) {
					_gthis.toggleSelection(renderer);
					renderer.registerEvent("click",__onMouseClick,1);
				}
			}
		},this._tableview.get_longPressSelectionTime());
	}
	,onContainerEventsStatusChanged: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.onContainerEventsStatusChanged.call(this);
		if(this._containerEventsPaused == true) {
			this._tableview.findComponent("tableview-contents",haxe_ui_core_Component,true,"css").removeClass(":hover",true,true);
		} else {
			var tmp = this._lastMousePos != null;
		}
	}
	,onRendererClick: function(e) {
		if(this._containerEventsPaused == true) {
			return;
		}
		var components = e.target.findComponentsUnderPoint(e.screenX,e.screenY);
		var _g = 0;
		while(_g < components.length) {
			var component = components[_g];
			++_g;
			if(((component) instanceof haxe_ui_core_InteractiveComponent) && (js_Boot.__cast(component , haxe_ui_core_InteractiveComponent)).get_allowInteraction() == true) {
				return;
			}
		}
		var renderer = js_Boot.__cast(e.target , haxe_ui_core_ItemRenderer);
		switch(this._tableview.get_selectionMode()) {
		case "disabled":
			break;
		case "multiple-click-modifier-key":case "multiple-modifier-key":
			if(e.ctrlKey == true) {
				this.toggleSelection(renderer);
			} else if(e.shiftKey == true) {
				var selectedIndices = this._tableview.get_selectedIndices();
				var fromIndex = selectedIndices.length > 0 ? selectedIndices[selectedIndices.length - 1] : 0;
				var toIndex = renderer.itemIndex;
				if(fromIndex < toIndex) {
					var _g = 0;
					while(_g < selectedIndices.length) {
						var i = selectedIndices[_g];
						++_g;
						if(i < fromIndex) {
							fromIndex = i;
						}
					}
				} else {
					var tmp = fromIndex;
					fromIndex = toIndex;
					toIndex = tmp;
				}
				this.selectRange(fromIndex,toIndex);
			} else if(this._tableview.get_selectionMode() == "multiple-click-modifier-key") {
				this._tableview.set_selectedIndex(renderer.itemIndex);
			}
			break;
		case "multiple-long-press":
			var selectedIndices = this._tableview.get_selectedIndices();
			if(selectedIndices.length > 0) {
				this.toggleSelection(renderer);
			}
			break;
		case "one-item":
			this._tableview.set_selectedIndex(renderer.itemIndex);
			break;
		case "one-item-repeated":
			this._tableview.set_selectedIndices([renderer.itemIndex]);
			break;
		default:
		}
	}
	,toggleSelection: function(renderer) {
		var itemIndex = renderer.itemIndex;
		var selectedIndices = this._tableview.get_selectedIndices().slice();
		var index = selectedIndices.indexOf(itemIndex);
		if(index == -1) {
			selectedIndices.push(itemIndex);
		} else {
			selectedIndices.splice(index,1);
		}
		this._tableview.set_selectedIndices(selectedIndices);
	}
	,selectRange: function(fromIndex,toIndex) {
		var tmp = this._tableview;
		var _g = [];
		var _g1 = fromIndex;
		var _g2 = toIndex + 1;
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push(i);
		}
		tmp.set_selectedIndices(_g);
	}
	,__class__: haxe_ui_containers__$TableView_Events
});
var haxe_ui_containers__$TableView_Builder = function(tableview) {
	haxe_ui_containers_ScrollViewBuilder.call(this,tableview);
	this._tableview = tableview;
};
$hxClasses["haxe.ui.containers._TableView.Builder"] = haxe_ui_containers__$TableView_Builder;
haxe_ui_containers__$TableView_Builder.__name__ = "haxe.ui.containers._TableView.Builder";
haxe_ui_containers__$TableView_Builder.__super__ = haxe_ui_containers_ScrollViewBuilder;
haxe_ui_containers__$TableView_Builder.prototype = $extend(haxe_ui_containers_ScrollViewBuilder.prototype,{
	_tableview: null
	,_header: null
	,create: function() {
		this.createContentContainer(this._tableview.get_virtual() ? "absolute" : "vertical");
	}
	,onInitialize: function() {
		if(this._header == null) {
			return;
		}
		if(this._tableview.get_itemRenderer() == null) {
			this.buildDefaultRenderer();
		} else {
			this.fillExistingRenderer();
		}
	}
	,onReady: function() {
		if(this._header == null) {
			return;
		}
		if(this._tableview.get_itemRenderer() == null) {
			this.buildDefaultRenderer();
		} else {
			this.fillExistingRenderer();
		}
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,createContentContainer: function(layoutName) {
		if(this._contents == null) {
			haxe_ui_containers_ScrollViewBuilder.prototype.createContentContainer.call(this,layoutName);
			this._contents.addClass("tableview-contents");
		}
	}
	,addComponent: function(child) {
		var r = null;
		if(((child) instanceof haxe_ui_core_ItemRenderer)) {
			var itemRenderer = this._tableview.get_itemRenderer();
			if(itemRenderer == null) {
				itemRenderer = new haxe_ui_containers__$TableView_CompoundItemRenderer();
				this._tableview.set_itemRenderer(itemRenderer);
			}
			itemRenderer.addComponent(child);
			return child;
		} else if(((child) instanceof haxe_ui_containers_Header)) {
			this._header = js_Boot.__cast(child , haxe_ui_containers_Header);
			this._header.registerEvent("componentadded",$bind(this,this.onColumnAdded));
			this._header.registerEvent("sortchanged",$bind(this,this.onSortChanged));
			r = null;
		} else {
			r = haxe_ui_containers_ScrollViewBuilder.prototype.addComponent.call(this,child);
		}
		return r;
	}
	,onColumnAdded: function(e) {
		if(this._tableview.get_itemRenderer() == null) {
			this.buildDefaultRenderer();
		} else {
			this.fillExistingRenderer();
		}
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,onSortChanged: function(e) {
		this._tableview.dispatch(e);
		if(e.canceled == false) {
			var column = js_Boot.__cast(e.target , haxe_ui_components_Column);
			var field = column.get_id();
			if(column.sortField != null) {
				field = column.sortField;
			}
			this._tableview.get_dataSource().sort(field,e.direction);
		}
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(((child) instanceof haxe_ui_containers_Header) == true) {
			this._header = null;
			return null;
		}
		return haxe_ui_containers_ScrollViewBuilder.prototype.removeComponent.call(this,child,dispose,invalidate);
	}
	,createRenderer: function(id) {
		var itemRenderer = null;
		if(this._tableview.get_itemRendererClass() == null) {
			itemRenderer = new haxe_ui_core_ItemRenderer();
		} else {
			itemRenderer = Type.createInstance(this._tableview.get_itemRendererClass(),[]);
		}
		if((itemRenderer._children == null ? [] : itemRenderer._children).length == 0) {
			var label = new haxe_ui_components_Label();
			label.set_id(id);
			label.set_percentWidth(100);
			label.set_verticalAlign("center");
			itemRenderer.addComponent(label);
		}
		return itemRenderer;
	}
	,buildDefaultRenderer: function() {
		var r = new haxe_ui_containers__$TableView_CompoundItemRenderer();
		if(this._header != null) {
			var _g = 0;
			var _g1 = this._header.findComponents(null,haxe_ui_components_Column);
			while(_g < _g1.length) {
				var column = _g1[_g];
				++_g;
				if(column.get_id() == null) {
					continue;
				}
				var itemRenderer = this.createRenderer(column.get_id());
				r.addComponent(itemRenderer);
			}
		}
		this._tableview.set_itemRenderer(r);
	}
	,fillExistingRenderer: function() {
		var i = 0;
		var _g = 0;
		var _g1 = this._header.findComponents(null,haxe_ui_components_Column);
		while(_g < _g1.length) {
			var column = _g1[_g];
			++_g;
			if(column.get_id() == null) {
				continue;
			}
			var existing = this._tableview.get_itemRenderer().findComponent(column.get_id(),haxe_ui_core_ItemRenderer,true);
			if(existing == null) {
				var temp = this._tableview.get_itemRenderer().findComponent(column.get_id(),haxe_ui_core_Component,true);
				if(temp != null) {
					if(((temp) instanceof haxe_ui_core_ItemRenderer)) {
						existing = js_Boot.__cast(temp , haxe_ui_core_ItemRenderer);
					} else {
						existing = temp.findAncestor(null,haxe_ui_core_ItemRenderer);
					}
					this._tableview.get_itemRenderer().setComponentIndex(existing,i);
				} else {
					var itemRenderer = this.createRenderer(column.get_id());
					this._tableview.get_itemRenderer().addComponentAt(itemRenderer,i);
				}
			} else {
				this._tableview.get_itemRenderer().setComponentIndex(existing,i);
			}
			++i;
		}
	}
	,verticalConstraintModifier: function() {
		if(this._header == null) {
			return 0;
		}
		return this._header.get_height();
	}
	,onVirtualChanged: function() {
		this._contents.set_layoutName(this._tableview.get_virtual() ? "absolute" : "vertical");
	}
	,get_virtualHorizontal: function() {
		return false;
	}
	,addItemRendererClass: function(child,className,add) {
		if(add == null) {
			add = true;
		}
		child.walkComponents(function(c) {
			if(((c) instanceof haxe_ui_core_ItemRenderer)) {
				if(add == true) {
					c.addClass(className);
				} else {
					c.removeClass(className);
				}
			} else {
				c.invalidateComponent("style",false);
			}
			return true;
		});
	}
	,__class__: haxe_ui_containers__$TableView_Builder
});
var haxe_ui_layouts_ScrollViewLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.layouts.ScrollViewLayout"] = haxe_ui_layouts_ScrollViewLayout;
haxe_ui_layouts_ScrollViewLayout.__name__ = "haxe.ui.layouts.ScrollViewLayout";
haxe_ui_layouts_ScrollViewLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_ScrollViewLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return;
		}
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var borderSize = this.get_borderSize();
		if(hscroll != null && this.hidden(hscroll) == false) {
			hscroll.moveComponent(this.get_paddingLeft() + borderSize,this.get_component().get_componentHeight() - hscroll.get_componentHeight() - this.get_paddingBottom() + this.marginTop(hscroll) - borderSize);
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			vscroll.moveComponent(this.get_component().get_componentWidth() - vscroll.get_componentWidth() - this.get_paddingRight() + this.marginLeft(vscroll) - borderSize,this.get_paddingTop() + borderSize);
		}
		var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.moveComponent(this.get_paddingLeft() + borderSize,this.get_paddingTop() + borderSize);
		}
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var scrollview = js_Boot.__cast(this._component , haxe_ui_containers_ScrollView);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var usableSize = this.get_usableSize();
		var percentWidth = 100;
		var percentHeight = 100;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child != hscroll && child != vscroll) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				cx = usableSize.width * child.get_percentWidth() / percentWidth - this.marginLeft(child) - this.marginRight(child);
			}
			if(child.get_percentHeight() != null) {
				cy = usableSize.height * child.get_percentHeight() / percentHeight - this.marginTop(child) - this.marginBottom(child);
			}
			if(this.fixedMinWidth(child) && child.get_percentWidth() != null) {
				percentWidth -= child.get_percentWidth();
			}
			if(this.fixedMinHeight(child) && child.get_percentHeight() != null) {
				percentHeight -= child.get_percentHeight();
			}
			if(scrollview.get_autoHideScrolls() == true) {
				if(child == hscroll && vscroll != null && vscroll.get_hidden() == false) {
					cx -= vscroll.get_width();
				} else if(child == vscroll && hscroll != null && hscroll.get_hidden() == false) {
					cy -= hscroll.get_height();
				}
			}
			child.resizeComponent(cx,cy);
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll != null && hscroll.get_includeInLayout() == true && this.hidden(hscroll) == false) {
			size.height -= hscroll.get_componentHeight() - this.marginTop(hscroll);
		}
		if(vscroll != null && vscroll.get_includeInLayout() == true && this.hidden(vscroll) == false) {
			size.width -= vscroll.get_componentWidth() - this.marginLeft(vscroll);
		}
		if((js_Boot.__cast(this.get_component() , haxe_ui_containers_ScrollView)).get_native() == true || this._component.get_isNativeScroller() == true) {
			var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
			if(contents != null) {
				if(contents.get_componentWidth() > size.width) {
					size.height -= haxe_ui_core_Platform.get_hscrollHeight();
				}
				if(contents.get_componentHeight() > size.height) {
					size.width -= haxe_ui_core_Platform.get_vscrollWidth();
				}
			}
		}
		var borderSize = this.get_borderSize();
		size.width -= borderSize * 2;
		size.height -= borderSize * 2;
		return size;
	}
	,calcAutoSize: function(exclusions) {
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,[hscroll,vscroll]);
		if(hscroll != null && hscroll.get_hidden() == false) {
			size.height += hscroll.get_componentHeight();
		}
		if(vscroll != null && vscroll.get_hidden() == false) {
			size.width += vscroll.get_componentWidth();
		}
		if((js_Boot.__cast(this.get_component() , haxe_ui_containers_ScrollView)).get_native() == true || this._component.get_isNativeScroller() == true) {
			var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
			if(contents != null) {
				if(contents.get_width() > this.get_component().get_width()) {
					size.height += haxe_ui_core_Platform.get_hscrollHeight();
				}
				if(contents.get_height() > this.get_component().get_height()) {
					size.width += haxe_ui_core_Platform.get_vscrollWidth();
				}
			}
		}
		size.width += this.get_borderSize() * 2;
		size.height += this.get_borderSize() * 2;
		return size;
	}
	,__class__: haxe_ui_layouts_ScrollViewLayout
});
var haxe_ui_layouts_VirtualLayout = function() {
	this._lastItemRenderer = null;
	this._firstPass = true;
	this._sizeCache = [];
	this._rendererPool = [];
	this._lastIndex = -1;
	this._firstIndex = -1;
	haxe_ui_layouts_ScrollViewLayout.call(this);
};
$hxClasses["haxe.ui.layouts.VirtualLayout"] = haxe_ui_layouts_VirtualLayout;
haxe_ui_layouts_VirtualLayout.__name__ = "haxe.ui.layouts.VirtualLayout";
haxe_ui_layouts_VirtualLayout.__super__ = haxe_ui_layouts_ScrollViewLayout;
haxe_ui_layouts_VirtualLayout.prototype = $extend(haxe_ui_layouts_ScrollViewLayout.prototype,{
	_firstIndex: null
	,_lastIndex: null
	,_rendererPool: null
	,_sizeCache: null
	,contents: null
	,get_contents: function() {
		if(this.contents == null) {
			this.contents = this.findComponent("scrollview-contents",null,false,"css");
		}
		return this.contents;
	}
	,get_dataSource: function() {
		return (js_Boot.__cast(this._component , haxe_ui_core_IDataComponent)).get_dataSource();
	}
	,itemWidth: null
	,get_itemWidth: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemWidth() > 0) {
			return comp.get_itemWidth();
		}
		var _this = this.get_contents();
		var childComponents = _this._children == null ? [] : _this._children;
		var result = 0;
		if(childComponents.length > 0) {
			result = childComponents[0].get_width();
			if(result <= 0) {
				childComponents[0].syncComponentValidation();
				result = childComponents[0].get_width();
			}
		}
		if(result > 0) {
			comp.set_itemWidth(result);
		} else {
			result = 1;
		}
		return result;
	}
	,_firstPass: null
	,itemHeight: null
	,get_itemHeight: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemHeight() > 0) {
			return comp.get_itemHeight();
		}
		var _this = this.get_contents();
		var childComponents = _this._children == null ? [] : _this._children;
		var result = 0;
		if(childComponents.length > 0) {
			result = childComponents[0].get_height();
			if(result <= 0) {
				childComponents[0].syncComponentValidation();
				result = childComponents[0].get_height();
			}
		}
		if(result <= 0) {
			result = 25;
		} else if(comp.get_virtual() == true) {
			if(this._firstPass == false) {
				comp.set_itemHeight(result);
			}
			if(this._firstPass == true) {
				this._firstPass = false;
			}
		}
		return result;
	}
	,itemCount: null
	,get_itemCount: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemCount() >= 0) {
			return comp.get_itemCount();
		} else {
			return 0;
		}
	}
	,refresh: function() {
		this.refreshData();
		haxe_ui_layouts_ScrollViewLayout.prototype.refresh.call(this);
	}
	,refreshData: function() {
		if(this.get_dataSource() == null) {
			return;
		}
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_virtual() == false) {
			this.refreshNonVirtualData();
		} else {
			this.refreshVirtualData();
		}
	}
	,_lastItemRenderer: null
	,refreshNonVirtualData: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemRenderer() != this._lastItemRenderer) {
			this._lastItemRenderer = comp.get_itemRenderer();
			this.get_contents().removeAllComponents();
		}
		var dataSource = this.get_dataSource();
		var contents = this.get_contents();
		var _g = 0;
		var _g1 = dataSource.get_size();
		while(_g < _g1) {
			var n = _g++;
			var data = dataSource.get(n);
			var item = null;
			if(n < (contents._children == null ? [] : contents._children).length) {
				item = js_Boot.__cast((contents._children == null ? [] : contents._children)[n] , haxe_ui_core_ItemRenderer);
				if(item.get_data() == data) {
					item.invalidateComponent("data",false);
					continue;
				}
				var cls = this.itemClass(n,data);
				if(!js_Boot.__instanceof(item,cls)) {
					this.removeRenderer(item);
					item = this.getRenderer(cls,n);
					contents.addComponentAt(item,n);
				}
			} else {
				var cls1 = this.itemClass(n,data);
				item = this.getRenderer(cls1,n);
				contents.addComponent(item);
			}
			var className = n % 2 == 0 ? "even" : "odd";
			if(item.classes.indexOf(className) == -1) {
				var inverseClassName = n % 2 == 0 ? "odd" : "even";
				item.removeClass(inverseClassName);
				item.addClass(className);
			}
			item.itemIndex = n;
			item.set_data(data);
		}
		while(dataSource.get_size() < (contents._children == null ? [] : contents._children).length) {
			var item = js_Boot.__cast((contents._children == null ? [] : contents._children)[(contents._children == null ? [] : contents._children).length - 1] , haxe_ui_core_ItemRenderer);
			this.removeRenderer(item);
		}
	}
	,refreshVirtualData: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemRenderer() != this._lastItemRenderer) {
			this._lastItemRenderer = comp.get_itemRenderer();
			this.get_contents().removeAllComponents();
			this._rendererPool = [];
		}
		this.removeInvisibleRenderers();
		this.calculateRangeVisible();
		this.updateScroll();
		var dataSource = this.get_dataSource();
		var i = 0;
		var _g = this._firstIndex;
		var _g1 = this._lastIndex;
		while(_g < _g1) {
			var n = _g++;
			var data = dataSource.get(n);
			var item = null;
			var cls = this.itemClass(n,data);
			var _this = this.get_contents();
			if((_this._children == null ? [] : _this._children).length <= i) {
				item = this.getRenderer(cls,n);
				this.get_contents().addComponent(item);
			} else {
				var _this1 = this.get_contents();
				item = js_Boot.__cast((_this1._children == null ? [] : _this1._children)[i] , haxe_ui_core_ItemRenderer);
				if(!js_Boot.__instanceof(item,cls)) {
					item = this.getRenderer(cls,n);
					this.get_contents().addComponentAt(item,i);
				} else if(item.itemIndex != n) {
					if(this._component.hasEvent("rendererdestroyed")) {
						this._component.dispatch(new haxe_ui_events_UIEvent("rendererdestroyed",null,item));
					}
					this._component.setComponentIndex(item,i);
					item.itemIndex = n;
					if(this._component.hasEvent("renderercreated")) {
						this._component.dispatch(new haxe_ui_events_UIEvent("renderercreated",null,item));
					}
				}
			}
			var className = n % 2 == 0 ? "even" : "odd";
			if(item.classes.indexOf(className) == -1) {
				var inverseClassName = n % 2 == 0 ? "odd" : "even";
				item.removeClass(inverseClassName);
				item.addClass(className);
			}
			item.set_data(data);
			++i;
		}
		while(true) {
			var _this = this.get_contents();
			if(!((_this._children == null ? [] : _this._children).length > i)) {
				break;
			}
			var _this1 = this.get_contents();
			var tmp = _this1._children == null ? [] : _this1._children;
			var _this2 = this.get_contents();
			this.removeRenderer(js_Boot.__cast(tmp[(_this2._children == null ? [] : _this2._children).length - 1] , haxe_ui_core_ItemRenderer),false);
		}
	}
	,calculateRangeVisible: function() {
	}
	,updateScroll: function() {
	}
	,itemClass: function(index,data) {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemRendererClass() != null) {
			return comp.get_itemRendererClass();
		} else if(comp.get_itemRenderer() != null) {
			return js_Boot.getClass(comp.get_itemRenderer());
		} else {
			return haxe_ui_core_BasicItemRenderer;
		}
	}
	,getRenderer: function(cls,index) {
		var instance = null;
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_virtual() == true) {
			var _g = 0;
			var _g1 = this._rendererPool.length;
			while(_g < _g1) {
				var i = _g++;
				var renderer = this._rendererPool[i];
				if(js_Boot.__instanceof(renderer,cls)) {
					this._rendererPool.splice(i,1);
					instance = renderer;
					break;
				}
			}
		}
		if(instance == null) {
			if(comp.get_itemRenderer() != null && js_Boot.getClass(comp.get_itemRenderer()) == cls) {
				instance = comp.get_itemRenderer().cloneComponent();
				instance.handleVisibility(true);
			} else {
				instance = Type.createInstance(cls,[]);
			}
		}
		instance.itemIndex = index;
		if(this._component.hasEvent("renderercreated")) {
			this._component.dispatch(new haxe_ui_events_UIEvent("renderercreated",null,instance));
		}
		if(this._component.get_hidden() == false) {
			instance.handleVisibility(true);
		}
		return js_Boot.__cast(instance , haxe_ui_core_ItemRenderer);
	}
	,removeRenderer: function(renderer,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		this._component.removeComponent(renderer,dispose);
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_virtual() == true) {
			this._rendererPool.push(js_Boot.__cast(renderer , haxe_ui_core_ItemRenderer));
		}
		if(this._component.hasEvent("rendererdestroyed")) {
			this._component.dispatch(new haxe_ui_events_UIEvent("rendererdestroyed",null,renderer));
		}
		renderer.itemIndex = -1;
	}
	,removeInvisibleRenderers: function() {
		var contents = this.get_contents();
		if(this._firstIndex >= 0) {
			while((contents._children == null ? [] : contents._children).length > 0 && !this.isRendererVisible((contents._children == null ? [] : contents._children)[0])) {
				this.removeRenderer(js_Boot.__cast((contents._children == null ? [] : contents._children)[0] , haxe_ui_core_ItemRenderer),false);
				++this._firstIndex;
			}
		}
		if(this._lastIndex >= 0) {
			while((contents._children == null ? [] : contents._children).length > 0 && !this.isRendererVisible((contents._children == null ? [] : contents._children)[(contents._children == null ? [] : contents._children).length - 1])) {
				this.removeRenderer(js_Boot.__cast((contents._children == null ? [] : contents._children)[(contents._children == null ? [] : contents._children).length - 1] , haxe_ui_core_ItemRenderer),false);
				--this._lastIndex;
			}
		}
	}
	,isRendererVisible: function(renderer) {
		if(renderer == null) {
			return false;
		}
		if(renderer.get_top() < this._component.get_componentHeight() && renderer.get_top() + renderer.get_componentHeight() >= 0 && renderer.get_left() < this._component.get_componentWidth()) {
			return renderer.get_left() + renderer.get_componentWidth() >= 0;
		} else {
			return false;
		}
	}
	,isIndexVisible: function(index) {
		if(index >= this._firstIndex) {
			return index <= this._lastIndex;
		} else {
			return false;
		}
	}
	,__class__: haxe_ui_layouts_VirtualLayout
	,__properties__: $extend(haxe_ui_layouts_ScrollViewLayout.prototype.__properties__,{get_itemCount:"get_itemCount",get_itemHeight:"get_itemHeight",get_itemWidth:"get_itemWidth",get_dataSource:"get_dataSource",get_contents:"get_contents"})
});
var haxe_ui_layouts_VerticalVirtualLayout = function() {
	haxe_ui_layouts_VirtualLayout.call(this);
};
$hxClasses["haxe.ui.layouts.VerticalVirtualLayout"] = haxe_ui_layouts_VerticalVirtualLayout;
haxe_ui_layouts_VerticalVirtualLayout.__name__ = "haxe.ui.layouts.VerticalVirtualLayout";
haxe_ui_layouts_VerticalVirtualLayout.__super__ = haxe_ui_layouts_VirtualLayout;
haxe_ui_layouts_VerticalVirtualLayout.prototype = $extend(haxe_ui_layouts_VirtualLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_layouts_VirtualLayout.prototype.repositionChildren.call(this);
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		var itemHeight = this.get_itemHeight();
		var contents = this.get_contents();
		var verticalSpacing = contents.get_layout().get_verticalSpacing();
		if(comp.get_virtual() == true) {
			var n = this._firstIndex;
			if(comp.get_variableItemSize() == true) {
				var pos = -comp.get_vscrollPos();
				var _g = 0;
				var _g1 = this._lastIndex;
				while(_g < _g1) {
					var i = _g++;
					if(i >= this._firstIndex) {
						var c = contents.getComponentAt(i - this._firstIndex);
						c.set_top(pos);
					}
					var size = this._sizeCache[i];
					pos += (size != null && size != 0 ? size : itemHeight) + verticalSpacing;
				}
			} else {
				var _g = 0;
				var _g1 = contents._children == null ? [] : contents._children;
				while(_g < _g1.length) {
					var child = _g1[_g];
					++_g;
					child.set_top(n * (itemHeight + verticalSpacing) - comp.get_vscrollPos());
					++n;
				}
			}
		}
	}
	,verticalConstraintModifier: function() {
		return 0;
	}
	,calculateRangeVisible: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		var verticalSpacing = this.get_contents().get_layout().get_verticalSpacing();
		var itemHeight = this.get_itemHeight();
		var visibleItemsCount = 0;
		var contentsHeight = 0;
		if(this.get_contents().get_autoHeight() == true) {
			var itemCount = this.get_itemCount();
			if(itemCount > 0 || this._component.get_autoHeight() == true) {
				contentsHeight = itemCount * itemHeight - this.verticalConstraintModifier();
			} else {
				contentsHeight = this._component.get_height() - this.verticalConstraintModifier();
			}
		} else {
			contentsHeight = this.get_contents().get_height() - this.verticalConstraintModifier();
		}
		if(contentsHeight > this._component.get_height() - this.verticalConstraintModifier()) {
			contentsHeight = this._component.get_height() - this.verticalConstraintModifier();
		}
		if(comp.get_variableItemSize() == true) {
			var totalSize = 0;
			var requireInvalidation = false;
			var newFirstIndex = -1;
			var _g = 0;
			var _g1 = this.get_dataSource().get_size();
			while(_g < _g1) {
				var i = _g++;
				var size = this._sizeCache[i];
				if(size == null || size == 0) {
					if(i >= this._firstIndex && i <= this._lastIndex) {
						var c = this.get_contents().getComponentAt(i - this._firstIndex);
						if(c != null && c.get_componentHeight() > 0) {
							this._sizeCache[i] = c.get_componentHeight();
							size = c.get_componentHeight();
						} else {
							requireInvalidation = true;
							size = itemHeight;
						}
					} else {
						requireInvalidation = true;
						size = itemHeight;
					}
				}
				size += verticalSpacing;
				if(newFirstIndex == -1) {
					if(totalSize + size > comp.get_vscrollPos()) {
						newFirstIndex = i;
						totalSize += size - comp.get_vscrollPos();
						++visibleItemsCount;
					} else {
						totalSize += size;
					}
				} else if(totalSize + size > contentsHeight) {
					break;
				} else {
					++visibleItemsCount;
					totalSize += size;
				}
			}
			if(requireInvalidation == true) {
				var _this = this._component;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			this._firstIndex = newFirstIndex;
		} else {
			visibleItemsCount = Math.ceil(contentsHeight / (itemHeight + verticalSpacing));
			this._firstIndex = comp.get_vscrollPos() / (itemHeight + verticalSpacing) | 0;
		}
		if(this._firstIndex < 0) {
			this._firstIndex = 0;
		}
		var rc = new haxe_ui_geom_Rectangle(0,0,this.get_contents().get_width(),contentsHeight - (this.get_paddingTop() + this.get_paddingBottom()) - this.get_borderSize() * 2);
		this.get_contents().set_componentClipRect(rc);
		this._lastIndex = this._firstIndex + visibleItemsCount + 1;
		if(this._lastIndex > this.get_dataSource().get_size()) {
			this._lastIndex = this.get_dataSource().get_size();
		}
	}
	,updateScroll: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		var usableSize = this.get_usableSize();
		var dataSize = this.get_dataSource().get_size();
		var verticalSpacing = this.get_contents().get_layout().get_verticalSpacing();
		var scrollMax = 0;
		var itemHeight = this.get_itemHeight();
		if(comp.get_variableItemSize() == true) {
			scrollMax = -usableSize.height;
			var _g = 0;
			var _g1 = this.get_dataSource().get_size();
			while(_g < _g1) {
				var i = _g++;
				var size = this._sizeCache[i];
				if(size == null || size == 0) {
					size = itemHeight;
				}
				scrollMax += size + verticalSpacing + this.verticalConstraintModifier();
			}
		} else {
			scrollMax = dataSize * itemHeight + (dataSize - 1) * verticalSpacing - usableSize.height + this.verticalConstraintModifier();
		}
		if(scrollMax < 0) {
			scrollMax = 0;
		}
		comp.set_vscrollMax(scrollMax);
		comp.set_vscrollPageSize(usableSize.height / (scrollMax + usableSize.height) * scrollMax);
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_VirtualLayout.prototype.calcAutoSize.call(this,exclusions);
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemCount() > 0 && this._component.get_autoHeight() == true) {
			var contents = this._component.findComponent("scrollview-contents",null,false);
			var contentsPadding = 0;
			if(contents != null) {
				var layout = contents.get_layout();
				if(layout != null) {
					contentsPadding = layout.get_paddingTop() + layout.get_paddingBottom();
				}
			}
			size.height = this.get_itemHeight() * comp.get_itemCount() + this.get_paddingTop() + this.get_paddingBottom() + contentsPadding + this.get_borderSize() * 2;
		}
		return size;
	}
	,__class__: haxe_ui_layouts_VerticalVirtualLayout
});
var haxe_ui_containers__$TableView_Layout = function() {
	haxe_ui_layouts_VerticalVirtualLayout.call(this);
};
$hxClasses["haxe.ui.containers._TableView.Layout"] = haxe_ui_containers__$TableView_Layout;
haxe_ui_containers__$TableView_Layout.__name__ = "haxe.ui.containers._TableView.Layout";
haxe_ui_containers__$TableView_Layout.__super__ = haxe_ui_layouts_VerticalVirtualLayout;
haxe_ui_containers__$TableView_Layout.prototype = $extend(haxe_ui_layouts_VerticalVirtualLayout.prototype,{
	itemClass: function(index,data) {
		return haxe_ui_containers__$TableView_CompoundItemRenderer;
	}
	,repositionChildren: function() {
		var header = this.findComponent(null,haxe_ui_containers_Header,true);
		if(header == null) {
			return;
		}
		haxe_ui_layouts_VerticalVirtualLayout.prototype.repositionChildren.call(this);
		header.set_left(this.get_paddingLeft() + this.get_borderSize());
		header.set_top(this.get_paddingTop() + this.get_borderSize());
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll);
		if(vscroll != null && vscroll.get_hidden() == false) {
			header.addClass("scrolling");
			header.invalidateComponent(null,true);
		} else {
			header.removeClass("scrolling");
			header.invalidateComponent(null,true);
		}
		var rc = new haxe_ui_geom_Rectangle((js_Boot.__cast(this._component , haxe_ui_containers_ScrollView)).get_hscrollPos(),1,this.get_usableWidth(),header.get_height());
		header.set_componentClipRect(rc);
		var data = this.findComponent("tableview-contents",haxe_ui_containers_Box,true,"css");
		if(data != null) {
			var _g = 0;
			var _g1 = data._children == null ? [] : data._children;
			while(_g < _g1.length) {
				var item = _g1[_g];
				++_g;
				var headerChildComponents = header.findComponents(null,haxe_ui_components_Column);
				var _g2 = 0;
				while(_g2 < headerChildComponents.length) {
					var column = headerChildComponents[_g2];
					++_g2;
					if(column.get_id() == null) {
						continue;
					}
					var isLast = headerChildComponents.indexOf(column) == headerChildComponents.length - 1;
					var itemRenderer = item.findComponent(column.get_id(),haxe_ui_core_Component);
					if(itemRenderer != null && ((itemRenderer) instanceof haxe_ui_core_ItemRenderer) == false) {
						itemRenderer = itemRenderer.findAncestor(null,haxe_ui_core_ItemRenderer);
					}
					if(itemRenderer != null) {
						itemRenderer.set_percentWidth(null);
						if(isLast == false) {
							itemRenderer.set_width(column.get_width() - item.get_layout().get_horizontalSpacing());
						} else {
							itemRenderer.set_width(column.get_width());
						}
					}
				}
			}
			var modifier = 0;
			if(header.get_height() > 0) {
				modifier = 1;
			}
			data.set_left(this.get_paddingLeft() + this.get_borderSize());
			data.set_top(header.get_top() + header.get_height() - modifier);
			data.set_componentWidth(header.get_width());
		}
	}
	,resizeChildren: function() {
		var header = this.findComponent(null,haxe_ui_containers_Header,true);
		if(header == null) {
			return;
		}
		haxe_ui_layouts_VerticalVirtualLayout.prototype.resizeChildren.call(this);
	}
	,verticalConstraintModifier: function() {
		var header = this.findComponent(null,haxe_ui_containers_Header,true);
		if(header == null) {
			return 0;
		}
		return header.get_height();
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_VerticalVirtualLayout.prototype.calcAutoSize.call(this);
		size.height += 1;
		return size;
	}
	,__class__: haxe_ui_containers__$TableView_Layout
});
var haxe_ui_containers__$TableView_DataSourceBehaviour = function(component) {
	this._firstPass = true;
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.DataSourceBehaviour"] = haxe_ui_containers__$TableView_DataSourceBehaviour;
haxe_ui_containers__$TableView_DataSourceBehaviour.__name__ = "haxe.ui.containers._TableView.DataSourceBehaviour";
haxe_ui_containers__$TableView_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TableView_DataSourceBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_firstPass: null
	,set: function(value) {
		var _gthis = this;
		haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
		var dataSource = haxe_ui_util_Variant.toDataSource(this._value);
		if(dataSource != null) {
			dataSource.transformer = new haxe_ui_data_transformation_NativeTypeTransformer();
			dataSource.onDataSourceChange = function() {
				var _this = _gthis._component;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
				if(_gthis._firstPass == true) {
					_gthis._firstPass = false;
					var _this = _gthis._component;
					if(!(_this._layout == null || _this._layoutLocked == true)) {
						_this.invalidateComponent("layout",false);
					}
				}
			};
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		} else {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
	}
	,get: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			this._value = haxe_ui_util_Variant.fromDataSource(new haxe_ui_data_ArrayDataSource());
			this.set(this._value);
		}
		return this._value;
	}
	,__class__: haxe_ui_containers__$TableView_DataSourceBehaviour
});
var haxe_ui_containers__$TableView_SelectedIndexBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.SelectedIndexBehaviour"] = haxe_ui_containers__$TableView_SelectedIndexBehaviour;
haxe_ui_containers__$TableView_SelectedIndexBehaviour.__name__ = "haxe.ui.containers._TableView.SelectedIndexBehaviour";
haxe_ui_containers__$TableView_SelectedIndexBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TableView_SelectedIndexBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedIndices = tableView.get_selectedIndices();
		if(selectedIndices != null && selectedIndices.length > 0) {
			return haxe_ui_util_Variant.fromInt(selectedIndices[selectedIndices.length - 1]);
		} else {
			return haxe_ui_util_Variant.fromInt(-1);
		}
	}
	,set: function(value) {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		tableView.set_selectedIndices(haxe_ui_util_Variant.neq(value,haxe_ui_util_Variant.fromInt(-1)) ? [haxe_ui_util_Variant.toInt(value)] : null);
	}
	,__class__: haxe_ui_containers__$TableView_SelectedIndexBehaviour
});
var haxe_ui_containers__$TableView_SelectedItemBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.SelectedItemBehaviour"] = haxe_ui_containers__$TableView_SelectedItemBehaviour;
haxe_ui_containers__$TableView_SelectedItemBehaviour.__name__ = "haxe.ui.containers._TableView.SelectedItemBehaviour";
haxe_ui_containers__$TableView_SelectedItemBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TableView_SelectedItemBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	getDynamic: function() {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedIndices = tableView.get_selectedIndices();
		if(selectedIndices.length > 0) {
			return tableView.get_dataSource().get(selectedIndices[selectedIndices.length - 1]);
		} else {
			return null;
		}
	}
	,set: function(value) {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var index = tableView.get_dataSource().indexOf(value);
		if(index != -1 && tableView.get_selectedIndices().indexOf(index) == -1) {
			tableView.set_selectedIndices([index]);
		}
	}
	,__class__: haxe_ui_containers__$TableView_SelectedItemBehaviour
});
var haxe_ui_containers__$TableView_SelectedIndicesBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.SelectedIndicesBehaviour"] = haxe_ui_containers__$TableView_SelectedIndicesBehaviour;
haxe_ui_containers__$TableView_SelectedIndicesBehaviour.__name__ = "haxe.ui.containers._TableView.SelectedIndicesBehaviour";
haxe_ui_containers__$TableView_SelectedIndicesBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TableView_SelectedIndicesBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		if(haxe_ui_util_Variant.get_isNull(this._value)) {
			return haxe_ui_util_Variant.fromArray([]);
		} else {
			return this._value;
		}
	}
	,validateData: function() {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedIndices = tableView.get_selectedIndices();
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		var itemToEnsure = null;
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TableView_Builder);
		var _g = 0;
		var _g1 = contents._children == null ? [] : contents._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(selectedIndices.indexOf((js_Boot.__cast(child , haxe_ui_core_ItemRenderer)).itemIndex) != -1) {
				itemToEnsure = js_Boot.__cast(child , haxe_ui_core_ItemRenderer);
				builder.addItemRendererClass(child,":selected");
			} else {
				builder.addItemRendererClass(child,":selected",false);
			}
		}
		if(itemToEnsure != null && tableView.get_virtual() == false) {
			var vscroll = tableView.findComponent(null,haxe_ui_components_VerticalScroll);
			if(vscroll != null) {
				var vpos = vscroll.get_pos();
				var contents = tableView.findComponent("tableview-contents",null,null,"css");
				if(itemToEnsure.get_top() + itemToEnsure.get_height() > vpos + contents.get_componentClipRect().height) {
					vscroll.set_pos(itemToEnsure.get_top() + itemToEnsure.get_height() - contents.get_componentClipRect().height);
				} else if(itemToEnsure.get_top() < vpos) {
					vscroll.set_pos(itemToEnsure.get_top());
				}
			}
		}
		if(tableView.get_selectedIndex() != -1 && tableView.get_selectedIndices().length != 0) {
			this._component.dispatch(new haxe_ui_events_UIEvent("change"));
		}
	}
	,__class__: haxe_ui_containers__$TableView_SelectedIndicesBehaviour
});
var haxe_ui_containers__$TableView_SelectedItemsBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.SelectedItemsBehaviour"] = haxe_ui_containers__$TableView_SelectedItemsBehaviour;
haxe_ui_containers__$TableView_SelectedItemsBehaviour.__name__ = "haxe.ui.containers._TableView.SelectedItemsBehaviour";
haxe_ui_containers__$TableView_SelectedItemsBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TableView_SelectedItemsBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedIndices = tableView.get_selectedIndices();
		if(selectedIndices != null && selectedIndices.length > 0) {
			var selectedItems = [];
			var _g = 0;
			while(_g < selectedIndices.length) {
				var i = selectedIndices[_g];
				++_g;
				if(i < 0 || i >= tableView.get_dataSource().get_size()) {
					continue;
				}
				var data = tableView.get_dataSource().get(i);
				selectedItems.push(data);
			}
			return haxe_ui_util_Variant.fromArray(selectedItems);
		} else {
			return haxe_ui_util_Variant.fromArray([]);
		}
	}
	,set: function(value) {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedItems = haxe_ui_util_Variant.toArray(value);
		if(selectedItems != null && selectedItems.length > 0) {
			var selectedIndices = [];
			var index;
			var _g = 0;
			while(_g < selectedItems.length) {
				var item = selectedItems[_g];
				++_g;
				index = tableView.get_dataSource().indexOf(item);
				if(index != -1) {
					selectedIndices.push(index);
				}
			}
			tableView.set_selectedIndices(selectedIndices);
		} else {
			tableView.set_selectedIndices([]);
		}
	}
	,__class__: haxe_ui_containers__$TableView_SelectedItemsBehaviour
});
var haxe_ui_containers__$TableView_SelectionModeBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.SelectionModeBehaviour"] = haxe_ui_containers__$TableView_SelectionModeBehaviour;
haxe_ui_containers__$TableView_SelectionModeBehaviour.__name__ = "haxe.ui.containers._TableView.SelectionModeBehaviour";
haxe_ui_containers__$TableView_SelectionModeBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TableView_SelectionModeBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedIndices = tableView.get_selectedIndices();
		if(selectedIndices.length == 0) {
			return;
		}
		var selectionMode = this._value;
		switch(selectionMode) {
		case "disabled":
			tableView.set_selectedIndices(null);
			break;
		case "one-item":
			if(selectedIndices.length > 1) {
				tableView.set_selectedIndices([selectedIndices[0]]);
			}
			break;
		default:
		}
	}
	,__class__: haxe_ui_containers__$TableView_SelectionModeBehaviour
});
var haxe_ui_containers__$TableView_GetHeader = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.GetHeader"] = haxe_ui_containers__$TableView_GetHeader;
haxe_ui_containers__$TableView_GetHeader.__name__ = "haxe.ui.containers._TableView.GetHeader";
haxe_ui_containers__$TableView_GetHeader.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$TableView_GetHeader.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		var header = this._component.findComponent(null,haxe_ui_containers_Header);
		return haxe_ui_util_Variant.fromComponent(header);
	}
	,__class__: haxe_ui_containers__$TableView_GetHeader
});
var haxe_ui_containers__$TableView_ClearTable = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.ClearTable"] = haxe_ui_containers__$TableView_ClearTable;
haxe_ui_containers__$TableView_ClearTable.__name__ = "haxe.ui.containers._TableView.ClearTable";
haxe_ui_containers__$TableView_ClearTable.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TableView_ClearTable.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		if(param == true) {
			if((js_Boot.__cast(this._component , haxe_ui_containers_TableView)).get_itemRenderer() != null) {
				(js_Boot.__cast(this._component , haxe_ui_containers_TableView)).get_itemRenderer().removeAllComponents();
			}
			var header = this._component.findComponent(null,haxe_ui_containers_Header);
			if(header != null) {
				header.removeAllComponents();
			}
		}
		var contents = this._component.findComponent("tableview-contents",haxe_ui_containers_Box,true,"css");
		if(contents != null) {
			contents.removeAllComponents();
		}
		return null;
	}
	,__class__: haxe_ui_containers__$TableView_ClearTable
});
var haxe_ui_containers__$TableView_AddColumn = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.AddColumn"] = haxe_ui_containers__$TableView_AddColumn;
haxe_ui_containers__$TableView_AddColumn.__name__ = "haxe.ui.containers._TableView.AddColumn";
haxe_ui_containers__$TableView_AddColumn.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TableView_AddColumn.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var header = this._component.findComponent(null,haxe_ui_containers_Header);
		if(header == null) {
			header = new haxe_ui_containers_Header();
			this._component.addComponent(header);
		}
		var column = new haxe_ui_components_Column();
		column.set_text(param);
		column.set_id(StringTools.replace(param," ","_"));
		header.addComponent(column);
		return haxe_ui_util_Variant.fromComponent(column);
	}
	,__class__: haxe_ui_containers__$TableView_AddColumn
});
var haxe_ui_containers__$TableView_RemoveColumn = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.RemoveColumn"] = haxe_ui_containers__$TableView_RemoveColumn;
haxe_ui_containers__$TableView_RemoveColumn.__name__ = "haxe.ui.containers._TableView.RemoveColumn";
haxe_ui_containers__$TableView_RemoveColumn.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TableView_RemoveColumn.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var header = this._component.findComponent(null,haxe_ui_containers_Header);
		if(header == null) {
			return null;
		}
		var _g = 0;
		var _g1 = header.findComponents(null,haxe_ui_components_Column);
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.get_id() == null) {
				continue;
			}
			if(c.get_text() == param) {
				header.removeComponent(c);
				break;
			}
		}
		return null;
	}
	,__class__: haxe_ui_containers__$TableView_RemoveColumn
});
var haxe_ui_containers__$TreeView_AddNode = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TreeView.AddNode"] = haxe_ui_containers__$TreeView_AddNode;
haxe_ui_containers__$TreeView_AddNode.__name__ = "haxe.ui.containers._TreeView.AddNode";
haxe_ui_containers__$TreeView_AddNode.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TreeView_AddNode.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var node = new haxe_ui_containers_TreeViewNode();
		node.set_data(param);
		this._component.addComponent(node);
		return haxe_ui_util_Variant.fromComponent(node);
	}
	,__class__: haxe_ui_containers__$TreeView_AddNode
});
var haxe_ui_containers__$TreeView_RemoveNode = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TreeView.RemoveNode"] = haxe_ui_containers__$TreeView_RemoveNode;
haxe_ui_containers__$TreeView_RemoveNode.__name__ = "haxe.ui.containers._TreeView.RemoveNode";
haxe_ui_containers__$TreeView_RemoveNode.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TreeView_RemoveNode.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var node = param;
		this._component.removeComponent(node);
		return haxe_ui_util_Variant.fromComponent(node);
	}
	,__class__: haxe_ui_containers__$TreeView_RemoveNode
});
var haxe_ui_containers__$TreeView_ClearNodes = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TreeView.ClearNodes"] = haxe_ui_containers__$TreeView_ClearNodes;
haxe_ui_containers__$TreeView_ClearNodes.__name__ = "haxe.ui.containers._TreeView.ClearNodes";
haxe_ui_containers__$TreeView_ClearNodes.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TreeView_ClearNodes.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var treeview = js_Boot.__cast(this._component , haxe_ui_containers_TreeView);
		treeview.set_selectedNode(null);
		var nodes = treeview.findComponents(null,haxe_ui_containers_TreeViewNode,3);
		var _g = 0;
		while(_g < nodes.length) {
			var n = nodes[_g];
			++_g;
			treeview.removeComponent(n);
		}
		return null;
	}
	,__class__: haxe_ui_containers__$TreeView_ClearNodes
});
var haxe_ui_containers__$TreeView_SelectedNode = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TreeView.SelectedNode"] = haxe_ui_containers__$TreeView_SelectedNode;
haxe_ui_containers__$TreeView_SelectedNode.__name__ = "haxe.ui.containers._TreeView.SelectedNode";
haxe_ui_containers__$TreeView_SelectedNode.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TreeView_SelectedNode.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			if(this._previousValue != null && !haxe_ui_util_Variant.get_isNull(this._previousValue)) {
				var previousSelection = js_Boot.__cast(haxe_ui_util_Variant.toComponent(this._previousValue) , haxe_ui_containers_TreeViewNode);
				var renderer = previousSelection.findComponent(null,haxe_ui_core_ItemRenderer,true);
				if(renderer != null) {
					renderer.removeClass(":node-selected",true,true);
				}
			}
		} else {
			if(this._previousValue != null && !haxe_ui_util_Variant.get_isNull(this._previousValue)) {
				var previousSelection = js_Boot.__cast(haxe_ui_util_Variant.toComponent(this._previousValue) , haxe_ui_containers_TreeViewNode);
				var renderer = previousSelection.findComponent(null,haxe_ui_core_ItemRenderer,true);
				if(renderer != null) {
					renderer.removeClass(":node-selected",true,true);
				}
			}
			var node = js_Boot.__cast(haxe_ui_util_Variant.toComponent(this._value) , haxe_ui_containers_TreeViewNode);
			var p = node.parentNode;
			while(p != null) {
				p.set_expanded(true);
				p = p.parentNode;
			}
			var renderer = node.findComponent(null,haxe_ui_core_ItemRenderer,true);
			if(renderer != null) {
				renderer.addClass(":node-selected",true,true);
			}
			(js_Boot.__cast(this._component , haxe_ui_containers_TreeView)).ensureVisible(node);
		}
		var event = new haxe_ui_events_UIEvent("change");
		this._component.dispatch(event);
	}
	,__class__: haxe_ui_containers__$TreeView_SelectedNode
});
var haxe_ui_containers__$TreeView_GetNodesInternal = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TreeView.GetNodesInternal"] = haxe_ui_containers__$TreeView_GetNodesInternal;
haxe_ui_containers__$TreeView_GetNodesInternal.__name__ = "haxe.ui.containers._TreeView.GetNodesInternal";
haxe_ui_containers__$TreeView_GetNodesInternal.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TreeView_GetNodesInternal.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var nodes = this._component.findComponents(null,haxe_ui_containers_TreeViewNode,3);
		return haxe_ui_util_Variant.fromArray(nodes);
	}
	,__class__: haxe_ui_containers__$TreeView_GetNodesInternal
});
var haxe_ui_containers__$TreeView_TreeViewEvents = function(treeview) {
	haxe_ui_containers_ScrollViewEvents.call(this,treeview);
	this._treeview = treeview;
};
$hxClasses["haxe.ui.containers._TreeView.TreeViewEvents"] = haxe_ui_containers__$TreeView_TreeViewEvents;
haxe_ui_containers__$TreeView_TreeViewEvents.__name__ = "haxe.ui.containers._TreeView.TreeViewEvents";
haxe_ui_containers__$TreeView_TreeViewEvents.__super__ = haxe_ui_containers_ScrollViewEvents;
haxe_ui_containers__$TreeView_TreeViewEvents.prototype = $extend(haxe_ui_containers_ScrollViewEvents.prototype,{
	_treeview: null
	,__class__: haxe_ui_containers__$TreeView_TreeViewEvents
});
var haxe_ui_containers__$TreeView_TreeViewBuilder = function(treeview) {
	haxe_ui_containers_ScrollViewBuilder.call(this,treeview);
	this._treeview = treeview;
};
$hxClasses["haxe.ui.containers._TreeView.TreeViewBuilder"] = haxe_ui_containers__$TreeView_TreeViewBuilder;
haxe_ui_containers__$TreeView_TreeViewBuilder.__name__ = "haxe.ui.containers._TreeView.TreeViewBuilder";
haxe_ui_containers__$TreeView_TreeViewBuilder.__super__ = haxe_ui_containers_ScrollViewBuilder;
haxe_ui_containers__$TreeView_TreeViewBuilder.prototype = $extend(haxe_ui_containers_ScrollViewBuilder.prototype,{
	_treeview: null
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_core_ItemRenderer)) {
			if(child.get_id() == null) {
				this._treeview._itemRenderer = child;
			} else if(child.get_id() == "expandable") {
				this._treeview._expandableItemRenderer = child;
			}
			return child;
		}
		return haxe_ui_containers_ScrollViewBuilder.prototype.addComponent.call(this,child);
	}
	,__class__: haxe_ui_containers__$TreeView_TreeViewBuilder
});
var haxe_ui_containers_TreeViewNode = function() {
	this._data = null;
	this.parentNode = null;
	haxe_ui_containers_VBox.call(this);
};
$hxClasses["haxe.ui.containers.TreeViewNode"] = haxe_ui_containers_TreeViewNode;
haxe_ui_containers_TreeViewNode.__name__ = "haxe.ui.containers.TreeViewNode";
haxe_ui_containers_TreeViewNode.__super__ = haxe_ui_containers_VBox;
haxe_ui_containers_TreeViewNode.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	addNode: function(data) {
		return haxe_ui_util_Variant.toComponent(this.behaviours.call("addNode",data));
	}
	,removeNode: function(node) {
		return haxe_ui_util_Variant.toComponent(this.behaviours.call("removeNode",node));
	}
	,clearNodes: function() {
		if(this.behaviours == null) {
			return;
		}
		this.behaviours.call("clearNodes",null);
	}
	,getNodesInternal: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toArray(this.behaviours.call("getNodesInternal",null));
	}
	,parentNode: null
	,nodePath: function(field) {
		if(field == null) {
			var o = this.get_data();
			if(Object.prototype.hasOwnProperty.call(o,"id")) {
				field = "id";
			} else {
				var o = this.get_data();
				if(Object.prototype.hasOwnProperty.call(o,"nodeId")) {
					field = "nodeId";
				} else {
					field = "text";
				}
			}
		}
		var parts = [];
		var p = this;
		while(p != null) {
			parts.push(Reflect.field(p.get_data(),field));
			p = p.parentNode;
		}
		parts.reverse();
		return parts.join("/");
	}
	,findNodeByPath: function(path,field) {
		var foundNode = null;
		var parts = path.split("/");
		var part = parts.shift();
		var nodes = this.getNodes();
		var _g = 0;
		while(_g < nodes.length) {
			var node = nodes[_g];
			++_g;
			if(node.matchesPathPart(part,field)) {
				if(parts.length == 0) {
					foundNode = node;
				} else {
					foundNode = node.findNodeByPath(parts.join("/"),field);
				}
				break;
			}
		}
		return foundNode;
	}
	,matchesPathPart: function(part,field) {
		if(field == null) {
			var o = this.get_data();
			if(Object.prototype.hasOwnProperty.call(o,"id")) {
				field = "id";
			} else {
				var o = this.get_data();
				if(Object.prototype.hasOwnProperty.call(o,"nodeId")) {
					field = "nodeId";
				} else {
					field = "text";
				}
			}
		}
		var o = this.get_data();
		if(Object.prototype.hasOwnProperty.call(o,field) == false) {
			return false;
		}
		return Std.string(Reflect.field(this.get_data(),field)) == part;
	}
	,getNodes: function() {
		var nodes = [];
		var internalNodes = this.getNodesInternal();
		var _g = 0;
		while(_g < internalNodes.length) {
			var node = internalNodes[_g];
			++_g;
			nodes.push(node);
		}
		return nodes;
	}
	,get_selected: function() {
		var treeview = this.findAncestor(null,haxe_ui_containers_TreeView);
		return treeview.get_selectedNode() == this;
	}
	,set_selected: function(value) {
		var treeview = this.findAncestor(null,haxe_ui_containers_TreeView);
		treeview.set_selectedNode(this);
		return value;
	}
	,_data: null
	,get_data: function() {
		return this._data;
	}
	,set_data: function(value) {
		if(value == this._data) {
			return value;
		}
		this._data = value;
		this.invalidateComponent("data",false);
		return value;
	}
	,get_text: function() {
		return this._data.text;
	}
	,set_text: function(value) {
		if(this._data == null) {
			this._data = { };
		}
		this._data.text = value;
		this.set_data(Reflect.copy(this._data));
		return value;
	}
	,get_icon: function() {
		return this._data.icon;
	}
	,set_icon: function(value) {
		if(this._data == null) {
			this._data = { };
		}
		this._data.icon = value;
		this.set_data(Reflect.copy(this._data));
		return value;
	}
	,registerComposite: function() {
		haxe_ui_containers_VBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers__$TreeViewNode_TreeViewNodeEvents;
		this._compositeBuilderClass = haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("expanded",haxe_ui_containers__$TreeViewNode_Expanded,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("addNode",haxe_ui_containers__$TreeViewNode_AddNode);
		this.behaviours.register("removeNode",haxe_ui_containers__$TreeViewNode_RemoveNode);
		this.behaviours.register("clearNodes",haxe_ui_containers__$TreeViewNode_ClearNodes);
		this.behaviours.register("getNodesInternal",haxe_ui_containers__$TreeViewNode_GetNodesInternal);
	}
	,get_expanded: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("expanded"));
	}
	,set_expanded: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("expanded",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"expanded"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_TreeViewNode();
	}
	,__class__: haxe_ui_containers_TreeViewNode
	,__properties__: $extend(haxe_ui_containers_VBox.prototype.__properties__,{set_expanded:"set_expanded",get_expanded:"get_expanded",set_data:"set_data",get_data:"get_data",set_selected:"set_selected",get_selected:"get_selected"})
});
var haxe_ui_containers__$TreeViewNode_AddNode = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TreeViewNode.AddNode"] = haxe_ui_containers__$TreeViewNode_AddNode;
haxe_ui_containers__$TreeViewNode_AddNode.__name__ = "haxe.ui.containers._TreeViewNode.AddNode";
haxe_ui_containers__$TreeViewNode_AddNode.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TreeViewNode_AddNode.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var node = new haxe_ui_containers_TreeViewNode();
		node.parentNode = js_Boot.__cast(this._component , haxe_ui_containers_TreeViewNode);
		node.set_data(param);
		this._component.addComponent(node);
		return haxe_ui_util_Variant.fromComponent(node);
	}
	,__class__: haxe_ui_containers__$TreeViewNode_AddNode
});
var haxe_ui_containers__$TreeViewNode_RemoveNode = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TreeViewNode.RemoveNode"] = haxe_ui_containers__$TreeViewNode_RemoveNode;
haxe_ui_containers__$TreeViewNode_RemoveNode.__name__ = "haxe.ui.containers._TreeViewNode.RemoveNode";
haxe_ui_containers__$TreeViewNode_RemoveNode.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TreeViewNode_RemoveNode.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var node = param;
		this._component.removeComponent(node);
		return haxe_ui_util_Variant.fromComponent(node);
	}
	,__class__: haxe_ui_containers__$TreeViewNode_RemoveNode
});
var haxe_ui_containers__$TreeViewNode_ClearNodes = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TreeViewNode.ClearNodes"] = haxe_ui_containers__$TreeViewNode_ClearNodes;
haxe_ui_containers__$TreeViewNode_ClearNodes.__name__ = "haxe.ui.containers._TreeViewNode.ClearNodes";
haxe_ui_containers__$TreeViewNode_ClearNodes.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TreeViewNode_ClearNodes.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var node = js_Boot.__cast(this._component , haxe_ui_containers_TreeViewNode);
		var nodes = node.findComponents(null,haxe_ui_containers_TreeViewNode,3);
		var _g = 0;
		while(_g < nodes.length) {
			var n = nodes[_g];
			++_g;
			node.removeComponent(n);
		}
		return null;
	}
	,__class__: haxe_ui_containers__$TreeViewNode_ClearNodes
});
var haxe_ui_containers__$TreeViewNode_Expanded = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TreeViewNode.Expanded"] = haxe_ui_containers__$TreeViewNode_Expanded;
haxe_ui_containers__$TreeViewNode_Expanded.__name__ = "haxe.ui.containers._TreeViewNode.Expanded";
haxe_ui_containers__$TreeViewNode_Expanded.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TreeViewNode_Expanded.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var childContainer = this._component.findComponent("treenode-child-container",haxe_ui_containers_Box);
		if(childContainer == null) {
			return;
		}
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(true))) {
			childContainer.show();
		} else {
			childContainer.hide();
		}
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder);
		builder.updateIconClass();
	}
	,__class__: haxe_ui_containers__$TreeViewNode_Expanded
});
var haxe_ui_containers__$TreeViewNode_GetNodesInternal = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TreeViewNode.GetNodesInternal"] = haxe_ui_containers__$TreeViewNode_GetNodesInternal;
haxe_ui_containers__$TreeViewNode_GetNodesInternal.__name__ = "haxe.ui.containers._TreeViewNode.GetNodesInternal";
haxe_ui_containers__$TreeViewNode_GetNodesInternal.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TreeViewNode_GetNodesInternal.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var nodes = this._component.findComponents(null,haxe_ui_containers_TreeViewNode,3);
		return haxe_ui_util_Variant.fromArray(nodes);
	}
	,__class__: haxe_ui_containers__$TreeViewNode_GetNodesInternal
});
var haxe_ui_containers__$TreeViewNode_TreeViewNodeEvents = function(node) {
	haxe_ui_events_Events.call(this,node);
	this._node = node;
};
$hxClasses["haxe.ui.containers._TreeViewNode.TreeViewNodeEvents"] = haxe_ui_containers__$TreeViewNode_TreeViewNodeEvents;
haxe_ui_containers__$TreeViewNode_TreeViewNodeEvents.__name__ = "haxe.ui.containers._TreeViewNode.TreeViewNodeEvents";
haxe_ui_containers__$TreeViewNode_TreeViewNodeEvents.__super__ = haxe_ui_events_Events;
haxe_ui_containers__$TreeViewNode_TreeViewNodeEvents.prototype = $extend(haxe_ui_events_Events.prototype,{
	_node: null
	,__class__: haxe_ui_containers__$TreeViewNode_TreeViewNodeEvents
});
var haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder = function(node) {
	this._isExpandable = false;
	this._childContainer = null;
	this._renderer = null;
	this._expandCollapseIcon = null;
	this._nodeContainer = null;
	haxe_ui_core_CompositeBuilder.call(this,node);
	this._node = node;
};
$hxClasses["haxe.ui.containers._TreeViewNode.TreeViewNodeBuilder"] = haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder;
haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder.__name__ = "haxe.ui.containers._TreeViewNode.TreeViewNodeBuilder";
haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_node: null
	,_nodeContainer: null
	,_expandCollapseIcon: null
	,_renderer: null
	,_childContainer: null
	,_isExpandable: null
	,onInitialize: function() {
		var treeview = this._node.findAncestor(null,haxe_ui_containers_TreeView);
		this._nodeContainer = new haxe_ui_containers_HBox();
		this._nodeContainer.addClass("treenode-container");
		this._expandCollapseIcon = new haxe_ui_components_Image();
		this._expandCollapseIcon.set_scriptAccess(false);
		this._expandCollapseIcon.addClass("treenode-expand-collapse-icon");
		this._expandCollapseIcon.set_id("treenode-expand-collapse-icon");
		this._expandCollapseIcon.registerEvent("click",$bind(this,this.onExpandCollapseClicked));
		this._nodeContainer.registerEvent("click",$bind(this,this.onContainerClick));
		this._nodeContainer.registerEvent("rightclick",$bind(this,this.onContainerClick));
		this._nodeContainer.registerEvent("doubleclick",$bind(this,this.onContainerDblClick));
		this._nodeContainer.addComponent(this._expandCollapseIcon);
		this._renderer = treeview.get_itemRenderer().cloneComponent();
		this._renderer.set_data(this._node.get_data());
		this._nodeContainer.addComponent(this._renderer);
		if(this._isExpandable == true) {
			this.makeExpandableRendererChanges();
		}
		this._node.addComponentAt(this._nodeContainer,0);
	}
	,onContainerClick: function(event) {
		if(this._expandCollapseIcon.hitTest(event.screenX,event.screenY)) {
			return;
		}
		var interactives = this._node.findComponentsUnderPoint(event.screenX,event.screenY,haxe_ui_core_InteractiveComponent);
		if(interactives.length > 0) {
			return;
		}
		var treeview = this._node.findAncestor(null,haxe_ui_containers_TreeView);
		treeview.set_selectedNode(this._node);
	}
	,onContainerDblClick: function(event) {
		var interactives = this._node.findComponentsUnderPoint(event.screenX,event.screenY,haxe_ui_core_InteractiveComponent);
		if(interactives.length > 0) {
			return;
		}
		this.onExpandCollapseClicked(null);
	}
	,onExpandCollapseClicked: function(event) {
		event.cancel();
		this._node.set_expanded(!this._node.get_expanded());
		this.updateIconClass();
	}
	,updateIconClass: function() {
		if(this._expandCollapseIcon != null) {
			if(this._childContainer != null) {
				if(this._node.get_expanded() == true) {
					this._expandCollapseIcon.swapClass("node-expanded","node-collapsed");
				} else {
					this._expandCollapseIcon.swapClass("node-collapsed","node-expanded");
				}
			}
		}
	}
	,validateComponentData: function() {
		this._renderer.set_data(this._node.get_data());
	}
	,changeToExpandableRenderer: function() {
		if(this._isExpandable == true) {
			return;
		}
		this._isExpandable = true;
		this.makeExpandableRendererChanges();
	}
	,changeToNonExpandableRenderer: function() {
		if(this._isExpandable == false) {
			return;
		}
		this._isExpandable = false;
		this.makeNonExpandableRendererChanges();
	}
	,makeNonExpandableRendererChanges: function() {
		var treeview = this._node.findAncestor(null,haxe_ui_containers_TreeView);
		if(this._expandCollapseIcon != null) {
			this._expandCollapseIcon.removeClasses(["node-collapsed","node-expanded"]);
		}
		if(this._renderer != null) {
			var wasSelected = treeview.get_selectedNode() == this._node;
			var data = this._renderer.get_data();
			var newRenderer = treeview.get_itemRenderer().cloneComponent();
			newRenderer.set_data(data);
			this._nodeContainer.removeComponent(this._renderer);
			this._renderer = newRenderer;
			this._nodeContainer.addComponent(newRenderer);
			if(wasSelected == true) {
				treeview.set_selectedNode(this._node);
			}
		}
	}
	,makeExpandableRendererChanges: function() {
		var treeview = this._node.findAncestor(null,haxe_ui_containers_TreeView);
		this.updateIconClass();
		if(this._renderer != null) {
			var wasSelected = treeview.get_selectedNode() == this._node;
			var data = this._renderer.get_data();
			var newRenderer = treeview.get_expandableItemRenderer().cloneComponent();
			newRenderer.set_data(data);
			this._nodeContainer.removeComponent(this._renderer);
			this._renderer = newRenderer;
			this._nodeContainer.addComponent(newRenderer);
			if(wasSelected == true) {
				treeview.set_selectedNode(this._node);
			}
		}
	}
	,addComponent: function(child) {
		if(child == this._renderer || child == this._childContainer) {
			return null;
		}
		if(((child) instanceof haxe_ui_containers_TreeViewNode)) {
			if(this._childContainer == null) {
				this._childContainer = new haxe_ui_containers_VBox();
				if(this._node.get_expanded() == true) {
					this._childContainer.show();
				} else {
					this._childContainer.hide();
				}
				this._childContainer.addClass("treenode-child-container");
				this._childContainer.set_id("treenode-child-container");
				this._node.addComponent(this._childContainer);
			}
			this.changeToExpandableRenderer();
			return this._childContainer.addComponent(child);
		}
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(((child) instanceof haxe_ui_containers_TreeViewNode)) {
			(js_Boot.__cast(child , haxe_ui_containers_TreeViewNode)).parentNode = null;
			var c = this._childContainer.removeComponent(child,dispose,invalidate);
			if(this._childContainer.get_numComponents() == 0) {
				this.changeToNonExpandableRenderer();
			}
			return c;
		}
		return null;
	}
	,__class__: haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder
});
var haxe_ui_containers_dialogs_DialogButton = {};
haxe_ui_containers_dialogs_DialogButton.bitOr = function(lhs,rhs) {
	var larr = haxe_ui_containers_dialogs_DialogButton.toString(lhs).split("|");
	var rarr = haxe_ui_containers_dialogs_DialogButton.toString(rhs).split("|");
	var _g = 0;
	while(_g < rarr.length) {
		var r = rarr[_g];
		++_g;
		if(larr.indexOf(r) == -1) {
			larr.push(r);
		}
	}
	return larr.join("|");
};
haxe_ui_containers_dialogs_DialogButton.eq = function(lhs,rhs) {
	var larr = haxe_ui_containers_dialogs_DialogButton.toString(lhs).split("|");
	return larr.indexOf(haxe_ui_containers_dialogs_DialogButton.toString(rhs)) != -1;
};
haxe_ui_containers_dialogs_DialogButton.toArray = function(this1) {
	var a = [];
	var _g = 0;
	var _g1 = (this1 == null ? "null" : "" + this1).split("|");
	while(_g < _g1.length) {
		var i = _g1[_g];
		++_g;
		i = StringTools.trim(i);
		if(i.length == 0 || i == "null") {
			continue;
		}
		a.push(i);
	}
	return a;
};
haxe_ui_containers_dialogs_DialogButton.toString = function(this1) {
	if(this1 == null) {
		return "null";
	} else {
		return "" + this1;
	}
};
var haxe_ui_containers_dialogs_DialogEvent = function(type,bubble,data) {
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.containers.dialogs.DialogEvent"] = haxe_ui_containers_dialogs_DialogEvent;
haxe_ui_containers_dialogs_DialogEvent.__name__ = "haxe.ui.containers.dialogs.DialogEvent";
haxe_ui_containers_dialogs_DialogEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_containers_dialogs_DialogEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	button: null
	,clone: function() {
		var c = new haxe_ui_containers_dialogs_DialogEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		c.button = this.button;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_containers_dialogs_DialogEvent
});
var haxe_ui_containers_dialogs_FileDialogTypes = function() { };
$hxClasses["haxe.ui.containers.dialogs.FileDialogTypes"] = haxe_ui_containers_dialogs_FileDialogTypes;
haxe_ui_containers_dialogs_FileDialogTypes.__name__ = "haxe.ui.containers.dialogs.FileDialogTypes";
haxe_ui_containers_dialogs_FileDialogTypes.__properties__ = {get_TEXTS:"get_TEXTS",get_IMAGES:"get_IMAGES"};
haxe_ui_containers_dialogs_FileDialogTypes.get_IMAGES = function() {
	return [{ label : "Image Files", extension : "png, gif, jpeg, jpg, bmp"}];
};
haxe_ui_containers_dialogs_FileDialogTypes.get_TEXTS = function() {
	return [{ label : "Text Files", extension : "txt"}];
};
var haxe_ui_containers_dialogs_Dialogs = function() { };
$hxClasses["haxe.ui.containers.dialogs.Dialogs"] = haxe_ui_containers_dialogs_Dialogs;
haxe_ui_containers_dialogs_Dialogs.__name__ = "haxe.ui.containers.dialogs.Dialogs";
haxe_ui_containers_dialogs_Dialogs.messageBox = function(message,title,type,modal,callback) {
	if(modal == null) {
		modal = true;
	}
	if(type == null) {
		type = "info";
	} else if(type == "info") {
		type = "info";
	} else if(type == "question") {
		type = "question";
	} else if(type == "warning") {
		type = "warning";
	} else if(type == "error") {
		type = "error";
	} else if(type == "yesno") {
		type = "yesno";
	}
	var messageBox = new haxe_ui_containers_dialogs_MessageBox();
	messageBox.set_type(type);
	messageBox.set_message(message);
	messageBox.modal = modal;
	if(title != null) {
		messageBox.set_title(title);
	}
	messageBox.show();
	if(callback != null) {
		messageBox.registerEvent("dialogClosed",function(e) {
			callback(e.button);
		});
	}
	return messageBox;
};
haxe_ui_containers_dialogs_Dialogs.dialog = function(contents,title,buttons,modal,callback) {
	if(modal == null) {
		modal = true;
	}
	var dialog = new haxe_ui_containers_dialogs_Dialog();
	dialog.modal = modal;
	if(title != null) {
		dialog.set_title(title);
	}
	if(buttons != null) {
		dialog.buttons = buttons;
	}
	dialog.addComponent(contents);
	dialog.show();
	if(callback != null) {
		dialog.registerEvent("dialogClosed",function(e) {
			callback(e.button);
		});
	}
	return dialog;
};
haxe_ui_containers_dialogs_Dialogs.openFile = function(callback,options) {
	var dialog = new haxe_ui_containers_dialogs_OpenFileDialog();
	dialog.callback = callback;
	dialog.set_options(options);
	dialog.show();
};
haxe_ui_containers_dialogs_Dialogs.openBinaryFile = function(title,fileTypes,callback) {
	var options = { readContents : true, readAsBinary : true, multiple : false, extensions : fileTypes, title : title};
	haxe_ui_containers_dialogs_Dialogs.openFile(function(button,selectedFiles) {
		var larr = haxe_ui_containers_dialogs_DialogButton.toString(button).split("|");
		if(larr.indexOf(haxe_ui_containers_dialogs_DialogButton.toString("{{ok}}")) != -1 && selectedFiles.length > 0) {
			callback(selectedFiles[0]);
		}
	},options);
};
haxe_ui_containers_dialogs_Dialogs.openTextFile = function(title,fileTypes,callback) {
	var options = { readContents : true, readAsBinary : false, multiple : false, extensions : fileTypes, title : title};
	haxe_ui_containers_dialogs_Dialogs.openFile(function(button,selectedFiles) {
		var larr = haxe_ui_containers_dialogs_DialogButton.toString(button).split("|");
		if(larr.indexOf(haxe_ui_containers_dialogs_DialogButton.toString("{{ok}}")) != -1 && selectedFiles.length > 0) {
			callback(selectedFiles[0]);
		}
	},options);
};
haxe_ui_containers_dialogs_Dialogs.saveFile = function(callback,fileInfo,options) {
	var dialog = new haxe_ui_containers_dialogs_SaveFileDialog();
	dialog.callback = callback;
	dialog.set_options(options);
	dialog.fileInfo = fileInfo;
	dialog.show();
};
haxe_ui_containers_dialogs_Dialogs.saveBinaryFile = function(title,fileTypes,fileInfo,callback) {
	var options = { writeAsBinary : true, extensions : fileTypes, title : title};
	haxe_ui_containers_dialogs_Dialogs.saveFile(function(button,result,path) {
		callback(result,path);
	},fileInfo,options);
};
haxe_ui_containers_dialogs_Dialogs.saveTextFile = function(title,fileTypes,fileInfo,callback) {
	var options = { writeAsBinary : false, extensions : fileTypes, title : title};
	haxe_ui_containers_dialogs_Dialogs.saveFile(function(button,result,path) {
		callback(result,path);
	},fileInfo,options);
};
var haxe_ui_containers_dialogs_MessageBoxType = {};
haxe_ui_containers_dialogs_MessageBoxType.toString = function(this1) {
	if(this1 == null) {
		return "null";
	} else {
		return "" + this1;
	}
};
var haxe_ui_containers_dialogs_OpenFileDialog = function(options,callback) {
	haxe_ui_backend_OpenFileDialogImpl.call(this,options,callback);
};
$hxClasses["haxe.ui.containers.dialogs.OpenFileDialog"] = haxe_ui_containers_dialogs_OpenFileDialog;
haxe_ui_containers_dialogs_OpenFileDialog.__name__ = "haxe.ui.containers.dialogs.OpenFileDialog";
haxe_ui_containers_dialogs_OpenFileDialog.__super__ = haxe_ui_backend_OpenFileDialogImpl;
haxe_ui_containers_dialogs_OpenFileDialog.prototype = $extend(haxe_ui_backend_OpenFileDialogImpl.prototype,{
	__class__: haxe_ui_containers_dialogs_OpenFileDialog
});
var haxe_ui_containers_dialogs_SaveFileDialog = function(options,callback) {
	haxe_ui_backend_SaveFileDialogImpl.call(this,options,callback);
};
$hxClasses["haxe.ui.containers.dialogs.SaveFileDialog"] = haxe_ui_containers_dialogs_SaveFileDialog;
haxe_ui_containers_dialogs_SaveFileDialog.__name__ = "haxe.ui.containers.dialogs.SaveFileDialog";
haxe_ui_containers_dialogs_SaveFileDialog.__super__ = haxe_ui_backend_SaveFileDialogImpl;
haxe_ui_containers_dialogs_SaveFileDialog.prototype = $extend(haxe_ui_backend_SaveFileDialogImpl.prototype,{
	__class__: haxe_ui_containers_dialogs_SaveFileDialog
});
var haxe_ui_containers_menus_MenuEvent = function(type,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	this.menuItem = null;
	this.menu = null;
	haxe_ui_events_UIEvent.call(this,type,true,data);
};
$hxClasses["haxe.ui.containers.menus.MenuEvent"] = haxe_ui_containers_menus_MenuEvent;
haxe_ui_containers_menus_MenuEvent.__name__ = "haxe.ui.containers.menus.MenuEvent";
haxe_ui_containers_menus_MenuEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_containers_menus_MenuEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	menu: null
	,menuItem: null
	,clone: function() {
		var c = new haxe_ui_containers_menus_MenuEvent(this.type);
		c.menu = this.menu;
		c.menuItem = this.menuItem;
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_containers_menus_MenuEvent
});
var haxe_ui_containers_menus_MenuEvents = function(menu) {
	this.hasScreenMouseDown = false;
	this._over = false;
	this.button = null;
	this.parentMenu = null;
	this.currentSubMenu = null;
	this._currentItem = null;
	haxe_ui_events_Events.call(this,menu);
	this._menu = menu;
};
$hxClasses["haxe.ui.containers.menus.MenuEvents"] = haxe_ui_containers_menus_MenuEvents;
haxe_ui_containers_menus_MenuEvents.__name__ = "haxe.ui.containers.menus.MenuEvents";
haxe_ui_containers_menus_MenuEvents.__super__ = haxe_ui_events_Events;
haxe_ui_containers_menus_MenuEvents.prototype = $extend(haxe_ui_events_Events.prototype,{
	_menu: null
	,_currentItem: null
	,currentSubMenu: null
	,parentMenu: null
	,button: null
	,register: function() {
		if(!this.hasEvent("mouseover",$bind(this,this.onMouseOver))) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(!this.hasEvent("mouseout",$bind(this,this.onMouseOut))) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
		var _g = 0;
		var _this = this._menu;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(((child) instanceof haxe_ui_containers_menus_MenuItem)) {
				var item = js_Boot.__cast(child , haxe_ui_containers_menus_MenuItem);
				if(!item.hasEvent("click",$bind(this,this.onItemClick))) {
					item.registerEvent("click",$bind(this,this.onItemClick));
				}
				if(!item.hasEvent("mouseover",$bind(this,this.onItemMouseOver))) {
					item.registerEvent("mouseover",$bind(this,this.onItemMouseOver));
				}
				if(!item.hasEvent("mouseout",$bind(this,this.onItemMouseOut))) {
					item.registerEvent("mouseout",$bind(this,this.onItemMouseOut));
				}
			}
		}
		if(!this.hasEvent("hidden",$bind(this,this.onHidden))) {
			this.registerEvent("hidden",$bind(this,this.onHidden));
		}
		if(!this.hasEvent("shown",$bind(this,this.onShown))) {
			this.registerEvent("shown",$bind(this,this.onShown));
		}
	}
	,unregister: function() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
		var _g = 0;
		var _this = this._menu;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.unregisterEvent("click",$bind(this,this.onItemClick));
			child.unregisterEvent("mouseover",$bind(this,this.onItemMouseOver));
			child.unregisterEvent("mouseout",$bind(this,this.onItemMouseOut));
		}
		this.unregisterEvent("hidden",$bind(this,this.onHidden));
		this.unregisterEvent("shown",$bind(this,this.onShown));
	}
	,_over: null
	,onMouseOver: function(event) {
		this._over = true;
	}
	,onMouseOut: function(event) {
		this._over = false;
	}
	,onItemClick: function(event) {
		var item = js_Boot.__cast(event.target , haxe_ui_containers_menus_MenuItem);
		if(!item.get_expandable()) {
			var event = new haxe_ui_containers_menus_MenuEvent("menuselected");
			event.menu = this._menu;
			event.menuItem = item;
			this.findRootMenu().dispatch(event);
			this.hideMenu();
			this.removeScreenMouseDown();
			this._menu.dispatch(new haxe_ui_events_UIEvent("close"));
		}
	}
	,onItemMouseOver: function(event) {
		var builder = js_Boot.__cast(this._menu._compositeBuilder , haxe_ui_containers_menus__$Menu_Builder);
		var subMenus = builder._subMenus;
		var item = js_Boot.__cast(event.target , haxe_ui_containers_menus_MenuItem);
		var _g = 0;
		var _this = this._menu;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child != item) {
				child.removeClass(":hover",true,true);
			}
		}
		if(subMenus.h[item.__id__] != null) {
			this._currentItem = item;
			this.showSubMenu(js_Boot.__cast(subMenus.h[item.__id__] , haxe_ui_containers_menus_Menu),item);
		} else {
			this.hideCurrentSubMenu();
		}
	}
	,onItemMouseOut: function(event) {
		if(this.currentSubMenu != null) {
			this._currentItem.addClass(":hover",true,true);
			return;
		} else {
			this._currentItem = null;
		}
	}
	,showSubMenu: function(subMenu,source) {
		this.hideCurrentSubMenu();
		subMenu.set_menuStyleNames(this._menu.get_menuStyleNames());
		subMenu.addClass(this._menu.get_menuStyleNames());
		var componentOffset = source.getComponentOffset();
		var left = source.get_screenLeft() + source.get_actualComponentWidth() + componentOffset.x;
		var top = source.get_screenTop();
		haxe_ui_core_Screen.get_instance().addComponent(subMenu);
		subMenu.syncComponentValidation();
		if(left + subMenu.get_actualComponentWidth() > haxe_ui_core_Screen.get_instance().get_width()) {
			left = source.get_screenLeft() - subMenu.get_actualComponentWidth();
		}
		subMenu.set_left(left);
		subMenu.set_top(top);
		this.currentSubMenu = subMenu;
	}
	,hideMenu: function() {
		var root = this.findRootMenu();
		if(root == null) {
			return;
		}
		var events = js_Boot.__cast(root._internalEvents , haxe_ui_containers_menus_MenuEvents);
		if(events.button == null) {
			var _g = 0;
			var _g1 = root._children == null ? [] : root._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.removeClass(":hover",true,true);
			}
			events.hideCurrentSubMenu();
			haxe_ui_core_Screen.get_instance().removeComponent(root,false);
		}
	}
	,hideCurrentSubMenu: function() {
		if(this.currentSubMenu == null) {
			return;
		}
		var _g = 0;
		var _this = this.currentSubMenu;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.removeClass(":hover",true,true);
		}
		var subMenuEvents = js_Boot.__cast(this.currentSubMenu._internalEvents , haxe_ui_containers_menus_MenuEvents);
		subMenuEvents.hideCurrentSubMenu();
		haxe_ui_core_Screen.get_instance().removeComponent(this.currentSubMenu,false);
		this.currentSubMenu = null;
	}
	,onHidden: function(event) {
		var _g = 0;
		var _this = this._menu;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.removeClass(":hover",true,true);
		}
		this.hideCurrentSubMenu();
	}
	,onShown: function(event) {
		this.addScreenMouseDown();
	}
	,findRootMenu: function() {
		var root = null;
		var ref = this._menu;
		while(ref != null) {
			var events = js_Boot.__cast(ref._internalEvents , haxe_ui_containers_menus_MenuEvents);
			if(events.parentMenu == null) {
				root = events._menu;
				break;
			}
			ref = events.parentMenu;
		}
		return root;
	}
	,hasScreenMouseDown: null
	,addScreenMouseDown: function() {
		var root = this.findRootMenu();
		var events = js_Boot.__cast(root._internalEvents , haxe_ui_containers_menus_MenuEvents);
		if(events.hasScreenMouseDown == false) {
			events.hasScreenMouseDown = true;
			haxe_ui_core_Screen.get_instance().registerEvent("mousedown",$bind(this,this.onScreenMouseDown));
			haxe_ui_core_Screen.get_instance().registerEvent("rightmousedown",$bind(this,this.onScreenMouseDown));
		}
	}
	,removeScreenMouseDown: function() {
		var root = this.findRootMenu();
		var events = js_Boot.__cast(root._internalEvents , haxe_ui_containers_menus_MenuEvents);
		events.hasScreenMouseDown = false;
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousedown",$bind(this,this.onScreenMouseDown));
		haxe_ui_core_Screen.get_instance().unregisterEvent("rightmousedown",$bind(this,this.onScreenMouseDown));
	}
	,onScreenMouseDown: function(event) {
		var close = true;
		if(this._menu.hitTest(event.screenX,event.screenY)) {
			close = false;
		} else if(this.button != null && this.button.hitTest(event.screenX,event.screenY)) {
			close = false;
		} else {
			var ref = this._menu;
			var refEvents = js_Boot.__cast(ref._internalEvents , haxe_ui_containers_menus_MenuEvents);
			var refSubMenu = refEvents.currentSubMenu;
			while(refSubMenu != null) {
				if(refSubMenu.hitTest(event.screenX,event.screenY)) {
					close = false;
					break;
				}
				ref = refSubMenu;
				refEvents = js_Boot.__cast(ref._internalEvents , haxe_ui_containers_menus_MenuEvents);
				refSubMenu = refEvents.currentSubMenu;
			}
		}
		if(close) {
			this.hideMenu();
			this.removeScreenMouseDown();
			this._menu.dispatch(new haxe_ui_events_UIEvent("close"));
		}
	}
	,__class__: haxe_ui_containers_menus_MenuEvents
});
var haxe_ui_containers_menus__$Menu_Builder = function(menu) {
	this._subMenus = new haxe_ds_ObjectMap();
	haxe_ui_core_CompositeBuilder.call(this,menu);
	this._menu = menu;
};
$hxClasses["haxe.ui.containers.menus._Menu.Builder"] = haxe_ui_containers_menus__$Menu_Builder;
haxe_ui_containers_menus__$Menu_Builder.__name__ = "haxe.ui.containers.menus._Menu.Builder";
haxe_ui_containers_menus__$Menu_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_menus__$Menu_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_menu: null
	,_subMenus: null
	,onThemeChanged: function() {
		var menuItem = this._subMenus.keys();
		while(menuItem.hasNext()) {
			var menuItem1 = menuItem.next();
			var menu = this._subMenus.h[menuItem1.__id__];
			haxe_ui_core_Screen.get_instance().invalidateChildren(menu);
			haxe_ui_core_Screen.get_instance().onThemeChangedChildren(menu);
		}
	}
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_containers_menus_Menu)) {
			var menu = js_Boot.__cast(child , haxe_ui_containers_menus_Menu);
			var item = new haxe_ui_containers_menus_MenuItem();
			item.set_id(child.get_id() + "Item");
			item.set_text(child.get_text());
			item.set_icon(menu.get_icon());
			item.set_tooltip(child.get_tooltip());
			item.set_expandable(true);
			this._menu.addComponent(item);
			(js_Boot.__cast(menu._internalEvents , haxe_ui_containers_menus_MenuEvents)).parentMenu = this._menu;
			menu.registerEvent("propertychange",$bind(this,this.onMenuPropertyChanged));
			this._subMenus.set(item,menu);
			return child;
		}
		return null;
	}
	,onMenuPropertyChanged: function(event) {
		if(event.data == "text") {
			var menu = js_Boot.__cast(event.target , haxe_ui_containers_menus_Menu);
			var item = this._subMenus.keys();
			while(item.hasNext()) {
				var item1 = item.next();
				var subMenu = this._subMenus.h[item1.__id__];
				if(subMenu == menu) {
					item1.set_text(event.target.get_text());
					break;
				}
			}
		}
	}
	,onComponentAdded: function(child) {
		if(((child) instanceof haxe_ui_containers_menus_Menu) || ((child) instanceof haxe_ui_containers_menus_MenuItem)) {
			this._menu.registerInternalEvents(null,true);
		}
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		var match = haxe_ui_core_CompositeBuilder.prototype.findComponent.call(this,criteria,type,recursive,searchType);
		if(match == null) {
			var menu = this._subMenus.iterator();
			while(menu.hasNext()) {
				var menu1 = menu.next();
				match = menu1.findComponent(criteria,type,recursive,searchType);
				if(menu1.matchesSearch(criteria,type,searchType)) {
					return menu1;
				} else {
					match = menu1.findComponent(criteria,type,recursive,searchType);
				}
				if(match != null) {
					break;
				}
			}
		}
		return match;
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		var r = [];
		var menu = this._subMenus.iterator();
		while(menu.hasNext()) {
			var menu1 = menu.next();
			var match = true;
			if(styleName != null && menu1.classes.indexOf(styleName) != -1 == false) {
				match = false;
			}
			if(type != null && js_Boot.__instanceof(menu1,type) == false) {
				match = false;
			}
			if(match == true) {
				r.push(menu1);
			} else {
				var childArray = menu1.findComponents(styleName,type,maxDepth);
				var _g = 0;
				while(_g < childArray.length) {
					var c = childArray[_g];
					++_g;
					r.push(c);
				}
			}
		}
		return r;
	}
	,destroy: function() {
		haxe_ui_core_CompositeBuilder.prototype.destroy.call(this);
		if(this._menu != null && this._menu._isDisposed == false) {
			haxe_ui_core_Screen.get_instance().removeComponent(this._menu);
		}
		var subMenu = this._subMenus.iterator();
		while(subMenu.hasNext()) {
			var subMenu1 = subMenu.next();
			haxe_ui_core_Screen.get_instance().removeComponent(subMenu1);
		}
	}
	,show: function() {
		haxe_ui_core_Screen.get_instance().addComponent(this._menu);
		return true;
	}
	,__class__: haxe_ui_containers_menus__$Menu_Builder
});
var haxe_ui_containers_menus_MenuBar = function() {
	haxe_ui_containers_HBox.call(this);
};
$hxClasses["haxe.ui.containers.menus.MenuBar"] = haxe_ui_containers_menus_MenuBar;
haxe_ui_containers_menus_MenuBar.__name__ = "haxe.ui.containers.menus.MenuBar";
haxe_ui_containers_menus_MenuBar.__super__ = haxe_ui_containers_HBox;
haxe_ui_containers_menus_MenuBar.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	onThemeChanged: function() {
		haxe_ui_containers_HBox.prototype.onThemeChanged.call(this);
		var builder = js_Boot.__cast(this._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		builder.onThemeChanged();
	}
	,registerComposite: function() {
		haxe_ui_containers_HBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_menus__$MenuBar_Events;
		this._compositeBuilderClass = haxe_ui_containers_menus__$MenuBar_Builder;
	}
	,_internal__onMenuSelected: null
	,onMenuSelected: null
	,set_onMenuSelected: function(value) {
		if(this._internal__onMenuSelected != null) {
			this.unregisterEvent("menuselected",this._internal__onMenuSelected);
			this._internal__onMenuSelected = null;
		}
		if(value != null) {
			this._internal__onMenuSelected = value;
			this.registerEvent("menuselected",value);
		}
		return value;
	}
	,_internal__onMenuOpened: null
	,onMenuOpened: null
	,set_onMenuOpened: function(value) {
		if(this._internal__onMenuOpened != null) {
			this.unregisterEvent("menuopened",this._internal__onMenuOpened);
			this._internal__onMenuOpened = null;
		}
		if(value != null) {
			this._internal__onMenuOpened = value;
			this.registerEvent("menuopened",value);
		}
		return value;
	}
	,_internal__onMenuClosed: null
	,onMenuClosed: null
	,set_onMenuClosed: function(value) {
		if(this._internal__onMenuClosed != null) {
			this.unregisterEvent("menuclosed",this._internal__onMenuClosed);
			this._internal__onMenuClosed = null;
		}
		if(value != null) {
			this._internal__onMenuClosed = value;
			this.registerEvent("menuclosed",value);
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("menuStyleNames",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_menuStyleNames: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("menuStyleNames"));
	}
	,set_menuStyleNames: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"menuStyleNames",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("menuStyleNames",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"menuStyleNames"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_menus_MenuBar();
	}
	,__class__: haxe_ui_containers_menus_MenuBar
	,__properties__: $extend(haxe_ui_containers_HBox.prototype.__properties__,{set_menuStyleNames:"set_menuStyleNames",get_menuStyleNames:"get_menuStyleNames",set_onMenuClosed:"set_onMenuClosed",set_onMenuOpened:"set_onMenuOpened",set_onMenuSelected:"set_onMenuSelected"})
});
var haxe_ui_containers_menus__$MenuBar_Events = function(menubar) {
	haxe_ui_events_Events.call(this,menubar);
	this._menubar = menubar;
};
$hxClasses["haxe.ui.containers.menus._MenuBar.Events"] = haxe_ui_containers_menus__$MenuBar_Events;
haxe_ui_containers_menus__$MenuBar_Events.__name__ = "haxe.ui.containers.menus._MenuBar.Events";
haxe_ui_containers_menus__$MenuBar_Events.__super__ = haxe_ui_events_Events;
haxe_ui_containers_menus__$MenuBar_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_menubar: null
	,_currentMenu: null
	,_currentButton: null
	,register: function() {
		var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		var _g = 0;
		var _g1 = builder._buttons;
		while(_g < _g1.length) {
			var button = _g1[_g];
			++_g;
			if(!button.hasEvent("click",$bind(this,this.onButtonClick))) {
				button.registerEvent("click",$bind(this,this.onButtonClick));
			}
			if(!button.hasEvent("mouseover",$bind(this,this.onButtonOver))) {
				button.registerEvent("mouseover",$bind(this,this.onButtonOver));
			}
		}
	}
	,unregister: function() {
		var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		var _g = 0;
		var _g1 = builder._buttons;
		while(_g < _g1.length) {
			var button = _g1[_g];
			++_g;
			button.unregisterEvent("click",$bind(this,this.onButtonClick));
			button.unregisterEvent("mouseover",$bind(this,this.onButtonOver));
		}
	}
	,onCompleteButton: function(event) {
		var target = js_Boot.__cast(event.target , haxe_ui_components_Button);
		target.unregisterEvent("mouseout",$bind(this,this.onCompleteButton));
		this.hideCurrentMenu();
	}
	,onButtonClick: function(event) {
		var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		var target = js_Boot.__cast(event.target , haxe_ui_components_Button);
		var index = builder._buttons.indexOf(target);
		if(target.get_toggle() == false) {
			var menu = builder._menus[index];
			var newEvent = new haxe_ui_containers_menus_MenuEvent("menuselected");
			newEvent.menu = menu;
			this._menubar.dispatch(newEvent);
			target.registerEvent("mouseout",$bind(this,this.onCompleteButton));
			menu.dispatch(new haxe_ui_events_MouseEvent("click"));
			return;
		}
		if(target.get_selected() == true) {
			this.showMenu(index);
		} else if(this._currentButton != null) {
			this.hideCurrentMenu();
		}
	}
	,onButtonOver: function(event) {
		if(this._currentMenu == null) {
			return;
		}
		var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		var target = js_Boot.__cast(event.target , haxe_ui_components_Button);
		var index = builder._buttons.indexOf(target);
		var menu = builder._menus[index];
		if(menu != this._currentMenu) {
			this.showMenu(index);
		}
	}
	,showMenu: function(index) {
		var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		var menu = builder._menus[index];
		var hasChildren = (menu._children == null ? [] : menu._children).length > 0;
		var target = builder._buttons[index];
		if(this._currentMenu == menu) {
			return;
		}
		var _g = 0;
		var _g1 = builder._buttons;
		while(_g < _g1.length) {
			var button = _g1[_g];
			++_g;
			if(button != target) {
				button.set_selected(false);
			}
		}
		target.set_selected(true);
		this.hideCurrentMenu();
		(js_Boot.__cast(menu._internalEvents , haxe_ui_containers_menus_MenuEvents)).button = target;
		if(menu.hasEvent("close",$bind(this,this.onMenuClose)) == false) {
			menu.registerEvent("close",$bind(this,this.onMenuClose));
		}
		var rtl = false;
		if(hasChildren == true) {
			var componentOffset = target.getComponentOffset();
			var left = target.get_screenLeft() + componentOffset.x;
			var marginTop = 0;
			if(menu.get_style() != null && menu.get_style().marginTop != null) {
				marginTop = menu.get_style().marginTop;
			}
			var top = target.get_screenTop() + (target.get_actualComponentHeight() - haxe_ui_Toolkit.get_scaleY()) + componentOffset.y + marginTop;
			menu.set_menuStyleNames(this._menubar.get_menuStyleNames());
			menu.addClasses([this._menubar.get_menuStyleNames(),"expanded"]);
			if(menu.findComponent("menu-filler",null,false) == null) {
				var filler = new haxe_ui_core_Component();
				filler.set_horizontalAlign("right");
				filler.set_includeInLayout(false);
				filler.addClass("menu-filler");
				filler.set_id("menu-filler");
				menu.addComponent(filler);
			}
			menu.show();
			haxe_ui_core_Screen.get_instance().addComponent(menu);
			menu.syncComponentValidation();
			if(left + menu.get_actualComponentWidth() > haxe_ui_core_Screen.get_instance().get_actualWidth()) {
				left = target.get_screenLeft() - menu.get_actualComponentWidth() + target.get_actualComponentWidth();
				rtl = true;
			}
			menu.set_left(left);
			menu.set_top(top - haxe_ui_Toolkit.get_scaleY());
		}
		this._currentButton = target;
		this._currentMenu = menu;
		if(hasChildren == true) {
			var cx = menu.get_width() - this._currentButton.get_width();
			var filler = menu.findComponent("menu-filler",null,false);
			if(cx > 0 && filler != null) {
				++cx;
				filler.set_width(cx);
				if(rtl == false) {
					filler.set_left(menu.get_width() - cx);
				}
			} else if(filler != null) {
				menu.removeComponent(filler);
			}
			if(!this._currentMenu.hasEvent("menuselected",$bind(this,this.onMenuSelected))) {
				this._currentMenu.registerEvent("menuselected",$bind(this,this.onMenuSelected));
			}
		}
		if(hasChildren == true) {
			this._currentMenu.dispatch(new haxe_ui_events_MouseEvent("click"));
			var menuEvent = new haxe_ui_containers_menus_MenuEvent("menuopened");
			menuEvent.menu = this._currentMenu;
			this._currentMenu.dispatch(menuEvent);
			this.dispatch(menuEvent);
		}
	}
	,hideCurrentMenu: function() {
		if(this._currentMenu != null) {
			var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
			var _g = 0;
			var _g1 = builder._buttons;
			while(_g < _g1.length) {
				var button = _g1[_g];
				++_g;
				if(button.classes.indexOf("menubar-button-no-children-active") != -1) {
					button.swapClass("menubar-button-no-children","menubar-button-no-children-active");
				}
			}
			var menuEvent = new haxe_ui_containers_menus_MenuEvent("menuclosed");
			menuEvent.menu = this._currentMenu;
			this._currentMenu.dispatch(menuEvent);
			this.dispatch(menuEvent);
			this._currentMenu.unregisterEvent("menuselected",$bind(this,this.onMenuSelected));
			this._currentMenu.hide();
			this._currentButton.set_selected(false);
			haxe_ui_core_Screen.get_instance().removeComponent(this._currentMenu,false);
			this._currentButton = null;
			this._currentMenu = null;
		}
	}
	,onMenuClose: function(event) {
		var menu = js_Boot.__cast(event.target , haxe_ui_containers_menus_Menu);
		if(this._currentMenu == menu) {
			this.hideCurrentMenu();
		}
	}
	,onMenuSelected: function(event) {
		var newEvent = new haxe_ui_containers_menus_MenuEvent("menuselected");
		newEvent.menu = event.menu;
		newEvent.menuItem = event.menuItem;
		this._menubar.dispatch(newEvent);
		this.hideCurrentMenu();
	}
	,__class__: haxe_ui_containers_menus__$MenuBar_Events
});
var haxe_ui_containers_menus__$MenuBar_Builder = function(menubar) {
	this._menus = [];
	this._buttons = [];
	haxe_ui_core_CompositeBuilder.call(this,menubar);
	this._menubar = menubar;
};
$hxClasses["haxe.ui.containers.menus._MenuBar.Builder"] = haxe_ui_containers_menus__$MenuBar_Builder;
haxe_ui_containers_menus__$MenuBar_Builder.__name__ = "haxe.ui.containers.menus._MenuBar.Builder";
haxe_ui_containers_menus__$MenuBar_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_menus__$MenuBar_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_menubar: null
	,_buttons: null
	,_menus: null
	,onThemeChanged: function() {
		var _g = 0;
		var _g1 = this._menus;
		while(_g < _g1.length) {
			var menu = _g1[_g];
			++_g;
			haxe_ui_core_Screen.get_instance().invalidateChildren(menu);
			haxe_ui_core_Screen.get_instance().onThemeChangedChildren(menu);
		}
	}
	,create: function() {
	}
	,destroy: function() {
		haxe_ui_core_CompositeBuilder.prototype.destroy.call(this);
		var _g = 0;
		var _g1 = this._menus;
		while(_g < _g1.length) {
			var menu = _g1[_g];
			++_g;
			haxe_ui_core_Screen.get_instance().removeComponent(menu);
		}
		this._menus = null;
	}
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_containers_menus_Menu)) {
			var menu = js_Boot.__cast(child , haxe_ui_containers_menus_Menu);
			var button = new haxe_ui_components_Button();
			button.set_text(menu.get_text());
			button.set_icon(menu.get_icon());
			button.set_tooltip(menu.get_tooltip());
			button.set_hidden(child.get_hidden());
			button.set_allowFocus(false);
			haxe_ui_locale_LocaleManager.get_instance().cloneForComponent(child,button);
			this._buttons.push(button);
			this._menubar.addComponent(button);
			this._menubar.registerInternalEvents(null,true);
			this._menus.push(menu);
			this.styleMenuButton(menu,button);
			menu.registerEvent("componentadded",$bind(this,this.onChildAdded));
			menu.registerEvent("componentremoved",$bind(this,this.onChildRemoved));
			menu.registerEvent("propertychange",$bind(this,this.onMenuPropertyChanged));
			return menu;
		}
		return null;
	}
	,onChildAdded: function(event) {
		var menu = js_Boot.__cast(event.target , haxe_ui_containers_menus_Menu);
		var index = this._menus.indexOf(menu);
		var button = this._buttons[index];
		this.styleMenuButton(menu,button);
	}
	,onChildRemoved: function(event) {
		var menu = js_Boot.__cast(event.target , haxe_ui_containers_menus_Menu);
		var index = this._menus.indexOf(menu);
		var button = this._buttons[index];
		this.styleMenuButton(menu,button);
	}
	,onMenuPropertyChanged: function(event) {
		if(event.data == "text") {
			var menu = js_Boot.__cast(event.target , haxe_ui_containers_menus_Menu);
			var index = this._menus.indexOf(menu);
			var button = this._buttons[index];
			button.set_text(event.target.get_text());
		} else if(event.data == "hidden") {
			var menu = js_Boot.__cast(event.target , haxe_ui_containers_menus_Menu);
			var index = this._menus.indexOf(menu);
			var button = this._buttons[index];
			button.set_hidden(event.target.get_hidden());
		} else if(event.data == "icon") {
			var menu = js_Boot.__cast(event.target , haxe_ui_containers_menus_Menu);
			var index = this._menus.indexOf(menu);
			var button = this._buttons[index];
			button.set_icon(menu.get_icon());
		}
	}
	,addComponentAt: function(child,index) {
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,styleMenuButton: function(menu,button) {
		var hasChildren = (menu._children == null ? [] : menu._children).length > 0;
		if(hasChildren == true) {
			button.swapClass("menubar-button","menubar-button-no-children");
		} else {
			button.swapClass("menubar-button-no-children","menubar-button");
		}
		button.set_toggle(hasChildren);
		this._menubar.registerInternalEvents(null,true);
	}
	,getComponentIndex: function(child) {
		return -1;
	}
	,setComponentIndex: function(child,index) {
		return null;
	}
	,getComponentAt: function(index) {
		return null;
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		var match = haxe_ui_core_CompositeBuilder.prototype.findComponent.call(this,criteria,type,recursive,searchType);
		if(match == null) {
			var _g = 0;
			var _g1 = this._menus;
			while(_g < _g1.length) {
				var menu = _g1[_g];
				++_g;
				match = menu.findComponent(criteria,type,recursive,searchType);
				if(menu.matchesSearch(criteria,type,searchType)) {
					return menu;
				} else {
					match = menu.findComponent(criteria,type,recursive,searchType);
				}
				if(match != null) {
					break;
				}
			}
		}
		return match;
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		var r = [];
		var _g = 0;
		var _g1 = this._menus;
		while(_g < _g1.length) {
			var menu = _g1[_g];
			++_g;
			var match = true;
			if(styleName != null && menu.classes.indexOf(styleName) != -1 == false) {
				match = false;
			}
			if(type != null && js_Boot.__instanceof(menu,type) == false) {
				match = false;
			}
			if(match == true) {
				r.push(menu);
			}
			var childArray = menu.findComponents(styleName,type,maxDepth);
			var _g2 = 0;
			while(_g2 < childArray.length) {
				var c = childArray[_g2];
				++_g2;
				r.push(c);
			}
		}
		return r;
	}
	,__class__: haxe_ui_containers_menus__$MenuBar_Builder
});
var haxe_ui_containers_menus_MenuItem = function() {
	haxe_ui_containers_HBox.call(this);
};
$hxClasses["haxe.ui.containers.menus.MenuItem"] = haxe_ui_containers_menus_MenuItem;
haxe_ui_containers_menus_MenuItem.__name__ = "haxe.ui.containers.menus.MenuItem";
haxe_ui_containers_menus_MenuItem.__super__ = haxe_ui_containers_HBox;
haxe_ui_containers_menus_MenuItem.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	registerComposite: function() {
		haxe_ui_containers_HBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_menus__$MenuItem_Events;
		this._compositeBuilderClass = haxe_ui_containers_menus__$MenuItem_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_containers_menus__$MenuItem_TextBehaviour);
		this.behaviours.register("shortcutText",haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour);
		this.behaviours.register("icon",haxe_ui_containers_menus__$MenuItem_IconBehaviour);
		this.behaviours.register("expandable",haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour);
	}
	,get_shortcutText: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("shortcutText"));
	}
	,set_shortcutText: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"shortcutText",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("shortcutText",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"shortcutText"));
		return value;
	}
	,get_expandable: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("expandable"));
	}
	,set_expandable: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("expandable",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"expandable"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if(this.get_shortcutText() != null) {
			c.set_shortcutText(this.get_shortcutText());
		}
		c.set_expandable(this.get_expandable());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_menus_MenuItem();
	}
	,__class__: haxe_ui_containers_menus_MenuItem
	,__properties__: $extend(haxe_ui_containers_HBox.prototype.__properties__,{set_expandable:"set_expandable",get_expandable:"get_expandable",set_shortcutText:"set_shortcutText",get_shortcutText:"get_shortcutText"})
});
var haxe_ui_containers_menus__$MenuItem_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.TextBehaviour"] = haxe_ui_containers_menus__$MenuItem_TextBehaviour;
haxe_ui_containers_menus__$MenuItem_TextBehaviour.__name__ = "haxe.ui.containers.menus._MenuItem.TextBehaviour";
haxe_ui_containers_menus__$MenuItem_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuItem_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent("menuitem-label",null,true);
		label.set_text(haxe_ui_util_Variant.toString(this._value));
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_TextBehaviour
});
var haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.ShortcutTextBehaviour"] = haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour;
haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour.__name__ = "haxe.ui.containers.menus._MenuItem.ShortcutTextBehaviour";
haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent("menuitem-shortcut-label",null,true);
		if(label != null) {
			label.set_text(haxe_ui_util_Variant.toString(this._value));
		}
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour
});
var haxe_ui_containers_menus__$MenuItem_IconBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.IconBehaviour"] = haxe_ui_containers_menus__$MenuItem_IconBehaviour;
haxe_ui_containers_menus__$MenuItem_IconBehaviour.__name__ = "haxe.ui.containers.menus._MenuItem.IconBehaviour";
haxe_ui_containers_menus__$MenuItem_IconBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuItem_IconBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			return;
		}
		var icon = this._component.findComponent("menuitem-icon",null,true);
		if(icon == null) {
			icon = new haxe_ui_components_Image();
			icon.set_scriptAccess(false);
			icon.set_id("menuitem-icon");
			icon.addClass("menuitem-icon");
			icon.addClass("icon");
			this._component.addComponentAt(icon,0);
		}
		icon.set_resource(this._value);
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_IconBehaviour
});
var haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.ExpandableBehaviour"] = haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour;
haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour.__name__ = "haxe.ui.containers.menus._MenuItem.ExpandableBehaviour";
haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var image = this._component.findComponent("menuitem-expandable");
		if(image == null && haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(true))) {
			image = new haxe_ui_components_Image();
			image.set_id("menuitem-expandable");
			image.set_styleNames("menuitem-expandable");
			image.set_scriptAccess(false);
			this._component.addComponent(image);
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		} else if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(false))) {
			this._component.removeComponent(image);
		}
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour
});
var haxe_ui_containers_menus__$MenuItem_Events = function(target) {
	haxe_ui_events_Events.call(this,target);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.Events"] = haxe_ui_containers_menus__$MenuItem_Events;
haxe_ui_containers_menus__$MenuItem_Events.__name__ = "haxe.ui.containers.menus._MenuItem.Events";
haxe_ui_containers_menus__$MenuItem_Events.__super__ = haxe_ui_events_Events;
haxe_ui_containers_menus__$MenuItem_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	register: function() {
		if(!this.hasEvent("mouseover",$bind(this,this.onMouseOver))) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(!this.hasEvent("mouseout",$bind(this,this.onMouseOut))) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
	}
	,unregister: function() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
	}
	,onMouseOver: function(event) {
		this._target.addClass(":hover",true,true);
	}
	,onMouseOut: function(event) {
		this._target.removeClass(":hover",true,true);
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_Events
});
var haxe_ui_containers_menus__$MenuItem_Builder = function(component) {
	haxe_ui_core_CompositeBuilder.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.Builder"] = haxe_ui_containers_menus__$MenuItem_Builder;
haxe_ui_containers_menus__$MenuItem_Builder.__name__ = "haxe.ui.containers.menus._MenuItem.Builder";
haxe_ui_containers_menus__$MenuItem_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_menus__$MenuItem_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	create: function() {
		haxe_ui_core_CompositeBuilder.prototype.create.call(this);
		var box = new haxe_ui_containers_HBox();
		box.set_percentWidth(100);
		box.set_verticalAlign("center");
		var label = new haxe_ui_components_Label();
		label.set_id("menuitem-label");
		label.set_percentWidth(100);
		label.set_styleNames("menuitem-label");
		label.set_scriptAccess(false);
		box.addComponent(label);
		var label = new haxe_ui_components_Label();
		label.set_id("menuitem-shortcut-label");
		label.set_styleNames("menuitem-shortcut-label");
		label.set_scriptAccess(false);
		box.addComponent(label);
		this._component.addComponent(box);
	}
	,applyStyle: function(style) {
		var c = this._component.findComponent("menuitem-label",haxe_ui_core_Component);
		if(c != null) {
			var invalidate = false;
			if(style.color != null && c.get_customStyle().color != style.color) {
				c.get_customStyle().color = style.color;
				invalidate = true;
			}
			if(style.fontName != null && c.get_customStyle().fontName != style.fontName) {
				c.get_customStyle().fontName = style.fontName;
				invalidate = true;
			}
			if(style.fontSize != null && c.get_customStyle().fontSize != style.fontSize) {
				c.get_customStyle().fontSize = style.fontSize;
				invalidate = true;
			}
			if(style.cursor != null && c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(style.textAlign != null && c.get_customStyle().textAlign != style.textAlign) {
				c.get_customStyle().textAlign = style.textAlign;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_Builder
});
var haxe_ui_core_BasicItemRenderer = function() {
	haxe_ui_core_ItemRenderer.call(this);
	var hbox = new haxe_ui_containers_HBox();
	hbox.addClass("basic-renderer-container");
	var icon = new haxe_ui_components_Image();
	icon.set_id("icon");
	icon.addClass("basic-renderer-icon");
	icon.set_verticalAlign("center");
	icon.hide();
	hbox.addComponent(icon);
	var label = new haxe_ui_components_Label();
	label.set_id("text");
	label.addClass("basic-renderer-label");
	label.set_verticalAlign("center");
	label.hide();
	hbox.addComponent(label);
	this.addComponent(hbox);
};
$hxClasses["haxe.ui.core.BasicItemRenderer"] = haxe_ui_core_BasicItemRenderer;
haxe_ui_core_BasicItemRenderer.__name__ = "haxe.ui.core.BasicItemRenderer";
haxe_ui_core_BasicItemRenderer.__super__ = haxe_ui_core_ItemRenderer;
haxe_ui_core_BasicItemRenderer.prototype = $extend(haxe_ui_core_ItemRenderer.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_ItemRenderer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ItemRenderer.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_core_BasicItemRenderer();
	}
	,__class__: haxe_ui_core_BasicItemRenderer
});
var haxe_ui_core_ComponentClassMap = function() {
	this._map = null;
};
$hxClasses["haxe.ui.core.ComponentClassMap"] = haxe_ui_core_ComponentClassMap;
haxe_ui_core_ComponentClassMap.__name__ = "haxe.ui.core.ComponentClassMap";
haxe_ui_core_ComponentClassMap.__properties__ = {get_instance:"get_instance"};
haxe_ui_core_ComponentClassMap.get_instance = function() {
	if(haxe_ui_core_ComponentClassMap._instance == null) {
		haxe_ui_core_ComponentClassMap._instance = new haxe_ui_core_ComponentClassMap();
	}
	return haxe_ui_core_ComponentClassMap._instance;
};
haxe_ui_core_ComponentClassMap.get = function(alias) {
	alias = StringTools.replace(alias,"-","").toLowerCase();
	return haxe_ui_core_ComponentClassMap.get_instance().getClassName(alias);
};
haxe_ui_core_ComponentClassMap.register = function(alias,className) {
	haxe_ui_core_ComponentClassMap.get_instance().registerClassName(alias.toLowerCase(),className);
};
haxe_ui_core_ComponentClassMap.list = function() {
	haxe_ui_core_ComponentClassMap.get_instance().load();
	return new haxe_ds__$StringMap_StringMapKeyIterator(haxe_ui_core_ComponentClassMap.get_instance()._map.h);
};
haxe_ui_core_ComponentClassMap.clear = function() {
	haxe_ui_core_ComponentClassMap.get_instance()._map = new haxe_ds_StringMap();
};
haxe_ui_core_ComponentClassMap.hasClass = function(className) {
	return haxe_ui_core_ComponentClassMap.get_instance().hasClassName(className);
};
haxe_ui_core_ComponentClassMap.prototype = {
	_map: null
	,getClassName: function(alias) {
		this.load();
		alias = alias.toLowerCase();
		return this._map.h[alias];
	}
	,registerClassName: function(alias,className) {
		this.load();
		alias = alias.toLowerCase();
		if(Object.prototype.hasOwnProperty.call(this._map.h,alias) == false) {
			this._map.h[alias] = className;
		}
		this.save();
	}
	,hasClassName: function(className) {
		this.load();
		var h = this._map.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			if(this._map.h[k] == className) {
				return true;
			}
		}
		return false;
	}
	,load: function() {
		if(this._map != null) {
			return;
		}
		var s = haxe_Resource.getString("haxeui_classmap");
		if(s == null) {
			return;
		}
		var unserializer = new haxe_Unserializer(s);
		this._map = unserializer.unserialize();
	}
	,save: function() {
	}
	,__class__: haxe_ui_core_ComponentClassMap
};
var haxe_ui_core_ComponentTextBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.core.ComponentTextBehaviour"] = haxe_ui_core_ComponentTextBehaviour;
haxe_ui_core_ComponentTextBehaviour.__name__ = "haxe.ui.core.ComponentTextBehaviour";
haxe_ui_core_ComponentTextBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_core_ComponentTextBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
	}
	,__class__: haxe_ui_core_ComponentTextBehaviour
});
var haxe_ui_core_ComponentDisabledBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
	this._value = haxe_ui_util_Variant.fromBool(false);
};
$hxClasses["haxe.ui.core.ComponentDisabledBehaviour"] = haxe_ui_core_ComponentDisabledBehaviour;
haxe_ui_core_ComponentDisabledBehaviour.__name__ = "haxe.ui.core.ComponentDisabledBehaviour";
haxe_ui_core_ComponentDisabledBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_core_ComponentDisabledBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		if(value != null && haxe_ui_util_Variant.get_isNull(value) == false) {
			this._component.disableInteractivity(haxe_ui_util_Variant.toBool(value),true,true);
		}
	}
	,get: function() {
		return haxe_ui_util_Variant.fromBool(this._component.classes.indexOf(":disabled") != -1);
	}
	,__class__: haxe_ui_core_ComponentDisabledBehaviour
});
var haxe_ui_core_ComponentValueBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.core.ComponentValueBehaviour"] = haxe_ui_core_ComponentValueBehaviour;
haxe_ui_core_ComponentValueBehaviour.__name__ = "haxe.ui.core.ComponentValueBehaviour";
haxe_ui_core_ComponentValueBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_core_ComponentValueBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		this._component.set_text(haxe_ui_util_Variant.toString(value));
	}
	,get: function() {
		return this._value;
	}
	,getDynamic: function() {
		return haxe_ui_util_Variant.toDynamic(this._value);
	}
	,__class__: haxe_ui_core_ComponentValueBehaviour
});
var haxe_ui_core_ComponentToolTipBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.core.ComponentToolTipBehaviour"] = haxe_ui_core_ComponentToolTipBehaviour;
haxe_ui_core_ComponentToolTipBehaviour.__name__ = "haxe.ui.core.ComponentToolTipBehaviour";
haxe_ui_core_ComponentToolTipBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_core_ComponentToolTipBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			haxe_ui_tooltips_ToolTipManager.get_instance().unregisterTooltip(this._component);
		} else {
			haxe_ui_tooltips_ToolTipManager.get_instance().registerTooltip(this._component,{ tipData : haxe_ui_util_Variant.toDynamic(this._value), renderer : this._component.get_tooltipRenderer()});
		}
	}
	,setDynamic: function(value) {
		haxe_ui_tooltips_ToolTipManager.get_instance().unregisterTooltip(this._component);
		if(value != null) {
			haxe_ui_tooltips_ToolTipManager.get_instance().registerTooltip(this._component,{ tipData : value, renderer : this._component.get_tooltipRenderer()});
		}
	}
	,getDynamic: function() {
		var options = haxe_ui_tooltips_ToolTipManager.get_instance().getTooltipOptions(this._component);
		if(options == null) {
			return null;
		}
		return options.tipData;
	}
	,__class__: haxe_ui_core_ComponentToolTipBehaviour
});
var haxe_ui_core_ComponentToolTipRendererBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.core.ComponentToolTipRendererBehaviour"] = haxe_ui_core_ComponentToolTipRendererBehaviour;
haxe_ui_core_ComponentToolTipRendererBehaviour.__name__ = "haxe.ui.core.ComponentToolTipRendererBehaviour";
haxe_ui_core_ComponentToolTipRendererBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_core_ComponentToolTipRendererBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			haxe_ui_tooltips_ToolTipManager.get_instance().updateTooltipRenderer(this._component,null);
		} else {
			haxe_ui_tooltips_ToolTipManager.get_instance().updateTooltipRenderer(this._component,haxe_ui_util_Variant.toComponent(this._value));
		}
	}
	,__class__: haxe_ui_core_ComponentToolTipRendererBehaviour
});
var haxe_ui_core_ImageDisplay = function() {
	this._isValidating = false;
	this._isAllInvalid = false;
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_backend_ImageDisplayImpl.call(this);
};
$hxClasses["haxe.ui.core.ImageDisplay"] = haxe_ui_core_ImageDisplay;
haxe_ui_core_ImageDisplay.__name__ = "haxe.ui.core.ImageDisplay";
haxe_ui_core_ImageDisplay.__super__ = haxe_ui_backend_ImageDisplayImpl;
haxe_ui_core_ImageDisplay.prototype = $extend(haxe_ui_backend_ImageDisplayImpl.prototype,{
	_invalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		if(value == this._left) {
			return value;
		}
		this._left = value;
		this.invalidateComponent("position");
		return value;
	}
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		if(value == this._top) {
			return value;
		}
		this._top = value;
		this.invalidateComponent("position");
		return value;
	}
	,set_imageWidth: function(value) {
		if(this._imageWidth == value || value <= 0) {
			return value;
		}
		this._imageWidth = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_imageWidth: function() {
		return this._imageWidth;
	}
	,set_imageHeight: function(value) {
		if(this._imageHeight == value || value <= 0) {
			return value;
		}
		this._imageHeight = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_imageHeight: function() {
		return this._imageHeight;
	}
	,get_imageInfo: function() {
		return this._imageInfo;
	}
	,set_imageInfo: function(value) {
		if(value == this._imageInfo) {
			return value;
		}
		this._imageInfo = value;
		this._imageWidth = this._imageInfo.width;
		this._imageHeight = this._imageInfo.height;
		this.invalidateComponent("data");
		this.invalidateComponent("display");
		return value;
	}
	,get_imageClipRect: function() {
		return this._imageClipRect;
	}
	,set_imageClipRect: function(value) {
		this._imageClipRect = value;
		this.invalidateComponent("display");
		return value;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var h = this._invalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				return true;
			}
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	,invalidateComponent: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this.parentComponent == null) {
			return;
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("imageDisplay");
		} else if(!Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
			this.parentComponent.invalidateComponent("imageDisplay");
		}
	}
	,validateComponent: function() {
		if(this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.handleValidate();
		var h = this._invalidationFlags.h;
		var flag_h = h;
		var flag_keys = Object.keys(h);
		var flag_length = flag_keys.length;
		var flag_current = 0;
		while(flag_current < flag_length) {
			var flag = flag_keys[flag_current++];
			var _this = this._invalidationFlags;
			if(Object.prototype.hasOwnProperty.call(_this.h,flag)) {
				delete(_this.h[flag]);
			}
		}
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	,handleValidate: function() {
		var dataInvalid = this.isComponentInvalid("data");
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		if(dataInvalid) {
			this.validateData();
		}
		if(positionInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
	}
	,__class__: haxe_ui_core_ImageDisplay
	,__properties__: {set_imageClipRect:"set_imageClipRect",get_imageClipRect:"get_imageClipRect",set_imageInfo:"set_imageInfo",get_imageInfo:"get_imageInfo",set_imageHeight:"set_imageHeight",get_imageHeight:"get_imageHeight",set_imageWidth:"set_imageWidth",get_imageWidth:"get_imageWidth",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left"}
});
var haxe_ui_core_Platform = function() {
	haxe_ui_backend_PlatformImpl.call(this);
};
$hxClasses["haxe.ui.core.Platform"] = haxe_ui_core_Platform;
haxe_ui_core_Platform.__name__ = "haxe.ui.core.Platform";
haxe_ui_core_Platform.__properties__ = {get_instance:"get_instance",get_hscrollHeight:"get_hscrollHeight",get_vscrollWidth:"get_vscrollWidth"};
haxe_ui_core_Platform.get_vscrollWidth = function() {
	return haxe_ui_core_Platform.get_instance().getMetric("patform.metrics.vscroll.width");
};
haxe_ui_core_Platform.get_hscrollHeight = function() {
	return haxe_ui_core_Platform.get_instance().getMetric("patform.metrics.hscroll.height");
};
haxe_ui_core_Platform.get_instance = function() {
	if(haxe_ui_core_Platform._instance == null) {
		haxe_ui_core_Platform._instance = new haxe_ui_core_Platform();
	}
	return haxe_ui_core_Platform._instance;
};
haxe_ui_core_Platform.__super__ = haxe_ui_backend_PlatformImpl;
haxe_ui_core_Platform.prototype = $extend(haxe_ui_backend_PlatformImpl.prototype,{
	getMetric: function(id) {
		return haxe_ui_backend_PlatformImpl.prototype.getMetric.call(this,id);
	}
	,__class__: haxe_ui_core_Platform
});
var haxe_ui_core_Screen = function() {
	this.currentMouseY = 0;
	this.currentMouseX = 0;
	this._eventMap = new haxe_ui_util_EventMap();
	var _gthis = this;
	haxe_ui_backend_ScreenImpl.call(this);
	this.registerEvent("mousemove",function(e) {
		_gthis.currentMouseX = e.screenX;
		_gthis.currentMouseY = e.screenY;
	});
};
$hxClasses["haxe.ui.core.Screen"] = haxe_ui_core_Screen;
haxe_ui_core_Screen.__name__ = "haxe.ui.core.Screen";
haxe_ui_core_Screen.__properties__ = {get_instance:"get_instance"};
haxe_ui_core_Screen.get_instance = function() {
	if(haxe_ui_core_Screen._instance == null) {
		haxe_ui_core_Screen._instance = new haxe_ui_core_Screen();
	}
	return haxe_ui_core_Screen._instance;
};
haxe_ui_core_Screen.__super__ = haxe_ui_backend_ScreenImpl;
haxe_ui_core_Screen.prototype = $extend(haxe_ui_backend_ScreenImpl.prototype,{
	_eventMap: null
	,currentMouseX: null
	,currentMouseY: null
	,addComponent: function(component) {
		var wasReady = component.get_isReady();
		component._hasScreen = true;
		haxe_ui_backend_ScreenImpl.prototype.addComponent.call(this,component);
		component.ready();
		if(this.rootComponents.indexOf(component) == -1) {
			this.rootComponents.push(component);
		}
		haxe_ui_focus_FocusManager.get_instance().pushView(component);
		if(component.hasEvent("resize",$bind(this,this._onRootComponentResize)) == false) {
			component.registerEvent("resize",$bind(this,this._onRootComponentResize));
		}
		if(wasReady && component.get_hidden() == false) {
			component.dispatch(new haxe_ui_events_UIEvent("shown"));
		}
		return component;
	}
	,removeComponent: function(component,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		if(this.rootComponents.indexOf(component) == -1) {
			return component;
		}
		component._hasScreen = false;
		haxe_ui_backend_ScreenImpl.prototype.removeComponent.call(this,component,dispose);
		component.set_depth(-1);
		HxOverrides.remove(this.rootComponents,component);
		haxe_ui_focus_FocusManager.get_instance().removeView(component);
		component.unregisterEvent("resize",$bind(this,this._onRootComponentResize));
		if(dispose == true) {
			component.disposeComponent();
		} else {
			component.dispatch(new haxe_ui_events_UIEvent("hidden"));
			component.removeClass(":hover",false,true);
		}
		return component;
	}
	,setComponentIndex: function(child,index) {
		if(index >= 0 && index <= this.rootComponents.length) {
			this.handleSetComponentIndex(child,index);
			HxOverrides.remove(this.rootComponents,child);
			this.rootComponents.splice(index,0,child);
		}
		return child;
	}
	,moveComponentToFront: function(child) {
		if(this.rootComponents.indexOf(child) != -1) {
			this.setComponentIndex(child,this.rootComponents.length - 1);
		}
	}
	,findComponentsUnderPoint: function(screenX,screenY,type) {
		var c = [];
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(r.hitTest(screenX,screenY)) {
				var match = true;
				if(type != null && js_Boot.__instanceof(r,type) == false) {
					match = false;
				}
				if(match == true) {
					c.push(r);
				}
			}
			c = c.concat(r.findComponentsUnderPoint(screenX,screenY,type));
		}
		return c;
	}
	,hasComponentUnderPoint: function(screenX,screenY,type) {
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(r.hasComponentUnderPoint(screenX,screenY,type) == true) {
				return true;
			}
		}
		return false;
	}
	,findSolidComponentUnderPoint: function(screenX,screenY,type) {
		var solidComponents = [];
		var components = this.findComponentsUnderPoint(screenX,screenY,type);
		var _g = 0;
		while(_g < components.length) {
			var c = components[_g];
			++_g;
			if(c.get_isComponentSolid()) {
				solidComponents.push(c);
			}
		}
		return solidComponents;
	}
	,hasSolidComponentUnderPoint: function(screenX,screenY,type) {
		return this.findSolidComponentUnderPoint(screenX,screenY,type).length > 0;
	}
	,onThemeChanged: function() {
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			this.onThemeChangedChildren(c);
		}
	}
	,onThemeChangedChildren: function(c) {
		var _g = 0;
		var _g1 = c._children == null ? [] : c._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			this.onThemeChangedChildren(child);
		}
		c.onThemeChanged();
	}
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this.supportsEvent(type) == true) {
			if(this._eventMap.add(type,listener,priority) == true) {
				this.mapEvent(type,$bind(this,this._onMappedEvent));
			}
		}
	}
	,unregisterEvent: function(type,listener) {
		if(this._eventMap.remove(type,listener) == true) {
			this.unmapEvent(type,$bind(this,this._onMappedEvent));
		}
	}
	,_onMappedEvent: function(event) {
		this._eventMap.invoke(event.type,event);
	}
	,__class__: haxe_ui_core_Screen
});
var haxe_ui_core_TextDisplayData = function() {
	this.wordWrap = false;
	this.multiline = false;
};
$hxClasses["haxe.ui.core.TextDisplayData"] = haxe_ui_core_TextDisplayData;
haxe_ui_core_TextDisplayData.__name__ = "haxe.ui.core.TextDisplayData";
haxe_ui_core_TextDisplayData.prototype = {
	multiline: null
	,wordWrap: null
	,__class__: haxe_ui_core_TextDisplayData
};
var haxe_ui_core_TextDisplay = function() {
	this._depth = -1;
	this._isValidating = false;
	this._isAllInvalid = false;
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_backend_TextDisplayImpl.call(this);
};
$hxClasses["haxe.ui.core.TextDisplay"] = haxe_ui_core_TextDisplay;
haxe_ui_core_TextDisplay.__name__ = "haxe.ui.core.TextDisplay";
haxe_ui_core_TextDisplay.__interfaces__ = [haxe_ui_validation_IValidating];
haxe_ui_core_TextDisplay.__super__ = haxe_ui_backend_TextDisplayImpl;
haxe_ui_core_TextDisplay.prototype = $extend(haxe_ui_backend_TextDisplayImpl.prototype,{
	_invalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,get_id: function() {
		if(this.parentComponent == null) {
			return null;
		}
		return this.parentComponent.get_id() + "_textdisplay";
	}
	,set_id: function(value) {
		return value;
	}
	,isComponentOffscreen: null
	,get_isComponentOffscreen: function() {
		return false;
	}
	,get_textStyle: function() {
		return this._textStyle;
	}
	,set_textStyle: function(value) {
		var _gthis = this;
		if(value == null) {
			return value;
		}
		if(value.fontName != null && this._textStyle == null || this._textStyle != null && value.fontName != this._textStyle.fontName) {
			haxe_ui_ToolkitAssets.get_instance().getFont(value.fontName,function(fontInfo) {
				_gthis._fontInfo = fontInfo;
				_gthis.invalidateComponent("style");
				_gthis.parentComponent.invalidateComponent("style");
			});
		} else {
			this.invalidateComponent("style");
		}
		this._textStyle = value;
		return value;
	}
	,get_text: function() {
		return this._text;
	}
	,set_text: function(value) {
		if(value == this._text) {
			return value;
		}
		this._text = value;
		this._htmlText = null;
		this.invalidateComponent("data");
		return value;
	}
	,get_htmlText: function() {
		return this._htmlText;
	}
	,set_htmlText: function(value) {
		if(value == this._htmlText) {
			return value;
		}
		this._htmlText = value;
		this._text = null;
		this.invalidateComponent("data");
		return value;
	}
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		if(value == this._left) {
			return value;
		}
		this.invalidateComponent("position");
		this._left = value;
		return value;
	}
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		if(value == this._top) {
			return value;
		}
		this.invalidateComponent("position");
		this._top = value;
		return value;
	}
	,set_width: function(value) {
		if(this._width == value) {
			return value;
		}
		this.invalidateComponent("display");
		this._width = value;
		return value;
	}
	,get_width: function() {
		return this._width;
	}
	,set_height: function(value) {
		if(this._height == value) {
			return value;
		}
		this.invalidateComponent("display");
		this._height = value;
		return value;
	}
	,get_height: function() {
		return this._height;
	}
	,textWidth: null
	,get_textWidth: function() {
		if(this._text == null && this._htmlText == null) {
			return 0;
		}
		if(this._text != null && this._text.length == 0) {
			return 0;
		}
		if(this._htmlText != null && this._htmlText.length == 0) {
			return 0;
		}
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textWidth;
	}
	,textHeight: null
	,get_textHeight: function() {
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textHeight;
	}
	,get_multiline: function() {
		return this._displayData.multiline;
	}
	,set_multiline: function(value) {
		if(value == this._displayData.multiline) {
			return value;
		}
		this.invalidateComponent("style");
		this._displayData.multiline = value;
		return value;
	}
	,get_wordWrap: function() {
		return this._displayData.wordWrap;
	}
	,set_wordWrap: function(value) {
		if(value == this._displayData.wordWrap) {
			return value;
		}
		this.invalidateComponent("style");
		this._displayData.wordWrap = value;
		return value;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var h = this._invalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				return true;
			}
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	,invalidateComponent: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("textDisplay");
		} else if(!Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
			this.parentComponent.invalidateComponent("textDisplay");
		}
	}
	,_depth: null
	,get_depth: function() {
		return this._depth;
	}
	,set_depth: function(value) {
		if(this._depth == value) {
			return value;
		}
		this._depth = value;
		return value;
	}
	,updateComponentDisplay: function() {
	}
	,validateComponent: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.validateComponentInternal();
		this._invalidationFlags.h = Object.create(null);
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	,validateComponentInternal: function() {
		var dataInvalid = this.isComponentInvalid("data");
		var styleInvalid = this.isComponentInvalid("style");
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		var measureInvalid = this.isComponentInvalid("measure");
		if(dataInvalid) {
			this.validateData();
		}
		if(styleInvalid) {
			if(this.validateStyle()) {
				measureInvalid = true;
			}
		}
		if(positionInvalid || styleInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
		if(dataInvalid || displayInvalid || measureInvalid) {
			var oldTextWidth = this.get_textWidth();
			var oldTextHeight = this.get_textHeight();
			this.measureText();
			if(this.get_textWidth() != oldTextWidth || this.get_textHeight() != oldTextHeight) {
				this.parentComponent.invalidateComponent("layout");
			}
		}
	}
	,__class__: haxe_ui_core_TextDisplay
	,__properties__: $extend(haxe_ui_backend_TextDisplayImpl.prototype.__properties__,{set_depth:"set_depth",get_depth:"get_depth",set_wordWrap:"set_wordWrap",get_wordWrap:"get_wordWrap",set_multiline:"set_multiline",get_multiline:"get_multiline",get_textHeight:"get_textHeight",get_textWidth:"get_textWidth",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText",set_text:"set_text",get_text:"get_text",set_textStyle:"set_textStyle",get_textStyle:"get_textStyle",get_isComponentOffscreen:"get_isComponentOffscreen",set_id:"set_id",get_id:"get_id"})
});
var haxe_ui_core_TextInputData = function() {
	this.onChangedCallback = null;
	this.onScrollCallback = null;
	this.vscrollNativeWheel = false;
	this.vscrollPageStep = null;
	this.vscrollPageSize = 0;
	this.vscrollMax = 0;
	this.vscrollPos = 0;
	this.hscrollPageSize = 0;
	this.hscrollMax = 0;
	this.hscrollPos = 0;
	this.password = false;
};
$hxClasses["haxe.ui.core.TextInputData"] = haxe_ui_core_TextInputData;
haxe_ui_core_TextInputData.__name__ = "haxe.ui.core.TextInputData";
haxe_ui_core_TextInputData.prototype = {
	password: null
	,hscrollPos: null
	,hscrollMax: null
	,hscrollPageSize: null
	,vscrollPos: null
	,vscrollMax: null
	,vscrollPageSize: null
	,vscrollPageStep: null
	,vscrollNativeWheel: null
	,onScrollCallback: null
	,onChangedCallback: null
	,__class__: haxe_ui_core_TextInputData
};
var haxe_ui_core_TextInput = function() {
	this._depth = -1;
	this._isValidating = false;
	this._isAllInvalid = false;
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_backend_TextInputImpl.call(this);
	this._isAllInvalid = true;
};
$hxClasses["haxe.ui.core.TextInput"] = haxe_ui_core_TextInput;
haxe_ui_core_TextInput.__name__ = "haxe.ui.core.TextInput";
haxe_ui_core_TextInput.__interfaces__ = [haxe_ui_validation_IValidating];
haxe_ui_core_TextInput.__super__ = haxe_ui_backend_TextInputImpl;
haxe_ui_core_TextInput.prototype = $extend(haxe_ui_backend_TextInputImpl.prototype,{
	_invalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,get_id: function() {
		if(this.parentComponent == null) {
			return null;
		}
		return this.parentComponent.get_id() + "_textinput";
	}
	,set_id: function(value) {
		return value;
	}
	,isComponentOffscreen: null
	,get_isComponentOffscreen: function() {
		return false;
	}
	,focus: function() {
		haxe_ui_backend_TextInputImpl.prototype.focus.call(this);
	}
	,blur: function() {
		haxe_ui_backend_TextInputImpl.prototype.blur.call(this);
	}
	,get_textStyle: function() {
		return this._textStyle;
	}
	,set_textStyle: function(value) {
		var _gthis = this;
		if(value == null) {
			return value;
		}
		if(value.fontName != null && this._textStyle == null || this._textStyle != null && value.fontName != this._textStyle.fontName) {
			haxe_ui_ToolkitAssets.get_instance().getFont(value.fontName,function(fontInfo) {
				_gthis._fontInfo = fontInfo;
				_gthis.invalidateComponent("style");
			});
		} else {
			this.invalidateComponent("style");
		}
		this._textStyle = value;
		return value;
	}
	,data: null
	,get_data: function() {
		return this._inputData;
	}
	,get_text: function() {
		return this._text;
	}
	,set_text: function(value) {
		if(value == this._text) {
			return value;
		}
		this._text = value;
		this.invalidateComponent("data");
		return value;
	}
	,get_htmlText: function() {
		return this._htmlText;
	}
	,set_htmlText: function(value) {
		if(value == this._htmlText) {
			return value;
		}
		this._htmlText = value;
		this._text = null;
		this.invalidateComponent("data");
		return value;
	}
	,get_password: function() {
		return this._inputData.password;
	}
	,set_password: function(value) {
		if(value == this._inputData.password) {
			return value;
		}
		this._inputData.password = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		if(value == this._left) {
			return value;
		}
		this._left = value;
		this.invalidateComponent("position");
		return value;
	}
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		if(value == this._top) {
			return value;
		}
		this._top = value;
		this.invalidateComponent("position");
		return value;
	}
	,set_width: function(value) {
		if(this._width == value) {
			return value;
		}
		this._width = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_width: function() {
		return this._width;
	}
	,set_height: function(value) {
		if(this._height == value) {
			return value;
		}
		this._height = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_height: function() {
		return this._height;
	}
	,textWidth: null
	,get_textWidth: function() {
		if(this._text == null || this._text.length == 0) {
			return 0;
		}
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textWidth;
	}
	,textHeight: null
	,get_textHeight: function() {
		var tmp = this._text == null || this._text.length == 0;
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textHeight;
	}
	,get_multiline: function() {
		return this._displayData.multiline;
	}
	,set_multiline: function(value) {
		if(value == this._displayData.multiline) {
			return value;
		}
		this._displayData.multiline = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_wordWrap: function() {
		return this._displayData.wordWrap;
	}
	,set_wordWrap: function(value) {
		if(value == this._displayData.wordWrap) {
			return value;
		}
		this._displayData.wordWrap = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_hscrollPos: function() {
		return this._inputData.hscrollPos;
	}
	,set_hscrollPos: function(value) {
		if(value == this._inputData.hscrollPos) {
			return value;
		}
		this._inputData.hscrollPos = value;
		this.invalidateComponent("data");
		return value;
	}
	,hscrollMax: null
	,get_hscrollMax: function() {
		return this._inputData.hscrollMax;
	}
	,hscrollPageSize: null
	,get_hscrollPageSize: function() {
		return this._inputData.hscrollPageSize;
	}
	,get_vscrollPos: function() {
		return this._inputData.vscrollPos;
	}
	,set_vscrollPos: function(value) {
		if(value == this._inputData.vscrollPos) {
			return value;
		}
		this._inputData.vscrollPos = value;
		this.invalidateComponent("data");
		return value;
	}
	,vscrollMax: null
	,get_vscrollMax: function() {
		return this._inputData.vscrollMax;
	}
	,vscrollPageSize: null
	,get_vscrollPageSize: function() {
		return this._inputData.vscrollPageSize;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var h = this._invalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				return true;
			}
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	,invalidateComponent: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("textInput");
		} else if(!Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
			this.parentComponent.invalidateComponent("textInput");
		}
	}
	,_depth: null
	,get_depth: function() {
		return this._depth;
	}
	,set_depth: function(value) {
		if(this._depth == value) {
			return value;
		}
		this._depth = value;
		return value;
	}
	,updateComponentDisplay: function() {
	}
	,validateComponent: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.validateComponentInternal();
		var h = this._invalidationFlags.h;
		var flag_h = h;
		var flag_keys = Object.keys(h);
		var flag_length = flag_keys.length;
		var flag_current = 0;
		while(flag_current < flag_length) {
			var flag = flag_keys[flag_current++];
			var _this = this._invalidationFlags;
			if(Object.prototype.hasOwnProperty.call(_this.h,flag)) {
				delete(_this.h[flag]);
			}
		}
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	,validateComponentInternal: function() {
		var dataInvalid = this.isComponentInvalid("data");
		var styleInvalid = this.isComponentInvalid("style");
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		var measureInvalid = this.isComponentInvalid("measure");
		if(dataInvalid) {
			this.validateData();
		}
		if(styleInvalid) {
			if(this.validateStyle()) {
				measureInvalid = true;
			}
		}
		if(positionInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
		if(dataInvalid || displayInvalid || measureInvalid) {
			this.measureText();
		}
		if(dataInvalid) {
			if(this._inputData.onChangedCallback != null) {
				this._inputData.onChangedCallback();
			}
		}
	}
	,__class__: haxe_ui_core_TextInput
	,__properties__: $extend(haxe_ui_backend_TextInputImpl.prototype.__properties__,{set_depth:"set_depth",get_depth:"get_depth",get_vscrollPageSize:"get_vscrollPageSize",get_vscrollMax:"get_vscrollMax",set_vscrollPos:"set_vscrollPos",get_vscrollPos:"get_vscrollPos",get_hscrollPageSize:"get_hscrollPageSize",get_hscrollMax:"get_hscrollMax",set_hscrollPos:"set_hscrollPos",get_hscrollPos:"get_hscrollPos",set_wordWrap:"set_wordWrap",get_wordWrap:"get_wordWrap",set_multiline:"set_multiline",get_multiline:"get_multiline",get_textHeight:"get_textHeight",get_textWidth:"get_textWidth",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left",set_password:"set_password",get_password:"get_password",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText",set_text:"set_text",get_text:"get_text",get_data:"get_data",set_textStyle:"set_textStyle",get_textStyle:"get_textStyle",get_isComponentOffscreen:"get_isComponentOffscreen",set_id:"set_id",get_id:"get_id"})
});
var haxe_ui_core_TypeMap = function() { };
$hxClasses["haxe.ui.core.TypeMap"] = haxe_ui_core_TypeMap;
haxe_ui_core_TypeMap.__name__ = "haxe.ui.core.TypeMap";
haxe_ui_core_TypeMap.getTypeInfo = function(className,property) {
	var propInfo = haxe_ui_util_RTTI.getClassProperty(className,property);
	if(propInfo == null) {
		return null;
	}
	return propInfo.propertyType;
};
var haxe_ui_data_DataSource = function(transformer) {
	this._filterFn = null;
	this.onChange = null;
	this.onClear = null;
	this.onRemove = null;
	this.onUpdate = null;
	this.onInsert = null;
	this.onAdd = null;
	this.transformer = transformer;
	this._allowCallbacks = true;
	this._changed = false;
};
$hxClasses["haxe.ui.data.DataSource"] = haxe_ui_data_DataSource;
haxe_ui_data_DataSource.__name__ = "haxe.ui.data.DataSource";
haxe_ui_data_DataSource.fromString = function(data,type) {
	return null;
};
haxe_ui_data_DataSource.prototype = {
	onDataSourceChange: null
	,transformer: null
	,_changed: null
	,onAdd: null
	,onInsert: null
	,onUpdate: null
	,onRemove: null
	,onClear: null
	,onChange: null
	,_allowCallbacks: null
	,get_allowCallbacks: function() {
		return this._allowCallbacks;
	}
	,set_allowCallbacks: function(value) {
		this._allowCallbacks = value;
		if(this._allowCallbacks == true && this._changed == true) {
			this._changed = false;
			this.onInternalChange();
		}
		return value;
	}
	,get_data: function() {
		return this.handleGetData();
	}
	,set_data: function(value) {
		this.handleSetData(value);
		this.handleChanged();
		return value;
	}
	,size: null
	,get_size: function() {
		return this.handleGetSize();
	}
	,get: function(index) {
		var r = this.handleGetItem(index);
		if(js_Boot.__implements(r,haxe_ui_data_IDataItem)) {
			(js_Boot.__cast(r , haxe_ui_data_IDataItem)).onDataSourceChanged = $bind(this,this.onDataItemChange);
		}
		if(this.transformer != null) {
			r = this.transformer.transformFrom(r);
		}
		return r;
	}
	,indexOf: function(item) {
		if(this.transformer != null) {
			item = this.transformer.transformFrom(item);
		}
		return this.handleIndexOf(item);
	}
	,add: function(item) {
		var r = this.handleAddItem(item);
		this.handleChanged();
		if(this._allowCallbacks == true && this.onAdd != null) {
			this.onAdd(r);
		}
		return r;
	}
	,insert: function(index,item) {
		var r = this.handleInsert(index,item);
		this.handleChanged();
		if(this._allowCallbacks == true && this.onInsert != null) {
			this.onInsert(index,r);
		}
		return r;
	}
	,remove: function(item) {
		var r = this.handleRemoveItem(item);
		this.handleChanged();
		if(this._allowCallbacks == true && this.onRemove != null) {
			this.onRemove(r);
		}
		return r;
	}
	,removeAt: function(index) {
		var item = this.get(index);
		return this.remove(item);
	}
	,update: function(index,item) {
		var r = this.handleUpdateItem(index,item);
		this.handleChanged();
		if(this._allowCallbacks == true && this.onUpdate != null) {
			this.onUpdate(index,r);
		}
		return r;
	}
	,clear: function() {
		var o = this._allowCallbacks;
		this._allowCallbacks = false;
		this.handleClear();
		this._allowCallbacks = o;
		this.handleChanged();
		if(this._allowCallbacks == true && this.onClear != null) {
			this.onClear();
		}
	}
	,_filterFn: null
	,clearFilter: function() {
		this._filterFn = null;
		this.handleClearFilter();
	}
	,filter: function(fn) {
		this._filterFn = fn;
		this.handleFilter(fn);
	}
	,isFiltered: null
	,get_isFiltered: function() {
		return this._filterFn != null;
	}
	,handleClearFilter: function() {
	}
	,handleFilter: function(fn) {
	}
	,handleChanged: function() {
		this._changed = true;
		if(this._allowCallbacks == true) {
			this._changed = false;
			this.onInternalChange();
		}
	}
	,sortCustom: function(fn,direction) {
	}
	,sort: function(field,direction) {
		var _g = $bind(this,this.sortByFn);
		var field1 = field;
		this.sortCustom(function(o1,o2,direction) {
			return _g(o1,o2,direction,field1);
		},direction);
	}
	,sortByFn: function(o1,o2,direction,field) {
		var f1 = o1;
		var f2 = o2;
		if(field != null) {
			f1 = Reflect.field(o1,field);
			f2 = Reflect.field(o2,field);
		}
		if(f1 == null || f2 == null) {
			return 0;
		}
		f1 = Std.string(f1);
		f2 = Std.string(f2);
		if(direction == null) {
			direction = "asc";
		}
		var high = 1;
		var low = -1;
		if(direction == "desc") {
			high = -1;
			low = 1;
		}
		if(f1 > f2) {
			return high;
		} else {
			return low;
		}
	}
	,handleGetSize: function() {
		return 0;
	}
	,handleGetItem: function(index) {
		return null;
	}
	,handleIndexOf: function(item) {
		return 0;
	}
	,handleAddItem: function(item) {
		return null;
	}
	,handleInsert: function(index,item) {
		return null;
	}
	,handleRemoveItem: function(item) {
		return null;
	}
	,handleGetData: function() {
		return null;
	}
	,handleSetData: function(v) {
	}
	,handleClear: function() {
		var cachedTransformer = this.transformer;
		this.transformer = null;
		while(this.get_size() > 0) this.remove(this.get(0));
		this.transformer = cachedTransformer;
	}
	,handleUpdateItem: function(index,item) {
		return null;
	}
	,clone: function() {
		var c = new haxe_ui_data_DataSource();
		return c;
	}
	,onDataItemChange: function() {
		if(this._filterFn != null) {
			this.handleFilter(this._filterFn);
		} else {
			this.onInternalChange();
		}
	}
	,onInternalChange: function() {
		if(this.onDataSourceChange != null) {
			this.onDataSourceChange();
		}
		if(this.onChange != null) {
			this.onChange();
		}
	}
	,__class__: haxe_ui_data_DataSource
	,__properties__: {get_isFiltered:"get_isFiltered",get_size:"get_size",set_data:"set_data",get_data:"get_data",set_allowCallbacks:"set_allowCallbacks",get_allowCallbacks:"get_allowCallbacks"}
};
var haxe_ui_data_ArrayDataSource = function(transformer) {
	this._filteredArray = null;
	haxe_ui_data_DataSource.call(this,transformer);
	this._array = [];
};
$hxClasses["haxe.ui.data.ArrayDataSource"] = haxe_ui_data_ArrayDataSource;
haxe_ui_data_ArrayDataSource.__name__ = "haxe.ui.data.ArrayDataSource";
haxe_ui_data_ArrayDataSource.fromArray = function(source,transformer) {
	var ds = new haxe_ui_data_ArrayDataSource(transformer);
	ds._array = source;
	return ds;
};
haxe_ui_data_ArrayDataSource.__super__ = haxe_ui_data_DataSource;
haxe_ui_data_ArrayDataSource.prototype = $extend(haxe_ui_data_DataSource.prototype,{
	_array: null
	,_filteredArray: null
	,handleClearFilter: function() {
		if(this._filteredArray == null) {
			return;
		}
		this._filteredArray = null;
		this.handleChanged();
	}
	,handleFilter: function(fn) {
		this._filteredArray = [];
		var index = 0;
		var _g = 0;
		var _g1 = this._array;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			if(fn(index,item) == true) {
				this._filteredArray.push(item);
			}
			++index;
		}
		this.handleChanged();
	}
	,sortCustom: function(fn,direction) {
		var _g = fn;
		var a3 = direction;
		var tmp = function(a1,a2) {
			return _g(a1,a2,a3);
		};
		this._array.sort(tmp);
		this.handleChanged();
	}
	,handleGetSize: function() {
		if(this._filteredArray != null) {
			return this._filteredArray.length;
		}
		return this._array.length;
	}
	,handleGetItem: function(index) {
		if(this._filteredArray != null) {
			return this._filteredArray[index];
		}
		return this._array[index];
	}
	,handleIndexOf: function(item) {
		if(this._filteredArray != null) {
			return this._filteredArray.indexOf(item);
		}
		return this._array.indexOf(item);
	}
	,handleAddItem: function(item) {
		this._array.push(item);
		if(this._filteredArray != null && this._filterFn != null) {
			if(this._filterFn(this._array.length - 1,item) == true) {
				this._filteredArray.push(item);
			}
		}
		return item;
	}
	,handleInsert: function(index,item) {
		this._array.splice(index,0,item);
		if(this._filteredArray != null && this._filterFn != null) {
			if(this._filterFn(index,item) == true) {
				this._filteredArray.push(item);
			}
		}
		return item;
	}
	,handleRemoveItem: function(item) {
		HxOverrides.remove(this._array,item);
		if(this._filteredArray != null) {
			HxOverrides.remove(this._filteredArray,item);
		}
		return item;
	}
	,handleClear: function() {
		while(this._array.length > 0) this._array.pop();
		if(this._filteredArray != null) {
			while(this._filteredArray.length > 0) this._filteredArray.pop();
		}
	}
	,handleGetData: function() {
		if(this._filteredArray != null) {
			return this._filteredArray;
		}
		return this._array;
	}
	,handleSetData: function(v) {
		this._array = v;
		if(this._filterFn != null) {
			this.filter(this._filterFn);
		}
	}
	,handleUpdateItem: function(index,item) {
		if(this._filteredArray != null) {
			return this._filteredArray[index] = item;
		}
		return this._array[index] = item;
	}
	,clone: function() {
		var c = new haxe_ui_data_ArrayDataSource();
		c._array = this._array.slice();
		if(this._filteredArray != null) {
			c._filteredArray = this._filteredArray.slice();
		}
		if(this._filterFn != null) {
			c._filterFn = this._filterFn;
		}
		return c;
	}
	,__class__: haxe_ui_data_ArrayDataSource
});
var haxe_ui_data_IDataItem = function() { };
$hxClasses["haxe.ui.data.IDataItem"] = haxe_ui_data_IDataItem;
haxe_ui_data_IDataItem.__name__ = "haxe.ui.data.IDataItem";
haxe_ui_data_IDataItem.__isInterface__ = true;
haxe_ui_data_IDataItem.prototype = {
	onDataSourceChanged: null
	,__class__: haxe_ui_data_IDataItem
};
var haxe_ui_data_transformation_IItemTransformer = function() { };
$hxClasses["haxe.ui.data.transformation.IItemTransformer"] = haxe_ui_data_transformation_IItemTransformer;
haxe_ui_data_transformation_IItemTransformer.__name__ = "haxe.ui.data.transformation.IItemTransformer";
haxe_ui_data_transformation_IItemTransformer.__isInterface__ = true;
haxe_ui_data_transformation_IItemTransformer.prototype = {
	transformFrom: null
	,__class__: haxe_ui_data_transformation_IItemTransformer
};
var haxe_ui_data_transformation_NativeTypeTransformer = function() {
};
$hxClasses["haxe.ui.data.transformation.NativeTypeTransformer"] = haxe_ui_data_transformation_NativeTypeTransformer;
haxe_ui_data_transformation_NativeTypeTransformer.__name__ = "haxe.ui.data.transformation.NativeTypeTransformer";
haxe_ui_data_transformation_NativeTypeTransformer.__interfaces__ = [haxe_ui_data_transformation_IItemTransformer];
haxe_ui_data_transformation_NativeTypeTransformer.prototype = {
	transformFrom: function(i) {
		var o = null;
		if(typeof(i) == "string") {
			o = { text : i, value : i};
		} else if(typeof(i) == "number" && ((i | 0) === i) || typeof(i) == "number" || typeof(i) == "boolean") {
			o = { value : i};
		} else {
			o = i;
		}
		return o;
	}
	,__class__: haxe_ui_data_transformation_NativeTypeTransformer
};
var haxe_ui_dragdrop_DragManager = function() {
	this._dragComponents = new haxe_ds_ObjectMap();
	this._mouseTargetToDragTarget = new haxe_ds_ObjectMap();
};
$hxClasses["haxe.ui.dragdrop.DragManager"] = haxe_ui_dragdrop_DragManager;
haxe_ui_dragdrop_DragManager.__name__ = "haxe.ui.dragdrop.DragManager";
haxe_ui_dragdrop_DragManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_dragdrop_DragManager.get_instance = function() {
	if(haxe_ui_dragdrop_DragManager._instance == null) {
		haxe_ui_dragdrop_DragManager._instance = new haxe_ui_dragdrop_DragManager();
	}
	return haxe_ui_dragdrop_DragManager._instance;
};
haxe_ui_dragdrop_DragManager.prototype = {
	_dragComponents: null
	,_mouseTargetToDragTarget: null
	,_currentComponent: null
	,_currentOptions: null
	,_mouseOffset: null
	,getDragOptions: function(component) {
		var dragOptions = this._dragComponents.h[component.__id__];
		return dragOptions;
	}
	,registerDraggable: function(component,dragOptions) {
		if(this.isRegisteredDraggable(component)) {
			return null;
		}
		if(dragOptions == null) {
			dragOptions = { };
		}
		if(dragOptions.mouseTarget == null) {
			dragOptions.mouseTarget = component;
		}
		if(dragOptions.dragOffsetX == null) {
			dragOptions.dragOffsetX = 0;
		}
		if(dragOptions.dragOffsetY == null) {
			dragOptions.dragOffsetY = 0;
		}
		if(dragOptions.dragTolerance == null) {
			dragOptions.dragTolerance = haxe_ui_Toolkit.get_scale() | 0;
		}
		if(dragOptions.draggableStyleName == null) {
			dragOptions.draggableStyleName = "draggable";
		}
		if(dragOptions.draggingStyleName == null) {
			dragOptions.draggingStyleName = "dragging";
		}
		this._dragComponents.set(component,dragOptions);
		this._mouseTargetToDragTarget.set(dragOptions.mouseTarget,component);
		if(!dragOptions.mouseTarget.hasEvent("mousedown",$bind(this,this.onMouseDown))) {
			dragOptions.mouseTarget.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(dragOptions.draggableStyleName != null) {
			dragOptions.mouseTarget.addClass(dragOptions.draggableStyleName);
		}
		return dragOptions;
	}
	,unregisterDraggable: function(component) {
		if(!this.isRegisteredDraggable(component)) {
			return;
		}
		var dragOptions = this.getDragOptions(component);
		if(dragOptions != null && dragOptions.mouseTarget != null) {
			dragOptions.mouseTarget.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
			this._mouseTargetToDragTarget.remove(dragOptions.mouseTarget);
		}
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenCheckForDrag));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenDrag));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this._dragComponents.remove(component);
	}
	,isRegisteredDraggable: function(component) {
		return this._dragComponents.h.__keys__[component.__id__] != null;
	}
	,onMouseDown: function(e) {
		this._currentComponent = this._mouseTargetToDragTarget.h[e.target.__id__];
		if(this._currentComponent.parentComponent == null) {
			e.screenX *= haxe_ui_Toolkit.get_scaleX();
			e.screenY *= haxe_ui_Toolkit.get_scaleY();
		}
		this._currentOptions = this.getDragOptions(this._currentComponent);
		this._mouseOffset = new haxe_ui_geom_Point(e.screenX - this._currentComponent.get_left(),e.screenY - this._currentComponent.get_top());
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenCheckForDrag));
	}
	,onScreenCheckForDrag: function(e) {
		if(this._currentComponent.parentComponent == null) {
			e.screenX *= haxe_ui_Toolkit.get_scaleX();
			e.screenY *= haxe_ui_Toolkit.get_scaleY();
		}
		var x1 = e.screenX - this._currentComponent.get_left();
		var y1 = e.screenY - this._currentComponent.get_top();
		var x2 = this._mouseOffset.x;
		var y2 = this._mouseOffset.y;
		if(Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2)) > this._currentOptions.dragTolerance) {
			haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenCheckForDrag));
			haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenDrag));
			this._mouseOffset.x -= this._currentOptions.dragOffsetX;
			this._mouseOffset.y -= this._currentOptions.dragOffsetY;
			if(this._currentOptions.draggingStyleName != null) {
				this._currentComponent.addClass(this._currentOptions.draggingStyleName);
			}
			this._currentComponent.dispatch(new haxe_ui_events_DragEvent("dragstart"));
		}
	}
	,onScreenDrag: function(e) {
		if(this._currentComponent.parentComponent == null) {
			e.screenX *= haxe_ui_Toolkit.get_scaleX();
			e.screenY *= haxe_ui_Toolkit.get_scaleY();
		}
		var event = new haxe_ui_events_DragEvent("drag");
		if(this._currentOptions.dragBounds != null) {
			var v = e.screenX;
			var min = this._currentOptions.dragBounds.left + this._mouseOffset.x;
			var max = this._currentOptions.dragBounds.get_right() - this._currentComponent.get_width() + this._mouseOffset.x;
			var boundX;
			if(v == null || isNaN(v)) {
				boundX = min;
			} else {
				if(min != null && v < min) {
					v = min;
				} else if(max != null && v > max) {
					v = max;
				}
				boundX = v;
			}
			var v = e.screenY;
			var min = this._currentOptions.dragBounds.top + this._mouseOffset.y;
			var max = this._currentOptions.dragBounds.get_bottom() - this._currentComponent.get_height() + this._mouseOffset.y;
			var boundY;
			if(v == null || isNaN(v)) {
				boundY = min;
			} else {
				if(min != null && v < min) {
					v = min;
				} else if(max != null && v > max) {
					v = max;
				}
				boundY = v;
			}
			event.left = boundX - this._mouseOffset.x;
			event.top = boundY - this._mouseOffset.y;
		} else {
			var xpos = e.screenX;
			var ypos = e.screenY;
			event.left = xpos - this._mouseOffset.x;
			event.top = ypos - this._mouseOffset.y;
		}
		this._currentComponent.dispatch(event);
		if(event.canceled == true) {
			return;
		}
		this._currentComponent.moveComponent(event.left,event.top);
	}
	,onScreenMouseUp: function(e) {
		if(this._currentOptions.draggingStyleName != null) {
			this._currentComponent.removeClass(this._currentOptions.draggingStyleName);
		}
		this._currentComponent.dispatch(new haxe_ui_events_DragEvent("dragend"));
		this._currentComponent = null;
		this._currentOptions = null;
		this._mouseOffset.x = 0;
		this._mouseOffset.y = 0;
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenCheckForDrag));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenDrag));
	}
	,__class__: haxe_ui_dragdrop_DragManager
};
var haxe_ui_events_ActionEvent = function(type,action,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	this.repeater = false;
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
	this.action = action;
};
$hxClasses["haxe.ui.events.ActionEvent"] = haxe_ui_events_ActionEvent;
haxe_ui_events_ActionEvent.__name__ = "haxe.ui.events.ActionEvent";
haxe_ui_events_ActionEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ActionEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	action: null
	,repeater: null
	,clone: function() {
		var c = new haxe_ui_events_ActionEvent(this.type,this.action);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		c.relatedEvent = this.relatedEvent;
		c.action = this.action;
		c.repeater = this.repeater;
		this.postClone(c);
		return c;
	}
	,copyFrom: function(e) {
		var ae = js_Boot.__cast(e , haxe_ui_events_ActionEvent);
		this.action = ae.action;
		this.repeater = ae.repeater;
	}
	,__class__: haxe_ui_events_ActionEvent
});
var haxe_ui_events_AnimationEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.AnimationEvent"] = haxe_ui_events_AnimationEvent;
haxe_ui_events_AnimationEvent.__name__ = "haxe.ui.events.AnimationEvent";
haxe_ui_events_AnimationEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_AnimationEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	currentTime: null
	,delta: null
	,position: null
	,clone: function() {
		var c = new haxe_ui_events_AnimationEvent(this.type);
		c.currentTime = this.currentTime;
		c.delta = this.delta;
		c.position = this.position;
		return c;
	}
	,__class__: haxe_ui_events_AnimationEvent
});
var haxe_ui_events_DragEvent = function(type,bubble,data) {
	this.top = 0;
	this.left = 0;
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.events.DragEvent"] = haxe_ui_events_DragEvent;
haxe_ui_events_DragEvent.__name__ = "haxe.ui.events.DragEvent";
haxe_ui_events_DragEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_DragEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	left: null
	,top: null
	,clone: function() {
		var c = new haxe_ui_events_DragEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		c.left = this.left;
		c.top = this.top;
		this.postClone(c);
		return c;
	}
	,copyFrom: function(c) {
		var d = js_Boot.__cast(c , haxe_ui_events_DragEvent);
		this.left = d.left;
		this.top = d.top;
	}
	,__class__: haxe_ui_events_DragEvent
});
var haxe_ui_events_FocusEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.FocusEvent"] = haxe_ui_events_FocusEvent;
haxe_ui_events_FocusEvent.__name__ = "haxe.ui.events.FocusEvent";
haxe_ui_events_FocusEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_FocusEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_events_FocusEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_FocusEvent
});
var haxe_ui_events_ItemEvent = function(type,bubble,data) {
	this.itemIndex = -1;
	this.sourceEvent = null;
	this.source = null;
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.events.ItemEvent"] = haxe_ui_events_ItemEvent;
haxe_ui_events_ItemEvent.__name__ = "haxe.ui.events.ItemEvent";
haxe_ui_events_ItemEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ItemEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	source: null
	,sourceEvent: null
	,itemIndex: null
	,clone: function() {
		var c = new haxe_ui_events_ItemEvent(this.type);
		c.source = this.source;
		c.sourceEvent = this.sourceEvent;
		c.itemIndex = this.itemIndex;
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_ItemEvent
});
var haxe_ui_events_KeyboardEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.KeyboardEvent"] = haxe_ui_events_KeyboardEvent;
haxe_ui_events_KeyboardEvent.__name__ = "haxe.ui.events.KeyboardEvent";
haxe_ui_events_KeyboardEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_KeyboardEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	keyCode: null
	,altKey: null
	,ctrlKey: null
	,shiftKey: null
	,clone: function() {
		var c = new haxe_ui_events_KeyboardEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		c.keyCode = this.keyCode;
		c.altKey = this.altKey;
		c.ctrlKey = this.ctrlKey;
		c.shiftKey = this.shiftKey;
		return c;
	}
	,__class__: haxe_ui_events_KeyboardEvent
});
var haxe_ui_events_MouseEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.MouseEvent"] = haxe_ui_events_MouseEvent;
haxe_ui_events_MouseEvent.__name__ = "haxe.ui.events.MouseEvent";
haxe_ui_events_MouseEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_MouseEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	screenX: null
	,screenY: null
	,buttonDown: null
	,delta: null
	,touchEvent: null
	,ctrlKey: null
	,shiftKey: null
	,localX: null
	,get_localX: function() {
		if(this.target == null) {
			return null;
		}
		return (this.screenX * haxe_ui_Toolkit.get_scaleX() - this.target.get_screenLeft()) / haxe_ui_Toolkit.get_scaleX();
	}
	,localY: null
	,get_localY: function() {
		if(this.target == null) {
			return null;
		}
		return (this.screenY * haxe_ui_Toolkit.get_scaleY() - this.target.get_screenTop()) / haxe_ui_Toolkit.get_scaleY();
	}
	,clone: function() {
		var c = new haxe_ui_events_MouseEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		c.screenX = this.screenX;
		c.screenY = this.screenY;
		c.buttonDown = this.buttonDown;
		c.delta = this.delta;
		c.touchEvent = this.touchEvent;
		c.ctrlKey = this.ctrlKey;
		c.shiftKey = this.shiftKey;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_MouseEvent
	,__properties__: {get_localY:"get_localY",get_localX:"get_localX"}
});
var haxe_ui_events_ScrollEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.ScrollEvent"] = haxe_ui_events_ScrollEvent;
haxe_ui_events_ScrollEvent.__name__ = "haxe.ui.events.ScrollEvent";
haxe_ui_events_ScrollEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ScrollEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_events_ScrollEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_ScrollEvent
});
var haxe_ui_events_SortEvent = function(type,bubble,data) {
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.events.SortEvent"] = haxe_ui_events_SortEvent;
haxe_ui_events_SortEvent.__name__ = "haxe.ui.events.SortEvent";
haxe_ui_events_SortEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_SortEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	direction: null
	,clone: function() {
		var c = new haxe_ui_events_SortEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		c.direction = this.direction;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_SortEvent
});
var haxe_ui_events_ThemeEvent = function(type,bubble,data) {
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.events.ThemeEvent"] = haxe_ui_events_ThemeEvent;
haxe_ui_events_ThemeEvent.__name__ = "haxe.ui.events.ThemeEvent";
haxe_ui_events_ThemeEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ThemeEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	__class__: haxe_ui_events_ThemeEvent
});
var haxe_ui_events_ValidationEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.ValidationEvent"] = haxe_ui_events_ValidationEvent;
haxe_ui_events_ValidationEvent.__name__ = "haxe.ui.events.ValidationEvent";
haxe_ui_events_ValidationEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ValidationEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_events_ValidationEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_ValidationEvent
});
var haxe_ui_filters_Filter = function() {
};
$hxClasses["haxe.ui.filters.Filter"] = haxe_ui_filters_Filter;
haxe_ui_filters_Filter.__name__ = "haxe.ui.filters.Filter";
haxe_ui_filters_Filter.prototype = {
	__class__: haxe_ui_filters_Filter
};
var haxe_ui_filters_Blur = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.Blur"] = haxe_ui_filters_Blur;
haxe_ui_filters_Blur.__name__ = "haxe.ui.filters.Blur";
haxe_ui_filters_Blur.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_Blur.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	amount: null
	,__class__: haxe_ui_filters_Blur
});
var haxe_ui_filters_DropShadow = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.DropShadow"] = haxe_ui_filters_DropShadow;
haxe_ui_filters_DropShadow.__name__ = "haxe.ui.filters.DropShadow";
haxe_ui_filters_DropShadow.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_DropShadow.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	distance: null
	,angle: null
	,color: null
	,alpha: null
	,blurX: null
	,blurY: null
	,strength: null
	,quality: null
	,inner: null
	,__class__: haxe_ui_filters_DropShadow
});
var haxe_ui_filters_FilterParser = function() { };
$hxClasses["haxe.ui.filters.FilterParser"] = haxe_ui_filters_FilterParser;
haxe_ui_filters_FilterParser.__name__ = "haxe.ui.filters.FilterParser";
haxe_ui_filters_FilterParser.parseFilter = function(filterDetails) {
	var filter = null;
	if(filterDetails[0] == "drop-shadow") {
		filter = haxe_ui_filters_FilterParser.parseDropShadow(filterDetails);
	} else if(filterDetails[0] == "blur") {
		filter = haxe_ui_filters_FilterParser.parseBlur(filterDetails);
	} else if(filterDetails[0] == "outline") {
		filter = haxe_ui_filters_FilterParser.parseOutline(filterDetails);
	} else if(filterDetails[0] == "grayscale") {
		filter = haxe_ui_filters_FilterParser.parseGrayscale(filterDetails);
	}
	return filter;
};
haxe_ui_filters_FilterParser.parseDropShadow = function(filterDetails) {
	if(filterDetails == null || filterDetails.length == 0) {
		return null;
	}
	var copy = filterDetails.slice();
	haxe_ui_filters_FilterParser.buildDefaults();
	var filterName = copy[0];
	HxOverrides.remove(copy,filterName);
	copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
	var dropShadow = new haxe_ui_filters_DropShadow();
	dropShadow.distance = copy[0];
	dropShadow.angle = copy[1];
	dropShadow.color = copy[2];
	dropShadow.alpha = copy[3];
	dropShadow.blurX = copy[4];
	dropShadow.blurY = copy[5];
	dropShadow.strength = copy[6];
	dropShadow.quality = copy[7];
	dropShadow.inner = copy[8];
	return dropShadow;
};
haxe_ui_filters_FilterParser.parseBlur = function(filterDetails) {
	if(filterDetails == null || filterDetails.length == 0) {
		return null;
	}
	var copy = filterDetails.slice();
	haxe_ui_filters_FilterParser.buildDefaults();
	var filterName = copy[0];
	HxOverrides.remove(copy,filterName);
	copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
	var blur = new haxe_ui_filters_Blur();
	blur.amount = copy[0];
	return blur;
};
haxe_ui_filters_FilterParser.parseOutline = function(filterDetails) {
	if(filterDetails == null || filterDetails.length == 0) {
		return null;
	}
	var copy = filterDetails.slice();
	haxe_ui_filters_FilterParser.buildDefaults();
	var filterName = copy[0];
	HxOverrides.remove(copy,filterName);
	copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
	var outline = new haxe_ui_filters_Outline();
	outline.color = copy[0];
	outline.size = copy[1];
	return outline;
};
haxe_ui_filters_FilterParser.copyFilterDefaults = function(filterName,params) {
	var copy = [];
	var defaultParams = haxe_ui_filters_FilterParser.filterParamDefaults.h[filterName];
	if(defaultParams != null) {
		var _g = 0;
		while(_g < defaultParams.length) {
			var p = defaultParams[_g];
			++_g;
			copy.push(p);
		}
	}
	if(params != null) {
		var n = 0;
		var _g = 0;
		while(_g < params.length) {
			var p = params[_g];
			++_g;
			copy[n] = p;
			++n;
		}
	}
	return copy;
};
haxe_ui_filters_FilterParser.parseGrayscale = function(filterDetails) {
	if(filterDetails == null || filterDetails.length == 0) {
		return null;
	}
	var copy = filterDetails.slice();
	haxe_ui_filters_FilterParser.buildDefaults();
	var filterName = copy[0];
	HxOverrides.remove(copy,filterName);
	copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
	var grayscale = new haxe_ui_filters_Grayscale();
	grayscale.amount = copy[0];
	return grayscale;
};
haxe_ui_filters_FilterParser.buildDefaults = function() {
	if(haxe_ui_filters_FilterParser.filterParamDefaults != null) {
		return;
	}
	haxe_ui_filters_FilterParser.filterParamDefaults = new haxe_ds_StringMap();
	var v = [];
	haxe_ui_filters_FilterParser.filterParamDefaults.h["drop-shadow"] = v;
	var this1 = haxe_ui_filters_FilterParser.filterParamDefaults;
	var v = haxe_ui_filters_FilterParser.filterParamDefaults.h["drop-shadow"].concat([4,45,0,1,4,4,1,1,false,false,false]);
	this1.h["drop-shadow"] = v;
	var v = [];
	haxe_ui_filters_FilterParser.filterParamDefaults.h["blur"] = v;
	var this1 = haxe_ui_filters_FilterParser.filterParamDefaults;
	var v = haxe_ui_filters_FilterParser.filterParamDefaults.h["blur"].concat([1]);
	this1.h["blur"] = v;
	var v = [];
	haxe_ui_filters_FilterParser.filterParamDefaults.h["outline"] = v;
	var this1 = haxe_ui_filters_FilterParser.filterParamDefaults;
	var v = haxe_ui_filters_FilterParser.filterParamDefaults.h["outline"].concat([0,1]);
	this1.h["outline"] = v;
	var v = [];
	haxe_ui_filters_FilterParser.filterParamDefaults.h["grayscale"] = v;
	var this1 = haxe_ui_filters_FilterParser.filterParamDefaults;
	var v = haxe_ui_filters_FilterParser.filterParamDefaults.h["grayscale"].concat([100]);
	this1.h["grayscale"] = v;
};
var haxe_ui_filters_Grayscale = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.Grayscale"] = haxe_ui_filters_Grayscale;
haxe_ui_filters_Grayscale.__name__ = "haxe.ui.filters.Grayscale";
haxe_ui_filters_Grayscale.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_Grayscale.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	amount: null
	,__class__: haxe_ui_filters_Grayscale
});
var haxe_ui_filters_Outline = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.Outline"] = haxe_ui_filters_Outline;
haxe_ui_filters_Outline.__name__ = "haxe.ui.filters.Outline";
haxe_ui_filters_Outline.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_Outline.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	color: null
	,size: null
	,__class__: haxe_ui_filters_Outline
});
var haxe_ui_focus_IFocusApplicator = function() { };
$hxClasses["haxe.ui.focus.IFocusApplicator"] = haxe_ui_focus_IFocusApplicator;
haxe_ui_focus_IFocusApplicator.__name__ = "haxe.ui.focus.IFocusApplicator";
haxe_ui_focus_IFocusApplicator.__isInterface__ = true;
haxe_ui_focus_IFocusApplicator.prototype = {
	get_enabled: null
	,set_enabled: null
	,apply: null
	,unapply: null
	,__class__: haxe_ui_focus_IFocusApplicator
	,__properties__: {set_enabled:"set_enabled",get_enabled:"get_enabled"}
};
var haxe_ui_focus_FocusApplicator = function() {
	this._enabled = true;
};
$hxClasses["haxe.ui.focus.FocusApplicator"] = haxe_ui_focus_FocusApplicator;
haxe_ui_focus_FocusApplicator.__name__ = "haxe.ui.focus.FocusApplicator";
haxe_ui_focus_FocusApplicator.__interfaces__ = [haxe_ui_focus_IFocusApplicator];
haxe_ui_focus_FocusApplicator.prototype = {
	apply: function(target) {
	}
	,unapply: function(target) {
	}
	,_enabled: null
	,set_enabled: function(value) {
		this._enabled = value;
		return value;
	}
	,get_enabled: function() {
		return this._enabled;
	}
	,__class__: haxe_ui_focus_FocusApplicator
	,__properties__: {set_enabled:"set_enabled",get_enabled:"get_enabled"}
};
var haxe_ui_focus_FocusManager = function() {
	this._lastFocuses = new haxe_ds_ObjectMap();
	this._applicators = [];
	this.enabled = true;
	this.autoFocus = true;
	haxe_ui_backend_FocusManagerImpl.call(this);
	this._applicators.push(new haxe_ui_focus_StyleFocusApplicator());
};
$hxClasses["haxe.ui.focus.FocusManager"] = haxe_ui_focus_FocusManager;
haxe_ui_focus_FocusManager.__name__ = "haxe.ui.focus.FocusManager";
haxe_ui_focus_FocusManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_focus_FocusManager.get_instance = function() {
	if(haxe_ui_focus_FocusManager._instance == null) {
		haxe_ui_focus_FocusManager._instance = new haxe_ui_focus_FocusManager();
	}
	return haxe_ui_focus_FocusManager._instance;
};
haxe_ui_focus_FocusManager.__super__ = haxe_ui_backend_FocusManagerImpl;
haxe_ui_focus_FocusManager.prototype = $extend(haxe_ui_backend_FocusManagerImpl.prototype,{
	autoFocus: null
	,enabled: null
	,_applicators: null
	,pushView: function(view) {
		if(this.hasFocusableItem(view)) {
			var k = this._lastFocuses.keys();
			while(k.hasNext()) {
				var k1 = k.next();
				this._lastFocuses.h[k1.__id__].set_focus(false);
				this.unapplyFocus(this._lastFocuses.h[k1.__id__]);
			}
		}
		if(this.autoFocus == true) {
			this.focusOnFirstInteractive(view);
			view.registerEvent("ready",$bind(this,this.onViewReady));
		}
	}
	,onViewReady: function(e) {
		e.target.unregisterEvent("ready",$bind(this,this.onViewReady));
		if(this.hasFocusableItem(e.target)) {
			var k = this._lastFocuses.keys();
			while(k.hasNext()) {
				var k1 = k.next();
				this._lastFocuses.h[k1.__id__].set_focus(false);
				this.unapplyFocus(this._lastFocuses.h[k1.__id__]);
			}
			this.focusOnFirstInteractive(e.target);
		}
	}
	,hasFocusableItem: function(view) {
		var list = [];
		this.buildFocusableList(view,list);
		return list.length != 0;
	}
	,focusOnFirstInteractive: function(view) {
		var list = [];
		this.buildFocusableList(view,list);
		if(list.length > 0) {
			list[0].set_focus(true);
			return list[0];
		}
		return null;
	}
	,removeView: function(view) {
		this._lastFocuses.remove(view);
		var top = haxe_ui_core_Screen.get_instance().get_topComponent();
		if(top == null) {
			return;
		}
		if(this._lastFocuses.h.__keys__[top.__id__] != null) {
			this.set_focus(this._lastFocuses.h[top.__id__]);
		}
	}
	,get_focus: function() {
		var top = haxe_ui_core_Screen.get_instance().get_topComponent();
		if(top == null) {
			return null;
		}
		return this.buildFocusableList(top,null);
	}
	,_lastFocuses: null
	,set_focus: function(value) {
		if(value != null) {
			var c = js_Boot.__cast(value , haxe_ui_core_Component);
			var root = c.get_rootComponent();
			var currentFocus = this.buildFocusableList(root,null);
			if(currentFocus != null && currentFocus != value) {
				this.unapplyFocus(currentFocus);
				currentFocus.set_focus(false);
			}
			if(this._lastFocuses.h.__keys__[root.__id__] != null && this._lastFocuses.h[root.__id__] != value) {
				this._lastFocuses.h[root.__id__].set_focus(false);
				this.unapplyFocus(this._lastFocuses.h[root.__id__]);
			}
			this._lastFocuses.set(root,value);
			this.applyFocus(value);
		} else {
			var top = haxe_ui_core_Screen.get_instance().get_topComponent();
			if(this._lastFocuses.h.__keys__[top.__id__] != null) {
				this._lastFocuses.h[top.__id__].set_focus(false);
				this.unapplyFocus(this._lastFocuses.h[top.__id__]);
			}
		}
		return value;
	}
	,focusNext: function() {
		var top = haxe_ui_core_Screen.get_instance().get_topComponent();
		var list = [];
		var currentFocus = this.buildFocusableList(top,list);
		var index = -1;
		if(currentFocus != null) {
			index = list.indexOf(currentFocus);
		}
		var nextIndex = index + 1;
		if(nextIndex > list.length - 1) {
			nextIndex = 0;
		}
		var nextFocus = list[nextIndex];
		this.set_focus(nextFocus);
		return nextFocus;
	}
	,focusPrev: function() {
		var top = haxe_ui_core_Screen.get_instance().get_topComponent();
		var list = [];
		var currentFocus = this.buildFocusableList(top,list);
		var index = -1;
		if(currentFocus != null) {
			index = list.indexOf(currentFocus);
		}
		var prevIndex = index - 1;
		if(prevIndex < 0) {
			prevIndex = list.length - 1;
		}
		var prevFocus = list[prevIndex];
		this.set_focus(prevFocus);
		return prevFocus;
	}
	,buildFocusableList: function(c,list) {
		if(!this.enabled) {
			return null;
		}
		var currentFocus = null;
		if(c._isDisposed == true) {
			return null;
		}
		if(c.get_hidden() == true) {
			return null;
		}
		if(js_Boot.__implements(c,haxe_ui_focus_IFocusable)) {
			var f = c;
			if(f.get_allowFocus() == true && f.get_disabled() == false) {
				if(f.get_focus() == true) {
					currentFocus = f;
				}
				if(list != null) {
					list.push(f);
				}
			}
		}
		var childList = (c._children == null ? [] : c._children).slice();
		childList.sort(function(c1,c2) {
			return c1.componentTabIndex - c2.componentTabIndex;
		});
		var _g = 0;
		while(_g < childList.length) {
			var child = childList[_g];
			++_g;
			var f = this.buildFocusableList(child,list);
			if(f != null) {
				currentFocus = f;
			}
		}
		return currentFocus;
	}
	,applyFocus: function(c) {
		haxe_ui_backend_FocusManagerImpl.prototype.applyFocus.call(this,c);
		(js_Boot.__cast(c , haxe_ui_focus_IFocusable)).set_focus(true);
		var _g = 0;
		var _g1 = this._applicators;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.get_enabled() == true) {
				a.apply(c);
			}
		}
	}
	,unapplyFocus: function(c) {
		haxe_ui_backend_FocusManagerImpl.prototype.unapplyFocus.call(this,c);
		(js_Boot.__cast(c , haxe_ui_focus_IFocusable)).set_focus(false);
		var _g = 0;
		var _g1 = this._applicators;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.get_enabled() == true) {
				a.unapply(c);
			}
		}
	}
	,__class__: haxe_ui_focus_FocusManager
	,__properties__: {set_focus:"set_focus",get_focus:"get_focus"}
});
var haxe_ui_focus_StyleFocusApplicator = function() {
	haxe_ui_focus_FocusApplicator.call(this);
};
$hxClasses["haxe.ui.focus.StyleFocusApplicator"] = haxe_ui_focus_StyleFocusApplicator;
haxe_ui_focus_StyleFocusApplicator.__name__ = "haxe.ui.focus.StyleFocusApplicator";
haxe_ui_focus_StyleFocusApplicator.__super__ = haxe_ui_focus_FocusApplicator;
haxe_ui_focus_StyleFocusApplicator.prototype = $extend(haxe_ui_focus_FocusApplicator.prototype,{
	apply: function(target) {
		target.addClass(":active");
	}
	,unapply: function(target) {
		target.removeClass(":active");
	}
	,__class__: haxe_ui_focus_StyleFocusApplicator
});
var haxe_ui_geom_Point = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["haxe.ui.geom.Point"] = haxe_ui_geom_Point;
haxe_ui_geom_Point.__name__ = "haxe.ui.geom.Point";
haxe_ui_geom_Point.prototype = {
	x: null
	,y: null
	,add: function(point) {
		this.x += point.x;
		this.y += point.y;
	}
	,subtract: function(point) {
		this.x -= point.x;
		this.y -= point.y;
	}
	,addCoords: function(dx,dy) {
		this.x += dx;
		this.y += dy;
	}
	,subtractCoords: function(dx,dy) {
		this.x -= dx;
		this.y -= dy;
	}
	,sum: function(point) {
		return new haxe_ui_geom_Point(this.x + point.x,this.y + point.y);
	}
	,diff: function(point) {
		return new haxe_ui_geom_Point(this.x - point.x,this.y - point.y);
	}
	,orthogonalCW: function() {
		return new haxe_ui_geom_Point(this.y,-this.x);
	}
	,orthogonalCCW: function() {
		return new haxe_ui_geom_Point(-this.y,this.x);
	}
	,opposite: function() {
		return new haxe_ui_geom_Point(-this.x,-this.y);
	}
	,revert: function() {
		this.x = -this.x;
		this.y = -this.y;
	}
	,rotate: function(radians) {
		var cos = Math.cos(radians);
		var sin = Math.sin(radians);
		var newX = cos * this.x - sin * this.y;
		var newY = sin * this.x + cos * this.y;
		this.x = newX;
		this.y = newY;
	}
	,rotated: function(radians) {
		var cos = Math.cos(radians);
		var sin = Math.sin(radians);
		var newX = cos * this.x - sin * this.y;
		var newY = sin * this.x + cos * this.y;
		return new haxe_ui_geom_Point(newX,newY);
	}
	,length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,multiply: function(factor) {
		this.x *= factor;
		this.y *= factor;
	}
	,product: function(factor) {
		return new haxe_ui_geom_Point(this.x * factor,this.y * factor);
	}
	,normalize: function(targetLength) {
		if(this.x == 0 && this.y == 0) {
			return;
		}
		var norm = targetLength / this.length();
		this.multiply(norm);
	}
	,normalized: function(targetLength) {
		if(this.x == 0 && this.y == 0) {
			return new haxe_ui_geom_Point();
		}
		var norm = targetLength / this.length();
		return this.product(norm);
	}
	,orth: function() {
		return this.normalized(1);
	}
	,copy: function() {
		return new haxe_ui_geom_Point(this.x,this.y);
	}
	,__class__: haxe_ui_geom_Point
};
var haxe_ui_geom_Rectangle = function(left,top,width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	if(top == null) {
		top = 0;
	}
	if(left == null) {
		left = 0;
	}
	this._intersectionCache = null;
	this.left = left;
	this.top = top;
	this.width = width;
	this.height = height;
};
$hxClasses["haxe.ui.geom.Rectangle"] = haxe_ui_geom_Rectangle;
haxe_ui_geom_Rectangle.__name__ = "haxe.ui.geom.Rectangle";
haxe_ui_geom_Rectangle.prototype = {
	left: null
	,top: null
	,width: null
	,height: null
	,set: function(left,top,width,height) {
		if(height == null) {
			height = 0;
		}
		if(width == null) {
			width = 0;
		}
		if(top == null) {
			top = 0;
		}
		if(left == null) {
			left = 0;
		}
		this.left = left;
		this.top = top;
		this.width = width;
		this.height = height;
	}
	,get_right: function() {
		return this.left + this.width;
	}
	,set_right: function(value) {
		this.width = value - this.left;
		return value;
	}
	,get_bottom: function() {
		return this.top + this.height;
	}
	,set_bottom: function(value) {
		this.height = value - this.top;
		return value;
	}
	,inflate: function(dx,dy) {
		this.left -= dx;
		this.width += dx * 2;
		this.top -= dy;
		this.height += dy * 2;
	}
	,equals: function(rc) {
		if(rc == null) {
			return false;
		}
		if(rc.left == this.left && rc.top == this.top && rc.width == this.width) {
			return rc.height == this.height;
		} else {
			return false;
		}
	}
	,containsPoint: function(x,y) {
		if(x >= this.left && x < this.left + this.width && y >= this.top && y < this.top + this.height) {
			return true;
		}
		return false;
	}
	,containsRect: function(rect) {
		if(rect.width <= 0 || rect.height <= 0) {
			if(rect.left > this.left && rect.top > this.top && rect.get_right() < this.get_right()) {
				return rect.get_bottom() < this.get_bottom();
			} else {
				return false;
			}
		} else if(rect.left >= this.left && rect.top >= this.top && rect.get_right() <= this.get_right()) {
			return rect.get_bottom() <= this.get_bottom();
		} else {
			return false;
		}
	}
	,intersects: function(rect) {
		var x0 = this.left < rect.left ? rect.left : this.left;
		var x1 = this.get_right() > rect.get_right() ? rect.get_right() : this.get_right();
		if(x1 <= x0) {
			return false;
		}
		var y0 = this.top < rect.top ? rect.top : this.top;
		var y1 = this.get_bottom() > rect.get_bottom() ? rect.get_bottom() : this.get_bottom();
		return y1 > y0;
	}
	,_intersectionCache: null
	,intersection: function(rect,noAlloc) {
		if(noAlloc == null) {
			noAlloc = true;
		}
		if(noAlloc == true && this._intersectionCache == null) {
			this._intersectionCache = new haxe_ui_geom_Rectangle();
		}
		var x0 = this.left < rect.left ? rect.left : this.left;
		var x1 = this.get_right() > rect.get_right() ? rect.get_right() : this.get_right();
		if(x1 <= x0) {
			if(noAlloc == true) {
				this._intersectionCache.set();
				return this._intersectionCache;
			} else {
				return new haxe_ui_geom_Rectangle();
			}
		}
		var y0 = this.top < rect.top ? rect.top : this.top;
		var y1 = this.get_bottom() > rect.get_bottom() ? rect.get_bottom() : this.get_bottom();
		if(y1 <= y0) {
			if(noAlloc == true) {
				this._intersectionCache.set();
				return this._intersectionCache;
			} else {
				return new haxe_ui_geom_Rectangle();
			}
		}
		var r = null;
		if(noAlloc == true) {
			r = this._intersectionCache;
		} else {
			r = new haxe_ui_geom_Rectangle();
		}
		r.set(x0,y0,x1 - x0,y1 - y0);
		return r;
	}
	,toInts: function() {
		this.left = this.left | 0;
		this.top = this.top | 0;
		this.width = this.width | 0;
		this.height = this.height | 0;
	}
	,copy: function() {
		return new haxe_ui_geom_Rectangle(this.left,this.top,this.width,this.height);
	}
	,toString: function() {
		return "{left: " + this.left + ", top: " + this.top + ", bottom: " + this.get_bottom() + ", right: " + this.get_right() + ", width: " + this.width + ", height: " + this.height + "}";
	}
	,__class__: haxe_ui_geom_Rectangle
	,__properties__: {set_bottom:"set_bottom",get_bottom:"get_bottom",set_right:"set_right",get_right:"get_right"}
};
var haxe_ui_geom_Size = function(width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	this.width = width;
	this.height = height;
};
$hxClasses["haxe.ui.geom.Size"] = haxe_ui_geom_Size;
haxe_ui_geom_Size.__name__ = "haxe.ui.geom.Size";
haxe_ui_geom_Size.prototype = {
	width: null
	,height: null
	,round: function() {
		this.width = Math.round(this.width);
		this.height = Math.round(this.height);
	}
	,toString: function() {
		return "[" + this.width + "x" + this.height + "]";
	}
	,__class__: haxe_ui_geom_Size
};
var haxe_ui_geom_Slice9 = function() { };
$hxClasses["haxe.ui.geom.Slice9"] = haxe_ui_geom_Slice9;
haxe_ui_geom_Slice9.__name__ = "haxe.ui.geom.Slice9";
haxe_ui_geom_Slice9.buildRects = function(w,h,bitmapWidth,bitmapHeight,slice) {
	var srcRects = haxe_ui_geom_Slice9.buildSrcRects(bitmapWidth,bitmapHeight,slice);
	var dstRects = haxe_ui_geom_Slice9.buildDstRects(w,h,srcRects);
	return { src : srcRects, dst : dstRects};
};
haxe_ui_geom_Slice9.buildSrcRects = function(bitmapWidth,bitmapHeight,slice) {
	var x1 = slice.left;
	var y1 = slice.top;
	var x2 = slice.get_right();
	var y2 = slice.get_bottom();
	var srcRects = [];
	srcRects.push(new haxe_ui_geom_Rectangle(0,0,x1,y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x1,0,x2 - x1,y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x2,0,bitmapWidth - x2,y1));
	srcRects.push(new haxe_ui_geom_Rectangle(0,y1,x1,y2 - y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x1,y1,x2 - x1,y2 - y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x2,y1,bitmapWidth - x2,y2 - y1));
	srcRects.push(new haxe_ui_geom_Rectangle(0,y2,x1,bitmapHeight - y2));
	srcRects.push(new haxe_ui_geom_Rectangle(x1,y2,x2 - x1,bitmapHeight - y2));
	srcRects.push(new haxe_ui_geom_Rectangle(x2,y2,bitmapWidth - x2,bitmapHeight - y2));
	return srcRects;
};
haxe_ui_geom_Slice9.buildDstRects = function(w,h,srcRects) {
	var dstRects = [];
	dstRects.push(new haxe_ui_geom_Rectangle(0,0,srcRects[0].width,srcRects[0].height));
	dstRects.push(new haxe_ui_geom_Rectangle(srcRects[0].width,0,w - srcRects[0].width - srcRects[2].width,srcRects[1].height));
	dstRects.push(new haxe_ui_geom_Rectangle(w - srcRects[2].width,0,srcRects[2].width,srcRects[2].height));
	dstRects.push(new haxe_ui_geom_Rectangle(0,srcRects[0].height,srcRects[3].width,h - srcRects[0].height - srcRects[6].height));
	dstRects.push(new haxe_ui_geom_Rectangle(srcRects[3].width,srcRects[0].height,w - srcRects[3].width - srcRects[5].width,h - srcRects[1].height - srcRects[7].height));
	dstRects.push(new haxe_ui_geom_Rectangle(w - srcRects[5].width,srcRects[2].height,srcRects[5].width,h - srcRects[2].height - srcRects[8].height));
	dstRects.push(new haxe_ui_geom_Rectangle(0,h - srcRects[6].height,srcRects[6].width,srcRects[6].height));
	dstRects.push(new haxe_ui_geom_Rectangle(srcRects[6].width,h - srcRects[7].height,w - srcRects[6].width - srcRects[8].width,srcRects[7].height));
	dstRects.push(new haxe_ui_geom_Rectangle(w - srcRects[8].width,h - srcRects[8].height,srcRects[8].width,srcRects[8].height));
	return dstRects;
};
var haxe_ui_graphics_ComponentGraphics = function(component) {
	haxe_ui_backend_ComponentGraphicsImpl.call(this,component);
};
$hxClasses["haxe.ui.graphics.ComponentGraphics"] = haxe_ui_graphics_ComponentGraphics;
haxe_ui_graphics_ComponentGraphics.__name__ = "haxe.ui.graphics.ComponentGraphics";
haxe_ui_graphics_ComponentGraphics.__super__ = haxe_ui_backend_ComponentGraphicsImpl;
haxe_ui_graphics_ComponentGraphics.prototype = $extend(haxe_ui_backend_ComponentGraphicsImpl.prototype,{
	__class__: haxe_ui_graphics_ComponentGraphics
});
var haxe_ui_graphics_DrawCommand = $hxEnums["haxe.ui.graphics.DrawCommand"] = { __ename__:"haxe.ui.graphics.DrawCommand",__constructs__:null
	,Clear: {_hx_name:"Clear",_hx_index:0,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}
	,SetPixel: ($_=function(x,y,color) { return {_hx_index:1,x:x,y:y,color:color,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="SetPixel",$_.__params__ = ["x","y","color"],$_)
	,SetPixels: ($_=function(pixels) { return {_hx_index:2,pixels:pixels,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="SetPixels",$_.__params__ = ["pixels"],$_)
	,MoveTo: ($_=function(x,y) { return {_hx_index:3,x:x,y:y,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="MoveTo",$_.__params__ = ["x","y"],$_)
	,LineTo: ($_=function(x,y) { return {_hx_index:4,x:x,y:y,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="LineTo",$_.__params__ = ["x","y"],$_)
	,StrokeStyle: ($_=function(color,thickness,alpha) { return {_hx_index:5,color:color,thickness:thickness,alpha:alpha,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="StrokeStyle",$_.__params__ = ["color","thickness","alpha"],$_)
	,Circle: ($_=function(x,y,radius) { return {_hx_index:6,x:x,y:y,radius:radius,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="Circle",$_.__params__ = ["x","y","radius"],$_)
	,FillStyle: ($_=function(color,alpha) { return {_hx_index:7,color:color,alpha:alpha,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="FillStyle",$_.__params__ = ["color","alpha"],$_)
	,CurveTo: ($_=function(controlX,controlY,anchorX,anchorY) { return {_hx_index:8,controlX:controlX,controlY:controlY,anchorX:anchorX,anchorY:anchorY,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="CurveTo",$_.__params__ = ["controlX","controlY","anchorX","anchorY"],$_)
	,CubicCurveTo: ($_=function(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY) { return {_hx_index:9,controlX1:controlX1,controlY1:controlY1,controlX2:controlX2,controlY2:controlY2,anchorX:anchorX,anchorY:anchorY,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="CubicCurveTo",$_.__params__ = ["controlX1","controlY1","controlX2","controlY2","anchorX","anchorY"],$_)
	,Rectangle: ($_=function(x,y,width,height) { return {_hx_index:10,x:x,y:y,width:width,height:height,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="Rectangle",$_.__params__ = ["x","y","width","height"],$_)
	,Image: ($_=function(resource,x,y,width,height) { return {_hx_index:11,resource:resource,x:x,y:y,width:width,height:height,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="Image",$_.__params__ = ["resource","x","y","width","height"],$_)
};
haxe_ui_graphics_DrawCommand.__constructs__ = [haxe_ui_graphics_DrawCommand.Clear,haxe_ui_graphics_DrawCommand.SetPixel,haxe_ui_graphics_DrawCommand.SetPixels,haxe_ui_graphics_DrawCommand.MoveTo,haxe_ui_graphics_DrawCommand.LineTo,haxe_ui_graphics_DrawCommand.StrokeStyle,haxe_ui_graphics_DrawCommand.Circle,haxe_ui_graphics_DrawCommand.FillStyle,haxe_ui_graphics_DrawCommand.CurveTo,haxe_ui_graphics_DrawCommand.CubicCurveTo,haxe_ui_graphics_DrawCommand.Rectangle,haxe_ui_graphics_DrawCommand.Image];
haxe_ui_graphics_DrawCommand.__empty_constructs__ = [haxe_ui_graphics_DrawCommand.Clear];
var haxe_ui_layouts_AbsoluteLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.layouts.AbsoluteLayout"] = haxe_ui_layouts_AbsoluteLayout;
haxe_ui_layouts_AbsoluteLayout.__name__ = "haxe.ui.layouts.AbsoluteLayout";
haxe_ui_layouts_AbsoluteLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_AbsoluteLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
	}
	,__class__: haxe_ui_layouts_AbsoluteLayout
});
var haxe_ui_layouts_DelegateLayout = function(size) {
	haxe_ui_layouts_DefaultLayout.call(this);
	this._size = size;
};
$hxClasses["haxe.ui.layouts.DelegateLayout"] = haxe_ui_layouts_DelegateLayout;
haxe_ui_layouts_DelegateLayout.__name__ = "haxe.ui.layouts.DelegateLayout";
haxe_ui_layouts_DelegateLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_DelegateLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	_size: null
	,calcAutoSize: function(exclusions) {
		this._size.component = this.get_component();
		var cx = this._size.get_width();
		var cy = this._size.get_height();
		if(this._size.getBool("includePadding",false) == true) {
			cx += this.get_paddingLeft() + this.get_paddingRight();
			cy += this.get_paddingTop() + this.get_paddingBottom();
		}
		var size = new haxe_ui_geom_Size(cx,cy);
		return size;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		this._size.component = this.get_component();
		size.width -= this._size.get_usableWidthModifier();
		size.height -= this._size.get_usableHeightModifier();
		return size;
	}
	,__class__: haxe_ui_layouts_DelegateLayout
});
var haxe_ui_layouts_DelegateLayoutSize = function() {
};
$hxClasses["haxe.ui.layouts.DelegateLayoutSize"] = haxe_ui_layouts_DelegateLayoutSize;
haxe_ui_layouts_DelegateLayoutSize.__name__ = "haxe.ui.layouts.DelegateLayoutSize";
haxe_ui_layouts_DelegateLayoutSize.prototype = {
	component: null
	,config: null
	,width: null
	,get_width: function() {
		return 0;
	}
	,height: null
	,get_height: function() {
		return 0;
	}
	,usableWidthModifier: null
	,get_usableWidthModifier: function() {
		return 0;
	}
	,usableHeightModifier: null
	,get_usableHeightModifier: function() {
		return 0;
	}
	,getString: function(name,defaultValue) {
		if(this.config == null) {
			return defaultValue;
		}
		if(Object.prototype.hasOwnProperty.call(this.config.h,name) == false) {
			return defaultValue;
		}
		return this.config.h[name];
	}
	,getInt: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		var v = this.getString(name);
		if(v == null) {
			return defaultValue;
		}
		return Std.parseInt(v);
	}
	,getBool: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var v = this.getString(name);
		if(v == null) {
			return defaultValue;
		}
		return v == "true";
	}
	,__class__: haxe_ui_layouts_DelegateLayoutSize
	,__properties__: {get_usableHeightModifier:"get_usableHeightModifier",get_usableWidthModifier:"get_usableWidthModifier",get_height:"get_height",get_width:"get_width"}
};
var haxe_ui_layouts_HorizontalContinuousLayout = function() {
	haxe_ui_layouts_HorizontalLayout.call(this);
};
$hxClasses["haxe.ui.layouts.HorizontalContinuousLayout"] = haxe_ui_layouts_HorizontalContinuousLayout;
haxe_ui_layouts_HorizontalContinuousLayout.__name__ = "haxe.ui.layouts.HorizontalContinuousLayout";
haxe_ui_layouts_HorizontalContinuousLayout.__super__ = haxe_ui_layouts_HorizontalLayout;
haxe_ui_layouts_HorizontalContinuousLayout.prototype = $extend(haxe_ui_layouts_HorizontalLayout.prototype,{
	resizeChildren: function() {
	}
	,repositionChildren: function() {
		if(this.get_component().get_autoWidth() == true) {
			haxe_ui_layouts_HorizontalLayout.prototype.repositionChildren.call(this);
			return;
		}
		var ucx = this.get_usableWidth();
		if(ucx <= 0) {
			return;
		}
		var ucx = this.get_component().get_componentWidth() - (this.get_paddingLeft() + this.get_paddingRight());
		var ucy = this.get_component().get_componentHeight() - (this.get_paddingTop() + this.get_paddingBottom());
		var dimensions = [];
		var heights = [];
		var row = 0;
		var usedCX = 0;
		var xpos = this.get_paddingLeft();
		var ypos = this.get_paddingTop();
		var rowCY = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var rc = new haxe_ui_layouts_ComponentRectangle(child.get_left(),child.get_top(),child.get_componentWidth(),child.get_componentHeight());
			if(child.get_percentWidth() != null) {
				rc.width = ucx * child.get_percentWidth() / 100;
			} else {
				usedCX += this.get_horizontalSpacing();
			}
			if(child.get_percentHeight() != null) {
				rc.height = ucy * child.get_percentHeight() / 100;
			}
			rc.component = child;
			usedCX += rc.width;
			if(usedCX - this.get_horizontalSpacing() > ucx) {
				heights.push(rowCY);
				ypos += rowCY + this.get_verticalSpacing();
				xpos = this.get_paddingLeft();
				usedCX = rc.width + this.get_horizontalSpacing();
				rowCY = 0;
				++row;
			}
			if(dimensions.length <= row) {
				dimensions.push([]);
			}
			if(dimensions[row] == null) {
				ypos -= this.get_verticalSpacing();
				--row;
				dimensions[row].pop();
			}
			rc.left = xpos;
			rc.top = ypos;
			dimensions[row].push(rc);
			xpos += rc.width;
			if(rc.height > rowCY) {
				rowCY = rc.height;
			}
		}
		if(rowCY > 0) {
			heights.push(rowCY);
		}
		var x = 0;
		var _g = 0;
		while(_g < dimensions.length) {
			var r = dimensions[_g];
			++_g;
			var height = heights[x];
			var spaceX = (r.length - 1) / r.length * this.get_horizontalSpacing();
			var n = 0;
			var _g1 = 0;
			while(_g1 < r.length) {
				var c = r[_g1];
				++_g1;
				switch(this.verticalAlign(c.component)) {
				case "bottom":
					c.top += height - c.height;
					break;
				case "center":
					c.top += height / 2 - c.height / 2;
					break;
				default:
				}
				if(c.component.get_percentWidth() != null) {
					c.left += n * (this.get_horizontalSpacing() - spaceX);
					c.width -= spaceX;
				} else {
					c.left += n * this.get_horizontalSpacing();
				}
				c.apply();
				++n;
			}
			++x;
		}
	}
	,get_usableSize: function() {
		if(this.get_component().get_autoWidth() == true) {
			return haxe_ui_layouts_HorizontalLayout.prototype.get_usableSize.call(this);
		}
		var ucx = 0;
		if(this._component.get_componentWidth() != null) {
			ucx = this._component.get_componentWidth();
			ucx -= this.get_paddingLeft() + this.get_paddingRight();
		}
		var ucy = 0;
		if(this._component.get_componentHeight() != null) {
			ucy = this._component.get_componentHeight();
			ucy -= this.get_paddingTop() + this.get_paddingBottom();
		}
		return new haxe_ui_geom_Size(ucx,ucy);
	}
	,__class__: haxe_ui_layouts_HorizontalContinuousLayout
});
var haxe_ui_layouts_ComponentRectangle = function(left,top,width,height) {
	haxe_ui_geom_Rectangle.call(this,left,top,width,height);
};
$hxClasses["haxe.ui.layouts.ComponentRectangle"] = haxe_ui_layouts_ComponentRectangle;
haxe_ui_layouts_ComponentRectangle.__name__ = "haxe.ui.layouts.ComponentRectangle";
haxe_ui_layouts_ComponentRectangle.__super__ = haxe_ui_geom_Rectangle;
haxe_ui_layouts_ComponentRectangle.prototype = $extend(haxe_ui_geom_Rectangle.prototype,{
	component: null
	,apply: function() {
		this.component.moveComponent(this.left,this.top);
		this.component.resizeComponent(this.width,this.height);
	}
	,__class__: haxe_ui_layouts_ComponentRectangle
});
var haxe_ui_layouts_HorizontalGridLayout = function() {
	this._rows = 1;
	haxe_ui_layouts_Layout.call(this);
};
$hxClasses["haxe.ui.layouts.HorizontalGridLayout"] = haxe_ui_layouts_HorizontalGridLayout;
haxe_ui_layouts_HorizontalGridLayout.__name__ = "haxe.ui.layouts.HorizontalGridLayout";
haxe_ui_layouts_HorizontalGridLayout.__super__ = haxe_ui_layouts_Layout;
haxe_ui_layouts_HorizontalGridLayout.prototype = $extend(haxe_ui_layouts_Layout.prototype,{
	_rows: null
	,get_rows: function() {
		return this._rows;
	}
	,set_rows: function(value) {
		if(this._rows == value) {
			return value;
		}
		this._rows = value;
		if(this._component != null) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_Layout.prototype.get_usableSize.call(this);
		var columnWidths = this.calcColumnWidths(size,false);
		var rowHeights = this.calcRowHeights(size,false);
		var _g = 0;
		while(_g < columnWidths.length) {
			var columnWidth = columnWidths[_g];
			++_g;
			size.width -= columnWidth;
		}
		var _g = 0;
		while(_g < rowHeights.length) {
			var rowHeight = rowHeights[_g];
			++_g;
			size.height -= rowHeight;
		}
		var _this = this.get_component();
		if((_this._children == null ? [] : _this._children).length > 1) {
			var _this = this.get_component();
			var columns = Math.ceil((_this._children == null ? [] : _this._children).length / this._rows);
			size.width -= this.get_horizontalSpacing() * (columns - 1);
			size.height -= this.get_verticalSpacing() * (this.get_rows() - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	,resizeChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var explicitWidths = this.calcExplicitWidths();
		var explicitHeights = this.calcExplicitHeights();
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				var ucx = columnWidths[columnIndex];
				if(explicitWidths[columnIndex] == false) {
					cx = ucx;
				} else {
					cx = ucx * child.get_percentWidth() / 100;
				}
			}
			if(child.get_percentHeight() != null) {
				var ucy = rowHeights[rowIndex];
				if(explicitHeights[rowIndex] == false) {
					cy = ucy;
				} else {
					cy = ucy * child.get_percentHeight() / 100;
				}
			}
			child.resizeComponent(cx,cy);
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
	}
	,repositionChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var rowIndex = 0;
		var columnIndex = 0;
		var xpos = this.get_paddingLeft();
		var ypos = this.get_paddingTop();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var halign = this.horizontalAlign(child);
			var valign = this.verticalAlign(child);
			var xposChild = 0;
			var yposChild = 0;
			switch(halign) {
			case "center":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) * 0.5 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) + this.marginLeft(child) - this.marginRight(child);
				break;
			default:
				xposChild = xpos + this.marginLeft(child) - this.marginRight(child);
			}
			switch(valign) {
			case "bottom":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) + this.marginTop(child) - this.marginBottom(child);
				break;
			case "center":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) * 0.5 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				yposChild = ypos + this.marginTop(child) - this.marginBottom(child);
			}
			child.moveComponent(xposChild,yposChild);
			ypos += rowHeights[rowIndex] + this.get_verticalSpacing();
			++rowIndex;
			if(rowIndex >= this._rows) {
				ypos = this.get_paddingTop();
				xpos += columnWidths[columnIndex] + this.get_horizontalSpacing();
				rowIndex = 0;
				++columnIndex;
			}
		}
	}
	,calcColumnWidths: function(usableSize,includePercentage) {
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var columnCount = visibleChildren / this._rows | 0;
		if(visibleChildren % this._rows != 0) {
			++columnCount;
		}
		var columnWidths = [];
		var _g = 0;
		var _g1 = columnCount;
		while(_g < _g1) {
			var _ = _g++;
			columnWidths.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null) {
				if(child.get_componentWidth() > columnWidths[columnIndex]) {
					columnWidths[columnIndex] = child.get_componentWidth();
				}
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentWidth() != null) {
					var cx = usableSize.width * child.get_percentWidth() / 100;
					if(cx > columnWidths[rowIndex] && this._rows == 1) {
						columnWidths[columnIndex] = cx;
					} else if(usableSize.width > columnWidths[columnIndex]) {
						columnWidths[columnIndex] = usableSize.width;
					}
				}
				++rowIndex;
				if(rowIndex >= this._rows) {
					rowIndex = 0;
					++columnIndex;
				}
			}
		}
		return columnWidths;
	}
	,calcRowHeights: function(usableSize,includePercentage) {
		var rowHeights = [];
		var _g = 0;
		var _g1 = this._rows;
		while(_g < _g1) {
			var _ = _g++;
			rowHeights.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null) {
				if(child.get_componentHeight() > rowHeights[rowIndex]) {
					rowHeights[rowIndex] = child.get_componentHeight();
				}
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentHeight() != null) {
					var cy = usableSize.height * child.get_percentHeight() / 100;
					if(cy > rowHeights[rowIndex]) {
						rowHeights[rowIndex] = cy;
					}
				}
				++rowIndex;
				if(rowIndex >= this._rows) {
					rowIndex = 0;
					++columnIndex;
				}
			}
		}
		return rowHeights;
	}
	,calcExplicitWidths: function() {
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var columnCount = visibleChildren / this._rows | 0;
		if(visibleChildren % this._rows != 0) {
			++columnCount;
		}
		var explicitWidths = [];
		var _g = 0;
		var _g1 = columnCount;
		while(_g < _g1) {
			var _ = _g++;
			explicitWidths.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null && child.get_componentWidth() > 0) {
				explicitWidths[rowIndex % this._rows] = true;
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		return explicitWidths;
	}
	,calcExplicitHeights: function() {
		var explicitHeights = [];
		var _g = 0;
		var _g1 = this._rows;
		while(_g < _g1) {
			var _ = _g++;
			explicitHeights.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null && child.get_componentHeight() > 0) {
				explicitHeights[rowIndex] = true;
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		return explicitHeights;
	}
	,__class__: haxe_ui_layouts_HorizontalGridLayout
	,__properties__: $extend(haxe_ui_layouts_Layout.prototype.__properties__,{set_rows:"set_rows",get_rows:"get_rows"})
});
var haxe_ui_layouts_LayoutFactory = function() { };
$hxClasses["haxe.ui.layouts.LayoutFactory"] = haxe_ui_layouts_LayoutFactory;
haxe_ui_layouts_LayoutFactory.__name__ = "haxe.ui.layouts.LayoutFactory";
haxe_ui_layouts_LayoutFactory.createFromName = function(name) {
	switch(name) {
	case "absolute":
		return new haxe_ui_layouts_AbsoluteLayout();
	case "continuous horizontal":case "continuousHorizontal":
		return new haxe_ui_layouts_HorizontalContinuousLayout();
	case "horizontal":
		return new haxe_ui_layouts_HorizontalLayout();
	case "horizontal grid":case "horizontalgrid":
		return new haxe_ui_layouts_HorizontalGridLayout();
	case "vertical":
		return new haxe_ui_layouts_VerticalLayout();
	case "vertical grid":case "verticalgrid":
		return new haxe_ui_layouts_VerticalGridLayout();
	}
	return new haxe_ui_layouts_DefaultLayout();
};
var haxe_ui_layouts_VerticalLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
	this._calcFullHeights = true;
};
$hxClasses["haxe.ui.layouts.VerticalLayout"] = haxe_ui_layouts_VerticalLayout;
haxe_ui_layouts_VerticalLayout.__name__ = "haxe.ui.layouts.VerticalLayout";
haxe_ui_layouts_VerticalLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_VerticalLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var ypos = this.get_paddingTop();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var xpos = 0;
			switch(this.horizontalAlign(child)) {
			case "center":
				xpos = (this.get_component().get_componentWidth() - child.get_componentWidth()) / 2 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				if(child.get_componentWidth() < this.get_component().get_componentWidth()) {
					xpos = this.get_component().get_componentWidth() - (child.get_componentWidth() + this.get_paddingRight() + this.marginLeft(child));
				}
				break;
			default:
				xpos = this.get_paddingLeft() + this.marginLeft(child);
			}
			child.moveComponent(xpos,ypos + this.marginTop(child));
			ypos += child.get_componentHeight() + this.get_verticalSpacing();
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
				continue;
			}
			if(child.get_componentHeight() > 0 && (child.get_percentHeight() == null || this.fixedMinHeight(child) == true)) {
				size.height -= child.get_componentHeight() + this.marginTop(child) + this.marginBottom(child);
			}
		}
		if(visibleChildren > 1) {
			size.height -= this.get_verticalSpacing() * (visibleChildren - 1);
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	,__class__: haxe_ui_layouts_VerticalLayout
});
var haxe_ui_locale_Formats = function() { };
$hxClasses["haxe.ui.locale.Formats"] = haxe_ui_locale_Formats;
haxe_ui_locale_Formats.__name__ = "haxe.ui.locale.Formats";
haxe_ui_locale_Formats.__properties__ = {set_decimalSeperator:"set_decimalSeperator",get_decimalSeperator:"get_decimalSeperator",set_dateFormatShort:"set_dateFormatShort",get_dateFormatShort:"get_dateFormatShort"};
haxe_ui_locale_Formats.get_dateFormatShort = function() {
	if(haxe_ui_locale_Formats._dateFormatShort == null) {
		return haxe_ui_locale_LocaleManager.get_instance().lookupString("formats.date.short");
	}
	return haxe_ui_locale_Formats._dateFormatShort;
};
haxe_ui_locale_Formats.set_dateFormatShort = function(value) {
	haxe_ui_locale_Formats._dateFormatShort = value;
	return value;
};
haxe_ui_locale_Formats.get_decimalSeperator = function() {
	if(haxe_ui_locale_Formats._decimalSeperator == null) {
		return haxe_ui_locale_LocaleManager.get_instance().lookupString("formats.decimal.seperator");
	}
	return haxe_ui_locale_Formats._decimalSeperator;
};
haxe_ui_locale_Formats.set_decimalSeperator = function(value) {
	haxe_ui_locale_Formats._decimalSeperator = value;
	return value;
};
var haxe_ui_locale_LocaleEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.locale.LocaleEvent"] = haxe_ui_locale_LocaleEvent;
haxe_ui_locale_LocaleEvent.__name__ = "haxe.ui.locale.LocaleEvent";
haxe_ui_locale_LocaleEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_locale_LocaleEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_locale_LocaleEvent(this.type);
		return c;
	}
	,__class__: haxe_ui_locale_LocaleEvent
});
var haxe_ui_locale_LocaleManager = function() {
	this._localeMap = new haxe_ds_StringMap();
	this._language = "en";
	this._eventMap = null;
};
$hxClasses["haxe.ui.locale.LocaleManager"] = haxe_ui_locale_LocaleManager;
haxe_ui_locale_LocaleManager.__name__ = "haxe.ui.locale.LocaleManager";
haxe_ui_locale_LocaleManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_locale_LocaleManager.get_instance = function() {
	if(haxe_ui_locale_LocaleManager._instance == null) {
		haxe_ui_locale_LocaleManager._instance = new haxe_ui_locale_LocaleManager();
	}
	return haxe_ui_locale_LocaleManager._instance;
};
haxe_ui_locale_LocaleManager.prototype = {
	_eventMap: null
	,registerComponent: function(component,prop,callback,expr,fix) {
		if(fix == null) {
			fix = true;
		}
		if(callback == null && expr == null) {
			return;
		}
		var fixedExpr = null;
		if(fix == true) {
			if(expr != null) {
				fixedExpr = haxe_ui_util_ExpressionUtil.stringToLanguageExpression(expr,"LocaleManager");
				if(StringTools.endsWith(fixedExpr,";") == true) {
					fixedExpr = HxOverrides.substr(fixedExpr,0,fixedExpr.length - 1);
				}
			}
		} else {
			fixedExpr = expr;
		}
		var propMap = haxe_ui_locale_LocaleManager._registeredComponents.h[component.__id__];
		if(propMap == null) {
			propMap = new haxe_ds_StringMap();
			haxe_ui_locale_LocaleManager._registeredComponents.set(component,propMap);
		}
		propMap.h[prop] = { callback : callback, expr : fixedExpr};
		this.refreshFor(component);
	}
	,unregisterComponent: function(component) {
		haxe_ui_locale_LocaleManager._registeredComponents.remove(component);
	}
	,findBindingExpr: function(component,prop) {
		var propMap = haxe_ui_locale_LocaleManager._registeredComponents.h[component.__id__];
		if(propMap == null) {
			return null;
		}
		var entry = propMap.h[prop];
		if(entry == null) {
			return null;
		}
		return entry.expr;
	}
	,cloneForComponent: function(from,to) {
		var propMap = haxe_ui_locale_LocaleManager._registeredComponents.h[from.__id__];
		if(propMap == null) {
			return;
		}
		var h = propMap.h;
		var prop_h = h;
		var prop_keys = Object.keys(h);
		var prop_length = prop_keys.length;
		var prop_current = 0;
		while(prop_current < prop_length) {
			var prop = prop_keys[prop_current++];
			var entry = propMap.h[prop];
			this.registerComponent(to,prop,entry.callback,entry.expr,false);
		}
	}
	,onComponentReady: function(e) {
		e.target.unregisterEvent("ready",$bind(this,this.onComponentReady));
		this.refreshFor(e.target);
	}
	,refreshFor: function(component) {
		if(component.get_isReady() == false) {
			component.registerEvent("ready",$bind(this,this.onComponentReady));
			return;
		}
		var propMap = haxe_ui_locale_LocaleManager._registeredComponents.h[component.__id__];
		if(propMap == null) {
			return;
		}
		var context = { LocaleManager : haxe_ui_locale_LocaleManager, MathUtil : haxe_ui_util_MathUtil};
		var root = this.findRoot(component);
		var _g = 0;
		var _g1 = root.get_namedComponents();
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			if(k.get_scriptAccess() == false) {
				continue;
			}
			context[k.get_id()] = k;
		}
		var h = propMap.h;
		var prop_h = h;
		var prop_keys = Object.keys(h);
		var prop_length = prop_keys.length;
		var prop_current = 0;
		while(prop_current < prop_length) {
			var prop = prop_keys[prop_current++];
			var entry = propMap.h[prop];
			if(entry.callback != null) {
				var value = entry.callback();
				Reflect.setProperty(component,prop,value);
			} else if(entry.expr != null) {
				var value1 = haxe_ui_util_SimpleExpressionEvaluator.eval(entry.expr,context);
				Reflect.setProperty(component,prop,value1);
			}
		}
	}
	,refreshAll: function() {
		var c = haxe_ui_locale_LocaleManager._registeredComponents.keys();
		while(c.hasNext()) {
			var c1 = c.next();
			this.refreshFor(c1);
		}
	}
	,_language: null
	,get_language: function() {
		return this._language;
	}
	,set_language: function(value) {
		if(value == null) {
			return value;
		}
		if(this._language == value) {
			return value;
		}
		var tmp = this.getStrings(value) == null;
		this._language = value;
		this.refreshAll();
		if(this._eventMap != null) {
			var event = new haxe_ui_locale_LocaleEvent("localeChanged");
			this._eventMap.invoke("localeChanged",event);
		}
		return value;
	}
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this._eventMap == null) {
			this._eventMap = new haxe_ui_util_EventMap();
		}
		this._eventMap.add(type,listener,priority);
	}
	,hasEvent: function(type,listener) {
		if(this._eventMap == null) {
			return false;
		}
		return this._eventMap.contains(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this._eventMap != null) {
			this._eventMap.remove(type,listener);
		}
	}
	,parseResource: function(localeId,resourceId) {
		var content = haxe_ui_ToolkitAssets.get_instance().getText(resourceId);
		if(content != null) {
			var parts = resourceId.split(".");
			var extension = parts.pop();
			var filename = parts.join(".");
			var n = filename.lastIndexOf("/");
			if(n != -1) {
				filename = HxOverrides.substr(filename,n + 1,null);
			}
			var parser = haxe_ui_parsers_locale_LocaleParser.get(extension);
			var map = parser.parse(content);
			this.addStrings(localeId,map,filename);
		}
	}
	,_localeMap: null
	,addStrings: function(localeId,map,filename) {
		var stringMap = this._localeMap.h[localeId];
		if(stringMap == null) {
			stringMap = new haxe_ds_StringMap();
			this._localeMap.h[localeId] = stringMap;
		}
		var h = map.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			var v = map.h[k];
			if(filename != null && filename != localeId && StringTools.startsWith(k,filename) == false) {
				var altKey = filename + "." + k;
				stringMap.h[altKey] = v;
			}
			stringMap.h[k] = v;
		}
		localeId = StringTools.replace(localeId,"-","_");
		var parts = localeId.split("_");
		if(parts.length > 1) {
			var parent = this._localeMap.h[parts[0]];
			if(parent != null) {
				var h = parent.h;
				var k_h = h;
				var k_keys = Object.keys(h);
				var k_length = k_keys.length;
				var k_current = 0;
				while(k_current < k_length) {
					var k = k_keys[k_current++];
					if(Object.prototype.hasOwnProperty.call(stringMap.h,k) == false) {
						stringMap.h[k] = parent.h[k];
					}
				}
			}
		}
	}
	,getStrings: function(localeId) {
		var strings = this._localeMap.h[localeId];
		if(strings != null) {
			return strings;
		}
		localeId = StringTools.replace(localeId,"-","_");
		var parts = localeId.split("_");
		if(!Object.prototype.hasOwnProperty.call(this._localeMap.h,parts[0])) {
			return this._localeMap.h["en"];
		}
		return this._localeMap.h[parts[0]];
	}
	,hasString: function(id) {
		var strings = this.getStrings(this.get_language());
		if(strings == null) {
			return false;
		}
		return Object.prototype.hasOwnProperty.call(strings.h,id);
	}
	,lookupString: function(id,param0,param1,param2,param3) {
		return this.translateTo(this.get_language(),id,param0,param1,param2,param3);
	}
	,translateTo: function(lang,id,param0,param1,param2,param3) {
		var strings = this.getStrings(lang);
		if(strings == null) {
			return id;
		}
		var value = strings.h[id];
		if(value == null) {
			return id;
		}
		if(param0 != null) {
			value = StringTools.replace(value,"{0}",param0);
		}
		if(param1 != null) {
			value = StringTools.replace(value,"{1}",param1);
		}
		if(param2 != null) {
			value = StringTools.replace(value,"{2}",param2);
		}
		if(param3 != null) {
			value = StringTools.replace(value,"{3}",param3);
		}
		return value;
	}
	,findRoot: function(c) {
		var root = c;
		var ref = c;
		while(ref != null) {
			root = ref;
			if(root.bindingRoot) {
				break;
			}
			ref = ref.parentComponent;
		}
		return root;
	}
	,__class__: haxe_ui_locale_LocaleManager
	,__properties__: {set_language:"set_language",get_language:"get_language"}
};
var haxe_ui_macros_BackendMacros = function() { };
$hxClasses["haxe.ui.macros.BackendMacros"] = haxe_ui_macros_BackendMacros;
haxe_ui_macros_BackendMacros.__name__ = "haxe.ui.macros.BackendMacros";
var haxe_ui_macros_ComponentMacros = function() { };
$hxClasses["haxe.ui.macros.ComponentMacros"] = haxe_ui_macros_ComponentMacros;
haxe_ui_macros_ComponentMacros.__name__ = "haxe.ui.macros.ComponentMacros";
var haxe_ui_macros_ModuleMacros = function() { };
$hxClasses["haxe.ui.macros.ModuleMacros"] = haxe_ui_macros_ModuleMacros;
haxe_ui_macros_ModuleMacros.__name__ = "haxe.ui.macros.ModuleMacros";
var haxe_ui_macros_NativeMacros = function() { };
$hxClasses["haxe.ui.macros.NativeMacros"] = haxe_ui_macros_NativeMacros;
haxe_ui_macros_NativeMacros.__name__ = "haxe.ui.macros.NativeMacros";
var haxe_ui_parsers_locale_LocaleParser = function() {
};
$hxClasses["haxe.ui.parsers.locale.LocaleParser"] = haxe_ui_parsers_locale_LocaleParser;
haxe_ui_parsers_locale_LocaleParser.__name__ = "haxe.ui.parsers.locale.LocaleParser";
haxe_ui_parsers_locale_LocaleParser.get = function(extension) {
	haxe_ui_parsers_locale_LocaleParser.defaultParsers();
	var cls = haxe_ui_parsers_locale_LocaleParser._parsers.h[extension];
	if(cls == null) {
		throw haxe_Exception.thrown("No locale parser found for \"" + extension + "\"");
	}
	var instance = Type.createInstance(cls,[]);
	if(instance == null) {
		throw haxe_Exception.thrown("Could not create locale parser instance \"" + Std.string(cls) + "\"");
	}
	return instance;
};
haxe_ui_parsers_locale_LocaleParser.defaultParsers = function() {
	haxe_ui_parsers_locale_LocaleParser.register("properties",haxe_ui_parsers_locale_PropertiesParser);
	haxe_ui_parsers_locale_LocaleParser.register("po",haxe_ui_parsers_locale_PoParser);
};
haxe_ui_parsers_locale_LocaleParser.register = function(extension,cls) {
	if(haxe_ui_parsers_locale_LocaleParser._parsers == null) {
		haxe_ui_parsers_locale_LocaleParser._parsers = new haxe_ds_StringMap();
	}
	haxe_ui_parsers_locale_LocaleParser._parsers.h[extension] = cls;
};
haxe_ui_parsers_locale_LocaleParser.prototype = {
	parse: function(data) {
		throw haxe_Exception.thrown("Locale parser not implemented!");
	}
	,__class__: haxe_ui_parsers_locale_LocaleParser
};
var haxe_ui_parsers_locale_PoParser = function() {
	haxe_ui_parsers_locale_LocaleParser.call(this);
};
$hxClasses["haxe.ui.parsers.locale.PoParser"] = haxe_ui_parsers_locale_PoParser;
haxe_ui_parsers_locale_PoParser.__name__ = "haxe.ui.parsers.locale.PoParser";
haxe_ui_parsers_locale_PoParser.__super__ = haxe_ui_parsers_locale_LocaleParser;
haxe_ui_parsers_locale_PoParser.prototype = $extend(haxe_ui_parsers_locale_LocaleParser.prototype,{
	parse: function(data) {
		var msgidEReg = new EReg("msgid *= *\"(.*)\"","");
		var msgstrEReg = new EReg("msgstr *= *\"(.*)\"","");
		var result = new haxe_ds_StringMap();
		var lines = data.split("\n");
		var currentID = null;
		var _g = 0;
		while(_g < lines.length) {
			var line = lines[_g];
			++_g;
			line = StringTools.trim(line);
			if(line.length == 0 || StringTools.startsWith(line,"#")) {
				continue;
			}
			if(currentID == null) {
				if(msgidEReg.match(line)) {
					currentID = msgidEReg.matched(1);
				} else {
					throw haxe_Exception.thrown("Locale parser: Invalid line " + line);
				}
			} else if(msgstrEReg.match(line)) {
				var value = msgstrEReg.matched(1);
				result.h[currentID] = value;
				currentID = null;
			} else {
				throw haxe_Exception.thrown("Locale parser: Invalid line " + line);
			}
		}
		return result;
	}
	,__class__: haxe_ui_parsers_locale_PoParser
});
var haxe_ui_parsers_locale_PropertiesParser = function() {
	haxe_ui_parsers_locale_LocaleParser.call(this);
};
$hxClasses["haxe.ui.parsers.locale.PropertiesParser"] = haxe_ui_parsers_locale_PropertiesParser;
haxe_ui_parsers_locale_PropertiesParser.__name__ = "haxe.ui.parsers.locale.PropertiesParser";
haxe_ui_parsers_locale_PropertiesParser.__super__ = haxe_ui_parsers_locale_LocaleParser;
haxe_ui_parsers_locale_PropertiesParser.prototype = $extend(haxe_ui_parsers_locale_LocaleParser.prototype,{
	parse: function(data) {
		var result = new haxe_ds_StringMap();
		var lines = data.split("\n");
		var _g = 0;
		while(_g < lines.length) {
			var line = lines[_g];
			++_g;
			line = StringTools.trim(line);
			if(line.length == 0 || StringTools.startsWith(line,"#")) {
				continue;
			}
			var separator = line.indexOf("=");
			if(separator == -1) {
				throw haxe_Exception.thrown("Locale parser: Invalid line " + line);
			}
			var key = StringTools.trim(HxOverrides.substr(line,0,separator));
			var content = StringTools.trim(HxOverrides.substr(line,separator + 1,null));
			result.h[key] = content;
		}
		return result;
	}
	,__class__: haxe_ui_parsers_locale_PropertiesParser
});
var haxe_ui_styles_Dimension = $hxEnums["haxe.ui.styles.Dimension"] = { __ename__:"haxe.ui.styles.Dimension",__constructs__:null
	,PERCENT: ($_=function(value) { return {_hx_index:0,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="PERCENT",$_.__params__ = ["value"],$_)
	,PX: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="PX",$_.__params__ = ["value"],$_)
	,VW: ($_=function(value) { return {_hx_index:2,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="VW",$_.__params__ = ["value"],$_)
	,VH: ($_=function(value) { return {_hx_index:3,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="VH",$_.__params__ = ["value"],$_)
	,REM: ($_=function(value) { return {_hx_index:4,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="REM",$_.__params__ = ["value"],$_)
	,CALC: ($_=function(s) { return {_hx_index:5,s:s,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="CALC",$_.__params__ = ["s"],$_)
};
haxe_ui_styles_Dimension.__constructs__ = [haxe_ui_styles_Dimension.PERCENT,haxe_ui_styles_Dimension.PX,haxe_ui_styles_Dimension.VW,haxe_ui_styles_Dimension.VH,haxe_ui_styles_Dimension.REM,haxe_ui_styles_Dimension.CALC];
haxe_ui_styles_Dimension.__empty_constructs__ = [];
var haxe_ui_styles_EasingFunction = $hxEnums["haxe.ui.styles.EasingFunction"] = { __ename__:"haxe.ui.styles.EasingFunction",__constructs__:null
	,LINEAR: {_hx_name:"LINEAR",_hx_index:0,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE: {_hx_name:"EASE",_hx_index:1,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE_IN: {_hx_name:"EASE_IN",_hx_index:2,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE_OUT: {_hx_name:"EASE_OUT",_hx_index:3,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE_IN_OUT: {_hx_name:"EASE_IN_OUT",_hx_index:4,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
};
haxe_ui_styles_EasingFunction.__constructs__ = [haxe_ui_styles_EasingFunction.LINEAR,haxe_ui_styles_EasingFunction.EASE,haxe_ui_styles_EasingFunction.EASE_IN,haxe_ui_styles_EasingFunction.EASE_OUT,haxe_ui_styles_EasingFunction.EASE_IN_OUT];
haxe_ui_styles_EasingFunction.__empty_constructs__ = [haxe_ui_styles_EasingFunction.LINEAR,haxe_ui_styles_EasingFunction.EASE,haxe_ui_styles_EasingFunction.EASE_IN,haxe_ui_styles_EasingFunction.EASE_OUT,haxe_ui_styles_EasingFunction.EASE_IN_OUT];
var haxe_ui_styles_Parser = function() {
};
$hxClasses["haxe.ui.styles.Parser"] = haxe_ui_styles_Parser;
haxe_ui_styles_Parser.__name__ = "haxe.ui.styles.Parser";
haxe_ui_styles_Parser.prototype = {
	parse: function(source) {
		var _gthis = this;
		source = source.replace(haxe_ui_styles_Parser.cssCommentsRegex.r,"");
		if(source.indexOf("$") != -1) {
			var n1 = source.indexOf("$");
			while(n1 != -1) {
				var n2 = n1;
				while(n2 <= source.length - 1) {
					var c = source.charAt(n2);
					if(c == " " || c == ";" || c == "\n" || c == ",") {
						break;
					}
					++n2;
				}
				if(n2 != source.length - 1) {
					var key = source.substring(n1 + 1,n2);
					var value = haxe_ui_themes_ThemeManager.get_instance().currentThemeVars.h[key];
					if(value != null) {
						var before = source.substring(0,n1);
						var after = source.substring(n2);
						source = before + value + after;
						n2 = n1 + value.length;
					} else {
						haxe_Log.trace("WARNING: css variable '" + key + "' not defined",{ fileName : "haxe/ui/styles/Parser.hx", lineNumber : 50, className : "haxe.ui.styles.Parser", methodName : "parse"});
					}
				}
				n1 = source.indexOf("$",n2);
			}
		}
		var styleSheet = new haxe_ui_styles_StyleSheet();
		source = haxe_ui_styles_Parser.cssImportStatementRegex.map(source,function(e) {
			var i = e.matched(0);
			i = HxOverrides.substr(i,7,null);
			var _this_r = new RegExp("\"|'|;","g".split("u").join(""));
			i = i.replace(_this_r,"");
			i = StringTools.trim(i);
			styleSheet.addImport(new haxe_ui_styles_elements_ImportElement(i));
			return "";
		});
		source = haxe_ui_styles_Parser.cssKeyframesRegex.map(source,function(e) {
			var id = e.matched(1);
			var data = e.matched(2);
			var keyframes = [];
			haxe_ui_styles_Parser.cssKeyframeSelectorRegex.map(data,function(e) {
				var selector = e.matched(1);
				var directives = e.matched(2);
				if(selector == "from") {
					selector = "0%";
				} else if(selector == "to") {
					selector = "100%";
				}
				var keyframe = new haxe_ui_styles_elements_AnimationKeyFrame();
				keyframe.time = haxe_ui_styles_ValueTools.parse(selector);
				keyframe.directives = _gthis.parseDirectives(directives);
				keyframes.push(keyframe);
				return null;
			});
			var animation = new haxe_ui_styles_elements_AnimationKeyFrames(id,keyframes);
			styleSheet.addAnimation(animation);
			return "";
		});
		haxe_ui_styles_Parser.combinedCSSMediaRegex.map(source,function(e) {
			var selector = "";
			if(e.matched(2) == null) {
				selector = StringTools.trim(e.matched(5).split("\r\n").join("\n"));
			} else {
				selector = StringTools.trim(e.matched(2).split("\r\n").join("\n"));
			}
			selector = selector.replace(haxe_ui_styles_Parser.newlineRegex.r,"\n");
			if(selector.indexOf("@media") != -1) {
				var n1 = selector.indexOf("(");
				var n2 = selector.lastIndexOf(")");
				var mediaQuery = selector.substring(n1 + 1,n2);
				var mediaStyleSheet = new haxe_ui_styles_Parser().parse(e.matched(3) + "\n}");
				var mq = new haxe_ui_styles_elements_MediaQuery(_gthis.parseDirectives(mediaQuery),mediaStyleSheet);
				styleSheet.addMediaQuery(mq);
			} else {
				var directives = _gthis.parseDirectives(e.matched(6));
				var selectors = selector.split(",");
				var _g = 0;
				while(_g < selectors.length) {
					var s = selectors[_g];
					++_g;
					s = StringTools.trim(s);
					if(s.length > 0) {
						styleSheet.addRule(new haxe_ui_styles_elements_RuleElement(s,directives));
					}
				}
			}
			return null;
		});
		return styleSheet;
	}
	,parseDirectives: function(rulesString) {
		rulesString = rulesString.split("\r\n").join("\n");
		var ret = [];
		var rules = rulesString.split(";");
		var _g = 0;
		while(_g < rules.length) {
			var line = rules[_g];
			++_g;
			var d = this.parseDirective(line);
			if(d != null) {
				ret.push(d);
			}
		}
		return ret;
	}
	,parseDirective: function(line) {
		var d = null;
		line = StringTools.trim(line);
		if(line.length == 0) {
			return null;
		}
		if(line.indexOf(":") != -1) {
			var parts = line.split(":");
			var cssDirective = StringTools.trim(parts[0]);
			var cssValue = StringTools.trim(parts.slice(1).join(":"));
			if(cssDirective.length < 1 || cssValue.length < 1) {
				return null;
			}
			d = new haxe_ui_styles_elements_Directive(cssDirective,haxe_ui_styles_ValueTools.parse(cssValue));
		} else {
			d = new haxe_ui_styles_elements_Directive("",haxe_ui_styles_ValueTools.parse(line),true);
		}
		return d;
	}
	,__class__: haxe_ui_styles_Parser
};
var haxe_ui_styles_StyleBorderType = $hxEnums["haxe.ui.styles.StyleBorderType"] = { __ename__:"haxe.ui.styles.StyleBorderType",__constructs__:null
	,None: {_hx_name:"None",_hx_index:0,__enum__:"haxe.ui.styles.StyleBorderType",toString:$estr}
	,Full: {_hx_name:"Full",_hx_index:1,__enum__:"haxe.ui.styles.StyleBorderType",toString:$estr}
	,Compound: {_hx_name:"Compound",_hx_index:2,__enum__:"haxe.ui.styles.StyleBorderType",toString:$estr}
};
haxe_ui_styles_StyleBorderType.__constructs__ = [haxe_ui_styles_StyleBorderType.None,haxe_ui_styles_StyleBorderType.Full,haxe_ui_styles_StyleBorderType.Compound];
haxe_ui_styles_StyleBorderType.__empty_constructs__ = [haxe_ui_styles_StyleBorderType.None,haxe_ui_styles_StyleBorderType.Full,haxe_ui_styles_StyleBorderType.Compound];
var haxe_ui_styles_StyleLookupMap = function() {
	this._valueMap = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.styles.StyleLookupMap"] = haxe_ui_styles_StyleLookupMap;
haxe_ui_styles_StyleLookupMap.__name__ = "haxe.ui.styles.StyleLookupMap";
haxe_ui_styles_StyleLookupMap.__properties__ = {get_instance:"get_instance"};
haxe_ui_styles_StyleLookupMap.get_instance = function() {
	if(haxe_ui_styles_StyleLookupMap._instance == null) {
		haxe_ui_styles_StyleLookupMap._instance = new haxe_ui_styles_StyleLookupMap();
	}
	return haxe_ui_styles_StyleLookupMap._instance;
};
haxe_ui_styles_StyleLookupMap.prototype = {
	_valueMap: null
	,set: function(name,value) {
		this._valueMap.h[name] = value;
	}
	,get: function(name) {
		return this._valueMap.h[name];
	}
	,remove: function(name) {
		var _this = this._valueMap;
		if(Object.prototype.hasOwnProperty.call(_this.h,name)) {
			delete(_this.h[name]);
		}
	}
	,__class__: haxe_ui_styles_StyleLookupMap
};
var haxe_ui_styles_StyleSheet = function() {
	this._animations = new haxe_ds_StringMap();
	this._mediaQueries = [];
	this._rules = [];
	this._imports = [];
};
$hxClasses["haxe.ui.styles.StyleSheet"] = haxe_ui_styles_StyleSheet;
haxe_ui_styles_StyleSheet.__name__ = "haxe.ui.styles.StyleSheet";
haxe_ui_styles_StyleSheet.prototype = {
	name: null
	,_imports: null
	,_rules: null
	,_mediaQueries: null
	,_animations: null
	,get_animations: function() {
		return this._animations;
	}
	,addImport: function(el) {
		this._imports.push(el);
	}
	,imports: null
	,get_imports: function() {
		return this._imports;
	}
	,rules: null
	,get_rules: function() {
		var r = this._rules.slice();
		var _g = 0;
		var _g1 = this._mediaQueries;
		while(_g < _g1.length) {
			var mq = _g1[_g];
			++_g;
			if(mq.get_relevant()) {
				r = r.concat(mq.get_styleSheet().get_rules());
			}
		}
		return r;
	}
	,hasMediaQueries: null
	,get_hasMediaQueries: function() {
		return this._mediaQueries.length > 0;
	}
	,findRule: function(selector) {
		var _g = 0;
		var _g1 = this.get_rules();
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(r.selector.toString() == selector) {
				return r;
			}
		}
		return null;
	}
	,findMatchingRules: function(selector) {
		var m = [];
		var _g = 0;
		var _g1 = this.get_rules();
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(r.selector.toString() == selector) {
				m.push(r);
			}
		}
		return m;
	}
	,removeRule: function(selector) {
		var r = this.findRule(selector);
		if(r != null) {
			HxOverrides.remove(this._rules,r);
		}
	}
	,removeAllRules: function() {
		this._rules = [];
	}
	,clear: function() {
		this.removeAllRules();
		this._imports = [];
		this._mediaQueries = [];
		this._animations = new haxe_ds_StringMap();
	}
	,addRule: function(el) {
		if(el.directiveCount == 0) {
			return;
		}
		this._rules.push(el);
	}
	,addMediaQuery: function(el) {
		this._mediaQueries.push(el);
	}
	,addAnimation: function(el) {
		this._animations.h[el.id] = el;
	}
	,parse: function(css) {
		var parser = new haxe_ui_styles_Parser();
		var ss = parser.parse(css);
		var f = new haxe_ui_styles_StyleSheet();
		var _g = 0;
		var _g1 = ss.get_imports();
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			var importCss = haxe_ui_ToolkitAssets.get_instance().getText(i.url);
			var importStyleSheet = new haxe_ui_styles_Parser().parse(importCss);
			f.merge(importStyleSheet);
		}
		f.merge(ss);
		this.merge(f);
	}
	,merge: function(styleSheet) {
		this._imports = this._imports.concat(styleSheet._imports);
		this._rules = this._rules.concat(styleSheet._rules);
		this._mediaQueries = this._mediaQueries.concat(styleSheet._mediaQueries);
		var h = styleSheet._animations.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			this._animations.h[k] = styleSheet._animations.h[k];
		}
	}
	,buildStyleFor: function(c,style) {
		if(style == null) {
			style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		var _g = 0;
		var _g1 = this.get_rules();
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(!r.match(c)) {
				continue;
			}
			style.mergeDirectives(r.directives);
		}
		return style;
	}
	,__class__: haxe_ui_styles_StyleSheet
	,__properties__: {get_hasMediaQueries:"get_hasMediaQueries",get_rules:"get_rules",get_imports:"get_imports",get_animations:"get_animations"}
};
var haxe_ui_styles_Value = $hxEnums["haxe.ui.styles.Value"] = { __ename__:"haxe.ui.styles.Value",__constructs__:null
	,VString: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VString",$_.__params__ = ["v"],$_)
	,VNumber: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VNumber",$_.__params__ = ["v"],$_)
	,VBool: ($_=function(v) { return {_hx_index:2,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VBool",$_.__params__ = ["v"],$_)
	,VDimension: ($_=function(v) { return {_hx_index:3,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VDimension",$_.__params__ = ["v"],$_)
	,VColor: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VColor",$_.__params__ = ["v"],$_)
	,VCall: ($_=function(f,vl) { return {_hx_index:5,f:f,vl:vl,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VCall",$_.__params__ = ["f","vl"],$_)
	,VConstant: ($_=function(v) { return {_hx_index:6,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VConstant",$_.__params__ = ["v"],$_)
	,VComposite: ($_=function(vl) { return {_hx_index:7,vl:vl,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VComposite",$_.__params__ = ["vl"],$_)
	,VTime: ($_=function(v,unit) { return {_hx_index:8,v:v,unit:unit,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VTime",$_.__params__ = ["v","unit"],$_)
	,VNone: {_hx_name:"VNone",_hx_index:9,__enum__:"haxe.ui.styles.Value",toString:$estr}
};
haxe_ui_styles_Value.__constructs__ = [haxe_ui_styles_Value.VString,haxe_ui_styles_Value.VNumber,haxe_ui_styles_Value.VBool,haxe_ui_styles_Value.VDimension,haxe_ui_styles_Value.VColor,haxe_ui_styles_Value.VCall,haxe_ui_styles_Value.VConstant,haxe_ui_styles_Value.VComposite,haxe_ui_styles_Value.VTime,haxe_ui_styles_Value.VNone];
haxe_ui_styles_Value.__empty_constructs__ = [haxe_ui_styles_Value.VNone];
var haxe_ui_styles_ValueTools = function() { };
$hxClasses["haxe.ui.styles.ValueTools"] = haxe_ui_styles_ValueTools;
haxe_ui_styles_ValueTools.__name__ = "haxe.ui.styles.ValueTools";
haxe_ui_styles_ValueTools.parse = function(s) {
	var v = null;
	var hasSpace = s.indexOf(" ") != -1;
	if(StringTools.endsWith(s,"%") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PERCENT(parseFloat(s)));
	} else if(StringTools.endsWith(s,"px") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(parseFloat(s)));
	} else if(StringTools.endsWith(s,"vw") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.VW(parseFloat(s)));
	} else if(StringTools.endsWith(s,"vh") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.VH(parseFloat(s)));
	} else if(StringTools.endsWith(s,"rem") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.REM(parseFloat(s)));
	} else if(haxe_ui_styles_ValueTools.validColor(s)) {
		v = haxe_ui_styles_ValueTools.parseColor(s);
	} else if(s == "none") {
		v = haxe_ui_styles_Value.VNone;
	} else if(s.indexOf("(") != -1 && StringTools.endsWith(s,")")) {
		var n = s.indexOf("(");
		var f = HxOverrides.substr(s,0,n);
		var params = HxOverrides.substr(s,n + 1,s.length - n - 2);
		if(f == "calc") {
			params = "'" + params + "'";
		}
		var vl = [];
		var _g = 0;
		var _g1 = params.split(",");
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			p = StringTools.trim(p);
			vl.push(haxe_ui_styles_ValueTools.parse(p));
		}
		v = haxe_ui_styles_Value.VCall(f,vl);
	} else if(StringTools.startsWith(s,"\"") && StringTools.endsWith(s,"\"")) {
		v = haxe_ui_styles_Value.VString(HxOverrides.substr(s,1,s.length - 2));
	} else if(StringTools.startsWith(s,"'") && StringTools.endsWith(s,"'")) {
		v = haxe_ui_styles_Value.VString(HxOverrides.substr(s,1,s.length - 2));
	} else if(haxe_ui_styles_ValueTools.isNum(s) == true) {
		v = haxe_ui_styles_Value.VNumber(parseFloat(s));
	} else if(s == "true" || s == "false") {
		v = haxe_ui_styles_Value.VBool(s == "true");
	} else if(haxe_ui_styles_ValueTools.timeEReg.match(s)) {
		v = haxe_ui_styles_Value.VTime(parseFloat(haxe_ui_styles_ValueTools.timeEReg.matched(1)),haxe_ui_styles_ValueTools.timeEReg.matched(2));
	} else {
		var arr = s.split(" ");
		if(arr.length == 1) {
			v = haxe_ui_styles_Value.VConstant(s);
		} else {
			var vl = [];
			var _g = 0;
			while(_g < arr.length) {
				var a = arr[_g];
				++_g;
				a = StringTools.trim(a);
				vl.push(haxe_ui_styles_ValueTools.parse(a));
			}
			v = haxe_ui_styles_Value.VComposite(vl);
		}
	}
	return v;
};
haxe_ui_styles_ValueTools.compositeParts = function(value) {
	if(value == null) {
		return 0;
	}
	if(value._hx_index == 7) {
		var vl = value.vl;
		return vl.length;
	} else {
		return 0;
	}
};
haxe_ui_styles_ValueTools.composite = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var _g = value.v;
		return [value];
	case 3:
		var _g = value.v;
		return [value];
	case 7:
		var vl = value.vl;
		return vl;
	case 9:
		return [];
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.isNum = function(s) {
	var b = true;
	var _g = 0;
	var _g1 = s.length;
	while(_g < _g1) {
		var i = _g++;
		var c = HxOverrides.cca(s,i);
		if(!(c >= 48 && c <= 57 || c == 46 || c == 45)) {
			b = false;
			break;
		}
	}
	return b;
};
haxe_ui_styles_ValueTools.parseColor = function(s) {
	if(StringTools.startsWith(s,"#")) {
		s = s.substring(1);
		if(s.length == 6) {
			return haxe_ui_styles_Value.VColor(Std.parseInt("0x" + s));
		} else if(s.length == 3) {
			return haxe_ui_styles_Value.VColor(Std.parseInt("0x" + s.charAt(0) + s.charAt(0) + s.charAt(1) + s.charAt(1) + s.charAt(2) + s.charAt(2)));
		}
	} else if(Object.prototype.hasOwnProperty.call(haxe_ui_styles_ValueTools.colors.h,s)) {
		return haxe_ui_styles_Value.VColor(haxe_ui_styles_ValueTools.colors.h[s]);
	}
	return null;
};
haxe_ui_styles_ValueTools.validColor = function(s) {
	if(StringTools.startsWith(s,"#") && (s.length == 7 || s.length == 4)) {
		return true;
	} else if(Object.prototype.hasOwnProperty.call(haxe_ui_styles_ValueTools.colors.h,s)) {
		return true;
	}
	return false;
};
haxe_ui_styles_ValueTools.time = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 8) {
		var v = value.v;
		var unit = value.unit;
		switch(unit) {
		case "ms":
			return v / 1000;
		case "s":
			return v;
		default:
			return null;
		}
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.variant = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 0:
		var v = value.v;
		return haxe_ui_util_Variant.fromDynamic(v);
	case 1:
		var v = value.v;
		return haxe_ui_util_Variant.fromDynamic(v);
	case 2:
		var v = value.v;
		return haxe_ui_util_Variant.fromDynamic(v);
	case 5:
		var f = value.f;
		var vl = value.vl;
		return haxe_ui_util_Variant.fromDynamic(haxe_ui_styles_ValueTools.call(f,vl));
	case 6:
		var v = value.v;
		return haxe_ui_util_Variant.fromDynamic(v);
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.string = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 0:
		var v = value.v;
		return v;
	case 2:
		var v = value.v;
		if(v == null) {
			return "null";
		} else {
			return "" + v;
		}
		break;
	case 5:
		var f = value.f;
		var vl = value.vl;
		return haxe_ui_styles_ValueTools.call(f,vl);
	case 6:
		var v = value.v;
		return v;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.bool = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 2) {
		var v = value.v;
		return v;
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.none = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 9) {
		return true;
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.int = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var v = value.v;
		return v | 0;
	case 4:
		var v = value.v;
		return v;
	case 5:
		var f = value.f;
		var vl = value.vl;
		return haxe_ui_styles_ValueTools.call(f,vl);
	case 9:
		return null;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.float = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var v = value.v;
		return v;
	case 4:
		var v = value.v;
		return v;
	case 9:
		return null;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.any = function(v) {
	if(v == null) {
		return null;
	}
	switch(v._hx_index) {
	case 1:
		var v1 = v.v;
		return v1;
	case 2:
		var v1 = v.v;
		return v1;
	case 3:
		var _g = v.v;
		if(_g._hx_index == 1) {
			var v1 = _g.value;
			return v1;
		} else {
			return null;
		}
		break;
	case 4:
		var v1 = v.v;
		return v1;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.array = function(vl) {
	var arr = [];
	var _g = 0;
	while(_g < vl.length) {
		var v = vl[_g];
		++_g;
		var a = haxe_ui_styles_ValueTools.any(v);
		if(a != null) {
			arr.push(a);
		}
	}
	return arr;
};
haxe_ui_styles_ValueTools.percent = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 3) {
		var v = value.v;
		if(v._hx_index == 0) {
			var d = v.value;
			return d;
		} else {
			return null;
		}
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.constant = function(value,required) {
	if(value == null) {
		return false;
	}
	if(value._hx_index == 6) {
		var v = value.v;
		return v == required;
	} else {
		return false;
	}
};
haxe_ui_styles_ValueTools.calcDimension = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var v = value.v;
		return v;
	case 3:
		var v = value.v;
		switch(v._hx_index) {
		case 1:
			var d = v.value;
			return d;
		case 2:
			var d = v.value;
			return d / 100 * haxe_ui_core_Screen.get_instance().get_width();
		case 3:
			var d = v.value;
			return d / 100 * haxe_ui_core_Screen.get_instance().get_height();
		case 4:
			var d = v.value;
			return d * haxe_ui_Toolkit.pixelsPerRem;
		default:
			return null;
		}
		break;
	case 5:
		var f = value.f;
		var vl = value.vl;
		return haxe_ui_styles_ValueTools.call(f,vl);
	case 9:
		return null;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.calcEasing = function(value) {
	switch(value._hx_index) {
	case 0:
		var v = value.v;
		switch(v) {
		case "ease":
			return haxe_ui_styles_EasingFunction.EASE;
		case "ease-in":
			return haxe_ui_styles_EasingFunction.EASE_IN;
		case "ease-in-out":
			return haxe_ui_styles_EasingFunction.EASE_IN_OUT;
		case "ease-out":
			return haxe_ui_styles_EasingFunction.EASE_OUT;
		case "linear":
			return haxe_ui_styles_EasingFunction.LINEAR;
		default:
			return null;
		}
		break;
	case 6:
		var v = value.v;
		switch(v) {
		case "ease":
			return haxe_ui_styles_EasingFunction.EASE;
		case "ease-in":
			return haxe_ui_styles_EasingFunction.EASE_IN;
		case "ease-in-out":
			return haxe_ui_styles_EasingFunction.EASE_IN_OUT;
		case "ease-out":
			return haxe_ui_styles_EasingFunction.EASE_OUT;
		case "linear":
			return haxe_ui_styles_EasingFunction.LINEAR;
		default:
			return null;
		}
		break;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.call = function(f,vl) {
	switch(f) {
	case "calc":
		return null;
	case "clamp":
		var valNum = haxe_ui_styles_ValueTools.calcDimension(vl[0]);
		var minNum = haxe_ui_styles_ValueTools.calcDimension(vl[1]);
		var maxNum = haxe_ui_styles_ValueTools.calcDimension(vl[2]);
		if(valNum == null || minNum == null || maxNum == null) {
			return null;
		} else if(valNum < minNum) {
			return minNum;
		} else if(valNum > maxNum) {
			return maxNum;
		} else {
			return valNum;
		}
		break;
	case "lookup":
		return haxe_ui_util_Variant.toDynamic(haxe_ui_styles_StyleLookupMap.get_instance().get(haxe_ui_styles_ValueTools.string(vl[0])));
	case "max":
		var maxv = -Infinity;
		var _g = 0;
		while(_g < vl.length) {
			var val = vl[_g];
			++_g;
			var num = haxe_ui_styles_ValueTools.calcDimension(val);
			if(num == null) {
				return null;
			} else if(num > maxv) {
				maxv = num;
			}
		}
		return maxv;
	case "min":
		var minv = Infinity;
		var _g = 0;
		while(_g < vl.length) {
			var val = vl[_g];
			++_g;
			var num = haxe_ui_styles_ValueTools.calcDimension(val);
			if(num == null) {
				return null;
			} else if(num < minv) {
				minv = num;
			}
		}
		return minv;
	case "platform-color":
		return haxe_ui_core_Platform.get_instance().getColor(haxe_ui_styles_ValueTools.string(vl[0]));
	case "rgb":
		return haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromComponents(haxe_ui_styles_ValueTools.int(vl[0]),haxe_ui_styles_ValueTools.int(vl[1]),haxe_ui_styles_ValueTools.int(vl[2]),0));
	case "theme-icon":case "theme-image":
		return haxe_ui_themes_ThemeManager.get_instance().image(haxe_ui_styles_ValueTools.string(vl[0]));
	default:
		return null;
	}
};
var haxe_ui_styles_animation_AnimationOptions = function(duration,delay,iterationCount,easingFunction,direction,fillMode) {
	this.duration = duration;
	this.delay = delay;
	this.iterationCount = iterationCount;
	this.easingFunction = easingFunction;
	this.direction = direction;
	this.fillMode = fillMode;
};
$hxClasses["haxe.ui.styles.animation.AnimationOptions"] = haxe_ui_styles_animation_AnimationOptions;
haxe_ui_styles_animation_AnimationOptions.__name__ = "haxe.ui.styles.animation.AnimationOptions";
haxe_ui_styles_animation_AnimationOptions.prototype = {
	duration: null
	,delay: null
	,iterationCount: null
	,easingFunction: null
	,direction: null
	,fillMode: null
	,compareTo: function(op) {
		if(op != null && op.duration == this.duration && op.delay == this.delay && op.iterationCount == this.iterationCount && op.easingFunction == this.easingFunction && op.direction == this.direction) {
			return op.fillMode == this.fillMode;
		} else {
			return false;
		}
	}
	,compareToAnimation: function(anim) {
		if((this.duration == null && anim.duration == 0 || this.duration != null && anim.duration == this.duration) && (this.delay == null && anim.delay == 0 || this.delay != null && anim.delay == this.delay) && (this.iterationCount == null && anim.iterationCount == 1 || this.iterationCount != null && anim.iterationCount == this.iterationCount) && (this.easingFunction == null && anim.easingFunction == haxe_ui_styles_animation_AnimationOptions.DEFAULT_EASING_FUNCTION || this.easingFunction != null && anim.easingFunction == this.easingFunction) && (this.direction == null && anim.direction == "normal" || this.direction != null && anim.direction == this.direction)) {
			if(!(this.fillMode == null && anim.fillMode == "forwards")) {
				if(this.fillMode != null) {
					return anim.fillMode == this.fillMode;
				} else {
					return false;
				}
			} else {
				return true;
			}
		} else {
			return false;
		}
	}
	,__class__: haxe_ui_styles_animation_AnimationOptions
};
var haxe_ui_styles_animation_Animation = function(target,options) {
	this._initialized = false;
	this._currentIterationCount = -1;
	this._currentKeyFrameIndex = -1;
	this.iterationCount = 1;
	this.fillMode = "forwards";
	this.easingFunction = haxe_ui_styles_animation_AnimationOptions.DEFAULT_EASING_FUNCTION;
	this.duration = 0;
	this.direction = "normal";
	this.delay = 0;
	this.target = target;
	if(options != null) {
		if(options.duration != null) {
			this.duration = options.duration;
		}
		if(options.easingFunction != null) {
			this.easingFunction = options.easingFunction;
		}
		if(options.delay != null) {
			this.delay = options.delay;
		}
		if(options.iterationCount != null) {
			this.iterationCount = options.iterationCount;
		}
		if(options.direction != null) {
			this.direction = options.direction;
		}
		if(options.fillMode != null) {
			this.fillMode = options.fillMode;
		}
	}
};
$hxClasses["haxe.ui.styles.animation.Animation"] = haxe_ui_styles_animation_Animation;
haxe_ui_styles_animation_Animation.__name__ = "haxe.ui.styles.animation.Animation";
haxe_ui_styles_animation_Animation.createWithKeyFrames = function(animationKeyFrames,target,options) {
	var animation = new haxe_ui_styles_animation_Animation(target,options);
	animation.name = animationKeyFrames.id;
	if(animation._keyframes == null) {
		animation._keyframes = [];
	}
	var _g = 0;
	var _g1 = animationKeyFrames.get_keyFrames();
	while(_g < _g1.length) {
		var keyFrame = _g1[_g];
		++_g;
		var kf = new haxe_ui_styles_animation_KeyFrame();
		var _g2 = keyFrame.time;
		if(_g2._hx_index == 3) {
			var v = _g2.v;
			if(v._hx_index == 0) {
				var p = v.value;
				kf.time = p / 100;
				kf.easingFunction = animation.easingFunction;
				kf.directives = keyFrame.directives;
				animation._keyframes.push(kf);
			}
		}
	}
	return animation;
};
haxe_ui_styles_animation_Animation.prototype = {
	delay: null
	,direction: null
	,duration: null
	,easingFunction: null
	,fillMode: null
	,iterationCount: null
	,name: null
	,running: null
	,target: null
	,run: function(onFinish) {
		if(this.get_keyframeCount() == 0 || this.running) {
			return;
		}
		if(!this._initialized) {
			this._initialize();
		}
		this._currentKeyFrameIndex = -1;
		this._currentIterationCount = 0;
		this.running = true;
		this._saveState();
		this._runNextKeyframe(onFinish);
	}
	,stop: function() {
		if(this.running == false) {
			return;
		}
		this.running = false;
		var currentKF = this.get_currentKeyFrame();
		if(currentKF != null) {
			currentKF.stop();
			this._currentKeyFrameIndex = -1;
		}
		this._keyframes = null;
		this._restoreState();
	}
	,_currentKeyFrameIndex: null
	,_currentIterationCount: null
	,_initialState: null
	,_initialized: null
	,_keyframes: null
	,get_keyframeCount: function() {
		if(this._keyframes == null) {
			return 0;
		} else {
			return this._keyframes.length;
		}
	}
	,get_currentKeyFrame: function() {
		if(this._currentKeyFrameIndex >= 0) {
			return this._keyframes[this._currentKeyFrameIndex];
		} else {
			return null;
		}
	}
	,_initialize: function() {
		switch(this.direction) {
		case "alternate":
			this._addAlternateKeyframes();
			break;
		case "alternate-reverse":
			this._reverseCurrentKeyframes();
			this._addAlternateKeyframes();
			break;
		case "normal":
			break;
		case "reverse":
			this._reverseCurrentKeyframes();
			break;
		}
		var currentTime = 0;
		var _g = 0;
		var _g1 = this._keyframes;
		while(_g < _g1.length) {
			var keyframe = _g1[_g];
			++_g;
			switch(this.direction) {
			case "alternate-reverse":case "reverse":
				keyframe.time = 1 - keyframe.time;
				break;
			case "alternate":case "normal":
				break;
			}
			keyframe.time = this.duration * keyframe.time - currentTime;
			currentTime += keyframe.time;
		}
		if(this.delay > 0) {
			var keyframe = new haxe_ui_styles_animation_KeyFrame();
			keyframe.time = this.delay;
			keyframe.easingFunction = this.easingFunction;
			this._keyframes.unshift(keyframe);
		} else if(this.delay < 0) {
			currentTime = 0;
			var lastKeyframe = null;
			while(this._keyframes.length > 0) {
				var keyframe = this._keyframes[0];
				currentTime -= keyframe.time;
				if(currentTime >= this.delay) {
					lastKeyframe = keyframe;
					this._keyframes.splice(0,1);
				} else {
					keyframe.delay = -(currentTime - this.delay + keyframe.time);
					if(lastKeyframe != null) {
						lastKeyframe.time = 0;
						this._keyframes.unshift(lastKeyframe);
					}
					break;
				}
			}
		}
		this._initialized = true;
	}
	,_runNextKeyframe: function(onFinish) {
		if(this.running == false) {
			return;
		}
		if(++this._currentKeyFrameIndex >= this._keyframes.length) {
			this._currentKeyFrameIndex = -1;
			this._restoreState();
			if(this.iterationCount == -1 || ++this._currentIterationCount < this.iterationCount) {
				this._saveState();
				this._runNextKeyframe(onFinish);
			} else {
				this.running = false;
				if(onFinish != null) {
					onFinish();
				}
			}
			return;
		} else {
			var _g = $bind(this,this._runNextKeyframe);
			var onFinish1 = onFinish;
			var tmp = function() {
				_g(onFinish1);
			};
			this.get_currentKeyFrame().run(this.target,tmp);
		}
	}
	,_addAlternateKeyframes: function() {
		var i = this._keyframes.length;
		while(--i >= 0) {
			var keyframe = this._keyframes[i];
			var newKeyframe = new haxe_ui_styles_animation_KeyFrame();
			newKeyframe.time = 1 - keyframe.time;
			newKeyframe.easingFunction = this._getReverseEasingFunction(keyframe.easingFunction);
			newKeyframe.directives = keyframe.directives;
			this._keyframes.push(newKeyframe);
		}
	}
	,_reverseCurrentKeyframes: function() {
		this._keyframes.reverse();
		var func = this._getReverseEasingFunction(this.easingFunction);
		var _g = 0;
		var _g1 = this._keyframes;
		while(_g < _g1.length) {
			var keyframe = _g1[_g];
			++_g;
			keyframe.easingFunction = func;
		}
	}
	,_getReverseEasingFunction: function(easingFunction) {
		switch(easingFunction._hx_index) {
		case 2:
			return haxe_ui_styles_EasingFunction.EASE_OUT;
		case 3:
			return haxe_ui_styles_EasingFunction.EASE_IN;
		default:
			return easingFunction;
		}
	}
	,_saveState: function() {
		if(!this._shouldRestoreState()) {
			return;
		}
		if(this._initialState == null) {
			this._initialState = new haxe_ds_StringMap();
		}
		var _g = 0;
		var _g1 = this._keyframes;
		while(_g < _g1.length) {
			var keyframe = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = keyframe.directives;
			while(_g2 < _g3.length) {
				var directive = _g3[_g2];
				++_g2;
				var property = haxe_ui_util_StyleUtil.styleProperty2ComponentProperty(directive.directive);
				if(!Object.prototype.hasOwnProperty.call(this._initialState.h,property)) {
					var this1 = this._initialState;
					var value = Reflect.getProperty(this.target,property);
					this1.h[property] = value;
				}
			}
		}
	}
	,_restoreState: function() {
		if(!this._shouldRestoreState()) {
			return;
		}
		if(this._initialState != null) {
			var h = this._initialState.h;
			var property_h = h;
			var property_keys = Object.keys(h);
			var property_length = property_keys.length;
			var property_current = 0;
			while(property_current < property_length) {
				var property = property_keys[property_current++];
				Reflect.setProperty(this.target,property,this._initialState.h[property]);
			}
			this._initialState = null;
		}
	}
	,_shouldRestoreState: function() {
		if(!(this.fillMode == "none" || this.fillMode == "forwards" && this.direction != "normal" && this.direction != "alternate")) {
			if(this.fillMode == "backwards" && this.direction != "reverse") {
				return this.direction != "alternate-reverse";
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,__class__: haxe_ui_styles_animation_Animation
	,__properties__: {get_keyframeCount:"get_keyframeCount",get_currentKeyFrame:"get_currentKeyFrame"}
};
var haxe_ui_styles_animation_KeyFrame = function() {
	this.delay = 0;
	this.time = 0;
	this.directives = [];
};
$hxClasses["haxe.ui.styles.animation.KeyFrame"] = haxe_ui_styles_animation_KeyFrame;
haxe_ui_styles_animation_KeyFrame.__name__ = "haxe.ui.styles.animation.KeyFrame";
haxe_ui_styles_animation_KeyFrame.prototype = {
	directives: null
	,time: null
	,delay: null
	,easingFunction: null
	,_actuator: null
	,stop: function() {
		if(this._actuator != null) {
			this._actuator.stop();
			this._actuator = null;
		}
	}
	,run: function(target,cb) {
		var _gthis = this;
		if(this._actuator != null) {
			return;
		}
		var properties = { };
		var _g = 0;
		var _g1 = this.directives;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			properties[d.directive] = d.value;
		}
		var hasFrameEvent = target.hasEvent("animationframe");
		this._actuator = new haxe_ui_styles_animation_util_Actuator(target,properties,this.time,new haxe_ui_styles_animation_util_ActuatorOptions(this.delay,this.easingFunction,function() {
			_gthis._actuator = null;
			cb();
		},function(time,delta,position) {
			if(hasFrameEvent) {
				var event = new haxe_ui_events_AnimationEvent("animationframe");
				event.currentTime = time;
				event.delta = delta;
				event.position = position;
				target.dispatch(event);
			}
		}));
		this._actuator.run();
	}
	,__class__: haxe_ui_styles_animation_KeyFrame
};
var haxe_ui_styles_animation_util_ActuatorOptions = function(delay,easingFunction,onComplete,onUpdate) {
	this.delay = delay;
	this.easingFunction = easingFunction;
	this.onComplete = onComplete;
	this.onUpdate = onUpdate;
};
$hxClasses["haxe.ui.styles.animation.util.ActuatorOptions"] = haxe_ui_styles_animation_util_ActuatorOptions;
haxe_ui_styles_animation_util_ActuatorOptions.__name__ = "haxe.ui.styles.animation.util.ActuatorOptions";
haxe_ui_styles_animation_util_ActuatorOptions.prototype = {
	delay: null
	,easingFunction: null
	,onComplete: null
	,onUpdate: null
	,__class__: haxe_ui_styles_animation_util_ActuatorOptions
};
var haxe_ui_styles_animation_util_Actuator = function(target,properties,duration,options) {
	this.delay = 0;
	this.duration = 0;
	this.target = target;
	this.properties = properties;
	this.duration = duration;
	if(options != null) {
		this._easeFunc = haxe_ui_styles_animation_util__$Actuator_Ease.get(options.easingFunction != null ? options.easingFunction : haxe_ui_styles_EasingFunction.EASE);
		if(options.delay != null) {
			this.delay = options.delay;
		}
		if(options.onComplete != null) {
			this._onComplete = options.onComplete;
		}
		if(options.onUpdate != null) {
			this._onUpdate = options.onUpdate;
		}
	}
};
$hxClasses["haxe.ui.styles.animation.util.Actuator"] = haxe_ui_styles_animation_util_Actuator;
haxe_ui_styles_animation_util_Actuator.__name__ = "haxe.ui.styles.animation.util.Actuator";
haxe_ui_styles_animation_util_Actuator.tween = function(target,properties,duration,options) {
	var actuator = new haxe_ui_styles_animation_util_Actuator(target,properties,duration,options);
	actuator.run();
	return actuator;
};
haxe_ui_styles_animation_util_Actuator.prototype = {
	target: null
	,properties: null
	,duration: null
	,delay: null
	,stop: function() {
		this._stopped = true;
		this.target = null;
	}
	,run: function() {
		this._initialize();
		this._stopped = false;
		if(this.duration == 0) {
			this._apply(1);
			this._finish();
		} else {
			this._currentTime = HxOverrides.now() / 1000;
			if(this.delay > 0) {
				haxe_ui_util_Timer.delay($bind(this,this._nextFrame),this.delay * 1000 | 0);
			} else {
				new haxe_ui_CallLater($bind(this,this._nextFrame));
			}
		}
	}
	,_currentTime: null
	,_easeFunc: null
	,_onComplete: null
	,_onUpdate: null
	,_stopped: null
	,_propertyDetails: null
	,_colorPropertyDetails: null
	,_stringPropertyDetails: null
	,_initialize: function() {
		if(this._isValid() == false) {
			this.stop();
			return;
		}
		this._propertyDetails = [];
		this._colorPropertyDetails = [];
		this._stringPropertyDetails = [];
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			var componentProperty = haxe_ui_util_StyleUtil.styleProperty2ComponentProperty(p);
			var end = Reflect.getProperty(this.properties,p);
			if(end._hx_index == 3) {
				var _g2 = end.v;
				if(_g2._hx_index == 0) {
					var v = _g2.value;
					componentProperty = "percent" + haxe_ui_util_StringUtil.capitalizeFirstLetter(componentProperty);
				}
			}
			var start = Reflect.getProperty(this.target,componentProperty);
			if(start == null) {
				switch(end._hx_index) {
				case 0:
					var v1 = end.v;
					start = v1;
					break;
				case 1:
					var v2 = end.v;
					start = 0;
					break;
				case 3:
					var _g3 = end.v;
					if(_g3._hx_index == 0) {
						var v3 = _g3.value;
						start = 0;
					}
					break;
				default:
				}
			}
			var isVariant = false;
			if(start != null) {
				try {
					if(start._hx_index == 2) {
						var v4 = start.s;
						start = v4;
						isVariant = true;
					}
				} catch( _g4 ) {
				}
			}
			if(end != null) {
				try {
					if(end._hx_index == 2) {
						var v5 = end.s;
						end = v5;
						isVariant = true;
					}
				} catch( _g5 ) {
				}
			}
			if(start == null || end == null) {
				continue;
			}
			switch(end._hx_index) {
			case 0:
				var v6 = end.v;
				var startVal = start;
				var endVal = haxe_ui_styles_ValueTools.string(end);
				if(endVal.indexOf("[[") != -1) {
					var n1 = endVal.indexOf("[[");
					var n2 = endVal.indexOf("]]") + 2;
					var before = HxOverrides.substr(endVal,0,n1);
					var after = HxOverrides.substr(endVal,n2,null);
					var s = StringTools.replace(startVal,before,"");
					s = StringTools.replace(s,after,"");
					var startInt = Std.parseInt(s);
					var s1 = StringTools.replace(endVal,before + "[[","");
					s1 = StringTools.replace(s1,"]]" + after,"");
					var endInt = Std.parseInt(s1);
					var details = new haxe_ui_styles_animation_util_StringPropertyDetails(this.target,componentProperty,startVal,endVal);
					details.pattern = before + "[[n]]" + after;
					details.startInt = startInt;
					details.changeInt = endInt - startInt;
					var c = js_Boot.getClass(this.target);
					var typeInfo = haxe_ui_core_TypeMap.getTypeInfo(c.__name__,componentProperty);
					if(typeInfo != null && isVariant == false && typeInfo == "Variant") {
						isVariant = true;
					}
					details.isVariant = isVariant;
					this._stringPropertyDetails.push(details);
				} else {
					var details1 = new haxe_ui_styles_animation_util_StringPropertyDetails(this.target,componentProperty,startVal,endVal);
					this._stringPropertyDetails.push(details1);
				}
				break;
			case 3:
				var _g6 = end.v;
				if(_g6._hx_index == 0) {
					var v7 = _g6.value;
					var val = v7;
					if(val != null) {
						var details2 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,val - start);
						this._propertyDetails.push(details2);
					}
				} else {
					var val1 = haxe_ui_styles_ValueTools.calcDimension(end);
					if(val1 != null) {
						var details3 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,val1 - start);
						this._propertyDetails.push(details3);
					} else {
						var details4 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,end - start);
						this._propertyDetails.push(details4);
					}
				}
				break;
			case 4:
				var v8 = end.v;
				var startColor = js_Boot.__cast(start , Int);
				var endColor = v8;
				var details5 = new haxe_ui_styles_animation_util_ColorPropertyDetails(this.target,componentProperty,startColor,(endColor >> 16 & 255) - (startColor >> 16 & 255),(endColor >> 8 & 255) - (startColor >> 8 & 255),(endColor & 255) - (startColor & 255),(endColor >> 24 & 255) - (startColor >> 24 & 255));
				if(this._colorPropertyDetails == null) {
					this._colorPropertyDetails = [];
				}
				this._colorPropertyDetails.push(details5);
				break;
			default:
				var val2 = haxe_ui_styles_ValueTools.calcDimension(end);
				if(val2 != null) {
					var details6 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,val2 - start);
					this._propertyDetails.push(details6);
				} else {
					var details7 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,end - start);
					this._propertyDetails.push(details7);
				}
			}
		}
	}
	,_nextFrame: function() {
		if(this._stopped == true) {
			return;
		}
		var currentTime = HxOverrides.now() / 1000;
		var delta = currentTime - this._currentTime;
		if(this.delay < 0) {
			delta += -this.delay;
		}
		var tweenPosition = delta / this.duration;
		if(tweenPosition > 1) {
			tweenPosition = 1;
		}
		this._apply(tweenPosition);
		if(this._onUpdate != null) {
			this._onUpdate(currentTime,delta,tweenPosition);
		}
		if(delta >= this.duration) {
			this._finish();
		} else {
			new haxe_ui_CallLater($bind(this,this._nextFrame));
		}
	}
	,_isValid: function() {
		if(this.target == null) {
			return false;
		}
		if(((this.target) instanceof haxe_ui_core_Component)) {
			var c = this.target;
			if(c._isDisposed == true) {
				return false;
			}
		}
		return true;
	}
	,_apply: function(position) {
		if(this._isValid() == false) {
			this.stop();
			return;
		}
		position = this._easeFunc(position);
		var _g = 0;
		var _g1 = this._propertyDetails;
		while(_g < _g1.length) {
			var details = _g1[_g];
			++_g;
			Reflect.setProperty(this.target,details.propertyName,details.start + details.change * position);
		}
		var _g = 0;
		var _g1 = this._stringPropertyDetails;
		while(_g < _g1.length) {
			var details = _g1[_g];
			++_g;
			if(details.pattern != null) {
				var newInt = details.startInt + position * details.changeInt | 0;
				var newString = StringTools.replace(details.pattern,"[[n]]","" + newInt);
				if(details.isVariant) {
					var v = haxe_ui_util_Variant.fromString(newString);
					Reflect.setProperty(this.target,details.propertyName,v);
				} else {
					Reflect.setProperty(this.target,details.propertyName,newString);
				}
			} else if(position != 1) {
				Reflect.setProperty(this.target,details.propertyName,details.start);
			} else {
				Reflect.setProperty(this.target,details.propertyName,details.end);
			}
		}
		var _g = 0;
		var _g1 = this._colorPropertyDetails;
		while(_g < _g1.length) {
			var details = _g1[_g];
			++_g;
			var currentColor = haxe_ui_util_Color.fromComponents((details.start >> 16 & 255) + details.changeR * position | 0,(details.start >> 8 & 255) + details.changeG * position | 0,(details.start & 255) + details.changeB * position | 0,(details.start >> 24 & 255) + details.changeA * position | 0);
			Reflect.setProperty(details.target,details.propertyName,currentColor);
		}
	}
	,_finish: function() {
		this._stopped = true;
		this.target = null;
		if(this._onComplete != null) {
			this._onComplete();
		}
	}
	,__class__: haxe_ui_styles_animation_util_Actuator
};
var haxe_ui_styles_animation_util__$Actuator_Ease = function() { };
$hxClasses["haxe.ui.styles.animation.util._Actuator.Ease"] = haxe_ui_styles_animation_util__$Actuator_Ease;
haxe_ui_styles_animation_util__$Actuator_Ease.__name__ = "haxe.ui.styles.animation.util._Actuator.Ease";
haxe_ui_styles_animation_util__$Actuator_Ease.get = function(easingFunction) {
	switch(easingFunction._hx_index) {
	case 0:
		return haxe_ui_styles_animation_util__$Actuator_Ease.linear;
	case 2:
		return haxe_ui_styles_animation_util__$Actuator_Ease.easeIn;
	case 3:
		return haxe_ui_styles_animation_util__$Actuator_Ease.easeOut;
	case 1:case 4:
		return haxe_ui_styles_animation_util__$Actuator_Ease.easeInOut;
	}
};
haxe_ui_styles_animation_util__$Actuator_Ease.linear = function(k) {
	return k;
};
haxe_ui_styles_animation_util__$Actuator_Ease.easeIn = function(k) {
	return k * k * k;
};
haxe_ui_styles_animation_util__$Actuator_Ease.easeOut = function(k) {
	return --k * k * k + 1;
};
haxe_ui_styles_animation_util__$Actuator_Ease.easeInOut = function(k) {
	if((k /= 0.5) < 1) {
		return 0.5 * k * k * k;
	} else {
		return 0.5 * ((k -= 2) * k * k + 2);
	}
};
var haxe_ui_styles_animation_util_ColorPropertyDetails = function(target,propertyName,start,changeR,changeG,changeB,changeA) {
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.changeR = changeR;
	this.changeG = changeG;
	this.changeB = changeB;
	this.changeA = changeA;
};
$hxClasses["haxe.ui.styles.animation.util.ColorPropertyDetails"] = haxe_ui_styles_animation_util_ColorPropertyDetails;
haxe_ui_styles_animation_util_ColorPropertyDetails.__name__ = "haxe.ui.styles.animation.util.ColorPropertyDetails";
haxe_ui_styles_animation_util_ColorPropertyDetails.prototype = {
	changeR: null
	,changeG: null
	,changeB: null
	,changeA: null
	,propertyName: null
	,start: null
	,target: null
	,__class__: haxe_ui_styles_animation_util_ColorPropertyDetails
};
var haxe_ui_styles_animation_util_PropertyDetails = function(target,propertyName,start,change) {
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.change = change;
};
$hxClasses["haxe.ui.styles.animation.util.PropertyDetails"] = haxe_ui_styles_animation_util_PropertyDetails;
haxe_ui_styles_animation_util_PropertyDetails.__name__ = "haxe.ui.styles.animation.util.PropertyDetails";
haxe_ui_styles_animation_util_PropertyDetails.prototype = {
	change: null
	,propertyName: null
	,start: null
	,target: null
	,__class__: haxe_ui_styles_animation_util_PropertyDetails
};
var haxe_ui_styles_animation_util_StringPropertyDetails = function(target,propertyName,start,end) {
	this.isVariant = false;
	this.pattern = null;
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.end = end;
};
$hxClasses["haxe.ui.styles.animation.util.StringPropertyDetails"] = haxe_ui_styles_animation_util_StringPropertyDetails;
haxe_ui_styles_animation_util_StringPropertyDetails.__name__ = "haxe.ui.styles.animation.util.StringPropertyDetails";
haxe_ui_styles_animation_util_StringPropertyDetails.prototype = {
	propertyName: null
	,start: null
	,end: null
	,target: null
	,startInt: null
	,changeInt: null
	,pattern: null
	,isVariant: null
	,__class__: haxe_ui_styles_animation_util_StringPropertyDetails
};
var haxe_ui_styles_elements_AnimationKeyFrame = function() {
};
$hxClasses["haxe.ui.styles.elements.AnimationKeyFrame"] = haxe_ui_styles_elements_AnimationKeyFrame;
haxe_ui_styles_elements_AnimationKeyFrame.__name__ = "haxe.ui.styles.elements.AnimationKeyFrame";
haxe_ui_styles_elements_AnimationKeyFrame.prototype = {
	time: null
	,directives: null
	,set: function(directive) {
		var found = false;
		var _g = 0;
		var _g1 = this.directives;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			if(d.directive == directive.directive) {
				d.value = directive.value;
				found = true;
			}
		}
		if(found == false) {
			this.directives.push(directive);
		}
	}
	,find: function(id) {
		var _g = 0;
		var _g1 = this.directives;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			if(d.directive == id) {
				return d;
			}
		}
		return null;
	}
	,clear: function() {
		this.directives = [];
	}
	,__class__: haxe_ui_styles_elements_AnimationKeyFrame
};
var haxe_ui_styles_elements_AnimationKeyFrames = function(id,keyframes) {
	this._keyframes = [];
	this.id = id;
	this._keyframes = keyframes;
};
$hxClasses["haxe.ui.styles.elements.AnimationKeyFrames"] = haxe_ui_styles_elements_AnimationKeyFrames;
haxe_ui_styles_elements_AnimationKeyFrames.__name__ = "haxe.ui.styles.elements.AnimationKeyFrames";
haxe_ui_styles_elements_AnimationKeyFrames.prototype = {
	id: null
	,_keyframes: null
	,keyFrames: null
	,get_keyFrames: function() {
		return this._keyframes;
	}
	,__class__: haxe_ui_styles_elements_AnimationKeyFrames
	,__properties__: {get_keyFrames:"get_keyFrames"}
};
var haxe_ui_styles_elements_Directive = function(directive,value,defective) {
	if(defective == null) {
		defective = false;
	}
	this.defective = false;
	this.value = null;
	this.directive = null;
	this.directive = directive;
	this.value = value;
	this.defective = defective;
};
$hxClasses["haxe.ui.styles.elements.Directive"] = haxe_ui_styles_elements_Directive;
haxe_ui_styles_elements_Directive.__name__ = "haxe.ui.styles.elements.Directive";
haxe_ui_styles_elements_Directive.prototype = {
	directive: null
	,value: null
	,defective: null
	,__class__: haxe_ui_styles_elements_Directive
};
var haxe_ui_styles_elements_ImportElement = function(url) {
	this.url = url;
};
$hxClasses["haxe.ui.styles.elements.ImportElement"] = haxe_ui_styles_elements_ImportElement;
haxe_ui_styles_elements_ImportElement.__name__ = "haxe.ui.styles.elements.ImportElement";
haxe_ui_styles_elements_ImportElement.prototype = {
	url: null
	,__class__: haxe_ui_styles_elements_ImportElement
};
var haxe_ui_styles_elements_MediaQuery = function(directives,styleSheet) {
	this._directives = [];
	this._directives = directives;
	this._styleSheet = styleSheet;
};
$hxClasses["haxe.ui.styles.elements.MediaQuery"] = haxe_ui_styles_elements_MediaQuery;
haxe_ui_styles_elements_MediaQuery.__name__ = "haxe.ui.styles.elements.MediaQuery";
haxe_ui_styles_elements_MediaQuery.prototype = {
	_directives: null
	,_styleSheet: null
	,addDirective: function(el) {
		this._directives.push(el);
	}
	,relevant: null
	,get_relevant: function() {
		var b = true;
		var _g = 0;
		var _g1 = this._directives;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			switch(d.directive) {
			case "backend":
				b = b && haxe_ui_Backend.get_id() == haxe_ui_styles_ValueTools.string(d.value);
				break;
			case "max-aspect-ratio":
				var sr = haxe_ui_core_Screen.get_instance().get_width() / haxe_ui_core_Screen.get_instance().get_height();
				b = b && sr < this.buildRatio(haxe_ui_styles_ValueTools.string(d.value));
				break;
			case "max-height":
				b = b && haxe_ui_core_Screen.get_instance().get_height() < haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "max-width":
				b = b && haxe_ui_core_Screen.get_instance().get_width() < haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "min-aspect-ratio":
				var sr1 = haxe_ui_core_Screen.get_instance().get_width() / haxe_ui_core_Screen.get_instance().get_height();
				b = b && sr1 > this.buildRatio(haxe_ui_styles_ValueTools.string(d.value));
				break;
			case "min-height":
				b = b && haxe_ui_core_Screen.get_instance().get_height() > haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "min-width":
				b = b && haxe_ui_core_Screen.get_instance().get_width() > haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "orientation":
				var v = haxe_ui_styles_ValueTools.string(d.value);
				if(v == "landscape") {
					b = b && haxe_ui_core_Screen.get_instance().get_width() > haxe_ui_core_Screen.get_instance().get_height();
				} else if(v == "portrait") {
					b = b && haxe_ui_core_Screen.get_instance().get_height() > haxe_ui_core_Screen.get_instance().get_width();
				}
				break;
			default:
			}
		}
		return b;
	}
	,buildRatio: function(s) {
		var p = s.split("/");
		var w = Std.parseInt(StringTools.trim(p[0]));
		var h = Std.parseInt(StringTools.trim(p[1]));
		return w / h;
	}
	,styleSheet: null
	,get_styleSheet: function() {
		return this._styleSheet;
	}
	,__class__: haxe_ui_styles_elements_MediaQuery
	,__properties__: {get_styleSheet:"get_styleSheet",get_relevant:"get_relevant"}
};
var haxe_ui_styles_elements_RuleElement = function(selector,directives) {
	this.directiveCount = 0;
	this.directives = new haxe_ds_StringMap();
	this.selector = new haxe_ui_styles_elements_Selector(selector);
	var _g = 0;
	while(_g < directives.length) {
		var d = directives[_g];
		++_g;
		this.processDirective(d);
		this.directiveCount++;
	}
};
$hxClasses["haxe.ui.styles.elements.RuleElement"] = haxe_ui_styles_elements_RuleElement;
haxe_ui_styles_elements_RuleElement.__name__ = "haxe.ui.styles.elements.RuleElement";
haxe_ui_styles_elements_RuleElement.ruleMatch = function(c,d) {
	if(c.nodeName == "*") {
		return true;
	}
	if(c.id != null && c.id != d.get_id()) {
		return false;
	}
	if(c.className != null) {
		var _g = 0;
		var _g1 = c.get_classNameParts();
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			if(d.classes.indexOf(p) != -1 == false) {
				return false;
			}
		}
	}
	if(c.pseudoClass != null) {
		var pc = ":" + c.pseudoClass;
		if(d.classes.indexOf(pc) != -1 == false) {
			return false;
		}
	}
	if(c.nodeName != null) {
		var classNodeName = d.get_nodeName();
		if(c.nodeName != classNodeName) {
			return false;
		}
	}
	if(c.parent != null) {
		if(c.direct == true) {
			var p = d.parentComponent;
			if(p == null) {
				return false;
			}
			if(!haxe_ui_styles_elements_RuleElement.ruleMatch(c.parent,p)) {
				return false;
			}
		} else {
			var p = d.parentComponent;
			while(p != null) {
				if(haxe_ui_styles_elements_RuleElement.ruleMatch(c.parent,p)) {
					break;
				}
				p = p.parentComponent;
			}
			if(p == null) {
				return false;
			}
		}
	}
	return true;
};
haxe_ui_styles_elements_RuleElement.prototype = {
	selector: null
	,directives: null
	,directiveCount: null
	,addDirective: function(directive,value) {
		var d = new haxe_ui_styles_elements_Directive(directive,value);
		this.processDirective(d);
	}
	,match: function(d) {
		return haxe_ui_styles_elements_RuleElement.ruleMatch(this.selector.parts[this.selector.parts.length - 1],d);
	}
	,processDirective: function(d) {
		switch(d.directive) {
		case "animation":
			this.processComposite(d,["animation-name","animation-duration","animation-timing-function","animation-delay","animation-iteration-count","animation-direction","animation-fill-mode"]);
			break;
		case "background":
			this.processComposite(d,["background-color","background-color-end","background-gradient-style"]);
			break;
		case "background-image-clip":
			this.processComposite(d,["background-image-clip-top","background-image-clip-left","background-image-clip-bottom","background-image-clip-right"]);
			break;
		case "background-image-slice":
			this.processComposite(d,["background-image-slice-top","background-image-slice-left","background-image-slice-bottom","background-image-slice-right"]);
			break;
		case "background-position":
			this.processComposite(d,["background-position-x","background-position-y"]);
			break;
		case "background-size":
			var vl = haxe_ui_styles_ValueTools.composite(d.value);
			if(vl.length == 1) {
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[0]),["background-width","background-height"]);
			} else if(vl.length == 2) {
				this.processComposite(d,["background-width","background-height"]);
			}
			break;
		case "border":
			this.processComposite(d,["border-size","border-style","border-color"]);
			break;
		case "border-bottom":
			this.processComposite(d,["border-bottom-size","border-style","border-bottom-color"]);
			break;
		case "border-color":
			this.processComposite(d,["border-top-color","border-left-color","border-right-color","border-bottom-color"],true);
			break;
		case "border-left":
			this.processComposite(d,["border-left-size","border-style","border-left-color"]);
			break;
		case "border-right":
			this.processComposite(d,["border-right-size","border-style","border-right-color"]);
			break;
		case "border-size":
			this.processComposite(d,["border-top-size","border-left-size","border-right-size","border-bottom-size"]);
			break;
		case "border-top":
			this.processComposite(d,["border-top-size","border-style","border-top-color"]);
			break;
		case "font-style":
			var v1 = haxe_ui_styles_ValueTools.composite(d.value);
			if(v1 == null) {
				v1 = [d.value];
			}
			var _g = 0;
			while(_g < v1.length) {
				var v = v1[_g];
				++_g;
				var s = haxe_ui_styles_ValueTools.string(v).toLowerCase();
				if(s == "bold") {
					var this1 = this.directives;
					var value = new haxe_ui_styles_elements_Directive("font-bold",haxe_ui_styles_Value.VBool(true));
					this1.h["font-bold"] = value;
				} else if(s == "italic") {
					var this2 = this.directives;
					var value1 = new haxe_ui_styles_elements_Directive("font-italic",haxe_ui_styles_Value.VBool(true));
					this2.h["font-italic"] = value1;
				} else if(s == "underline") {
					var this3 = this.directives;
					var value2 = new haxe_ui_styles_elements_Directive("font-underline",haxe_ui_styles_Value.VBool(true));
					this3.h["font-underline"] = value2;
				}
			}
			break;
		case "margin":
			var vl = haxe_ui_styles_ValueTools.composite(d.value);
			if(vl.length == 4 || vl.length == 1) {
				this.processComposite(d,["margin-top","margin-left","margin-right","margin-bottom"]);
			} else if(vl.length == 2) {
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[0]),["margin-top","margin-bottom"]);
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[1]),["margin-left","margin-right"]);
			}
			break;
		case "padding":
			var vl = haxe_ui_styles_ValueTools.composite(d.value);
			if(vl.length == 4 || vl.length == 1) {
				this.processComposite(d,["padding-top","padding-left","padding-right","padding-bottom"]);
			} else if(vl.length == 2) {
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[0]),["padding-top","padding-bottom"]);
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[1]),["padding-left","padding-right"]);
			} else if(vl.length == 0) {
				this.processComposite(d,["padding-top","padding-left","padding-right","padding-bottom"]);
			}
			break;
		case "spacing":
			this.processComposite(d,["horizontal-spacing","vertical-spacing"]);
			break;
		default:
			this.directives.h[d.directive] = d;
		}
	}
	,processComposite: function(d,parts,duplicate) {
		if(duplicate == null) {
			duplicate = false;
		}
		var _g = 0;
		while(_g < parts.length) {
			var p = parts[_g];
			++_g;
			var _this = this.directives;
			if(Object.prototype.hasOwnProperty.call(_this.h,p)) {
				delete(_this.h[p]);
			}
		}
		var _g = d.value;
		switch(_g._hx_index) {
		case 1:
			var _g1 = _g.v;
			var _g1 = 0;
			while(_g1 < parts.length) {
				var p = parts[_g1];
				++_g1;
				var this1 = this.directives;
				var value = new haxe_ui_styles_elements_Directive(p,d.value);
				this1.h[p] = value;
			}
			break;
		case 3:
			var v = _g.v;
			var _g1 = 0;
			while(_g1 < parts.length) {
				var p = parts[_g1];
				++_g1;
				var this1 = this.directives;
				var value = new haxe_ui_styles_elements_Directive(p,haxe_ui_styles_Value.VDimension(v));
				this1.h[p] = value;
			}
			break;
		case 4:
			var _g1 = _g.v;
			if(duplicate == false) {
				var this1 = this.directives;
				var value = new haxe_ui_styles_elements_Directive(parts[0],d.value);
				this1.h[parts[0]] = value;
			} else {
				var _g1 = 0;
				while(_g1 < parts.length) {
					var p = parts[_g1];
					++_g1;
					var this1 = this.directives;
					var value = new haxe_ui_styles_elements_Directive(p,d.value);
					this1.h[p] = value;
				}
			}
			break;
		case 6:
			var _g1 = _g.v;
			break;
		case 7:
			var vl = _g.vl;
			var n = 0;
			var _g = 0;
			while(_g < parts.length) {
				var p = parts[_g];
				++_g;
				if(vl[n] != null) {
					var nd = new haxe_ui_styles_elements_Directive(p,vl[n]);
					this.processDirective(nd);
					this.directives.h[p] = nd;
				}
				++n;
			}
			break;
		case 9:
			var _g = 0;
			while(_g < parts.length) {
				var p = parts[_g];
				++_g;
				var nd = new haxe_ui_styles_elements_Directive(p,d.value);
				this.processDirective(nd);
				this.directives.h[p] = nd;
			}
			break;
		default:
		}
	}
	,__class__: haxe_ui_styles_elements_RuleElement
};
var haxe_ui_styles_elements_Selector = function(s) {
	this.parts = [];
	s = StringTools.replace(s,">"," > ");
	var p = s.split(" ");
	var parent = null;
	var nextDirect = false;
	var _g = 0;
	while(_g < p.length) {
		var i = p[_g];
		++_g;
		i = StringTools.trim(i);
		if(i.length == 0) {
			continue;
		}
		if(i == ">") {
			nextDirect = true;
			continue;
		}
		var current = new haxe_ui_styles_elements_SelectorPart();
		if(nextDirect == true) {
			current.direct = true;
			nextDirect = false;
		}
		current.parent = parent;
		var p1 = i.split(":");
		current.pseudoClass = p1[1];
		var main = p1[0];
		if(main.charAt(0) == ".") {
			current.className = main.substring(1);
		} else {
			var p2 = main.split(".");
			if(p2[0].charAt(0) == "#") {
				current.id = p2[0].substring(1);
			} else {
				current.nodeName = p2[0].toLowerCase();
			}
			current.className = p2[1];
		}
		this.parts.push(current);
		parent = current;
	}
};
$hxClasses["haxe.ui.styles.elements.Selector"] = haxe_ui_styles_elements_Selector;
haxe_ui_styles_elements_Selector.__name__ = "haxe.ui.styles.elements.Selector";
haxe_ui_styles_elements_Selector.prototype = {
	parts: null
	,toString: function() {
		return this.parts.join(" ");
	}
	,__class__: haxe_ui_styles_elements_Selector
};
var haxe_ui_styles_elements_SelectorPart = function() {
	this._parts = null;
	this.direct = false;
	this.nodeName = null;
	this.id = null;
	this.className = null;
	this.pseudoClass = null;
	this.parent = null;
};
$hxClasses["haxe.ui.styles.elements.SelectorPart"] = haxe_ui_styles_elements_SelectorPart;
haxe_ui_styles_elements_SelectorPart.__name__ = "haxe.ui.styles.elements.SelectorPart";
haxe_ui_styles_elements_SelectorPart.prototype = {
	parent: null
	,pseudoClass: null
	,className: null
	,id: null
	,nodeName: null
	,direct: null
	,_parts: null
	,classNameParts: null
	,get_classNameParts: function() {
		if(this.className == null) {
			return null;
		}
		if(this._parts == null) {
			this._parts = this.className.split(".");
		}
		return this._parts;
	}
	,toString: function() {
		var sb_b = "";
		if(this.id != null) {
			sb_b += Std.string("#" + this.id);
		}
		if(this.nodeName != null) {
			sb_b += Std.string(this.nodeName);
		}
		if(this.className != null) {
			sb_b += Std.string("." + this.className);
		}
		if(this.pseudoClass != null) {
			sb_b += Std.string(":" + this.pseudoClass);
		}
		return sb_b;
	}
	,__class__: haxe_ui_styles_elements_SelectorPart
	,__properties__: {get_classNameParts:"get_classNameParts"}
};
var haxe_ui_themes_Theme = function() {
	this.styles = [];
	this.images = [];
	this.vars = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.themes.Theme"] = haxe_ui_themes_Theme;
haxe_ui_themes_Theme.__name__ = "haxe.ui.themes.Theme";
haxe_ui_themes_Theme.prototype = {
	parent: null
	,styles: null
	,images: null
	,vars: null
	,__class__: haxe_ui_themes_Theme
};
var haxe_ui_themes_ThemeManager = function() {
	this.currentThemeVars = new haxe_ds_StringMap();
	this._eventMap = null;
	this._themes = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.themes.ThemeManager"] = haxe_ui_themes_ThemeManager;
haxe_ui_themes_ThemeManager.__name__ = "haxe.ui.themes.ThemeManager";
haxe_ui_themes_ThemeManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_themes_ThemeManager.get_instance = function() {
	if(haxe_ui_themes_ThemeManager._instance == null) {
		haxe_ui_themes_ThemeManager._instance = new haxe_ui_themes_ThemeManager();
	}
	return haxe_ui_themes_ThemeManager._instance;
};
haxe_ui_themes_ThemeManager.prototype = {
	_themes: null
	,_themeImages: null
	,_eventMap: null
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this._eventMap == null) {
			this._eventMap = new haxe_ui_util_EventMap();
		}
		this._eventMap.add(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this._eventMap == null) {
			return;
		}
		this._eventMap.remove(type,listener);
	}
	,dispatch: function(event) {
		if(this._eventMap == null) {
			return;
		}
		this._eventMap.invoke(event.type,new haxe_ui_events_ThemeEvent(haxe_ui_events_ThemeEvent.THEME_CHANGED));
	}
	,getTheme: function(themeName) {
		var theme = this._themes.h[themeName];
		if(theme == null) {
			theme = new haxe_ui_themes_Theme();
			this._themes.h[themeName] = theme;
		}
		return theme;
	}
	,addStyleResource: function(themeName,resourceId,priority,styleData) {
		if(priority == null) {
			priority = 0;
		}
		this.getTheme(themeName).styles.push({ resourceId : resourceId, priority : priority, styleData : styleData});
	}
	,setThemeVar: function(themeName,varName,varValue) {
		var theme = this.getTheme(themeName);
		if(theme == null) {
			return;
		}
		theme.vars.h[varName] = varValue;
	}
	,setCurrentThemeVar: function(varName,varValue) {
		this.setThemeVar(haxe_ui_Toolkit.get_theme(),varName,varValue);
	}
	,addImageResource: function(themeName,id,resourceId,priority) {
		if(priority == null) {
			priority = 0;
		}
		this.getTheme(themeName).images.push({ id : id, resourceId : resourceId, priority : priority});
	}
	,currentThemeVars: null
	,applyTheme: function(themeName) {
		haxe_ui_Toolkit.styleSheet.clear("default");
		var finalVars = new haxe_ds_StringMap();
		this.buildThemeVars("global",finalVars);
		this.buildThemeVars(themeName,finalVars);
		this.currentThemeVars = new haxe_ds_StringMap();
		var h = finalVars.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			this.currentThemeVars.h[k] = finalVars.h[k];
		}
		var entries = [];
		this.buildThemeEntries("global",entries);
		this.buildThemeEntries(themeName,entries);
		haxe_ds_ArraySort.sort(entries,function(a,b) {
			if(a.priority < b.priority) {
				return -1;
			} else if(a.priority > b.priority) {
				return 1;
			}
			return 0;
		});
		var _g = 0;
		while(_g < entries.length) {
			var e = entries[_g];
			++_g;
			this.applyResource(e.resourceId,e.styleData);
		}
		var images = [];
		this.buildThemeImages("global",images);
		this.buildThemeImages(themeName,images);
		haxe_ds_ArraySort.sort(images,function(a,b) {
			if(a.priority < b.priority) {
				return -1;
			} else if(a.priority > b.priority) {
				return 1;
			}
			return 0;
		});
		var _g = 0;
		while(_g < images.length) {
			var i = images[_g];
			++_g;
			if(this._themeImages == null) {
				this._themeImages = new haxe_ds_StringMap();
			}
			this._themeImages.h[i.id] = i;
		}
		this.dispatch(new haxe_ui_events_ThemeEvent(haxe_ui_events_ThemeEvent.THEME_CHANGED));
	}
	,applyResource: function(resourceId,styleData) {
		var style = "";
		if(resourceId != null) {
			style = haxe_ui_Toolkit.get_assets().getText(resourceId);
		}
		if(styleData != null) {
			if(style == null) {
				style = "";
			}
			style += "\n" + styleData;
		}
		if(style != null) {
			this.addStyleString(style);
		}
	}
	,addStyleString: function(style) {
		haxe_ui_Toolkit.styleSheet.parse(style);
	}
	,buildThemeVars: function(themeName,vars) {
		var theme = this._themes.h[themeName];
		if(theme == null) {
			return;
		}
		if(theme.parent != null) {
			this.buildThemeVars(theme.parent,vars);
		}
		var h = theme.vars.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			var v = theme.vars.h[k];
			vars.h[k] = v;
		}
	}
	,buildThemeEntries: function(themeName,arr) {
		var theme = this._themes.h[themeName];
		if(theme == null) {
			return;
		}
		if(theme.parent != null) {
			this.buildThemeEntries(theme.parent,arr);
		}
		var _g = 0;
		var _g1 = theme.styles;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			arr.push(s);
		}
	}
	,buildThemeImages: function(themeName,arr) {
		var theme = this._themes.h[themeName];
		if(theme == null) {
			return;
		}
		if(theme.parent != null) {
			this.buildThemeImages(theme.parent,arr);
		}
		var _g = 0;
		var _g1 = theme.images;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			arr.push(s);
		}
	}
	,image: function(id) {
		var image = this._themeImages.h[id];
		if(image == null) {
			return null;
		}
		return image.resourceId;
	}
	,icon: function(id) {
		return this.image(id);
	}
	,__class__: haxe_ui_themes_ThemeManager
};
var haxe_ui_tooltips_ToolTip = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.tooltips.ToolTip"] = haxe_ui_tooltips_ToolTip;
haxe_ui_tooltips_ToolTip.__name__ = "haxe.ui.tooltips.ToolTip";
haxe_ui_tooltips_ToolTip.__super__ = haxe_ui_containers_Box;
haxe_ui_tooltips_ToolTip.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_tooltips_ToolTip();
	}
	,__class__: haxe_ui_tooltips_ToolTip
});
var haxe_ui_tooltips_ToolTipManager = function() {
	this._toolTipContents = null;
	this._toolTip = null;
	this._timer = null;
	this._currentComponent = null;
	this._lastMouseEvent = null;
	this._toolTipOptions = new haxe_ds_ObjectMap();
};
$hxClasses["haxe.ui.tooltips.ToolTipManager"] = haxe_ui_tooltips_ToolTipManager;
haxe_ui_tooltips_ToolTipManager.__name__ = "haxe.ui.tooltips.ToolTipManager";
haxe_ui_tooltips_ToolTipManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_tooltips_ToolTipManager.get_instance = function() {
	if(haxe_ui_tooltips_ToolTipManager._instance == null) {
		haxe_ui_tooltips_ToolTipManager._instance = new haxe_ui_tooltips_ToolTipManager();
	}
	return haxe_ui_tooltips_ToolTipManager._instance;
};
haxe_ui_tooltips_ToolTipManager.prototype = {
	_lastMouseEvent: null
	,_toolTipOptions: null
	,registerTooltip: function(target,options) {
		if(this._toolTipOptions.h.__keys__[target.__id__] != null) {
			return;
		}
		if(options == null) {
			options = { };
		}
		if(options.tipData == null) {
			options.tipData = { text : target.get_tooltip()};
		}
		this._toolTipOptions.set(target,options);
		target.registerEvent("mouseover",$bind(this,this.onTargetMouseOver));
	}
	,unregisterTooltip: function(target) {
		target.unregisterEvent("mouseover",$bind(this,this.onTargetMouseOver));
		target.unregisterEvent("mouseout",$bind(this,this.onTargetMouseOut));
		target.unregisterEvent("mousemove",$bind(this,this.onTargetMouseMove));
		this._toolTipOptions.remove(target);
	}
	,getTooltipOptions: function(target) {
		return this._toolTipOptions.h[target.__id__];
	}
	,updateTooltipRenderer: function(target,renderer) {
		if(this._toolTipOptions.h.__keys__[target.__id__] == null) {
			return;
		}
		var options = this._toolTipOptions.h[target.__id__];
		options.renderer = renderer;
	}
	,_currentComponent: null
	,_timer: null
	,onTargetMouseOver: function(event) {
		event.cancel();
		this.stopCurrent();
		this._lastMouseEvent = event;
		this._currentComponent = event.target;
		event.target.registerEvent("mouseout",$bind(this,this.onTargetMouseOut));
		event.target.registerEvent("mousemove",$bind(this,this.onTargetMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
		this.startTimer();
	}
	,onTargetMouseMove: function(event) {
		if(this._toolTip != null && this._toolTip.get_hidden() == false) {
			return;
		}
		this.stopTimer();
		this.startTimer();
	}
	,onTargetMouseOut: function(event) {
		this.stopCurrent();
		this.hideToolTip();
	}
	,onDelayTimer: function() {
		this._timer.stop();
		this._timer = null;
		this.showToolTip();
	}
	,onScreenMouseMove: function(event) {
		this._lastMouseEvent = event;
	}
	,onScreenMouseDown: function(event) {
		this.hideToolTip();
	}
	,startTimer: function() {
		this._timer = new haxe_ui_util_Timer(haxe_ui_tooltips_ToolTipManager.defaultDelay,$bind(this,this.onDelayTimer));
	}
	,stopTimer: function() {
		if(this._timer != null) {
			this._timer.stop();
			this._timer = null;
		}
	}
	,stopCurrent: function() {
		if(this._currentComponent != null) {
			this._currentComponent.unregisterEvent("mouseout",$bind(this,this.onTargetMouseOut));
			this._currentComponent = null;
		}
		this.stopTimer();
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,_toolTip: null
	,_toolTipContents: null
	,createToolTip: function() {
		if(this._toolTip != null) {
			return;
		}
		this._toolTip = new haxe_ui_tooltips_ToolTip();
	}
	,showToolTip: function() {
		var _gthis = this;
		if(this._currentComponent == null) {
			return;
		}
		if(this._currentComponent.get_disabled() == true || this._currentComponent.get_hidden() == true) {
			this.stopCurrent();
			return;
		}
		this.createToolTip();
		this._toolTip.hide();
		var options = this._toolTipOptions.h[this._currentComponent.__id__];
		var renderer = this.createToolTipRenderer(options);
		var _this = this._toolTip;
		if((_this._children == null ? [] : _this._children)[0] != renderer) {
			var _this = this._toolTip;
			if((_this._children == null ? [] : _this._children).length > 0) {
				this._toolTip.removeComponentAt(0,false);
			}
			this._toolTip.addComponent(renderer);
		}
		renderer.set_data(options.tipData);
		haxe_ui_core_Screen.get_instance().addComponent(this._toolTip);
		haxe_ui_core_Screen.get_instance().setComponentIndex(this._toolTip,haxe_ui_core_Screen.get_instance().rootComponents.length - 1);
		this._toolTip.validateNow();
		this.positionToolTip();
		haxe_ui_Toolkit.callLater(function() {
			if(haxe_ui_tooltips_ToolTipManager.fade == true) {
				_gthis._toolTip.fadeIn();
			} else {
				_gthis._toolTip.show();
			}
		});
		haxe_ui_core_Screen.get_instance().registerEvent("mousedown",$bind(this,this.onScreenMouseDown));
	}
	,positionToolTip: function() {
		var x = this._lastMouseEvent.screenX + this._toolTip.get_marginLeft();
		var y = this._lastMouseEvent.screenY + this._toolTip.get_marginTop();
		var w = this._toolTip.get_width();
		var h = this._toolTip.get_height();
		var maxX = haxe_ui_core_Screen.get_instance().get_width();
		var maxY = haxe_ui_core_Screen.get_instance().get_height();
		if(x + w > maxX) {
			x -= w;
		}
		if(y + h > maxY) {
			y = this._lastMouseEvent.screenY - h - this._toolTip.get_marginTop() / 2;
		}
		this._toolTip.set_left(x * haxe_ui_Toolkit.get_scale());
		this._toolTip.set_top(y * haxe_ui_Toolkit.get_scale());
	}
	,hideToolTip: function() {
		if(this._toolTip != null) {
			if(haxe_ui_tooltips_ToolTipManager.fade == true) {
				this._toolTip.fadeOut();
			} else {
				this._toolTip.hide();
			}
		}
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousedown",$bind(this,this.onScreenMouseDown));
	}
	,createToolTipRenderer: function(options) {
		if(options.renderer != null) {
			return options.renderer;
		}
		if(haxe_ui_tooltips_ToolTipManager.defaultRenderer != null) {
			return haxe_ui_tooltips_ToolTipManager.defaultRenderer;
		}
		if(this._toolTipContents != null) {
			return this._toolTipContents;
		}
		this._toolTipContents = new haxe_ui_core_ItemRenderer();
		var label = new haxe_ui_components_Label();
		label.set_id("text");
		this._toolTipContents.addComponent(label);
		return this._toolTipContents;
	}
	,__class__: haxe_ui_tooltips_ToolTipManager
};
var haxe_ui_util_CallbackMap = function() {
	this._map = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.CallbackMap"] = haxe_ui_util_CallbackMap;
haxe_ui_util_CallbackMap.__name__ = "haxe.ui.util.CallbackMap";
haxe_ui_util_CallbackMap.prototype = {
	_map: null
	,add: function(key,callback,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(callback == null) {
			return false;
		}
		var b = false;
		var arr = this._map.h[key];
		if(arr == null) {
			arr = new haxe_ui_util_FunctionArray();
			arr.push(callback,priority);
			this._map.h[key] = arr;
			b = true;
		} else if(arr.contains(callback) == false) {
			arr.push(callback,priority);
		}
		return b;
	}
	,remove: function(key,callback) {
		var b = false;
		var arr = this._map.h[key];
		if(arr != null) {
			arr.remove(callback);
			if(arr.get_length() == 0) {
				var _this = this._map;
				if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
					delete(_this.h[key]);
				}
				b = true;
			}
		}
		return b;
	}
	,removeAll: function(key) {
		var arr = this._map.h[key];
		if(arr != null) {
			while(arr.get_length() > 0) arr.remove(arr.get(0));
			var _this = this._map;
			if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
				delete(_this.h[key]);
			}
		}
	}
	,invoke: function(key,param) {
		var arr = this._map.h[key];
		if(arr != null) {
			arr = arr.copy();
			var listener = arr.iterator();
			while(listener.hasNext()) {
				var listener1 = listener.next();
				listener1.callback(param);
			}
		}
	}
	,invokeAndRemove: function(key,param) {
		var arr = this._map.h[key];
		if(arr != null) {
			arr = arr.copy();
			this.removeAll(key);
			var listener = arr.iterator();
			while(listener.hasNext()) {
				var listener1 = listener.next();
				listener1.callback(param);
			}
		}
	}
	,count: function(key) {
		var n = 0;
		var arr = this._map.h[key];
		if(arr != null) {
			n = arr.get_length();
		}
		return n;
	}
	,__class__: haxe_ui_util_CallbackMap
};
var haxe_ui_util_Color = {};
haxe_ui_util_Color.__properties__ = {set_a:"set_a",get_a:"get_a",set_b:"set_b",get_b:"get_b",set_g:"set_g",get_g:"get_g",set_r:"set_r",get_r:"get_r"};
haxe_ui_util_Color.fromString = function(s) {
	if(StringTools.startsWith(s,"0x") || StringTools.startsWith(s,"#")) {
		return Std.parseInt("0x" + s.substring(s.length - 6));
	}
	switch(s) {
	case "aliceblue":
		return 15792383;
	case "antiquewhite":
		return 16444375;
	case "aqua":
		return 65535;
	case "aquamarine":
		return 8388564;
	case "azure":
		return 15794175;
	case "beige":
		return 16119260;
	case "bisque":
		return 16770244;
	case "black":
		return 0;
	case "blanchedalmond":
		return 16772045;
	case "blue":
		return 255;
	case "blueviolet":
		return 9055202;
	case "brown":
		return 10824234;
	case "burlywood":
		return 14596231;
	case "cadetblue":
		return 6266528;
	case "chartreuse":
		return 8388352;
	case "chocolate":
		return 13789470;
	case "coral":
		return 16744272;
	case "cornflowerblue":
		return 6591981;
	case "cornsilk":
		return 16775388;
	case "crimson":
		return 14423100;
	case "cyan":
		return 65535;
	case "darkblue":
		return 139;
	case "darkcyan":
		return 35723;
	case "darkgoldenrod":
		return 12092939;
	case "darkgray":
		return 11119017;
	case "darkgreen":
		return 25600;
	case "darkkhaki":
		return 12433259;
	case "darkmagenta":
		return 9109643;
	case "darkolivegreen":
		return 5597999;
	case "darkorange":
		return 16747520;
	case "darkorchid":
		return 10040012;
	case "darkred":
		return 9109504;
	case "darksalmon":
		return 15308410;
	case "darkseagreen":
		return 9419919;
	case "darkslateblue":
		return 4734347;
	case "darkslategray":
		return 3100495;
	case "darkturquoise":
		return 52945;
	case "darkviolet":
		return 9699539;
	case "deeppink":
		return 16716947;
	case "deepskyblue":
		return 49151;
	case "dimgray":
		return 6908265;
	case "dodgerblue":
		return 2003199;
	case "firebrick":
		return 11674146;
	case "floralwhite":
		return 16775920;
	case "forestgreen":
		return 2263842;
	case "fuchsia":
		return 16711935;
	case "gainsboro":
		return 14474460;
	case "ghostwhite":
		return 16316671;
	case "gold":
		return 16766720;
	case "goldenrod":
		return 14329120;
	case "green":
		return 32768;
	case "greenyellow":
		return 11403055;
	case "gray":case "grey":
		return 8421504;
	case "honeydew":
		return 15794160;
	case "hotpink":
		return 16738740;
	case "indianred":
		return 13458524;
	case "indigo":
		return 4915330;
	case "ivory":
		return 16777200;
	case "khaki":
		return 15787660;
	case "lavender":
		return 15132410;
	case "lavenderblush":
		return 16773365;
	case "lawngreen":
		return 8190976;
	case "lemonchiffon":
		return 16775885;
	case "lightblue":
		return 11393254;
	case "lightcoral":
		return 15761536;
	case "lightcyan":
		return 14745599;
	case "lightgoldenrodyellow":
		return 16448210;
	case "lightgray":
		return 13882323;
	case "lightgreen":
		return 9498256;
	case "lightpink":
		return 16758465;
	case "lightsalmon":
		return 16752762;
	case "lightseagreen":
		return 2142890;
	case "lightskyblue":
		return 8900346;
	case "lightslategray":
		return 7833753;
	case "lightsteelblue":
		return 11584734;
	case "lightyellow":
		return 16777184;
	case "lime":
		return 65280;
	case "limegreen":
		return 3329330;
	case "linen":
		return 16445670;
	case "magenta":
		return 16711935;
	case "maroon":
		return 8388608;
	case "mediumaquamarine":
		return 6737322;
	case "mediumblue":
		return 205;
	case "mediumorchid":
		return 12211667;
	case "mediumpurple":
		return 9662683;
	case "mediumseagreen":
		return 3978097;
	case "mediumslateblue":
		return 8087790;
	case "mediumspringgreen":
		return 64154;
	case "mediumturquoise":
		return 4772300;
	case "mediumvioletred":
		return 13047173;
	case "midnightblue":
		return 1644912;
	case "mintcream":
		return 16121850;
	case "mistyrose":
		return 16770273;
	case "moccasin":
		return 16770229;
	case "navajowhite":
		return 16768685;
	case "navy":
		return 128;
	case "oldlace":
		return 16643558;
	case "olive":
		return 8421376;
	case "olivedrab":
		return 7048739;
	case "orange":
		return 16753920;
	case "orangered":
		return 16729344;
	case "orchid":
		return 14315734;
	case "palegoldenrod":
		return 15657130;
	case "palegreen":
		return 10025880;
	case "paleturquoise":
		return 11529966;
	case "palevioletred":
		return 14381203;
	case "papayawhip":
		return 16773077;
	case "peachpuff":
		return 16767673;
	case "peru":
		return 13468991;
	case "pink":
		return 16761035;
	case "plum":
		return 14524637;
	case "powderblue":
		return 11591910;
	case "purple":
		return 8388736;
	case "red":
		return 16711680;
	case "rosybrown":
		return 12357519;
	case "royalblue":
		return 4286945;
	case "saddlebrown":
		return 9127187;
	case "salmon":
		return 16416882;
	case "sandybrown":
		return 16032864;
	case "seagreen":
		return 3050327;
	case "seashell":
		return 16774638;
	case "sienna":
		return 10506797;
	case "silver":
		return 12632256;
	case "skyblue":
		return 8900331;
	case "slateblue":
		return 6970061;
	case "slategray":
		return 7372944;
	case "snow":
		return 16775930;
	case "springgreen":
		return 65407;
	case "steelblue":
		return 4620980;
	case "tan":
		return 13808780;
	case "teal":
		return 32896;
	case "thistle":
		return 14204888;
	case "tomato":
		return 16737095;
	case "turquoise":
		return 4251856;
	case "violet":
		return 15631086;
	case "wheat":
		return 16113331;
	case "white":
		return 16777215;
	case "whitesmoke":
		return 16119285;
	case "yellow":
		return 16776960;
	case "yellowgreen":
		return 10145074;
	default:
		return 0;
	}
};
haxe_ui_util_Color.fromComponents = function(r,g,b,a) {
	var result = (r & 255) << 16 | (g & 255) << 8 | b & 255;
	return result;
};
haxe_ui_util_Color.get_r = function(this1) {
	return this1 >> 16 & 255;
};
haxe_ui_util_Color.set_r = function(this1,value) {
	this1 = (value & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return this1;
};
haxe_ui_util_Color.get_g = function(this1) {
	return this1 >> 8 & 255;
};
haxe_ui_util_Color.set_g = function(this1,value) {
	this1 = (this1 >> 16 & 255 & 255) << 16 | (value & 255) << 8 | this1 & 255 & 255;
	return this1;
};
haxe_ui_util_Color.get_b = function(this1) {
	return this1 & 255;
};
haxe_ui_util_Color.set_b = function(this1,value) {
	this1 = (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | value & 255;
	return this1;
};
haxe_ui_util_Color.get_a = function(this1) {
	return this1 >> 24 & 255;
};
haxe_ui_util_Color.set_a = function(this1,value) {
	this1 = (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return this1;
};
haxe_ui_util_Color.set = function(this1,r,g,b,a) {
	this1 = (r & 255) << 16 | (g & 255) << 8 | b & 255;
	return this1;
};
haxe_ui_util_Color.toInt = function(this1) {
	return this1;
};
haxe_ui_util_Color.toHex = function(this1) {
	return "#" + StringTools.hex(this1 >> 16 & 255,2) + StringTools.hex(this1 >> 8 & 255,2) + StringTools.hex(this1 & 255,2);
};
haxe_ui_util_Color.or = function(a,b) {
	return haxe_ui_util_Color.toInt(a) | haxe_ui_util_Color.toInt(b);
};
haxe_ui_util_Color.sumColor = function(a,b) {
	return haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromComponents((a >> 16 & 255) + (b >> 16 & 255),(a >> 8 & 255) + (b >> 8 & 255),(a & 255) + (b & 255),(a >> 24 & 255) + (b >> 24 & 255)));
};
haxe_ui_util_Color.restColor = function(a,b) {
	return haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromComponents((a >> 16 & 255) - (b >> 16 & 255),(a >> 8 & 255) - (b >> 8 & 255),(a & 255) - (b & 255),(a >> 24 & 255) - (b >> 24 & 255)));
};
haxe_ui_util_Color.sumFloat = function(a,b) {
	var bInt = b | 0;
	return haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromComponents((a >> 16 & 255) - bInt,(a >> 8 & 255) - bInt,(a & 255) - bInt,(a >> 24 & 255) - bInt));
};
haxe_ui_util_Color.mulFloat = function(a,b) {
	return haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromComponents((a >> 16 & 255) * b | 0,(a >> 8 & 255) * b | 0,(a & 255) * b | 0,(a >> 24 & 255) * b | 0));
};
var haxe_ui_util_ColorUtil = function() { };
$hxClasses["haxe.ui.util.ColorUtil"] = haxe_ui_util_ColorUtil;
haxe_ui_util_ColorUtil.__name__ = "haxe.ui.util.ColorUtil";
haxe_ui_util_ColorUtil.toHSL = function(color) {
	var r = (color >> 16 & 255) / 255;
	var g = (color >> 8 & 255) / 255;
	var b = (color & 255) / 255;
	var numbers = [r,g,b];
	var r1 = numbers[0];
	var _g = 0;
	while(_g < numbers.length) {
		var n = numbers[_g];
		++_g;
		if(n < r1) {
			r1 = n;
		}
	}
	var min = r1;
	var numbers = [r,g,b];
	var r1 = numbers[0];
	var _g = 0;
	while(_g < numbers.length) {
		var n = numbers[_g];
		++_g;
		if(n > r1) {
			r1 = n;
		}
	}
	var max = r1;
	var delta = max - min;
	var h = 0;
	var s = 0;
	var l = (max + min) / 2;
	if(delta == 0.0) {
		h = 0.0;
		s = h;
	} else {
		s = l < 0.5 ? delta / (max + min) : delta / (2 - max - min);
		if(r == max) {
			h = (g - b) / delta + (g < b ? 6 : 0);
		} else if(g == max) {
			h = (b - r) / delta + 2;
		} else {
			h = (r - g) / delta + 4;
		}
		h *= 60;
	}
	return { h : Math.round(h), s : s * 100, l : l * 100};
};
haxe_ui_util_ColorUtil.fromHSL = function(hue,saturation,luminosity) {
	saturation /= 100;
	luminosity /= 100;
	var _c = function(d,s,l) {
		var m2 = l <= 0.5 ? l * (1 + s) : l + s - l * s;
		var m1 = 2 * l - m2;
		var v = d;
		v %= 360;
		if(v < 0) {
			v += 360;
		}
		d = v;
		if(d < 60) {
			return m1 + (m2 - m1) * d / 60;
		} else if(d < 180) {
			return m2;
		} else if(d < 240) {
			return m1 + (m2 - m1) * (240 - d) / 60;
		}
		return m1;
	};
	return haxe_ui_util_Color.fromComponents(Math.round(_c(hue + 120,saturation,luminosity) * 255),Math.round(_c(hue,saturation,luminosity) * 255),Math.round(_c(hue - 120,saturation,luminosity) * 255),255);
};
haxe_ui_util_ColorUtil.toHSV = function(color) {
	var r = (color >> 16 & 255) / 255;
	var g = (color >> 8 & 255) / 255;
	var b = (color & 255) / 255;
	var numbers = [r,g,b];
	var r1 = numbers[0];
	var _g = 0;
	while(_g < numbers.length) {
		var n = numbers[_g];
		++_g;
		if(n < r1) {
			r1 = n;
		}
	}
	var min = r1;
	var numbers = [r,g,b];
	var r1 = numbers[0];
	var _g = 0;
	while(_g < numbers.length) {
		var n = numbers[_g];
		++_g;
		if(n > r1) {
			r1 = n;
		}
	}
	var max = r1;
	var delta = max - min;
	var h = 0;
	var s = 0;
	var v = max;
	if(delta != 0) {
		s = delta / max;
	} else {
		s = 0;
		h = 0;
		return { h : Math.round(h), s : s * 100, v : v * 100};
	}
	if(r == max) {
		h = (g - b) / delta;
	} else if(g == max) {
		h = 2 + (b - r) / delta;
	} else {
		h = 4 + (r - g) / delta;
	}
	h *= 60;
	if(h < 0) {
		h += 360;
	}
	return { h : Math.round(h), s : s * 100, v : v * 100};
};
haxe_ui_util_ColorUtil.fromHSV = function(hue,saturation,value) {
	if(saturation == 0) {
		return haxe_ui_util_Color.fromComponents(value | 0,value | 0,value | 0,255);
	}
	saturation /= 100;
	value /= 100;
	var r;
	var g;
	var b;
	var h = hue / 60;
	var i = Math.floor(h);
	var f = h - i;
	var p = value * (1 - saturation);
	var q = value * (1 - f * saturation);
	var t = value * (1 - (1 - f) * saturation);
	switch(i) {
	case 0:
		r = value;
		g = t;
		b = p;
		break;
	case 1:
		r = q;
		g = value;
		b = p;
		break;
	case 2:
		r = p;
		g = value;
		b = t;
		break;
	case 3:
		r = p;
		g = q;
		b = value;
		break;
	case 4:
		r = t;
		g = p;
		b = value;
		break;
	default:
		r = value;
		g = p;
		b = q;
	}
	return haxe_ui_util_Color.fromComponents(Math.round(r * 255),Math.round(g * 255),Math.round(b * 255),255);
};
haxe_ui_util_ColorUtil.hsvToRGBF = function(hue,saturation,value) {
	var tmp = hue == 0 && saturation == 0 && value == 100;
	var tmp = saturation == 0;
	saturation /= 100;
	value /= 100;
	var r;
	var g;
	var b;
	var h = hue / 60;
	var i = Math.floor(h);
	var f = h - i;
	var p = value * (1 - saturation);
	var q = value * (1 - f * saturation);
	var t = value * (1 - (1 - f) * saturation);
	switch(i) {
	case 0:
		r = value;
		g = t;
		b = p;
		break;
	case 1:
		r = q;
		g = value;
		b = p;
		break;
	case 2:
		r = p;
		g = value;
		b = t;
		break;
	case 3:
		r = p;
		g = q;
		b = value;
		break;
	case 4:
		r = t;
		g = p;
		b = value;
		break;
	default:
		r = value;
		g = p;
		b = q;
	}
	return { r : r * 255, g : g * 255, b : b * 255};
};
haxe_ui_util_ColorUtil.rgbToGray = function(r,g,b) {
	var g1 = 0.3 * r + 0.59 * g + 0.11 * b;
	return Math.round(g1);
};
haxe_ui_util_ColorUtil.rgbfToHSV = function(r,g,b) {
	var tmp = Math.round(r) == 255 && Math.round(g) == 255 && Math.round(b) == 255;
	var r1 = r / 255;
	var g1 = g / 255;
	var b1 = b / 255;
	var numbers = [r1,g1,b1];
	var r = numbers[0];
	var _g = 0;
	while(_g < numbers.length) {
		var n = numbers[_g];
		++_g;
		if(n < r) {
			r = n;
		}
	}
	var min = r;
	var numbers = [r1,g1,b1];
	var r = numbers[0];
	var _g = 0;
	while(_g < numbers.length) {
		var n = numbers[_g];
		++_g;
		if(n > r) {
			r = n;
		}
	}
	var max = r;
	var delta = max - min;
	var h = 0;
	var s = 0;
	var v = max;
	if(delta != 0) {
		s = delta / max;
	} else {
		s = 0;
		h = 0;
		return { h : h, s : s * 100, v : v * 100};
	}
	if(r1 == max) {
		h = (g1 - b1) / delta;
	} else if(g1 == max) {
		h = 2 + (b1 - r1) / delta;
	} else {
		h = 4 + (r1 - g1) / delta;
	}
	h *= 60;
	if(h < 0) {
		h += 360;
	}
	if(Math.round(r1) == 255 && Math.round(g1) == 255 && Math.round(b1) == 255) {
		return { h : h, s : 0, v : 100};
	}
	return { h : h, s : s * 100, v : v * 100};
};
haxe_ui_util_ColorUtil.buildColorArray = function(startColor,endColor,size) {
	var array = [];
	var r1 = startColor >> 16 & 255;
	var g1 = startColor >> 8 & 255;
	var b1 = startColor & 255;
	var r2 = endColor >> 16 & 255;
	var g2 = endColor >> 8 & 255;
	var b2 = endColor & 255;
	var rd = r2 - r1;
	var gd = g2 - g1;
	var bd = b2 - b1;
	var ri = rd / (size - 1);
	var gi = gd / (size - 1);
	var bi = bd / (size - 1);
	var r = r1;
	var g = g1;
	var b = b1;
	var c;
	var _g = 0;
	var _g1 = size;
	while(_g < _g1) {
		var n = _g++;
		c = (Math.round(r) & 255) << 16 | (Math.round(g) & 255) << 8 | Math.round(b) & 255;
		array.push(haxe_ui_util_Color.toInt(c));
		r += ri;
		g += gi;
		b += bi;
	}
	return array;
};
haxe_ui_util_ColorUtil.parseColor = function(s) {
	if(StringTools.startsWith(s,"#")) {
		s = s.substring(1,s.length);
	} else if(StringTools.startsWith(s,"0x")) {
		s = s.substring(2,s.length);
	}
	return Std.parseInt("0x" + s);
};
var haxe_ui_util_ComponentUtil = function() { };
$hxClasses["haxe.ui.util.ComponentUtil"] = haxe_ui_util_ComponentUtil;
haxe_ui_util_ComponentUtil.__name__ = "haxe.ui.util.ComponentUtil";
haxe_ui_util_ComponentUtil.getDepth = function(target) {
	var count = 0;
	while(target.parentComponent != null) {
		target = target.parentComponent;
		++count;
	}
	return count;
};
haxe_ui_util_ComponentUtil.dumpComponentTree = function(from,verbose) {
	if(verbose == null) {
		verbose = false;
	}
	haxe_ui_util_ComponentUtil.recurseTreeGrouped(from,verbose);
};
haxe_ui_util_ComponentUtil.walkComponentTree = function(from,cb) {
	haxe_ui_util_ComponentUtil.recurseTree(0,from,cb);
};
haxe_ui_util_ComponentUtil.recurseTree = function(depth,c,cb) {
	cb(depth,c);
	var _g = 0;
	var _g1 = c._children == null ? [] : c._children;
	while(_g < _g1.length) {
		var child = _g1[_g];
		++_g;
		haxe_ui_util_ComponentUtil.recurseTree(depth + 1,child,cb);
	}
};
haxe_ui_util_ComponentUtil.recurseTreeTrace = function(c,level,verbose) {
	var display = c.get_className();
	if(c.get_id() != null) {
		display += "#" + c.get_id();
	}
	var space = StringTools.lpad(""," ",level * 4);
	display = space + display;
	haxe_Log.trace(display,{ fileName : "haxe/ui/util/ComponentUtil.hx", lineNumber : 42, className : "haxe.ui.util.ComponentUtil", methodName : "recurseTreeTrace"});
	var _g = 0;
	var _g1 = c._children == null ? [] : c._children;
	while(_g < _g1.length) {
		var child = _g1[_g];
		++_g;
		haxe_ui_util_ComponentUtil.recurseTreeTrace(child,level + 1,verbose);
	}
};
haxe_ui_util_ComponentUtil.recurseTreeGrouped = function(c,verbose) {
	var display = c.get_className();
	if(c.get_id() != null) {
		display += "#" + c.get_id();
	}
	$global.console.groupCollapsed(display);
	if(verbose == true) {
		$global.console.groupCollapsed("Component Details");
		$global.console.log(c.element);
		$global.console.groupEnd();
	}
	var _g = 0;
	var _g1 = c._children == null ? [] : c._children;
	while(_g < _g1.length) {
		var child = _g1[_g];
		++_g;
		haxe_ui_util_ComponentUtil.recurseTreeGrouped(child,verbose);
	}
	$global.console.groupEnd();
};
var haxe_ui_util_Defines = function() { };
$hxClasses["haxe.ui.util.Defines"] = haxe_ui_util_Defines;
haxe_ui_util_Defines.__name__ = "haxe.ui.util.Defines";
haxe_ui_util_Defines.getAll = function() {
	haxe_ui_util_Defines.popuplate();
	return haxe_ui_util_Defines._map;
};
haxe_ui_util_Defines.set = function(name,value,overwrite) {
	if(overwrite == null) {
		overwrite = false;
	}
	haxe_ui_util_Defines.popuplate();
	if(overwrite == false && Object.prototype.hasOwnProperty.call(haxe_ui_util_Defines._map.h,name)) {
		return;
	}
	haxe_ui_util_Defines._map.h[name] = value;
};
haxe_ui_util_Defines.popuplate = function() {
	if(haxe_ui_util_Defines._map != null) {
		return;
	}
	haxe_ui_util_Defines._map = new haxe_ds_StringMap();
	if(haxe_ui_core_Platform.get_instance().get_isWindows()) {
		haxe_ui_util_Defines.set("windows","1");
	} else if(haxe_ui_core_Platform.get_instance().get_isLinux()) {
		haxe_ui_util_Defines.set("linux","1");
	} else if(haxe_ui_core_Platform.get_instance().get_isMac()) {
		haxe_ui_util_Defines.set("mac","1");
	}
};
haxe_ui_util_Defines.toObject = function() {
	haxe_ui_util_Defines.popuplate();
	var o = { };
	var h = haxe_ui_util_Defines._map.h;
	var k_h = h;
	var k_keys = Object.keys(h);
	var k_length = k_keys.length;
	var k_current = 0;
	while(k_current < k_length) {
		var k = k_keys[k_current++];
		var v = haxe_ui_util_Defines._map.h[k];
		o[k] = v;
	}
	return o;
};
var haxe_ui_util_EventMap = function() {
	this._map = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.EventMap"] = haxe_ui_util_EventMap;
haxe_ui_util_EventMap.__name__ = "haxe.ui.util.EventMap";
haxe_ui_util_EventMap.prototype = {
	_map: null
	,keys: function() {
		return new haxe_ds__$StringMap_StringMapKeyIterator(this._map.h);
	}
	,removeAll: function() {
		var h = this._map.h;
		var type_h = h;
		var type_keys = Object.keys(h);
		var type_length = type_keys.length;
		var type_current = 0;
		while(type_current < type_length) {
			var type = type_keys[type_current++];
			this._map.h[type].removeAll();
		}
	}
	,add: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(listener == null) {
			return false;
		}
		var b = false;
		var arr = this._map.h[type];
		if(arr == null) {
			arr = new haxe_ui_util_FunctionArray();
			arr.push(listener,priority);
			this._map.h[type] = arr;
			b = true;
		} else if(arr.contains(listener) == false) {
			arr.push(listener,priority);
		}
		return b;
	}
	,remove: function(type,listener) {
		if(listener == null) {
			return false;
		}
		var b = false;
		var arr = this._map.h[type];
		if(arr != null) {
			arr.remove(listener);
			if(arr.get_length() == 0) {
				var _this = this._map;
				if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
					delete(_this.h[type]);
				}
				b = true;
			}
		}
		return b;
	}
	,contains: function(type,listener) {
		var b = false;
		var arr = this._map.h[type];
		if(arr != null) {
			b = listener != null ? arr.contains(listener) : true;
		}
		return b;
	}
	,invoke: function(type,event,target) {
		if(event.bubble && event.target == null) {
			event.target = target;
		}
		var arr = this._map.h[type];
		if(arr != null && arr.get_length() > 0) {
			arr = arr.copy();
			var listener = arr.iterator();
			while(listener.hasNext()) {
				var listener1 = listener.next();
				if(event.canceled) {
					break;
				}
				var c = event.clone();
				if(c.target == null) {
					c.target = target;
				}
				listener1.callback(c);
				event.copyFrom(c);
				event.canceled = c.canceled;
			}
		}
	}
	,listenerCount: function(type) {
		var n = 0;
		var arr = this._map.h[type];
		if(arr != null) {
			n = arr.get_length();
		}
		return n;
	}
	,listeners: function(type) {
		var arr = this._map.h[type];
		if(arr == null) {
			return null;
		}
		return arr;
	}
	,__class__: haxe_ui_util_EventMap
};
var haxe_ui_util_ExpressionUtil = function() { };
$hxClasses["haxe.ui.util.ExpressionUtil"] = haxe_ui_util_ExpressionUtil;
haxe_ui_util_ExpressionUtil.__name__ = "haxe.ui.util.ExpressionUtil";
haxe_ui_util_ExpressionUtil.stringToLanguageExpression = function(s,localeManager) {
	if(localeManager == null) {
		localeManager = "haxe.ui.locale.LocaleManager";
	}
	var fixedParts = [];
	var beforePos = 0;
	var n1 = s.indexOf("{{");
	while(n1 != -1) {
		var before = s.substring(beforePos,n1);
		if(before.length > 0) {
			fixedParts.push("'" + before + "'");
		}
		var n2 = s.indexOf("}}",n1);
		var code = s.substring(n1 + 2,n2);
		var parts = code.split(",");
		var stringId = parts.shift();
		var callString = localeManager + ".instance.lookupString('";
		callString += stringId;
		callString += "'";
		if(parts.length > 0) {
			callString += ", ";
			callString += parts.join(", ");
		}
		callString += ")";
		fixedParts.push(callString);
		n1 = s.indexOf("{{",n2);
		beforePos = n2 + 2;
	}
	if(beforePos < s.length) {
		var before = s.substring(beforePos,s.length);
		if(before.length > 0) {
			fixedParts.push("'" + before + "'");
		}
	}
	var fixedCode = fixedParts.join(" + ");
	return fixedCode;
};
var haxe_ui_util_FunctionArray = function() {
	this._array = [];
};
$hxClasses["haxe.ui.util.FunctionArray"] = haxe_ui_util_FunctionArray;
haxe_ui_util_FunctionArray.__name__ = "haxe.ui.util.FunctionArray";
haxe_ui_util_FunctionArray.prototype = {
	_array: null
	,get: function(index) {
		return this._array[index].callback;
	}
	,length: null
	,get_length: function() {
		return this._array.length;
	}
	,push: function(x,priority) {
		if(priority == null) {
			priority = 0;
		}
		var this1 = new haxe_ui_util__$Listener_ListenerInternal(x,priority);
		var listener = this1;
		var _g = 0;
		var _g1 = this._array.length;
		while(_g < _g1) {
			var i = _g++;
			if(this._array[i].priority < priority) {
				this._array.splice(i,0,listener);
				return i;
			}
		}
		return this._array.push(listener);
	}
	,pop: function() {
		return this._array.pop().callback;
	}
	,indexOf: function(x,fromIndex) {
		if(fromIndex == null) {
			fromIndex = 0;
		}
		var _g = fromIndex;
		var _g1 = this._array.length;
		while(_g < _g1) {
			var i = _g++;
			if(this._array[i].callback == x) {
				return i;
			}
		}
		return -1;
	}
	,remove: function(x) {
		var index = this.indexOf(x);
		if(index != -1) {
			this._array.splice(index,1);
		}
		return index != -1;
	}
	,contains: function(x) {
		return this.indexOf(x) != -1;
	}
	,iterator: function() {
		return new haxe_iterators_ArrayIterator(this._array);
	}
	,copy: function() {
		var fa = new haxe_ui_util_FunctionArray();
		fa._array = this._array.slice();
		return fa;
	}
	,toString: function() {
		var s = "[";
		var iter = this.iterator();
		while(iter.hasNext()) {
			s += Std.string(iter.next());
			if(iter.hasNext()) {
				s += ", ";
			}
		}
		s += "]";
		return s;
	}
	,removeAll: function() {
		this._array = [];
	}
	,__class__: haxe_ui_util_FunctionArray
	,__properties__: {get_length:"get_length"}
};
var haxe_ui_util_GUID = function() { };
$hxClasses["haxe.ui.util.GUID"] = haxe_ui_util_GUID;
haxe_ui_util_GUID.__name__ = "haxe.ui.util.GUID";
haxe_ui_util_GUID.randomIntegerWithinRange = function(min,max) {
	return Math.floor(Math.random() * (1 + max - min) + min);
};
haxe_ui_util_GUID.createRandomIdentifier = function(length,radix) {
	if(radix == null) {
		radix = 61;
	}
	var characters = ["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"];
	var id = [];
	if(radix > 61) {
		radix = 61;
	}
	while(length-- > 0) id.push(characters[Math.floor(Math.random() * (1 + radix))]);
	return id.join("");
};
haxe_ui_util_GUID.uuid = function() {
	var specialChars = ["8","9","A","B"];
	return haxe_ui_util_GUID.createRandomIdentifier(8,15) + "-" + haxe_ui_util_GUID.createRandomIdentifier(4,15) + "-4" + haxe_ui_util_GUID.createRandomIdentifier(3,15) + "-" + specialChars[Math.floor(Math.random() * 4)] + haxe_ui_util_GUID.createRandomIdentifier(3,15) + "-" + haxe_ui_util_GUID.createRandomIdentifier(12,15);
};
var haxe_ui_util_ImageLoader = function(resource) {
	this._resource = resource;
};
$hxClasses["haxe.ui.util.ImageLoader"] = haxe_ui_util_ImageLoader;
haxe_ui_util_ImageLoader.__name__ = "haxe.ui.util.ImageLoader";
haxe_ui_util_ImageLoader.prototype = {
	_resource: null
	,load: function(callback,useCache) {
		if(useCache == null) {
			useCache = true;
		}
		if(haxe_ui_util_Variant.get_isString(this._resource)) {
			var stringResource = haxe_ui_util_Variant.toString(this._resource);
			if(useCache == true) {
				var cachedImage = haxe_ui_ToolkitAssets.get_instance().getCachedImage(stringResource);
				if(cachedImage != null) {
					callback(cachedImage);
					return;
				}
			}
			stringResource = StringTools.trim(stringResource);
			if(StringTools.startsWith(stringResource,"http://") || StringTools.startsWith(stringResource,"https://")) {
				this.loadFromHttp(stringResource,function(imageInfo) {
					haxe_ui_ToolkitAssets.get_instance().cacheImage(stringResource,imageInfo);
					callback(imageInfo);
				});
			} else if(StringTools.startsWith(stringResource,"file://")) {
				var tmp = HxOverrides.substr(stringResource,7,null);
				haxe_ui_Toolkit.get_assets().imageFromFile(tmp,function(imageInfo) {
					haxe_ui_ToolkitAssets.get_instance().cacheImage(stringResource,imageInfo);
					callback(imageInfo);
				});
			} else {
				haxe_ui_Toolkit.get_assets().getImage(stringResource,callback);
			}
		} else if(haxe_ui_util_Variant.get_isImageData(this._resource)) {
			var imageData = haxe_ui_util_Variant.toImageData(this._resource);
			if(callback != null) {
				callback(haxe_ui_ToolkitAssets.get_instance().imageInfoFromImageData(imageData));
			}
		}
	}
	,loadFromHttp: function(url,callback) {
		var request = new XMLHttpRequest();
		request.open("GET",url);
		request.responseType = "arraybuffer";
		request.onreadystatechange = function(_) {
			if(request.readyState != 4) {
				return;
			}
			var s;
			try {
				s = request.status;
			} catch( _g ) {
				s = null;
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null && s >= 200 && s < 400) {
				haxe_ui_Toolkit.get_assets().imageFromBytes(haxe_io_Bytes.ofData(request.response),callback);
			} else if(s == null) {
				callback(null);
			} else {
				if(s == 0) {
					haxe_ui_Toolkit.get_assets().getImage(url,callback);
					return;
				}
				callback(null);
			}
		};
		request.onerror = function(x) {
		};
		request.send();
	}
	,__class__: haxe_ui_util_ImageLoader
};
var haxe_ui_util_Listener = {};
haxe_ui_util_Listener._new = function(callback,priority) {
	var this1 = new haxe_ui_util__$Listener_ListenerInternal(callback,priority);
	return this1;
};
haxe_ui_util_Listener.compareListener = function(a,b) {
	return a.callback == b.callback;
};
haxe_ui_util_Listener.compareFunction = function(a,b) {
	return a.callback == b;
};
haxe_ui_util_Listener.toFunc = function(this1) {
	return this1.callback;
};
var haxe_ui_util__$Listener_ListenerInternal = function(callback,priority) {
	this.callback = callback;
	this.priority = priority;
};
$hxClasses["haxe.ui.util._Listener.ListenerInternal"] = haxe_ui_util__$Listener_ListenerInternal;
haxe_ui_util__$Listener_ListenerInternal.__name__ = "haxe.ui.util._Listener.ListenerInternal";
haxe_ui_util__$Listener_ListenerInternal.prototype = {
	callback: null
	,priority: null
	,__class__: haxe_ui_util__$Listener_ListenerInternal
};
var haxe_ui_util_MathUtil = function() { };
$hxClasses["haxe.ui.util.MathUtil"] = haxe_ui_util_MathUtil;
haxe_ui_util_MathUtil.__name__ = "haxe.ui.util.MathUtil";
haxe_ui_util_MathUtil.distance = function(x1,y1,x2,y2) {
	return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
};
haxe_ui_util_MathUtil.round = function(v,precision) {
	if(precision == null) {
		precision = 0;
	}
	return Math.round(v * Math.pow(10,precision)) / Math.pow(10,precision);
};
haxe_ui_util_MathUtil.roundToNearest = function(v,n) {
	var r = v % n;
	if(r <= n / 2) {
		return Math.round(v - r);
	}
	return Math.round(v + n - r);
};
haxe_ui_util_MathUtil.clamp = function(v,min,max) {
	if(v == null || isNaN(v)) {
		return min;
	}
	if(min != null && v < min) {
		v = min;
	} else if(max != null && v > max) {
		v = max;
	}
	return v;
};
haxe_ui_util_MathUtil.min = function(numbers) {
	var r = numbers[0];
	var _g = 0;
	while(_g < numbers.length) {
		var n = numbers[_g];
		++_g;
		if(n < r) {
			r = n;
		}
	}
	return r;
};
haxe_ui_util_MathUtil.max = function(numbers) {
	var r = numbers[0];
	var _g = 0;
	while(_g < numbers.length) {
		var n = numbers[_g];
		++_g;
		if(n > r) {
			r = n;
		}
	}
	return r;
};
haxe_ui_util_MathUtil.wrapCircular = function(v,max) {
	v %= max;
	if(v < 0) {
		v += max;
	}
	return v;
};
var haxe_ui_util_RTTI = function() { };
$hxClasses["haxe.ui.util.RTTI"] = haxe_ui_util_RTTI;
haxe_ui_util_RTTI.__name__ = "haxe.ui.util.RTTI";
haxe_ui_util_RTTI.addClassProperty = function(className,propertyName,propertyType) {
	className = className.toLowerCase();
	propertyName = propertyName.toLowerCase();
	propertyType = propertyType.toLowerCase();
	if(propertyType == "null<bool>") {
		propertyType = "bool";
	}
	if(propertyType == "null<int>") {
		propertyType = "int";
	}
	if(propertyType == "null<float>") {
		propertyType = "float";
	}
	if(haxe_ui_util_RTTI.classInfo == null) {
		haxe_ui_util_RTTI.classInfo = new haxe_ds_StringMap();
	}
	var entry = haxe_ui_util_RTTI.classInfo.h[className];
	if(entry == null) {
		entry = { };
		haxe_ui_util_RTTI.classInfo.h[className] = entry;
	}
	if(entry.properties == null) {
		entry.properties = new haxe_ds_StringMap();
	}
	entry.properties.h[propertyName] = { propertyName : propertyName, propertyType : propertyType};
};
haxe_ui_util_RTTI.setSuperClass = function(className,superClassName) {
	if(haxe_ui_util_RTTI.classInfo == null) {
		haxe_ui_util_RTTI.classInfo = new haxe_ds_StringMap();
	}
	className = className.toLowerCase();
	superClassName = superClassName.toLowerCase();
	if(StringTools.startsWith(superClassName,".")) {
		superClassName = HxOverrides.substr(superClassName,1,null);
	}
	var entry = haxe_ui_util_RTTI.classInfo.h[className];
	if(entry == null) {
		entry = { properties : new haxe_ds_StringMap()};
		haxe_ui_util_RTTI.classInfo.h[className] = entry;
	}
	entry.superClass = superClassName;
};
haxe_ui_util_RTTI.hasSuperClass = function(className,superClassName) {
	haxe_ui_util_RTTI.load();
	className = className.toLowerCase();
	superClassName = superClassName.toLowerCase();
	if(StringTools.startsWith(superClassName,".")) {
		superClassName = HxOverrides.substr(superClassName,1,null);
	}
	var entry = haxe_ui_util_RTTI.classInfo.h[className];
	if(entry == null) {
		return false;
	}
	if(className == superClassName) {
		return true;
	}
	var testSuper = entry.superClass;
	while(testSuper != null) {
		if(testSuper == superClassName) {
			return true;
		}
		entry = haxe_ui_util_RTTI.classInfo.h[testSuper];
		if(entry == null) {
			return false;
		}
		testSuper = entry.superClass;
	}
	return false;
};
haxe_ui_util_RTTI.hasClassProperty = function(className,propertyName) {
	return haxe_ui_util_RTTI.getClassProperty(className,propertyName) != null;
};
haxe_ui_util_RTTI.load = function() {
	if(haxe_ui_util_RTTI.classInfo != null) {
		return;
	}
	var s = haxe_Resource.getString("haxeui_rtti");
	if(s == null) {
		return;
	}
	var unserializer = new haxe_Unserializer(s);
	haxe_ui_util_RTTI.classInfo = unserializer.unserialize();
};
haxe_ui_util_RTTI.getClassInfo = function(className) {
	haxe_ui_util_RTTI.load();
	if(haxe_ui_util_RTTI.classInfo == null) {
		return null;
	}
	className = className.toLowerCase();
	var entry = haxe_ui_util_RTTI.classInfo.h[className];
	return entry;
};
haxe_ui_util_RTTI.getClassProperty = function(className,propertyName) {
	if(className == null || propertyName == null) {
		return null;
	}
	className = className.toLowerCase();
	propertyName = propertyName.toLowerCase();
	var entry = haxe_ui_util_RTTI.getClassInfo(className);
	if(entry == null) {
		return null;
	}
	var propInfo = null;
	if(entry.properties != null && Object.prototype.hasOwnProperty.call(entry.properties.h,propertyName)) {
		propInfo = entry.properties.h[propertyName];
	}
	if(propInfo == null && entry.superClass != null) {
		propInfo = haxe_ui_util_RTTI.getClassProperty(entry.superClass,propertyName);
	}
	return propInfo;
};
haxe_ui_util_RTTI.save = function() {
};
var haxe_ui_util_SimpleExpressionEvaluatorOperation = $hxEnums["haxe.ui.util.SimpleExpressionEvaluatorOperation"] = { __ename__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",__constructs__:null
	,Add: {_hx_name:"Add",_hx_index:0,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,Subtract: {_hx_name:"Subtract",_hx_index:1,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,Multiply: {_hx_name:"Multiply",_hx_index:2,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,Divide: {_hx_name:"Divide",_hx_index:3,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,Equals: {_hx_name:"Equals",_hx_index:4,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,NotEquals: {_hx_name:"NotEquals",_hx_index:5,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,GreaterThan: {_hx_name:"GreaterThan",_hx_index:6,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,GreaterThanOrEquals: {_hx_name:"GreaterThanOrEquals",_hx_index:7,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,LessThan: {_hx_name:"LessThan",_hx_index:8,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,LessThanOrEquals: {_hx_name:"LessThanOrEquals",_hx_index:9,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,LogicalAnd: {_hx_name:"LogicalAnd",_hx_index:10,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,LogicalOr: {_hx_name:"LogicalOr",_hx_index:11,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
};
haxe_ui_util_SimpleExpressionEvaluatorOperation.__constructs__ = [haxe_ui_util_SimpleExpressionEvaluatorOperation.Add,haxe_ui_util_SimpleExpressionEvaluatorOperation.Subtract,haxe_ui_util_SimpleExpressionEvaluatorOperation.Multiply,haxe_ui_util_SimpleExpressionEvaluatorOperation.Divide,haxe_ui_util_SimpleExpressionEvaluatorOperation.Equals,haxe_ui_util_SimpleExpressionEvaluatorOperation.NotEquals,haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThan,haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThanOrEquals,haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThan,haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThanOrEquals,haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalAnd,haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalOr];
haxe_ui_util_SimpleExpressionEvaluatorOperation.__empty_constructs__ = [haxe_ui_util_SimpleExpressionEvaluatorOperation.Add,haxe_ui_util_SimpleExpressionEvaluatorOperation.Subtract,haxe_ui_util_SimpleExpressionEvaluatorOperation.Multiply,haxe_ui_util_SimpleExpressionEvaluatorOperation.Divide,haxe_ui_util_SimpleExpressionEvaluatorOperation.Equals,haxe_ui_util_SimpleExpressionEvaluatorOperation.NotEquals,haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThan,haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThanOrEquals,haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThan,haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThanOrEquals,haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalAnd,haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalOr];
var haxe_ui_util_SimpleExpressionEvaluator = function() { };
$hxClasses["haxe.ui.util.SimpleExpressionEvaluator"] = haxe_ui_util_SimpleExpressionEvaluator;
haxe_ui_util_SimpleExpressionEvaluator.__name__ = "haxe.ui.util.SimpleExpressionEvaluator";
haxe_ui_util_SimpleExpressionEvaluator.evalCondition = function(condition) {
	return haxe_ui_util_SimpleExpressionEvaluator.eval(condition,{ Backend : haxe_ui_Backend, backend : haxe_ui_Backend.get_id(), defined : haxe_ui_util_SimpleExpressionEvaluator.defined});
};
haxe_ui_util_SimpleExpressionEvaluator.defined = function(key) {
	var this1 = haxe_ui_util_Defines.getAll();
	return Object.prototype.hasOwnProperty.call(this1.h,key);
};
haxe_ui_util_SimpleExpressionEvaluator.eval = function(s,context) {
	var r = null;
	if(s.indexOf("||") != -1) {
		var parts = s.split("||");
		var _g = 0;
		while(_g < parts.length) {
			var p = parts[_g];
			++_g;
			if(r == null) {
				r = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(StringTools.trim(p),context);
			} else {
				r = r || haxe_ui_util_SimpleExpressionEvaluator.evalSingle(StringTools.trim(p),context);
			}
		}
	} else if(s.indexOf("&&") != -1) {
		var parts = s.split("&&");
		var _g = 0;
		while(_g < parts.length) {
			var p = parts[_g];
			++_g;
			if(r == null) {
				r = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(StringTools.trim(p),context);
			} else {
				r = r && haxe_ui_util_SimpleExpressionEvaluator.evalSingle(StringTools.trim(p),context);
			}
		}
	} else {
		r = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(s,context);
	}
	return r;
};
haxe_ui_util_SimpleExpressionEvaluator.evalSingle = function(s,context) {
	var result = null;
	var operation = null;
	var token = "";
	var inString = false;
	var _g = 0;
	var _g1 = s.length;
	while(_g < _g1) {
		var i = _g++;
		var ch = s.charAt(i);
		var next = s.charAt(i + 1);
		if(ch == "'" || ch == "\"") {
			inString = !inString;
		}
		if(inString == false) {
			if(ch == "+") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Add;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "-") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Subtract;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "*") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Multiply;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "/") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Divide;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == ">" && next != "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThan;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "<" && next != "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThan;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "=" && next == "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Equals;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == "!" && next == "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.NotEquals;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == ">" && next == "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThanOrEquals;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == "<" && next == "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThanOrEquals;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == "&" && next == "&") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalAnd;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == "|" && next == "|") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalOr;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			}
		}
		token += ch;
		if(i == s.length - 1) {
			s = "";
			break;
		}
	}
	var r = null;
	if(s.length > 0) {
		r = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(s,context);
	}
	var trimmedToken = StringTools.trim(token);
	var v = parseFloat(trimmedToken);
	if(!isNaN(v) && isFinite(v)) {
		result = parseFloat(trimmedToken);
	} else {
		var value = trimmedToken;
		value = value.toLowerCase();
		if(value == "true" || value == "false") {
			result = trimmedToken.toLowerCase() == "true";
		} else if(StringTools.startsWith(trimmedToken,"'") && StringTools.endsWith(trimmedToken,"'") ? true : StringTools.startsWith(trimmedToken,"\"") && StringTools.endsWith(trimmedToken,"\"")) {
			result = HxOverrides.substr(trimmedToken,1,trimmedToken.length - 2);
		} else {
			var token = "";
			var bracketsOpen = 0;
			var call = null;
			var callParams = null;
			var _g = 0;
			var _g1 = trimmedToken.length;
			while(_g < _g1) {
				var i = _g++;
				var ch = trimmedToken.charAt(i);
				if(ch == "(") {
					++bracketsOpen;
					if(bracketsOpen == 1) {
						call = token;
						token = "";
					} else {
						token += ch;
					}
				} else if(ch == ")") {
					--bracketsOpen;
					if(bracketsOpen == 0) {
						callParams = token;
					} else {
						token += ")";
					}
				} else {
					token += ch;
				}
			}
			var prop = null;
			if(call == null) {
				prop = token;
			}
			var parsedCallParams = [];
			if(callParams != null) {
				bracketsOpen = 0;
				token = "";
				var _g = 0;
				var _g1 = callParams.length;
				while(_g < _g1) {
					var i = _g++;
					var ch = callParams.charAt(i);
					if(ch == "(") {
						++bracketsOpen;
					} else if(ch == ")") {
						--bracketsOpen;
					}
					if(ch == ",") {
						if(bracketsOpen == 0) {
							parsedCallParams.push(token);
							token = "";
						} else {
							token += ch;
						}
					} else {
						token += ch;
					}
				}
				if(token.length != 0) {
					parsedCallParams.push(token);
				}
			}
			if(call != null) {
				var trimmedCall = StringTools.trim(call);
				if(trimmedCall.length > 0) {
					var callParts = trimmedCall.split(".");
					var ref = context;
					var prevRef = null;
					var _g = 0;
					while(_g < callParts.length) {
						var callPart = callParts[_g];
						++_g;
						prevRef = ref;
						if(Object.prototype.hasOwnProperty.call(ref,callPart)) {
							ref = Reflect.field(ref,callPart);
						} else {
							ref = Reflect.getProperty(ref,callPart);
						}
						if(ref == null) {
							throw haxe_Exception.thrown(callPart + " not found");
						}
					}
					if(ref != null && Reflect.isFunction(ref)) {
						var paramValues = [];
						var _g = 0;
						while(_g < parsedCallParams.length) {
							var param = parsedCallParams[_g];
							++_g;
							var paramResult = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(param,context);
							paramValues.push(paramResult);
						}
						result = ref.apply(prevRef,paramValues);
					}
				}
			} else if(prop != null) {
				var trimmedProp = StringTools.trim(prop);
				if(trimmedProp.length > 0) {
					var propParts = trimmedProp.split(".");
					var propName = propParts.pop();
					var ref = context;
					var _g = 0;
					while(_g < propParts.length) {
						var propPart = propParts[_g];
						++_g;
						ref = Reflect.field(ref,propPart);
					}
					if(Object.prototype.hasOwnProperty.call(ref,propName)) {
						result = Reflect.field(ref,propName);
					} else {
						result = Reflect.getProperty(ref,propName);
					}
				}
			}
		}
	}
	if(r != null) {
		switch(operation._hx_index) {
		case 0:
			result += r;
			break;
		case 1:
			result -= r;
			break;
		case 2:
			result *= r;
			break;
		case 3:
			result /= r;
			break;
		case 4:
			result = result == r;
			break;
		case 5:
			result = result != r;
			break;
		case 6:
			result = result > r;
			break;
		case 7:
			result = result >= r;
			break;
		case 8:
			result = result < r;
			break;
		case 9:
			result = result <= r;
			break;
		case 10:
			result = result && r;
			break;
		case 11:
			result = result || r;
			break;
		}
	}
	return result;
};
haxe_ui_util_SimpleExpressionEvaluator.isNum = function(value) {
	var v = parseFloat(value);
	if(!isNaN(v)) {
		return isFinite(v);
	} else {
		return false;
	}
};
haxe_ui_util_SimpleExpressionEvaluator.isString = function(value) {
	if(StringTools.startsWith(value,"'") && StringTools.endsWith(value,"'")) {
		return true;
	}
	if(StringTools.startsWith(value,"\"") && StringTools.endsWith(value,"\"")) {
		return true;
	}
	return false;
};
haxe_ui_util_SimpleExpressionEvaluator.isBool = function(value) {
	value = value.toLowerCase();
	if(value != "true") {
		return value == "false";
	} else {
		return true;
	}
};
var haxe_ui_util_StringUtil = function() { };
$hxClasses["haxe.ui.util.StringUtil"] = haxe_ui_util_StringUtil;
haxe_ui_util_StringUtil.__name__ = "haxe.ui.util.StringUtil";
haxe_ui_util_StringUtil.uncapitalizeFirstLetter = function(s) {
	s = HxOverrides.substr(s,0,1).toLowerCase() + HxOverrides.substr(s,1,s.length);
	return s;
};
haxe_ui_util_StringUtil.capitalizeFirstLetter = function(s) {
	s = HxOverrides.substr(s,0,1).toUpperCase() + HxOverrides.substr(s,1,s.length);
	return s;
};
haxe_ui_util_StringUtil.capitalizeHyphens = function(s) {
	return haxe_ui_util_StringUtil.capitalizeDelim(s,"-");
};
haxe_ui_util_StringUtil.capitalizeDelim = function(s,d) {
	var r = s;
	var n = r.indexOf(d);
	while(n != -1) {
		var before = HxOverrides.substr(r,0,n);
		var after = HxOverrides.substr(r,n + 1,r.length);
		r = before + haxe_ui_util_StringUtil.capitalizeFirstLetter(after);
		n = r.indexOf(d,n + 1);
	}
	return r;
};
haxe_ui_util_StringUtil.toDashes = function(s,toLower) {
	if(toLower == null) {
		toLower = true;
	}
	var s1 = new EReg("([a-zA-Z])(?=[A-Z])","g").map(s,function(re) {
		return "" + re.matched(1) + "-";
	});
	if(toLower == true) {
		s1 = s1.toLowerCase();
	}
	return s1;
};
haxe_ui_util_StringUtil.replaceVars = function(s,params) {
	if(params != null) {
		var h = params.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			s = StringTools.replace(s,"${" + k + "}",params.h[k]);
		}
	}
	return s;
};
haxe_ui_util_StringUtil.rpad = function(s,count,c) {
	if(c == null) {
		c = " ";
	}
	var _g = 0;
	var _g1 = count;
	while(_g < _g1) {
		var i = _g++;
		s += c;
	}
	return s;
};
haxe_ui_util_StringUtil.padDecimal = function(v,precision) {
	var s = v == null ? "null" : "" + v;
	if(precision == null || precision <= 0) {
		return s;
	}
	var n = s.indexOf(".");
	if(n == -1) {
		n = s.length;
		s += ".";
	}
	var delta = precision - (s.length - n - 1);
	return haxe_ui_util_StringUtil.rpad(s,delta,"0");
};
haxe_ui_util_StringUtil.countTokens = function(s,token) {
	if(s == null || s == "") {
		return 0;
	}
	return s.split(token).length - 1;
};
var haxe_ui_util_StyleUtil = function() { };
$hxClasses["haxe.ui.util.StyleUtil"] = haxe_ui_util_StyleUtil;
haxe_ui_util_StyleUtil.__name__ = "haxe.ui.util.StyleUtil";
haxe_ui_util_StyleUtil.styleProperty2ComponentProperty = function(property) {
	return haxe_ui_util_StyleUtil.style2ComponentEReg.map(property,function(re) {
		return re.matched(1).toUpperCase();
	});
};
haxe_ui_util_StyleUtil.componentProperty2StyleProperty = function(property) {
	return haxe_ui_util_StyleUtil.component2StyleEReg.map(property,function(re) {
		return "-" + re.matched(1).toLowerCase();
	});
};
var haxe_ui_util_Timer = function(delay,callback) {
	haxe_ui_backend_TimerImpl.call(this,delay,callback);
};
$hxClasses["haxe.ui.util.Timer"] = haxe_ui_util_Timer;
haxe_ui_util_Timer.__name__ = "haxe.ui.util.Timer";
haxe_ui_util_Timer.delay = function(f,timeMs) {
	var t = null;
	t = new haxe_ui_util_Timer(timeMs,function() {
		t.stop();
		f();
	});
	return t;
};
haxe_ui_util_Timer.__super__ = haxe_ui_backend_TimerImpl;
haxe_ui_util_Timer.prototype = $extend(haxe_ui_backend_TimerImpl.prototype,{
	stop: function() {
		haxe_ui_backend_TimerImpl.prototype.stop.call(this);
	}
	,__class__: haxe_ui_util_Timer
});
var haxe_ui_util_TypeConverter = function() { };
$hxClasses["haxe.ui.util.TypeConverter"] = haxe_ui_util_TypeConverter;
haxe_ui_util_TypeConverter.__name__ = "haxe.ui.util.TypeConverter";
haxe_ui_util_TypeConverter.convertFrom = function(input) {
	var output = input;
	var _g = Type.typeof(input);
	if(_g._hx_index == 6) {
		if(_g.c == String) {
			var s = Std.string(input);
			if(s == "true" || s == "false") {
				output = s == "true";
			} else if(new EReg("^-?[0-9]*$","i").match(s == null ? "null" : "" + s)) {
				output = Std.parseInt(s);
			} else if(new EReg("^-?[0-9]*\\.[0-9]*$","i").match(s == null ? "null" : "" + s)) {
				output = parseFloat(s);
			}
		}
	}
	return output;
};
haxe_ui_util_TypeConverter.convertTo = function(input,type) {
	if(type == null) {
		return input;
	}
	switch(type.toLowerCase()) {
	case "bool":
		return Std.string(input) == "true";
	case "float":
		if(input == null) {
			return 0;
		}
		var r = parseFloat(Std.string(input));
		if(isNaN(r)) {
			return 0;
		}
		return r;
	case "int":
		if(input == null) {
			return 0;
		}
		var r = Std.parseInt(Std.string(input));
		if(r == null) {
			return 0;
		}
		return r;
	case "dynamic":case "scalemode":case "selectionmode":case "variant":
		return input;
	case "string":
		return Std.string(input);
	default:
	}
	return input;
};
var haxe_ui_util_VariantType = $hxEnums["haxe.ui.util.VariantType"] = { __ename__:"haxe.ui.util.VariantType",__constructs__:null
	,VT_Int: ($_=function(s) { return {_hx_index:0,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Int",$_.__params__ = ["s"],$_)
	,VT_Float: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Float",$_.__params__ = ["s"],$_)
	,VT_String: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_String",$_.__params__ = ["s"],$_)
	,VT_Bool: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Bool",$_.__params__ = ["s"],$_)
	,VT_Array: ($_=function(s) { return {_hx_index:4,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Array",$_.__params__ = ["s"],$_)
	,VT_DataSource: ($_=function(s) { return {_hx_index:5,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_DataSource",$_.__params__ = ["s"],$_)
	,VT_Component: ($_=function(s) { return {_hx_index:6,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Component",$_.__params__ = ["s"],$_)
	,VT_Date: ($_=function(s) { return {_hx_index:7,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Date",$_.__params__ = ["s"],$_)
	,VT_ImageData: ($_=function(s) { return {_hx_index:8,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_ImageData",$_.__params__ = ["s"],$_)
};
haxe_ui_util_VariantType.__constructs__ = [haxe_ui_util_VariantType.VT_Int,haxe_ui_util_VariantType.VT_Float,haxe_ui_util_VariantType.VT_String,haxe_ui_util_VariantType.VT_Bool,haxe_ui_util_VariantType.VT_Array,haxe_ui_util_VariantType.VT_DataSource,haxe_ui_util_VariantType.VT_Component,haxe_ui_util_VariantType.VT_Date,haxe_ui_util_VariantType.VT_ImageData];
haxe_ui_util_VariantType.__empty_constructs__ = [];
var haxe_ui_util_Variant = {};
haxe_ui_util_Variant.__properties__ = {get_isNull:"get_isNull",get_isDataSource:"get_isDataSource",get_isImageData:"get_isImageData",get_isComponent:"get_isComponent",get_isDate:"get_isDate",get_isArray:"get_isArray",get_isBool:"get_isBool",get_isNumber:"get_isNumber",get_isInt:"get_isInt",get_isFloat:"get_isFloat",get_isString:"get_isString"};
haxe_ui_util_Variant.fromString = function(s) {
	return haxe_ui_util_VariantType.VT_String(s);
};
haxe_ui_util_Variant.toString = function(this1) {
	if(this1 == null) {
		return null;
	}
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		if(s == null) {
			return "null";
		} else {
			return "" + s;
		}
		break;
	case 1:
		var s = this1.s;
		if(s == null) {
			return "null";
		} else {
			return "" + s;
		}
		break;
	case 2:
		var s = this1.s;
		return s;
	case 3:
		var s = this1.s;
		if(s == null) {
			return "null";
		} else {
			return "" + s;
		}
		break;
	case 4:
		var s = this1.s;
		return Std.string(s);
	case 5:
		var s = this1.s;
		if(s == null) {
			return null;
		} else {
			return "";
		}
		break;
	case 6:
		var s = this1.s;
		if(s == null) {
			return null;
		} else {
			return "";
		}
		break;
	case 7:
		var s = this1.s;
		return Std.string(s);
	case 8:
		var s = this1.s;
		if(s == null) {
			return null;
		} else {
			return "";
		}
		break;
	}
};
haxe_ui_util_Variant.get_isString = function(this1) {
	if(this1._hx_index == 2) {
		var _g = this1.s;
		return true;
	} else {
		return false;
	}
};
haxe_ui_util_Variant.fromFloat = function(s) {
	return haxe_ui_util_VariantType.VT_Float(s);
};
haxe_ui_util_Variant.toFloat = function(this1) {
	if(haxe_ui_util_Variant.get_isNull(this1)) {
		return null;
	}
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		return s;
	case 1:
		var s = this1.s;
		return s;
	default:
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.get_isFloat = function(this1) {
	if(this1._hx_index == 1) {
		var _g = this1.s;
		return true;
	} else {
		return false;
	}
};
haxe_ui_util_Variant.fromInt = function(s) {
	return haxe_ui_util_VariantType.VT_Int(s);
};
haxe_ui_util_Variant.toInt = function(this1) {
	if(haxe_ui_util_Variant.get_isNull(this1)) {
		return null;
	}
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		return s;
	case 1:
		var s = this1.s;
		return s | 0;
	default:
		throw haxe_Exception.thrown("Variant Type Error " + Std.string(this1));
	}
};
haxe_ui_util_Variant.get_isInt = function(this1) {
	if(this1._hx_index == 0) {
		var _g = this1.s;
		return true;
	} else {
		return false;
	}
};
haxe_ui_util_Variant.get_isNumber = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		return true;
	case 1:
		var _g = this1.s;
		return true;
	default:
		return false;
	}
};
haxe_ui_util_Variant.toNumber = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		return s;
	case 1:
		var s = this1.s;
		return s;
	default:
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.fromBool = function(s) {
	return haxe_ui_util_VariantType.VT_Bool(s);
};
haxe_ui_util_Variant.toBool = function(this1) {
	if(this1 == null) {
		return false;
	}
	switch(this1._hx_index) {
	case 2:
		var s = this1.s;
		return s == "true";
	case 3:
		var s = this1.s;
		return s;
	default:
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.get_isBool = function(this1) {
	if(this1._hx_index == 3) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromArray = function(s) {
	if(s == null) {
		return null;
	} else {
		return haxe_ui_util_VariantType.VT_Array(s);
	}
};
haxe_ui_util_Variant.toArray = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 4) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.get_isArray = function(this1) {
	if(this1._hx_index == 4) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromDate = function(s) {
	return haxe_ui_util_VariantType.VT_Date(s);
};
haxe_ui_util_Variant.toDate = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 7) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.get_isDate = function(this1) {
	if(this1._hx_index == 7) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromComponent = function(s) {
	return haxe_ui_util_VariantType.VT_Component(s);
};
haxe_ui_util_Variant.toComponent = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 6) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.get_isComponent = function(this1) {
	if(this1._hx_index == 6) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromImageData = function(s) {
	return haxe_ui_util_VariantType.VT_ImageData(s);
};
haxe_ui_util_Variant.toImageData = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 8) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.get_isImageData = function(this1) {
	if(this1._hx_index == 8) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromDataSource = function(s) {
	return haxe_ui_util_VariantType.VT_DataSource(s);
};
haxe_ui_util_Variant.toDataSource = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 5) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.get_isDataSource = function(this1) {
	if(this1._hx_index == 5) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.addFloat = function(lhs,rhs) {
	return lhs + haxe_ui_util_Variant.toNumber(rhs);
};
haxe_ui_util_Variant.addInt = function(lhs,rhs) {
	return lhs + haxe_ui_util_Variant.toInt(rhs);
};
haxe_ui_util_Variant.subtractFloat = function(lhs,rhs) {
	return lhs - haxe_ui_util_Variant.toNumber(rhs);
};
haxe_ui_util_Variant.subtractInt = function(lhs,rhs) {
	return lhs - haxe_ui_util_Variant.toInt(rhs);
};
haxe_ui_util_Variant.add = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.fromFloat(haxe_ui_util_Variant.toNumber(this1) + haxe_ui_util_Variant.toNumber(rhs));
	} else if(haxe_ui_util_Variant.get_isString(this1) && haxe_ui_util_Variant.get_isString(rhs)) {
		return haxe_ui_util_Variant.fromString(haxe_ui_util_Variant.toString(this1) + haxe_ui_util_Variant.toString(rhs));
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.postInc = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		var old = this1;
		this1 = haxe_ui_util_VariantType.VT_Float(haxe_ui_util_Variant.toNumber(this1) + 1);
		return old;
	} else {
		throw haxe_Exception.thrown("Variant operation error");
	}
};
haxe_ui_util_Variant.preInc = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		this1 = haxe_ui_util_VariantType.VT_Float(haxe_ui_util_Variant.toNumber(this1) + 1);
		return this1;
	} else {
		throw haxe_Exception.thrown("Variant operation error");
	}
};
haxe_ui_util_Variant.subtract = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.fromFloat(haxe_ui_util_Variant.toNumber(this1) - haxe_ui_util_Variant.toNumber(rhs));
	} else if(haxe_ui_util_Variant.get_isString(this1) && haxe_ui_util_Variant.get_isString(rhs)) {
		return haxe_ui_util_Variant.fromString(StringTools.replace(haxe_ui_util_Variant.toString(this1),haxe_ui_util_Variant.toString(rhs),""));
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.postDeinc = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		var old = this1;
		this1 = haxe_ui_util_VariantType.VT_Float(haxe_ui_util_Variant.toNumber(this1) - 1);
		return old;
	} else {
		throw haxe_Exception.thrown("Variant operation error");
	}
};
haxe_ui_util_Variant.preDeinc = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		this1 = haxe_ui_util_VariantType.VT_Float(haxe_ui_util_Variant.toNumber(this1) - 1);
		return this1;
	} else {
		throw haxe_Exception.thrown("Variant operation error");
	}
};
haxe_ui_util_Variant.multiply = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.fromFloat(haxe_ui_util_Variant.toNumber(this1) * haxe_ui_util_Variant.toNumber(rhs));
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.divide = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.fromFloat(haxe_ui_util_Variant.toNumber(this1) / haxe_ui_util_Variant.toNumber(rhs));
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.gt = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) > haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1)) {
		return haxe_ui_util_Variant.toString(this1) > haxe_ui_util_Variant.toString(rhs);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.gte = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) >= haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1)) {
		return haxe_ui_util_Variant.toString(this1) >= haxe_ui_util_Variant.toString(rhs);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.lt = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) < haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1)) {
		return haxe_ui_util_Variant.toString(this1) < haxe_ui_util_Variant.toString(rhs);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.lte = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) <= haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1)) {
		return haxe_ui_util_Variant.toString(this1) <= haxe_ui_util_Variant.toString(rhs);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.negate = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.fromFloat(-haxe_ui_util_Variant.toNumber(this1));
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.invert = function(this1) {
	if(haxe_ui_util_Variant.get_isBool(this1)) {
		var v = haxe_ui_util_Variant.toBool(this1);
		v = !v;
		return haxe_ui_util_Variant.fromBool(v);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.eq = function(this1,rhs) {
	if(haxe_ui_util_Variant.get_isNull(this1) && haxe_ui_util_Variant.get_isNull(rhs)) {
		return true;
	}
	if(haxe_ui_util_Variant.get_isNull(this1) && !haxe_ui_util_Variant.get_isNull(rhs)) {
		return false;
	}
	if(!haxe_ui_util_Variant.get_isNull(this1) && haxe_ui_util_Variant.get_isNull(rhs)) {
		return false;
	}
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) == haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isBool(this1) && haxe_ui_util_Variant.get_isBool(rhs)) {
		return haxe_ui_util_Variant.toBool(this1) == haxe_ui_util_Variant.toBool(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1) && haxe_ui_util_Variant.get_isString(rhs)) {
		return haxe_ui_util_Variant.toString(this1) == haxe_ui_util_Variant.toString(rhs);
	}
	return false;
};
haxe_ui_util_Variant.neq = function(this1,rhs) {
	return !haxe_ui_util_Variant.eq(this1,rhs);
};
haxe_ui_util_Variant.get_isNull = function(this1) {
	if(this1 == null) {
		return true;
	}
	return haxe_ui_util_Variant.toString(this1) == null;
};
haxe_ui_util_Variant.fromDynamic = function(r) {
	var v = null;
	if(r != null) {
		var unstringable = ((r) instanceof haxe_ui_core_Component) || ((r) instanceof HTMLImageElement) || ((r) instanceof Array) || ((r) instanceof haxe_ui_data_DataSource);
		if(unstringable == false) {
			var tmp;
			if(haxe_ui_util_Variant.containsOnlyDigits(r)) {
				var f = parseFloat(("" + Std.string(r)));
				tmp = isNaN(f) == false;
			} else {
				tmp = false;
			}
			if(tmp) {
				if(Std.string(r).indexOf(".") != -1) {
					v = haxe_ui_util_Variant.fromFloat(parseFloat(("" + Std.string(r))));
				} else {
					v = haxe_ui_util_Variant.fromInt(Std.parseInt("" + Std.string(r)));
				}
			} else if("" + Std.string(r) == "true" || Std.string(r) + "" == "false") {
				v = haxe_ui_util_Variant.fromBool("" + Std.string(r) == "true");
			} else if(typeof(r) == "string") {
				v = haxe_ui_util_Variant.fromString(js_Boot.__cast(r , String));
			} else {
				v = r;
			}
		} else if(((r) instanceof haxe_ui_core_Component)) {
			v = haxe_ui_util_Variant.fromComponent(js_Boot.__cast(r , haxe_ui_core_Component));
		} else if(((r) instanceof haxe_ui_data_DataSource)) {
			v = r;
		} else if(((r) instanceof Array)) {
			v = r;
		} else if(((r) instanceof Date)) {
			v = haxe_ui_util_Variant.fromDate(js_Boot.__cast(r , Date));
		} else if(((r) instanceof HTMLImageElement)) {
			v = haxe_ui_util_Variant.fromImageData(js_Boot.__cast(r , HTMLImageElement));
		} else {
			v = r;
		}
	}
	return v;
};
haxe_ui_util_Variant.containsOnlyDigits = function(s) {
	if(((s) instanceof haxe_ui_core_Component) || ((s) instanceof HTMLImageElement) || ((s) instanceof Array) || ((s) instanceof haxe_ui_data_DataSource)) {
		return false;
	}
	if(typeof(s) == "number" && ((s | 0) === s) || typeof(s) == "number") {
		return true;
	}
	var t = Std.string(s);
	var _g = 0;
	var _g1 = t.length;
	while(_g < _g1) {
		var i = _g++;
		var c = t.charAt(i);
		if(c != "0" && c != "1" && c != "2" && c != "3" && c != "4" && c != "5" && c != "6" && c != "7" && c != "8" && c != "9" && c != "." && c != "-") {
			return false;
		}
	}
	return true;
};
haxe_ui_util_Variant.toDynamic = function(v) {
	var d = v;
	if(v != null) {
		switch(v._hx_index) {
		case 0:
			var y = v.s;
			d = y;
			break;
		case 1:
			var y = v.s;
			d = y;
			break;
		case 2:
			var y = v.s;
			d = y;
			break;
		case 3:
			var y = v.s;
			d = y;
			break;
		case 4:
			var y = v.s;
			d = y;
			break;
		case 5:
			var y = v.s;
			d = y;
			break;
		case 6:
			var y = v.s;
			d = y;
			break;
		case 7:
			var y = v.s;
			d = y;
			break;
		case 8:
			var y = v.s;
			d = y;
			break;
		}
	}
	return d;
};
var haxe_ui_util_html5_FileSaver = function() {
	this._callback = null;
	this._link = null;
};
$hxClasses["haxe.ui.util.html5.FileSaver"] = haxe_ui_util_html5_FileSaver;
haxe_ui_util_html5_FileSaver.__name__ = "haxe.ui.util.html5.FileSaver";
haxe_ui_util_html5_FileSaver.prototype = {
	_link: null
	,_callback: null
	,saveText: function(fileName,text,callback) {
		if(fileName == null) {
			fileName = "";
		}
		this._callback = callback;
		var file = new Blob([text],{ type : "text/plain"});
		this._link = window.document.createElement("a");
		this._link.setAttribute("href",URL.createObjectURL(file));
		this._link.setAttribute("download",fileName);
		this._link.style.display = "none";
		window.document.body.appendChild(this._link);
		this._link.click();
		window.addEventListener("focus",$bind(this,this.onWindowFocus));
	}
	,saveBinary: function(fileName,bytes,callback) {
		if(fileName == null) {
			fileName = "";
		}
		this._callback = callback;
		var file = new Blob([bytes.b.bufferValue]);
		this._link = window.document.createElement("a");
		this._link.setAttribute("href",URL.createObjectURL(file));
		this._link.setAttribute("download",fileName);
		this._link.style.display = "none";
		window.document.body.appendChild(this._link);
		this._link.click();
		window.addEventListener("focus",$bind(this,this.onWindowFocus));
	}
	,onWindowFocus: function() {
		this.destroy();
		if(this._callback != null) {
			this._callback(true);
		}
	}
	,destroy: function() {
		if(this._link != null) {
			window.document.body.removeChild(this._link);
			URL.revokeObjectURL(this._link.href);
			this._link = null;
		}
		window.removeEventListener("focus",$bind(this,this.onWindowFocus));
	}
	,__class__: haxe_ui_util_html5_FileSaver
};
var haxe_ui_util_html5_ReadMode = function() { };
$hxClasses["haxe.ui.util.html5.ReadMode"] = haxe_ui_util_html5_ReadMode;
haxe_ui_util_html5_ReadMode.__name__ = "haxe.ui.util.html5.ReadMode";
var haxe_ui_util_html5_FileSelector = function() {
	this._hasChanged = false;
	this._readMode = "none";
};
$hxClasses["haxe.ui.util.html5.FileSelector"] = haxe_ui_util_html5_FileSelector;
haxe_ui_util_html5_FileSelector.__name__ = "haxe.ui.util.html5.FileSelector";
haxe_ui_util_html5_FileSelector.prototype = {
	_fileInput: null
	,_readMode: null
	,_callback: null
	,selectFile: function(callback,readMode,multiple,extensions) {
		if(multiple == null) {
			multiple = false;
		}
		if(readMode == null) {
			readMode = "none";
		}
		this._callback = callback;
		this._readMode = readMode;
		this.createFileInput(multiple,extensions);
		this._fileInput.click();
	}
	,_hasChanged: null
	,onFileInputChanged: function(e) {
		var _gthis = this;
		this._hasChanged = true;
		var infos = [];
		var files = [];
		var selectedFiles = e.target.files;
		var _g = 0;
		var _g1 = selectedFiles.length;
		while(_g < _g1) {
			var i = _g++;
			var selectedFile = selectedFiles[i];
			var info = { name : selectedFile.name, isBinary : false};
			infos.push(info);
			files.push(selectedFile);
		}
		if(this._readMode == "none") {
			if(this._callback != null) {
				this._callback(false,infos);
			}
		} else {
			this.readFileContents(infos.slice(),files,function() {
				_gthis._callback(false,infos);
			});
		}
		this.destroyFileInput();
	}
	,createFileInput: function(multiple,extensions) {
		if(multiple == null) {
			multiple = false;
		}
		this._hasChanged = false;
		window.addEventListener("focus",$bind(this,this.onWindowFocus));
		this._fileInput = window.document.createElement("input");
		this._fileInput.type = "file";
		var tmp = StringTools.replace(StringTools.replace(StringTools.replace(HxOverrides.dateStr(new Date()),"-","_"),":","_")," ","_");
		this._fileInput.id = "fileInput_" + tmp;
		this._fileInput.style.display = "none";
		this._fileInput.accept = this.buildAcceptString(extensions);
		if(multiple == true) {
			this._fileInput.multiple = true;
		}
		this._fileInput.onchange = $bind(this,this.onFileInputChanged);
		window.document.body.appendChild(this._fileInput);
	}
	,buildAcceptString: function(extensions) {
		var s = null;
		if(extensions != null && extensions.length > 0) {
			var arr = [];
			var _g = 0;
			while(_g < extensions.length) {
				var e = extensions[_g];
				++_g;
				var ext = e.extension;
				ext = StringTools.trim(ext);
				if(ext.length == 0) {
					continue;
				}
				var parts = ext.split(",");
				var _g1 = 0;
				while(_g1 < parts.length) {
					var p = parts[_g1];
					++_g1;
					p = StringTools.trim(p);
					if(p.length == 0) {
						continue;
					}
					arr.push("." + p);
				}
			}
			s = arr.join(",");
		}
		return s;
	}
	,readFileContents: function(infos,files,callback) {
		var _gthis = this;
		if(infos.length == 0) {
			callback();
			return;
		}
		var info = infos.shift();
		var file = files.shift();
		var reader = new FileReader();
		if(this._readMode == "text") {
			reader.readAsText(file,"UTF-8");
		} else if(this._readMode == "binary") {
			reader.readAsArrayBuffer(file);
		}
		reader.onload = function(readerEvent) {
			var result = readerEvent.target.result;
			if(_gthis._readMode == "text") {
				info.isBinary = false;
				info.text = result;
			} else if(_gthis._readMode == "binary") {
				info.isBinary = true;
				info.bytes = haxe_io_Bytes.ofData(result);
			}
			_gthis.readFileContents(infos,files,callback);
		};
	}
	,onWindowFocus: function(e) {
		var _gthis = this;
		haxe_ui_util_Timer.delay(function() {
			_gthis.destroyFileInput();
			if(_gthis._hasChanged == false) {
				if(_gthis._callback != null) {
					_gthis._callback(true,null);
				}
			}
		},200);
	}
	,destroyFileInput: function() {
		if(this._fileInput == null) {
			return;
		}
		window.removeEventListener("focus",$bind(this,this.onWindowFocus));
		this._fileInput.onchange = null;
		window.document.body.removeChild(this._fileInput);
		this._fileInput = null;
	}
	,__class__: haxe_ui_util_html5_FileSelector
};
var haxe_ui_validation_ValidationManager = function() {
	this._displayQueue = [];
	this._queue = [];
	this.isValidating = false;
	this.isPending = false;
};
$hxClasses["haxe.ui.validation.ValidationManager"] = haxe_ui_validation_ValidationManager;
haxe_ui_validation_ValidationManager.__name__ = "haxe.ui.validation.ValidationManager";
haxe_ui_validation_ValidationManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_validation_ValidationManager.get_instance = function() {
	if(haxe_ui_validation_ValidationManager.instance == null) {
		haxe_ui_validation_ValidationManager.instance = new haxe_ui_validation_ValidationManager();
	}
	return haxe_ui_validation_ValidationManager.instance;
};
haxe_ui_validation_ValidationManager.prototype = {
	isValidating: null
	,isPending: null
	,_queue: null
	,_displayQueue: null
	,_events: null
	,registerEvent: function(type,listener) {
		if(this._events == null) {
			this._events = new haxe_ui_util_EventMap();
		}
		this._events.add(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this._events == null) {
			this._events.remove(type,listener);
		}
	}
	,dispatch: function(event) {
		if(this._events != null) {
			this._events.invoke(event.type,event);
		}
	}
	,dispose: function() {
		this.isValidating = false;
		this._queue.splice(0,this._queue.length);
	}
	,add: function(object) {
		if(this._queue.indexOf(object) != -1) {
			return;
		}
		var queueLength = this._queue.length;
		if(this.isValidating == true) {
			var depth = object.get_depth();
			var min = 0;
			var max = queueLength;
			var i = 0;
			var otherDepth = 0;
			while(max > min) {
				i = min + max >>> 1;
				otherDepth = this._queue[i].get_depth();
				if(otherDepth == depth) {
					break;
				} else if(otherDepth < depth) {
					max = i;
				} else {
					min = i + 1;
				}
			}
			if(otherDepth >= depth) {
				++i;
			}
			this._queue.splice(i,0,object);
		} else {
			this._queue[queueLength] = object;
			if(this.isPending == false) {
				this.isPending = true;
				haxe_ui_Toolkit.callLater($bind(this,this.process));
			}
		}
	}
	,addDisplay: function(item,nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._displayQueue.indexOf(item) == -1) {
			this._displayQueue.push(item);
		}
		if(nextFrame == false) {
			this.process();
		}
	}
	,process: function() {
		if(this.isValidating == true || this.isPending == false) {
			return;
		}
		var queueLength = this._queue.length;
		if(queueLength == 0) {
			this.isPending = false;
			return;
		}
		this.isValidating = true;
		if(queueLength > 1) {
			this._queue.sort($bind(this,this.queueSortFunction));
		}
		this.dispatch(new haxe_ui_events_ValidationEvent("validationstart"));
		while(this._queue.length > 0) {
			var item = this._queue.shift();
			if(item.get_depth() < 0) {
				continue;
			}
			item.validateComponent();
		}
		var _g = 0;
		var _g1 = this._displayQueue.length;
		while(_g < _g1) {
			var i = _g++;
			var item = this._displayQueue[i];
			item.updateComponentDisplay();
		}
		this._displayQueue.splice(0,this._displayQueue.length);
		this.isValidating = false;
		this.isPending = false;
		this.dispatch(new haxe_ui_events_ValidationEvent("validationstop"));
	}
	,queueSortFunction: function(first,second) {
		var difference = second.get_depth() - first.get_depth();
		if(difference > 0) {
			return 1;
		} else if(difference < 0) {
			return -1;
		} else {
			return 0;
		}
	}
	,__class__: haxe_ui_validation_ValidationManager
};
var hx_strings_AnyAsString = {};
hx_strings_AnyAsString.fromBool = function(value) {
	if(value) {
		return "true";
	} else {
		return "false";
	}
};
hx_strings_AnyAsString.fromAny = function(value) {
	return Std.string(value);
};
var hx_strings__$Char_CharCaseMapper = function() {
	this.mapL2U = new haxe_ds_IntMap();
	this.mapU2L = new haxe_ds_IntMap();
	this._addCaseMapping(97,65);
	this._addCaseMapping(98,66);
	this._addCaseMapping(99,67);
	this._addCaseMapping(100,68);
	this._addCaseMapping(101,69);
	this._addCaseMapping(102,70);
	this._addCaseMapping(103,71);
	this._addCaseMapping(104,72);
	this._addCaseMapping(105,73);
	this._addCaseMapping(106,74);
	this._addCaseMapping(107,75);
	this._addCaseMapping(108,76);
	this._addCaseMapping(109,77);
	this._addCaseMapping(110,78);
	this._addCaseMapping(111,79);
	this._addCaseMapping(112,80);
	this._addCaseMapping(113,81);
	this._addCaseMapping(114,82);
	this._addCaseMapping(115,83);
	this._addCaseMapping(116,84);
	this._addCaseMapping(117,85);
	this._addCaseMapping(118,86);
	this._addCaseMapping(119,87);
	this._addCaseMapping(120,88);
	this._addCaseMapping(121,89);
	this._addCaseMapping(122,90);
	this._addCaseMapping(224,192);
	this._addCaseMapping(225,193);
	this._addCaseMapping(226,194);
	this._addCaseMapping(227,195);
	this._addCaseMapping(228,196);
	this._addCaseMapping(229,197);
	this._addCaseMapping(230,198);
	this._addCaseMapping(231,199);
	this._addCaseMapping(232,200);
	this._addCaseMapping(233,201);
	this._addCaseMapping(234,202);
	this._addCaseMapping(235,203);
	this._addCaseMapping(236,204);
	this._addCaseMapping(237,205);
	this._addCaseMapping(238,206);
	this._addCaseMapping(239,207);
	this._addCaseMapping(240,208);
	this._addCaseMapping(241,209);
	this._addCaseMapping(242,210);
	this._addCaseMapping(243,211);
	this._addCaseMapping(244,212);
	this._addCaseMapping(245,213);
	this._addCaseMapping(246,214);
	this._addCaseMapping(248,216);
	this._addCaseMapping(249,217);
	this._addCaseMapping(250,218);
	this._addCaseMapping(251,219);
	this._addCaseMapping(252,220);
	this._addCaseMapping(253,221);
	this._addCaseMapping(254,222);
	this._addCaseMapping(255,376);
	this._addCaseMapping(257,256);
	this._addCaseMapping(259,258);
	this._addCaseMapping(261,260);
	this._addCaseMapping(263,262);
	this._addCaseMapping(265,264);
	this._addCaseMapping(267,266);
	this._addCaseMapping(269,268);
	this._addCaseMapping(271,270);
	this._addCaseMapping(273,272);
	this._addCaseMapping(275,274);
	this._addCaseMapping(277,276);
	this._addCaseMapping(279,278);
	this._addCaseMapping(281,280);
	this._addCaseMapping(283,282);
	this._addCaseMapping(285,284);
	this._addCaseMapping(287,286);
	this._addCaseMapping(289,288);
	this._addCaseMapping(291,290);
	this._addCaseMapping(293,292);
	this._addCaseMapping(295,294);
	this._addCaseMapping(297,296);
	this._addCaseMapping(299,298);
	this._addCaseMapping(301,300);
	this._addCaseMapping(303,302);
	this._addCaseMapping(305,73);
	this._addCaseMapping(307,306);
	this._addCaseMapping(309,308);
	this._addCaseMapping(311,310);
	this._addCaseMapping(314,313);
	this._addCaseMapping(316,315);
	this._addCaseMapping(318,317);
	this._addCaseMapping(320,319);
	this._addCaseMapping(322,321);
	this._addCaseMapping(324,323);
	this._addCaseMapping(326,325);
	this._addCaseMapping(328,327);
	this._addCaseMapping(331,330);
	this._addCaseMapping(333,332);
	this._addCaseMapping(335,334);
	this._addCaseMapping(337,336);
	this._addCaseMapping(339,338);
	this._addCaseMapping(341,340);
	this._addCaseMapping(343,342);
	this._addCaseMapping(345,344);
	this._addCaseMapping(347,346);
	this._addCaseMapping(349,348);
	this._addCaseMapping(351,350);
	this._addCaseMapping(353,352);
	this._addCaseMapping(355,354);
	this._addCaseMapping(357,356);
	this._addCaseMapping(359,358);
	this._addCaseMapping(361,360);
	this._addCaseMapping(363,362);
	this._addCaseMapping(365,364);
	this._addCaseMapping(367,366);
	this._addCaseMapping(369,368);
	this._addCaseMapping(371,370);
	this._addCaseMapping(373,372);
	this._addCaseMapping(375,374);
	this._addCaseMapping(378,377);
	this._addCaseMapping(380,379);
	this._addCaseMapping(382,381);
	this._addCaseMapping(387,386);
	this._addCaseMapping(389,388);
	this._addCaseMapping(392,391);
	this._addCaseMapping(396,395);
	this._addCaseMapping(402,401);
	this._addCaseMapping(409,408);
	this._addCaseMapping(417,416);
	this._addCaseMapping(419,418);
	this._addCaseMapping(421,420);
	this._addCaseMapping(424,423);
	this._addCaseMapping(429,428);
	this._addCaseMapping(432,431);
	this._addCaseMapping(436,435);
	this._addCaseMapping(438,437);
	this._addCaseMapping(441,440);
	this._addCaseMapping(445,444);
	this._addCaseMapping(454,452);
	this._addCaseMapping(457,455);
	this._addCaseMapping(460,458);
	this._addCaseMapping(462,461);
	this._addCaseMapping(464,463);
	this._addCaseMapping(466,465);
	this._addCaseMapping(468,467);
	this._addCaseMapping(470,469);
	this._addCaseMapping(472,471);
	this._addCaseMapping(474,473);
	this._addCaseMapping(476,475);
	this._addCaseMapping(479,478);
	this._addCaseMapping(481,480);
	this._addCaseMapping(483,482);
	this._addCaseMapping(485,484);
	this._addCaseMapping(487,486);
	this._addCaseMapping(489,488);
	this._addCaseMapping(491,490);
	this._addCaseMapping(493,492);
	this._addCaseMapping(495,494);
	this._addCaseMapping(499,497);
	this._addCaseMapping(501,500);
	this._addCaseMapping(507,506);
	this._addCaseMapping(509,508);
	this._addCaseMapping(511,510);
	this._addCaseMapping(513,512);
	this._addCaseMapping(515,514);
	this._addCaseMapping(517,516);
	this._addCaseMapping(519,518);
	this._addCaseMapping(521,520);
	this._addCaseMapping(523,522);
	this._addCaseMapping(525,524);
	this._addCaseMapping(527,526);
	this._addCaseMapping(529,528);
	this._addCaseMapping(531,530);
	this._addCaseMapping(533,532);
	this._addCaseMapping(535,534);
	this._addCaseMapping(595,385);
	this._addCaseMapping(596,390);
	this._addCaseMapping(599,394);
	this._addCaseMapping(600,398);
	this._addCaseMapping(601,399);
	this._addCaseMapping(603,400);
	this._addCaseMapping(608,403);
	this._addCaseMapping(611,404);
	this._addCaseMapping(616,407);
	this._addCaseMapping(617,406);
	this._addCaseMapping(623,412);
	this._addCaseMapping(626,413);
	this._addCaseMapping(629,415);
	this._addCaseMapping(643,425);
	this._addCaseMapping(648,430);
	this._addCaseMapping(650,433);
	this._addCaseMapping(651,434);
	this._addCaseMapping(658,439);
	this._addCaseMapping(924,181);
	this._addCaseMapping(940,902);
	this._addCaseMapping(941,904);
	this._addCaseMapping(942,905);
	this._addCaseMapping(943,906);
	this._addCaseMapping(945,913);
	this._addCaseMapping(946,914);
	this._addCaseMapping(947,915);
	this._addCaseMapping(948,916);
	this._addCaseMapping(949,917);
	this._addCaseMapping(950,918);
	this._addCaseMapping(951,919);
	this._addCaseMapping(952,920);
	this._addCaseMapping(953,921);
	this._addCaseMapping(954,922);
	this._addCaseMapping(955,923);
	this._addCaseMapping(956,924);
	this._addCaseMapping(957,925);
	this._addCaseMapping(958,926);
	this._addCaseMapping(959,927);
	this._addCaseMapping(960,928);
	this._addCaseMapping(961,929);
	this._addCaseMapping(963,931);
	this._addCaseMapping(964,932);
	this._addCaseMapping(965,933);
	this._addCaseMapping(966,934);
	this._addCaseMapping(967,935);
	this._addCaseMapping(968,936);
	this._addCaseMapping(969,937);
	this._addCaseMapping(970,938);
	this._addCaseMapping(971,939);
	this._addCaseMapping(972,908);
	this._addCaseMapping(973,910);
	this._addCaseMapping(974,911);
	this._addCaseMapping(995,994);
	this._addCaseMapping(997,996);
	this._addCaseMapping(999,998);
	this._addCaseMapping(1001,1000);
	this._addCaseMapping(1003,1002);
	this._addCaseMapping(1005,1004);
	this._addCaseMapping(1007,1006);
	this._addCaseMapping(1072,1040);
	this._addCaseMapping(1073,1041);
	this._addCaseMapping(1074,1042);
	this._addCaseMapping(1075,1043);
	this._addCaseMapping(1076,1044);
	this._addCaseMapping(1077,1045);
	this._addCaseMapping(1078,1046);
	this._addCaseMapping(1079,1047);
	this._addCaseMapping(1080,1048);
	this._addCaseMapping(1081,1049);
	this._addCaseMapping(1082,1050);
	this._addCaseMapping(1083,1051);
	this._addCaseMapping(1084,1052);
	this._addCaseMapping(1085,1053);
	this._addCaseMapping(1086,1054);
	this._addCaseMapping(1087,1055);
	this._addCaseMapping(1088,1056);
	this._addCaseMapping(1089,1057);
	this._addCaseMapping(1090,1058);
	this._addCaseMapping(1091,1059);
	this._addCaseMapping(1092,1060);
	this._addCaseMapping(1093,1061);
	this._addCaseMapping(1094,1062);
	this._addCaseMapping(1095,1063);
	this._addCaseMapping(1096,1064);
	this._addCaseMapping(1097,1065);
	this._addCaseMapping(1098,1066);
	this._addCaseMapping(1099,1067);
	this._addCaseMapping(1100,1068);
	this._addCaseMapping(1101,1069);
	this._addCaseMapping(1102,1070);
	this._addCaseMapping(1103,1071);
	this._addCaseMapping(1105,1025);
	this._addCaseMapping(1106,1026);
	this._addCaseMapping(1107,1027);
	this._addCaseMapping(1108,1028);
	this._addCaseMapping(1109,1029);
	this._addCaseMapping(1110,1030);
	this._addCaseMapping(1111,1031);
	this._addCaseMapping(1112,1032);
	this._addCaseMapping(1113,1033);
	this._addCaseMapping(1114,1034);
	this._addCaseMapping(1115,1035);
	this._addCaseMapping(1116,1036);
	this._addCaseMapping(1118,1038);
	this._addCaseMapping(1119,1039);
	this._addCaseMapping(1121,1120);
	this._addCaseMapping(1123,1122);
	this._addCaseMapping(1125,1124);
	this._addCaseMapping(1127,1126);
	this._addCaseMapping(1129,1128);
	this._addCaseMapping(1131,1130);
	this._addCaseMapping(1133,1132);
	this._addCaseMapping(1135,1134);
	this._addCaseMapping(1137,1136);
	this._addCaseMapping(1139,1138);
	this._addCaseMapping(1141,1140);
	this._addCaseMapping(1143,1142);
	this._addCaseMapping(1145,1144);
	this._addCaseMapping(1147,1146);
	this._addCaseMapping(1149,1148);
	this._addCaseMapping(1151,1150);
	this._addCaseMapping(1153,1152);
	this._addCaseMapping(1169,1168);
	this._addCaseMapping(1171,1170);
	this._addCaseMapping(1173,1172);
	this._addCaseMapping(1175,1174);
	this._addCaseMapping(1177,1176);
	this._addCaseMapping(1179,1178);
	this._addCaseMapping(1181,1180);
	this._addCaseMapping(1183,1182);
	this._addCaseMapping(1185,1184);
	this._addCaseMapping(1187,1186);
	this._addCaseMapping(1189,1188);
	this._addCaseMapping(1191,1190);
	this._addCaseMapping(1193,1192);
	this._addCaseMapping(1195,1194);
	this._addCaseMapping(1197,1196);
	this._addCaseMapping(1199,1198);
	this._addCaseMapping(1201,1200);
	this._addCaseMapping(1203,1202);
	this._addCaseMapping(1205,1204);
	this._addCaseMapping(1207,1206);
	this._addCaseMapping(1209,1208);
	this._addCaseMapping(1211,1210);
	this._addCaseMapping(1213,1212);
	this._addCaseMapping(1215,1214);
	this._addCaseMapping(1218,1217);
	this._addCaseMapping(1220,1219);
	this._addCaseMapping(1224,1223);
	this._addCaseMapping(1228,1227);
	this._addCaseMapping(1233,1232);
	this._addCaseMapping(1235,1234);
	this._addCaseMapping(1237,1236);
	this._addCaseMapping(1239,1238);
	this._addCaseMapping(1241,1240);
	this._addCaseMapping(1243,1242);
	this._addCaseMapping(1245,1244);
	this._addCaseMapping(1247,1246);
	this._addCaseMapping(1249,1248);
	this._addCaseMapping(1251,1250);
	this._addCaseMapping(1253,1252);
	this._addCaseMapping(1255,1254);
	this._addCaseMapping(1257,1256);
	this._addCaseMapping(1259,1258);
	this._addCaseMapping(1263,1262);
	this._addCaseMapping(1265,1264);
	this._addCaseMapping(1267,1266);
	this._addCaseMapping(1269,1268);
	this._addCaseMapping(1273,1272);
	this._addCaseMapping(1377,1329);
	this._addCaseMapping(1378,1330);
	this._addCaseMapping(1379,1331);
	this._addCaseMapping(1380,1332);
	this._addCaseMapping(1381,1333);
	this._addCaseMapping(1382,1334);
	this._addCaseMapping(1383,1335);
	this._addCaseMapping(1384,1336);
	this._addCaseMapping(1385,1337);
	this._addCaseMapping(1386,1338);
	this._addCaseMapping(1387,1339);
	this._addCaseMapping(1388,1340);
	this._addCaseMapping(1389,1341);
	this._addCaseMapping(1390,1342);
	this._addCaseMapping(1391,1343);
	this._addCaseMapping(1392,1344);
	this._addCaseMapping(1393,1345);
	this._addCaseMapping(1394,1346);
	this._addCaseMapping(1395,1347);
	this._addCaseMapping(1396,1348);
	this._addCaseMapping(1397,1349);
	this._addCaseMapping(1398,1350);
	this._addCaseMapping(1399,1351);
	this._addCaseMapping(1400,1352);
	this._addCaseMapping(1401,1353);
	this._addCaseMapping(1402,1354);
	this._addCaseMapping(1403,1355);
	this._addCaseMapping(1404,1356);
	this._addCaseMapping(1405,1357);
	this._addCaseMapping(1406,1358);
	this._addCaseMapping(1407,1359);
	this._addCaseMapping(1408,1360);
	this._addCaseMapping(1409,1361);
	this._addCaseMapping(1410,1362);
	this._addCaseMapping(1411,1363);
	this._addCaseMapping(1412,1364);
	this._addCaseMapping(1413,1365);
	this._addCaseMapping(1414,1366);
	this._addCaseMapping(4304,4256);
	this._addCaseMapping(4305,4257);
	this._addCaseMapping(4306,4258);
	this._addCaseMapping(4307,4259);
	this._addCaseMapping(4308,4260);
	this._addCaseMapping(4309,4261);
	this._addCaseMapping(4310,4262);
	this._addCaseMapping(4311,4263);
	this._addCaseMapping(4312,4264);
	this._addCaseMapping(4313,4265);
	this._addCaseMapping(4314,4266);
	this._addCaseMapping(4315,4267);
	this._addCaseMapping(4316,4268);
	this._addCaseMapping(4317,4269);
	this._addCaseMapping(4318,4270);
	this._addCaseMapping(4319,4271);
	this._addCaseMapping(4320,4272);
	this._addCaseMapping(4321,4273);
	this._addCaseMapping(4322,4274);
	this._addCaseMapping(4323,4275);
	this._addCaseMapping(4324,4276);
	this._addCaseMapping(4325,4277);
	this._addCaseMapping(4326,4278);
	this._addCaseMapping(4327,4279);
	this._addCaseMapping(4328,4280);
	this._addCaseMapping(4329,4281);
	this._addCaseMapping(4330,4282);
	this._addCaseMapping(4331,4283);
	this._addCaseMapping(4332,4284);
	this._addCaseMapping(4333,4285);
	this._addCaseMapping(4334,4286);
	this._addCaseMapping(4335,4287);
	this._addCaseMapping(4336,4288);
	this._addCaseMapping(4337,4289);
	this._addCaseMapping(4338,4290);
	this._addCaseMapping(4339,4291);
	this._addCaseMapping(4340,4292);
	this._addCaseMapping(4341,4293);
	this._addCaseMapping(7681,7680);
	this._addCaseMapping(7683,7682);
	this._addCaseMapping(7685,7684);
	this._addCaseMapping(7687,7686);
	this._addCaseMapping(7689,7688);
	this._addCaseMapping(7691,7690);
	this._addCaseMapping(7693,7692);
	this._addCaseMapping(7695,7694);
	this._addCaseMapping(7697,7696);
	this._addCaseMapping(7699,7698);
	this._addCaseMapping(7701,7700);
	this._addCaseMapping(7703,7702);
	this._addCaseMapping(7705,7704);
	this._addCaseMapping(7707,7706);
	this._addCaseMapping(7709,7708);
	this._addCaseMapping(7711,7710);
	this._addCaseMapping(7713,7712);
	this._addCaseMapping(7715,7714);
	this._addCaseMapping(7717,7716);
	this._addCaseMapping(7719,7718);
	this._addCaseMapping(7721,7720);
	this._addCaseMapping(7723,7722);
	this._addCaseMapping(7725,7724);
	this._addCaseMapping(7727,7726);
	this._addCaseMapping(7729,7728);
	this._addCaseMapping(7731,7730);
	this._addCaseMapping(7733,7732);
	this._addCaseMapping(7735,7734);
	this._addCaseMapping(7737,7736);
	this._addCaseMapping(7739,7738);
	this._addCaseMapping(7741,7740);
	this._addCaseMapping(7743,7742);
	this._addCaseMapping(7745,7744);
	this._addCaseMapping(7747,7746);
	this._addCaseMapping(7749,7748);
	this._addCaseMapping(7751,7750);
	this._addCaseMapping(7753,7752);
	this._addCaseMapping(7755,7754);
	this._addCaseMapping(7757,7756);
	this._addCaseMapping(7759,7758);
	this._addCaseMapping(7761,7760);
	this._addCaseMapping(7763,7762);
	this._addCaseMapping(7765,7764);
	this._addCaseMapping(7767,7766);
	this._addCaseMapping(7769,7768);
	this._addCaseMapping(7771,7770);
	this._addCaseMapping(7773,7772);
	this._addCaseMapping(7775,7774);
	this._addCaseMapping(7777,7776);
	this._addCaseMapping(7779,7778);
	this._addCaseMapping(7781,7780);
	this._addCaseMapping(7783,7782);
	this._addCaseMapping(7785,7784);
	this._addCaseMapping(7787,7786);
	this._addCaseMapping(7789,7788);
	this._addCaseMapping(7791,7790);
	this._addCaseMapping(7793,7792);
	this._addCaseMapping(7795,7794);
	this._addCaseMapping(7797,7796);
	this._addCaseMapping(7799,7798);
	this._addCaseMapping(7801,7800);
	this._addCaseMapping(7803,7802);
	this._addCaseMapping(7805,7804);
	this._addCaseMapping(7807,7806);
	this._addCaseMapping(7809,7808);
	this._addCaseMapping(7811,7810);
	this._addCaseMapping(7813,7812);
	this._addCaseMapping(7815,7814);
	this._addCaseMapping(7817,7816);
	this._addCaseMapping(7819,7818);
	this._addCaseMapping(7821,7820);
	this._addCaseMapping(7823,7822);
	this._addCaseMapping(7825,7824);
	this._addCaseMapping(7827,7826);
	this._addCaseMapping(7829,7828);
	this._addCaseMapping(7841,7840);
	this._addCaseMapping(7843,7842);
	this._addCaseMapping(7845,7844);
	this._addCaseMapping(7847,7846);
	this._addCaseMapping(7849,7848);
	this._addCaseMapping(7851,7850);
	this._addCaseMapping(7853,7852);
	this._addCaseMapping(7855,7854);
	this._addCaseMapping(7857,7856);
	this._addCaseMapping(7859,7858);
	this._addCaseMapping(7861,7860);
	this._addCaseMapping(7863,7862);
	this._addCaseMapping(7865,7864);
	this._addCaseMapping(7867,7866);
	this._addCaseMapping(7869,7868);
	this._addCaseMapping(7871,7870);
	this._addCaseMapping(7873,7872);
	this._addCaseMapping(7875,7874);
	this._addCaseMapping(7877,7876);
	this._addCaseMapping(7879,7878);
	this._addCaseMapping(7881,7880);
	this._addCaseMapping(7883,7882);
	this._addCaseMapping(7885,7884);
	this._addCaseMapping(7887,7886);
	this._addCaseMapping(7889,7888);
	this._addCaseMapping(7891,7890);
	this._addCaseMapping(7893,7892);
	this._addCaseMapping(7895,7894);
	this._addCaseMapping(7897,7896);
	this._addCaseMapping(7899,7898);
	this._addCaseMapping(7901,7900);
	this._addCaseMapping(7903,7902);
	this._addCaseMapping(7905,7904);
	this._addCaseMapping(7907,7906);
	this._addCaseMapping(7909,7908);
	this._addCaseMapping(7911,7910);
	this._addCaseMapping(7913,7912);
	this._addCaseMapping(7915,7914);
	this._addCaseMapping(7917,7916);
	this._addCaseMapping(7919,7918);
	this._addCaseMapping(7921,7920);
	this._addCaseMapping(7923,7922);
	this._addCaseMapping(7925,7924);
	this._addCaseMapping(7927,7926);
	this._addCaseMapping(7929,7928);
	this._addCaseMapping(7936,7944);
	this._addCaseMapping(7937,7945);
	this._addCaseMapping(7938,7946);
	this._addCaseMapping(7939,7947);
	this._addCaseMapping(7940,7948);
	this._addCaseMapping(7941,7949);
	this._addCaseMapping(7942,7950);
	this._addCaseMapping(7943,7951);
	this._addCaseMapping(7952,7960);
	this._addCaseMapping(7953,7961);
	this._addCaseMapping(7954,7962);
	this._addCaseMapping(7955,7963);
	this._addCaseMapping(7956,7964);
	this._addCaseMapping(7957,7965);
	this._addCaseMapping(7968,7976);
	this._addCaseMapping(7969,7977);
	this._addCaseMapping(7970,7978);
	this._addCaseMapping(7971,7979);
	this._addCaseMapping(7972,7980);
	this._addCaseMapping(7973,7981);
	this._addCaseMapping(7974,7982);
	this._addCaseMapping(7975,7983);
	this._addCaseMapping(7984,7992);
	this._addCaseMapping(7985,7993);
	this._addCaseMapping(7986,7994);
	this._addCaseMapping(7987,7995);
	this._addCaseMapping(7988,7996);
	this._addCaseMapping(7989,7997);
	this._addCaseMapping(7990,7998);
	this._addCaseMapping(7991,7999);
	this._addCaseMapping(8000,8008);
	this._addCaseMapping(8001,8009);
	this._addCaseMapping(8002,8010);
	this._addCaseMapping(8003,8011);
	this._addCaseMapping(8004,8012);
	this._addCaseMapping(8005,8013);
	this._addCaseMapping(8017,8025);
	this._addCaseMapping(8019,8027);
	this._addCaseMapping(8021,8029);
	this._addCaseMapping(8023,8031);
	this._addCaseMapping(8032,8040);
	this._addCaseMapping(8033,8041);
	this._addCaseMapping(8034,8042);
	this._addCaseMapping(8035,8043);
	this._addCaseMapping(8036,8044);
	this._addCaseMapping(8037,8045);
	this._addCaseMapping(8038,8046);
	this._addCaseMapping(8039,8047);
	this._addCaseMapping(8064,8072);
	this._addCaseMapping(8065,8073);
	this._addCaseMapping(8066,8074);
	this._addCaseMapping(8067,8075);
	this._addCaseMapping(8068,8076);
	this._addCaseMapping(8069,8077);
	this._addCaseMapping(8070,8078);
	this._addCaseMapping(8071,8079);
	this._addCaseMapping(8080,8088);
	this._addCaseMapping(8081,8089);
	this._addCaseMapping(8082,8090);
	this._addCaseMapping(8083,8091);
	this._addCaseMapping(8084,8092);
	this._addCaseMapping(8085,8093);
	this._addCaseMapping(8086,8094);
	this._addCaseMapping(8087,8095);
	this._addCaseMapping(8096,8104);
	this._addCaseMapping(8097,8105);
	this._addCaseMapping(8098,8106);
	this._addCaseMapping(8099,8107);
	this._addCaseMapping(8100,8108);
	this._addCaseMapping(8101,8109);
	this._addCaseMapping(8102,8110);
	this._addCaseMapping(8103,8111);
	this._addCaseMapping(8112,8120);
	this._addCaseMapping(8113,8121);
	this._addCaseMapping(8144,8152);
	this._addCaseMapping(8145,8153);
	this._addCaseMapping(8160,8168);
	this._addCaseMapping(8161,8169);
	this._addCaseMapping(9424,9398);
	this._addCaseMapping(9425,9399);
	this._addCaseMapping(9426,9400);
	this._addCaseMapping(9427,9401);
	this._addCaseMapping(9428,9402);
	this._addCaseMapping(9429,9403);
	this._addCaseMapping(9430,9404);
	this._addCaseMapping(9431,9405);
	this._addCaseMapping(9432,9406);
	this._addCaseMapping(9433,9407);
	this._addCaseMapping(9434,9408);
	this._addCaseMapping(9435,9409);
	this._addCaseMapping(9436,9410);
	this._addCaseMapping(9437,9411);
	this._addCaseMapping(9438,9412);
	this._addCaseMapping(9439,9413);
	this._addCaseMapping(9440,9414);
	this._addCaseMapping(9441,9415);
	this._addCaseMapping(9442,9416);
	this._addCaseMapping(9443,9417);
	this._addCaseMapping(9444,9418);
	this._addCaseMapping(9445,9419);
	this._addCaseMapping(9446,9420);
	this._addCaseMapping(9447,9421);
	this._addCaseMapping(9448,9422);
	this._addCaseMapping(9449,9423);
	this._addCaseMapping(65345,65313);
	this._addCaseMapping(65346,65314);
	this._addCaseMapping(65347,65315);
	this._addCaseMapping(65348,65316);
	this._addCaseMapping(65349,65317);
	this._addCaseMapping(65350,65318);
	this._addCaseMapping(65351,65319);
	this._addCaseMapping(65352,65320);
	this._addCaseMapping(65353,65321);
	this._addCaseMapping(65354,65322);
	this._addCaseMapping(65355,65323);
	this._addCaseMapping(65356,65324);
	this._addCaseMapping(65357,65325);
	this._addCaseMapping(65358,65326);
	this._addCaseMapping(65359,65327);
	this._addCaseMapping(65360,65328);
	this._addCaseMapping(65361,65329);
	this._addCaseMapping(65362,65330);
	this._addCaseMapping(65363,65331);
	this._addCaseMapping(65364,65332);
	this._addCaseMapping(65365,65333);
	this._addCaseMapping(65366,65334);
	this._addCaseMapping(65367,65335);
	this._addCaseMapping(65368,65336);
	this._addCaseMapping(65369,65337);
	this._addCaseMapping(65370,65338);
};
$hxClasses["hx.strings._Char.CharCaseMapper"] = hx_strings__$Char_CharCaseMapper;
hx_strings__$Char_CharCaseMapper.__name__ = "hx.strings._Char.CharCaseMapper";
hx_strings__$Char_CharCaseMapper.prototype = {
	mapU2L: null
	,mapL2U: null
	,_addCaseMapping: function(lowerChar,upperChar) {
		if(!this.mapU2L.h.hasOwnProperty(upperChar)) {
			this.mapU2L.h[upperChar] = lowerChar;
		}
		if(!this.mapL2U.h.hasOwnProperty(lowerChar)) {
			this.mapL2U.h[lowerChar] = upperChar;
		}
	}
	,isLowerCase: function(ch) {
		return this.mapL2U.h.hasOwnProperty(ch);
	}
	,isUpperCase: function(ch) {
		return this.mapU2L.h.hasOwnProperty(ch);
	}
	,toLowerCase: function(ch) {
		var lowerChar = this.mapU2L.h[ch];
		if(lowerChar == null) {
			return ch;
		} else {
			return lowerChar;
		}
	}
	,toUpperCase: function(ch) {
		var upperChar = this.mapL2U.h[ch];
		if(upperChar == null) {
			return ch;
		} else {
			return upperChar;
		}
	}
	,__class__: hx_strings__$Char_CharCaseMapper
};
var hx_strings_Char = {};
hx_strings_Char.fromString = function(str) {
	return hx_strings_Strings.charCodeAt8(str,0);
};
hx_strings_Char.of = function(ch) {
	return ch;
};
hx_strings_Char.op_plus_string = function(ch,other) {
	return String.fromCodePoint(ch) + other;
};
hx_strings_Char.op_plus_string2 = function(str,ch) {
	return str + String.fromCodePoint(ch);
};
hx_strings_Char.op_plus = function(ch,other) {
	return ch + other;
};
hx_strings_Char.isAscii = function(this1) {
	if(this1 > -1) {
		return this1 < 128;
	} else {
		return false;
	}
};
hx_strings_Char.isAsciiAlpha = function(this1) {
	if(!(this1 > 64 && this1 < 91)) {
		if(this1 > 96) {
			return this1 < 123;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
hx_strings_Char.isAsciiAlphanumeric = function(this1) {
	if(!(this1 > 64 && this1 < 91 || this1 > 96 && this1 < 123)) {
		if(this1 > 47) {
			return this1 < 58;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
hx_strings_Char.isAsciiControl = function(this1) {
	if(!(this1 > -1 && this1 < 32)) {
		return this1 == 127;
	} else {
		return true;
	}
};
hx_strings_Char.isAsciiPrintable = function(this1) {
	if(this1 > 31) {
		return this1 < 127;
	} else {
		return false;
	}
};
hx_strings_Char.isDigit = function(this1) {
	if(this1 > 47) {
		return this1 < 58;
	} else {
		return false;
	}
};
hx_strings_Char.isEOF = function(this1) {
	return this1 != this1;
};
hx_strings_Char.isSpace = function(this1) {
	return this1 == 32;
};
hx_strings_Char.isUTF8 = function(this1) {
	if(this1 > -1) {
		return this1 < 1114112;
	} else {
		return false;
	}
};
hx_strings_Char.isWhitespace = function(this1) {
	if(!(this1 > 8 && this1 < 14)) {
		return this1 == 32;
	} else {
		return true;
	}
};
hx_strings_Char.isLowerCase = function(this1) {
	return hx_strings_Char.CHAR_CASE_MAPPER.mapL2U.h.hasOwnProperty(this1);
};
hx_strings_Char.isUpperCase = function(this1) {
	return hx_strings_Char.CHAR_CASE_MAPPER.mapU2L.h.hasOwnProperty(this1);
};
hx_strings_Char.toLowerCase = function(this1) {
	var lowerChar = hx_strings_Char.CHAR_CASE_MAPPER.mapU2L.h[this1];
	if(lowerChar == null) {
		return this1;
	} else {
		return lowerChar;
	}
};
hx_strings_Char.toUpperCase = function(this1) {
	var upperChar = hx_strings_Char.CHAR_CASE_MAPPER.mapL2U.h[this1];
	if(upperChar == null) {
		return this1;
	} else {
		return upperChar;
	}
};
hx_strings_Char.toInt = function(this1) {
	return this1;
};
hx_strings_Char.toString = function(this1) {
	return String.fromCodePoint(this1);
};
var hx_strings_CharIterator = function(prevBufferSize) {
	this.prevBufferNextIdx = -1;
	this.prevBufferPrevIdx = -1;
	this.currChar = -1;
	this.col = 0;
	this.line = 0;
	this.index = -1;
	var tmp;
	if(prevBufferSize > 0) {
		var this1 = new hx_strings_internal__$RingBuffer_RingBufferImpl(prevBufferSize + 1);
		tmp = this1;
	} else {
		tmp = null;
	}
	this.prevBuffer = tmp;
};
$hxClasses["hx.strings.CharIterator"] = hx_strings_CharIterator;
hx_strings_CharIterator.__name__ = "hx.strings.CharIterator";
hx_strings_CharIterator.fromString = function(chars,prevBufferSize) {
	if(prevBufferSize == null) {
		prevBufferSize = 0;
	}
	if(chars == null) {
		return hx_strings__$CharIterator_NullCharIterator.INSTANCE;
	}
	return new hx_strings__$CharIterator_StringCharIterator(chars,prevBufferSize);
};
hx_strings_CharIterator.fromArray = function(chars,prevBufferSize) {
	if(prevBufferSize == null) {
		prevBufferSize = 0;
	}
	if(chars == null) {
		return hx_strings__$CharIterator_NullCharIterator.INSTANCE;
	}
	return new hx_strings__$CharIterator_ArrayCharIterator(chars,prevBufferSize);
};
hx_strings_CharIterator.fromInput = function(chars,prevBufferSize) {
	if(prevBufferSize == null) {
		prevBufferSize = 0;
	}
	if(chars == null) {
		return hx_strings__$CharIterator_NullCharIterator.INSTANCE;
	}
	return new hx_strings__$CharIterator_InputCharIterator(chars,prevBufferSize);
};
hx_strings_CharIterator.fromIterator = function(chars,prevBufferSize) {
	if(prevBufferSize == null) {
		prevBufferSize = 0;
	}
	if(chars == null) {
		return hx_strings__$CharIterator_NullCharIterator.INSTANCE;
	}
	return new hx_strings__$CharIterator_IteratorCharIterator(chars,prevBufferSize);
};
hx_strings_CharIterator.prototype = {
	index: null
	,line: null
	,col: null
	,currChar: null
	,prevBuffer: null
	,prevBufferPrevIdx: null
	,prevBufferNextIdx: null
	,get_current: function() {
		if(this.index > -1) {
			return this.currChar;
		} else {
			return null;
		}
	}
	,get_pos: function() {
		return new hx_strings_CharPos(this.index,this.line,this.col);
	}
	,hasPrev: function() {
		return this.prevBufferPrevIdx > -1;
	}
	,prev: function() {
		if(this.prevBufferPrevIdx <= -1) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		var prevChar = this.prevBuffer.get(this.prevBufferPrevIdx);
		this.currChar = prevChar.char;
		this.index = prevChar.index;
		this.line = prevChar.line;
		this.col = prevChar.col;
		this.prevBufferNextIdx = this.prevBufferPrevIdx + 1 < this.prevBuffer.length ? this.prevBufferPrevIdx + 1 : -1;
		this.prevBufferPrevIdx--;
		return this.currChar;
	}
	,hasNext: function() {
		if(this.prevBufferNextIdx > -1) {
			return true;
		} else {
			return !this.isEOF();
		}
	}
	,next: function() {
		if(this.prevBufferNextIdx > -1) {
			var prevChar = this.prevBuffer.get(this.prevBufferNextIdx);
			this.currChar = prevChar.char;
			this.index = prevChar.index;
			this.line = prevChar.line;
			this.col = prevChar.col;
			this.prevBufferPrevIdx = this.prevBufferNextIdx - 1;
			this.prevBufferNextIdx = this.prevBufferNextIdx + 1 < this.prevBuffer.length ? this.prevBufferNextIdx + 1 : -1;
			return this.currChar;
		}
		if(this.isEOF()) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		if(this.currChar == 10 || this.currChar < 0) {
			this.line++;
			this.col = 0;
		}
		this.index++;
		this.col++;
		this.currChar = this.getChar();
		if(this.prevBuffer != null) {
			this.prevBuffer.add(new hx_strings__$CharIterator_CharWithPos(this.currChar,this.index,this.col,this.line));
			this.prevBufferPrevIdx = this.prevBuffer.length - 2;
			this.prevBufferNextIdx = -1;
		}
		return this.currChar;
	}
	,getChar: function() {
		throw haxe_Exception.thrown("Not implemented");
	}
	,isEOF: function() {
		throw haxe_Exception.thrown("Not implemented");
	}
	,__class__: hx_strings_CharIterator
	,__properties__: {get_pos:"get_pos",get_current:"get_current"}
};
var hx_strings_CharPos = function(index,line,col) {
	this.index = index;
	this.line = line;
	this.col = col;
};
$hxClasses["hx.strings.CharPos"] = hx_strings_CharPos;
hx_strings_CharPos.__name__ = "hx.strings.CharPos";
hx_strings_CharPos.prototype = {
	index: null
	,line: null
	,col: null
	,toString: function() {
		return "CharPos[index=" + this.index + ", line=" + this.line + ", col=" + this.col + "]";
	}
	,__class__: hx_strings_CharPos
};
var hx_strings__$CharIterator_CharWithPos = function(char,index,line,col) {
	hx_strings_CharPos.call(this,index,line,col);
	this.char = char;
};
$hxClasses["hx.strings._CharIterator.CharWithPos"] = hx_strings__$CharIterator_CharWithPos;
hx_strings__$CharIterator_CharWithPos.__name__ = "hx.strings._CharIterator.CharWithPos";
hx_strings__$CharIterator_CharWithPos.__super__ = hx_strings_CharPos;
hx_strings__$CharIterator_CharWithPos.prototype = $extend(hx_strings_CharPos.prototype,{
	char: null
	,__class__: hx_strings__$CharIterator_CharWithPos
});
var hx_strings_internal__$RingBuffer_RingBufferImpl = function(size) {
	this.length = 0;
	this.bufferEndIdx = -1;
	this.bufferStartIdx = 0;
	if(size < 1) {
		throw haxe_Exception.thrown("[size] must be > 0");
	}
	var this1 = new Array(size);
	this.buffer = this1;
	this.size = size;
	this.bufferMaxIdx = size - 1;
};
$hxClasses["hx.strings.internal._RingBuffer.RingBufferImpl"] = hx_strings_internal__$RingBuffer_RingBufferImpl;
hx_strings_internal__$RingBuffer_RingBufferImpl.__name__ = "hx.strings.internal._RingBuffer.RingBufferImpl";
hx_strings_internal__$RingBuffer_RingBufferImpl.prototype = {
	buffer: null
	,bufferStartIdx: null
	,bufferEndIdx: null
	,bufferMaxIdx: null
	,length: null
	,size: null
	,add: function(item) {
		if(this.length == this.size) {
			this.bufferEndIdx = this.bufferStartIdx;
			this.bufferStartIdx++;
			if(this.bufferStartIdx > this.bufferMaxIdx) {
				this.bufferStartIdx = 0;
			}
		} else {
			this.bufferEndIdx++;
			this.length++;
		}
		this.buffer[this.bufferEndIdx] = item;
	}
	,get: function(index) {
		if(index < 0 || index > this.bufferMaxIdx) {
			throw haxe_Exception.thrown("[index] " + index + " is out of bound");
		}
		var realIdx = this.bufferStartIdx + index;
		if(realIdx > this.bufferMaxIdx) {
			realIdx -= this.length;
		}
		return this.buffer[realIdx];
	}
	,iterator: function() {
		return new hx_strings_internal__$RingBuffer_RingBufferIterator(this);
	}
	,toArray: function() {
		var arr = [];
		var i = this.iterator();
		while(i.hasNext()) {
			var i1 = i.next();
			arr.push(i1);
		}
		return arr;
	}
	,__class__: hx_strings_internal__$RingBuffer_RingBufferImpl
};
var hx_strings__$CharIterator_NullCharIterator = function() {
	hx_strings_CharIterator.call(this,0);
};
$hxClasses["hx.strings._CharIterator.NullCharIterator"] = hx_strings__$CharIterator_NullCharIterator;
hx_strings__$CharIterator_NullCharIterator.__name__ = "hx.strings._CharIterator.NullCharIterator";
hx_strings__$CharIterator_NullCharIterator.__super__ = hx_strings_CharIterator;
hx_strings__$CharIterator_NullCharIterator.prototype = $extend(hx_strings_CharIterator.prototype,{
	isEOF: function() {
		return true;
	}
	,__class__: hx_strings__$CharIterator_NullCharIterator
});
var hx_strings__$CharIterator_ArrayCharIterator = function(chars,prevBufferSize) {
	hx_strings_CharIterator.call(this,prevBufferSize);
	this.chars = chars;
	this.charsMaxIndex = chars.length - 1;
};
$hxClasses["hx.strings._CharIterator.ArrayCharIterator"] = hx_strings__$CharIterator_ArrayCharIterator;
hx_strings__$CharIterator_ArrayCharIterator.__name__ = "hx.strings._CharIterator.ArrayCharIterator";
hx_strings__$CharIterator_ArrayCharIterator.__super__ = hx_strings_CharIterator;
hx_strings__$CharIterator_ArrayCharIterator.prototype = $extend(hx_strings_CharIterator.prototype,{
	chars: null
	,charsMaxIndex: null
	,isEOF: function() {
		return this.index >= this.charsMaxIndex;
	}
	,getChar: function() {
		return this.chars[this.index];
	}
	,__class__: hx_strings__$CharIterator_ArrayCharIterator
});
var hx_strings__$CharIterator_IteratorCharIterator = function(chars,prevBufferSize) {
	hx_strings_CharIterator.call(this,prevBufferSize);
	this.chars = chars;
};
$hxClasses["hx.strings._CharIterator.IteratorCharIterator"] = hx_strings__$CharIterator_IteratorCharIterator;
hx_strings__$CharIterator_IteratorCharIterator.__name__ = "hx.strings._CharIterator.IteratorCharIterator";
hx_strings__$CharIterator_IteratorCharIterator.__super__ = hx_strings_CharIterator;
hx_strings__$CharIterator_IteratorCharIterator.prototype = $extend(hx_strings_CharIterator.prototype,{
	chars: null
	,isEOF: function() {
		return !this.chars.hasNext();
	}
	,getChar: function() {
		return this.chars.next();
	}
	,__class__: hx_strings__$CharIterator_IteratorCharIterator
});
var hx_strings__$CharIterator_InputCharIterator = function(chars,prevBufferSize) {
	this.nextCharAvailable = null;
	this.nextChar = -1;
	this.currCharIndex = -1;
	this.byteIndex = 0;
	hx_strings_CharIterator.call(this,prevBufferSize);
	this.input = chars;
};
$hxClasses["hx.strings._CharIterator.InputCharIterator"] = hx_strings__$CharIterator_InputCharIterator;
hx_strings__$CharIterator_InputCharIterator.__name__ = "hx.strings._CharIterator.InputCharIterator";
hx_strings__$CharIterator_InputCharIterator.__super__ = hx_strings_CharIterator;
hx_strings__$CharIterator_InputCharIterator.prototype = $extend(hx_strings_CharIterator.prototype,{
	byteIndex: null
	,input: null
	,currCharIndex: null
	,nextChar: null
	,nextCharAvailable: null
	,isEOF: function() {
		if(this.nextCharAvailable == null) {
			try {
				var byte1 = this.input.readByte();
				this.byteIndex++;
				var tmp;
				if(byte1 <= 127) {
					tmp = byte1;
				} else {
					byte1 &= -129;
					byte1 &= -65;
					var totalBytes = 2;
					var isBit6Set = 1 == (byte1 >> 5 & 1);
					var isBit5Set = false;
					if(isBit6Set) {
						byte1 &= -33;
						++totalBytes;
						isBit5Set = 1 == (byte1 >> 4 & 1);
						if(isBit5Set) {
							byte1 &= -17;
							++totalBytes;
							if(1 == (byte1 >> 3 & 1)) {
								throw haxe_Exception.thrown("Valid UTF-8 byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte1 + "]!");
							}
						}
					}
					var result = byte1 << 6 * (totalBytes - 1);
					var byte = this.input.readByte();
					this.byteIndex++;
					if(1 != (byte >> 7 & 1)) {
						throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
					}
					if(1 == (byte >> 6 & 1)) {
						throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
					}
					var byte2 = byte & -129;
					result += byte2 << 6 * (totalBytes - 2);
					if(isBit6Set) {
						var byte = this.input.readByte();
						this.byteIndex++;
						if(1 != (byte >> 7 & 1)) {
							throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
						}
						if(1 == (byte >> 6 & 1)) {
							throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
						}
						var byte3 = byte & -129;
						result += byte3 << 6 * (totalBytes - 3);
						if(isBit5Set) {
							var byte = this.input.readByte();
							this.byteIndex++;
							if(1 != (byte >> 7 & 1)) {
								throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
							}
							if(1 == (byte >> 6 & 1)) {
								throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
							}
							var byte4 = byte & -129;
							result += byte4 << 6 * (totalBytes - 4);
						}
					}
					if(this.index == 0 && result == 65279) {
						var byte1 = this.input.readByte();
						this.byteIndex++;
						if(byte1 <= 127) {
							tmp = byte1;
						} else {
							byte1 &= -129;
							byte1 &= -65;
							var totalBytes = 2;
							var isBit6Set = 1 == (byte1 >> 5 & 1);
							var isBit5Set = false;
							if(isBit6Set) {
								byte1 &= -33;
								++totalBytes;
								isBit5Set = 1 == (byte1 >> 4 & 1);
								if(isBit5Set) {
									byte1 &= -17;
									++totalBytes;
									if(1 == (byte1 >> 3 & 1)) {
										throw haxe_Exception.thrown("Valid UTF-8 byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte1 + "]!");
									}
								}
							}
							var result1 = byte1 << 6 * (totalBytes - 1);
							var byte = this.input.readByte();
							this.byteIndex++;
							if(1 != (byte >> 7 & 1)) {
								throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
							}
							if(1 == (byte >> 6 & 1)) {
								throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
							}
							var byte2 = byte & -129;
							result1 += byte2 << 6 * (totalBytes - 2);
							if(isBit6Set) {
								var byte = this.input.readByte();
								this.byteIndex++;
								if(1 != (byte >> 7 & 1)) {
									throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
								}
								if(1 == (byte >> 6 & 1)) {
									throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
								}
								var byte3 = byte & -129;
								result1 += byte3 << 6 * (totalBytes - 3);
								if(isBit5Set) {
									var byte = this.input.readByte();
									this.byteIndex++;
									if(1 != (byte >> 7 & 1)) {
										throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
									}
									if(1 == (byte >> 6 & 1)) {
										throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
									}
									var byte4 = byte & -129;
									result1 += byte4 << 6 * (totalBytes - 4);
								}
							}
							tmp = this.index == 0 && result1 == 65279 ? this.readUtf8Char() : result1;
						}
					} else {
						tmp = result;
					}
				}
				this.nextChar = tmp;
				this.nextCharAvailable = true;
			} catch( _g ) {
				if(((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
					this.nextCharAvailable = false;
				} else {
					throw _g;
				}
			}
		}
		return this.nextCharAvailable != true;
	}
	,getChar: function() {
		if(this.index != this.currCharIndex) {
			this.currCharIndex = this.index;
			this.nextCharAvailable = null;
			return this.nextChar;
		}
		return this.currChar;
	}
	,readUtf8Char: function() {
		var byte1 = this.input.readByte();
		this.byteIndex++;
		if(byte1 <= 127) {
			return byte1;
		}
		byte1 &= -129;
		byte1 &= -65;
		var totalBytes = 2;
		var isBit6Set = 1 == (byte1 >> 5 & 1);
		var isBit5Set = false;
		if(isBit6Set) {
			byte1 &= -33;
			++totalBytes;
			isBit5Set = 1 == (byte1 >> 4 & 1);
			if(isBit5Set) {
				byte1 &= -17;
				++totalBytes;
				if(1 == (byte1 >> 3 & 1)) {
					throw haxe_Exception.thrown("Valid UTF-8 byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte1 + "]!");
				}
			}
		}
		var result = byte1 << 6 * (totalBytes - 1);
		var byte = this.input.readByte();
		this.byteIndex++;
		if(1 != (byte >> 7 & 1)) {
			throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
		}
		if(1 == (byte >> 6 & 1)) {
			throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
		}
		var byte2 = byte & -129;
		result += byte2 << 6 * (totalBytes - 2);
		if(isBit6Set) {
			var byte = this.input.readByte();
			this.byteIndex++;
			if(1 != (byte >> 7 & 1)) {
				throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
			}
			if(1 == (byte >> 6 & 1)) {
				throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
			}
			var byte3 = byte & -129;
			result += byte3 << 6 * (totalBytes - 3);
			if(isBit5Set) {
				var byte = this.input.readByte();
				this.byteIndex++;
				if(1 != (byte >> 7 & 1)) {
					throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
				}
				if(1 == (byte >> 6 & 1)) {
					throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
				}
				var byte4 = byte & -129;
				result += byte4 << 6 * (totalBytes - 4);
			}
		}
		if(this.index == 0 && result == 65279) {
			return this.readUtf8Char();
		}
		return result;
	}
	,readUtf8MultiSequenceByte: function() {
		var byte = this.input.readByte();
		this.byteIndex++;
		if(1 != (byte >> 7 & 1)) {
			throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
		}
		if(1 == (byte >> 6 & 1)) {
			throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
		}
		return byte & -129;
	}
	,__class__: hx_strings__$CharIterator_InputCharIterator
});
var hx_strings__$CharIterator_StringCharIterator = function(chars,prevBufferSize) {
	hx_strings_CharIterator.call(this,prevBufferSize);
	this.chars = chars;
	this.charsMaxIndex = (chars == null ? 0 : chars.length) - 1;
};
$hxClasses["hx.strings._CharIterator.StringCharIterator"] = hx_strings__$CharIterator_StringCharIterator;
hx_strings__$CharIterator_StringCharIterator.__name__ = "hx.strings._CharIterator.StringCharIterator";
hx_strings__$CharIterator_StringCharIterator.__super__ = hx_strings_CharIterator;
hx_strings__$CharIterator_StringCharIterator.prototype = $extend(hx_strings_CharIterator.prototype,{
	chars: null
	,charsMaxIndex: null
	,isEOF: function() {
		return this.index >= this.charsMaxIndex;
	}
	,getChar: function() {
		return HxOverrides.cca(this.chars,this.index);
	}
	,__class__: hx_strings__$CharIterator_StringCharIterator
});
var hx_strings_Pattern = function(pattern,options) {
	this.pattern = pattern;
	this.options = options;
	this.ereg = new EReg(pattern,options);
	this.options += "u";
};
$hxClasses["hx.strings.Pattern"] = hx_strings_Pattern;
hx_strings_Pattern.__name__ = "hx.strings.Pattern";
hx_strings_Pattern.compile = function(pattern,options) {
	if(options == null) {
		return new hx_strings_Pattern(pattern,"");
	}
	var _g = options;
	var tmp;
	switch(_g._hx_index) {
	case 0:
		var str = _g.v;
		var str1 = hx_strings_Strings.toLowerCase8(str);
		if(str1 == null || str1.length == 0) {
			tmp = str1;
		} else {
			var _g1 = [];
			var _g2 = 0;
			var _g3 = hx_strings_Strings.toChars(str1);
			while(_g2 < _g3.length) {
				var v = _g3[_g2];
				++_g2;
				if(v == hx_strings_Strings.charCodeAt8("i",0) || v == hx_strings_Strings.charCodeAt8("m",0) || v == hx_strings_Strings.charCodeAt8("g",0)) {
					_g1.push(v);
				}
			}
			var _this = _g1;
			var result = new Array(_this.length);
			var _g1 = 0;
			var _g2 = _this.length;
			while(_g1 < _g2) {
				var i = _g1++;
				result[i] = String.fromCodePoint(_this[i]);
			}
			tmp = result.join("");
		}
		break;
	case 1:
		var opt = _g.v;
		tmp = Std.string(opt);
		break;
	case 2:
		var arr = _g.v;
		var _g = [];
		var _g1 = 0;
		var _g2 = arr;
		while(_g1 < _g2.length) {
			var v = _g2[_g1];
			++_g1;
			if(v != null) {
				_g.push(v);
			}
		}
		tmp = _g.join("");
		break;
	}
	return new hx_strings_Pattern(pattern,tmp);
};
hx_strings_Pattern.prototype = {
	pattern: null
	,options: null
	,ereg: null
	,matcher: function(str) {
		return new hx_strings__$Pattern_MatcherImpl(this.ereg,this.pattern,this.options,str);
	}
	,replace: function(str,replaceWith) {
		return str.replace(this.ereg.r,replaceWith);
	}
	,remove: function(str) {
		return str.replace(this.ereg.r,"");
	}
	,split: function(str) {
		return this.ereg.split(str);
	}
	,__class__: hx_strings_Pattern
};
var hx_strings_Matcher = function() { };
$hxClasses["hx.strings.Matcher"] = hx_strings_Matcher;
hx_strings_Matcher.__name__ = "hx.strings.Matcher";
hx_strings_Matcher.__isInterface__ = true;
hx_strings_Matcher.prototype = {
	iterate: null
	,map: null
	,matched: null
	,matchedPos: null
	,matches: null
	,matchesInRegion: null
	,reset: null
	,substringAfterMatch: null
	,substringBeforeMatch: null
	,__class__: hx_strings_Matcher
};
var hx_strings__$Pattern_MatcherImpl = function(ereg,pattern,options,str) {
	var clone = new EReg(pattern,options);
	this.ereg = clone;
	this.str = str;
};
$hxClasses["hx.strings._Pattern.MatcherImpl"] = hx_strings__$Pattern_MatcherImpl;
hx_strings__$Pattern_MatcherImpl.__name__ = "hx.strings._Pattern.MatcherImpl";
hx_strings__$Pattern_MatcherImpl.__interfaces__ = [hx_strings_Matcher];
hx_strings__$Pattern_MatcherImpl.prototype = {
	ereg: null
	,isMatch: null
	,str: null
	,reset: function(str) {
		this.str = str;
		this.isMatch = null;
		return this;
	}
	,iterate: function(onMatch) {
		var startAt = 0;
		while(this.ereg.matchSub(this.str,startAt)) {
			this.isMatch = true;
			var matchedPos = this.ereg.matchedPos();
			onMatch(this);
			startAt = matchedPos.pos + matchedPos.len;
		}
		this.isMatch = false;
	}
	,map: function(mapper) {
		var _gthis = this;
		return this.ereg.map(this.str,function(ereg) {
			_gthis.isMatch = true;
			return mapper(_gthis);
		});
	}
	,matched: function(n) {
		if(n == null) {
			n = 0;
		}
		if(!this.matches()) {
			throw haxe_Exception.thrown("No string matched");
		}
		var result = this.ereg.matched(n);
		return result;
	}
	,matches: function() {
		if(this.isMatch == null) {
			this.isMatch = this.ereg.match(this.str);
		}
		return this.isMatch;
	}
	,matchesInRegion: function(pos,len) {
		if(len == null) {
			len = -1;
		}
		return this.isMatch = this.ereg.matchSub(this.str,pos,len);
	}
	,matchedPos: function() {
		if(!this.matches()) {
			throw haxe_Exception.thrown("No string matched");
		}
		return this.ereg.matchedPos();
	}
	,substringAfterMatch: function() {
		if(!this.matches()) {
			return "";
		}
		return this.ereg.matchedRight();
	}
	,substringBeforeMatch: function() {
		if(!this.matches()) {
			return "";
		}
		return this.ereg.matchedLeft();
	}
	,_cloneEReg: function(from,pattern,options) {
		var clone = new EReg(pattern,options);
		return clone;
	}
	,__class__: hx_strings__$Pattern_MatcherImpl
};
var hx_strings_StringBuilder = function(initialContent) {
	this.len = 0;
	this.pre = null;
	this.sb = new StringBuf();
	if(initialContent != null) {
		this.add(initialContent);
	}
};
$hxClasses["hx.strings.StringBuilder"] = hx_strings_StringBuilder;
hx_strings_StringBuilder.__name__ = "hx.strings.StringBuilder";
hx_strings_StringBuilder.prototype = {
	sb: null
	,pre: null
	,len: null
	,get_length: function() {
		return this.len;
	}
	,add: function(item) {
		this.sb.b += Std.string(item == null ? "null" : item);
		this.len += item == null ? 0 : item.length;
		return this;
	}
	,addChar: function(ch) {
		if(ch > -1 && ch < 128) {
			this.sb.b += String.fromCodePoint(ch);
		} else {
			var _this = this.sb;
			var x = String.fromCodePoint(ch);
			_this.b += Std.string(x);
		}
		this.len++;
		return this;
	}
	,addAll: function(items) {
		var _g = 0;
		while(_g < items.length) {
			var item = items[_g];
			++_g;
			this.sb.b += Std.string(item);
			this.len += item == null ? 0 : item.length;
		}
		return this;
	}
	,clear: function() {
		this.pre = null;
		this.sb = new StringBuf();
		this.len = 0;
		return this;
	}
	,isEmpty: function() {
		return this.len == 0;
	}
	,newLine: function() {
		this.sb.b += "\n";
		this.len++;
		return this;
	}
	,insert: function(pos,item) {
		if(pos < 0) {
			throw haxe_Exception.thrown("[pos] must not be negative");
		}
		if(pos > this.len) {
			throw haxe_Exception.thrown("[pos] must not be greater than this.length");
		}
		if(pos == this.len) {
			this.add(item);
			return this;
		}
		if(pos == 0) {
			if(this.pre == null) {
				this.pre = [];
			}
			this.pre.unshift(item);
			this.len += item == null ? 0 : item.length;
			return this;
		}
		var pre_len = 0;
		if(this.pre != null) {
			var pre = this.pre;
			var i = pre.length;
			var _g = 0;
			var _g1 = pre.length;
			while(_g < _g1) {
				var i = _g++;
				var str = pre[i];
				var next_pre_len = pre_len + (str == null ? 0 : str.length);
				if(next_pre_len == pos) {
					pre.splice(i + 1,0,item);
					this.len += item == null ? 0 : item.length;
					return this;
				}
				if(next_pre_len > pos) {
					var preSplitted = hx_strings_Strings.splitAt(pre[i],[pos - pre_len]);
					pre[i] = preSplitted[0];
					pre.splice(i + 1,0,item);
					pre.splice(i + 2,0,preSplitted[1]);
					this.len += item == null ? 0 : item.length;
					return this;
				}
				pre_len = next_pre_len;
			}
		}
		if(this.sb.b.length == 0) {
			this.add(item);
			return this;
		}
		var sbSplitted = hx_strings_Strings.splitAt(this.sb.b,[pos - pre_len]);
		this.sb = new StringBuf();
		this.sb.b += Std.string(sbSplitted[0]);
		this.sb.b += Std.string(item);
		this.len += item == null ? 0 : item.length;
		this.sb.b += Std.string(sbSplitted[1]);
		return this;
	}
	,insertChar: function(pos,ch) {
		if(pos < 0) {
			throw haxe_Exception.thrown("[pos] must not be negative");
		}
		if(pos > this.len) {
			throw haxe_Exception.thrown("[pos] must not be greater than this.length");
		}
		if(pos == this.len) {
			this.addChar(ch);
			return this;
		}
		if(pos == 0) {
			if(this.pre == null) {
				this.pre = [];
			}
			this.pre.unshift(String.fromCodePoint(ch));
			this.len++;
			return this;
		}
		var pre_len = 0;
		if(this.pre != null) {
			var pre = this.pre;
			var i = pre.length;
			var _g = 0;
			var _g1 = pre.length;
			while(_g < _g1) {
				var i = _g++;
				var str = pre[i];
				var next_pre_len = pre_len + (str == null ? 0 : str.length);
				if(next_pre_len == pos) {
					var x = String.fromCodePoint(ch);
					pre.splice(i + 1,0,x);
					this.len++;
					return this;
				}
				if(next_pre_len > pos) {
					var preSplitted = hx_strings_Strings.splitAt(pre[i],[pos - pre_len]);
					pre[i] = preSplitted[0];
					var x1 = String.fromCodePoint(ch);
					pre.splice(i + 1,0,x1);
					pre.splice(i + 2,0,preSplitted[1]);
					this.len++;
					return this;
				}
				pre_len = next_pre_len;
			}
		}
		if(this.sb.b.length == 0) {
			this.addChar(ch);
			return this;
		}
		var sbSplitted = hx_strings_Strings.splitAt(this.sb.b,[pos - pre_len]);
		this.sb = new StringBuf();
		this.sb.b += Std.string(sbSplitted[0]);
		this.addChar(ch);
		this.sb.b += Std.string(sbSplitted[1]);
		return this;
	}
	,insertAll: function(pos,items) {
		if(pos < 0) {
			throw haxe_Exception.thrown("[pos] must not be negative");
		}
		if(pos > this.len) {
			throw haxe_Exception.thrown("[pos] must not be greater than this.length");
		}
		if(pos == this.len) {
			this.addAll(items);
			return this;
		}
		if(pos == 0) {
			if(this.pre == null) {
				this.pre = [];
			}
			var pre = this.pre;
			var i = items.length;
			while(i-- > 0) {
				var item = items[i];
				pre.unshift(item);
				this.len += item == null ? 0 : item.length;
			}
			return this;
		}
		var pre_len = 0;
		if(this.pre != null) {
			var pre = this.pre;
			var i = pre.length;
			var _g = 0;
			var _g1 = pre.length;
			while(_g < _g1) {
				var i = _g++;
				var str = pre[i];
				var next_pre_len = pre_len + (str == null ? 0 : str.length);
				if(next_pre_len == pos) {
					var j = items.length;
					while(j-- > 0) {
						var item = items[j];
						pre.splice(i + 1,0,item);
						this.len += item == null ? 0 : item.length;
					}
					return this;
				}
				if(next_pre_len > pos) {
					var preSplitted = hx_strings_Strings.splitAt(pre[i],[pos - pre_len]);
					pre[i] = preSplitted[0];
					pre.splice(i + 1,0,preSplitted[1]);
					var j1 = items.length;
					while(j1-- > 0) {
						var item1 = items[j1];
						pre.splice(i + 1,0,item1);
						this.len += item1 == null ? 0 : item1.length;
					}
					return this;
				}
				pre_len = next_pre_len;
			}
		}
		if(this.sb.b.length == 0) {
			var _g = 0;
			while(_g < items.length) {
				var item = items[_g];
				++_g;
				this.add(item);
			}
			return this;
		}
		var sbSplitted = hx_strings_Strings.splitAt(this.sb.b,[pos - pre_len]);
		this.sb = new StringBuf();
		this.sb.b += Std.string(sbSplitted[0]);
		var _g = 0;
		while(_g < items.length) {
			var item = items[_g];
			++_g;
			this.sb.b += Std.string(item);
			this.len += item == null ? 0 : item.length;
		}
		this.sb.b += Std.string(sbSplitted[1]);
		return this;
	}
	,asOutput: function() {
		return new hx_strings__$StringBuilder_OutputWrapper(this);
	}
	,toString: function() {
		if(this.pre == null) {
			return this.sb.b;
		}
		var str = this.pre.join("") + this.sb.b;
		this.clear();
		this.add(str);
		return str;
	}
	,__class__: hx_strings_StringBuilder
	,__properties__: {get_length:"get_length"}
};
var hx_strings__$StringBuilder_OutputWrapper = function(sb) {
	this.sb = sb;
};
$hxClasses["hx.strings._StringBuilder.OutputWrapper"] = hx_strings__$StringBuilder_OutputWrapper;
hx_strings__$StringBuilder_OutputWrapper.__name__ = "hx.strings._StringBuilder.OutputWrapper";
hx_strings__$StringBuilder_OutputWrapper.__super__ = haxe_io_Output;
hx_strings__$StringBuilder_OutputWrapper.prototype = $extend(haxe_io_Output.prototype,{
	sb: null
	,bo: null
	,flush: function() {
		if(this.bo != null && this.bo.b.pos > 0) {
			this.sb.add(this.bo.getBytes().toString());
		}
	}
	,writeByte: function(c) {
		if(this.bo == null) {
			this.bo = new haxe_io_BytesOutput();
		}
		this.bo.writeByte(c);
	}
	,writeString: function(str,encoding) {
		this.flush();
		this.sb.add(str);
	}
	,__class__: hx_strings__$StringBuilder_OutputWrapper
});
var hx_strings_internal_OS = function() { };
$hxClasses["hx.strings.internal.OS"] = hx_strings_internal_OS;
hx_strings_internal_OS.__name__ = "hx.strings.internal.OS";
var hx_strings_internal__$Either3__$Either3 = $hxEnums["hx.strings.internal._Either3._Either3"] = { __ename__:"hx.strings.internal._Either3._Either3",__constructs__:null
	,a: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"hx.strings.internal._Either3._Either3",toString:$estr}; },$_._hx_name="a",$_.__params__ = ["v"],$_)
	,b: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hx.strings.internal._Either3._Either3",toString:$estr}; },$_._hx_name="b",$_.__params__ = ["v"],$_)
	,c: ($_=function(v) { return {_hx_index:2,v:v,__enum__:"hx.strings.internal._Either3._Either3",toString:$estr}; },$_._hx_name="c",$_.__params__ = ["v"],$_)
};
hx_strings_internal__$Either3__$Either3.__constructs__ = [hx_strings_internal__$Either3__$Either3.a,hx_strings_internal__$Either3__$Either3.b,hx_strings_internal__$Either3__$Either3.c];
hx_strings_internal__$Either3__$Either3.__empty_constructs__ = [];
var hx_strings_Strings = function() { };
$hxClasses["hx.strings.Strings"] = hx_strings_Strings;
hx_strings_Strings.__name__ = "hx.strings.Strings";
hx_strings_Strings._length = function(str) {
	return str.length;
};
hx_strings_Strings._getNotFoundDefault = function(str,notFoundDefault) {
	switch(notFoundDefault) {
	case 1:
		return null;
	case 2:
		return "";
	case 3:
		return str;
	}
};
hx_strings_Strings._charCodeAt8Unsafe = function(str,pos) {
	return HxOverrides.cca(str,pos);
};
hx_strings_Strings._splitAsciiWordsUnsafe = function(str) {
	var words = [];
	var currentWord = new hx_strings_StringBuilder();
	var chars = hx_strings_Strings.toChars(str);
	var len = chars.length;
	var lastIndex = len - 1;
	var _g = 0;
	var _g1 = len;
	while(_g < _g1) {
		var i = _g++;
		var ch = chars[i];
		if(ch > 64 && ch < 91 || ch > 96 && ch < 123) {
			var chNext = i < lastIndex ? chars[i + 1] : -1;
			currentWord.addChar(ch);
			if(chNext > 47 && chNext < 58) {
				words.push(currentWord.toString());
				currentWord.clear();
			} else if(hx_strings_Char.CHAR_CASE_MAPPER.mapU2L.h.hasOwnProperty(ch)) {
				if(hx_strings_Char.CHAR_CASE_MAPPER.mapU2L.h.hasOwnProperty(chNext) && chars.length > i + 2) {
					if(!hx_strings_Char.CHAR_CASE_MAPPER.mapU2L.h.hasOwnProperty(chars[i + 2])) {
						words.push(currentWord.toString());
						currentWord.clear();
					}
				}
			} else if(hx_strings_Char.CHAR_CASE_MAPPER.mapU2L.h.hasOwnProperty(chNext)) {
				words.push(currentWord.toString());
				currentWord.clear();
			}
		} else if(ch > 47 && ch < 58) {
			currentWord.addChar(ch);
			var chNext1 = i < lastIndex ? chars[i + 1] : -1;
			if(!(chNext1 > 47 && chNext1 < 58)) {
				words.push(currentWord.toString());
				currentWord.clear();
			}
		} else if(currentWord.len > 0) {
			words.push(currentWord.toString());
			currentWord.clear();
		}
	}
	if(currentWord.len > 0) {
		words.push(currentWord.toString());
	}
	return words;
};
hx_strings_Strings.ansiToHtml = function(str,renderMethod,initialState) {
	if(str == null || str.length == 0) {
		return str;
	}
	if(renderMethod == null) {
		renderMethod = hx_strings_AnsiToHtmlRenderMethod.StyleAttributes;
	}
	var styleOrClassAttribute;
	switch(renderMethod._hx_index) {
	case 0:
		styleOrClassAttribute = "style";
		break;
	case 1:
		styleOrClassAttribute = "class";
		break;
	case 2:
		var cb = renderMethod.func;
		styleOrClassAttribute = "class";
		break;
	}
	var sb = new hx_strings_StringBuilder();
	if(initialState != null && (initialState.fgcolor != null || initialState.bgcolor != null || initialState.bold || initialState.underline || initialState.blink)) {
		sb.add("<span " + styleOrClassAttribute + "=\"").add(initialState.toCSS(renderMethod)).add("\">");
	}
	var effectiveState = new hx_strings_AnsiState(initialState);
	var strLenMinus1 = (str == null ? 0 : str.length) - 1;
	var i = -1;
	var lookAhead = new hx_strings_StringBuilder();
	while(i < strLenMinus1) {
		++i;
		var ch = HxOverrides.cca(str,i);
		if(ch == 27 && i < strLenMinus1 && HxOverrides.cca(str,i + 1) == 91) {
			lookAhead.clear();
			var currentState = new hx_strings_AnsiState(effectiveState);
			var currentGraphicModeParam = 0;
			var isValidEscapeSequence = false;
			++i;
			_hx_loop2: while(i < strLenMinus1) {
				++i;
				var ch2 = HxOverrides.cca(str,i);
				lookAhead.addChar(ch2);
				switch(ch2) {
				case 48:
					currentGraphicModeParam *= 10;
					break;
				case 49:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 1;
					break;
				case 50:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 2;
					break;
				case 51:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 3;
					break;
				case 52:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 4;
					break;
				case 53:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 5;
					break;
				case 54:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 6;
					break;
				case 55:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 7;
					break;
				case 56:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 8;
					break;
				case 57:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 9;
					break;
				case 59:
					currentState.setGraphicModeParameter(currentGraphicModeParam);
					currentGraphicModeParam = 0;
					break;
				case 109:
					currentState.setGraphicModeParameter(currentGraphicModeParam);
					if(effectiveState.fgcolor != null || effectiveState.bgcolor != null || effectiveState.bold || effectiveState.underline || effectiveState.blink) {
						sb.add("</span>");
					}
					if(currentState.fgcolor != null || currentState.bgcolor != null || currentState.bold || currentState.underline || currentState.blink) {
						sb.add("<span " + styleOrClassAttribute + "=\"").add(currentState.toCSS(renderMethod)).add("\">");
					}
					effectiveState = currentState;
					isValidEscapeSequence = true;
					break _hx_loop2;
				default:
					break _hx_loop2;
				}
			}
			if(!isValidEscapeSequence) {
				sb.addChar(27).add("[").add(Std.string(lookAhead));
			}
		} else {
			sb.addChar(ch);
		}
	}
	if(effectiveState.fgcolor != null || effectiveState.bgcolor != null || effectiveState.bold || effectiveState.underline || effectiveState.blink) {
		sb.add("</span>");
	}
	return sb.toString();
};
hx_strings_Strings.appendIfMissing = function(str,suffix) {
	if(str == null) {
		return null;
	}
	if(str.length == 0) {
		return Std.string(str) + Std.string(suffix);
	}
	if(hx_strings_Strings.endsWith(str,suffix)) {
		return str;
	}
	return Std.string(str) + Std.string(suffix);
};
hx_strings_Strings.base64Encode = function(plain) {
	if(plain == null) {
		return null;
	}
	return haxe_crypto_Base64.encode(plain == null ? null : haxe_io_Bytes.ofString(plain));
};
hx_strings_Strings.base64Decode = function(encoded) {
	if(encoded == null) {
		return null;
	}
	return haxe_crypto_Base64.decode(encoded).toString();
};
hx_strings_Strings.charAt8 = function(str,pos,resultIfOutOfBound) {
	if(resultIfOutOfBound == null) {
		resultIfOutOfBound = "";
	}
	if(str == null || str.length == 0 || pos < 0 || pos >= (str == null ? 0 : str.length)) {
		return resultIfOutOfBound;
	}
	return str.charAt(pos);
};
hx_strings_Strings.charCodeAt8 = function(str,pos,resultIfOutOfBound) {
	if(resultIfOutOfBound == null) {
		resultIfOutOfBound = -1;
	}
	var strLen = str == null ? 0 : str.length;
	if(strLen == 0 || pos < 0 || pos >= strLen) {
		return resultIfOutOfBound;
	}
	return HxOverrides.cca(str,pos);
};
hx_strings_Strings.compact = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var sb = new hx_strings_StringBuilder();
	var needWhiteSpace = false;
	var _g = 0;
	var _g1 = hx_strings_Strings.toChars(str);
	while(_g < _g1.length) {
		var char = _g1[_g];
		++_g;
		if(char > 8 && char < 14 || char == 32) {
			if(sb.len != 0) {
				needWhiteSpace = true;
			}
			continue;
		} else if(needWhiteSpace) {
			sb.addChar(32);
			needWhiteSpace = false;
		}
		sb.addChar(char);
	}
	return sb.toString();
};
hx_strings_Strings.contains = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	if(searchFor == "") {
		return true;
	}
	return searchIn.indexOf(searchFor) > -1;
};
hx_strings_Strings.containsOnly = function(searchIn,allowedChars) {
	if(searchIn == null || searchIn.length == 0) {
		return true;
	}
	if(allowedChars == null) {
		return false;
	}
	var allowedCharsArray;
	var _g = allowedChars;
	switch(_g._hx_index) {
	case 0:
		var str = _g.v;
		allowedCharsArray = hx_strings_Strings.toChars(str);
		break;
	case 1:
		var chars = _g.v;
		allowedCharsArray = chars;
		break;
	}
	var _g = 0;
	var _g1 = hx_strings_Strings.toChars(searchIn);
	while(_g < _g1.length) {
		var ch = _g1[_g];
		++_g;
		if(allowedCharsArray.indexOf(ch) < 0) {
			return false;
		}
	}
	return true;
};
hx_strings_Strings.containsAll = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		if(!(searchIn == null || candidate == null ? false : candidate == "" ? true : searchIn.indexOf(candidate) > -1)) {
			return false;
		}
	}
	return true;
};
hx_strings_Strings.containsAllIgnoreCase = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	searchIn = searchIn.toLowerCase();
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		var searchFor1 = candidate.toLowerCase();
		if(!(searchIn == null || searchFor1 == null ? false : searchFor1 == "" ? true : searchIn.indexOf(searchFor1) > -1)) {
			return false;
		}
	}
	return true;
};
hx_strings_Strings.containsAny = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		if(searchIn == null || candidate == null ? false : candidate == "" ? true : searchIn.indexOf(candidate) > -1) {
			return true;
		}
	}
	return false;
};
hx_strings_Strings.containsAnyIgnoreCase = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	searchIn = searchIn.toLowerCase();
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		var searchFor1 = candidate.toLowerCase();
		if(searchIn == null || searchFor1 == null ? false : searchFor1 == "" ? true : searchIn.indexOf(searchFor1) > -1) {
			return true;
		}
	}
	return false;
};
hx_strings_Strings.containsNone = function(searchIn,searchFor) {
	return !hx_strings_Strings.containsAny(searchIn,searchFor);
};
hx_strings_Strings.containsNoneIgnoreCase = function(searchIn,searchFor) {
	return !hx_strings_Strings.containsAnyIgnoreCase(searchIn,searchFor);
};
hx_strings_Strings.containsWhitespaces = function(searchIn) {
	if(searchIn == null) {
		return false;
	}
	var _g = 0;
	var _g1 = hx_strings_Strings.toChars(searchIn);
	while(_g < _g1.length) {
		var ch = _g1[_g];
		++_g;
		if(ch > 8 && ch < 14 || ch == 32) {
			return true;
		}
	}
	return false;
};
hx_strings_Strings.countMatches = function(searchIn,searchFor,startAt) {
	if(startAt == null) {
		startAt = 0;
	}
	if(searchIn == null || searchIn.length == 0 || (searchFor == null || searchFor.length == 0) || startAt >= searchIn.length) {
		return 0;
	}
	if(startAt < 0) {
		startAt = 0;
	}
	var count = 0;
	var foundAt = startAt > -1 ? startAt - 1 : 0;
	while(true) {
		foundAt = searchIn.indexOf(searchFor,foundAt + 1);
		if(!(foundAt > -1)) {
			break;
		}
		++count;
	}
	return count;
};
hx_strings_Strings.countMatchesIgnoreCase = function(searchIn,searchFor,startAt) {
	if(startAt == null) {
		startAt = 0;
	}
	if(searchIn == null || searchIn.length == 0 || (searchFor == null || searchFor.length == 0) || startAt >= searchIn.length) {
		return 0;
	}
	if(startAt < 0) {
		startAt = 0;
	}
	searchIn = searchIn.toLowerCase();
	searchFor = searchFor.toLowerCase();
	var count = 0;
	var foundAt = startAt > -1 ? startAt - 1 : 0;
	while(true) {
		foundAt = searchIn.indexOf(searchFor,foundAt + 1);
		if(!(foundAt > -1)) {
			break;
		}
		++count;
	}
	return count;
};
hx_strings_Strings.compare = function(str,other) {
	if(str == null) {
		if(other == null) {
			return 0;
		} else {
			return -1;
		}
	}
	if(other == null) {
		if(str == null) {
			return 0;
		} else {
			return 1;
		}
	}
	if(str > other) {
		return 1;
	} else if(str == other) {
		return 0;
	} else {
		return -1;
	}
};
hx_strings_Strings.compareIgnoreCase = function(str,other) {
	if(str == null) {
		if(other == null) {
			return 0;
		} else {
			return -1;
		}
	}
	if(other == null) {
		if(str == null) {
			return 0;
		} else {
			return 1;
		}
	}
	var str1 = hx_strings_Strings.toLowerCase8(str);
	var other1 = hx_strings_Strings.toLowerCase8(other);
	if(str1 > other1) {
		return 1;
	} else if(str1 == other1) {
		return 0;
	} else {
		return -1;
	}
};
hx_strings_Strings.diff = function(left,right) {
	var diff = new hx_strings_StringDiff();
	diff.at = hx_strings_Strings.diffAt(left,right);
	diff.left = hx_strings_Strings.substr8(left,diff.at);
	diff.right = hx_strings_Strings.substr8(right,diff.at);
	return diff;
};
hx_strings_Strings.diffAt = function(str,other) {
	if(str == other) {
		return -1;
	}
	var strLen = str == null ? 0 : str.length;
	var otherLen = other == null ? 0 : other.length;
	if(strLen == 0 || otherLen == 0) {
		return 0;
	}
	var checkLen = strLen > otherLen ? otherLen : strLen;
	var _g = 0;
	var _g1 = checkLen;
	while(_g < _g1) {
		var i = _g++;
		if(HxOverrides.cca(str,i) != HxOverrides.cca(other,i)) {
			return i;
		}
	}
	return checkLen;
};
hx_strings_Strings.ellipsizeLeft = function(str,maxLength,ellipsis) {
	if(ellipsis == null) {
		ellipsis = "...";
	}
	if((str == null ? 0 : str.length) <= maxLength) {
		return str;
	}
	var ellipsisLen = ellipsis == null ? 0 : ellipsis.length;
	if(maxLength < ellipsisLen) {
		throw haxe_Exception.thrown("[maxLength] must not be smaller than " + ellipsisLen);
	}
	return ellipsis + Std.string(hx_strings_Strings.right(str,maxLength - ellipsisLen));
};
hx_strings_Strings.ellipsizeMiddle = function(str,maxLength,ellipsis) {
	if(ellipsis == null) {
		ellipsis = "...";
	}
	var strLen = str == null ? 0 : str.length;
	if(strLen <= maxLength) {
		return str;
	}
	var ellipsisLen = ellipsis == null ? 0 : ellipsis.length;
	if(maxLength < ellipsisLen) {
		throw haxe_Exception.thrown("[maxLength] must not be smaller than " + ellipsisLen);
	}
	var maxStrLen = maxLength - ellipsisLen;
	var leftLen = Math.round(maxStrLen / 2);
	var rightLen = maxStrLen - leftLen;
	return Std.string((str == null ? 0 : str.length) <= leftLen ? str : hx_strings_Strings.substring8(str,0,leftLen)) + ellipsis + Std.string(hx_strings_Strings.right(str,rightLen));
};
hx_strings_Strings.ellipsizeRight = function(str,maxLength,ellipsis) {
	if(ellipsis == null) {
		ellipsis = "...";
	}
	if((str == null ? 0 : str.length) <= maxLength) {
		return str;
	}
	var ellipsisLen = ellipsis == null ? 0 : ellipsis.length;
	if(maxLength < ellipsisLen) {
		throw haxe_Exception.thrown("[maxLength] must not be smaller than " + ellipsisLen);
	}
	var len = maxLength - ellipsisLen;
	return Std.string((str == null ? 0 : str.length) <= len ? str : hx_strings_Strings.substring8(str,0,len)) + ellipsis;
};
hx_strings_Strings.endsWith = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	return StringTools.endsWith(searchIn,searchFor);
};
hx_strings_Strings.endsWithAny = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		if(candidate != null && hx_strings_Strings.endsWith(searchIn,candidate)) {
			return true;
		}
	}
	return false;
};
hx_strings_Strings.endsWithAnyIgnoreCase = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	searchIn = hx_strings_Strings.toLowerCase8(searchIn);
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		if(candidate != null && hx_strings_Strings.endsWith(searchIn,hx_strings_Strings.toLowerCase8(candidate))) {
			return true;
		}
	}
	return false;
};
hx_strings_Strings.endsWithIgnoreCase = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	return hx_strings_Strings.endsWith(searchIn.toLowerCase(),searchFor.toLowerCase());
};
hx_strings_Strings.equals = function(str,other) {
	return str == other;
};
hx_strings_Strings.equalsIgnoreCase = function(str,other) {
	return hx_strings_Strings.toLowerCase8(str) == hx_strings_Strings.toLowerCase8(other);
};
hx_strings_Strings.filter = function(str,filter,separator) {
	if(separator == null) {
		separator = "";
	}
	if(str == null || str.length == 0) {
		return str;
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = hx_strings_Strings.split8(str,[separator]);
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(filter(v)) {
			_g.push(v);
		}
	}
	return _g.join(separator);
};
hx_strings_Strings.filterChars = function(str,filter) {
	if(str == null || str.length == 0) {
		return str;
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = hx_strings_Strings.toChars(str);
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(filter(v)) {
			_g.push(v);
		}
	}
	var _this = _g;
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = String.fromCodePoint(_this[i]);
	}
	return result.join("");
};
hx_strings_Strings.getFuzzyDistance = function(left,right) {
	if(left == null || left.length == 0 || (right == null || right.length == 0)) {
		return 0;
	}
	left = hx_strings_Strings.toLowerCase8(left);
	right = hx_strings_Strings.toLowerCase8(right);
	var leftChars = hx_strings_Strings.toChars(left);
	var rightChars = hx_strings_Strings.toChars(right);
	var leftLastMatchAt = -100;
	var rightLastMatchAt = -100;
	var score = 0;
	var _g = 0;
	var _g1 = leftChars.length;
	while(_g < _g1) {
		var leftIdx = _g++;
		var leftChar = leftChars[leftIdx];
		var _g2 = rightLastMatchAt > -1 ? rightLastMatchAt + 1 : 0;
		var _g3 = rightChars.length;
		while(_g2 < _g3) {
			var rightIdx = _g2++;
			var rightChar = rightChars[rightIdx];
			if(leftChar == rightChar) {
				++score;
				if(leftLastMatchAt == leftIdx - 1 && rightLastMatchAt == rightIdx - 1) {
					score += 2;
				}
				leftLastMatchAt = leftIdx;
				rightLastMatchAt = rightIdx;
				break;
			}
		}
	}
	return score;
};
hx_strings_Strings.getLevenshteinDistance = function(left,right) {
	var leftLen = left == null ? 0 : left.length;
	var rightLen = right == null ? 0 : right.length;
	if(leftLen == 0) {
		return rightLen;
	}
	if(rightLen == 0) {
		return leftLen;
	}
	if(leftLen > rightLen) {
		var tmp = left;
		left = right;
		right = tmp;
		var tmpLen = leftLen;
		leftLen = rightLen;
		rightLen = tmpLen;
	}
	var prevCosts = [];
	var costs = [];
	var _g = 0;
	var _g1 = leftLen + 1;
	while(_g < _g1) {
		var leftIdx = _g++;
		prevCosts.push(leftIdx);
		costs.push(0);
	}
	var leftChars = hx_strings_Strings.toChars(left);
	var rightChars = hx_strings_Strings.toChars(right);
	var min = function(a,b) {
		if(a > b) {
			return b;
		} else {
			return a;
		}
	};
	var _g = 1;
	var _g1 = rightLen + 1;
	while(_g < _g1) {
		var rightIdx = _g++;
		var rightChar = rightChars[rightIdx - 1];
		costs[0] = rightIdx;
		var _g2 = 1;
		var _g3 = leftLen + 1;
		while(_g2 < _g3) {
			var leftIdx = _g2++;
			var leftIdxMinus1 = leftIdx - 1;
			var cost = leftChars[leftIdxMinus1] == rightChar ? 0 : 1;
			costs[leftIdx] = min(min(costs[leftIdxMinus1] + 1,prevCosts[leftIdx] + 1),prevCosts[leftIdxMinus1] + cost);
		}
		var tmp = prevCosts;
		prevCosts = costs;
		costs = tmp;
	}
	return prevCosts[leftLen];
};
hx_strings_Strings.getLongestCommonSubstring = function(left,right) {
	if(left == null || right == null) {
		return null;
	}
	var leftLen = left == null ? 0 : left.length;
	var rightLen = right == null ? 0 : right.length;
	if(leftLen == 0 || rightLen == 0) {
		return "";
	}
	var leftChars = hx_strings_Strings.toChars(left);
	var rightChars = hx_strings_Strings.toChars(right);
	var leftSubStartAt = 0;
	var leftSubLen = 0;
	var _g = 0;
	var _g1 = leftLen;
	while(_g < _g1) {
		var leftIdx = _g++;
		var _g2 = 0;
		var _g3 = rightLen;
		while(_g2 < _g3) {
			var rightIdx = _g2++;
			var currLen = 0;
			while(leftChars[leftIdx + currLen] == rightChars[rightIdx + currLen]) {
				++currLen;
				if(leftIdx + currLen >= leftLen || rightIdx + currLen >= rightLen) {
					break;
				}
			}
			if(currLen > leftSubLen) {
				leftSubLen = currLen;
				leftSubStartAt = leftIdx;
			}
		}
	}
	return hx_strings_Strings.substr8(left,leftSubStartAt,leftSubLen);
};
hx_strings_Strings.hashCode = function(str,algo) {
	if(str == null || str.length == 0) {
		return 0;
	}
	if(algo == null) {
		algo = hx_strings_HashCodeAlgorithm.PLATFORM_SPECIFIC;
	}
	if(algo == null) {
		return haxe_crypto_Crc32.make(str == null ? null : haxe_io_Bytes.ofString(str));
	} else {
		switch(algo._hx_index) {
		case 1:
			return haxe_crypto_Adler32.make(str == null ? null : haxe_io_Bytes.ofString(str));
		case 2:
			return haxe_crypto_Crc32.make(str == null ? null : haxe_io_Bytes.ofString(str));
		case 3:
			var hc = 5381;
			var _g = 0;
			var _g1 = hx_strings_Strings.toChars(str);
			while(_g < _g1.length) {
				var ch = _g1[_g];
				++_g;
				hc = ((hc << 5) + hc | 0) ^ ch;
			}
			return hc;
		case 4:
			var hc = 0;
			var _g = 0;
			var _g1 = hx_strings_Strings.toChars(str);
			while(_g < _g1.length) {
				var ch = _g1[_g];
				++_g;
				hc = ((hc << 5) - hc | 0) + ch | 0;
			}
			return hc;
		case 5:
			var hc = 0;
			var _g = 0;
			var _g1 = hx_strings_Strings.toChars(str);
			while(_g < _g1.length) {
				var ch = _g1[_g];
				++_g;
				hc = (((hc << 6) + (hc << 16) | 0) - hc | 0) + ch | 0;
			}
			return hc;
		default:
			return haxe_crypto_Crc32.make(str == null ? null : haxe_io_Bytes.ofString(str));
		}
	}
};
hx_strings_Strings.htmlDecode = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var _this = hx_strings_Strings.REGEX_HTML_UNESCAPE;
	return new hx_strings__$Pattern_MatcherImpl(_this.ereg,_this.pattern,_this.options,str).map(function(m) {
		var match = m.matched();
		switch(match) {
		case "&amp;":
			return "&";
		case "&apos;":
			return "'";
		case "&gt;":
			return ">";
		case "&lt;":
			return "<";
		case "&nbsp;":
			return " ";
		case "&quot;":
			return "\"";
		default:
			var number = Std.parseInt(hx_strings_Strings.substr8(match,2,(match == null ? 0 : match.length) - 3));
			if(number == null) {
				throw haxe_Exception.thrown("Invalid HTML value " + match);
			}
			var this1 = number;
			return String.fromCodePoint(this1);
		}
	});
};
hx_strings_Strings.htmlEncode = function(str,escapeQuotes) {
	if(escapeQuotes == null) {
		escapeQuotes = false;
	}
	if(str == null || str.length == 0) {
		return str;
	}
	var sb = new hx_strings_StringBuilder();
	var isFirstSpace = true;
	var _g = 0;
	var _g1 = str == null ? 0 : str.length;
	while(_g < _g1) {
		var i = _g++;
		var ch = HxOverrides.cca(str,i);
		switch(ch) {
		case 32:
			if(isFirstSpace) {
				sb.add(" ");
				isFirstSpace = false;
			} else {
				sb.add("&nbsp;");
			}
			break;
		case 34:
			sb.add(escapeQuotes ? "&quot;" : "\"");
			break;
		case 38:
			sb.add("&amp;");
			break;
		case 39:
			sb.add(escapeQuotes ? "&#039;" : "'");
			break;
		case 60:
			sb.add("&lt;");
			break;
		case 62:
			sb.add("&gt;");
			break;
		default:
			if(ch > 127) {
				sb.add("&#").add(Std.string(ch)).add(";");
			} else {
				sb.addChar(ch);
			}
		}
		if(ch != 32) {
			isFirstSpace = true;
		}
	}
	return sb.toString();
};
hx_strings_Strings.insertAt = function(str,pos,insertion) {
	if(str == null) {
		return null;
	}
	var strLen = str == null ? 0 : str.length;
	if(pos < 0) {
		pos = strLen + pos;
	}
	if(pos < 0 || pos > strLen) {
		throw haxe_Exception.thrown("Absolute value of [pos] must be <= str.length");
	}
	if(insertion == null || insertion.length == 0) {
		return str;
	}
	return Std.string(hx_strings_Strings.substring8(str,0,pos)) + insertion + Std.string(hx_strings_Strings.substring8(str,pos));
};
hx_strings_Strings.ifBlank = function(str,fallback) {
	if(str == null ? true : StringTools.trim(str).length == 0) {
		return fallback;
	} else {
		return str;
	}
};
hx_strings_Strings.ifEmpty = function(str,fallback) {
	if(str == null || str.length == 0) {
		return fallback;
	} else {
		return str;
	}
};
hx_strings_Strings.ifNull = function(str,fallback) {
	if(str == null) {
		return fallback;
	} else {
		return str;
	}
};
hx_strings_Strings.indentLines = function(str,indentWith) {
	if(str == null) {
		return null;
	}
	if(str.length == 0 || (indentWith == null || indentWith.length == 0)) {
		return str;
	}
	var isFirstLine = true;
	var sb = new hx_strings_StringBuilder();
	var _g = 0;
	var _g1 = hx_strings_Strings.REGEX_SPLIT_LINES.ereg.split(str);
	while(_g < _g1.length) {
		var line = _g1[_g];
		++_g;
		if(isFirstLine) {
			isFirstLine = false;
		} else {
			sb.newLine();
		}
		sb.add(indentWith);
		sb.add(line);
	}
	return sb.toString();
};
hx_strings_Strings.indexOf8 = function(str,searchFor,startAt) {
	if(startAt == null) {
		startAt = 0;
	}
	if(str == null || searchFor == null) {
		return -1;
	}
	var strLen = str == null ? 0 : str.length;
	var searchForLen = searchFor == null ? 0 : searchFor.length;
	if(startAt < 0) {
		startAt = 0;
	}
	if(searchForLen == 0) {
		if(startAt == 0) {
			return 0;
		}
		if(startAt > 0 && startAt < strLen) {
			return startAt;
		}
		return strLen;
	}
	if(startAt >= strLen) {
		return -1;
	}
	return str.indexOf(searchFor,startAt);
};
hx_strings_Strings.isBlank = function(str) {
	if(str == null) {
		return true;
	} else {
		return StringTools.trim(str).length == 0;
	}
};
hx_strings_Strings.isDigits = function(str) {
	if(str == null || str.length == 0) {
		return false;
	}
	var _g = 0;
	var _g1 = str == null ? 0 : str.length;
	while(_g < _g1) {
		var i = _g++;
		var this1 = HxOverrides.cca(str,i);
		if(!(this1 > 47 && this1 < 58)) {
			return false;
		}
	}
	return true;
};
hx_strings_Strings.isEmpty = function(str) {
	if(str != null) {
		return str.length == 0;
	} else {
		return true;
	}
};
hx_strings_Strings.isNotBlank = function(str) {
	if(str != null) {
		return StringTools.trim(str).length > 0;
	} else {
		return false;
	}
};
hx_strings_Strings.isNotEmpty = function(str) {
	if(str != null) {
		return str.length > 0;
	} else {
		return false;
	}
};
hx_strings_Strings.isLowerCase = function(str) {
	if(str == null || str.length == 0) {
		return false;
	}
	return str == hx_strings_Strings.toLowerCase8(str);
};
hx_strings_Strings.isUpperCase = function(str) {
	if(str == null || str.length == 0) {
		return false;
	}
	return str == hx_strings_Strings.toUpperCase8(str);
};
hx_strings_Strings.iterate = function(str,callback,separator) {
	if(separator == null) {
		separator = "";
	}
	if(str == null || str.length == 0) {
		return;
	}
	var _g = 0;
	var _g1 = hx_strings_Strings.split8(str,[separator]);
	while(_g < _g1.length) {
		var sub = _g1[_g];
		++_g;
		callback(sub);
	}
};
hx_strings_Strings.iterateChars = function(str,callback) {
	if(str == null || str.length == 0) {
		return;
	}
	var _g = 0;
	var _g1 = str == null ? 0 : str.length;
	while(_g < _g1) {
		var i = _g++;
		callback(HxOverrides.cca(str,i));
	}
};
hx_strings_Strings.lastIndexOf8 = function(str,searchFor,startAt) {
	if(str == null || searchFor == null) {
		return -1;
	}
	var strLen = str == null ? 0 : str.length;
	var searchForLen = searchFor == null ? 0 : searchFor.length;
	if(startAt == null) {
		startAt = strLen;
	}
	if(searchForLen == 0) {
		if(startAt < 0) {
			return 0;
		}
		if(startAt > strLen) {
			return strLen;
		}
		return startAt;
	}
	if(startAt < 0) {
		return -1;
	} else if(startAt >= strLen) {
		startAt = strLen - 1;
	}
	var strNeedsUTF8Workaround = str.length != strLen;
	var searchForNeedsUTF8Workaround = searchFor.length != searchForLen;
	if(!strNeedsUTF8Workaround && !searchForNeedsUTF8Workaround) {
		return str.lastIndexOf(searchFor,startAt);
	}
	if(searchForNeedsUTF8Workaround && !strNeedsUTF8Workaround) {
		return -1;
	}
	var searchForChars = hx_strings_Strings.toChars(searchFor);
	startAt += searchForLen - 1;
	var searchForPosToCheck = searchForLen - 1;
	var strPos = strLen;
	while(strPos-- > 0) {
		if(strPos > startAt) {
			continue;
		}
		var strCh = HxOverrides.cca(str,strPos);
		if(strCh == searchForChars[searchForPosToCheck]) {
			if(searchForPosToCheck == 0) {
				return strPos;
			}
			--searchForPosToCheck;
		} else {
			searchForPosToCheck = searchForLen - 1;
		}
	}
	return -1;
};
hx_strings_Strings.length8 = function(str) {
	if(str == null) {
		return 0;
	}
	return str.length;
};
hx_strings_Strings.left = function(str,len) {
	if((str == null ? 0 : str.length) <= len) {
		return str;
	}
	return hx_strings_Strings.substring8(str,0,len);
};
hx_strings_Strings.lpad = function(str,targetLength,padStr,canOverflow) {
	if(canOverflow == null) {
		canOverflow = true;
	}
	if(padStr == null) {
		padStr = " ";
	}
	var strLen = str == null ? 0 : str.length;
	if(str == null || strLen > targetLength) {
		return str;
	}
	if(padStr == null || padStr.length == 0) {
		padStr = " ";
	}
	var sb = [str];
	var padLen = padStr == null ? 0 : padStr.length;
	while(strLen < targetLength) {
		sb.unshift(padStr);
		strLen += padLen;
	}
	if(canOverflow) {
		return sb.join("");
	}
	return hx_strings_Strings.right(sb.join(""),targetLength);
};
hx_strings_Strings.map = function(str,mapper,separator) {
	if(separator == null) {
		separator = "";
	}
	if(str == null) {
		return null;
	}
	if(separator == null) {
		throw haxe_Exception.thrown("[separator] must not be null");
	}
	var _this = hx_strings_Strings.split8(str,[separator]);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = mapper(_this[i]);
	}
	return result;
};
hx_strings_Strings.prependIfMissing = function(str,suffix) {
	if(str == null) {
		return null;
	}
	if(str.length == 0) {
		return suffix + Std.string(str);
	}
	if(hx_strings_Strings.startsWith(str,suffix)) {
		return str;
	}
	return suffix + Std.string(str);
};
hx_strings_Strings.quoteDouble = function(str) {
	if(str == null) {
		return null;
	}
	if(str.length == 0) {
		return "\"\"";
	}
	if(!(str == null ? false : str.indexOf("\"") > -1)) {
		return "\"" + Std.string(str) + "\"";
	}
	return "\"" + Std.string(hx_strings_Strings.replaceAll(str,"\"","\\\"")) + "\"";
};
hx_strings_Strings.quoteSingle = function(str) {
	if(str == null) {
		return null;
	}
	if(str.length == 0) {
		return "''";
	}
	if(!(str == null ? false : str.indexOf("'") > -1)) {
		return "'" + Std.string(str) + "'";
	}
	return "'" + Std.string(hx_strings_Strings.replaceAll(str,"'","\\'")) + "'";
};
hx_strings_Strings.removeAfter = function(str,searchFor) {
	return hx_strings_Strings.substringBefore(str,searchFor);
};
hx_strings_Strings.removeAfterLast = function(str,searchFor) {
	return hx_strings_Strings.substringBeforeLast(str,searchFor);
};
hx_strings_Strings.removeAfterIgnoreCase = function(str,searchFor) {
	return hx_strings_Strings.substringBeforeIgnoreCase(str,searchFor);
};
hx_strings_Strings.removeAfterLastIgnoreCase = function(str,searchFor) {
	return hx_strings_Strings.substringBeforeLastIgnoreCase(str,searchFor);
};
hx_strings_Strings.removeAt = function(str,pos,length) {
	if(str == null || str.length == 0 || length < 1) {
		return str;
	}
	var strLen = str == null ? 0 : str.length;
	if(pos < 0) {
		pos = strLen + pos;
	}
	if(pos < 0) {
		throw haxe_Exception.thrown("[pos] must be smaller than -1 * str.length");
	}
	if(pos + length >= strLen) {
		return hx_strings_Strings.substring8(str,0,pos);
	}
	return Std.string(hx_strings_Strings.substring8(str,0,pos)) + Std.string(hx_strings_Strings.substring8(str,pos + length));
};
hx_strings_Strings.removeBefore = function(str,searchFor) {
	return hx_strings_Strings.substringAfter(str,searchFor);
};
hx_strings_Strings.removeBeforeLast = function(str,searchFor) {
	return hx_strings_Strings.substringAfterLast(str,searchFor);
};
hx_strings_Strings.removeBeforeIgnoreCase = function(str,searchFor) {
	return hx_strings_Strings.substringAfterIgnoreCase(str,searchFor);
};
hx_strings_Strings.removeBeforeLastIgnoreCase = function(str,searchFor) {
	return hx_strings_Strings.substringAfterLastIgnoreCase(str,searchFor);
};
hx_strings_Strings.removeAll = function(searchIn,searchFor) {
	return hx_strings_Strings.replaceAll(searchIn,searchFor,"");
};
hx_strings_Strings.removeFirst = function(searchIn,searchFor) {
	return hx_strings_Strings.replaceFirst(searchIn,searchFor,"");
};
hx_strings_Strings.removeFirstIgnoreCase = function(searchIn,searchFor) {
	return hx_strings_Strings.replaceFirstIgnoreCase(searchIn,searchFor,"");
};
hx_strings_Strings.removeAnsi = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	return str.replace(hx_strings_Strings.REGEX_ANSI_ESC.ereg.r,"");
};
hx_strings_Strings.removeLeading = function(searchIn,searchFor) {
	if(searchIn == null || searchIn.length == 0 || (searchFor == null || searchFor.length == 0)) {
		return searchIn;
	}
	while(hx_strings_Strings.startsWith(searchIn,searchFor)) searchIn = searchIn.substring(searchFor.length,searchIn.length);
	return searchIn;
};
hx_strings_Strings.removeTags = function(xml) {
	if(xml == null || xml.length == 0) {
		return xml;
	}
	return xml.replace(hx_strings_Strings.REGEX_REMOVE_XML_TAGS.ereg.r,"");
};
hx_strings_Strings.removeTrailing = function(searchIn,searchFor) {
	if(searchIn == null || searchIn.length == 0 || (searchFor == null || searchFor.length == 0)) {
		return searchIn;
	}
	while(hx_strings_Strings.endsWith(searchIn,searchFor)) searchIn = searchIn.substring(0,searchIn.length - searchFor.length);
	return searchIn;
};
hx_strings_Strings.repeat = function(str,count,separator) {
	if(separator == null) {
		separator = "";
	}
	if(str == null) {
		return null;
	}
	if(count < 1) {
		return "";
	}
	if(count == 1) {
		return str;
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = count;
	while(_g1 < _g2) {
		var i = _g1++;
		_g.push(str);
	}
	return _g.join(separator);
};
hx_strings_Strings.replaceAll = function(searchIn,searchFor,replaceWith) {
	if(searchIn == null || (searchIn == null || searchIn.length == 0) || searchFor == null) {
		return searchIn;
	}
	if(replaceWith == null) {
		replaceWith = "null";
	}
	return StringTools.replace(searchIn,searchFor,replaceWith);
};
hx_strings_Strings.replaceFirst = function(searchIn,searchFor,replaceWith) {
	if(searchIn == null || (searchIn == null || searchIn.length == 0) || searchFor == null) {
		return searchIn;
	}
	if(replaceWith == null) {
		replaceWith = "null";
	}
	var foundAt;
	if(searchFor.length == 0) {
		if((searchIn == null ? 0 : searchIn.length) > 1) {
			foundAt = 1;
		} else {
			return searchIn;
		}
	} else {
		foundAt = hx_strings_Strings.indexOf8(searchIn,searchFor);
	}
	return Std.string(hx_strings_Strings.substr8(searchIn,0,foundAt)) + replaceWith + Std.string(hx_strings_Strings.substr8(searchIn,foundAt + (searchFor == null ? 0 : searchFor.length)));
};
hx_strings_Strings.replaceFirstIgnoreCase = function(searchIn,searchFor,replaceWith) {
	if(searchIn == null || (searchIn == null || searchIn.length == 0) || searchFor == null) {
		return searchIn;
	}
	if(replaceWith == null) {
		replaceWith = "null";
	}
	searchFor = searchFor.toLowerCase();
	var foundAt;
	if(searchFor.length == 0) {
		if((searchIn == null ? 0 : searchIn.length) > 1) {
			foundAt = 1;
		} else {
			return searchIn;
		}
	} else {
		foundAt = hx_strings_Strings.indexOf8(searchIn.toLowerCase(),searchFor);
	}
	return Std.string(hx_strings_Strings.substr8(searchIn,0,foundAt)) + replaceWith + Std.string(hx_strings_Strings.substr8(searchIn,foundAt + (searchFor == null ? 0 : searchFor.length)));
};
hx_strings_Strings.reverse = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var chars = hx_strings_Strings.split8(str,[""]);
	chars.reverse();
	return chars.join("");
};
hx_strings_Strings.right = function(str,len) {
	if(str == null || str.length == 0) {
		return str;
	}
	return hx_strings_Strings.substring8(str,(str == null ? 0 : str.length) - len);
};
hx_strings_Strings.rpad = function(str,targetLength,padStr,canOverflow) {
	if(canOverflow == null) {
		canOverflow = true;
	}
	if(padStr == null) {
		padStr = " ";
	}
	var strLen = str == null ? 0 : str.length;
	if(str == null || strLen > targetLength) {
		return str;
	}
	if(padStr == null || padStr.length == 0) {
		padStr = " ";
	}
	var padLen = padStr == null ? 0 : padStr.length;
	var sb = new hx_strings_StringBuilder(str);
	while(strLen < targetLength) {
		sb.add(padStr);
		strLen += padLen;
	}
	if(canOverflow) {
		return sb.toString();
	}
	var str = sb.toString();
	return (str == null ? 0 : str.length) <= targetLength ? str : hx_strings_Strings.substring8(str,0,targetLength);
};
hx_strings_Strings.split8 = function(str,separator,maxParts) {
	if(maxParts == null) {
		maxParts = 0;
	}
	if(str == null || separator == null) {
		return null;
	}
	var strLen = str == null ? 0 : str.length;
	if(strLen == 0) {
		return [];
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = separator;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(v != null) {
			_g.push(v);
		}
	}
	var separators = _g;
	if(separators.length == 0) {
		return null;
	}
	if(maxParts <= 0 && separators.length == 1) {
		return str.split(separators[0]);
	}
	if(separators.indexOf("") > -1) {
		if(maxParts <= 0) {
			var _g = [];
			var _g1 = 0;
			var _g2 = strLen;
			while(_g1 < _g2) {
				var i = _g1++;
				_g.push(HxOverrides.substr(str,i,1));
			}
			return _g;
		}
		if(maxParts > strLen) {
			maxParts = strLen;
		}
		--maxParts;
		var _g = [];
		var _g1 = 0;
		var _g2 = maxParts;
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push(HxOverrides.substr(str,i,1));
		}
		var result = _g;
		result.push(HxOverrides.substr(str,maxParts,strLen - maxParts));
		return result;
	}
	var _g = [];
	var _g1 = 0;
	while(_g1 < separators.length) {
		var sep = separators[_g1];
		++_g1;
		_g.push(sep == null ? 0 : sep.length);
	}
	var separatorsLengths = _g;
	var lastFoundAt = 0;
	var result = [];
	var resultCount = 0;
	while(true) {
		var separatorLen = 0;
		var foundAt = -1;
		var _g = 0;
		var _g1 = separators.length;
		while(_g < _g1) {
			var i = _g++;
			var sepFoundAt = hx_strings_Strings.indexOf8(str,separators[i],lastFoundAt);
			if(sepFoundAt != -1) {
				if(foundAt == -1 || sepFoundAt < foundAt) {
					foundAt = sepFoundAt;
					separatorLen = separatorsLengths[i];
				}
			}
		}
		++resultCount;
		if(foundAt == -1 || resultCount == maxParts) {
			result.push(HxOverrides.substr(str,lastFoundAt,strLen - lastFoundAt));
			break;
		}
		result.push(HxOverrides.substr(str,lastFoundAt,foundAt - lastFoundAt));
		lastFoundAt = foundAt + separatorLen;
	}
	return result;
};
hx_strings_Strings.splitAt = function(str,splitPos) {
	if(str == null) {
		return null;
	}
	if(splitPos == null || splitPos.length == 0) {
		return [str];
	}
	var strLen = str == null ? 0 : str.length;
	if(strLen == 0) {
		return [str];
	}
	var pos = [];
	var _g = 0;
	var _g1 = splitPos;
	while(_g < _g1.length) {
		var p = _g1[_g];
		++_g;
		if(p < 0) {
			p = strLen + p;
		}
		if(p < 0 || p >= strLen) {
			continue;
		}
		if(pos.indexOf(p) > -1) {
			continue;
		}
		pos.push(p);
	}
	pos.sort(function(a,b) {
		if(a < b) {
			return -1;
		} else if(a > b) {
			return 1;
		} else {
			return 0;
		}
	});
	var result = [];
	var lastPos = 0;
	var _g = 0;
	while(_g < pos.length) {
		var p = pos[_g];
		++_g;
		var chunk = hx_strings_Strings.substring8(str,lastPos,p);
		if(chunk != null && chunk.length > 0) {
			result.push(chunk);
		}
		lastPos = p;
	}
	var chunk = hx_strings_Strings.substring8(str,lastPos);
	if(chunk != null && chunk.length > 0) {
		result.push(chunk);
	}
	return result;
};
hx_strings_Strings.splitEvery = function(str,count) {
	if(str == null) {
		return null;
	}
	if(count < 1) {
		throw haxe_Exception.thrown("[count] must be greater than 0");
	}
	var strLen = str == null ? 0 : str.length;
	if(strLen == 0 || count >= strLen) {
		return [str];
	}
	var result = [];
	var pos = 0;
	while(true) {
		var chunk = hx_strings_Strings.substr8(str,pos,count);
		pos += count;
		if(chunk == null || chunk.length == 0) {
			break;
		}
		result.push(chunk);
	}
	return result;
};
hx_strings_Strings.splitLines = function(str) {
	if(str == null || str.length == 0) {
		return [];
	} else {
		return hx_strings_Strings.REGEX_SPLIT_LINES.ereg.split(str);
	}
};
hx_strings_Strings.startsWith = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	if(searchFor == null || searchFor.length == 0 || searchIn == searchFor) {
		return true;
	}
	return StringTools.startsWith(searchIn,searchFor);
};
hx_strings_Strings.startsWithAny = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		if(candidate != null && hx_strings_Strings.startsWith(searchIn,candidate)) {
			return true;
		}
	}
	return false;
};
hx_strings_Strings.startsWithAnyIgnoreCase = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	searchIn = hx_strings_Strings.toLowerCase8(searchIn);
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		if(candidate != null && hx_strings_Strings.startsWith(searchIn,hx_strings_Strings.toLowerCase8(candidate))) {
			return true;
		}
	}
	return false;
};
hx_strings_Strings.startsWithIgnoreCase = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	if(searchFor == null || searchFor.length == 0) {
		return true;
	}
	return hx_strings_Strings.startsWith(searchIn.toLowerCase(),searchFor.toLowerCase());
};
hx_strings_Strings.substr8 = function(str,startAt,len) {
	if(str == null || str.length == 0) {
		return str;
	}
	if(len == null) {
		len = str == null ? 0 : str.length;
	}
	if(len <= 0) {
		return "";
	}
	if(startAt < 0) {
		startAt += str == null ? 0 : str.length;
		if(startAt < 0) {
			startAt = 0;
		}
	}
	return HxOverrides.substr(str,startAt,len);
};
hx_strings_Strings.substring8 = function(str,startAt,endAt) {
	if(str == null || str.length == 0) {
		return str;
	}
	if(endAt == null) {
		endAt = str == null ? 0 : str.length;
	}
	return str.substring(startAt,endAt);
};
hx_strings_Strings.substringAfter = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return str;
	}
	if(str == "" || searchFor == null || searchFor == "") {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	var foundAt = str.indexOf(searchFor);
	if(foundAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	return str.substring(foundAt + searchFor.length);
};
hx_strings_Strings.substringAfterIgnoreCase = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	searchFor = searchFor.toLowerCase();
	var foundAt = str.toLowerCase().indexOf(searchFor);
	if(foundAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	return str.substring(foundAt + searchFor.length);
};
hx_strings_Strings.substringBetween = function(str,after,before,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(before == null) {
		before = after;
	}
	if(str == "" || (after == null || after.length == 0) || (before == null || before.length == 0)) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	var foundAfterAt = str.indexOf(after);
	if(foundAfterAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	var foundBeforeAt = str.indexOf(before,foundAfterAt + after.length);
	if(foundBeforeAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	return str.substring(foundAfterAt + after.length,foundBeforeAt);
};
hx_strings_Strings.substringBetweenIgnoreCase = function(str,after,before,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(before == null) {
		before = after;
	}
	if(str == "" || (after == null || after.length == 0) || (before == null || before.length == 0)) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	var strLower = hx_strings_Strings.toLowerCase8(str);
	var after1 = hx_strings_Strings.toLowerCase8(after);
	var before1 = hx_strings_Strings.toLowerCase8(before);
	var foundAfterAt = strLower.indexOf(after1);
	if(foundAfterAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	var foundBeforeAt = strLower.indexOf(before1,foundAfterAt + after1.length);
	if(foundBeforeAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	return str.substring(foundAfterAt + after1.length,foundBeforeAt);
};
hx_strings_Strings.substringAfterLast = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	var foundAt = str.lastIndexOf(searchFor);
	if(foundAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	return str.substring(foundAt + searchFor.length);
};
hx_strings_Strings.substringAfterLastIgnoreCase = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	searchFor = searchFor.toLowerCase();
	var foundAt = str.toLowerCase().lastIndexOf(searchFor);
	if(foundAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	return str.substring(foundAt + searchFor.length);
};
hx_strings_Strings.substringBefore = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	var foundAt = str.indexOf(searchFor);
	if(foundAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	return str.substring(0,foundAt);
};
hx_strings_Strings.substringBeforeIgnoreCase = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	searchFor = searchFor.toLowerCase();
	var foundAt = str.toLowerCase().indexOf(searchFor);
	if(foundAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	return str.substring(0,foundAt);
};
hx_strings_Strings.substringBeforeLast = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	var foundAt = str.lastIndexOf(searchFor);
	if(foundAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	return str.substring(0,foundAt);
};
hx_strings_Strings.substringBeforeLastIgnoreCase = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	searchFor = searchFor.toLowerCase();
	var foundAt = str.toLowerCase().lastIndexOf(searchFor);
	if(foundAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	return str.substring(0,foundAt);
};
hx_strings_Strings.toBool = function(str) {
	if(str == null || str.length == 0) {
		return false;
	}
	switch(str.toLowerCase()) {
	case "0":case "false":case "no":
		return false;
	default:
		return true;
	}
};
hx_strings_Strings.toBytes = function(str) {
	if(str == null) {
		return null;
	}
	return haxe_io_Bytes.ofString(str);
};
hx_strings_Strings.toChar = function(charCode) {
	return charCode;
};
hx_strings_Strings.toCharIterator = function(str) {
	if(str == null) {
		return hx_strings__$CharIterator_NullCharIterator.INSTANCE;
	} else {
		return new hx_strings__$CharIterator_StringCharIterator(str,0);
	}
};
hx_strings_Strings.toChars = function(str) {
	if(str == null) {
		return null;
	}
	var strLen = str == null ? 0 : str.length;
	if(strLen == 0) {
		return [];
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = strLen;
	while(_g1 < _g2) {
		var i = _g1++;
		_g.push(HxOverrides.cca(str,i));
	}
	return _g;
};
hx_strings_Strings.toPattern = function(str,options) {
	if(str == null) {
		return null;
	}
	return hx_strings_Pattern.compile(str,options);
};
hx_strings_Strings.toEReg = function(str,opt) {
	if(opt == null) {
		opt = "";
	}
	if(str == null) {
		throw haxe_Exception.thrown("[str] must not be null");
	}
	return new EReg(str,opt);
};
hx_strings_Strings.toFloat = function(str,ifUnparseable) {
	if(str == null) {
		return ifUnparseable;
	}
	var result = parseFloat(str);
	if(isNaN(result)) {
		return ifUnparseable;
	} else {
		return result;
	}
};
hx_strings_Strings.toFloatOrNull = function(str,ifUnparseable) {
	if(str == null) {
		return ifUnparseable;
	}
	var result = parseFloat(str);
	if(isNaN(result)) {
		return ifUnparseable;
	} else {
		return result;
	}
};
hx_strings_Strings.toHex = function(num,minDigits,upperCase) {
	if(upperCase == null) {
		upperCase = true;
	}
	if(minDigits == null) {
		minDigits = 0;
	}
	var hexed = StringTools.hex(num,0);
	if(!upperCase) {
		return hexed.toLowerCase();
	}
	if(hexed.length >= minDigits) {
		return hexed;
	}
	return hx_strings_Strings.lpad(hexed,minDigits,"0");
};
hx_strings_Strings.toInt = function(str,ifUnparseable) {
	if(str == null) {
		return ifUnparseable;
	}
	var result = Std.parseInt(str);
	if(result == null) {
		return ifUnparseable;
	} else {
		return result;
	}
};
hx_strings_Strings.toIntOrNull = function(str,ifUnparseable) {
	if(str == null) {
		return ifUnparseable;
	}
	var result = Std.parseInt(str);
	if(result == null) {
		return ifUnparseable;
	} else {
		return result;
	}
};
hx_strings_Strings.toLowerCase8 = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	return str.toLowerCase();
};
hx_strings_Strings.toLowerCaseFirstChar = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var this1 = HxOverrides.cca(str,0);
	var lowerChar = hx_strings_Char.CHAR_CASE_MAPPER.mapU2L.h[this1];
	var firstChar = lowerChar == null ? this1 : lowerChar;
	if(str.length == 1) {
		return String.fromCodePoint(firstChar);
	}
	var other = hx_strings_Strings.substr8(str,1);
	return String.fromCodePoint(firstChar) + other;
};
hx_strings_Strings.toLowerCamel = function(str,keepUppercasedWords) {
	if(keepUppercasedWords == null) {
		keepUppercasedWords = true;
	}
	if(str == null || str.length == 0) {
		return str;
	}
	var sb = new hx_strings_StringBuilder();
	if(keepUppercasedWords) {
		var _g = 0;
		var _g1 = hx_strings_Strings._splitAsciiWordsUnsafe(str);
		while(_g < _g1.length) {
			var word = _g1[_g];
			++_g;
			sb.add(hx_strings_Strings.toUpperCaseFirstChar(word));
		}
	} else {
		var _g = 0;
		var _g1 = hx_strings_Strings._splitAsciiWordsUnsafe(str);
		while(_g < _g1.length) {
			var word = _g1[_g];
			++_g;
			sb.add(hx_strings_Strings.toUpperCaseFirstChar(hx_strings_Strings.toLowerCase8(word)));
		}
	}
	return hx_strings_Strings.toLowerCaseFirstChar(sb.toString());
};
hx_strings_Strings.toLowerHyphen = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var _this = hx_strings_Strings._splitAsciiWordsUnsafe(str);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = hx_strings_Strings.toLowerCase8(_this[i]);
	}
	return result.join("-");
};
hx_strings_Strings.toLowerUnderscore = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var _this = hx_strings_Strings._splitAsciiWordsUnsafe(str);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = hx_strings_Strings.toLowerCase8(_this[i]);
	}
	return result.join("_");
};
hx_strings_Strings.toTitle = function(str,keepUppercasedWords) {
	if(keepUppercasedWords == null) {
		keepUppercasedWords = true;
	}
	if(str == null || str.length == 0) {
		return str;
	}
	if(keepUppercasedWords) {
		var _this = hx_strings_Strings._splitAsciiWordsUnsafe(str);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			var s = _this[i];
			result[i] = hx_strings_Strings.toUpperCase8(s) == s ? s : hx_strings_Strings.toUpperCaseFirstChar(hx_strings_Strings.toLowerCase8(s));
		}
		return result.join(" ");
	}
	var _this = hx_strings_Strings._splitAsciiWordsUnsafe(str);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = hx_strings_Strings.toUpperCaseFirstChar(hx_strings_Strings.toLowerCase8(_this[i]));
	}
	return result.join(" ");
};
hx_strings_Strings.toUpperCamel = function(str,keepUppercasedWords) {
	if(keepUppercasedWords == null) {
		keepUppercasedWords = true;
	}
	if(str == null || str.length == 0) {
		return str;
	}
	var sb = new hx_strings_StringBuilder();
	if(keepUppercasedWords) {
		var _g = 0;
		var _g1 = hx_strings_Strings._splitAsciiWordsUnsafe(str);
		while(_g < _g1.length) {
			var word = _g1[_g];
			++_g;
			sb.add(hx_strings_Strings.toUpperCaseFirstChar(word));
		}
	} else {
		var _g = 0;
		var _g1 = hx_strings_Strings._splitAsciiWordsUnsafe(str);
		while(_g < _g1.length) {
			var word = _g1[_g];
			++_g;
			sb.add(hx_strings_Strings.toUpperCaseFirstChar(hx_strings_Strings.toLowerCase8(word)));
		}
	}
	return sb.toString();
};
hx_strings_Strings.toUpperUnderscore = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var _this = hx_strings_Strings._splitAsciiWordsUnsafe(str);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = hx_strings_Strings.toUpperCase8(_this[i]);
	}
	return result.join("_");
};
hx_strings_Strings.toString = function(str) {
	if(str == null) {
		return "null";
	} else {
		return str;
	}
};
hx_strings_Strings.toUpperCase8 = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var sb = new hx_strings_StringBuilder();
	var _g = 0;
	var _g1 = str == null ? 0 : str.length;
	while(_g < _g1) {
		var i = _g++;
		var this1 = HxOverrides.cca(str,i);
		var upperChar = hx_strings_Char.CHAR_CASE_MAPPER.mapL2U.h[this1];
		sb.addChar(upperChar == null ? this1 : upperChar);
	}
	return sb.toString();
};
hx_strings_Strings.toUpperCaseFirstChar = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var this1 = HxOverrides.cca(str,0);
	var upperChar = hx_strings_Char.CHAR_CASE_MAPPER.mapL2U.h[this1];
	var firstChar = upperChar == null ? this1 : upperChar;
	if(str.length == 1) {
		return String.fromCodePoint(firstChar);
	}
	var other = hx_strings_Strings.substr8(str,1);
	return String.fromCodePoint(firstChar) + other;
};
hx_strings_Strings.trim = function(str,charsToRemove) {
	if(str == null || str.length == 0) {
		return str;
	}
	if(charsToRemove == null) {
		return StringTools.trim(str);
	}
	var removableChars;
	var _g = charsToRemove;
	switch(_g._hx_index) {
	case 0:
		var str1 = _g.v;
		removableChars = hx_strings_Strings.toChars(str1);
		break;
	case 1:
		var chars = _g.v;
		removableChars = chars;
		break;
	}
	var this1 = hx_strings_internal__$Either2__$Either2.b(removableChars);
	var this2 = hx_strings_internal__$Either2__$Either2.b(removableChars);
	return hx_strings_Strings.trimLeft(hx_strings_Strings.trimRight(str,this1),this2);
};
hx_strings_Strings.trimRight = function(str,charsToRemove) {
	if(str == null || str.length == 0) {
		return str;
	}
	if(charsToRemove == null) {
		return StringTools.rtrim(str);
	}
	var removableChars;
	var _g = charsToRemove;
	switch(_g._hx_index) {
	case 0:
		var str1 = _g.v;
		removableChars = hx_strings_Strings.toChars(str1);
		break;
	case 1:
		var chars = _g.v;
		removableChars = chars;
		break;
	}
	if(removableChars.length == 0) {
		return str;
	}
	var len = str == null ? 0 : str.length;
	var i = len - 1;
	while(i > -1 && removableChars.indexOf(hx_strings_Strings.charCodeAt8(hx_strings_Strings.charAt8(str,i),0)) > -1) --i;
	if(i < len - 1) {
		return hx_strings_Strings.substring8(str,0,i + 1);
	}
	return str;
};
hx_strings_Strings.trimLeft = function(str,charsToRemove) {
	if(str == null) {
		return str;
	}
	if(charsToRemove == null) {
		return StringTools.ltrim(str);
	}
	var removableChars;
	var _g = charsToRemove;
	switch(_g._hx_index) {
	case 0:
		var str1 = _g.v;
		removableChars = hx_strings_Strings.toChars(str1);
		break;
	case 1:
		var chars = _g.v;
		removableChars = chars;
		break;
	}
	if(removableChars.length == 0) {
		return str;
	}
	var len = str == null ? 0 : str.length;
	var i = 0;
	while(i < len && removableChars.indexOf(hx_strings_Strings.charCodeAt8(hx_strings_Strings.charAt8(str,i),0)) > -1) ++i;
	if(i > 0) {
		return hx_strings_Strings.substring8(str,i,len);
	}
	return str;
};
hx_strings_Strings.trimLines = function(str,charsToRemove) {
	if(str == null || str.length == 0) {
		return str;
	}
	var _this = hx_strings_Strings.REGEX_SPLIT_LINES.ereg.split(str);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = hx_strings_Strings.trim(_this[i],charsToRemove);
	}
	return result.join("\n");
};
hx_strings_Strings.trimToNull = function(str) {
	if(str == null) {
		return null;
	}
	var trimmed = hx_strings_Strings.trim(str);
	if(trimmed == null || trimmed.length == 0) {
		return null;
	}
	return trimmed;
};
hx_strings_Strings.trimToEmpty = function(str) {
	var trimmed = hx_strings_Strings.trim(str);
	if(trimmed == null || trimmed.length == 0) {
		return "";
	}
	return trimmed;
};
hx_strings_Strings.truncate = function(str,maxLength) {
	if((str == null ? 0 : str.length) <= maxLength) {
		return str;
	} else {
		return hx_strings_Strings.substring8(str,0,maxLength);
	}
};
hx_strings_Strings.urlDecode = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	return decodeURIComponent(str.split("+").join(" "));
};
hx_strings_Strings.urlEncode = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	return encodeURIComponent(str);
};
hx_strings_Strings.wrap = function(str,maxLineLength,splitLongWords,newLineSeparator) {
	if(newLineSeparator == null) {
		newLineSeparator = "\n";
	}
	if(splitLongWords == null) {
		splitLongWords = true;
	}
	if((str == null ? 0 : str.length) <= maxLineLength || maxLineLength < 1) {
		return str;
	}
	var sb = new hx_strings_StringBuilder();
	var wordChars = [];
	var currLineLength = 0;
	var _g = 0;
	var _g1 = hx_strings_Strings.toChars(str);
	while(_g < _g1.length) {
		var ch = _g1[_g];
		++_g;
		if(ch > 8 && ch < 14 || ch == 32) {
			if(wordChars.length > 0) {
				var _g2 = 0;
				while(_g2 < wordChars.length) {
					var wordCh = wordChars[_g2];
					++_g2;
					if(currLineLength == maxLineLength && splitLongWords) {
						sb.add(newLineSeparator);
						currLineLength = 0;
					}
					++currLineLength;
					sb.addChar(wordCh);
				}
				wordChars = [];
			}
			if(currLineLength >= maxLineLength) {
				sb.add(newLineSeparator);
				currLineLength = 0;
			}
			sb.addChar(ch);
			++currLineLength;
		} else {
			wordChars.push(ch);
		}
	}
	if(wordChars.length > 0) {
		var _g = 0;
		while(_g < wordChars.length) {
			var wordCh = wordChars[_g];
			++_g;
			if(currLineLength == maxLineLength && splitLongWords) {
				sb.add(newLineSeparator);
				currLineLength = 0;
			}
			++currLineLength;
			sb.addChar(wordCh);
		}
	}
	return sb.toString();
};
var hx_strings_StringDiff = function() {
	this.at = -1;
};
$hxClasses["hx.strings.StringDiff"] = hx_strings_StringDiff;
hx_strings_StringDiff.__name__ = "hx.strings.StringDiff";
hx_strings_StringDiff.prototype = {
	at: null
	,left: null
	,right: null
	,toString: function() {
		return "StringDiff[at=" + this.at + ", left=" + this.left + ", right=" + this.right + "]";
	}
	,__class__: hx_strings_StringDiff
};
var hx_strings_HashCodeAlgorithm = $hxEnums["hx.strings.HashCodeAlgorithm"] = { __ename__:"hx.strings.HashCodeAlgorithm",__constructs__:null
	,PLATFORM_SPECIFIC: {_hx_name:"PLATFORM_SPECIFIC",_hx_index:0,__enum__:"hx.strings.HashCodeAlgorithm",toString:$estr}
	,ADLER32: {_hx_name:"ADLER32",_hx_index:1,__enum__:"hx.strings.HashCodeAlgorithm",toString:$estr}
	,CRC32B: {_hx_name:"CRC32B",_hx_index:2,__enum__:"hx.strings.HashCodeAlgorithm",toString:$estr}
	,DJB2A: {_hx_name:"DJB2A",_hx_index:3,__enum__:"hx.strings.HashCodeAlgorithm",toString:$estr}
	,JAVA: {_hx_name:"JAVA",_hx_index:4,__enum__:"hx.strings.HashCodeAlgorithm",toString:$estr}
	,SDBM: {_hx_name:"SDBM",_hx_index:5,__enum__:"hx.strings.HashCodeAlgorithm",toString:$estr}
};
hx_strings_HashCodeAlgorithm.__constructs__ = [hx_strings_HashCodeAlgorithm.PLATFORM_SPECIFIC,hx_strings_HashCodeAlgorithm.ADLER32,hx_strings_HashCodeAlgorithm.CRC32B,hx_strings_HashCodeAlgorithm.DJB2A,hx_strings_HashCodeAlgorithm.JAVA,hx_strings_HashCodeAlgorithm.SDBM];
hx_strings_HashCodeAlgorithm.__empty_constructs__ = [hx_strings_HashCodeAlgorithm.PLATFORM_SPECIFIC,hx_strings_HashCodeAlgorithm.ADLER32,hx_strings_HashCodeAlgorithm.CRC32B,hx_strings_HashCodeAlgorithm.DJB2A,hx_strings_HashCodeAlgorithm.JAVA,hx_strings_HashCodeAlgorithm.SDBM];
var hx_strings_AnsiToHtmlRenderMethod = $hxEnums["hx.strings.AnsiToHtmlRenderMethod"] = { __ename__:"hx.strings.AnsiToHtmlRenderMethod",__constructs__:null
	,StyleAttributes: {_hx_name:"StyleAttributes",_hx_index:0,__enum__:"hx.strings.AnsiToHtmlRenderMethod",toString:$estr}
	,CssClasses: {_hx_name:"CssClasses",_hx_index:1,__enum__:"hx.strings.AnsiToHtmlRenderMethod",toString:$estr}
	,CssClassesCallback: ($_=function(func) { return {_hx_index:2,func:func,__enum__:"hx.strings.AnsiToHtmlRenderMethod",toString:$estr}; },$_._hx_name="CssClassesCallback",$_.__params__ = ["func"],$_)
};
hx_strings_AnsiToHtmlRenderMethod.__constructs__ = [hx_strings_AnsiToHtmlRenderMethod.StyleAttributes,hx_strings_AnsiToHtmlRenderMethod.CssClasses,hx_strings_AnsiToHtmlRenderMethod.CssClassesCallback];
hx_strings_AnsiToHtmlRenderMethod.__empty_constructs__ = [hx_strings_AnsiToHtmlRenderMethod.StyleAttributes,hx_strings_AnsiToHtmlRenderMethod.CssClasses];
var hx_strings_AnsiState = function(copyFrom) {
	this.underline = false;
	this.bold = false;
	this.blink = false;
	if(copyFrom == null) {
		this.reset();
	} else {
		this.copyFrom(copyFrom);
	}
};
$hxClasses["hx.strings.AnsiState"] = hx_strings_AnsiState;
hx_strings_AnsiState.__name__ = "hx.strings.AnsiState";
hx_strings_AnsiState.defaultCssClassesCallback = function(state) {
	var classes = [];
	if(state.fgcolor != null) {
		classes.push("ansi_fg_" + state.fgcolor);
	}
	if(state.bgcolor != null) {
		classes.push("ansi_bg_" + state.bgcolor);
	}
	if(state.bold) {
		classes.push("ansi_bold");
	}
	if(state.underline) {
		classes.push("ansi_underline");
	}
	if(state.blink) {
		classes.push("ansi_blink");
	}
	return classes.join(" ");
};
hx_strings_AnsiState.prototype = {
	bgcolor: null
	,blink: null
	,bold: null
	,fgcolor: null
	,underline: null
	,isActive: function() {
		if(!(this.fgcolor != null || this.bgcolor != null || this.bold || this.underline)) {
			return this.blink;
		} else {
			return true;
		}
	}
	,reset: function() {
		this.fgcolor = null;
		this.bgcolor = null;
		this.bold = false;
		this.underline = false;
		this.blink = false;
	}
	,copyFrom: function(other) {
		this.fgcolor = other.fgcolor;
		this.bgcolor = other.bgcolor;
		this.bold = other.bold;
		this.underline = other.underline;
		this.blink = other.blink;
	}
	,setGraphicModeParameter: function(param) {
		switch(param) {
		case 0:
			this.reset();
			break;
		case 1:
			this.bold = true;
			break;
		case 4:
			this.underline = true;
			break;
		case 5:
			this.blink = true;
			break;
		case 30:
			this.fgcolor = "black";
			break;
		case 31:
			this.fgcolor = "red";
			break;
		case 32:
			this.fgcolor = "green";
			break;
		case 33:
			this.fgcolor = "yellow";
			break;
		case 34:
			this.fgcolor = "blue";
			break;
		case 35:
			this.fgcolor = "magenta";
			break;
		case 36:
			this.fgcolor = "cyan";
			break;
		case 37:
			this.fgcolor = "white";
			break;
		case 40:
			this.bgcolor = "black";
			break;
		case 41:
			this.bgcolor = "red";
			break;
		case 42:
			this.bgcolor = "green";
			break;
		case 43:
			this.bgcolor = "yellow";
			break;
		case 44:
			this.bgcolor = "blue";
			break;
		case 45:
			this.bgcolor = "magenta";
			break;
		case 46:
			this.bgcolor = "cyan";
			break;
		case 47:
			this.bgcolor = "white";
			break;
		}
	}
	,toCSS: function(renderMethod) {
		if(this.fgcolor != null || this.bgcolor != null || this.bold || this.underline || this.blink) {
			var sb = new hx_strings_StringBuilder();
			if(renderMethod == null) {
				renderMethod = hx_strings_AnsiToHtmlRenderMethod.StyleAttributes;
			}
			switch(renderMethod._hx_index) {
			case 0:
				if(this.fgcolor != null) {
					sb.add("color:").add(this.fgcolor).add(";");
				}
				if(this.bgcolor != null) {
					sb.add("background-color:").add(this.bgcolor).add(";");
				}
				if(this.bold) {
					sb.add("font-weight:bold;");
				}
				if(this.underline) {
					sb.add("text-decoration:underline;");
				}
				if(this.blink) {
					sb.add("text-decoration:blink;");
				}
				break;
			case 1:
				sb.add(hx_strings_AnsiState.defaultCssClassesCallback(this));
				break;
			case 2:
				var func = renderMethod.func;
				sb.add(func(this));
				break;
			}
			return sb.toString();
		}
		return "";
	}
	,__class__: hx_strings_AnsiState
};
var hx_strings_internal_Bits = function() { };
$hxClasses["hx.strings.internal.Bits"] = hx_strings_internal_Bits;
hx_strings_internal_Bits.__name__ = "hx.strings.internal.Bits";
hx_strings_internal_Bits.clearBit = function(num,bitPos) {
	return num & ~(1 << bitPos - 1);
};
hx_strings_internal_Bits.setBit = function(num,bitPos) {
	return num | 1 << bitPos - 1;
};
hx_strings_internal_Bits.toggleBit = function(num,bitPos) {
	return num ^ 1 << bitPos - 1;
};
hx_strings_internal_Bits.getBit = function(num,bitPos) {
	return 1 == (num >> bitPos - 1 & 1);
};
var hx_strings_internal_Either2 = {};
hx_strings_internal_Either2.__properties__ = {get_value:"get_value"};
hx_strings_internal_Either2._new = function(value) {
	var this1 = value;
	return this1;
};
hx_strings_internal_Either2.get_value = function(this1) {
	return this1;
};
hx_strings_internal_Either2.fromA = function(value) {
	var this1 = hx_strings_internal__$Either2__$Either2.a(value);
	return this1;
};
hx_strings_internal_Either2.fromB = function(value) {
	var this1 = hx_strings_internal__$Either2__$Either2.b(value);
	return this1;
};
var hx_strings_internal__$Either2__$Either2 = $hxEnums["hx.strings.internal._Either2._Either2"] = { __ename__:"hx.strings.internal._Either2._Either2",__constructs__:null
	,a: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"hx.strings.internal._Either2._Either2",toString:$estr}; },$_._hx_name="a",$_.__params__ = ["v"],$_)
	,b: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hx.strings.internal._Either2._Either2",toString:$estr}; },$_._hx_name="b",$_.__params__ = ["v"],$_)
};
hx_strings_internal__$Either2__$Either2.__constructs__ = [hx_strings_internal__$Either2__$Either2.a,hx_strings_internal__$Either2__$Either2.b];
hx_strings_internal__$Either2__$Either2.__empty_constructs__ = [];
var hx_strings_internal_Either3 = {};
hx_strings_internal_Either3.__properties__ = {get_value:"get_value"};
hx_strings_internal_Either3._new = function(value) {
	var this1 = value;
	return this1;
};
hx_strings_internal_Either3.get_value = function(this1) {
	return this1;
};
hx_strings_internal_Either3.fromA = function(value) {
	var this1 = hx_strings_internal__$Either3__$Either3.a(value);
	return this1;
};
hx_strings_internal_Either3.fromB = function(value) {
	var this1 = hx_strings_internal__$Either3__$Either3.b(value);
	return this1;
};
hx_strings_internal_Either3.fromC = function(value) {
	var this1 = hx_strings_internal__$Either3__$Either3.c(value);
	return this1;
};
var hx_strings_internal_OneOrMany = {};
hx_strings_internal_OneOrMany.fromSingle = function(value) {
	return [value];
};
var hx_strings_internal_RingBuffer = {};
hx_strings_internal_RingBuffer._new = function(size) {
	var this1 = new hx_strings_internal__$RingBuffer_RingBufferImpl(size);
	return this1;
};
hx_strings_internal_RingBuffer.get = function(this1,index) {
	return this1.get(index);
};
var hx_strings_internal__$RingBuffer_RingBufferIterator = function(buff) {
	this.idx = -1;
	this.buff = buff;
};
$hxClasses["hx.strings.internal._RingBuffer.RingBufferIterator"] = hx_strings_internal__$RingBuffer_RingBufferIterator;
hx_strings_internal__$RingBuffer_RingBufferIterator.__name__ = "hx.strings.internal._RingBuffer.RingBufferIterator";
hx_strings_internal__$RingBuffer_RingBufferIterator.prototype = {
	buff: null
	,idx: null
	,hasNext: function() {
		return this.idx + 1 < this.buff.length;
	}
	,next: function() {
		this.idx++;
		return this.buff.get(this.idx);
	}
	,__class__: hx_strings_internal__$RingBuffer_RingBufferIterator
};
var hx_ws_Buffer = function() {
	this.chunks = [];
	this.currentData = null;
	this.currentOffset = 0;
	this.length = 0;
	this.available = 0;
};
$hxClasses["hx.ws.Buffer"] = hx_ws_Buffer;
hx_ws_Buffer.__name__ = "hx.ws.Buffer";
hx_ws_Buffer.prototype = {
	available: null
	,length: null
	,currentOffset: null
	,currentData: null
	,chunks: null
	,writeByte: function(v) {
		var b = new haxe_io_Bytes(new ArrayBuffer(1));
		b.b[0] = v;
		this.writeBytes(b);
	}
	,writeShort: function(v) {
		var b = new haxe_io_Bytes(new ArrayBuffer(2));
		b.b[0] = v >> 8 & 255;
		b.b[1] = v & 255;
		this.writeBytes(b);
	}
	,writeInt: function(v) {
		var b = new haxe_io_Bytes(new ArrayBuffer(4));
		b.b[0] = v >> 24 & 255;
		b.b[1] = v >> 16 & 255;
		b.b[2] = v >> 8 & 255;
		b.b[3] = v & 255;
		this.writeBytes(b);
	}
	,writeBytes: function(data) {
		this.chunks.push(data);
		this.available += data.length;
		this.length = this.available;
	}
	,readAllAvailableBytes: function() {
		return this.readBytes(this.available);
	}
	,readLine: function() {
		var bytes = this.readUntil("\n");
		if(bytes == null) {
			return null;
		}
		return StringTools.trim(bytes.toString());
	}
	,readLinesUntil: function(delimiter) {
		var bytes = this.readUntil(delimiter);
		if(bytes == null) {
			return null;
		}
		return StringTools.trim(bytes.toString()).split("\n");
	}
	,readUntil: function(delimiter) {
		var dl = delimiter.length;
		var _g = 0;
		var _g1 = this.available - dl;
		while(_g < _g1) {
			var i = _g++;
			var matched = true;
			var _g2 = 0;
			var _g3 = dl;
			while(_g2 < _g3) {
				var j = _g2++;
				if(this.peekByte(this.currentOffset + i + j + 1) == HxOverrides.cca(delimiter,j)) {
					continue;
				}
				matched = false;
				break;
			}
			if(matched) {
				var bytes = this.readBytes(i + dl + 1);
				return bytes;
			}
		}
		return null;
	}
	,readBytes: function(count) {
		var count2 = Math.min(count,this.available) | 0;
		var out = new haxe_io_Bytes(new ArrayBuffer(count2));
		var _g = 0;
		var _g1 = count2;
		while(_g < _g1) {
			var n = _g++;
			var v = this.readByte();
			out.b[n] = v;
		}
		return out;
	}
	,readUnsignedShort: function() {
		var h = this.readByte();
		var l = this.readByte();
		return h << 8 | l;
	}
	,readUnsignedInt: function() {
		var v3 = this.readByte();
		var v2 = this.readByte();
		var v1 = this.readByte();
		var v0 = this.readByte();
		return v3 << 24 | v2 << 16 | v1 << 8 | v0;
	}
	,readByte: function() {
		if(this.available <= 0) {
			throw haxe_Exception.thrown("No bytes available");
		}
		while(this.currentData == null || this.currentOffset >= this.currentData.length) {
			this.currentOffset = 0;
			this.currentData = this.chunks.shift();
		}
		this.available--;
		this.length = this.available;
		return this.currentData.b[this.currentOffset++];
	}
	,peekByte: function(offset) {
		if(this.available <= 0) {
			throw haxe_Exception.thrown("No bytes available");
		}
		var tempOffset = offset;
		var tempData = this.chunks[0];
		if(tempData == null) {
			tempData = this.currentData;
		}
		var chunkIndex = 0;
		while(tempOffset >= tempData.length) {
			tempOffset -= tempData.length;
			++chunkIndex;
			tempData = this.chunks[chunkIndex];
		}
		return tempData.b[tempOffset];
	}
	,peekUntil: function(byte) {
		var tempOffset = this.currentOffset;
		var tempData = this.chunks[0];
		if(tempData == null) {
			tempData = this.currentData;
		}
		var chunkIndex = 0;
		while(tempOffset >= tempData.length) {
			tempOffset -= tempData.length;
			++chunkIndex;
			tempData = this.chunks[chunkIndex];
		}
		while(tempOffset < tempData.length) {
			if(tempData.b[tempOffset] == byte) {
				return tempOffset + 1;
			}
			++tempOffset;
		}
		return -1;
	}
	,endsWith: function(e) {
		var i = this.available - e.length;
		var n = this.currentOffset;
		if(i <= 0) {
			return false;
		}
		while(i < this.available) {
			if(this.peekByte(i) != HxOverrides.cca(e,n)) {
				return false;
			}
			++i;
			++n;
		}
		return true;
	}
	,__class__: hx_ws_Buffer
};
var hx_ws_MessageType = $hxEnums["hx.ws.MessageType"] = { __ename__:"hx.ws.MessageType",__constructs__:null
	,BytesMessage: ($_=function(content) { return {_hx_index:0,content:content,__enum__:"hx.ws.MessageType",toString:$estr}; },$_._hx_name="BytesMessage",$_.__params__ = ["content"],$_)
	,StrMessage: ($_=function(content) { return {_hx_index:1,content:content,__enum__:"hx.ws.MessageType",toString:$estr}; },$_._hx_name="StrMessage",$_.__params__ = ["content"],$_)
};
hx_ws_MessageType.__constructs__ = [hx_ws_MessageType.BytesMessage,hx_ws_MessageType.StrMessage];
hx_ws_MessageType.__empty_constructs__ = [];
var hx_ws_WebSocket = function(url,immediateOpen) {
	if(immediateOpen == null) {
		immediateOpen = true;
	}
	this._onmessage = null;
	this._onmessagebeforeready = null;
	this._onerrorbeforeready = null;
	this._onclosebeforeready = null;
	this._onopenbeforeready = null;
	this._ws = null;
	this._url = url;
	if(immediateOpen) {
		this.open();
	}
};
$hxClasses["hx.ws.WebSocket"] = hx_ws_WebSocket;
hx_ws_WebSocket.__name__ = "hx.ws.WebSocket";
hx_ws_WebSocket.prototype = {
	_url: null
	,_ws: null
	,createSocket: function() {
		return new WebSocket(this._url);
	}
	,open: function() {
		if(this._ws != null) {
			throw haxe_Exception.thrown("Socket already connected");
		}
		this._ws = this.createSocket();
		this.set_binaryType("arraybuffer");
		if(this._onopenbeforeready != null) {
			this.set_onopen(this._onopenbeforeready);
			this._onopenbeforeready = null;
		}
		if(this._onclosebeforeready != null) {
			this.set_onclose(this._onclosebeforeready);
			this._onclosebeforeready = null;
		}
		if(this._onerrorbeforeready != null) {
			this.set_onerror(this._onerrorbeforeready);
			this._onerrorbeforeready = null;
		}
		if(this._onmessagebeforeready != null) {
			this.set_onmessage(this._onmessagebeforeready);
			this._onmessagebeforeready = null;
		}
	}
	,_onopenbeforeready: null
	,get_onopen: function() {
		return this._ws.onopen;
	}
	,set_onopen: function(value) {
		if(this._ws == null) {
			this._onopenbeforeready = value;
			return value;
		}
		this._ws.onopen = value;
		return value;
	}
	,_onclosebeforeready: null
	,get_onclose: function() {
		return this._ws.onclose;
	}
	,set_onclose: function(value) {
		if(this._ws == null) {
			this._onclosebeforeready = value;
			return value;
		}
		this._ws.onclose = value;
		return value;
	}
	,_onerrorbeforeready: null
	,get_onerror: function() {
		return this._ws.onerror;
	}
	,set_onerror: function(value) {
		if(this._ws == null) {
			this._onerrorbeforeready = value;
			return value;
		}
		this._ws.onerror = value;
		return value;
	}
	,_onmessagebeforeready: null
	,_onmessage: null
	,get_onmessage: function() {
		return this._onmessage;
	}
	,set_onmessage: function(value) {
		var _gthis = this;
		if(this._ws == null) {
			this._onmessagebeforeready = value;
			return value;
		}
		this._onmessage = value;
		this._ws.onmessage = function(message) {
			if(_gthis._onmessage != null) {
				if(((message.data) instanceof ArrayBuffer)) {
					var buffer = new hx_ws_Buffer();
					buffer.writeBytes(haxe_io_Bytes.ofData(message.data));
					_gthis._onmessage(hx_ws_MessageType.BytesMessage(buffer));
				} else {
					_gthis._onmessage(hx_ws_MessageType.StrMessage(message.data));
				}
			}
		};
		return value;
	}
	,get_binaryType: function() {
		return this._ws.binaryType;
	}
	,set_binaryType: function(value) {
		this._ws.binaryType = value;
		return value;
	}
	,close: function() {
		this._ws.close();
		this.set_onopen(null);
		this.set_onclose(null);
		this.set_onerror(null);
		this.set_onmessage(null);
		this._onmessage = null;
		this._ws = null;
	}
	,send: function(msg) {
		if(((msg) instanceof haxe_io_Bytes)) {
			var bytes = js_Boot.__cast(msg , haxe_io_Bytes);
			this._ws.send(bytes.b.bufferValue);
		} else if(((msg) instanceof hx_ws_Buffer)) {
			var buffer = js_Boot.__cast(msg , hx_ws_Buffer);
			this._ws.send(buffer.readAllAvailableBytes().b.bufferValue);
		} else {
			this._ws.send(msg);
		}
	}
	,__class__: hx_ws_WebSocket
	,__properties__: {set_binaryType:"set_binaryType",get_binaryType:"get_binaryType",set_onmessage:"set_onmessage",get_onmessage:"get_onmessage",set_onerror:"set_onerror",get_onerror:"get_onerror",set_onclose:"set_onclose",get_onclose:"get_onclose",set_onopen:"set_onopen",get_onopen:"get_onopen"}
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = "js.Browser";
js_Browser.__properties__ = {get_supported:"get_supported"};
js_Browser.get_supported = function() {
	if(typeof(window) != "undefined" && typeof(window.location) != "undefined") {
		return typeof(window.location.protocol) == "string";
	} else {
		return false;
	}
};
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") {
		return new XMLHttpRequest();
	}
	if(typeof ActiveXObject != "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP");
	}
	throw haxe_Exception.thrown("Unable to create XMLHttpRequest object.");
};
var js_Cookie = function() { };
$hxClasses["js.Cookie"] = js_Cookie;
js_Cookie.__name__ = "js.Cookie";
js_Cookie.set = function(name,value,expireDelay,path,domain) {
	var s = name + "=" + encodeURIComponent(value);
	if(expireDelay != null) {
		var d = new Date(new Date().getTime() + expireDelay * 1000);
		s += ";expires=" + d.toGMTString();
	}
	if(path != null) {
		s += ";path=" + path;
	}
	if(domain != null) {
		s += ";domain=" + domain;
	}
	window.document.cookie = s;
};
js_Cookie.all = function() {
	var h = new haxe_ds_StringMap();
	var a = window.document.cookie.split(";");
	var _g = 0;
	while(_g < a.length) {
		var e = a[_g];
		++_g;
		e = StringTools.ltrim(e);
		var t = e.split("=");
		if(t.length < 2) {
			continue;
		}
		var value = decodeURIComponent(t[1].split("+").join(" "));
		h.h[t[0]] = value;
	}
	return h;
};
js_Cookie.get = function(name) {
	return js_Cookie.all().h[name];
};
js_Cookie.exists = function(name) {
	var _this = js_Cookie.all();
	return Object.prototype.hasOwnProperty.call(_this.h,name);
};
js_Cookie.remove = function(name,path,domain) {
	js_Cookie.set(name,"",-10,path,domain);
};
var net_Requests = function() { };
$hxClasses["net.Requests"] = net_Requests;
net_Requests.__name__ = "net.Requests";
net_Requests.greet = function(greeting,callback) {
	var callback1 = callback;
	Networker.addHandler(function(event) {
		return net_Requests.greet_handler(callback1,event);
	});
	Networker.emitEvent(net_shared_ClientEvent.Greet(greeting,1673465876,Config.dict.getInt("min-server-build")));
};
net_Requests.greet_handler = function(callback,event) {
	if(event._hx_index == 0) {
		var data = event.data;
		callback(data);
		return true;
	} else {
		return false;
	}
};
net_Requests.signin = function(login,password,remember,onSuccess,onFail) {
	var login1 = login;
	var password1 = password;
	var remember1 = remember;
	var onSuccess1 = onSuccess;
	var onFail1 = onFail;
	Networker.addHandler(function(event) {
		return net_Requests.signin_handler(login1,password1,remember1,onSuccess1,onFail1,event);
	});
	Networker.emitEvent(net_shared_ClientEvent.Login(login,password));
};
net_Requests.signin_handler = function(login,password,remember,onSuccess,onFail,event) {
	if(event._hx_index == 18) {
		var result = event.result;
		switch(result._hx_index) {
		case 0:
			var incomingChallenges = result.incomingChallenges;
			LoginManager.assignCredentials(login,password,remember ? CredentialsPreservation.LongTerm : CredentialsPreservation.ShortTerm);
			GlobalBroadcaster.broadcast(GlobalEvent.IncomingChallengesBatch(incomingChallenges));
			onSuccess();
			break;
		case 1:
			var incomingChallenges = result.incomingChallenges;
			var gameInfo = result.gameInfo;
			LoginManager.assignCredentials(login,password,remember ? CredentialsPreservation.LongTerm : CredentialsPreservation.ShortTerm);
			GlobalBroadcaster.broadcast(GlobalEvent.IncomingChallengesBatch(incomingChallenges));
			var parsedData = serialization_GameLogParser.parse(gameInfo.currentLog);
			gfx_SceneManager.toScreen(gfx_ScreenType.LiveGame(gameInfo.id,gfx_game_LiveGameConstructor.Ongoing(parsedData,gameInfo.timeData,null)));
			break;
		case 2:
			onFail();
			break;
		}
		return true;
	} else {
		return false;
	}
};
net_Requests.register = function(login,password,remember,onSuccess,onFail) {
	var login1 = login;
	var password1 = password;
	var remember1 = remember;
	var onSuccess1 = onSuccess;
	var onFail1 = onFail;
	Networker.addHandler(function(event) {
		return net_Requests.register_handler(login1,password1,remember1,onSuccess1,onFail1,event);
	});
	Networker.emitEvent(net_shared_ClientEvent.Register(login,password));
};
net_Requests.register_handler = function(login,password,remember,onSuccess,onFail,event) {
	if(event._hx_index == 19) {
		var result = event.result;
		if(result == net_shared_dataobj_RegisterResult.Success) {
			LoginManager.assignCredentials(login,password,remember ? CredentialsPreservation.LongTerm : CredentialsPreservation.ShortTerm);
			onSuccess();
		} else {
			onFail();
		}
		return true;
	} else {
		return false;
	}
};
net_Requests.getGame = function(id) {
	var id1 = id;
	Networker.addHandler(function(event) {
		return net_Requests.getGame_handler(id1,event);
	});
	Networker.emitEvent(net_shared_ClientEvent.GetGame(id));
};
net_Requests.getGame_handler = function(id,event) {
	switch(event._hx_index) {
	case 3:
		var log = event.log;
		var parsedData = serialization_GameLogParser.parse(log);
		gfx_SceneManager.toScreen(gfx_ScreenType.LiveGame(id,gfx_game_LiveGameConstructor.Past(parsedData,null)));
		break;
	case 4:
		var timeData = event.timeData;
		var currentLog = event.currentLog;
		var parsedData = serialization_GameLogParser.parse(currentLog);
		gfx_SceneManager.toScreen(gfx_ScreenType.LiveGame(id,gfx_game_LiveGameConstructor.Ongoing(parsedData,timeData,null)));
		break;
	case 5:
		gfx_SceneManager.toScreen(gfx_ScreenType.MainMenu);
		break;
	default:
		return false;
	}
	return true;
};
net_Requests.getOpenChallenge = function(id) {
	Networker.addHandler(net_Requests.getOpenChallenge_handler);
	Networker.emitEvent(net_shared_ClientEvent.GetOpenChallenge(id));
};
net_Requests.getOpenChallenge_handler = function(event) {
	switch(event._hx_index) {
	case 14:
		var data = event.data;
		gfx_SceneManager.toScreen(gfx_ScreenType.ChallengeJoining(data));
		break;
	case 15:
		var data = event.data;
		var parsedData = serialization_GameLogParser.parse(data.currentLog);
		gfx_SceneManager.toScreen(gfx_ScreenType.LiveGame(data.id,gfx_game_LiveGameConstructor.Ongoing(parsedData,data.timeData,null)));
		break;
	case 16:
		var gameID = event.gameID;
		var log = event.log;
		var parsedData = serialization_GameLogParser.parse(log);
		gfx_SceneManager.toScreen(gfx_ScreenType.LiveGame(gameID,gfx_game_LiveGameConstructor.Past(parsedData,null)));
		break;
	case 17:
		gfx_SceneManager.toScreen(gfx_ScreenType.MainMenu);
		gfx_Dialogs.alert(dict_Phrase.REQUESTS_ERROR_CHALLENGE_NOT_FOUND,dict_Phrase.REQUESTS_ERROR_DIALOG_TITLE);
		break;
	default:
		return false;
	}
	return true;
};
net_Requests.getMiniProfile = function(login) {
	var login1 = login;
	Networker.addHandler(function(event) {
		return net_Requests.getMiniProfile_handler(login1,event);
	});
	Networker.emitEvent(net_shared_ClientEvent.GetMiniProfile(login));
};
net_Requests.getMiniProfile_handler = function(login,event) {
	switch(event._hx_index) {
	case 43:
		var data = event.data;
		gfx_Dialogs.getQueue().add(new gfx_profile_complex_$components_MiniProfile(login,data));
		break;
	case 48:
		gfx_Dialogs.alert(dict_Phrase.REQUESTS_ERROR_PLAYER_NOT_FOUND,dict_Phrase.REQUESTS_ERROR_DIALOG_TITLE);
		break;
	default:
		return false;
	}
	return true;
};
net_Requests.getPlayerProfile = function(login,returnToMainOnFailed) {
	if(returnToMainOnFailed == null) {
		returnToMainOnFailed = false;
	}
	var login1 = login;
	var returnToMainOnFailed1 = returnToMainOnFailed;
	Networker.addHandler(function(event) {
		return net_Requests.getPlayerProfile_handler(login1,returnToMainOnFailed1,event);
	});
	Networker.emitEvent(net_shared_ClientEvent.GetPlayerProfile(login));
};
net_Requests.getPlayerProfile_handler = function(login,returnToMainOnFailed,event) {
	switch(event._hx_index) {
	case 44:
		var data = event.data;
		gfx_SceneManager.toScreen(gfx_ScreenType.PlayerProfile(login,data));
		break;
	case 48:
		if(returnToMainOnFailed) {
			gfx_SceneManager.toScreen(gfx_ScreenType.MainMenu);
		}
		gfx_Dialogs.alert(dict_Phrase.REQUESTS_ERROR_PLAYER_NOT_FOUND,dict_Phrase.REQUESTS_ERROR_DIALOG_TITLE);
		break;
	default:
		return false;
	}
	return true;
};
net_Requests.getPlayerPastGames = function(login,after,pageSize,filterByTimeControl,callback) {
	var callback1 = callback;
	Networker.addHandler(function(event) {
		return net_Requests.getPlayerGames_handler(callback1,event);
	});
	Networker.emitEvent(net_shared_ClientEvent.GetGamesByLogin(login,after,pageSize,filterByTimeControl));
};
net_Requests.getPlayerOngoingGames = function(login,callback) {
	var callback1 = callback;
	Networker.addHandler(function(event) {
		return net_Requests.getPlayerGames_handler(callback1,event);
	});
	Networker.emitEvent(net_shared_ClientEvent.GetOngoingGamesByLogin(login));
};
net_Requests.getPlayerGames_handler = function(callback,event) {
	switch(event._hx_index) {
	case 45:
		var games = event.games;
		var hasNext = event.hasNext;
		callback(games,hasNext);
		break;
	case 48:
		gfx_Dialogs.alert(dict_Phrase.REQUESTS_ERROR_PLAYER_NOT_FOUND,dict_Phrase.REQUESTS_ERROR_DIALOG_TITLE);
		break;
	default:
		return false;
	}
	return true;
};
net_Requests.getPlayerStudies = function(login,after,pageSize,filterByTags,callback) {
	var callback1 = callback;
	Networker.addHandler(function(event) {
		return net_Requests.getPlayerStudies_handler(callback1,event);
	});
	Networker.emitEvent(net_shared_ClientEvent.GetStudiesByLogin(login,after,pageSize,filterByTags));
};
net_Requests.getPlayerStudies_handler = function(callback,event) {
	switch(event._hx_index) {
	case 46:
		var studies = event.studies;
		var hasNext = event.hasNext;
		callback(studies,hasNext);
		break;
	case 48:
		gfx_Dialogs.alert(dict_Phrase.REQUESTS_ERROR_PLAYER_NOT_FOUND,dict_Phrase.REQUESTS_ERROR_DIALOG_TITLE);
		break;
	default:
		return false;
	}
	return true;
};
net_Requests.getStudy = function(id) {
	var id1 = id;
	Networker.addHandler(function(event) {
		return net_Requests.getStudy_handler(id1,event);
	});
	Networker.emitEvent(net_shared_ClientEvent.GetStudy(id));
};
net_Requests.getStudy_handler = function(id,event) {
	switch(event._hx_index) {
	case 40:
		var info = event.info;
		var ownerLogin = event.ownerLogin;
		gfx_SceneManager.toScreen(gfx_ScreenType.Analysis(info.variantStr,0,new gfx_profile_data_StudyData(id,ownerLogin,info)));
		break;
	case 41:
		gfx_SceneManager.toScreen(gfx_ScreenType.MainMenu);
		gfx_Dialogs.alert(dict_Phrase.REQUESTS_ERROR_STUDY_NOT_FOUND,dict_Phrase.REQUESTS_ERROR_DIALOG_TITLE);
		break;
	default:
		return false;
	}
	return true;
};
net_Requests.createStudy = function(params) {
	Networker.addHandler(net_Requests.createStudy_handler);
	Networker.emitEvent(net_shared_ClientEvent.CreateStudy(params));
};
net_Requests.createStudy_handler = function(event) {
	if(event._hx_index == 42) {
		var id = event.studyID;
		var info = event.info;
		gfx_SceneManager.updateAnalysisStudyInfo(new gfx_profile_data_StudyData(id,LoginManager.getLogin(),info));
	} else {
		return false;
	}
	return true;
};
net_Requests.followPlayer = function(login) {
	var login1 = login;
	Networker.addHandler(function(event) {
		return net_Requests.followPlayer_handler(login1,event);
	});
	Networker.emitEvent(net_shared_ClientEvent.FollowPlayer(login));
};
net_Requests.followPlayer_handler = function(login,event) {
	switch(event._hx_index) {
	case 2:
		var data = event.data;
		var parsedData = serialization_GameLogParser.parse(data.currentLog);
		gfx_SceneManager.toScreen(gfx_ScreenType.LiveGame(data.id,gfx_game_LiveGameConstructor.Ongoing(parsedData,data.timeData,login)));
		break;
	case 47:
		gfx_Dialogs.info(dict_Phrase.REQUESTS_FOLLOW_PLAYER_SUCCESS_DIALOG_TEXT,dict_Phrase.REQUESTS_FOLLOW_PLAYER_SUCCESS_DIALOG_TITLE);
		break;
	case 48:
		gfx_Dialogs.alert(dict_Phrase.REQUESTS_ERROR_PLAYER_NOT_FOUND,dict_Phrase.REQUESTS_ERROR_DIALOG_TITLE);
		break;
	default:
		return false;
	}
	return true;
};
net_Requests.getCurrentGames = function(callback) {
	var callback1 = callback;
	Networker.addHandler(function(event) {
		return net_Requests.getCurrentGames_handler(callback1,event);
	});
	Networker.emitEvent(net_shared_ClientEvent.GetCurrentGames);
};
net_Requests.getCurrentGames_handler = function(callback,event) {
	if(event._hx_index == 50) {
		var data = event.data;
		callback(data);
		return true;
	} else {
		return false;
	}
};
net_Requests.getOpenChallenges = function(callback) {
	var callback1 = callback;
	Networker.addHandler(function(event) {
		return net_Requests.getOpenChallenges_handler(callback1,event);
	});
	Networker.emitEvent(net_shared_ClientEvent.GetOpenChallenges);
};
net_Requests.getOpenChallenges_handler = function(callback,event) {
	if(event._hx_index == 49) {
		var data = event.data;
		callback(data);
		return true;
	} else {
		return false;
	}
};
net_Requests.getRecentGames = function(callback) {
	var callback1 = callback;
	Networker.addHandler(function(event) {
		return net_Requests.getRecentGames_handler(callback1,event);
	});
	Networker.emitEvent(net_shared_ClientEvent.GetRecentGames);
};
net_Requests.getRecentGames_handler = function(callback,event) {
	if(event._hx_index == 51) {
		var data = event.data;
		callback(data);
		return true;
	} else {
		return false;
	}
};
var net_shared_ClientEvent = $hxEnums["net.shared.ClientEvent"] = { __ename__:"net.shared.ClientEvent",__constructs__:null
	,Greet: ($_=function(greeting,clientBuild,minServerBuild) { return {_hx_index:0,greeting:greeting,clientBuild:clientBuild,minServerBuild:minServerBuild,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="Greet",$_.__params__ = ["greeting","clientBuild","minServerBuild"],$_)
	,Login: ($_=function(login,password) { return {_hx_index:1,login:login,password:password,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="Login",$_.__params__ = ["login","password"],$_)
	,Register: ($_=function(login,password) { return {_hx_index:2,login:login,password:password,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="Register",$_.__params__ = ["login","password"],$_)
	,LogOut: {_hx_name:"LogOut",_hx_index:3,__enum__:"net.shared.ClientEvent",toString:$estr}
	,CreateChallenge: ($_=function(serializedParams) { return {_hx_index:4,serializedParams:serializedParams,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="CreateChallenge",$_.__params__ = ["serializedParams"],$_)
	,CancelChallenge: ($_=function(challengeID) { return {_hx_index:5,challengeID:challengeID,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="CancelChallenge",$_.__params__ = ["challengeID"],$_)
	,AcceptChallenge: ($_=function(challengeID) { return {_hx_index:6,challengeID:challengeID,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="AcceptChallenge",$_.__params__ = ["challengeID"],$_)
	,DeclineDirectChallenge: ($_=function(challengeID) { return {_hx_index:7,challengeID:challengeID,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="DeclineDirectChallenge",$_.__params__ = ["challengeID"],$_)
	,Move: ($_=function(ply) { return {_hx_index:8,ply:ply,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="Move",$_.__params__ = ["ply"],$_)
	,Message: ($_=function(text) { return {_hx_index:9,text:text,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="Message",$_.__params__ = ["text"],$_)
	,SimpleRematch: {_hx_name:"SimpleRematch",_hx_index:10,__enum__:"net.shared.ClientEvent",toString:$estr}
	,Resign: {_hx_name:"Resign",_hx_index:11,__enum__:"net.shared.ClientEvent",toString:$estr}
	,OfferDraw: {_hx_name:"OfferDraw",_hx_index:12,__enum__:"net.shared.ClientEvent",toString:$estr}
	,CancelDraw: {_hx_name:"CancelDraw",_hx_index:13,__enum__:"net.shared.ClientEvent",toString:$estr}
	,AcceptDraw: {_hx_name:"AcceptDraw",_hx_index:14,__enum__:"net.shared.ClientEvent",toString:$estr}
	,DeclineDraw: {_hx_name:"DeclineDraw",_hx_index:15,__enum__:"net.shared.ClientEvent",toString:$estr}
	,OfferTakeback: {_hx_name:"OfferTakeback",_hx_index:16,__enum__:"net.shared.ClientEvent",toString:$estr}
	,CancelTakeback: {_hx_name:"CancelTakeback",_hx_index:17,__enum__:"net.shared.ClientEvent",toString:$estr}
	,AcceptTakeback: {_hx_name:"AcceptTakeback",_hx_index:18,__enum__:"net.shared.ClientEvent",toString:$estr}
	,DeclineTakeback: {_hx_name:"DeclineTakeback",_hx_index:19,__enum__:"net.shared.ClientEvent",toString:$estr}
	,AddTime: {_hx_name:"AddTime",_hx_index:20,__enum__:"net.shared.ClientEvent",toString:$estr}
	,GetOpenChallenge: ($_=function(id) { return {_hx_index:21,id:id,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="GetOpenChallenge",$_.__params__ = ["id"],$_)
	,FollowPlayer: ($_=function(login) { return {_hx_index:22,login:login,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="FollowPlayer",$_.__params__ = ["login"],$_)
	,StopFollowing: {_hx_name:"StopFollowing",_hx_index:23,__enum__:"net.shared.ClientEvent",toString:$estr}
	,CreateStudy: ($_=function(info) { return {_hx_index:24,info:info,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="CreateStudy",$_.__params__ = ["info"],$_)
	,OverwriteStudy: ($_=function(overwrittenStudyID,info) { return {_hx_index:25,overwrittenStudyID:overwrittenStudyID,info:info,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="OverwriteStudy",$_.__params__ = ["overwrittenStudyID","info"],$_)
	,DeleteStudy: ($_=function(id) { return {_hx_index:26,id:id,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="DeleteStudy",$_.__params__ = ["id"],$_)
	,GetGame: ($_=function(id) { return {_hx_index:27,id:id,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="GetGame",$_.__params__ = ["id"],$_)
	,GetStudy: ($_=function(id) { return {_hx_index:28,id:id,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="GetStudy",$_.__params__ = ["id"],$_)
	,GetMiniProfile: ($_=function(login) { return {_hx_index:29,login:login,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="GetMiniProfile",$_.__params__ = ["login"],$_)
	,GetPlayerProfile: ($_=function(login) { return {_hx_index:30,login:login,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="GetPlayerProfile",$_.__params__ = ["login"],$_)
	,AddFriend: ($_=function(login) { return {_hx_index:31,login:login,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="AddFriend",$_.__params__ = ["login"],$_)
	,RemoveFriend: ($_=function(login) { return {_hx_index:32,login:login,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="RemoveFriend",$_.__params__ = ["login"],$_)
	,GetGamesByLogin: ($_=function(login,after,pageSize,filterByTimeControl) { return {_hx_index:33,login:login,after:after,pageSize:pageSize,filterByTimeControl:filterByTimeControl,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="GetGamesByLogin",$_.__params__ = ["login","after","pageSize","filterByTimeControl"],$_)
	,GetStudiesByLogin: ($_=function(login,after,pageSize,filterByTags) { return {_hx_index:34,login:login,after:after,pageSize:pageSize,filterByTags:filterByTags,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="GetStudiesByLogin",$_.__params__ = ["login","after","pageSize","filterByTags"],$_)
	,GetOngoingGamesByLogin: ($_=function(login) { return {_hx_index:35,login:login,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="GetOngoingGamesByLogin",$_.__params__ = ["login"],$_)
	,GetOpenChallenges: {_hx_name:"GetOpenChallenges",_hx_index:36,__enum__:"net.shared.ClientEvent",toString:$estr}
	,GetCurrentGames: {_hx_name:"GetCurrentGames",_hx_index:37,__enum__:"net.shared.ClientEvent",toString:$estr}
	,GetRecentGames: {_hx_name:"GetRecentGames",_hx_index:38,__enum__:"net.shared.ClientEvent",toString:$estr}
	,PageUpdated: ($_=function(page) { return {_hx_index:39,page:page,__enum__:"net.shared.ClientEvent",toString:$estr}; },$_._hx_name="PageUpdated",$_.__params__ = ["page"],$_)
};
net_shared_ClientEvent.__constructs__ = [net_shared_ClientEvent.Greet,net_shared_ClientEvent.Login,net_shared_ClientEvent.Register,net_shared_ClientEvent.LogOut,net_shared_ClientEvent.CreateChallenge,net_shared_ClientEvent.CancelChallenge,net_shared_ClientEvent.AcceptChallenge,net_shared_ClientEvent.DeclineDirectChallenge,net_shared_ClientEvent.Move,net_shared_ClientEvent.Message,net_shared_ClientEvent.SimpleRematch,net_shared_ClientEvent.Resign,net_shared_ClientEvent.OfferDraw,net_shared_ClientEvent.CancelDraw,net_shared_ClientEvent.AcceptDraw,net_shared_ClientEvent.DeclineDraw,net_shared_ClientEvent.OfferTakeback,net_shared_ClientEvent.CancelTakeback,net_shared_ClientEvent.AcceptTakeback,net_shared_ClientEvent.DeclineTakeback,net_shared_ClientEvent.AddTime,net_shared_ClientEvent.GetOpenChallenge,net_shared_ClientEvent.FollowPlayer,net_shared_ClientEvent.StopFollowing,net_shared_ClientEvent.CreateStudy,net_shared_ClientEvent.OverwriteStudy,net_shared_ClientEvent.DeleteStudy,net_shared_ClientEvent.GetGame,net_shared_ClientEvent.GetStudy,net_shared_ClientEvent.GetMiniProfile,net_shared_ClientEvent.GetPlayerProfile,net_shared_ClientEvent.AddFriend,net_shared_ClientEvent.RemoveFriend,net_shared_ClientEvent.GetGamesByLogin,net_shared_ClientEvent.GetStudiesByLogin,net_shared_ClientEvent.GetOngoingGamesByLogin,net_shared_ClientEvent.GetOpenChallenges,net_shared_ClientEvent.GetCurrentGames,net_shared_ClientEvent.GetRecentGames,net_shared_ClientEvent.PageUpdated];
net_shared_ClientEvent.__empty_constructs__ = [net_shared_ClientEvent.LogOut,net_shared_ClientEvent.SimpleRematch,net_shared_ClientEvent.Resign,net_shared_ClientEvent.OfferDraw,net_shared_ClientEvent.CancelDraw,net_shared_ClientEvent.AcceptDraw,net_shared_ClientEvent.DeclineDraw,net_shared_ClientEvent.OfferTakeback,net_shared_ClientEvent.CancelTakeback,net_shared_ClientEvent.AcceptTakeback,net_shared_ClientEvent.DeclineTakeback,net_shared_ClientEvent.AddTime,net_shared_ClientEvent.StopFollowing,net_shared_ClientEvent.GetOpenChallenges,net_shared_ClientEvent.GetCurrentGames,net_shared_ClientEvent.GetRecentGames];
var net_shared_Constants = function() { };
$hxClasses["net.shared.Constants"] = net_shared_Constants;
net_shared_Constants.__name__ = "net.shared.Constants";
var net_shared_EloValue = $hxEnums["net.shared.EloValue"] = { __ename__:"net.shared.EloValue",__constructs__:null
	,None: {_hx_name:"None",_hx_index:0,__enum__:"net.shared.EloValue",toString:$estr}
	,Provisional: ($_=function(elo) { return {_hx_index:1,elo:elo,__enum__:"net.shared.EloValue",toString:$estr}; },$_._hx_name="Provisional",$_.__params__ = ["elo"],$_)
	,Normal: ($_=function(elo) { return {_hx_index:2,elo:elo,__enum__:"net.shared.EloValue",toString:$estr}; },$_._hx_name="Normal",$_.__params__ = ["elo"],$_)
};
net_shared_EloValue.__constructs__ = [net_shared_EloValue.None,net_shared_EloValue.Provisional,net_shared_EloValue.Normal];
net_shared_EloValue.__empty_constructs__ = [net_shared_EloValue.None];
function net_shared_EloValue_deserialize(str) {
	if(str == "n") {
		return net_shared_EloValue.None;
	} else if(StringTools.startsWith(str,"p")) {
		return net_shared_EloValue.Provisional(Std.parseInt(HxOverrides.substr(str,1,null)));
	} else {
		return net_shared_EloValue.Normal(Std.parseInt(str));
	}
}
function net_shared_EloValue_serialize(value) {
	switch(value._hx_index) {
	case 0:
		return "n";
	case 1:
		var elo = value.elo;
		return "p" + elo;
	case 2:
		var elo = value.elo;
		if(elo == null) {
			return "null";
		} else {
			return "" + elo;
		}
		break;
	}
}
var net_shared_DecisiveOutcomeType = $hxEnums["net.shared.DecisiveOutcomeType"] = { __ename__:"net.shared.DecisiveOutcomeType",__constructs__:null
	,Mate: {_hx_name:"Mate",_hx_index:0,__enum__:"net.shared.DecisiveOutcomeType",toString:$estr}
	,Breakthrough: {_hx_name:"Breakthrough",_hx_index:1,__enum__:"net.shared.DecisiveOutcomeType",toString:$estr}
	,Timeout: {_hx_name:"Timeout",_hx_index:2,__enum__:"net.shared.DecisiveOutcomeType",toString:$estr}
	,Resign: {_hx_name:"Resign",_hx_index:3,__enum__:"net.shared.DecisiveOutcomeType",toString:$estr}
	,Abandon: {_hx_name:"Abandon",_hx_index:4,__enum__:"net.shared.DecisiveOutcomeType",toString:$estr}
};
net_shared_DecisiveOutcomeType.__constructs__ = [net_shared_DecisiveOutcomeType.Mate,net_shared_DecisiveOutcomeType.Breakthrough,net_shared_DecisiveOutcomeType.Timeout,net_shared_DecisiveOutcomeType.Resign,net_shared_DecisiveOutcomeType.Abandon];
net_shared_DecisiveOutcomeType.__empty_constructs__ = [net_shared_DecisiveOutcomeType.Mate,net_shared_DecisiveOutcomeType.Breakthrough,net_shared_DecisiveOutcomeType.Timeout,net_shared_DecisiveOutcomeType.Resign,net_shared_DecisiveOutcomeType.Abandon];
var net_shared_DrawishOutcomeType = $hxEnums["net.shared.DrawishOutcomeType"] = { __ename__:"net.shared.DrawishOutcomeType",__constructs__:null
	,DrawAgreement: {_hx_name:"DrawAgreement",_hx_index:0,__enum__:"net.shared.DrawishOutcomeType",toString:$estr}
	,Repetition: {_hx_name:"Repetition",_hx_index:1,__enum__:"net.shared.DrawishOutcomeType",toString:$estr}
	,NoProgress: {_hx_name:"NoProgress",_hx_index:2,__enum__:"net.shared.DrawishOutcomeType",toString:$estr}
	,Abort: {_hx_name:"Abort",_hx_index:3,__enum__:"net.shared.DrawishOutcomeType",toString:$estr}
};
net_shared_DrawishOutcomeType.__constructs__ = [net_shared_DrawishOutcomeType.DrawAgreement,net_shared_DrawishOutcomeType.Repetition,net_shared_DrawishOutcomeType.NoProgress,net_shared_DrawishOutcomeType.Abort];
net_shared_DrawishOutcomeType.__empty_constructs__ = [net_shared_DrawishOutcomeType.DrawAgreement,net_shared_DrawishOutcomeType.Repetition,net_shared_DrawishOutcomeType.NoProgress,net_shared_DrawishOutcomeType.Abort];
var net_shared_PersonalOutcome = $hxEnums["net.shared.PersonalOutcome"] = { __ename__:"net.shared.PersonalOutcome",__constructs__:null
	,Win: ($_=function(type) { return {_hx_index:0,type:type,__enum__:"net.shared.PersonalOutcome",toString:$estr}; },$_._hx_name="Win",$_.__params__ = ["type"],$_)
	,Loss: ($_=function(type) { return {_hx_index:1,type:type,__enum__:"net.shared.PersonalOutcome",toString:$estr}; },$_._hx_name="Loss",$_.__params__ = ["type"],$_)
	,Draw: ($_=function(type) { return {_hx_index:2,type:type,__enum__:"net.shared.PersonalOutcome",toString:$estr}; },$_._hx_name="Draw",$_.__params__ = ["type"],$_)
};
net_shared_PersonalOutcome.__constructs__ = [net_shared_PersonalOutcome.Win,net_shared_PersonalOutcome.Loss,net_shared_PersonalOutcome.Draw];
net_shared_PersonalOutcome.__empty_constructs__ = [];
var net_shared_Outcome = $hxEnums["net.shared.Outcome"] = { __ename__:"net.shared.Outcome",__constructs__:null
	,Decisive: ($_=function(type,winnerColor) { return {_hx_index:0,type:type,winnerColor:winnerColor,__enum__:"net.shared.Outcome",toString:$estr}; },$_._hx_name="Decisive",$_.__params__ = ["type","winnerColor"],$_)
	,Drawish: ($_=function(type) { return {_hx_index:1,type:type,__enum__:"net.shared.Outcome",toString:$estr}; },$_._hx_name="Drawish",$_.__params__ = ["type"],$_)
};
net_shared_Outcome.__constructs__ = [net_shared_Outcome.Decisive,net_shared_Outcome.Drawish];
net_shared_Outcome.__empty_constructs__ = [];
function net_shared_Outcome_toPersonal(outcome,playerColor) {
	switch(outcome._hx_index) {
	case 0:
		var type = outcome.type;
		var winnerColor = outcome.winnerColor;
		if(winnerColor == playerColor) {
			return net_shared_PersonalOutcome.Win(type);
		} else {
			return net_shared_PersonalOutcome.Loss(type);
		}
		break;
	case 1:
		var type = outcome.type;
		return net_shared_PersonalOutcome.Draw(type);
	}
}
var net_shared_PieceColor = $hxEnums["net.shared.PieceColor"] = { __ename__:"net.shared.PieceColor",__constructs__:null
	,White: {_hx_name:"White",_hx_index:0,__enum__:"net.shared.PieceColor",toString:$estr}
	,Black: {_hx_name:"Black",_hx_index:1,__enum__:"net.shared.PieceColor",toString:$estr}
};
net_shared_PieceColor.__constructs__ = [net_shared_PieceColor.White,net_shared_PieceColor.Black];
net_shared_PieceColor.__empty_constructs__ = [net_shared_PieceColor.White,net_shared_PieceColor.Black];
function net_shared_PieceColor_opposite(color) {
	if(color == net_shared_PieceColor.White) {
		return net_shared_PieceColor.Black;
	} else {
		return net_shared_PieceColor.White;
	}
}
function net_shared_PieceColor_letter(color) {
	if(color == net_shared_PieceColor.White) {
		return "w";
	} else {
		return "b";
	}
}
function net_shared_PieceColor_colorByLetter(letter) {
	switch(letter) {
	case "b":
		return net_shared_PieceColor.Black;
	case "w":
		return net_shared_PieceColor.White;
	default:
		return null;
	}
}
var net_shared_PieceType = $hxEnums["net.shared.PieceType"] = { __ename__:"net.shared.PieceType",__constructs__:null
	,Progressor: {_hx_name:"Progressor",_hx_index:0,__enum__:"net.shared.PieceType",toString:$estr}
	,Aggressor: {_hx_name:"Aggressor",_hx_index:1,__enum__:"net.shared.PieceType",toString:$estr}
	,Dominator: {_hx_name:"Dominator",_hx_index:2,__enum__:"net.shared.PieceType",toString:$estr}
	,Liberator: {_hx_name:"Liberator",_hx_index:3,__enum__:"net.shared.PieceType",toString:$estr}
	,Defensor: {_hx_name:"Defensor",_hx_index:4,__enum__:"net.shared.PieceType",toString:$estr}
	,Intellector: {_hx_name:"Intellector",_hx_index:5,__enum__:"net.shared.PieceType",toString:$estr}
};
net_shared_PieceType.__constructs__ = [net_shared_PieceType.Progressor,net_shared_PieceType.Aggressor,net_shared_PieceType.Dominator,net_shared_PieceType.Liberator,net_shared_PieceType.Defensor,net_shared_PieceType.Intellector];
net_shared_PieceType.__empty_constructs__ = [net_shared_PieceType.Progressor,net_shared_PieceType.Aggressor,net_shared_PieceType.Dominator,net_shared_PieceType.Liberator,net_shared_PieceType.Defensor,net_shared_PieceType.Intellector];
function net_shared_PieceType_letter(type) {
	return $hxEnums[type.__enum__].__constructs__[type._hx_index]._hx_name.charAt(1);
}
function net_shared_PieceType_pieceByLetter(letter) {
	switch(letter) {
	case "e":
		return net_shared_PieceType.Defensor;
	case "g":
		return net_shared_PieceType.Aggressor;
	case "i":
		return net_shared_PieceType.Liberator;
	case "n":
		return net_shared_PieceType.Intellector;
	case "o":
		return net_shared_PieceType.Dominator;
	case "r":
		return net_shared_PieceType.Progressor;
	default:
		return null;
	}
}
var net_shared_ServerEvent = $hxEnums["net.shared.ServerEvent"] = { __ename__:"net.shared.ServerEvent",__constructs__:null
	,GreetingResponse: ($_=function(data) { return {_hx_index:0,data:data,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="GreetingResponse",$_.__params__ = ["data"],$_)
	,GameStarted: ($_=function(gameID,logPreamble) { return {_hx_index:1,gameID:gameID,logPreamble:logPreamble,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="GameStarted",$_.__params__ = ["gameID","logPreamble"],$_)
	,SpectationData: ($_=function(data) { return {_hx_index:2,data:data,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="SpectationData",$_.__params__ = ["data"],$_)
	,GameIsOver: ($_=function(log) { return {_hx_index:3,log:log,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="GameIsOver",$_.__params__ = ["log"],$_)
	,GameIsOngoing: ($_=function(timeData,currentLog) { return {_hx_index:4,timeData:timeData,currentLog:currentLog,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="GameIsOngoing",$_.__params__ = ["timeData","currentLog"],$_)
	,GameNotFound: {_hx_name:"GameNotFound",_hx_index:5,__enum__:"net.shared.ServerEvent",toString:$estr}
	,CreateChallengeResult: ($_=function(result) { return {_hx_index:6,result:result,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="CreateChallengeResult",$_.__params__ = ["result"],$_)
	,IncomingDirectChallenge: ($_=function(data) { return {_hx_index:7,data:data,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="IncomingDirectChallenge",$_.__params__ = ["data"],$_)
	,DirectChallengeCancelled: ($_=function(id) { return {_hx_index:8,id:id,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="DirectChallengeCancelled",$_.__params__ = ["id"],$_)
	,DirectChallengeDeclined: ($_=function(id) { return {_hx_index:9,id:id,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="DirectChallengeDeclined",$_.__params__ = ["id"],$_)
	,ChallengeCancelledByOwner: {_hx_name:"ChallengeCancelledByOwner",_hx_index:10,__enum__:"net.shared.ServerEvent",toString:$estr}
	,ChallengeOwnerOffline: ($_=function(owner) { return {_hx_index:11,owner:owner,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="ChallengeOwnerOffline",$_.__params__ = ["owner"],$_)
	,ChallengeOwnerInGame: ($_=function(owner) { return {_hx_index:12,owner:owner,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="ChallengeOwnerInGame",$_.__params__ = ["owner"],$_)
	,ChallengeNotAcceptedServerShutdown: {_hx_name:"ChallengeNotAcceptedServerShutdown",_hx_index:13,__enum__:"net.shared.ServerEvent",toString:$estr}
	,OpenChallengeInfo: ($_=function(data) { return {_hx_index:14,data:data,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="OpenChallengeInfo",$_.__params__ = ["data"],$_)
	,OpenChallengeHostPlaying: ($_=function(data) { return {_hx_index:15,data:data,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="OpenChallengeHostPlaying",$_.__params__ = ["data"],$_)
	,OpenChallengeGameEnded: ($_=function(gameID,log) { return {_hx_index:16,gameID:gameID,log:log,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="OpenChallengeGameEnded",$_.__params__ = ["gameID","log"],$_)
	,OpenChallengeNotFound: {_hx_name:"OpenChallengeNotFound",_hx_index:17,__enum__:"net.shared.ServerEvent",toString:$estr}
	,LoginResult: ($_=function(result) { return {_hx_index:18,result:result,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="LoginResult",$_.__params__ = ["result"],$_)
	,RegisterResult: ($_=function(result) { return {_hx_index:19,result:result,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="RegisterResult",$_.__params__ = ["result"],$_)
	,InvalidMove: {_hx_name:"InvalidMove",_hx_index:20,__enum__:"net.shared.ServerEvent",toString:$estr}
	,Message: ($_=function(authorRef,message) { return {_hx_index:21,authorRef:authorRef,message:message,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="Message",$_.__params__ = ["authorRef","message"],$_)
	,SpectatorMessage: ($_=function(authorRef,message) { return {_hx_index:22,authorRef:authorRef,message:message,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="SpectatorMessage",$_.__params__ = ["authorRef","message"],$_)
	,TimeCorrection: ($_=function(timeData) { return {_hx_index:23,timeData:timeData,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="TimeCorrection",$_.__params__ = ["timeData"],$_)
	,Move: ($_=function(ply,timeData) { return {_hx_index:24,ply:ply,timeData:timeData,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="Move",$_.__params__ = ["ply","timeData"],$_)
	,Rollback: ($_=function(plysToUndo,timeData) { return {_hx_index:25,plysToUndo:plysToUndo,timeData:timeData,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="Rollback",$_.__params__ = ["plysToUndo","timeData"],$_)
	,TimeAdded: ($_=function(receiver,timeData) { return {_hx_index:26,receiver:receiver,timeData:timeData,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="TimeAdded",$_.__params__ = ["receiver","timeData"],$_)
	,GameEnded: ($_=function(outcome,rematchPossible,remainingTimeMs,newPersonalElo) { return {_hx_index:27,outcome:outcome,rematchPossible:rematchPossible,remainingTimeMs:remainingTimeMs,newPersonalElo:newPersonalElo,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="GameEnded",$_.__params__ = ["outcome","rematchPossible","remainingTimeMs","newPersonalElo"],$_)
	,PlayerDisconnected: ($_=function(color) { return {_hx_index:28,color:color,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="PlayerDisconnected",$_.__params__ = ["color"],$_)
	,PlayerReconnected: ($_=function(color) { return {_hx_index:29,color:color,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="PlayerReconnected",$_.__params__ = ["color"],$_)
	,NewSpectator: ($_=function(ref) { return {_hx_index:30,ref:ref,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="NewSpectator",$_.__params__ = ["ref"],$_)
	,SpectatorLeft: ($_=function(ref) { return {_hx_index:31,ref:ref,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="SpectatorLeft",$_.__params__ = ["ref"],$_)
	,DrawOffered: ($_=function(color) { return {_hx_index:32,color:color,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="DrawOffered",$_.__params__ = ["color"],$_)
	,DrawCancelled: ($_=function(color) { return {_hx_index:33,color:color,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="DrawCancelled",$_.__params__ = ["color"],$_)
	,DrawAccepted: ($_=function(color) { return {_hx_index:34,color:color,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="DrawAccepted",$_.__params__ = ["color"],$_)
	,DrawDeclined: ($_=function(color) { return {_hx_index:35,color:color,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="DrawDeclined",$_.__params__ = ["color"],$_)
	,TakebackOffered: ($_=function(color) { return {_hx_index:36,color:color,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="TakebackOffered",$_.__params__ = ["color"],$_)
	,TakebackCancelled: ($_=function(color) { return {_hx_index:37,color:color,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="TakebackCancelled",$_.__params__ = ["color"],$_)
	,TakebackAccepted: ($_=function(color) { return {_hx_index:38,color:color,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="TakebackAccepted",$_.__params__ = ["color"],$_)
	,TakebackDeclined: ($_=function(color) { return {_hx_index:39,color:color,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="TakebackDeclined",$_.__params__ = ["color"],$_)
	,SingleStudy: ($_=function(info,ownerLogin) { return {_hx_index:40,info:info,ownerLogin:ownerLogin,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="SingleStudy",$_.__params__ = ["info","ownerLogin"],$_)
	,StudyNotFound: {_hx_name:"StudyNotFound",_hx_index:41,__enum__:"net.shared.ServerEvent",toString:$estr}
	,StudyCreated: ($_=function(studyID,info) { return {_hx_index:42,studyID:studyID,info:info,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="StudyCreated",$_.__params__ = ["studyID","info"],$_)
	,MiniProfile: ($_=function(data) { return {_hx_index:43,data:data,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="MiniProfile",$_.__params__ = ["data"],$_)
	,PlayerProfile: ($_=function(data) { return {_hx_index:44,data:data,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="PlayerProfile",$_.__params__ = ["data"],$_)
	,Games: ($_=function(games,hasNext) { return {_hx_index:45,games:games,hasNext:hasNext,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="Games",$_.__params__ = ["games","hasNext"],$_)
	,Studies: ($_=function(studies,hasNext) { return {_hx_index:46,studies:studies,hasNext:hasNext,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="Studies",$_.__params__ = ["studies","hasNext"],$_)
	,FollowSuccess: {_hx_name:"FollowSuccess",_hx_index:47,__enum__:"net.shared.ServerEvent",toString:$estr}
	,PlayerNotFound: {_hx_name:"PlayerNotFound",_hx_index:48,__enum__:"net.shared.ServerEvent",toString:$estr}
	,OpenChallenges: ($_=function(data) { return {_hx_index:49,data:data,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="OpenChallenges",$_.__params__ = ["data"],$_)
	,CurrentGames: ($_=function(data) { return {_hx_index:50,data:data,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="CurrentGames",$_.__params__ = ["data"],$_)
	,RecentGames: ($_=function(data) { return {_hx_index:51,data:data,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="RecentGames",$_.__params__ = ["data"],$_)
	,MainMenuData: ($_=function(openChallenges,currentGames,recentGames) { return {_hx_index:52,openChallenges:openChallenges,currentGames:currentGames,recentGames:recentGames,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="MainMenuData",$_.__params__ = ["openChallenges","currentGames","recentGames"],$_)
	,MainMenuNewOpenChallenge: ($_=function(data) { return {_hx_index:53,data:data,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="MainMenuNewOpenChallenge",$_.__params__ = ["data"],$_)
	,MainMenuOpenChallengeRemoved: ($_=function(id) { return {_hx_index:54,id:id,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="MainMenuOpenChallengeRemoved",$_.__params__ = ["id"],$_)
	,MainMenuNewGame: ($_=function(data) { return {_hx_index:55,data:data,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="MainMenuNewGame",$_.__params__ = ["data"],$_)
	,MainMenuGameEnded: ($_=function(data) { return {_hx_index:56,data:data,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="MainMenuGameEnded",$_.__params__ = ["data"],$_)
	,DontReconnect: {_hx_name:"DontReconnect",_hx_index:57,__enum__:"net.shared.ServerEvent",toString:$estr}
	,ServerError: ($_=function(message) { return {_hx_index:58,message:message,__enum__:"net.shared.ServerEvent",toString:$estr}; },$_._hx_name="ServerError",$_.__params__ = ["message"],$_)
};
net_shared_ServerEvent.__constructs__ = [net_shared_ServerEvent.GreetingResponse,net_shared_ServerEvent.GameStarted,net_shared_ServerEvent.SpectationData,net_shared_ServerEvent.GameIsOver,net_shared_ServerEvent.GameIsOngoing,net_shared_ServerEvent.GameNotFound,net_shared_ServerEvent.CreateChallengeResult,net_shared_ServerEvent.IncomingDirectChallenge,net_shared_ServerEvent.DirectChallengeCancelled,net_shared_ServerEvent.DirectChallengeDeclined,net_shared_ServerEvent.ChallengeCancelledByOwner,net_shared_ServerEvent.ChallengeOwnerOffline,net_shared_ServerEvent.ChallengeOwnerInGame,net_shared_ServerEvent.ChallengeNotAcceptedServerShutdown,net_shared_ServerEvent.OpenChallengeInfo,net_shared_ServerEvent.OpenChallengeHostPlaying,net_shared_ServerEvent.OpenChallengeGameEnded,net_shared_ServerEvent.OpenChallengeNotFound,net_shared_ServerEvent.LoginResult,net_shared_ServerEvent.RegisterResult,net_shared_ServerEvent.InvalidMove,net_shared_ServerEvent.Message,net_shared_ServerEvent.SpectatorMessage,net_shared_ServerEvent.TimeCorrection,net_shared_ServerEvent.Move,net_shared_ServerEvent.Rollback,net_shared_ServerEvent.TimeAdded,net_shared_ServerEvent.GameEnded,net_shared_ServerEvent.PlayerDisconnected,net_shared_ServerEvent.PlayerReconnected,net_shared_ServerEvent.NewSpectator,net_shared_ServerEvent.SpectatorLeft,net_shared_ServerEvent.DrawOffered,net_shared_ServerEvent.DrawCancelled,net_shared_ServerEvent.DrawAccepted,net_shared_ServerEvent.DrawDeclined,net_shared_ServerEvent.TakebackOffered,net_shared_ServerEvent.TakebackCancelled,net_shared_ServerEvent.TakebackAccepted,net_shared_ServerEvent.TakebackDeclined,net_shared_ServerEvent.SingleStudy,net_shared_ServerEvent.StudyNotFound,net_shared_ServerEvent.StudyCreated,net_shared_ServerEvent.MiniProfile,net_shared_ServerEvent.PlayerProfile,net_shared_ServerEvent.Games,net_shared_ServerEvent.Studies,net_shared_ServerEvent.FollowSuccess,net_shared_ServerEvent.PlayerNotFound,net_shared_ServerEvent.OpenChallenges,net_shared_ServerEvent.CurrentGames,net_shared_ServerEvent.RecentGames,net_shared_ServerEvent.MainMenuData,net_shared_ServerEvent.MainMenuNewOpenChallenge,net_shared_ServerEvent.MainMenuOpenChallengeRemoved,net_shared_ServerEvent.MainMenuNewGame,net_shared_ServerEvent.MainMenuGameEnded,net_shared_ServerEvent.DontReconnect,net_shared_ServerEvent.ServerError];
net_shared_ServerEvent.__empty_constructs__ = [net_shared_ServerEvent.GameNotFound,net_shared_ServerEvent.ChallengeCancelledByOwner,net_shared_ServerEvent.ChallengeNotAcceptedServerShutdown,net_shared_ServerEvent.OpenChallengeNotFound,net_shared_ServerEvent.InvalidMove,net_shared_ServerEvent.StudyNotFound,net_shared_ServerEvent.FollowSuccess,net_shared_ServerEvent.PlayerNotFound,net_shared_ServerEvent.DontReconnect];
var net_shared_TimeControlType = $hxEnums["net.shared.TimeControlType"] = { __ename__:"net.shared.TimeControlType",__constructs__:null
	,Hyperbullet: {_hx_name:"Hyperbullet",_hx_index:0,__enum__:"net.shared.TimeControlType",toString:$estr}
	,Bullet: {_hx_name:"Bullet",_hx_index:1,__enum__:"net.shared.TimeControlType",toString:$estr}
	,Blitz: {_hx_name:"Blitz",_hx_index:2,__enum__:"net.shared.TimeControlType",toString:$estr}
	,Rapid: {_hx_name:"Rapid",_hx_index:3,__enum__:"net.shared.TimeControlType",toString:$estr}
	,Classic: {_hx_name:"Classic",_hx_index:4,__enum__:"net.shared.TimeControlType",toString:$estr}
	,Correspondence: {_hx_name:"Correspondence",_hx_index:5,__enum__:"net.shared.TimeControlType",toString:$estr}
};
net_shared_TimeControlType.__constructs__ = [net_shared_TimeControlType.Hyperbullet,net_shared_TimeControlType.Bullet,net_shared_TimeControlType.Blitz,net_shared_TimeControlType.Rapid,net_shared_TimeControlType.Classic,net_shared_TimeControlType.Correspondence];
net_shared_TimeControlType.__empty_constructs__ = [net_shared_TimeControlType.Hyperbullet,net_shared_TimeControlType.Bullet,net_shared_TimeControlType.Blitz,net_shared_TimeControlType.Rapid,net_shared_TimeControlType.Classic,net_shared_TimeControlType.Correspondence];
function net_shared_TimeControlType_isSecondLongerThanFirst(tc1,tc2) {
	return tc1._hx_index < tc2._hx_index;
}
var net_shared_board_InternalDirection = $hxEnums["net.shared.board.InternalDirection"] = { __ename__:"net.shared.board.InternalDirection",__constructs__:null
	,Up: {_hx_name:"Up",_hx_index:0,__enum__:"net.shared.board.InternalDirection",toString:$estr}
	,UpLeft: {_hx_name:"UpLeft",_hx_index:1,__enum__:"net.shared.board.InternalDirection",toString:$estr}
	,UpRight: {_hx_name:"UpRight",_hx_index:2,__enum__:"net.shared.board.InternalDirection",toString:$estr}
	,Down: {_hx_name:"Down",_hx_index:3,__enum__:"net.shared.board.InternalDirection",toString:$estr}
	,DownLeft: {_hx_name:"DownLeft",_hx_index:4,__enum__:"net.shared.board.InternalDirection",toString:$estr}
	,DownRight: {_hx_name:"DownRight",_hx_index:5,__enum__:"net.shared.board.InternalDirection",toString:$estr}
	,AgrUpLeft: {_hx_name:"AgrUpLeft",_hx_index:6,__enum__:"net.shared.board.InternalDirection",toString:$estr}
	,AgrUpRight: {_hx_name:"AgrUpRight",_hx_index:7,__enum__:"net.shared.board.InternalDirection",toString:$estr}
	,AgrDownLeft: {_hx_name:"AgrDownLeft",_hx_index:8,__enum__:"net.shared.board.InternalDirection",toString:$estr}
	,AgrDownRight: {_hx_name:"AgrDownRight",_hx_index:9,__enum__:"net.shared.board.InternalDirection",toString:$estr}
	,AgrLeft: {_hx_name:"AgrLeft",_hx_index:10,__enum__:"net.shared.board.InternalDirection",toString:$estr}
	,AgrRight: {_hx_name:"AgrRight",_hx_index:11,__enum__:"net.shared.board.InternalDirection",toString:$estr}
};
net_shared_board_InternalDirection.__constructs__ = [net_shared_board_InternalDirection.Up,net_shared_board_InternalDirection.UpLeft,net_shared_board_InternalDirection.UpRight,net_shared_board_InternalDirection.Down,net_shared_board_InternalDirection.DownLeft,net_shared_board_InternalDirection.DownRight,net_shared_board_InternalDirection.AgrUpLeft,net_shared_board_InternalDirection.AgrUpRight,net_shared_board_InternalDirection.AgrDownLeft,net_shared_board_InternalDirection.AgrDownRight,net_shared_board_InternalDirection.AgrLeft,net_shared_board_InternalDirection.AgrRight];
net_shared_board_InternalDirection.__empty_constructs__ = [net_shared_board_InternalDirection.Up,net_shared_board_InternalDirection.UpLeft,net_shared_board_InternalDirection.UpRight,net_shared_board_InternalDirection.Down,net_shared_board_InternalDirection.DownLeft,net_shared_board_InternalDirection.DownRight,net_shared_board_InternalDirection.AgrUpLeft,net_shared_board_InternalDirection.AgrUpRight,net_shared_board_InternalDirection.AgrDownLeft,net_shared_board_InternalDirection.AgrDownRight,net_shared_board_InternalDirection.AgrLeft,net_shared_board_InternalDirection.AgrRight];
var net_shared_board_Direction = {};
net_shared_board_Direction.allLateral = function() {
	return [net_shared_board_InternalDirection.Up,net_shared_board_InternalDirection.UpLeft,net_shared_board_InternalDirection.UpRight,net_shared_board_InternalDirection.Down,net_shared_board_InternalDirection.DownLeft,net_shared_board_InternalDirection.DownRight];
};
net_shared_board_Direction.allRadial = function() {
	return [net_shared_board_InternalDirection.AgrUpLeft,net_shared_board_InternalDirection.AgrUpRight,net_shared_board_InternalDirection.AgrDownLeft,net_shared_board_InternalDirection.AgrDownRight,net_shared_board_InternalDirection.AgrLeft,net_shared_board_InternalDirection.AgrRight];
};
net_shared_board_Direction.forwardLateral = function(color) {
	if(color == net_shared_PieceColor.White) {
		return [net_shared_board_InternalDirection.Up,net_shared_board_InternalDirection.UpLeft,net_shared_board_InternalDirection.UpRight];
	} else {
		return [net_shared_board_InternalDirection.Down,net_shared_board_InternalDirection.DownLeft,net_shared_board_InternalDirection.DownRight];
	}
};
var net_shared_board_InternalHex = $hxEnums["net.shared.board.InternalHex"] = { __ename__:"net.shared.board.InternalHex",__constructs__:null
	,Empty: {_hx_name:"Empty",_hx_index:0,__enum__:"net.shared.board.InternalHex",toString:$estr}
	,Occupied: ($_=function(piece) { return {_hx_index:1,piece:piece,__enum__:"net.shared.board.InternalHex",toString:$estr}; },$_._hx_name="Occupied",$_.__params__ = ["piece"],$_)
};
net_shared_board_InternalHex.__constructs__ = [net_shared_board_InternalHex.Empty,net_shared_board_InternalHex.Occupied];
net_shared_board_InternalHex.__empty_constructs__ = [net_shared_board_InternalHex.Empty];
var net_shared_board_Hex = {};
net_shared_board_Hex.type = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return null;
	case 1:
		var piece = this1.piece;
		return piece.type;
	}
};
net_shared_board_Hex.color = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return null;
	case 1:
		var piece = this1.piece;
		return piece.color;
	}
};
net_shared_board_Hex.piece = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return null;
	case 1:
		var piece = this1.piece;
		return piece;
	}
};
net_shared_board_Hex.isEmpty = function(this1) {
	if(this1._hx_index == 0) {
		return true;
	} else {
		return false;
	}
};
net_shared_board_Hex.equals = function(this1,otherHex) {
	switch(this1._hx_index) {
	case 0:
		return net_shared_board_Hex.isEmpty(otherHex);
	case 1:
		var piece = this1.piece;
		if(piece.color == net_shared_board_Hex.color(otherHex)) {
			return piece.type == net_shared_board_Hex.type(otherHex);
		} else {
			return false;
		}
		break;
	}
};
net_shared_board_Hex.construct = function(type,color) {
	return net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(type,color));
};
var net_shared_board_HexCoords = function(i,j) {
	this.i = i;
	this.j = j;
};
$hxClasses["net.shared.board.HexCoords"] = net_shared_board_HexCoords;
net_shared_board_HexCoords.__name__ = "net.shared.board.HexCoords";
net_shared_board_HexCoords.enumerate = function() {
	var _g = [];
	var _g1 = 0;
	var _g2 = 7 - 0 % 2;
	while(_g1 < _g2) {
		var j = _g1++;
		_g.push(new net_shared_board_HexCoords(0,j));
	}
	var _g1 = 0;
	var _g2 = 7 - 1 % 2;
	while(_g1 < _g2) {
		var j = _g1++;
		_g.push(new net_shared_board_HexCoords(1,j));
	}
	var _g1 = 0;
	var _g2 = 7 - 2 % 2;
	while(_g1 < _g2) {
		var j = _g1++;
		_g.push(new net_shared_board_HexCoords(2,j));
	}
	var _g1 = 0;
	var _g2 = 7 - 3 % 2;
	while(_g1 < _g2) {
		var j = _g1++;
		_g.push(new net_shared_board_HexCoords(3,j));
	}
	var _g1 = 0;
	var _g2 = 7 - 4 % 2;
	while(_g1 < _g2) {
		var j = _g1++;
		_g.push(new net_shared_board_HexCoords(4,j));
	}
	var _g1 = 0;
	var _g2 = 7 - 5 % 2;
	while(_g1 < _g2) {
		var j = _g1++;
		_g.push(new net_shared_board_HexCoords(5,j));
	}
	var _g1 = 0;
	var _g2 = 7 - 6 % 2;
	while(_g1 < _g2) {
		var j = _g1++;
		_g.push(new net_shared_board_HexCoords(6,j));
	}
	var _g1 = 0;
	var _g2 = 7 - 7 % 2;
	while(_g1 < _g2) {
		var j = _g1++;
		_g.push(new net_shared_board_HexCoords(7,j));
	}
	var _g1 = 0;
	var _g2 = 7 - 8 % 2;
	while(_g1 < _g2) {
		var j = _g1++;
		_g.push(new net_shared_board_HexCoords(8,j));
	}
	return _g;
};
net_shared_board_HexCoords.enumerateScalar = function() {
	var _g = [];
	var _g1 = 0;
	while(_g1 < 59) {
		var t = _g1++;
		_g.push(t);
	}
	return _g;
};
net_shared_board_HexCoords.hexCount = function() {
	return 59;
};
net_shared_board_HexCoords.fromScalarCoord = function(t) {
	var det = t % 9;
	if(det < 5) {
		return new net_shared_board_HexCoords(det * 2,t / 9 | 0);
	} else {
		return new net_shared_board_HexCoords(det * 2 - 9,t / 9 | 0);
	}
};
net_shared_board_HexCoords.prototype = {
	i: null
	,j: null
	,toRelative: function(color) {
		if(color == net_shared_PieceColor.White) {
			return this.copy();
		} else {
			return this.invert();
		}
	}
	,invert: function() {
		return new net_shared_board_HexCoords(8 - this.i,6 - this.j - this.i % 2);
	}
	,copy: function() {
		return new net_shared_board_HexCoords(this.i,this.j);
	}
	,isFinal: function(color) {
		if(color == net_shared_PieceColor.White) {
			if(this.j == 0) {
				return this.i % 2 == 0;
			} else {
				return false;
			}
		} else if(this.j == 6) {
			return this.i % 2 == 0;
		} else {
			return false;
		}
	}
	,isDark: function() {
		if(this.j % 3 == 2) {
			return false;
		} else if(this.j % 3 == 0) {
			return this.i % 2 == 0;
		} else {
			return this.i % 2 == 1;
		}
	}
	,equals: function(other) {
		if(other.i == this.i) {
			return other.j == this.j;
		} else {
			return false;
		}
	}
	,isLiberatorJumpAway: function(departure) {
		var dir = net_shared_board_InternalDirection.Up;
		var destination = departure.step(dir).step(dir);
		if(destination.isValid() && this.equals(destination)) {
			return true;
		}
		var dir = net_shared_board_InternalDirection.UpLeft;
		var destination = departure.step(dir).step(dir);
		if(destination.isValid() && this.equals(destination)) {
			return true;
		}
		var dir = net_shared_board_InternalDirection.UpRight;
		var destination = departure.step(dir).step(dir);
		if(destination.isValid() && this.equals(destination)) {
			return true;
		}
		var dir = net_shared_board_InternalDirection.Down;
		var destination = departure.step(dir).step(dir);
		if(destination.isValid() && this.equals(destination)) {
			return true;
		}
		var dir = net_shared_board_InternalDirection.DownLeft;
		var destination = departure.step(dir).step(dir);
		if(destination.isValid() && this.equals(destination)) {
			return true;
		}
		var dir = net_shared_board_InternalDirection.DownRight;
		var destination = departure.step(dir).step(dir);
		if(destination.isValid() && this.equals(destination)) {
			return true;
		}
		return false;
	}
	,isLaterallyNear: function(departure) {
		return this.isOneStepAway(departure,[net_shared_board_InternalDirection.Up,net_shared_board_InternalDirection.UpLeft,net_shared_board_InternalDirection.UpRight,net_shared_board_InternalDirection.Down,net_shared_board_InternalDirection.DownLeft,net_shared_board_InternalDirection.DownRight]);
	}
	,isForwardStepAway: function(departure,color) {
		var forwardDirections = color == net_shared_PieceColor.White ? [net_shared_board_InternalDirection.Up,net_shared_board_InternalDirection.UpLeft,net_shared_board_InternalDirection.UpRight] : [net_shared_board_InternalDirection.Down,net_shared_board_InternalDirection.DownLeft,net_shared_board_InternalDirection.DownRight];
		return this.isOneStepAway(departure,forwardDirections);
	}
	,isOneStepAway: function(departure,checkedDirections) {
		var _g = 0;
		while(_g < checkedDirections.length) {
			var dir = checkedDirections[_g];
			++_g;
			var neighbour = this.step(dir);
			if(neighbour.isValid() && neighbour.equals(departure)) {
				return true;
			}
		}
		return false;
	}
	,lateralSurroundings: function() {
		var result = [];
		var dir = net_shared_board_InternalDirection.Up;
		var neighbour = this.step(dir);
		if(neighbour.isValid()) {
			result.push(neighbour);
		}
		var dir = net_shared_board_InternalDirection.UpLeft;
		var neighbour = this.step(dir);
		if(neighbour.isValid()) {
			result.push(neighbour);
		}
		var dir = net_shared_board_InternalDirection.UpRight;
		var neighbour = this.step(dir);
		if(neighbour.isValid()) {
			result.push(neighbour);
		}
		var dir = net_shared_board_InternalDirection.Down;
		var neighbour = this.step(dir);
		if(neighbour.isValid()) {
			result.push(neighbour);
		}
		var dir = net_shared_board_InternalDirection.DownLeft;
		var neighbour = this.step(dir);
		if(neighbour.isValid()) {
			result.push(neighbour);
		}
		var dir = net_shared_board_InternalDirection.DownRight;
		var neighbour = this.step(dir);
		if(neighbour.isValid()) {
			result.push(neighbour);
		}
		return result;
	}
	,step: function(dir,steps) {
		if(steps == null) {
			steps = 1;
		}
		var next;
		switch(dir._hx_index) {
		case 0:
			next = new net_shared_board_HexCoords(this.i,this.j - 1);
			break;
		case 1:
			next = new net_shared_board_HexCoords(this.i - 1,this.i % 2 == 0 ? this.j - 1 : this.j);
			break;
		case 2:
			next = new net_shared_board_HexCoords(this.i + 1,this.i % 2 == 0 ? this.j - 1 : this.j);
			break;
		case 3:
			next = new net_shared_board_HexCoords(this.i,this.j + 1);
			break;
		case 4:
			next = new net_shared_board_HexCoords(this.i - 1,this.i % 2 == 1 ? this.j + 1 : this.j);
			break;
		case 5:
			next = new net_shared_board_HexCoords(this.i + 1,this.i % 2 == 1 ? this.j + 1 : this.j);
			break;
		case 6:
			next = new net_shared_board_HexCoords(this.i - 1,this.i % 2 == 0 ? this.j - 2 : this.j - 1);
			break;
		case 7:
			next = new net_shared_board_HexCoords(this.i + 1,this.i % 2 == 0 ? this.j - 2 : this.j - 1);
			break;
		case 8:
			next = new net_shared_board_HexCoords(this.i - 1,this.i % 2 == 1 ? this.j + 2 : this.j + 1);
			break;
		case 9:
			next = new net_shared_board_HexCoords(this.i + 1,this.i % 2 == 1 ? this.j + 2 : this.j + 1);
			break;
		case 10:
			next = new net_shared_board_HexCoords(this.i - 2,this.j);
			break;
		case 11:
			next = new net_shared_board_HexCoords(this.i + 2,this.j);
			break;
		}
		if(steps > 1) {
			return next.step(dir,steps - 1);
		} else {
			return next;
		}
	}
	,isValid: function() {
		if(this.i % 2 == 0) {
			if(this.i >= 0 && this.i <= 8 && this.j >= 0) {
				return this.j <= 6;
			} else {
				return false;
			}
		} else if(this.i >= 0 && this.i <= 8 && this.j >= 0) {
			return this.j <= 5;
		} else {
			return false;
		}
	}
	,toScalarCoord: function() {
		if(this.i % 2 == 0) {
			return 9 * this.j + (this.i / 2 | 0);
		} else {
			return 9 * this.j + (this.i / 2 | 0) + 5;
		}
	}
	,toString: function() {
		return net_shared_converters_Notation.hexNotation(this) + (" (" + this.i + "; " + this.j + ")");
	}
	,__class__: net_shared_board_HexCoords
};
function net_shared_board_HexCoords_equal(p1,p2) {
	if(p1 == null) {
		return p2 == null;
	} else if(p2 == null) {
		return false;
	} else {
		return p1.equals(p2);
	}
}
var net_shared_board_InternalMaterializedPly = $hxEnums["net.shared.board.InternalMaterializedPly"] = { __ename__:"net.shared.board.InternalMaterializedPly",__constructs__:null
	,NormalMove: ($_=function(from,to,movingPiece) { return {_hx_index:0,from:from,to:to,movingPiece:movingPiece,__enum__:"net.shared.board.InternalMaterializedPly",toString:$estr}; },$_._hx_name="NormalMove",$_.__params__ = ["from","to","movingPiece"],$_)
	,NormalCapture: ($_=function(from,to,capturingPiece,capturedPiece) { return {_hx_index:1,from:from,to:to,capturingPiece:capturingPiece,capturedPiece:capturedPiece,__enum__:"net.shared.board.InternalMaterializedPly",toString:$estr}; },$_._hx_name="NormalCapture",$_.__params__ = ["from","to","capturingPiece","capturedPiece"],$_)
	,ChameleonCapture: ($_=function(from,to,capturingPiece,capturedPiece) { return {_hx_index:2,from:from,to:to,capturingPiece:capturingPiece,capturedPiece:capturedPiece,__enum__:"net.shared.board.InternalMaterializedPly",toString:$estr}; },$_._hx_name="ChameleonCapture",$_.__params__ = ["from","to","capturingPiece","capturedPiece"],$_)
	,Promotion: ($_=function(from,to,promotedTo) { return {_hx_index:3,from:from,to:to,promotedTo:promotedTo,__enum__:"net.shared.board.InternalMaterializedPly",toString:$estr}; },$_._hx_name="Promotion",$_.__params__ = ["from","to","promotedTo"],$_)
	,PromotionWithCapture: ($_=function(from,to,capturedPiece,promotedTo) { return {_hx_index:4,from:from,to:to,capturedPiece:capturedPiece,promotedTo:promotedTo,__enum__:"net.shared.board.InternalMaterializedPly",toString:$estr}; },$_._hx_name="PromotionWithCapture",$_.__params__ = ["from","to","capturedPiece","promotedTo"],$_)
	,Castling: ($_=function(from,to) { return {_hx_index:5,from:from,to:to,__enum__:"net.shared.board.InternalMaterializedPly",toString:$estr}; },$_._hx_name="Castling",$_.__params__ = ["from","to"],$_)
};
net_shared_board_InternalMaterializedPly.__constructs__ = [net_shared_board_InternalMaterializedPly.NormalMove,net_shared_board_InternalMaterializedPly.NormalCapture,net_shared_board_InternalMaterializedPly.ChameleonCapture,net_shared_board_InternalMaterializedPly.Promotion,net_shared_board_InternalMaterializedPly.PromotionWithCapture,net_shared_board_InternalMaterializedPly.Castling];
net_shared_board_InternalMaterializedPly.__empty_constructs__ = [];
var net_shared_board_MaterializedPly = {};
net_shared_board_MaterializedPly.construct = function(pieces,from,to,morphInto) {
	if(!net_shared_board_PieceArrangement.empty(pieces,to)) {
		if(net_shared_board_PieceArrangement.colorAt(pieces,from) == net_shared_board_PieceArrangement.colorAt(pieces,to)) {
			return net_shared_board_InternalMaterializedPly.Castling(from,to);
		} else if(morphInto == null) {
			return net_shared_board_InternalMaterializedPly.NormalCapture(from,to,net_shared_board_PieceArrangement.typeAt(pieces,from),net_shared_board_PieceArrangement.typeAt(pieces,to));
		} else if(net_shared_board_PieceArrangement.typeAt(pieces,from) == net_shared_PieceType.Progressor) {
			return net_shared_board_InternalMaterializedPly.PromotionWithCapture(from,to,net_shared_board_PieceArrangement.typeAt(pieces,to),morphInto);
		} else {
			return net_shared_board_InternalMaterializedPly.ChameleonCapture(from,to,net_shared_board_PieceArrangement.typeAt(pieces,from),net_shared_board_PieceArrangement.typeAt(pieces,to));
		}
	} else if(morphInto != null) {
		return net_shared_board_InternalMaterializedPly.Promotion(from,to,morphInto);
	} else {
		return net_shared_board_InternalMaterializedPly.NormalMove(from,to,net_shared_board_PieceArrangement.typeAt(pieces,from));
	}
};
net_shared_board_MaterializedPly.underlying = function(this1) {
	return this1;
};
net_shared_board_MaterializedPly.equals = function(this1,other) {
	switch(this1._hx_index) {
	case 0:
		if(other._hx_index == 0) {
			var from2 = other.from;
			var to2 = other.to;
			var movingPiece2 = other.movingPiece;
			var movingPiece = this1.movingPiece;
			var to = this1.to;
			var from = this1.from;
			if(from.equals(from2) && to.equals(to2)) {
				return movingPiece == movingPiece2;
			} else {
				return false;
			}
		} else {
			return false;
		}
		break;
	case 1:
		if(other._hx_index == 1) {
			var from2 = other.from;
			var to2 = other.to;
			var capturingPiece2 = other.capturingPiece;
			var capturedPiece2 = other.capturedPiece;
			var capturedPiece = this1.capturedPiece;
			var capturingPiece = this1.capturingPiece;
			var to = this1.to;
			var from = this1.from;
			if(from.equals(from2) && to.equals(to2) && capturingPiece == capturingPiece2) {
				return capturedPiece == capturedPiece2;
			} else {
				return false;
			}
		} else {
			return false;
		}
		break;
	case 2:
		if(other._hx_index == 2) {
			var from2 = other.from;
			var to2 = other.to;
			var capturingPiece2 = other.capturingPiece;
			var capturedPiece2 = other.capturedPiece;
			var capturedPiece = this1.capturedPiece;
			var capturingPiece = this1.capturingPiece;
			var to = this1.to;
			var from = this1.from;
			if(from.equals(from2) && to.equals(to2) && capturingPiece == capturingPiece2) {
				return capturedPiece == capturedPiece2;
			} else {
				return false;
			}
		} else {
			return false;
		}
		break;
	case 3:
		if(other._hx_index == 3) {
			var from2 = other.from;
			var to2 = other.to;
			var promotedTo2 = other.promotedTo;
			var promotedTo = this1.promotedTo;
			var to = this1.to;
			var from = this1.from;
			if(from.equals(from2) && to.equals(to2)) {
				return promotedTo == promotedTo2;
			} else {
				return false;
			}
		} else {
			return false;
		}
		break;
	case 4:
		if(other._hx_index == 4) {
			var from2 = other.from;
			var to2 = other.to;
			var capturedPiece2 = other.capturedPiece;
			var promotedTo2 = other.promotedTo;
			var promotedTo = this1.promotedTo;
			var capturedPiece = this1.capturedPiece;
			var to = this1.to;
			var from = this1.from;
			if(from.equals(from2) && to.equals(to2) && promotedTo == promotedTo2) {
				return capturedPiece == capturedPiece2;
			} else {
				return false;
			}
		} else {
			return false;
		}
		break;
	case 5:
		if(other._hx_index == 5) {
			var from2 = other.from;
			var to2 = other.to;
			var to = this1.to;
			var from = this1.from;
			if(!(from.equals(from2) && to.equals(to2))) {
				if(from.equals(to2)) {
					return to.equals(from2);
				} else {
					return false;
				}
			} else {
				return true;
			}
		} else {
			return false;
		}
		break;
	}
};
net_shared_board_MaterializedPly.affectedCoords = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var _g = this1.movingPiece;
		var from = this1.from;
		var to = this1.to;
		return [from,to];
	case 1:
		var _g = this1.capturingPiece;
		var _g = this1.capturedPiece;
		var from = this1.from;
		var to = this1.to;
		return [from,to];
	case 2:
		var _g = this1.capturingPiece;
		var _g = this1.capturedPiece;
		var from = this1.from;
		var to = this1.to;
		return [from,to];
	case 3:
		var _g = this1.promotedTo;
		var from = this1.from;
		var to = this1.to;
		return [from,to];
	case 4:
		var _g = this1.capturedPiece;
		var _g = this1.promotedTo;
		var from = this1.from;
		var to = this1.to;
		return [from,to];
	case 5:
		var from = this1.from;
		var to = this1.to;
		return [from,to];
	}
};
net_shared_board_MaterializedPly.isMating = function(this1) {
	switch(this1._hx_index) {
	case 1:
		var _g = this1.from;
		var _g = this1.to;
		var _g = this1.capturingPiece;
		var capturedPiece = this1.capturedPiece;
		return capturedPiece == net_shared_PieceType.Intellector;
	case 2:
		var _g = this1.from;
		var _g = this1.to;
		var _g = this1.capturingPiece;
		var capturedPiece = this1.capturedPiece;
		return capturedPiece == net_shared_PieceType.Intellector;
	case 4:
		var _g = this1.from;
		var _g = this1.to;
		var _g = this1.promotedTo;
		var capturedPiece = this1.capturedPiece;
		return capturedPiece == net_shared_PieceType.Intellector;
	default:
		return false;
	}
};
net_shared_board_MaterializedPly.isBreakthrough = function(this1,pieces,turnColor) {
	switch(this1._hx_index) {
	case 0:
		var from = this1.from;
		var to = this1.to;
		var movingPiece = this1.movingPiece;
		if(movingPiece == net_shared_PieceType.Intellector) {
			return to.isFinal(turnColor);
		} else {
			return false;
		}
		break;
	case 5:
		var from = this1.from;
		var to = this1.to;
		if(net_shared_board_PieceArrangement.typeAt(pieces,from) == net_shared_PieceType.Intellector) {
			return to.isFinal(turnColor);
		} else {
			return from.isFinal(turnColor);
		}
		break;
	default:
		return false;
	}
};
net_shared_board_MaterializedPly.isProgressive = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var _g = this1.from;
		var _g = this1.to;
		var movingPiece = this1.movingPiece;
		return movingPiece == net_shared_PieceType.Progressor;
	case 1:
		var _g = this1.from;
		var _g = this1.to;
		var _g = this1.capturingPiece;
		var _g = this1.capturedPiece;
		return true;
	case 2:
		var _g = this1.from;
		var _g = this1.to;
		var _g = this1.capturingPiece;
		var _g = this1.capturedPiece;
		return true;
	case 3:
		var _g = this1.from;
		var _g = this1.to;
		var _g = this1.promotedTo;
		return true;
	case 4:
		var _g = this1.from;
		var _g = this1.to;
		var _g = this1.capturedPiece;
		var _g = this1.promotedTo;
		return true;
	case 5:
		var _g = this1.from;
		var _g = this1.to;
		return false;
	}
};
net_shared_board_MaterializedPly.toRaw = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var _g = this1.movingPiece;
		var from = this1.from;
		var to = this1.to;
		return net_shared_board_RawPly.construct(from,to);
	case 1:
		var _g = this1.capturingPiece;
		var _g = this1.capturedPiece;
		var from = this1.from;
		var to = this1.to;
		return net_shared_board_RawPly.construct(from,to);
	case 2:
		var _g = this1.capturingPiece;
		var from = this1.from;
		var to = this1.to;
		var morphInto = this1.capturedPiece;
		return net_shared_board_RawPly.construct(from,to,morphInto);
	case 3:
		var from = this1.from;
		var to = this1.to;
		var morphInto = this1.promotedTo;
		return net_shared_board_RawPly.construct(from,to,morphInto);
	case 4:
		var _g = this1.capturedPiece;
		var from = this1.from;
		var to = this1.to;
		var morphInto = this1.promotedTo;
		return net_shared_board_RawPly.construct(from,to,morphInto);
	case 5:
		var from = this1.from;
		var to = this1.to;
		return net_shared_board_RawPly.construct(from,to);
	}
};
net_shared_board_MaterializedPly.toString = function(this1) {
	return Std.string(this1);
};
var net_shared_board_MovementPattern = $hxEnums["net.shared.board.MovementPattern"] = { __ename__:"net.shared.board.MovementPattern",__constructs__:null
	,SimpleJump: ($_=function(distance) { return {_hx_index:0,distance:distance,__enum__:"net.shared.board.MovementPattern",toString:$estr}; },$_._hx_name="SimpleJump",$_.__params__ = ["distance"],$_)
	,NonCapturingJump: ($_=function(distance) { return {_hx_index:1,distance:distance,__enum__:"net.shared.board.MovementPattern",toString:$estr}; },$_._hx_name="NonCapturingJump",$_.__params__ = ["distance"],$_)
	,NormalSlide: {_hx_name:"NormalSlide",_hx_index:2,__enum__:"net.shared.board.MovementPattern",toString:$estr}
	,Swap: ($_=function(partner) { return {_hx_index:3,partner:partner,__enum__:"net.shared.board.MovementPattern",toString:$estr}; },$_._hx_name="Swap",$_.__params__ = ["partner"],$_)
};
net_shared_board_MovementPattern.__constructs__ = [net_shared_board_MovementPattern.SimpleJump,net_shared_board_MovementPattern.NonCapturingJump,net_shared_board_MovementPattern.NormalSlide,net_shared_board_MovementPattern.Swap];
net_shared_board_MovementPattern.__empty_constructs__ = [net_shared_board_MovementPattern.NormalSlide];
var net_shared_board_PerformPlyResult = $hxEnums["net.shared.board.PerformPlyResult"] = { __ename__:"net.shared.board.PerformPlyResult",__constructs__:null
	,NormalPlyPerformed: ($_=function(ply) { return {_hx_index:0,ply:ply,__enum__:"net.shared.board.PerformPlyResult",toString:$estr}; },$_._hx_name="NormalPlyPerformed",$_.__params__ = ["ply"],$_)
	,ProgressivePlyPerformed: ($_=function(ply) { return {_hx_index:1,ply:ply,__enum__:"net.shared.board.PerformPlyResult",toString:$estr}; },$_._hx_name="ProgressivePlyPerformed",$_.__params__ = ["ply"],$_)
	,MateReached: {_hx_name:"MateReached",_hx_index:2,__enum__:"net.shared.board.PerformPlyResult",toString:$estr}
	,BreakthroughReached: {_hx_name:"BreakthroughReached",_hx_index:3,__enum__:"net.shared.board.PerformPlyResult",toString:$estr}
	,FailedToPerform: {_hx_name:"FailedToPerform",_hx_index:4,__enum__:"net.shared.board.PerformPlyResult",toString:$estr}
};
net_shared_board_PerformPlyResult.__constructs__ = [net_shared_board_PerformPlyResult.NormalPlyPerformed,net_shared_board_PerformPlyResult.ProgressivePlyPerformed,net_shared_board_PerformPlyResult.MateReached,net_shared_board_PerformPlyResult.BreakthroughReached,net_shared_board_PerformPlyResult.FailedToPerform];
net_shared_board_PerformPlyResult.__empty_constructs__ = [net_shared_board_PerformPlyResult.MateReached,net_shared_board_PerformPlyResult.BreakthroughReached,net_shared_board_PerformPlyResult.FailedToPerform];
var net_shared_board_PieceArrangement = {};
net_shared_board_PieceArrangement.defaultStarting = function() {
	var pieces = net_shared_board_PieceArrangement.emptyArrangement();
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(0,0),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Dominator,net_shared_PieceColor.Black)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(1,0),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Liberator,net_shared_PieceColor.Black)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(2,0),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Aggressor,net_shared_PieceColor.Black)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(3,0),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Defensor,net_shared_PieceColor.Black)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(4,0),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Intellector,net_shared_PieceColor.Black)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(5,0),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Defensor,net_shared_PieceColor.Black)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(6,0),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Aggressor,net_shared_PieceColor.Black)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(7,0),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Liberator,net_shared_PieceColor.Black)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(8,0),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Dominator,net_shared_PieceColor.Black)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(0,1),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Progressor,net_shared_PieceColor.Black)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(2,1),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Progressor,net_shared_PieceColor.Black)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(4,1),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Progressor,net_shared_PieceColor.Black)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(6,1),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Progressor,net_shared_PieceColor.Black)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(8,1),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Progressor,net_shared_PieceColor.Black)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(0,5),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Progressor,net_shared_PieceColor.White)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(2,5),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Progressor,net_shared_PieceColor.White)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(4,5),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Progressor,net_shared_PieceColor.White)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(6,5),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Progressor,net_shared_PieceColor.White)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(8,5),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Progressor,net_shared_PieceColor.White)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(0,6),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Dominator,net_shared_PieceColor.White)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(1,5),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Liberator,net_shared_PieceColor.White)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(2,6),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Aggressor,net_shared_PieceColor.White)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(3,5),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Defensor,net_shared_PieceColor.White)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(4,6),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Intellector,net_shared_PieceColor.White)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(5,5),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Defensor,net_shared_PieceColor.White)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(6,6),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Aggressor,net_shared_PieceColor.White)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(7,5),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Liberator,net_shared_PieceColor.White)));
	net_shared_board_PieceArrangement.set(pieces,new net_shared_board_HexCoords(8,6),net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(net_shared_PieceType.Dominator,net_shared_PieceColor.White)));
	return pieces;
};
net_shared_board_PieceArrangement.emptyArrangement = function() {
	var pieces = net_shared_board_PieceArrangement._new();
	var _g = 0;
	var _g1 = net_shared_board_HexCoords.enumerate();
	while(_g < _g1.length) {
		var coords = _g1[_g];
		++_g;
		net_shared_board_PieceArrangement.set(pieces,coords,net_shared_board_InternalHex.Empty);
	}
	return pieces;
};
net_shared_board_PieceArrangement.empty = function(this1,coords) {
	return net_shared_board_PieceArrangement.get(this1,coords) == net_shared_board_InternalHex.Empty;
};
net_shared_board_PieceArrangement.is = function(this1,coords,type,color) {
	if(type != null && color != null && net_shared_board_PieceArrangement.typeAt(this1,coords) == type) {
		return net_shared_board_PieceArrangement.colorAt(this1,coords) == color;
	} else {
		return false;
	}
};
net_shared_board_PieceArrangement.affectedByAura = function(this1,coords) {
	var pieceColor = net_shared_board_PieceArrangement.colorAt(this1,coords);
	if(pieceColor == null) {
		return false;
	}
	var _g = 0;
	var _g1 = coords.lateralSurroundings();
	while(_g < _g1.length) {
		var nearbyCoords = _g1[_g];
		++_g;
		if(net_shared_board_PieceArrangement.is(this1,nearbyCoords,net_shared_PieceType.Intellector,pieceColor)) {
			return true;
		}
	}
	return false;
};
net_shared_board_PieceArrangement.typeAt = function(this1,coords) {
	var _g = net_shared_board_PieceArrangement.get(this1,coords);
	switch(_g._hx_index) {
	case 0:
		return null;
	case 1:
		var piece = _g.piece;
		return piece.type;
	}
};
net_shared_board_PieceArrangement.colorAt = function(this1,coords) {
	var _g = net_shared_board_PieceArrangement.get(this1,coords);
	switch(_g._hx_index) {
	case 0:
		return null;
	case 1:
		var piece = _g.piece;
		return piece.color;
	}
};
net_shared_board_PieceArrangement.get = function(this1,coords) {
	return this1[coords.i][coords.j];
};
net_shared_board_PieceArrangement.set = function(this1,coords,value) {
	this1[coords.i][coords.j] = value;
};
net_shared_board_PieceArrangement.copy = function(this1) {
	var this2 = new Array(9);
	var newArrangement = this2;
	var this2 = this1[0];
	var this3 = new Array(this2.length);
	var r = this3;
	haxe_ds_Vector.blit(this2,0,r,0,this2.length);
	newArrangement[0] = r;
	var this2 = this1[1];
	var this3 = new Array(this2.length);
	var r = this3;
	haxe_ds_Vector.blit(this2,0,r,0,this2.length);
	newArrangement[1] = r;
	var this2 = this1[2];
	var this3 = new Array(this2.length);
	var r = this3;
	haxe_ds_Vector.blit(this2,0,r,0,this2.length);
	newArrangement[2] = r;
	var this2 = this1[3];
	var this3 = new Array(this2.length);
	var r = this3;
	haxe_ds_Vector.blit(this2,0,r,0,this2.length);
	newArrangement[3] = r;
	var this2 = this1[4];
	var this3 = new Array(this2.length);
	var r = this3;
	haxe_ds_Vector.blit(this2,0,r,0,this2.length);
	newArrangement[4] = r;
	var this2 = this1[5];
	var this3 = new Array(this2.length);
	var r = this3;
	haxe_ds_Vector.blit(this2,0,r,0,this2.length);
	newArrangement[5] = r;
	var this2 = this1[6];
	var this3 = new Array(this2.length);
	var r = this3;
	haxe_ds_Vector.blit(this2,0,r,0,this2.length);
	newArrangement[6] = r;
	var this2 = this1[7];
	var this3 = new Array(this2.length);
	var r = this3;
	haxe_ds_Vector.blit(this2,0,r,0,this2.length);
	newArrangement[7] = r;
	var this2 = this1[8];
	var this1 = new Array(this2.length);
	var r = this1;
	haxe_ds_Vector.blit(this2,0,r,0,this2.length);
	newArrangement[8] = r;
	return newArrangement;
};
net_shared_board_PieceArrangement.toString = function(this1) {
	return "PieceArrangement";
};
net_shared_board_PieceArrangement._new = function() {
	var this1 = new Array(9);
	var this2 = this1;
	var this1 = new Array(0 % 2 == 0 ? 7 : 6);
	this2[0] = this1;
	var this1 = new Array(1 % 2 == 0 ? 7 : 6);
	this2[1] = this1;
	var this1 = new Array(2 % 2 == 0 ? 7 : 6);
	this2[2] = this1;
	var this1 = new Array(3 % 2 == 0 ? 7 : 6);
	this2[3] = this1;
	var this1 = new Array(4 % 2 == 0 ? 7 : 6);
	this2[4] = this1;
	var this1 = new Array(5 % 2 == 0 ? 7 : 6);
	this2[5] = this1;
	var this1 = new Array(6 % 2 == 0 ? 7 : 6);
	this2[6] = this1;
	var this1 = new Array(7 % 2 == 0 ? 7 : 6);
	this2[7] = this1;
	var this1 = new Array(8 % 2 == 0 ? 7 : 6);
	this2[8] = this1;
	return this2;
};
var net_shared_board_PieceData = function(type,color) {
	if(type == null || color == null) {
		throw haxe_Exception.thrown("type/color can't be null");
	}
	this.type = type;
	this.color = color;
};
$hxClasses["net.shared.board.PieceData"] = net_shared_board_PieceData;
net_shared_board_PieceData.__name__ = "net.shared.board.PieceData";
net_shared_board_PieceData.prototype = {
	type: null
	,color: null
	,toString: function() {
		return "<" + Std.string(this.type) + ";" + Std.string(this.color) + ">";
	}
	,__class__: net_shared_board_PieceData
};
var net_shared_board_RawPly = function() {
};
$hxClasses["net.shared.board.RawPly"] = net_shared_board_RawPly;
net_shared_board_RawPly.__name__ = "net.shared.board.RawPly";
net_shared_board_RawPly.construct = function(from,to,morphInto) {
	var ply = new net_shared_board_RawPly();
	ply.from = from;
	ply.to = to;
	ply.morphInto = morphInto;
	return ply;
};
net_shared_board_RawPly.fromNotation = function(plyStr,context) {
	return net_shared_converters_Notation.plyFromNotation(plyStr,context);
};
net_shared_board_RawPly.deserialize = function(plyStr) {
	return net_shared_converters_PlySerializer.deserialize(plyStr);
};
net_shared_board_RawPly.prototype = {
	from: null
	,to: null
	,morphInto: null
	,toNotation: function(context,indicateColor) {
		return net_shared_converters_Notation.plyToNotation(this,context,indicateColor);
	}
	,serialize: function() {
		return net_shared_converters_PlySerializer.serialize(this);
	}
	,modifiedHexes: function() {
		return [this.from.copy(),this.to.copy()];
	}
	,copy: function() {
		var ply = new net_shared_board_RawPly();
		ply.from = this.from;
		ply.to = this.to;
		ply.morphInto = this.morphInto;
		return ply;
	}
	,equals: function(p) {
		if(this.from == p.from && this.to == p.to) {
			return this.morphInto == p.morphInto;
		} else {
			return false;
		}
	}
	,toMaterialized: function(context) {
		return net_shared_board_MaterializedPly.construct(context.pieces,this.from,this.to,this.morphInto);
	}
	,toString: function() {
		return "" + Std.string(this.from) + " -> " + Std.string(this.to) + " / Morph: " + Std.string(this.morphInto);
	}
	,__class__: net_shared_board_RawPly
};
var net_shared_board_Rules = function() { };
$hxClasses["net.shared.board.Rules"] = net_shared_board_Rules;
net_shared_board_Rules.__name__ = "net.shared.board.Rules";
net_shared_board_Rules.getAllowedMovements = function(hex,excludeDefensorCastling) {
	if(excludeDefensorCastling == null) {
		excludeDefensorCastling = false;
	}
	var piece = net_shared_board_Hex.piece(hex);
	if(piece == null) {
		return new haxe_ds_EnumValueMap();
	}
	switch(piece.type._hx_index) {
	case 0:
		var _g = new haxe_ds_EnumValueMap();
		_g.set(net_shared_board_MovementPattern.SimpleJump(1),net_shared_board_Direction.forwardLateral(piece.color));
		return _g;
	case 1:
		var _g = new haxe_ds_EnumValueMap();
		_g.set(net_shared_board_MovementPattern.NormalSlide,net_shared_board_Direction.allRadial());
		return _g;
	case 2:
		var _g = new haxe_ds_EnumValueMap();
		_g.set(net_shared_board_MovementPattern.NormalSlide,net_shared_board_Direction.allLateral());
		return _g;
	case 3:
		var _g = new haxe_ds_EnumValueMap();
		_g.set(net_shared_board_MovementPattern.NonCapturingJump(1),net_shared_board_Direction.allLateral());
		_g.set(net_shared_board_MovementPattern.SimpleJump(2),net_shared_board_Direction.allLateral());
		return _g;
	case 4:
		if(excludeDefensorCastling) {
			var _g = new haxe_ds_EnumValueMap();
			_g.set(net_shared_board_MovementPattern.SimpleJump(1),net_shared_board_Direction.allLateral());
			return _g;
		} else {
			var _g = new haxe_ds_EnumValueMap();
			_g.set(net_shared_board_MovementPattern.SimpleJump(1),net_shared_board_Direction.allLateral());
			_g.set(net_shared_board_MovementPattern.Swap(net_shared_PieceType.Intellector),net_shared_board_Direction.allLateral());
			return _g;
		}
		break;
	case 5:
		var _g = new haxe_ds_EnumValueMap();
		_g.set(net_shared_board_MovementPattern.NonCapturingJump(1),net_shared_board_Direction.allLateral());
		_g.set(net_shared_board_MovementPattern.Swap(net_shared_PieceType.Defensor),net_shared_board_Direction.allLateral());
		return _g;
	}
};
net_shared_board_Rules.getPossibleDestinations = function(departure,pieceArrangement,excludeDefensorCastling) {
	if(excludeDefensorCastling == null) {
		excludeDefensorCastling = false;
	}
	var possibleDestinations = [];
	var departureHex = net_shared_board_PieceArrangement.get(pieceArrangement,departure);
	var allowedMovements = net_shared_board_Rules.getAllowedMovements(departureHex);
	var map = allowedMovements;
	var _g_map = map;
	var _g_keys = map.keys();
	while(_g_keys.hasNext()) {
		var key = _g_keys.next();
		var _g1_value = _g_map.get(key);
		var _g1_key = key;
		var pattern = _g1_key;
		var directions = _g1_value;
		var _g = 0;
		while(_g < directions.length) {
			var dir = directions[_g];
			++_g;
			switch(pattern._hx_index) {
			case 0:
				var distance = pattern.distance;
				var destination = departure.step(dir,distance);
				if(destination.isValid() && net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(pieceArrangement,destination)) != net_shared_board_Hex.color(departureHex)) {
					possibleDestinations.push(destination);
				}
				break;
			case 1:
				var distance1 = pattern.distance;
				var destination1 = departure.step(dir,distance1);
				if(destination1.isValid() && net_shared_board_PieceArrangement.get(pieceArrangement,destination1)._hx_index == 0) {
					possibleDestinations.push(destination1);
				}
				break;
			case 2:
				var destination2 = departure;
				var proceed = true;
				while(proceed) {
					destination2 = destination2.step(dir);
					if(!destination2.isValid()) {
						break;
					}
					var hexColor = net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(pieceArrangement,destination2));
					if(hexColor == net_shared_board_Hex.color(departureHex)) {
						proceed = false;
					} else if(hexColor == null) {
						possibleDestinations.push(destination2);
					} else {
						proceed = false;
						possibleDestinations.push(destination2);
					}
				}
				break;
			case 3:
				var partner = pattern.partner;
				var destination3 = departure.step(dir);
				if(!destination3.isValid()) {
					continue;
				}
				var destinationHex = net_shared_board_PieceArrangement.get(pieceArrangement,destination3);
				var desiredHex = net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(partner,net_shared_board_Hex.color(departureHex)));
				if(net_shared_board_Hex.equals(destinationHex,desiredHex)) {
					possibleDestinations.push(destination3);
				}
				break;
			}
		}
	}
	return possibleDestinations;
};
net_shared_board_Rules.getPossiblePremoveDestinations = function(departure,piece) {
	var possibleDestinations = [];
	var allowedMovements = net_shared_board_Rules.getAllowedMovements(net_shared_board_InternalHex.Occupied(piece));
	var map = allowedMovements;
	var _g_map = map;
	var _g_keys = map.keys();
	while(_g_keys.hasNext()) {
		var key = _g_keys.next();
		var _g1_value = _g_map.get(key);
		var _g1_key = key;
		var pattern = _g1_key;
		var directions = _g1_value;
		var _g = 0;
		while(_g < directions.length) {
			var dir = directions[_g];
			++_g;
			switch(pattern._hx_index) {
			case 0:
				var distance = pattern.distance;
				var destination = departure.step(dir,distance);
				if(destination.isValid()) {
					possibleDestinations.push(destination);
				}
				break;
			case 1:
				var distance1 = pattern.distance;
				var destination1 = departure.step(dir,distance1);
				if(destination1.isValid()) {
					possibleDestinations.push(destination1);
				}
				break;
			case 2:
				var destination2 = departure.step(dir);
				while(destination2.isValid()) {
					possibleDestinations.push(destination2);
					destination2 = destination2.step(dir);
				}
				break;
			case 3:
				var _g1 = pattern.partner;
				var destination3 = departure.step(dir);
				if(destination3.isValid()) {
					possibleDestinations.push(destination3);
				}
				break;
			}
		}
	}
	return possibleDestinations;
};
net_shared_board_Rules.isMovementPossible = function(from,to,pieceArrangement) {
	var movingPiece = net_shared_board_Hex.piece(net_shared_board_PieceArrangement.get(pieceArrangement,from));
	if(movingPiece == null) {
		return false;
	} else {
		return Lambda.exists(net_shared_board_Rules.getPossibleDestinations(from,pieceArrangement),function(x) {
			return x.equals(to);
		});
	}
};
net_shared_board_Rules.isPossible = function(ply,situation) {
	var movingPiece = net_shared_board_Hex.piece(net_shared_board_PieceArrangement.get(situation.pieces,ply.from));
	if(movingPiece == null || movingPiece.color != situation.turnColor) {
		return false;
	} else if(ply.morphInto != null && movingPiece.type == net_shared_PieceType.Progressor && ply.to.isFinal(movingPiece.color)) {
		var impossiblePromotionType = ply.morphInto == net_shared_PieceType.Intellector || ply.morphInto == net_shared_PieceType.Progressor;
		if(impossiblePromotionType) {
			return false;
		}
	} else if(ply.morphInto != null) {
		var intChameleon = movingPiece.type == net_shared_PieceType.Intellector;
		var noAura = !situation.intellectorCoords(movingPiece.color).isLaterallyNear(ply.from);
		var wrongChameleonType = ply.morphInto != net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(situation.pieces,ply.to));
		if(intChameleon || noAura || wrongChameleonType) {
			return false;
		}
	}
	return Lambda.exists(net_shared_board_Rules.getPossibleDestinations(ply.from,situation.pieces),function(x) {
		return x.equals(ply.to);
	});
};
net_shared_board_Rules.isPremovePossible = function(from,to,pieceArrangement) {
	var movingPiece = net_shared_board_Hex.piece(net_shared_board_PieceArrangement.get(pieceArrangement,from));
	if(movingPiece == null) {
		return false;
	} else {
		return Lambda.exists(net_shared_board_Rules.getPossiblePremoveDestinations(from,movingPiece),function(x) {
			return x.equals(to);
		});
	}
};
net_shared_board_Rules.possiblePromotionTypes = function() {
	return [net_shared_PieceType.Liberator,net_shared_PieceType.Aggressor,net_shared_PieceType.Defensor,net_shared_PieceType.Dominator];
};
net_shared_board_Rules.possiblePlys = function(situation) {
	var plys = [];
	var allPieces = situation.collectPieces();
	var map = allPieces;
	var _g_map = map;
	var _g_keys = map.keys();
	while(_g_keys.hasNext()) {
		var key = _g_keys.next();
		var _g1_value = _g_map.get(key);
		var _g1_key = key;
		var coords = _g1_key;
		var piece = _g1_value;
		if(piece.color == situation.turnColor) {
			var _g = 0;
			var _g1 = net_shared_board_Rules.getPossibleDestinations(coords,situation.pieces,true);
			while(_g < _g1.length) {
				var destination = _g1[_g];
				++_g;
				if(piece.type == net_shared_PieceType.Progressor && destination.isFinal(piece.color)) {
					var _g2 = 0;
					var _g3 = net_shared_board_Rules.possiblePromotionTypes();
					while(_g2 < _g3.length) {
						var newType = _g3[_g2];
						++_g2;
						plys.push(net_shared_board_RawPly.construct(coords,destination,newType));
					}
				} else {
					var pieceOnDestination = net_shared_board_Hex.piece(net_shared_board_PieceArrangement.get(situation.pieces,destination));
					var isCapture = pieceOnDestination != null && pieceOnDestination.color != piece.color;
					var isAffectedByAura = situation.intellectorCoords(piece.color).isLaterallyNear(coords);
					plys.push(net_shared_board_RawPly.construct(coords,destination,null));
					if(piece.type != net_shared_PieceType.Intellector && isCapture && isAffectedByAura) {
						plys.push(net_shared_board_RawPly.construct(coords,destination,pieceOnDestination.type));
					}
				}
			}
		}
	}
	return plys;
};
var net_shared_board_OccupiedHexData = function(scalarCoord,piece) {
	this.scalarCoord = scalarCoord;
	this.piece = piece;
};
$hxClasses["net.shared.board.OccupiedHexData"] = net_shared_board_OccupiedHexData;
net_shared_board_OccupiedHexData.__name__ = "net.shared.board.OccupiedHexData";
net_shared_board_OccupiedHexData.prototype = {
	scalarCoord: null
	,piece: null
	,__class__: net_shared_board_OccupiedHexData
};
var net_shared_board_Situation = function(pieces,turnColor,intellectorPos) {
	this.pieces = pieces;
	this.turnColor = turnColor;
	this.intellectorPos = intellectorPos;
};
$hxClasses["net.shared.board.Situation"] = net_shared_board_Situation;
net_shared_board_Situation.__name__ = "net.shared.board.Situation";
net_shared_board_Situation.defaultStarting = function() {
	var tmp = net_shared_board_PieceArrangement.defaultStarting();
	var _g = new haxe_ds_EnumValueMap();
	_g.set(net_shared_PieceColor.White,new net_shared_board_HexCoords(4,6));
	_g.set(net_shared_PieceColor.Black,new net_shared_board_HexCoords(4,0));
	return new net_shared_board_Situation(tmp,net_shared_PieceColor.White,_g);
};
net_shared_board_Situation.empty = function() {
	return new net_shared_board_Situation(net_shared_board_PieceArrangement.emptyArrangement(),net_shared_PieceColor.White,new haxe_ds_EnumValueMap());
};
net_shared_board_Situation.randomPlay = function(plyCount) {
	var sit = net_shared_board_Situation.defaultStarting();
	var _g = 0;
	var _g1 = plyCount;
	while(_g < _g1) {
		var i = _g++;
		sit.performRandomPly();
	}
	return sit;
};
net_shared_board_Situation.deserialize = function(sip) {
	return net_shared_converters_SituationSerializer.deserialize(sip);
};
net_shared_board_Situation.prototype = {
	pieces: null
	,turnColor: null
	,intellectorPos: null
	,serialize: function() {
		return net_shared_converters_SituationSerializer.serialize(this);
	}
	,isValidStarting: function() {
		var whiteIntPos = this.intellectorPos.get(net_shared_PieceColor.White);
		var blackIntPos = this.intellectorPos.get(net_shared_PieceColor.Black);
		if(whiteIntPos == null || whiteIntPos.isFinal(net_shared_PieceColor.White)) {
			return false;
		} else if(blackIntPos == null || blackIntPos.isFinal(net_shared_PieceColor.Black)) {
			return false;
		} else if(whiteIntPos.equals(blackIntPos)) {
			return false;
		} else {
			return true;
		}
	}
	,collectPieces: function() {
		var map = new haxe_ds_ObjectMap();
		var _g = 0;
		var _g1 = net_shared_board_HexCoords.enumerate();
		while(_g < _g1.length) {
			var coords = _g1[_g];
			++_g;
			var _g2 = net_shared_board_PieceArrangement.get(this.pieces,coords);
			if(_g2._hx_index == 1) {
				var piece = _g2.piece;
				map.set(coords,piece);
			}
		}
		return map;
	}
	,collectPiecesStable: function() {
		var list = [];
		var _g = 0;
		var _g1 = net_shared_board_HexCoords.enumerateScalar();
		while(_g < _g1.length) {
			var coord = _g1[_g];
			++_g;
			var coords = net_shared_board_HexCoords.fromScalarCoord(coord);
			var _g2 = net_shared_board_PieceArrangement.get(this.pieces,coords);
			if(_g2._hx_index == 1) {
				var piece = _g2.piece;
				list.push(new net_shared_board_OccupiedHexData(coord,piece));
			}
		}
		return list;
	}
	,isDefaultStarting: function() {
		return this.getHash() == net_shared_board_Situation.defaultStartingHash;
	}
	,getHash: function() {
		var hash = "";
		var _g = 0;
		var _g1 = this.collectPiecesStable();
		while(_g < _g1.length) {
			var hexData = _g1[_g];
			++_g;
			hash += hexData.scalarCoord;
			var type = hexData.piece.type;
			hash += $hxEnums[type.__enum__].__constructs__[type._hx_index]._hx_name.charAt(1);
			if(hexData.piece.color == net_shared_PieceColor.Black) {
				hash += "!";
			}
		}
		return hash;
	}
	,intellectorCoords: function(color) {
		return this.intellectorPos.get(color);
	}
	,availablePlys: function() {
		return net_shared_board_Rules.possiblePlys(this);
	}
	,situationAfterRawPly: function(ply) {
		return this.situationAfterPly(ply.toMaterialized(this));
	}
	,situationAfterPly: function(ply) {
		var situation = this.copy();
		situation.performPly(ply);
		return situation;
	}
	,performRandomPly: function() {
		var allPlys = this.availablePlys();
		var randomPly = net_shared_utils_MathUtils.randomElement(allPlys);
		this.performRawPly(randomPly);
	}
	,performRawPly: function(ply) {
		return this.performPly(ply.toMaterialized(this));
	}
	,performPly: function(ply) {
		if(!net_shared_board_Rules.isPossible(net_shared_board_MaterializedPly.toRaw(ply),this)) {
			return net_shared_board_PerformPlyResult.FailedToPerform;
		}
		var isMate = net_shared_board_MaterializedPly.isMating(ply);
		var isBreakthrough = isMate ? false : net_shared_board_MaterializedPly.isBreakthrough(ply,this.pieces,this.turnColor);
		var isProgressive = isBreakthrough ? false : net_shared_board_MaterializedPly.isProgressive(ply);
		switch(ply._hx_index) {
		case 0:
			var from = ply.from;
			var to = ply.to;
			var movingPiece = ply.movingPiece;
			var hex = net_shared_board_InternalHex.Empty;
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,from)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,from)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),from);
			}
			net_shared_board_PieceArrangement.set(this.pieces,from,hex);
			var hex = net_shared_board_Hex.construct(movingPiece,this.turnColor);
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,to)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,to)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),to);
			}
			net_shared_board_PieceArrangement.set(this.pieces,to,hex);
			break;
		case 1:
			var _g = ply.capturedPiece;
			var from = ply.from;
			var to = ply.to;
			var capturingPiece = ply.capturingPiece;
			var hex = net_shared_board_InternalHex.Empty;
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,from)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,from)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),from);
			}
			net_shared_board_PieceArrangement.set(this.pieces,from,hex);
			var hex = net_shared_board_Hex.construct(capturingPiece,this.turnColor);
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,to)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,to)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),to);
			}
			net_shared_board_PieceArrangement.set(this.pieces,to,hex);
			break;
		case 2:
			var _g = ply.capturingPiece;
			var from = ply.from;
			var to = ply.to;
			var capturedPiece = ply.capturedPiece;
			var hex = net_shared_board_InternalHex.Empty;
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,from)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,from)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),from);
			}
			net_shared_board_PieceArrangement.set(this.pieces,from,hex);
			var hex = net_shared_board_Hex.construct(capturedPiece,this.turnColor);
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,to)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,to)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),to);
			}
			net_shared_board_PieceArrangement.set(this.pieces,to,hex);
			break;
		case 3:
			var from = ply.from;
			var to = ply.to;
			var promotedTo = ply.promotedTo;
			var hex = net_shared_board_InternalHex.Empty;
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,from)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,from)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),from);
			}
			net_shared_board_PieceArrangement.set(this.pieces,from,hex);
			var hex = net_shared_board_Hex.construct(promotedTo,this.turnColor);
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,to)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,to)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),to);
			}
			net_shared_board_PieceArrangement.set(this.pieces,to,hex);
			break;
		case 4:
			var _g = ply.capturedPiece;
			var from = ply.from;
			var to = ply.to;
			var promotedTo = ply.promotedTo;
			var hex = net_shared_board_InternalHex.Empty;
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,from)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,from)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),from);
			}
			net_shared_board_PieceArrangement.set(this.pieces,from,hex);
			var hex = net_shared_board_Hex.construct(promotedTo,this.turnColor);
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,to)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,to)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),to);
			}
			net_shared_board_PieceArrangement.set(this.pieces,to,hex);
			break;
		case 5:
			var from = ply.from;
			var to = ply.to;
			var tmp = net_shared_board_PieceArrangement.get(this.pieces,from);
			var hex = net_shared_board_PieceArrangement.get(this.pieces,to);
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,from)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,from)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),from);
			}
			net_shared_board_PieceArrangement.set(this.pieces,from,hex);
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,to)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,to)));
			}
			if(net_shared_board_Hex.type(tmp) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(tmp),to);
			}
			net_shared_board_PieceArrangement.set(this.pieces,to,tmp);
			break;
		}
		this.turnColor = this.turnColor == net_shared_PieceColor.White ? net_shared_PieceColor.Black : net_shared_PieceColor.White;
		if(isMate) {
			return net_shared_board_PerformPlyResult.MateReached;
		} else if(isBreakthrough) {
			return net_shared_board_PerformPlyResult.BreakthroughReached;
		} else if(isProgressive) {
			return net_shared_board_PerformPlyResult.ProgressivePlyPerformed(ply);
		} else {
			return net_shared_board_PerformPlyResult.NormalPlyPerformed(ply);
		}
	}
	,revertPly: function(ply) {
		this.turnColor = this.turnColor == net_shared_PieceColor.White ? net_shared_PieceColor.Black : net_shared_PieceColor.White;
		switch(ply._hx_index) {
		case 0:
			var _g = ply.movingPiece;
			var from = ply.from;
			var to = ply.to;
			var hex = net_shared_board_PieceArrangement.get(this.pieces,to);
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,from)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,from)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),from);
			}
			net_shared_board_PieceArrangement.set(this.pieces,from,hex);
			var hex = net_shared_board_InternalHex.Empty;
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,to)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,to)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),to);
			}
			net_shared_board_PieceArrangement.set(this.pieces,to,hex);
			break;
		case 1:
			var _g = ply.capturingPiece;
			var from = ply.from;
			var to = ply.to;
			var capturedPiece = ply.capturedPiece;
			var hex = net_shared_board_PieceArrangement.get(this.pieces,to);
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,from)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,from)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),from);
			}
			net_shared_board_PieceArrangement.set(this.pieces,from,hex);
			var hex = net_shared_board_Hex.construct(capturedPiece,this.turnColor == net_shared_PieceColor.White ? net_shared_PieceColor.Black : net_shared_PieceColor.White);
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,to)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,to)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),to);
			}
			net_shared_board_PieceArrangement.set(this.pieces,to,hex);
			break;
		case 2:
			var from = ply.from;
			var to = ply.to;
			var capturingPiece = ply.capturingPiece;
			var capturedPiece = ply.capturedPiece;
			var hex = net_shared_board_Hex.construct(capturingPiece,this.turnColor);
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,from)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,from)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),from);
			}
			net_shared_board_PieceArrangement.set(this.pieces,from,hex);
			var hex = net_shared_board_Hex.construct(capturedPiece,this.turnColor == net_shared_PieceColor.White ? net_shared_PieceColor.Black : net_shared_PieceColor.White);
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,to)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,to)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),to);
			}
			net_shared_board_PieceArrangement.set(this.pieces,to,hex);
			break;
		case 3:
			var _g = ply.promotedTo;
			var from = ply.from;
			var to = ply.to;
			var hex = net_shared_board_Hex.construct(net_shared_PieceType.Progressor,this.turnColor);
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,from)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,from)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),from);
			}
			net_shared_board_PieceArrangement.set(this.pieces,from,hex);
			var hex = net_shared_board_InternalHex.Empty;
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,to)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,to)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),to);
			}
			net_shared_board_PieceArrangement.set(this.pieces,to,hex);
			break;
		case 4:
			var _g = ply.promotedTo;
			var from = ply.from;
			var to = ply.to;
			var capturedPiece = ply.capturedPiece;
			var hex = net_shared_board_Hex.construct(net_shared_PieceType.Progressor,this.turnColor);
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,from)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,from)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),from);
			}
			net_shared_board_PieceArrangement.set(this.pieces,from,hex);
			var hex = net_shared_board_Hex.construct(capturedPiece,this.turnColor == net_shared_PieceColor.White ? net_shared_PieceColor.Black : net_shared_PieceColor.White);
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,to)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,to)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),to);
			}
			net_shared_board_PieceArrangement.set(this.pieces,to,hex);
			break;
		case 5:
			var from = ply.from;
			var to = ply.to;
			var tmp = net_shared_board_PieceArrangement.get(this.pieces,from);
			var hex = net_shared_board_PieceArrangement.get(this.pieces,to);
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,from)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,from)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),from);
			}
			net_shared_board_PieceArrangement.set(this.pieces,from,hex);
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,to)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,to)));
			}
			if(net_shared_board_Hex.type(tmp) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(tmp),to);
			}
			net_shared_board_PieceArrangement.set(this.pieces,to,tmp);
			break;
		}
	}
	,getS: function(scalarCoord) {
		var coords = net_shared_board_HexCoords.fromScalarCoord(scalarCoord);
		return net_shared_board_PieceArrangement.get(this.pieces,coords);
	}
	,get: function(coords) {
		return net_shared_board_PieceArrangement.get(this.pieces,coords);
	}
	,set: function(coords,hex,adjustToConsistency) {
		if(adjustToConsistency == null) {
			adjustToConsistency = true;
		}
		if(adjustToConsistency) {
			if(net_shared_board_Hex.type(net_shared_board_PieceArrangement.get(this.pieces,coords)) == net_shared_PieceType.Intellector) {
				this.intellectorPos.remove(net_shared_board_Hex.color(net_shared_board_PieceArrangement.get(this.pieces,coords)));
			}
			if(net_shared_board_Hex.type(hex) == net_shared_PieceType.Intellector) {
				this.intellectorPos.set(net_shared_board_Hex.color(hex),coords);
			}
		}
		net_shared_board_PieceArrangement.set(this.pieces,coords,hex);
	}
	,copy: function(newTurnColor) {
		return new net_shared_board_Situation(net_shared_board_PieceArrangement.copy(this.pieces),newTurnColor != null ? newTurnColor : this.turnColor,this.intellectorPos.copy());
	}
	,toString: function() {
		return "Situation";
	}
	,__class__: net_shared_board_Situation
};
var net_shared_converters_Notation = function() { };
$hxClasses["net.shared.converters.Notation"] = net_shared_converters_Notation;
net_shared_converters_Notation.__name__ = "net.shared.converters.Notation";
net_shared_converters_Notation.plySequenceToNotation = function(plys,startingSituation) {
	var plyStrSeq = [];
	var situation = startingSituation.copy();
	var _g = 0;
	while(_g < plys.length) {
		var ply = plys[_g];
		++_g;
		plyStrSeq.push(ply.toNotation(situation));
		situation.performRawPly(ply);
	}
	return plyStrSeq;
};
net_shared_converters_Notation.plyFromNotation = function(plyStr,context) {
	var ply = new net_shared_board_RawPly();
	if(plyStr.indexOf(":") != -1) {
		var splitted = plyStr.split(":");
		ply.from = net_shared_converters_Notation.parseHexCoords(splitted[0]);
		ply.to = net_shared_converters_Notation.parseHexCoords(splitted[1]);
		ply.morphInto = null;
		return ply;
	} else {
		var movingPiece;
		switch(plyStr.charAt(0)) {
		case "":
			movingPiece = net_shared_PieceType.Progressor;
			break;
		case "A":
			movingPiece = net_shared_PieceType.Aggressor;
			break;
		case "D":
			movingPiece = net_shared_PieceType.Dominator;
			break;
		case "F":
			movingPiece = net_shared_PieceType.Defensor;
			break;
		case "I":
			movingPiece = net_shared_PieceType.Intellector;
			break;
		case "L":
			movingPiece = net_shared_PieceType.Liberator;
			break;
		case "P":
			movingPiece = net_shared_PieceType.Progressor;
			break;
		default:
			movingPiece = null;
		}
		if(movingPiece == null) {
			movingPiece = net_shared_PieceType.Progressor;
		} else {
			plyStr = HxOverrides.substr(plyStr,1,null);
		}
		if(plyStr.indexOf("~") != -1 || plyStr.indexOf("X") != -1 && plyStr.charAt(0) != "X") {
			ply.from = net_shared_converters_Notation.parseHexCoords(HxOverrides.substr(plyStr,0,2));
			plyStr = HxOverrides.substr(plyStr,3,null);
			ply.to = net_shared_converters_Notation.parseHexCoords(HxOverrides.substr(plyStr,0,2));
			plyStr = HxOverrides.substr(plyStr,2,null);
			if(plyStr.charAt(0) == "=") {
				var tmp;
				switch(plyStr.charAt(1)) {
				case "":
					tmp = net_shared_PieceType.Progressor;
					break;
				case "A":
					tmp = net_shared_PieceType.Aggressor;
					break;
				case "D":
					tmp = net_shared_PieceType.Dominator;
					break;
				case "F":
					tmp = net_shared_PieceType.Defensor;
					break;
				case "I":
					tmp = net_shared_PieceType.Intellector;
					break;
				case "L":
					tmp = net_shared_PieceType.Liberator;
					break;
				case "P":
					tmp = net_shared_PieceType.Progressor;
					break;
				default:
					tmp = null;
				}
				ply.morphInto = tmp;
			}
			return ply;
		} else {
			if(plyStr.charAt(0) == "X") {
				plyStr = HxOverrides.substr(plyStr,1,null);
			}
			ply.to = net_shared_converters_Notation.parseHexCoords(HxOverrides.substr(plyStr,0,2));
			plyStr = HxOverrides.substr(plyStr,2,null);
			if(plyStr.charAt(0) == "=") {
				var tmp;
				switch(plyStr.charAt(1)) {
				case "":
					tmp = net_shared_PieceType.Progressor;
					break;
				case "A":
					tmp = net_shared_PieceType.Aggressor;
					break;
				case "D":
					tmp = net_shared_PieceType.Dominator;
					break;
				case "F":
					tmp = net_shared_PieceType.Defensor;
					break;
				case "I":
					tmp = net_shared_PieceType.Intellector;
					break;
				case "L":
					tmp = net_shared_PieceType.Liberator;
					break;
				case "P":
					tmp = net_shared_PieceType.Progressor;
					break;
				default:
					tmp = null;
				}
				ply.morphInto = tmp;
			}
			var map = context.collectPieces();
			var _g_map = map;
			var _g_keys = map.keys();
			while(_g_keys.hasNext()) {
				var key = _g_keys.next();
				var _g1_value = _g_map.get(key);
				var _g1_key = key;
				var coords = _g1_key;
				var piece = _g1_value;
				if(piece.color == context.turnColor && piece.type == movingPiece) {
					ply.from = coords;
					if(net_shared_board_Rules.isPossible(ply,context)) {
						return ply;
					}
				}
			}
			return null;
		}
	}
};
net_shared_converters_Notation.plyToNotation = function(ply,context,indicateColor) {
	var hexFrom = net_shared_board_PieceArrangement.get(context.pieces,ply.from);
	var hexTo = net_shared_board_PieceArrangement.get(context.pieces,ply.to);
	var castle = net_shared_board_Hex.color(hexFrom) == net_shared_board_Hex.color(hexTo);
	var capture = !castle && !net_shared_board_Hex.isEmpty(hexTo);
	var mate = capture && net_shared_board_Hex.type(hexTo) == net_shared_PieceType.Intellector;
	var str = "";
	if(indicateColor) {
		if(context.turnColor == net_shared_PieceColor.White) {
			str += "⬡";
		} else {
			str += "⬢";
		}
	}
	if(castle) {
		if(net_shared_board_Hex.type(hexTo) == net_shared_PieceType.Intellector) {
			return str + net_shared_converters_Notation.hexNotation(ply.to).toUpperCase() + ":" + net_shared_converters_Notation.hexNotation(ply.from).toUpperCase();
		} else {
			return str + net_shared_converters_Notation.hexNotation(ply.from).toUpperCase() + ":" + net_shared_converters_Notation.hexNotation(ply.to).toUpperCase();
		}
	}
	var str1;
	switch(net_shared_board_Hex.type(hexFrom)._hx_index) {
	case 0:
		str1 = "";
		break;
	case 1:
		str1 = "A";
		break;
	case 2:
		str1 = "D";
		break;
	case 3:
		str1 = "L";
		break;
	case 4:
		str1 = "F";
		break;
	case 5:
		str1 = "I";
		break;
	}
	str += str1;
	var another = null;
	var map = context.collectPieces();
	var _g_map = map;
	var _g_keys = map.keys();
	while(_g_keys.hasNext()) {
		var key = _g_keys.next();
		var _g1_value = _g_map.get(key);
		var _g1_key = key;
		var coords = _g1_key;
		var piece = _g1_value;
		if(!coords.equals(ply.from)) {
			if(piece.type == net_shared_board_Hex.type(hexFrom) && piece.color == net_shared_board_Hex.color(hexFrom)) {
				if(Lambda.exists(net_shared_board_Rules.getPossibleDestinations(coords,context.pieces),($_=ply.to,$bind($_,$_.equals)))) {
					another = coords;
					break;
				}
			}
		}
	}
	if(another != null) {
		str += net_shared_converters_Notation.hexNotation(ply.from);
	}
	if(capture) {
		str += "X";
	} else if(another != null) {
		str += "~";
	}
	str += net_shared_converters_Notation.hexNotation(ply.to);
	if(ply.morphInto != null) {
		var progressorNonEmpty = true;
		if(progressorNonEmpty == null) {
			progressorNonEmpty = false;
		}
		var str1;
		switch(ply.morphInto._hx_index) {
		case 0:
			str1 = progressorNonEmpty ? "P" : "";
			break;
		case 1:
			str1 = "A";
			break;
		case 2:
			str1 = "D";
			break;
		case 3:
			str1 = "L";
			break;
		case 4:
			str1 = "F";
			break;
		case 5:
			str1 = "I";
			break;
		}
		str += "=" + str1;
	}
	if(mate) {
		str += "#";
	}
	return str;
};
net_shared_converters_Notation.pieceAbbreviation = function(piece,progressorNonEmpty) {
	if(progressorNonEmpty == null) {
		progressorNonEmpty = false;
	}
	switch(piece._hx_index) {
	case 0:
		if(progressorNonEmpty) {
			return "P";
		} else {
			return "";
		}
		break;
	case 1:
		return "A";
	case 2:
		return "D";
	case 3:
		return "L";
	case 4:
		return "F";
	case 5:
		return "I";
	}
};
net_shared_converters_Notation.pieceFromAbbreviation = function(abb) {
	switch(abb) {
	case "":
		return net_shared_PieceType.Progressor;
	case "A":
		return net_shared_PieceType.Aggressor;
	case "D":
		return net_shared_PieceType.Dominator;
	case "F":
		return net_shared_PieceType.Defensor;
	case "I":
		return net_shared_PieceType.Intellector;
	case "L":
		return net_shared_PieceType.Liberator;
	case "P":
		return net_shared_PieceType.Progressor;
	default:
		return null;
	}
};
net_shared_converters_Notation.hexNotation = function(pos) {
	return net_shared_converters_Notation.getColumn(pos.i) + net_shared_converters_Notation.getRow(pos.i,pos.j);
};
net_shared_converters_Notation.parseHexCoords = function(s) {
	s = s.toLowerCase();
	var i = HxOverrides.cca(s,0) - 97;
	var j = 7 - Std.parseInt(s.charAt(1)) - i % 2;
	return new net_shared_board_HexCoords(i,j);
};
net_shared_converters_Notation.getColumn = function(i) {
	return String.fromCodePoint((97 + i));
};
net_shared_converters_Notation.getRow = function(i,j) {
	var rowNum = 7 - j - i % 2;
	return "" + rowNum;
};
var net_shared_converters_PlySerializer = function() { };
$hxClasses["net.shared.converters.PlySerializer"] = net_shared_converters_PlySerializer;
net_shared_converters_PlySerializer.__name__ = "net.shared.converters.PlySerializer";
net_shared_converters_PlySerializer.deserialize = function(serialized) {
	var ply = new net_shared_board_RawPly();
	ply.from = new net_shared_board_HexCoords(Std.parseInt(serialized.charAt(0)),Std.parseInt(serialized.charAt(1)));
	ply.to = new net_shared_board_HexCoords(Std.parseInt(serialized.charAt(2)),Std.parseInt(serialized.charAt(3)));
	ply.morphInto = serialized.length == 4 ? null : Type.createEnum(net_shared_PieceType,HxOverrides.substr(serialized,4,null),null);
	return ply;
};
net_shared_converters_PlySerializer.serialize = function(ply) {
	var s = "";
	s += ply.from.i;
	s += ply.from.j;
	s += ply.to.i;
	s += ply.to.j;
	var s1;
	if(ply.morphInto == null) {
		s1 = "";
	} else {
		var e = ply.morphInto;
		s1 = $hxEnums[e.__enum__].__constructs__[e._hx_index]._hx_name;
	}
	s += s1;
	return s;
};
var net_shared_converters_SituationSerializer = function() { };
$hxClasses["net.shared.converters.SituationSerializer"] = net_shared_converters_SituationSerializer;
net_shared_converters_SituationSerializer.__name__ = "net.shared.converters.SituationSerializer";
net_shared_converters_SituationSerializer.deserialize = function(sip) {
	var pieces = net_shared_board_PieceArrangement.emptyArrangement();
	var turnColor;
	switch(sip.charAt(0)) {
	case "b":
		turnColor = net_shared_PieceColor.Black;
		break;
	case "w":
		turnColor = net_shared_PieceColor.White;
		break;
	default:
		turnColor = null;
	}
	var intellectorPos = new haxe_ds_EnumValueMap();
	var exclamationMarkPassed = false;
	var ci = 1;
	while(ci < sip.length) {
		if(HxOverrides.cca(sip,ci) == 33) {
			if(exclamationMarkPassed) {
				return null;
			}
			exclamationMarkPassed = true;
			++ci;
			continue;
		}
		var scalarCoord = HxOverrides.cca(sip,ci) - 64;
		if(scalarCoord < 0 || scalarCoord >= 59) {
			return null;
		}
		var pieceType;
		switch(sip.charAt(ci + 1)) {
		case "e":
			pieceType = net_shared_PieceType.Defensor;
			break;
		case "g":
			pieceType = net_shared_PieceType.Aggressor;
			break;
		case "i":
			pieceType = net_shared_PieceType.Liberator;
			break;
		case "n":
			pieceType = net_shared_PieceType.Intellector;
			break;
		case "o":
			pieceType = net_shared_PieceType.Dominator;
			break;
		case "r":
			pieceType = net_shared_PieceType.Progressor;
			break;
		default:
			pieceType = null;
		}
		var pieceColor = exclamationMarkPassed ? net_shared_PieceColor.Black : net_shared_PieceColor.White;
		if(pieceType == null) {
			return null;
		} else {
			var coords = net_shared_board_HexCoords.fromScalarCoord(scalarCoord);
			net_shared_board_PieceArrangement.set(pieces,coords,net_shared_board_InternalHex.Occupied(new net_shared_board_PieceData(pieceType,pieceColor)));
			if(pieceType == net_shared_PieceType.Intellector) {
				if(intellectorPos.exists(pieceColor)) {
					return null;
				} else {
					intellectorPos.set(pieceColor,coords);
				}
			}
		}
		ci += 2;
	}
	return new net_shared_board_Situation(pieces,turnColor,intellectorPos);
};
net_shared_converters_SituationSerializer.serialize = function(situation) {
	var _g = new haxe_ds_EnumValueMap();
	_g.set(net_shared_PieceColor.White,"");
	_g.set(net_shared_PieceColor.Black,"");
	var playerPiecesStr = _g;
	var _g = 0;
	var _g1 = situation.collectPiecesStable();
	while(_g < _g1.length) {
		var hexData = _g1[_g];
		++_g;
		var code = hexData.scalarCoord + 64;
		var pieceStr = String.fromCodePoint(code);
		var type = hexData.piece.type;
		var pieceStr1 = pieceStr + $hxEnums[type.__enum__].__constructs__[type._hx_index]._hx_name.charAt(1);
		var _g2 = hexData.piece.color;
		var _g3 = playerPiecesStr;
		var v = _g3.get(_g2) + pieceStr1;
		_g3.set(_g2,v);
	}
	return (situation.turnColor == net_shared_PieceColor.White ? "w" : "b") + playerPiecesStr.get(net_shared_PieceColor.White) + "!" + playerPiecesStr.get(net_shared_PieceColor.Black);
};
var net_shared_dataobj_ChallengeData = function() {
};
$hxClasses["net.shared.dataobj.ChallengeData"] = net_shared_dataobj_ChallengeData;
net_shared_dataobj_ChallengeData.__name__ = "net.shared.dataobj.ChallengeData";
net_shared_dataobj_ChallengeData.prototype = {
	id: null
	,serializedParams: null
	,ownerLogin: null
	,ownerELO: null
	,toString: function() {
		return "ChallengeData(ID=" + this.id + ", Owner=" + this.ownerLogin + ")";
	}
	,__class__: net_shared_dataobj_ChallengeData
};
var net_shared_dataobj_GameInfo = function() {
};
$hxClasses["net.shared.dataobj.GameInfo"] = net_shared_dataobj_GameInfo;
net_shared_dataobj_GameInfo.__name__ = "net.shared.dataobj.GameInfo";
net_shared_dataobj_GameInfo.create = function(id,log) {
	var info = new net_shared_dataobj_GameInfo();
	info.id = id;
	info.log = log;
	return info;
};
net_shared_dataobj_GameInfo.prototype = {
	id: null
	,log: null
	,toString: function() {
		return "GameInfo(ID=" + this.id + ")";
	}
	,__class__: net_shared_dataobj_GameInfo
};
var net_shared_dataobj_Greeting = $hxEnums["net.shared.dataobj.Greeting"] = { __ename__:"net.shared.dataobj.Greeting",__constructs__:null
	,Simple: {_hx_name:"Simple",_hx_index:0,__enum__:"net.shared.dataobj.Greeting",toString:$estr}
	,Login: ($_=function(login,password) { return {_hx_index:1,login:login,password:password,__enum__:"net.shared.dataobj.Greeting",toString:$estr}; },$_._hx_name="Login",$_.__params__ = ["login","password"],$_)
	,Reconnect: ($_=function(token) { return {_hx_index:2,token:token,__enum__:"net.shared.dataobj.Greeting",toString:$estr}; },$_._hx_name="Reconnect",$_.__params__ = ["token"],$_)
};
net_shared_dataobj_Greeting.__constructs__ = [net_shared_dataobj_Greeting.Simple,net_shared_dataobj_Greeting.Login,net_shared_dataobj_Greeting.Reconnect];
net_shared_dataobj_Greeting.__empty_constructs__ = [net_shared_dataobj_Greeting.Simple];
var net_shared_dataobj_GreetingResponseData = $hxEnums["net.shared.dataobj.GreetingResponseData"] = { __ename__:"net.shared.dataobj.GreetingResponseData",__constructs__:null
	,ConnectedAsGuest: ($_=function(sessionID,token,invalidCredentials,isShuttingDown) { return {_hx_index:0,sessionID:sessionID,token:token,invalidCredentials:invalidCredentials,isShuttingDown:isShuttingDown,__enum__:"net.shared.dataobj.GreetingResponseData",toString:$estr}; },$_._hx_name="ConnectedAsGuest",$_.__params__ = ["sessionID","token","invalidCredentials","isShuttingDown"],$_)
	,Logged: ($_=function(sessionID,token,incomingChallenges,ongoingFiniteGame,isShuttingDown) { return {_hx_index:1,sessionID:sessionID,token:token,incomingChallenges:incomingChallenges,ongoingFiniteGame:ongoingFiniteGame,isShuttingDown:isShuttingDown,__enum__:"net.shared.dataobj.GreetingResponseData",toString:$estr}; },$_._hx_name="Logged",$_.__params__ = ["sessionID","token","incomingChallenges","ongoingFiniteGame","isShuttingDown"],$_)
	,Reconnected: ($_=function(missedEvents) { return {_hx_index:2,missedEvents:missedEvents,__enum__:"net.shared.dataobj.GreetingResponseData",toString:$estr}; },$_._hx_name="Reconnected",$_.__params__ = ["missedEvents"],$_)
	,NotReconnected: {_hx_name:"NotReconnected",_hx_index:3,__enum__:"net.shared.dataobj.GreetingResponseData",toString:$estr}
	,OutdatedClient: {_hx_name:"OutdatedClient",_hx_index:4,__enum__:"net.shared.dataobj.GreetingResponseData",toString:$estr}
	,OutdatedServer: {_hx_name:"OutdatedServer",_hx_index:5,__enum__:"net.shared.dataobj.GreetingResponseData",toString:$estr}
};
net_shared_dataobj_GreetingResponseData.__constructs__ = [net_shared_dataobj_GreetingResponseData.ConnectedAsGuest,net_shared_dataobj_GreetingResponseData.Logged,net_shared_dataobj_GreetingResponseData.Reconnected,net_shared_dataobj_GreetingResponseData.NotReconnected,net_shared_dataobj_GreetingResponseData.OutdatedClient,net_shared_dataobj_GreetingResponseData.OutdatedServer];
net_shared_dataobj_GreetingResponseData.__empty_constructs__ = [net_shared_dataobj_GreetingResponseData.NotReconnected,net_shared_dataobj_GreetingResponseData.OutdatedClient,net_shared_dataobj_GreetingResponseData.OutdatedServer];
var net_shared_dataobj_MiniProfileData = function() {
};
$hxClasses["net.shared.dataobj.MiniProfileData"] = net_shared_dataobj_MiniProfileData;
net_shared_dataobj_MiniProfileData.__name__ = "net.shared.dataobj.MiniProfileData";
net_shared_dataobj_MiniProfileData.prototype = {
	gamesCntByTimeControl: null
	,elo: null
	,status: null
	,isFriend: null
	,toString: function() {
		return "MiniProfileData";
	}
	,__class__: net_shared_dataobj_MiniProfileData
};
var net_shared_dataobj_OngoingGameInfo = function() {
};
$hxClasses["net.shared.dataobj.OngoingGameInfo"] = net_shared_dataobj_OngoingGameInfo;
net_shared_dataobj_OngoingGameInfo.__name__ = "net.shared.dataobj.OngoingGameInfo";
net_shared_dataobj_OngoingGameInfo.create = function(id,timeData,currentLog) {
	var info = new net_shared_dataobj_OngoingGameInfo();
	info.id = id;
	info.timeData = timeData;
	info.currentLog = currentLog;
	return info;
};
net_shared_dataobj_OngoingGameInfo.prototype = {
	id: null
	,timeData: null
	,currentLog: null
	,toString: function() {
		return "OngoingGameInfo(ID=" + this.id + ", " + Std.string(this.timeData) + ")";
	}
	,__class__: net_shared_dataobj_OngoingGameInfo
};
var net_shared_dataobj_ProfileData = function() {
};
$hxClasses["net.shared.dataobj.ProfileData"] = net_shared_dataobj_ProfileData;
net_shared_dataobj_ProfileData.__name__ = "net.shared.dataobj.ProfileData";
net_shared_dataobj_ProfileData.prototype = {
	elo: null
	,status: null
	,roles: null
	,isFriend: null
	,friends: null
	,preloadedGames: null
	,preloadedStudies: null
	,gamesInProgress: null
	,totalPastGames: null
	,totalStudies: null
	,gamesCntByTimeControl: null
	,findMainELO: function() {
		var argmax = null;
		var max = -1;
		var map = this.gamesCntByTimeControl;
		var _g_map = map;
		var _g_keys = map.keys();
		while(_g_keys.hasNext()) {
			var key = _g_keys.next();
			var _g1_value = _g_map.get(key);
			var _g1_key = key;
			var tc = _g1_key;
			var gamesCnt = _g1_value;
			if(gamesCnt > max || gamesCnt == max && net_shared_TimeControlType_isSecondLongerThanFirst(argmax,tc)) {
				argmax = tc;
				max = gamesCnt;
			}
		}
		return this.elo.get(argmax);
	}
	,toString: function() {
		return "ProfileData";
	}
	,__class__: net_shared_dataobj_ProfileData
};
var net_shared_dataobj_RegisterResult = $hxEnums["net.shared.dataobj.RegisterResult"] = { __ename__:"net.shared.dataobj.RegisterResult",__constructs__:null
	,Success: {_hx_name:"Success",_hx_index:0,__enum__:"net.shared.dataobj.RegisterResult",toString:$estr}
	,Fail: {_hx_name:"Fail",_hx_index:1,__enum__:"net.shared.dataobj.RegisterResult",toString:$estr}
};
net_shared_dataobj_RegisterResult.__constructs__ = [net_shared_dataobj_RegisterResult.Success,net_shared_dataobj_RegisterResult.Fail];
net_shared_dataobj_RegisterResult.__empty_constructs__ = [net_shared_dataobj_RegisterResult.Success,net_shared_dataobj_RegisterResult.Fail];
var net_shared_dataobj_SendChallengeResult = $hxEnums["net.shared.dataobj.SendChallengeResult"] = { __ename__:"net.shared.dataobj.SendChallengeResult",__constructs__:null
	,Success: ($_=function(data) { return {_hx_index:0,data:data,__enum__:"net.shared.dataobj.SendChallengeResult",toString:$estr}; },$_._hx_name="Success",$_.__params__ = ["data"],$_)
	,ToOneself: {_hx_name:"ToOneself",_hx_index:1,__enum__:"net.shared.dataobj.SendChallengeResult",toString:$estr}
	,PlayerNotFound: {_hx_name:"PlayerNotFound",_hx_index:2,__enum__:"net.shared.dataobj.SendChallengeResult",toString:$estr}
	,AlreadyExists: {_hx_name:"AlreadyExists",_hx_index:3,__enum__:"net.shared.dataobj.SendChallengeResult",toString:$estr}
	,Duplicate: {_hx_name:"Duplicate",_hx_index:4,__enum__:"net.shared.dataobj.SendChallengeResult",toString:$estr}
	,RematchExpired: {_hx_name:"RematchExpired",_hx_index:5,__enum__:"net.shared.dataobj.SendChallengeResult",toString:$estr}
	,Impossible: {_hx_name:"Impossible",_hx_index:6,__enum__:"net.shared.dataobj.SendChallengeResult",toString:$estr}
	,Merged: {_hx_name:"Merged",_hx_index:7,__enum__:"net.shared.dataobj.SendChallengeResult",toString:$estr}
	,ServerShutdown: {_hx_name:"ServerShutdown",_hx_index:8,__enum__:"net.shared.dataobj.SendChallengeResult",toString:$estr}
};
net_shared_dataobj_SendChallengeResult.__constructs__ = [net_shared_dataobj_SendChallengeResult.Success,net_shared_dataobj_SendChallengeResult.ToOneself,net_shared_dataobj_SendChallengeResult.PlayerNotFound,net_shared_dataobj_SendChallengeResult.AlreadyExists,net_shared_dataobj_SendChallengeResult.Duplicate,net_shared_dataobj_SendChallengeResult.RematchExpired,net_shared_dataobj_SendChallengeResult.Impossible,net_shared_dataobj_SendChallengeResult.Merged,net_shared_dataobj_SendChallengeResult.ServerShutdown];
net_shared_dataobj_SendChallengeResult.__empty_constructs__ = [net_shared_dataobj_SendChallengeResult.ToOneself,net_shared_dataobj_SendChallengeResult.PlayerNotFound,net_shared_dataobj_SendChallengeResult.AlreadyExists,net_shared_dataobj_SendChallengeResult.Duplicate,net_shared_dataobj_SendChallengeResult.RematchExpired,net_shared_dataobj_SendChallengeResult.Impossible,net_shared_dataobj_SendChallengeResult.Merged,net_shared_dataobj_SendChallengeResult.ServerShutdown];
var net_shared_dataobj_SessionRestorationResult = $hxEnums["net.shared.dataobj.SessionRestorationResult"] = { __ename__:"net.shared.dataobj.SessionRestorationResult",__constructs__:null
	,Restored: ($_=function(missedEvents) { return {_hx_index:0,missedEvents:missedEvents,__enum__:"net.shared.dataobj.SessionRestorationResult",toString:$estr}; },$_._hx_name="Restored",$_.__params__ = ["missedEvents"],$_)
	,NotRestored: {_hx_name:"NotRestored",_hx_index:1,__enum__:"net.shared.dataobj.SessionRestorationResult",toString:$estr}
};
net_shared_dataobj_SessionRestorationResult.__constructs__ = [net_shared_dataobj_SessionRestorationResult.Restored,net_shared_dataobj_SessionRestorationResult.NotRestored];
net_shared_dataobj_SessionRestorationResult.__empty_constructs__ = [net_shared_dataobj_SessionRestorationResult.NotRestored];
var net_shared_dataobj_SignInResult = $hxEnums["net.shared.dataobj.SignInResult"] = { __ename__:"net.shared.dataobj.SignInResult",__constructs__:null
	,Success: ($_=function(incomingChallenges) { return {_hx_index:0,incomingChallenges:incomingChallenges,__enum__:"net.shared.dataobj.SignInResult",toString:$estr}; },$_._hx_name="Success",$_.__params__ = ["incomingChallenges"],$_)
	,ReconnectionNeeded: ($_=function(incomingChallenges,gameInfo) { return {_hx_index:1,incomingChallenges:incomingChallenges,gameInfo:gameInfo,__enum__:"net.shared.dataobj.SignInResult",toString:$estr}; },$_._hx_name="ReconnectionNeeded",$_.__params__ = ["incomingChallenges","gameInfo"],$_)
	,Fail: {_hx_name:"Fail",_hx_index:2,__enum__:"net.shared.dataobj.SignInResult",toString:$estr}
};
net_shared_dataobj_SignInResult.__constructs__ = [net_shared_dataobj_SignInResult.Success,net_shared_dataobj_SignInResult.ReconnectionNeeded,net_shared_dataobj_SignInResult.Fail];
net_shared_dataobj_SignInResult.__empty_constructs__ = [net_shared_dataobj_SignInResult.Fail];
var net_shared_dataobj_StudyInfo = function() {
};
$hxClasses["net.shared.dataobj.StudyInfo"] = net_shared_dataobj_StudyInfo;
net_shared_dataobj_StudyInfo.__name__ = "net.shared.dataobj.StudyInfo";
net_shared_dataobj_StudyInfo.prototype = {
	name: null
	,description: null
	,tags: null
	,publicity: null
	,keyPositionSIP: null
	,variantStr: null
	,toString: function() {
		return "StudyInfo(Name=" + this.name + ")";
	}
	,__class__: net_shared_dataobj_StudyInfo
};
var net_shared_dataobj_StudyPublicity = $hxEnums["net.shared.dataobj.StudyPublicity"] = { __ename__:"net.shared.dataobj.StudyPublicity",__constructs__:null
	,Public: {_hx_name:"Public",_hx_index:0,__enum__:"net.shared.dataobj.StudyPublicity",toString:$estr}
	,DirectOnly: {_hx_name:"DirectOnly",_hx_index:1,__enum__:"net.shared.dataobj.StudyPublicity",toString:$estr}
	,Private: {_hx_name:"Private",_hx_index:2,__enum__:"net.shared.dataobj.StudyPublicity",toString:$estr}
};
net_shared_dataobj_StudyPublicity.__constructs__ = [net_shared_dataobj_StudyPublicity.Public,net_shared_dataobj_StudyPublicity.DirectOnly,net_shared_dataobj_StudyPublicity.Private];
net_shared_dataobj_StudyPublicity.__empty_constructs__ = [net_shared_dataobj_StudyPublicity.Public,net_shared_dataobj_StudyPublicity.DirectOnly,net_shared_dataobj_StudyPublicity.Private];
var net_shared_dataobj_TimeReservesData = function(whiteSeconds,blackSeconds,timestamp) {
	this.whiteSeconds = whiteSeconds;
	this.blackSeconds = blackSeconds;
	this.timestamp = timestamp;
};
$hxClasses["net.shared.dataobj.TimeReservesData"] = net_shared_dataobj_TimeReservesData;
net_shared_dataobj_TimeReservesData.__name__ = "net.shared.dataobj.TimeReservesData";
net_shared_dataobj_TimeReservesData.prototype = {
	whiteSeconds: null
	,blackSeconds: null
	,timestamp: null
	,secsLeftMap: function() {
		var _g = new haxe_ds_EnumValueMap();
		_g.set(net_shared_PieceColor.White,this.whiteSeconds);
		_g.set(net_shared_PieceColor.Black,this.blackSeconds);
		return _g;
	}
	,toString: function() {
		return "TimeReservesData(whiteSeconds=" + this.whiteSeconds + ", blackSeconds=" + this.blackSeconds + ", timestamp=" + this.timestamp + ")";
	}
	,__class__: net_shared_dataobj_TimeReservesData
};
var net_shared_dataobj_UserRole = $hxEnums["net.shared.dataobj.UserRole"] = { __ename__:"net.shared.dataobj.UserRole",__constructs__:null
	,Admin: {_hx_name:"Admin",_hx_index:0,__enum__:"net.shared.dataobj.UserRole",toString:$estr}
	,AnacondaDeveloper: {_hx_name:"AnacondaDeveloper",_hx_index:1,__enum__:"net.shared.dataobj.UserRole",toString:$estr}
};
net_shared_dataobj_UserRole.__constructs__ = [net_shared_dataobj_UserRole.Admin,net_shared_dataobj_UserRole.AnacondaDeveloper];
net_shared_dataobj_UserRole.__empty_constructs__ = [net_shared_dataobj_UserRole.Admin,net_shared_dataobj_UserRole.AnacondaDeveloper];
var net_shared_dataobj_UserStatus = $hxEnums["net.shared.dataobj.UserStatus"] = { __ename__:"net.shared.dataobj.UserStatus",__constructs__:null
	,Offline: ($_=function(secondsSinceLastAction) { return {_hx_index:0,secondsSinceLastAction:secondsSinceLastAction,__enum__:"net.shared.dataobj.UserStatus",toString:$estr}; },$_._hx_name="Offline",$_.__params__ = ["secondsSinceLastAction"],$_)
	,Online: {_hx_name:"Online",_hx_index:1,__enum__:"net.shared.dataobj.UserStatus",toString:$estr}
	,InGame: {_hx_name:"InGame",_hx_index:2,__enum__:"net.shared.dataobj.UserStatus",toString:$estr}
};
net_shared_dataobj_UserStatus.__constructs__ = [net_shared_dataobj_UserStatus.Offline,net_shared_dataobj_UserStatus.Online,net_shared_dataobj_UserStatus.InGame];
net_shared_dataobj_UserStatus.__empty_constructs__ = [net_shared_dataobj_UserStatus.Online,net_shared_dataobj_UserStatus.InGame];
var net_shared_dataobj_ViewedScreen = $hxEnums["net.shared.dataobj.ViewedScreen"] = { __ename__:"net.shared.dataobj.ViewedScreen",__constructs__:null
	,MainMenu: {_hx_name:"MainMenu",_hx_index:0,__enum__:"net.shared.dataobj.ViewedScreen",toString:$estr}
	,Game: ($_=function(id) { return {_hx_index:1,id:id,__enum__:"net.shared.dataobj.ViewedScreen",toString:$estr}; },$_._hx_name="Game",$_.__params__ = ["id"],$_)
	,Analysis: {_hx_name:"Analysis",_hx_index:2,__enum__:"net.shared.dataobj.ViewedScreen",toString:$estr}
	,Profile: ($_=function(ownerLogin) { return {_hx_index:3,ownerLogin:ownerLogin,__enum__:"net.shared.dataobj.ViewedScreen",toString:$estr}; },$_._hx_name="Profile",$_.__params__ = ["ownerLogin"],$_)
	,Other: {_hx_name:"Other",_hx_index:4,__enum__:"net.shared.dataobj.ViewedScreen",toString:$estr}
};
net_shared_dataobj_ViewedScreen.__constructs__ = [net_shared_dataobj_ViewedScreen.MainMenu,net_shared_dataobj_ViewedScreen.Game,net_shared_dataobj_ViewedScreen.Analysis,net_shared_dataobj_ViewedScreen.Profile,net_shared_dataobj_ViewedScreen.Other];
net_shared_dataobj_ViewedScreen.__empty_constructs__ = [net_shared_dataobj_ViewedScreen.MainMenu,net_shared_dataobj_ViewedScreen.Analysis,net_shared_dataobj_ViewedScreen.Other];
var net_shared_utils_Build = function() { };
$hxClasses["net.shared.utils.Build"] = net_shared_utils_Build;
net_shared_utils_Build.__name__ = "net.shared.utils.Build";
var net_shared_utils_MathUtils = function() { };
$hxClasses["net.shared.utils.MathUtils"] = net_shared_utils_MathUtils;
net_shared_utils_MathUtils.__name__ = "net.shared.utils.MathUtils";
net_shared_utils_MathUtils.maxInt = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
net_shared_utils_MathUtils.minInt = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
net_shared_utils_MathUtils.randomInt = function(from,to) {
	return from + Math.floor(Math.random() * (to - from + 1));
};
net_shared_utils_MathUtils.bernoulli = function(p) {
	return Math.random() < p;
};
net_shared_utils_MathUtils.roundTo = function(num,order) {
	return num - Math.pow(10,order);
};
net_shared_utils_MathUtils.scaleLike = function(defaultValue,defaultMeasure,scaledMeasure) {
	return defaultValue * scaledMeasure / defaultMeasure;
};
net_shared_utils_MathUtils.intScaleLike = function(defaultValue,defaultMeasure,scaledMeasure) {
	return Math.round(defaultValue * scaledMeasure / defaultMeasure);
};
net_shared_utils_MathUtils.avg = function(a,b) {
	return (a + b) / 2;
};
net_shared_utils_MathUtils.clamp = function(v,min,max) {
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
net_shared_utils_MathUtils.clampI = function(v,min,max) {
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
net_shared_utils_MathUtils.randomElement = function(a) {
	return a[net_shared_utils_MathUtils.randomInt(0,a.length - 1)];
};
net_shared_utils_MathUtils.arrmax = function(arr) {
	var max = arr[0];
	var _g = 1;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		if(arr[i] > max) {
			max = arr[i];
		}
	}
	return max;
};
net_shared_utils_MathUtils.arrmin = function(arr) {
	var min = arr[0];
	var _g = 1;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		if(arr[i] < min) {
			min = arr[i];
		}
	}
	return min;
};
var openings_Branch = function(name,move,packedSuccessors) {
	this.name = name;
	this.move = move;
	var unpackedSuccessors = [];
	var _g = 0;
	while(_g < packedSuccessors.length) {
		var bunch = packedSuccessors[_g];
		++_g;
		var _g1 = 0;
		while(_g1 < bunch.length) {
			var successor = bunch[_g1];
			++_g1;
			unpackedSuccessors.push(successor);
		}
	}
	var _g = new haxe_ds_StringMap();
	var _g1 = 0;
	while(_g1 < unpackedSuccessors.length) {
		var b = unpackedSuccessors[_g1];
		++_g1;
		_g.h[b.move] = b;
	}
	this.successors = _g;
	this.terminal = Lambda.empty(this.successors);
};
$hxClasses["openings.Branch"] = openings_Branch;
openings_Branch.__name__ = "openings.Branch";
openings_Branch.prototype = {
	name: null
	,move: null
	,successors: null
	,terminal: null
	,get: function(move) {
		var exactMove = this.successors.h[move];
		var otherMove = this.successors.h[""];
		if(exactMove != null) {
			return exactMove;
		} else if(otherMove != null) {
			return otherMove;
		} else {
			return new openings_Branch(this.name,"",[]);
		}
	}
	,__class__: openings_Branch
};
var openings_OpeningTree = function() {
	this.currentNode = openings_OpeningTree.root;
	this.prevNodes = [];
};
$hxClasses["openings.OpeningTree"] = openings_OpeningTree;
openings_OpeningTree.__name__ = "openings.OpeningTree";
openings_OpeningTree.getOpening = function(moves) {
	var tree = new openings_OpeningTree();
	var _g = 0;
	while(_g < moves.length) {
		var ply = moves[_g];
		++_g;
		if(tree.currentNode.terminal) {
			break;
		}
		tree.makeMove(ply.from.i,ply.from.j,ply.to.i,ply.to.j,ply.morphInto);
	}
	return tree.currentNode.name;
};
openings_OpeningTree.init = function() {
	openings_OpeningTree.root = new openings_Branch(dict_Dictionary.getPhrase(dict_Phrase.OPENING_STARTING_POSITION),"",[[new openings_Branch("C00. Central Advancement","4544",[[new openings_Branch("C00. Central Advancement","",[[new openings_Branch("C06. Bongcloud Opening","4645",[])]])]])],[new openings_Branch("C01. Open Game","4534",[])],[new openings_Branch("C02. Flank Game","2534",[])],[new openings_Branch("C03. Deflected Progressor Opening","2514",[])],[new openings_Branch("C04. Canal Opening","0514",[[new openings_Branch("C05. Canal Opening, Twist Counterattack","6071",[[new openings_Branch("C05. Canal Opening, Twist Counterattack, Tense Defense","6654",[])],[new openings_Branch("C05. Canal Opening, Twist Counterattack, Boulder Defense","7554",[])],openings_OpeningTree.pack("C05. Canal Opening, Twist Counterattack Evaded",["4635","4655","3546","5546"],[])])],[new openings_Branch("C06. Canal Opening, Overload Counterattack","2011",[[new openings_Branch("C06. Canal Opening, Overload Counterattack, Tense Defense","2634",[])],[new openings_Branch("C06. Canal Opening, Overload Counterattack, Boulder Defense","1534",[])],openings_OpeningTree.pack("C06. Canal Opening, Overload Counterattack Evaded",["4635","4655","3546","5546"],[])])],[new openings_Branch("C07. Canal Opening, Central Counterattack","6051",[])],[new openings_Branch("C08. Canal Opening, Exchange Invitation","0111",[[new openings_Branch("C08. Canal Opening, Exchange Invitation Accepted","0600",[[new openings_Branch("C08. Canal Opening, Exchange Variation","2000",[[new openings_Branch("C09. Venetian Game","8574",[[new openings_Branch("C09. Venetian Game, Exchange Invitation","8171",[[new openings_Branch("C09. Venetian Game, Exchange Invitation Accepted","8680",[[new openings_Branch("C10. Dominatorless Game","6080",[])]])],[new openings_Branch("C09. Venetian Game, Exchange Declined","",[])]])]])]])]])],[new openings_Branch("C08. Canal Opening, Exchange Declined","",[])]])]])],[new openings_Branch("C11. Ware Opening","0504",[])],[new openings_Branch("A00. Aggressor Sac","2660",[[new openings_Branch("A01. Morph Variant","5060Aggressor",[[new openings_Branch("A01. Double Aggressor Sac","6620",[[new openings_Branch("A03. Aggressor-Defensor Confrontation","3020Aggressor",[])],[new openings_Branch("A04. Double Aggressor Sac, Asymmetrical Variation","3020",[])],openings_OpeningTree.pack("A01. Double Aggressor Sac, Coward Variation",["4030","4050","3040","5040"],[]),[new openings_Branch("A01. Deferred Fool's Mate","",[])]])]])],[new openings_Branch("A02. Capture Variant","5060",[[new openings_Branch("A02. Double Aggressor Sac","6620",[[new openings_Branch("A04. Double Aggressor Sac, Asymmetrical Variation","3020Aggressor",[])],[new openings_Branch("A05. Double Aggressor Sac, Deflected Defensors Variation","3020",[])],openings_OpeningTree.pack("A02. Double Aggressor Sac, Coward Variation",["4030","4050","3040","5040"],[]),[new openings_Branch("A02. Deferred Fool's Mate","",[])]])]])],openings_OpeningTree.pack("A00. Intellector Escape",["4030","4050","3040","5040"],[]),[new openings_Branch("A00. Fool's Mate","",[])]])],[new openings_Branch("A06. Flank Attack","2614",[[new openings_Branch("A07. Flank Attack, Tense Defense","2031",[])],[new openings_Branch("A08. Flank Attack, Boulder Defense","1031",[])],[new openings_Branch("A09. Flank Attack, Flank Wall","4131",[])],[new openings_Branch("A10. Flank Attack, Central Wall","2131",[])],openings_OpeningTree.pack("A11. Flank Attack Evaded",["4030","4050","3040","5040"],[]),[new openings_Branch("A06. Flank Attack, Scholar's Mate","",[])]])],[new openings_Branch("A12. Central Attack","2634",[[new openings_Branch("A13. Central Attack, Linear Defense","2011",[])],[new openings_Branch("A14. Central Attack, Step Defense","1011",[])],[new openings_Branch("A15. Central Attack, Canal Defense","0111",[])],[new openings_Branch("A16. Central Attack, Wing Defense","2111",[])],[new openings_Branch("A17. Central Attack, Exchange Variation","6034",[])],[new openings_Branch("A18. Central Attack, Dominator Blunder","",[])]])],[new openings_Branch("B00. Jump Opening","1513",[[new openings_Branch("B00. Pillar Opening","1012",[])]])],[new openings_Branch("B01. Cannon Opening","1514",[])],[new openings_Branch("B02. Reti Opening","1534",[[new openings_Branch("B02. Reti Opening","",[[new openings_Branch("B03. Mexican Opening","7554",[])],[new openings_Branch("B04. Generalist Opening","6654",[])]])]])],[new openings_Branch("D00. Wayward Defensor Opening","3534",[])],openings_OpeningTree.pack("D01. Accelerated Bongcloud",["4635","3546"],[])]);
};
openings_OpeningTree.pack = function(name,moves,packedSuccessors) {
	var bunch = [];
	var _g = 0;
	while(_g < moves.length) {
		var move = moves[_g];
		++_g;
		bunch.push(new openings_Branch(name,move,packedSuccessors));
	}
	return bunch;
};
openings_OpeningTree.mirror = function(move) {
	var fromI = move.charAt(0);
	var fromJ = move.charAt(1);
	var toI = move.charAt(2);
	var toJ = move.charAt(3);
	var rest = HxOverrides.substr(move,4,null);
	return "" + (8 - Std.parseInt(fromI)) + fromJ + (8 - Std.parseInt(toI)) + toJ + rest;
};
openings_OpeningTree.prototype = {
	currentNode: null
	,isMirrored: null
	,prevNodes: null
	,makeMove: function(fromI,fromJ,toI,toJ,morphInto) {
		if(this.isMirrored == null) {
			if(fromI == 4) {
				if(toI == 4) {
					this.isMirrored = null;
				} else {
					this.isMirrored = toI > 5;
				}
			} else {
				this.isMirrored = fromI > 5;
			}
		}
		if(this.isMirrored == true) {
			fromI = 8 - fromI;
			toI = 8 - toI;
		}
		var collapsedMove = "" + fromI + fromJ + toI + toJ + (morphInto == null ? "" : $hxEnums[morphInto.__enum__].__constructs__[morphInto._hx_index]._hx_name);
		this.prevNodes.push(this.currentNode);
		this.currentNode = this.currentNode.get(collapsedMove);
	}
	,revertMoves: function(cnt) {
		this.currentNode = this.prevNodes.splice(this.prevNodes.length - cnt,cnt)[0];
	}
	,__class__: openings_OpeningTree
};
var serialization_ChatEntry = $hxEnums["serialization.ChatEntry"] = { __ename__:"serialization.ChatEntry",__constructs__:null
	,PlayerMessage: ($_=function(author,text) { return {_hx_index:0,author:author,text:text,__enum__:"serialization.ChatEntry",toString:$estr}; },$_._hx_name="PlayerMessage",$_.__params__ = ["author","text"],$_)
	,Log: ($_=function(text) { return {_hx_index:1,text:text,__enum__:"serialization.ChatEntry",toString:$estr}; },$_._hx_name="Log",$_.__params__ = ["text"],$_)
};
serialization_ChatEntry.__constructs__ = [serialization_ChatEntry.PlayerMessage,serialization_ChatEntry.Log];
serialization_ChatEntry.__empty_constructs__ = [];
var serialization_GameLogParserOutput = function() {
	var _g = new haxe_ds_EnumValueMap();
	_g.set(net_shared_PieceColor.White,[]);
	_g.set(net_shared_PieceColor.Black,[]);
	this.msLeftOnMove = _g;
	this.startingSituation = net_shared_board_Situation.defaultStarting();
	this.chatEntries = [];
	this.movesPlayed = [];
	this.timeControl = utils_TimeControl.correspondence();
};
$hxClasses["serialization.GameLogParserOutput"] = serialization_GameLogParserOutput;
serialization_GameLogParserOutput.__name__ = "serialization.GameLogParserOutput";
serialization_GameLogParserOutput.prototype = {
	timeControl: null
	,whiteRef: null
	,blackRef: null
	,elo: null
	,outcome: null
	,msLeftWhenEnded: null
	,movesPlayed: null
	,chatEntries: null
	,datetime: null
	,startingSituation: null
	,msLeftOnMove: null
	,msPerMoveDataAvailable: null
	,currentSituation: null
	,moveCount: null
	,computeDerived: function() {
		this.moveCount = 0;
		this.currentSituation = this.startingSituation.copy();
		var _g = 0;
		var _g1 = this.movesPlayed;
		while(_g < _g1.length) {
			var ply = _g1[_g];
			++_g;
			this.moveCount++;
			this.currentSituation.performRawPly(ply);
		}
		this.msPerMoveDataAvailable = Lambda.exists(this.msLeftOnMove.get(net_shared_PieceColor.White),function(x) {
			return x != null;
		}) || Lambda.exists(this.msLeftOnMove.get(net_shared_PieceColor.Black),function(x) {
			return x != null;
		});
	}
	,getSecsLeftAfterMove: function(side,plyNum) {
		if(!this.msPerMoveDataAvailable) {
			return null;
		}
		if(plyNum == this.moveCount && this.msLeftWhenEnded != null) {
			return this.msLeftWhenEnded.get(side) / 1000;
		}
		var index = plyNum - 1;
		while(index >= 0) {
			var msLeft = this.msLeftOnMove.get(side)[index];
			if(msLeft != null) {
				return msLeft / 1000;
			} else {
				--index;
			}
		}
		return this.timeControl.startSecs;
	}
	,gameEnded: function() {
		return this.outcome != null;
	}
	,isRated: function() {
		return this.elo != null;
	}
	,getParticipantColor: function(participantRef) {
		if(this.whiteRef.toLowerCase() == participantRef.toLowerCase()) {
			return net_shared_PieceColor.White;
		} else if(this.blackRef.toLowerCase() == participantRef.toLowerCase()) {
			return net_shared_PieceColor.Black;
		} else {
			return null;
		}
	}
	,getPlayerColor: function() {
		if(LoginManager.isPlayer(this.whiteRef)) {
			return net_shared_PieceColor.White;
		} else if(LoginManager.isPlayer(this.blackRef)) {
			return net_shared_PieceColor.Black;
		} else {
			return null;
		}
	}
	,isPlayerParticipant: function() {
		return this.getPlayerColor() != null;
	}
	,getPlayerOpponentRef: function() {
		if(LoginManager.isPlayer(this.whiteRef)) {
			return this.blackRef;
		} else if(LoginManager.isPlayer(this.blackRef)) {
			return this.whiteRef;
		} else {
			return null;
		}
	}
	,__class__: serialization_GameLogParserOutput
};
var serialization_GameLogParser = function() { };
$hxClasses["serialization.GameLogParser"] = serialization_GameLogParser;
serialization_GameLogParser.__name__ = "serialization.GameLogParser";
serialization_GameLogParser.parse = function(log) {
	var parserOutput = new serialization_GameLogParserOutput();
	var _g = 0;
	var _g1 = log.split(";");
	while(_g < _g1.length) {
		var entry = _g1[_g];
		++_g;
		var trimmedEntry = StringTools.trim(entry);
		if(trimmedEntry.charAt(0) == "#") {
			serialization_GameLogParser.processSpecialEntry(trimmedEntry.charAt(1),HxOverrides.substr(trimmedEntry,3,null),parserOutput);
		} else if(trimmedEntry.length >= 4) {
			serialization_GameLogParser.processNormalEntry(trimmedEntry,parserOutput);
		}
	}
	parserOutput.computeDerived();
	return parserOutput;
};
serialization_GameLogParser.processNormalEntry = function(trimmedEntry,parserOutput) {
	var splitted = trimmedEntry.split("/");
	var ply = net_shared_converters_PlySerializer.deserialize(splitted[0]);
	parserOutput.movesPlayed.push(ply);
	parserOutput.msLeftOnMove.get(net_shared_PieceColor.White).push(Std.parseInt(splitted[1]));
	parserOutput.msLeftOnMove.get(net_shared_PieceColor.Black).push(Std.parseInt(splitted[2]));
};
serialization_GameLogParser.processSpecialEntry = function(typeCode,body,parserOutput) {
	var args = body.split("/");
	switch(typeCode) {
	case "C":
		parserOutput.chatEntries.push(serialization_ChatEntry.PlayerMessage(serialization_GameLogParser.decodeColor(args[0]),args[1]));
		break;
	case "D":
		parserOutput.datetime = new Date(parseFloat(args[0]) * 1000);
		break;
	case "E":
		var eventCode = args[0];
		var color = serialization_GameLogParser.decodeColor(args[1]);
		var logMessage = null;
		switch(eventCode) {
		case "dac":
			logMessage = dict_Phrase.DRAW_ACCEPTED_MESSAGE(color);
			break;
		case "dca":
			logMessage = dict_Phrase.DRAW_CANCELLED_MESSAGE(color);
			break;
		case "dcn":
			logMessage = dict_Phrase.PLAYER_DISCONNECTED_MESSAGE(color);
			break;
		case "dde":
			logMessage = dict_Phrase.DRAW_DECLINED_MESSAGE(color);
			break;
		case "dof":
			logMessage = dict_Phrase.DRAW_OFFERED_MESSAGE(color);
			break;
		case "rcn":
			logMessage = dict_Phrase.PLAYER_RECONNECTED_MESSAGE(color);
			break;
		case "tac":
			logMessage = dict_Phrase.TAKEBACK_ACCEPTED_MESSAGE(color);
			break;
		case "tad":
			logMessage = dict_Phrase.TIME_ADDED_MESSAGE(color);
			break;
		case "tca":
			logMessage = dict_Phrase.TAKEBACK_CANCELLED_MESSAGE(color);
			break;
		case "tde":
			logMessage = dict_Phrase.TAKEBACK_DECLINED_MESSAGE(color);
			break;
		case "tof":
			logMessage = dict_Phrase.TAKEBACK_OFFERED_MESSAGE(color);
			break;
		default:
		}
		if(logMessage != null) {
			parserOutput.chatEntries.push(serialization_ChatEntry.Log(dict_Dictionary.getPhrase(logMessage)));
		}
		break;
	case "L":
		var _g = new haxe_ds_EnumValueMap();
		_g.set(net_shared_PieceColor.White,Std.parseInt(args[0]));
		_g.set(net_shared_PieceColor.Black,Std.parseInt(args[1]));
		parserOutput.msLeftWhenEnded = _g;
		break;
	case "P":
		parserOutput.whiteRef = args[0];
		parserOutput.blackRef = args[1];
		break;
	case "R":
		parserOutput.outcome = serialization_GameLogParser.decodeOutcome(args[0],args[1]);
		break;
	case "S":
		parserOutput.startingSituation = net_shared_board_Situation.deserialize(args[0]);
		break;
	case "T":
		parserOutput.timeControl = new utils_TimeControl(Std.parseInt(args[0]),Std.parseInt(args[1]));
		break;
	case "e":
		var _g = new haxe_ds_EnumValueMap();
		_g.set(net_shared_PieceColor.White,net_shared_EloValue_deserialize(args[0]));
		_g.set(net_shared_PieceColor.Black,net_shared_EloValue_deserialize(args[1]));
		parserOutput.elo = _g;
		break;
	}
};
serialization_GameLogParser.decodeOutcome = function(winnerColorCode,reasonCode) {
	var winnerColor = serialization_GameLogParser.decodeColor(winnerColorCode);
	switch(reasonCode) {
	case "100":
		return net_shared_Outcome.Drawish(net_shared_DrawishOutcomeType.NoProgress);
	case "aba":
		return net_shared_Outcome.Decisive(net_shared_DecisiveOutcomeType.Abandon,winnerColor);
	case "abo":
		return net_shared_Outcome.Drawish(net_shared_DrawishOutcomeType.Abort);
	case "agr":
		return net_shared_Outcome.Drawish(net_shared_DrawishOutcomeType.DrawAgreement);
	case "bre":
		return net_shared_Outcome.Decisive(net_shared_DecisiveOutcomeType.Breakthrough,winnerColor);
	case "mat":
		return net_shared_Outcome.Decisive(net_shared_DecisiveOutcomeType.Mate,winnerColor);
	case "rep":
		return net_shared_Outcome.Drawish(net_shared_DrawishOutcomeType.Repetition);
	case "res":
		return net_shared_Outcome.Decisive(net_shared_DecisiveOutcomeType.Resign,winnerColor);
	case "tim":
		return net_shared_Outcome.Decisive(net_shared_DecisiveOutcomeType.Timeout,winnerColor);
	case "unk":
		if(winnerColor != null) {
			return net_shared_Outcome.Decisive(net_shared_DecisiveOutcomeType.Abandon,winnerColor);
		} else {
			return net_shared_Outcome.Drawish(net_shared_DrawishOutcomeType.Abort);
		}
		break;
	default:
		return null;
	}
};
serialization_GameLogParser.decodeColor = function(letter) {
	switch(letter) {
	case "b":
		return net_shared_PieceColor.Black;
	case "w":
		return net_shared_PieceColor.White;
	default:
		return null;
	}
};
var serialization_PortableIntellectorNotation = function() { };
$hxClasses["serialization.PortableIntellectorNotation"] = serialization_PortableIntellectorNotation;
serialization_PortableIntellectorNotation.__name__ = "serialization.PortableIntellectorNotation";
serialization_PortableIntellectorNotation.serialize = function(startingSituation,movesPlayed,whiteRef,blackRef,timeControl,datetime,outcome) {
	if(blackRef == null) {
		blackRef = "Anonymous";
	}
	if(whiteRef == null) {
		whiteRef = "Anonymous";
	}
	var pin = "";
	var whitePlayer = dict_Utils.playerRef(whiteRef);
	var blackPlayer = dict_Utils.playerRef(blackRef);
	pin += "#Players: " + whitePlayer + " vs " + blackPlayer + ";\n";
	if(timeControl != null) {
		pin += "#TimeControl: " + timeControl.toString() + ";\n";
	}
	if(datetime != null) {
		pin += "#DateTime: " + HxOverrides.dateStr(datetime) + ";\n";
	}
	var startingSIP = startingSituation.serialize();
	if(startingSIP != net_shared_board_Situation.defaultStarting().serialize()) {
		pin += "#CustomStartPosSIP: " + startingSIP + ";\n";
	}
	var moveNum = 1;
	var situation = startingSituation;
	var _g = 0;
	while(_g < movesPlayed.length) {
		var ply = movesPlayed[_g];
		++_g;
		var plyStr = ply.toNotation(situation,false);
		pin += "" + moveNum + ". " + plyStr + ";\n";
		situation.performRawPly(ply);
		++moveNum;
	}
	if(outcome == null) {
		pin += "...To be continued";
	} else {
		switch(outcome._hx_index) {
		case 0:
			var _g = outcome.winnerColor;
			switch(outcome.type._hx_index) {
			case 0:
				var winnerColor = _g;
				if(winnerColor == net_shared_PieceColor.White) {
					pin += "Fatum. White won";
				} else {
					pin += "Fatum. Black won";
				}
				break;
			case 1:
				var winnerColor = _g;
				if(winnerColor == net_shared_PieceColor.White) {
					pin += "Breakthrough. White won";
				} else {
					pin += "Breakthrough. Black won";
				}
				break;
			case 2:
				var winnerColor = _g;
				if(winnerColor == net_shared_PieceColor.White) {
					pin += "Black lost on time";
				} else {
					pin += "White lost on time";
				}
				break;
			case 3:
				var winnerColor = _g;
				if(winnerColor == net_shared_PieceColor.White) {
					pin += "Black resigned";
				} else {
					pin += "White resigned";
				}
				break;
			case 4:
				var winnerColor = _g;
				if(winnerColor == net_shared_PieceColor.White) {
					pin += "Black left the game";
				} else {
					pin += "White left the game";
				}
				break;
			}
			break;
		case 1:
			switch(outcome.type._hx_index) {
			case 0:
				pin += "Draw by agreement";
				break;
			case 1:
				pin += "Draw by repetition";
				break;
			case 2:
				pin += "Draw by quiescence";
				break;
			case 3:
				pin += "Game aborted";
				break;
			}
			break;
		}
	}
	return pin;
};
var struct_ChallengeType = $hxEnums["struct.ChallengeType"] = { __ename__:"struct.ChallengeType",__constructs__:null
	,Public: {_hx_name:"Public",_hx_index:0,__enum__:"struct.ChallengeType",toString:$estr}
	,ByLink: {_hx_name:"ByLink",_hx_index:1,__enum__:"struct.ChallengeType",toString:$estr}
	,Direct: ($_=function(calleeRef) { return {_hx_index:2,calleeRef:calleeRef,__enum__:"struct.ChallengeType",toString:$estr}; },$_._hx_name="Direct",$_.__params__ = ["calleeRef"],$_)
};
struct_ChallengeType.__constructs__ = [struct_ChallengeType.Public,struct_ChallengeType.ByLink,struct_ChallengeType.Direct];
struct_ChallengeType.__empty_constructs__ = [struct_ChallengeType.Public,struct_ChallengeType.ByLink];
var struct_ChallengeParams = function(timeControl,type,acceptorColor,customStartingSituation,rated) {
	if(rated == null) {
		rated = false;
	}
	this.timeControl = timeControl;
	this.type = type;
	this.acceptorColor = acceptorColor;
	this.set_customStartingSituation(customStartingSituation);
	this.set_rated(rated);
};
$hxClasses["struct.ChallengeParams"] = struct_ChallengeParams;
struct_ChallengeParams.__name__ = "struct.ChallengeParams";
struct_ChallengeParams.loadFromCookies = function() {
	if(js_Cookie.exists("lastChallengeParams")) {
		return struct_ChallengeParams.deserialize(js_Cookie.get("lastChallengeParams"));
	} else {
		return struct_ChallengeParams.defaultParams();
	}
};
struct_ChallengeParams.directChallengeParams = function(calleeRef) {
	var params = struct_ChallengeParams.loadFromCookies();
	params.type = struct_ChallengeType.Direct(calleeRef);
	return params;
};
struct_ChallengeParams.rematchParams = function(opponentLogin,playerColor,timeControl,rated,startingSituation) {
	return new struct_ChallengeParams(timeControl,struct_ChallengeType.Direct(opponentLogin),playerColor,startingSituation,rated);
};
struct_ChallengeParams.playFromPosParams = function(situiation) {
	var params = struct_ChallengeParams.defaultParams();
	params.set_customStartingSituation(situiation);
	return params;
};
struct_ChallengeParams.defaultParams = function() {
	return new struct_ChallengeParams(new utils_TimeControl(600,0),struct_ChallengeType.Public);
};
struct_ChallengeParams.deserialize = function(s) {
	var splitted = s.split(";");
	var timeControl = new utils_TimeControl(Std.parseInt(splitted[0]),Std.parseInt(splitted[1]));
	var type = splitted[2] == "p" ? struct_ChallengeType.Public : splitted[2] == "l" ? struct_ChallengeType.ByLink : struct_ChallengeType.Direct(splitted[2]);
	var acceptorColor = splitted[3] == "w" ? net_shared_PieceColor.White : splitted[3] == "b" ? net_shared_PieceColor.Black : null;
	var customStartingSituation = splitted[4] == "" ? null : net_shared_board_Situation.deserialize(splitted[4]);
	var rated = splitted[5] == "t";
	return new struct_ChallengeParams(timeControl,type,acceptorColor,customStartingSituation,rated);
};
struct_ChallengeParams.prototype = {
	type: null
	,timeControl: null
	,acceptorColor: null
	,customStartingSituation: null
	,rated: null
	,set_customStartingSituation: function(value) {
		if(this.customStartingSituation != null) {
			this.set_rated(false);
		}
		return this.customStartingSituation = value;
	}
	,set_rated: function(value) {
		if(value == true) {
			this.set_customStartingSituation(null);
		}
		return this.rated = value;
	}
	,saveToCookies: function() {
		js_Cookie.set("lastChallengeParams",this.serialize(),7776000);
	}
	,serialize: function() {
		var typeStr;
		var _g = this.type;
		switch(_g._hx_index) {
		case 0:
			typeStr = "p";
			break;
		case 1:
			typeStr = "l";
			break;
		case 2:
			var calleeRef = _g.calleeRef;
			typeStr = calleeRef;
			break;
		}
		var colorStr;
		var _g = this.acceptorColor;
		if(_g == null) {
			colorStr = "";
		} else {
			switch(_g._hx_index) {
			case 0:
				colorStr = "w";
				break;
			case 1:
				colorStr = "b";
				break;
			}
		}
		var sitStr = this.customStartingSituation == null ? "" : this.customStartingSituation.serialize();
		var ratedStr = this.rated ? "t" : "";
		return this.timeControl.startSecs + ";" + this.timeControl.bonusSecs + ";" + typeStr + ";" + colorStr + ";" + sitStr + ";" + ratedStr;
	}
	,__class__: struct_ChallengeParams
	,__properties__: {set_rated:"set_rated",set_customStartingSituation:"set_customStartingSituation"}
};
var struct_VariantPath = {};
struct_VariantPath.__properties__ = {get_length:"get_length"};
struct_VariantPath.get_length = function(this1) {
	return this1.length;
};
struct_VariantPath.asArray = function(this1) {
	return this1;
};
struct_VariantPath.isRoot = function(this1) {
	return Lambda.empty(this1);
};
struct_VariantPath.isMainLine = function(this1) {
	var _g = 0;
	while(_g < this1.length) {
		var childNum = this1[_g];
		++_g;
		if(childNum != 0) {
			return false;
		}
	}
	return true;
};
struct_VariantPath.subpath = function(this1,subLength) {
	return this1.slice(0,subLength);
};
struct_VariantPath.lastNodeNum = function(this1) {
	return this1[this1.length - 1];
};
struct_VariantPath.fromCode = function(code) {
	if(code == "") {
		return [];
	} else {
		var _this = code.split(":");
		var f = Std.parseInt;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = f(_this[i]);
		}
		return result;
	}
};
struct_VariantPath.code = function(this1) {
	return this1.join(":");
};
struct_VariantPath.copy = function(this1) {
	return this1.slice();
};
struct_VariantPath.parent = function(this1) {
	if(Lambda.empty(this1)) {
		return null;
	} else {
		return this1.slice(0,-1);
	}
};
struct_VariantPath.child = function(this1,num) {
	return this1.concat([num]);
};
struct_VariantPath.upstreamParents = function(this1,includeThis) {
	var paths = includeThis ? [this1] : [];
	var path = struct_VariantPath.copy(this1);
	var _g = 0;
	var _g1 = this1.length;
	while(_g < _g1) {
		var i = _g++;
		path.pop();
		paths.push(path);
	}
	return paths;
};
struct_VariantPath.contains = function(this1,p) {
	if(struct_VariantPath.get_length(p) > this1.length) {
		return false;
	}
	var _g = 0;
	var _g1 = struct_VariantPath.get_length(p);
	while(_g < _g1) {
		var i = _g++;
		if(p[i] != this1[i]) {
			return false;
		}
	}
	return true;
};
struct_VariantPath.equals = function(this1,p) {
	if(struct_VariantPath.get_length(p) == this1.length) {
		return struct_VariantPath.contains(p,this1);
	} else {
		return false;
	}
};
struct_VariantPath.mainLine = function(length) {
	var _g = [];
	var _g1 = 0;
	var _g2 = length;
	while(_g1 < _g2) {
		var i = _g1++;
		_g.push(0);
	}
	return _g;
};
struct_VariantPath._new = function(a) {
	var this1 = a;
	return this1;
};
var struct_VariantNode = function(ply,situationBefore) {
	this.ply = ply;
	this.situationBefore = situationBefore;
	this.situationAfter = ply != null ? situationBefore.situationAfterRawPly(ply) : situationBefore;
	this.children = [];
};
$hxClasses["struct.VariantNode"] = struct_VariantNode;
struct_VariantNode.__name__ = "struct.VariantNode";
struct_VariantNode.prototype = {
	ply: null
	,situationBefore: null
	,situationAfter: null
	,children: null
	,addChild: function(ply) {
		var child = new struct_VariantNode(ply,this.situationAfter);
		this.children.push(child);
	}
	,getPlyStr: function(indicateColor) {
		if(indicateColor == null) {
			indicateColor = false;
		}
		return this.ply.toNotation(this.situationBefore,indicateColor);
	}
	,__class__: struct_VariantNode
};
var struct_Variant = function(startingSituation) {
	struct_VariantNode.call(this,null,startingSituation);
	this.startingSituation = startingSituation;
};
$hxClasses["struct.Variant"] = struct_Variant;
struct_Variant.__name__ = "struct.Variant";
struct_Variant.deserialize = function(s) {
	var variantStrParts = s.split(";");
	var startingSituationSIP = variantStrParts.pop();
	var startingSituation = net_shared_converters_SituationSerializer.deserialize(startingSituationSIP);
	var nodesByPathLength = new haxe_ds_IntMap();
	var maxPathLength = 0;
	var _g = 0;
	while(_g < variantStrParts.length) {
		var nodeStr = variantStrParts[_g];
		++_g;
		var nodeStrParts = nodeStr.split("/");
		var code = nodeStrParts[0];
		var path = struct_VariantPath.fromCode(code);
		var ply = net_shared_converters_PlySerializer.deserialize(nodeStrParts[1]);
		var nodeInfo = { parentPath : struct_VariantPath.parent(path), nodeNum : struct_VariantPath.lastNodeNum(path), ply : ply};
		var pathLength = struct_VariantPath.get_length(path);
		if(maxPathLength < pathLength) {
			maxPathLength = pathLength;
		}
		if(nodesByPathLength.h.hasOwnProperty(pathLength)) {
			nodesByPathLength.h[pathLength].push(nodeInfo);
		} else {
			nodesByPathLength.h[pathLength] = [nodeInfo];
		}
	}
	var nodesOnSameLevelArray = nodesByPathLength.iterator();
	while(nodesOnSameLevelArray.hasNext()) {
		var nodesOnSameLevelArray1 = nodesOnSameLevelArray.next();
		nodesOnSameLevelArray1.sort(function(ni1,ni2) {
			return ni1.nodeNum - ni2.nodeNum;
		});
	}
	var variant = new struct_Variant(startingSituation);
	var _g = 1;
	var _g1 = maxPathLength + 1;
	while(_g < _g1) {
		var pathLength = _g++;
		var _g2 = 0;
		var _g3 = nodesByPathLength.h[pathLength];
		while(_g2 < _g3.length) {
			var nodeInfo = _g3[_g2];
			++_g2;
			variant.addChildToNode(nodeInfo.ply,nodeInfo.parentPath);
		}
	}
	return variant;
};
struct_Variant.__super__ = struct_VariantNode;
struct_Variant.prototype = $extend(struct_VariantNode.prototype,{
	startingSituation: null
	,getAllNodes: function() {
		var m = new haxe_ds_StringMap();
		var _g = 0;
		var _g1 = this.getFamilyPaths([]);
		while(_g < _g1.length) {
			var path = _g1[_g];
			++_g;
			var key = struct_VariantPath.code(path);
			var value = this.getByPath(path);
			m.h[key] = value;
		}
		return m;
	}
	,serialize: function() {
		var serialized = "";
		var h = this.getAllNodes().h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g1_key = key;
			var _g1_value = _g_h[key];
			var code = _g1_key;
			var node = _g1_value;
			if(code != "") {
				serialized += code + "/" + net_shared_converters_PlySerializer.serialize(node.ply) + ";";
			}
		}
		serialized += this.startingSituation.serialize();
		return serialized;
	}
	,addChildToNode: function(ply,parentPath) {
		this.getByPath(parentPath).addChild(ply);
	}
	,extendPathLeftmost: function(path) {
		var extendedPath = struct_VariantPath.copy(path);
		var node = this.getByPath(extendedPath);
		while(!Lambda.empty(node.children)) {
			node = node.children[0];
			extendedPath = struct_VariantPath.child(extendedPath,0);
		}
		return extendedPath;
	}
	,getRightSiblingsPaths: function(nodePath,includeSpecifiedNode) {
		var parent_path = struct_VariantPath.parent(nodePath);
		var nodeNum = nodePath[struct_VariantPath.get_length(nodePath) - 1];
		var parent = this.getByPath(parent_path);
		var startNum = includeSpecifiedNode ? nodeNum : nodeNum + 1;
		var _g = [];
		var _g1 = startNum;
		var _g2 = parent.children.length;
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push(struct_VariantPath.child(parent_path,i));
		}
		return _g;
	}
	,getLastMainLineDescendantPath: function(nodePath) {
		var currentPath = struct_VariantPath.copy(nodePath);
		while(this.pathExists(struct_VariantPath.child(currentPath,0))) currentPath = struct_VariantPath.child(currentPath,0);
		return currentPath;
	}
	,getRightmostSiblingPath: function(nodePath) {
		if(Lambda.empty(nodePath)) {
			throw haxe_Exception.thrown("Root cannot be passed as an argument");
		}
		return this.getRightmostChildPath(struct_VariantPath.parent(nodePath));
	}
	,getRightmostChildPath: function(nodePath) {
		return struct_VariantPath.child(nodePath,this.childCount(nodePath) - 1);
	}
	,getFamilyPaths: function(nodePath) {
		return this.getFamilyPathsRecursive(this.getByPath(nodePath),nodePath);
	}
	,childCount: function(nodePath) {
		return this.getByPath(nodePath).children.length;
	}
	,getFamilyPathsRecursive: function(node,nodePath) {
		var paths = [struct_VariantPath.copy(nodePath)];
		var _g = 0;
		var _g1 = node.children.length;
		while(_g < _g1) {
			var i = _g++;
			var child = node.children[i];
			paths = paths.concat(this.getFamilyPathsRecursive(child,struct_VariantPath.child(nodePath,i)));
		}
		return paths;
	}
	,getBranchByPath: function(branchPath) {
		var branch = [];
		var node = this;
		var _g = 0;
		var _g1 = struct_VariantPath.asArray(branchPath);
		while(_g < _g1.length) {
			var childNum = _g1[_g];
			++_g;
			node = node.children[childNum];
			branch.push(node.ply);
		}
		return branch;
	}
	,getMainLineBranch: function() {
		return this.getBranchByPath(this.extendPathLeftmost([]));
	}
	,pathExists: function(branchPath) {
		var node = this;
		var _g = 0;
		var _g1 = struct_VariantPath.asArray(branchPath);
		while(_g < _g1.length) {
			var childNum = _g1[_g];
			++_g;
			if(node.children.length <= childNum) {
				return false;
			}
			node = node.children[childNum];
		}
		return true;
	}
	,getBranchNotationByPath: function(branchPath) {
		var branch = [];
		var node = this;
		var _g = 0;
		var _g1 = struct_VariantPath.asArray(branchPath);
		while(_g < _g1.length) {
			var childNum = _g1[_g];
			++_g;
			node = node.children[childNum];
			branch.push(node.getPlyStr());
		}
		return branch;
	}
	,removeNode: function(path) {
		var parent = this.getByPath(struct_VariantPath.parent(path));
		var childNum = path[struct_VariantPath.get_length(path) - 1];
		parent.children.splice(childNum,1);
	}
	,getSituationByPath: function(path) {
		return this.getByPath(path).situationAfter;
	}
	,getByPath: function(path) {
		var node = this;
		var _g = 0;
		var _g1 = struct_VariantPath.asArray(path);
		while(_g < _g1.length) {
			var childNum = _g1[_g];
			++_g;
			node = node.children[childNum];
		}
		return node;
	}
	,clear: function(newStartingSituation) {
		this.ply = null;
		this.children = [];
		if(newStartingSituation != null) {
			this.situationBefore = newStartingSituation;
			this.situationAfter = newStartingSituation;
			this.startingSituation = newStartingSituation;
		}
	}
	,__class__: struct_Variant
});
var tests_Interceptor = function() { };
$hxClasses["tests.Interceptor"] = tests_Interceptor;
tests_Interceptor.__name__ = "tests.Interceptor";
tests_Interceptor.processBtn = function(e) {
	var handler = tests_Interceptor.handlers.h[e.keyCode];
	if(handler != null) {
		haxe_Log.trace("Executing handler for keyCode: " + e.keyCode,{ fileName : "src/tests/Interceptor.hx", lineNumber : 16, className : "tests.Interceptor", methodName : "processBtn"});
		handler();
	}
};
tests_Interceptor.setHandler = function(keyCode,handler) {
	tests_Interceptor.handlers.h[keyCode] = handler;
};
tests_Interceptor.removeHandler = function(keyCode) {
	tests_Interceptor.handlers.remove(keyCode);
};
tests_Interceptor.init = function() {
	haxe_ui_core_Screen.get_instance().registerEvent("keydown",tests_Interceptor.processBtn);
};
var tests_SimpleTests = function() { };
$hxClasses["tests.SimpleTests"] = tests_SimpleTests;
tests_SimpleTests.__name__ = "tests.SimpleTests";
tests_SimpleTests.traceArg = function(arg) {
	haxe_Log.trace(arg,{ fileName : "src/tests/SimpleTests.hx", lineNumber : 53, className : "tests.SimpleTests", methodName : "traceArg"});
};
tests_SimpleTests.add = function(comp,wrapperWidth,wrapperHeight) {
	comp.set_horizontalAlign("center");
	comp.set_verticalAlign("center");
	tests_SimpleTests.box = new haxe_ui_containers_Box();
	tests_SimpleTests.box.set_percentWidth(100);
	tests_SimpleTests.box.set_percentHeight(100);
	if(wrapperWidth != null || wrapperHeight != null) {
		var wrapperBox = new haxe_ui_containers_Box();
		wrapperBox.set_horizontalAlign("center");
		wrapperBox.set_verticalAlign("center");
		if(wrapperWidth != null) {
			gfx_basic_$components_utils_DimValue_assignWidth(wrapperBox,wrapperWidth);
		}
		if(wrapperHeight != null) {
			gfx_basic_$components_utils_DimValue_assignHeight(wrapperBox,wrapperHeight);
		}
		wrapperBox.addComponent(comp);
		tests_SimpleTests.box.addComponent(wrapperBox);
	} else {
		tests_SimpleTests.box.addComponent(comp);
	}
	haxe_ui_core_Screen.get_instance().addComponent(tests_SimpleTests.box);
};
tests_SimpleTests.square = function() {
	var bgColors_0 = 16711680;
	var bgColors_1 = 65280;
	var bgColors_2 = 255;
	var bgColors_3 = 16776960;
	var bgColors_4 = 16711935;
	var bgColors_5 = 65535;
	var squares = [];
	var sq = new gfx_basic_$components_Square();
	sq.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,bgColors_0,0.5,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"center",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
	squares.push(sq);
	var sq = new gfx_basic_$components_Square();
	sq.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,bgColors_1,0.5,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"center",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
	squares.push(sq);
	var sq = new gfx_basic_$components_Square();
	sq.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,bgColors_2,0.5,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"center",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
	squares.push(sq);
	var sq = new gfx_basic_$components_Square();
	sq.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,bgColors_3,0.5,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"center",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
	squares.push(sq);
	squares[0].set_height(100);
	squares[1].set_percentHeight(100);
	squares[2].set_width(100);
	squares[3].set_percentWidth(100);
	var contents1 = new haxe_ui_containers_HBox();
	contents1.set_percentWidth(100);
	contents1.set_height(150);
	contents1.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6710886,null,null,null,null,2,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
	contents1.addComponent(squares[0]);
	contents1.addComponent(squares[1]);
	var contents2 = new haxe_ui_containers_VBox();
	contents2.set_percentHeight(100);
	contents2.set_width(150);
	contents2.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
	contents2.addComponent(squares[2]);
	contents2.addComponent(squares[3]);
	var vbox = new haxe_ui_containers_VBox();
	vbox.set_percentWidth(75);
	vbox.set_percentHeight(75);
	vbox.addComponent(contents1);
	vbox.addComponent(contents2);
	tests_SimpleTests.add(vbox);
};
tests_SimpleTests.autosizingLabel = function() {
	var v = new gfx_basic_$components_AutosizingLabel();
	v.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,16711680,0.5,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
	v.set_percentWidth(100);
	v.set_text("Lorem ipsum dolor sit amet");
	tests_SimpleTests.add(v);
};
tests_SimpleTests.annotatedImage = function() {
	var vbox = new haxe_ui_containers_VBox();
	vbox.set_percentWidth(100);
	var images = gfx_basic_$components_utils_DimValue.Exact(500);
	var images1 = gfx_basic_$components_utils_DimValue.Exact(100);
	var filename;
	switch(net_shared_TimeControlType.Blitz._hx_index) {
	case 0:
		filename = "hyperbullet";
		break;
	case 1:
		filename = "bullet";
		break;
	case 2:
		filename = "blitz";
		break;
	case 3:
		filename = "rapid";
		break;
	case 4:
		filename = "classic";
		break;
	case 5:
		filename = "correspondence";
		break;
	}
	var images2 = new gfx_basic_$components_AnnotatedImage(images,images1,"assets/symbols/time_controls/" + filename + ".svg","3+2","Blitz");
	var images = gfx_basic_$components_utils_DimValue.Exact(100);
	var filename;
	switch(net_shared_TimeControlType.Rapid._hx_index) {
	case 0:
		filename = "hyperbullet";
		break;
	case 1:
		filename = "bullet";
		break;
	case 2:
		filename = "blitz";
		break;
	case 3:
		filename = "rapid";
		break;
	case 4:
		filename = "classic";
		break;
	case 5:
		filename = "correspondence";
		break;
	}
	var images1 = new gfx_basic_$components_AnnotatedImage(gfx_basic_$components_utils_DimValue.Auto,images,"assets/symbols/time_controls/" + filename + ".svg","10+15","Rapid");
	var images = gfx_basic_$components_utils_DimValue.Percent(50);
	var images3 = gfx_basic_$components_utils_DimValue.Exact(100);
	var filename;
	switch(net_shared_TimeControlType.Correspondence._hx_index) {
	case 0:
		filename = "hyperbullet";
		break;
	case 1:
		filename = "bullet";
		break;
	case 2:
		filename = "blitz";
		break;
	case 3:
		filename = "rapid";
		break;
	case 4:
		filename = "classic";
		break;
	case 5:
		filename = "correspondence";
		break;
	}
	var images4 = [images2,images1,new gfx_basic_$components_AnnotatedImage(images,images3,"assets/symbols/time_controls/" + filename + ".svg","Correspondence")];
	var _g = 0;
	while(_g < images4.length) {
		var image = images4[_g];
		++_g;
		image.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,16711680,0.5,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"center",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
		var newStyle = image.img.get_customStyle().clone();
		newStyle.backgroundColor = 16776960;
		newStyle.backgroundOpacity = 0.5;
		image.img.set_customStyle(newStyle);
		var newStyle1 = image.lbl.get_customStyle().clone();
		newStyle1.backgroundColor = 16776960;
		newStyle1.backgroundOpacity = 0.5;
		image.lbl.set_customStyle(newStyle1);
		vbox.addComponent(image);
	}
	tests_SimpleTests.add(vbox);
};
tests_SimpleTests.friendList = function() {
	var comp = new gfx_profile_complex_$components_FriendList(gfx_basic_$components_utils_DimValue.Percent(50),50);
	comp.fill(tests_data_ProfileInfos.friendList1());
	tests_SimpleTests.add(comp);
};
tests_SimpleTests.miniProfile = function() {
	gfx_Dialogs.getQueue().add(new gfx_profile_complex_$components_MiniProfile("gulvan",tests_data_ProfileInfos.miniData1()));
};
tests_SimpleTests.profileHeader = function() {
	var comp = new gfx_profile_complex_$components_ProfileHeader("kazvixx",tests_data_ProfileInfos.data1());
	tests_SimpleTests.add(comp);
};
tests_SimpleTests.studyTagFilterRect = function() {
	var comp = null;
	comp = new gfx_profile_simple_$components_StudyFilterRect(gfx_basic_$components_utils_DimValue.Exact(30),tests_data_StudyInfos.tag(1),function() {
		tests_SimpleTests.box.removeComponent(comp);
	},dict_Phrase.PROFILE_REMOVE_TAG_FILTER_BTN_TOOLTIP);
	tests_SimpleTests.add(comp);
};
tests_SimpleTests.studyFilterList = function() {
	var tags = [];
	var onAdded = function(tag) {
		tags.push(tag);
		haxe_Log.trace(tags,{ fileName : "src/tests/SimpleTests.hx", lineNumber : 203, className : "tests.SimpleTests", methodName : "studyFilterList"});
	};
	var onRemoved = function(tag) {
		HxOverrides.remove(tags,tag);
		haxe_Log.trace(tags,{ fileName : "src/tests/SimpleTests.hx", lineNumber : 209, className : "tests.SimpleTests", methodName : "studyFilterList"});
	};
	var onCleared = function() {
		tags = [];
		haxe_Log.trace(tags,{ fileName : "src/tests/SimpleTests.hx", lineNumber : 215, className : "tests.SimpleTests", methodName : "studyFilterList"});
	};
	var comp = new gfx_profile_complex_$components_StudyFilterList(gfx_basic_$components_utils_DimValue.Percent(50),36,onAdded,onRemoved,onCleared,dict_Phrase.PROFILE_TAG_FILTERS_PREPENDER,dict_Phrase.PROFILE_TAG_NO_FILTERS_PLACEHOLDER_TEXT,dict_Phrase.PROFILE_ADD_TAG_FILTER_BTN_TEXT,dict_Phrase.PROFILE_REMOVE_TAG_FILTER_BTN_TOOLTIP,dict_Phrase.PROFILE_CLEAR_TAG_FILTERS_BTN_TEXT,dict_Phrase.PROFILE_TAG_FILTER_PROMPT_QUESTION_TEXT);
	tests_SimpleTests.add(comp);
};
tests_SimpleTests.studyTagLabel = function() {
	var comp = new gfx_profile_simple_$components_StudyTagLabel(gfx_basic_$components_utils_DimValue.Exact(30),tests_data_StudyInfos.tag(1),function() {
		haxe_Log.trace(1,{ fileName : "src/tests/SimpleTests.hx", lineNumber : 224, className : "tests.SimpleTests", methodName : "studyTagLabel"});
	});
	tests_SimpleTests.add(comp);
};
tests_SimpleTests.studyTagList = function() {
	var comp = new gfx_profile_complex_$components_StudyTagList(gfx_basic_$components_utils_DimValue.Percent(50),36,tests_data_StudyInfos.tagList1(),function(s) {
		haxe_Log.trace(s,{ fileName : "src/tests/SimpleTests.hx", lineNumber : 230, className : "tests.SimpleTests", methodName : "studyTagList"});
	});
	tests_SimpleTests.add(comp);
};
tests_SimpleTests.studyWidget = function() {
	var data = { id : 12, ownerLogin : LoginManager.getLogin(), info : tests_data_StudyInfos.info1(), onStudyClicked : function() {
		haxe_Log.trace("Clicked",{ fileName : "src/tests/SimpleTests.hx", lineNumber : 240, className : "tests.SimpleTests", methodName : "studyWidget"});
	}, onTagSelected : function(tag) {
		haxe_Log.trace("Tag: " + tag,{ fileName : "src/tests/SimpleTests.hx", lineNumber : 241, className : "tests.SimpleTests", methodName : "studyWidget"});
	}, onEditPressed : function() {
		haxe_Log.trace("Edit requested",{ fileName : "src/tests/SimpleTests.hx", lineNumber : 242, className : "tests.SimpleTests", methodName : "studyWidget"});
	}, onDeletePressed : function() {
		haxe_Log.trace("Delete requested",{ fileName : "src/tests/SimpleTests.hx", lineNumber : 243, className : "tests.SimpleTests", methodName : "studyWidget"});
	}};
	var comp = new gfx_profile_simple_$components_StudyWidget();
	comp.set_data(data);
	tests_SimpleTests.add(comp,gfx_basic_$components_utils_DimValue.Percent(50),gfx_basic_$components_utils_DimValue.Exact(200));
};
tests_SimpleTests.gameWidget = function() {
	var info = new net_shared_dataobj_GameInfo();
	info.id = 228;
	info.log = tests_data_GameLogs.log1();
	var data = { info : info, watchedLogin : "gulvan", onClicked : function() {
		haxe_Log.trace("Clicked",{ fileName : "src/tests/SimpleTests.hx", lineNumber : 260, className : "tests.SimpleTests", methodName : "gameWidget"});
	}};
	var comp = new gfx_common_GameWidget();
	comp.set_data(data);
	tests_SimpleTests.add(comp,gfx_basic_$components_utils_DimValue.Percent(50),gfx_basic_$components_utils_DimValue.Exact(200));
};
tests_SimpleTests.tcFilterDropdown = function() {
	var sampleProfileData = tests_data_ProfileInfos.data1();
	var comp = new gfx_profile_simple_$components_TimeControlFilterDropdown(sampleProfileData.elo,sampleProfileData.gamesCntByTimeControl,sampleProfileData.totalPastGames,tests_SimpleTests.traceArg);
	tests_SimpleTests.add(comp);
};
tests_SimpleTests.studyTab = function() {
	var _g = new haxe_ds_IntMap();
	var value = tests_data_StudyInfos.info1();
	_g.h[111] = value;
	var value = tests_data_StudyInfos.info2();
	_g.h[23] = value;
	var value = tests_data_StudyInfos.info3();
	_g.h[21] = value;
	var comp = new gfx_profile_complex_$components_StudiesTab("gulvan",_g,5);
	tests_SimpleTests.add(comp,gfx_basic_$components_utils_DimValue.Percent(50),gfx_basic_$components_utils_DimValue.Percent(90));
};
tests_SimpleTests.newStudyDialog = function() {
	var mode = gfx_popups_StudyParamsDialogMode.Create(tests_data_Variants.variant1());
	gfx_Dialogs.getQueue().add(new gfx_popups_StudyParamsDialog(mode));
};
tests_SimpleTests.overwriteStudyDialog = function() {
	var mode = gfx_popups_StudyParamsDialogMode.CreateOrOverwrite(tests_data_Variants.variant1(),23,tests_data_StudyInfos.info1());
	gfx_Dialogs.getQueue().add(new gfx_popups_StudyParamsDialog(mode));
};
tests_SimpleTests.editStudyDialog = function() {
	var mode = gfx_popups_StudyParamsDialogMode.Edit(111,tests_data_StudyInfos.info1(),tests_SimpleTests.traceArg);
	gfx_Dialogs.getQueue().add(new gfx_popups_StudyParamsDialog(mode));
};
tests_SimpleTests.incomingChallengeDialog = function(i) {
	var challengeParams;
	switch(i) {
	case 0:
		challengeParams = tests_data_ChallengeParameters.incomingDirectBlitzCustomized();
		break;
	case 1:
		challengeParams = tests_data_ChallengeParameters.incomingDirectRapidRated();
		break;
	case 2:
		challengeParams = tests_data_ChallengeParameters.incomingDirectCorrespondenceUnrated();
		break;
	default:
		challengeParams = tests_data_ChallengeParameters.incomingDirectHyperbulletWhiteAcceptor();
	}
	var challengeData = new net_shared_dataobj_ChallengeData();
	challengeData.id = 42;
	challengeData.serializedParams = challengeParams.serialize();
	challengeData.ownerLogin = "kaz";
	challengeData.ownerELO = net_shared_EloValue.Normal(1345);
	gfx_Dialogs.getQueue().add(new gfx_popups_IncomingChallengeDialog(challengeData,function() {
	}));
};
tests_SimpleTests.challengeEntryRenderer = function(i) {
	var contentBox = new haxe_ui_containers_Grid();
	contentBox.set_columns(2);
	var _g = 0;
	while(_g < 7) {
		var i = _g++;
		var challengeParams;
		switch(i) {
		case 0:
			challengeParams = tests_data_ChallengeParameters.incomingDirectBlitzCustomized();
			break;
		case 1:
			challengeParams = tests_data_ChallengeParameters.outgoingDirect();
			break;
		case 2:
			challengeParams = tests_data_ChallengeParameters.incomingDirectRapidRated();
			break;
		case 3:
			challengeParams = tests_data_ChallengeParameters.outgoingPublic();
			break;
		case 4:
			challengeParams = tests_data_ChallengeParameters.incomingDirectCorrespondenceUnrated();
			break;
		case 5:
			challengeParams = tests_data_ChallengeParameters.outgoingByLink();
			break;
		default:
			challengeParams = tests_data_ChallengeParameters.incomingDirectHyperbulletWhiteAcceptor();
		}
		var challengeData = new net_shared_dataobj_ChallengeData();
		challengeData.id = 12;
		challengeData.serializedParams = challengeParams.serialize();
		challengeData.ownerLogin = i % 2 == 0 ? "kaz" : "gulvan";
		challengeData.ownerELO = net_shared_EloValue.Provisional(1250);
		var innerBox = new haxe_ui_containers_Box();
		gfx_basic_$components_utils_DimValue_assignWidth(innerBox,gfx_basic_$components_utils_DimValue.Exact(325));
		var comp = new gfx_menubar_ChallengeEntryRenderer();
		comp.set_data(challengeData);
		innerBox.addComponent(comp);
		contentBox.addComponent(innerBox);
	}
	tests_SimpleTests.add(contentBox);
};
tests_SimpleTests.challengeMenuEvent = function(i) {
	var challengeParams;
	switch(i) {
	case 0:
		challengeParams = tests_data_ChallengeParameters.incomingDirectBlitzCustomized();
		break;
	case 1:
		challengeParams = tests_data_ChallengeParameters.incomingDirectRapidRated();
		break;
	case 2:
		challengeParams = tests_data_ChallengeParameters.incomingDirectCorrespondenceUnrated();
		break;
	case 3:
		challengeParams = tests_data_ChallengeParameters.incomingDirectHyperbulletWhiteAcceptor();
		break;
	case 4:
		challengeParams = tests_data_ChallengeParameters.outgoingDirect();
		break;
	case 5:
		challengeParams = tests_data_ChallengeParameters.outgoingPublic();
		break;
	default:
		challengeParams = tests_data_ChallengeParameters.outgoingByLink();
	}
	var challengeData = new net_shared_dataobj_ChallengeData();
	challengeData.id = 12;
	challengeData.serializedParams = challengeParams.serialize();
	challengeData.ownerLogin = i < 4 ? "kaz" : "gulvan";
	challengeData.ownerELO = net_shared_EloValue.Provisional(1250);
	gfx_SceneManager.scene.challengesMenu.appendEntry(challengeData);
};
tests_SimpleTests.simpleAnalysis = function() {
	gfx_SceneManager.toScreen(gfx_ScreenType.Analysis(tests_data_Variants.variant1().serialize(),0,null));
};
tests_SimpleTests.studyAnalysis = function() {
	gfx_SceneManager.toScreen(gfx_ScreenType.Analysis(tests_data_Variants.variant1().serialize(),0,new gfx_profile_data_StudyData(111,LoginManager.getLogin(),tests_data_StudyInfos.info1())));
};
tests_SimpleTests.prototype = {
	playerLabel: function() {
		var comp = new gfx_profile_simple_$components_PlayerLabel(gfx_basic_$components_utils_DimValue.Exact(50),"gulvan",net_shared_EloValue.Normal(2300),true);
		tests_SimpleTests.add(comp);
	}
	,__class__: tests_SimpleTests
};
var tests_UITest = function() { };
$hxClasses["tests.UITest"] = tests_UITest;
tests_UITest.__name__ = "tests.UITest";
tests_UITest.getHistory = function() {
	return tests_UITest.history.slice();
};
tests_UITest.getCurrentTestCase = function() {
	return tests_UITest.currentTestCase;
};
tests_UITest.logHandledEvent = function(encodedEvent) {
	tests_UITest.logStep(tests_ui_utils_data_MacroStep.Event(encodedEvent));
};
tests_UITest.logEndpointCall = function(fieldName,args) {
	tests_UITest.logStep(tests_ui_utils_data_MacroStep.EndpointCall(fieldName,args));
};
tests_UITest.logStep = function(step) {
	tests_UITest.history.push(step);
	tests_UITest.mainView.appendToHistory(step);
};
tests_UITest.initSinks = function() {
	Networker.ignoreEmitCalls = true;
	LoginManager.imitateLoggedState();
};
tests_UITest.onDataReady = function(component) {
	var c = js_Boot.getClass(component);
	tests_UITest.currentTestCase = c.__name__.split(".").pop();
	tests_UITest.initSinks();
	var traverser = new tests_ui_FieldTraverser(component);
	var fieldResults = traverser.traverse();
	var storedData = tests_ui_DataKeeper.get(tests_UITest.currentTestCase);
	tests_UITest.mainView = new tests_ui_utils_components_MainView(component,fieldResults,storedData);
	haxe_ui_core_Screen.get_instance().addComponent(tests_UITest.mainView);
};
tests_UITest.launchTest = function(component) {
	var component1 = component;
	tests_ui_DataKeeper.load(function() {
		tests_UITest.onDataReady(component1);
	});
};
var tests_data_ChallengeParameters = function() { };
$hxClasses["tests.data.ChallengeParameters"] = tests_data_ChallengeParameters;
tests_data_ChallengeParameters.__name__ = "tests.data.ChallengeParameters";
tests_data_ChallengeParameters.incomingDirectBlitzCustomized = function() {
	return new struct_ChallengeParams(utils_TimeControl.normal(3,2),struct_ChallengeType.Direct("gulvan"),net_shared_PieceColor.Black,net_shared_board_Situation.randomPlay(1),false);
};
tests_data_ChallengeParameters.incomingDirectRapidRated = function() {
	return new struct_ChallengeParams(utils_TimeControl.normal(10,0),struct_ChallengeType.Direct("gulvan"),null,null,true);
};
tests_data_ChallengeParameters.incomingDirectCorrespondenceUnrated = function() {
	return new struct_ChallengeParams(utils_TimeControl.correspondence(),struct_ChallengeType.Direct("gulvan"),null,null,false);
};
tests_data_ChallengeParameters.incomingDirectHyperbulletWhiteAcceptor = function() {
	return new struct_ChallengeParams(utils_TimeControl.normal(0.5,0),struct_ChallengeType.Direct("gulvan"),net_shared_PieceColor.White,null,false);
};
tests_data_ChallengeParameters.outgoingDirect = function() {
	return new struct_ChallengeParams(utils_TimeControl.normal(1,0),struct_ChallengeType.Direct("kaz"),null,null,false);
};
tests_data_ChallengeParameters.outgoingPublic = function() {
	return new struct_ChallengeParams(utils_TimeControl.normal(1,0),struct_ChallengeType.Public,null,null,false);
};
tests_data_ChallengeParameters.outgoingByLink = function() {
	return new struct_ChallengeParams(utils_TimeControl.normal(1,0),struct_ChallengeType.ByLink,null,null,false);
};
var tests_data_GameLogs = function() { };
$hxClasses["tests.data.GameLogs"] = tests_data_GameLogs;
tests_data_GameLogs.__name__ = "tests.data.GameLogs";
tests_data_GameLogs.log1 = function() {
	return "#P|gulvan:kazvixx;\r\n\t\t#e|p1200/n;\r\n\t\t#D|1659990040;\r\n\t\t#T|600/0;\r\n\t\t#S|bfrmrnrprqrriseteuivowgxnygzo!@oAgBnCgDoEiFeGeHiIrJrKrLrMr;\r\n\t\t2043/600000;\r\n\t\t4443/600000;\r\n\t\t4142/580000;\r\n\t\t4342/570000;\r\n\t\t3031/550000;\r\n\t\t4241/540000;\r\n\t\t3132/500000;\r\n\t\t4130/510000;\r\n\t\t3233/450000;\r\n\t\t3020Liberator/480000;\r\n\t\t3334/400000;\r\n\t\t4635/450000;\r\n\t\t6162/350000;\r\n\t\t2634/420000;\r\n\t\t#R|b/res";
};
var tests_data_ProfileInfos = function() { };
$hxClasses["tests.data.ProfileInfos"] = tests_data_ProfileInfos;
tests_data_ProfileInfos.__name__ = "tests.data.ProfileInfos";
tests_data_ProfileInfos.friendList1 = function() {
	return [{ login : "gulvan", status : net_shared_dataobj_UserStatus.Online},{ login : "kazvixx", status : net_shared_dataobj_UserStatus.Offline(20)},{ login : "kartoved", status : net_shared_dataobj_UserStatus.Offline(123456)},{ login : "superqwerty", status : net_shared_dataobj_UserStatus.InGame},{ login : "kaz", status : net_shared_dataobj_UserStatus.Offline(12345678)}];
};
tests_data_ProfileInfos.data1 = function() {
	var data = new net_shared_dataobj_ProfileData();
	var _g = new haxe_ds_EnumValueMap();
	_g.set(net_shared_TimeControlType.Hyperbullet,0);
	_g.set(net_shared_TimeControlType.Bullet,20);
	_g.set(net_shared_TimeControlType.Blitz,3);
	_g.set(net_shared_TimeControlType.Rapid,228);
	_g.set(net_shared_TimeControlType.Classic,0);
	_g.set(net_shared_TimeControlType.Correspondence,1);
	data.gamesCntByTimeControl = _g;
	var _g = new haxe_ds_EnumValueMap();
	_g.set(net_shared_TimeControlType.Hyperbullet,net_shared_EloValue.None);
	_g.set(net_shared_TimeControlType.Bullet,net_shared_EloValue.Normal(1123));
	_g.set(net_shared_TimeControlType.Blitz,net_shared_EloValue.Provisional(1964));
	_g.set(net_shared_TimeControlType.Rapid,net_shared_EloValue.Normal(1556));
	_g.set(net_shared_TimeControlType.Classic,net_shared_EloValue.None);
	_g.set(net_shared_TimeControlType.Correspondence,net_shared_EloValue.Provisional(1520));
	data.elo = _g;
	data.isFriend = false;
	data.status = net_shared_dataobj_UserStatus.Offline(12345678);
	data.roles = [net_shared_dataobj_UserRole.Admin];
	data.friends = tests_data_ProfileInfos.friendList1();
	data.preloadedGames = [];
	data.preloadedStudies = new haxe_ds_IntMap();
	data.gamesInProgress = [];
	data.totalPastGames = 252;
	data.totalStudies = 0;
	return data;
};
tests_data_ProfileInfos.miniData1 = function() {
	var data = new net_shared_dataobj_MiniProfileData();
	var _g = new haxe_ds_EnumValueMap();
	_g.set(net_shared_TimeControlType.Hyperbullet,0);
	_g.set(net_shared_TimeControlType.Bullet,20);
	_g.set(net_shared_TimeControlType.Blitz,3);
	_g.set(net_shared_TimeControlType.Rapid,228);
	_g.set(net_shared_TimeControlType.Classic,0);
	_g.set(net_shared_TimeControlType.Correspondence,1);
	data.gamesCntByTimeControl = _g;
	var _g = new haxe_ds_EnumValueMap();
	_g.set(net_shared_TimeControlType.Hyperbullet,net_shared_EloValue.None);
	_g.set(net_shared_TimeControlType.Bullet,net_shared_EloValue.Normal(1123));
	_g.set(net_shared_TimeControlType.Blitz,net_shared_EloValue.Provisional(1964));
	_g.set(net_shared_TimeControlType.Rapid,net_shared_EloValue.Normal(1556));
	_g.set(net_shared_TimeControlType.Classic,net_shared_EloValue.None);
	_g.set(net_shared_TimeControlType.Correspondence,net_shared_EloValue.Provisional(1520));
	data.elo = _g;
	data.isFriend = false;
	data.status = net_shared_dataobj_UserStatus.InGame;
	return data;
};
var tests_data_StudyInfos = function() { };
$hxClasses["tests.data.StudyInfos"] = tests_data_StudyInfos;
tests_data_StudyInfos.__name__ = "tests.data.StudyInfos";
tests_data_StudyInfos.tagList1 = function() {
	return ["test1","разобрать потом","flank_attack"];
};
tests_data_StudyInfos.tag = function(i) {
	return tests_data_StudyInfos.tagList1()[i];
};
tests_data_StudyInfos.info1 = function() {
	var info = new net_shared_dataobj_StudyInfo();
	info.name = "Some clever name";
	info.description = "This study is about bla-bla-bla and bla-bla-bla, moreover, bla-bla-bla. Some more bla-bla-bla and bla-bla-bla and bla-bla-bla";
	info.publicity = net_shared_dataobj_StudyPublicity.Public;
	info.tags = tests_data_StudyInfos.tagList1();
	info.variantStr = tests_data_Variants.variant1().serialize();
	info.keyPositionSIP = "w\\rerlrvn!DnZr";
	return info;
};
tests_data_StudyInfos.info2 = function() {
	var info = new net_shared_dataobj_StudyInfo();
	info.name = "Yet another clever name";
	info.description = "This study has dumb and not very long description, yet containing a looooooooooooooooooooooooong word";
	info.publicity = net_shared_dataobj_StudyPublicity.DirectOnly;
	info.tags = [];
	info.variantStr = tests_data_Variants.variant1().serialize();
	info.keyPositionSIP = "b\\rerlrvn!Dn";
	return info;
};
tests_data_StudyInfos.info3 = function() {
	var info = new net_shared_dataobj_StudyInfo();
	info.name = "Private";
	info.description = "This is a private study";
	info.publicity = net_shared_dataobj_StudyPublicity.Private;
	info.tags = [tests_data_StudyInfos.tag(2)];
	info.variantStr = tests_data_Variants.variant1().serialize();
	info.keyPositionSIP = "b\\rervn!Dn";
	return info;
};
var tests_data_Variants = function() { };
$hxClasses["tests.data.Variants"] = tests_data_Variants;
tests_data_Variants.__name__ = "tests.data.Variants";
tests_data_Variants.variant1 = function() {
	var sit = net_shared_board_Situation.defaultStarting();
	var variant = new struct_Variant(sit);
	var path = [];
	var firstPly = null;
	var ply = net_shared_utils_MathUtils.randomElement(sit.availablePlys());
	firstPly = ply;
	sit.performRawPly(ply);
	variant.addChildToNode(ply,path);
	path = struct_VariantPath.child(path,0);
	var ply = net_shared_utils_MathUtils.randomElement(sit.availablePlys());
	sit.performRawPly(ply);
	variant.addChildToNode(ply,path);
	path = struct_VariantPath.child(path,0);
	var ply = net_shared_utils_MathUtils.randomElement(sit.availablePlys());
	sit.performRawPly(ply);
	variant.addChildToNode(ply,path);
	path = struct_VariantPath.child(path,0);
	var ply = net_shared_utils_MathUtils.randomElement(sit.availablePlys());
	sit.performRawPly(ply);
	variant.addChildToNode(ply,path);
	path = struct_VariantPath.child(path,0);
	var ply = net_shared_utils_MathUtils.randomElement(sit.availablePlys());
	sit.performRawPly(ply);
	variant.addChildToNode(ply,path);
	path = struct_VariantPath.child(path,0);
	path = [];
	sit = net_shared_board_Situation.defaultStarting();
	var ply = net_shared_utils_MathUtils.randomElement(sit.availablePlys());
	while(ply.equals(firstPly)) ply = net_shared_utils_MathUtils.randomElement(sit.availablePlys());
	sit.performRawPly(ply);
	variant.addChildToNode(ply,path);
	path = struct_VariantPath.child(path,1);
	var ply = net_shared_utils_MathUtils.randomElement(sit.availablePlys());
	while(ply.equals(firstPly)) ply = net_shared_utils_MathUtils.randomElement(sit.availablePlys());
	sit.performRawPly(ply);
	variant.addChildToNode(ply,path);
	path = struct_VariantPath.child(path,0);
	var ply = net_shared_utils_MathUtils.randomElement(sit.availablePlys());
	while(ply.equals(firstPly)) ply = net_shared_utils_MathUtils.randomElement(sit.availablePlys());
	sit.performRawPly(ply);
	variant.addChildToNode(ply,path);
	path = struct_VariantPath.child(path,0);
	return variant;
};
var tests_ui_ArgumentType = $hxEnums["tests.ui.ArgumentType"] = { __ename__:"tests.ui.ArgumentType",__constructs__:null
	,AInt: {_hx_name:"AInt",_hx_index:0,__enum__:"tests.ui.ArgumentType",toString:$estr}
	,AFloat: {_hx_name:"AFloat",_hx_index:1,__enum__:"tests.ui.ArgumentType",toString:$estr}
	,AString: {_hx_name:"AString",_hx_index:2,__enum__:"tests.ui.ArgumentType",toString:$estr}
	,AEnumerable: {_hx_name:"AEnumerable",_hx_index:3,__enum__:"tests.ui.ArgumentType",toString:$estr}
	,APly: {_hx_name:"APly",_hx_index:4,__enum__:"tests.ui.ArgumentType",toString:$estr}
};
tests_ui_ArgumentType.__constructs__ = [tests_ui_ArgumentType.AInt,tests_ui_ArgumentType.AFloat,tests_ui_ArgumentType.AString,tests_ui_ArgumentType.AEnumerable,tests_ui_ArgumentType.APly];
tests_ui_ArgumentType.__empty_constructs__ = [tests_ui_ArgumentType.AInt,tests_ui_ArgumentType.AFloat,tests_ui_ArgumentType.AString,tests_ui_ArgumentType.AEnumerable,tests_ui_ArgumentType.APly];
var tests_ui_DataKeeper = function() { };
$hxClasses["tests.ui.DataKeeper"] = tests_ui_DataKeeper;
tests_ui_DataKeeper.__name__ = "tests.ui.DataKeeper";
tests_ui_DataKeeper.constructTestCaseMap = function(json) {
	var map = new haxe_ds_StringMap();
	var _g = 0;
	var _g1 = Reflect.fields(json);
	while(_g < _g1.length) {
		var className = _g1[_g];
		++_g;
		var testCaseJson = Reflect.field(json,className);
		var info = tests_ui_utils_data_TestCaseInfo.construct(testCaseJson,className);
		map.h[className] = info;
	}
	return map;
};
tests_ui_DataKeeper.getUntrackedMacroNames = function() {
	return tests_ui_DataKeeper.getCurrent().descriptor.getUntrackedMacroNames();
};
tests_ui_DataKeeper.getAllMacroNames = function() {
	return tests_ui_DataKeeper.getCurrent().descriptor.getAllMacroNames();
};
tests_ui_DataKeeper.proposeMacros = function(excludedMacroNames) {
	tests_ui_DataKeeper.getCurrent().descriptor.proposeMacros(excludedMacroNames);
};
tests_ui_DataKeeper.get = function(testCase) {
	var info = tests_ui_DataKeeper.testCaseInfos.h[testCase];
	if(info == null) {
		var tmp = "Data for test case " + testCase + " was not loaded. Loaded cases: ";
		var _g = [];
		var h = tests_ui_DataKeeper.testCaseInfos.h;
		var s_h = h;
		var s_keys = Object.keys(h);
		var s_length = s_keys.length;
		var s_current = 0;
		while(s_current < s_length) {
			var s = s_keys[s_current++];
			_g.push(s);
		}
		haxe_Log.trace(tmp + _g.join(", "),{ fileName : "src/tests/ui/DataKeeper.hx", lineNumber : 47, className : "tests.ui.DataKeeper", methodName : "get"});
		var this1 = tests_ui_DataKeeper.testCaseInfos;
		var value = tests_ui_utils_data_TestCaseInfo.empty(testCase);
		this1.h[testCase] = value;
		return tests_ui_DataKeeper.testCaseInfos.h[testCase];
	} else {
		return info;
	}
};
tests_ui_DataKeeper.getCurrent = function() {
	return tests_ui_DataKeeper.get(tests_UITest.getCurrentTestCase());
};
tests_ui_DataKeeper.load = function(onLoaded) {
	var onRawTestCaseInfosRetrieved = function(rawDataStr) {
		tests_ui_DataKeeper.testCaseInfos = tests_ui_DataKeeper.constructTestCaseMap(JSON.parse(rawDataStr));
		onLoaded();
	};
	var rawDataStr = haxe_Resource.getString("test_case_infos");
	if(rawDataStr == null) {
		var request = new haxe_http_HttpJs("https://raw.githubusercontent.com/Gulvan0/Intellector/main/src/tests/ui/test_case_infos.json");
		request.onData = onRawTestCaseInfosRetrieved;
		request.request();
	} else {
		onRawTestCaseInfosRetrieved(rawDataStr);
	}
};
var tests_ui_FieldTraverser = function(component) {
	this.testCase = tests_UITest.getCurrentTestCase();
	this.component = component;
};
$hxClasses["tests.ui.FieldTraverser"] = tests_ui_FieldTraverser;
tests_ui_FieldTraverser.__name__ = "tests.ui.FieldTraverser";
tests_ui_FieldTraverser.prototype = {
	testCase: null
	,component: null
	,endpoints: null
	,initParameters: null
	,constructActionEndpoint: function(fieldName,displayName) {
		var splitterValues = this.getMetaValue(fieldName,"split",true);
		var prompts = [];
		var promptMeta = this.getMetaValue(fieldName,"prompt",true);
		if(promptMeta != null) {
			var type = null;
			var displayName1 = null;
			var _g = 0;
			while(_g < promptMeta.length) {
				var tagArgument = promptMeta[_g];
				++_g;
				if(type == null) {
					type = Type.createEnum(tests_ui_ArgumentType,js_Boot.__cast(tagArgument , String),null);
				} else if(displayName1 == null) {
					displayName1 = js_Boot.__cast(tagArgument , String);
				} else if(typeof(tagArgument) == "string") {
					prompts.push(new tests_ui_utils_data_ActionEndpointPrompt(displayName1,type));
					type = Type.createEnum(tests_ui_ArgumentType,js_Boot.__cast(tagArgument , String),null);
					displayName1 = null;
				} else if(((tagArgument) instanceof Array)) {
					var defaultValues = [];
					var _g1 = 0;
					var _g2 = js_Boot.__cast(tagArgument , Array);
					while(_g1 < _g2.length) {
						var defaultArg = _g2[_g1];
						++_g1;
						defaultValues.push(new tests_ui_utils_data_EndpointArgument(type,defaultArg));
					}
					prompts.push(new tests_ui_utils_data_ActionEndpointPrompt(displayName1,type,defaultValues));
					type = null;
					displayName1 = null;
				} else {
					throw haxe_Exception.thrown("Unexpected @prompt parameter type. Test case: " + this.testCase + ". Endpoint: " + fieldName + ". Parameter: " + Std.string(tagArgument));
				}
			}
			if(type != null) {
				if(displayName1 != null) {
					prompts.push(new tests_ui_utils_data_ActionEndpointPrompt(displayName1,type));
				} else {
					throw haxe_Exception.thrown("Unterminated @prompt parameter. Test case: " + this.testCase + ". Endpoint: " + fieldName + ". Parameter type: " + Std.string(type));
				}
			}
		}
		return tests_ui_utils_data_MaterializedEndpoint.Action(fieldName,displayName,splitterValues,prompts);
	}
	,constructSequenceEndpoint: function(fieldName,displayName) {
		return tests_ui_utils_data_MaterializedEndpoint.Sequence(fieldName,displayName,this.getMetaValue(fieldName,"iterations"));
	}
	,constructInitParameter: function(fieldName,displayName,fieldOwnName) {
		var field = Reflect.field(this.component,fieldName);
		var possibleValues = Reflect.field(this.component,tests_ui_utils_FieldNaming.initParamValuesField(fieldOwnName));
		var labels = Reflect.field(this.component,tests_ui_utils_FieldNaming.initParamLabelsField(fieldOwnName));
		if(field == null) {
			throw haxe_Exception.thrown("Init parameter " + fieldOwnName + " of test case " + this.testCase + " does not have a default value");
		}
		if(possibleValues == null) {
			if(typeof(field) == "boolean") {
				possibleValues = [true,false];
			} else if(Reflect.isEnumValue(field)) {
				var e = Type.getEnum(field);
				possibleValues = e.__empty_constructs__.slice();
			} else {
				throw haxe_Exception.thrown("Init parameter " + fieldOwnName + " of test case " + this.testCase + " does not have a list of possible values (this is allowed only for Bool and EnumValue)");
			}
		}
		if(labels == null) {
			var f = Std.string;
			var result = new Array(possibleValues.length);
			var _g = 0;
			var _g1 = possibleValues.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(possibleValues[i]);
			}
			labels = result;
		}
		var converted = "";
		var letter = $iterator(utils_StringUtils)(fieldOwnName.toLowerCase());
		while(letter.hasNext()) {
			var letter1 = letter.next();
			if(letter1.charCodeAt(0) >= 48 && letter1.charCodeAt(0) <= 57 || (letter1.charCodeAt(0) >= 97 && letter1.charCodeAt(0) <= 122 || letter1.charCodeAt(0) >= 65 && letter1.charCodeAt(0) <= 90)) {
				converted += letter1;
			}
		}
		return new tests_ui_utils_data_MaterializedInitParameter(fieldName,converted,displayName,possibleValues,labels);
	}
	,getMetaValue: function(fieldName,metatagName,optional) {
		if(optional == null) {
			optional = false;
		}
		var testCaseClass = js_Boot.getClass(this.component);
		var classMetas = haxe_rtti_Meta.getFields(testCaseClass);
		var methodMetas = Reflect.field(classMetas,fieldName);
		if(methodMetas == null || Reflect.field(methodMetas,metatagName) == null) {
			if(optional) {
				return null;
			} else {
				throw haxe_Exception.thrown("Metatag " + metatagName + " not found for field " + fieldName + " of test case " + tests_UITest.getCurrentTestCase());
			}
		}
		return Reflect.field(methodMetas,metatagName);
	}
	,processField: function(fieldName) {
		if(Reflect.field(this.component,fieldName) == null) {
			throw haxe_Exception.thrown("Field not found: " + fieldName);
		}
		var fieldPrefix = tests_ui_utils_FieldNaming.getFieldPrefix(fieldName);
		var fieldOwnName = StringTools.replace(fieldName,fieldPrefix,"");
		var converted = "";
		var i = 0;
		var letter = $iterator(utils_StringUtils)(fieldOwnName);
		while(letter.hasNext()) {
			var letter1 = letter.next();
			if(i == 0) {
				converted += letter1.toUpperCase();
			} else if(letter1 == "_") {
				converted += " ";
			} else if(letter1.charCodeAt(0) >= 65 && letter1.charCodeAt(0) <= 90) {
				converted += " " + letter1.toLowerCase();
			} else {
				converted += letter1;
			}
			++i;
		}
		var displayName = converted;
		var fieldType = tests_ui_utils_FieldNaming.fieldTypeByPrefix(fieldPrefix);
		if(fieldType == null) {
			throw haxe_Exception.thrown("Unknown field type. Field: " + fieldName);
		} else {
			switch(fieldType._hx_index) {
			case 0:
				this.endpoints.push(this.constructActionEndpoint(fieldName,displayName));
				break;
			case 1:
				this.endpoints.push(this.constructSequenceEndpoint(fieldName,displayName));
				break;
			case 3:
				this.initParameters.push(this.constructInitParameter(fieldName,displayName,fieldOwnName));
				break;
			case 2:case 4:case 5:
				return;
			}
		}
	}
	,getRelevantFields: function() {
		var allFields = Type.getInstanceFields(js_Boot.getClass(this.component));
		var superClassFields = new ds_ListSet(null,Type.getInstanceFields(tests_ui_TestedComponent.__super__));
		var relevantFields = new ds_ListSet(allFields.length);
		var _g = 0;
		while(_g < allFields.length) {
			var fieldName = allFields[_g];
			++_g;
			if(StringTools.startsWith(fieldName,"_") && !superClassFields.has(fieldName)) {
				relevantFields.set(fieldName);
			}
		}
		return relevantFields;
	}
	,traverse: function() {
		this.endpoints = [];
		this.initParameters = [];
		var field = this.getRelevantFields().iterator();
		while(field.hasNext()) {
			var field1 = field.next();
			this.processField(field1);
		}
		return { endpoints : this.endpoints, initParameters : this.initParameters};
	}
	,__class__: tests_ui_FieldTraverser
};
var tests_ui_FieldType = $hxEnums["tests.ui.FieldType"] = { __ename__:"tests.ui.FieldType",__constructs__:null
	,ActionEndpoint: {_hx_name:"ActionEndpoint",_hx_index:0,__enum__:"tests.ui.FieldType",toString:$estr}
	,SequenceEndpoint: {_hx_name:"SequenceEndpoint",_hx_index:1,__enum__:"tests.ui.FieldType",toString:$estr}
	,Provision: {_hx_name:"Provision",_hx_index:2,__enum__:"tests.ui.FieldType",toString:$estr}
	,InitParameter: {_hx_name:"InitParameter",_hx_index:3,__enum__:"tests.ui.FieldType",toString:$estr}
	,InitParameterValues: {_hx_name:"InitParameterValues",_hx_index:4,__enum__:"tests.ui.FieldType",toString:$estr}
	,InitParameterLabels: {_hx_name:"InitParameterLabels",_hx_index:5,__enum__:"tests.ui.FieldType",toString:$estr}
};
tests_ui_FieldType.__constructs__ = [tests_ui_FieldType.ActionEndpoint,tests_ui_FieldType.SequenceEndpoint,tests_ui_FieldType.Provision,tests_ui_FieldType.InitParameter,tests_ui_FieldType.InitParameterValues,tests_ui_FieldType.InitParameterLabels];
tests_ui_FieldType.__empty_constructs__ = [tests_ui_FieldType.ActionEndpoint,tests_ui_FieldType.SequenceEndpoint,tests_ui_FieldType.Provision,tests_ui_FieldType.InitParameter,tests_ui_FieldType.InitParameterValues,tests_ui_FieldType.InitParameterLabels];
var tests_ui_ComponentGraphics = $hxEnums["tests.ui.ComponentGraphics"] = { __ename__:"tests.ui.ComponentGraphics",__constructs__:null
	,AdjustableContent: ($_=function(component,minWidth,maxWidth,minHeight,maxHeight) { return {_hx_index:0,component:component,minWidth:minWidth,maxWidth:maxWidth,minHeight:minHeight,maxHeight:maxHeight,__enum__:"tests.ui.ComponentGraphics",toString:$estr}; },$_._hx_name="AdjustableContent",$_.__params__ = ["component","minWidth","maxWidth","minHeight","maxHeight"],$_)
	,Component: ($_=function(component) { return {_hx_index:1,component:component,__enum__:"tests.ui.ComponentGraphics",toString:$estr}; },$_._hx_name="Component",$_.__params__ = ["component"],$_)
};
tests_ui_ComponentGraphics.__constructs__ = [tests_ui_ComponentGraphics.AdjustableContent,tests_ui_ComponentGraphics.Component];
tests_ui_ComponentGraphics.__empty_constructs__ = [];
var tests_ui_TestedComponent = function() {
	haxe_ui_containers_Box.call(this);
	this.set_percentWidth(100);
	this.set_percentHeight(100);
	this.update();
};
$hxClasses["tests.ui.TestedComponent"] = tests_ui_TestedComponent;
tests_ui_TestedComponent.__name__ = "tests.ui.TestedComponent";
tests_ui_TestedComponent.__super__ = haxe_ui_containers_Box;
tests_ui_TestedComponent.prototype = $extend(haxe_ui_containers_Box.prototype,{
	adjustableContentContainer: null
	,widthSlider: null
	,heightSlider: null
	,widthLabel: null
	,heightLabel: null
	,_provide_situation: function() {
		return net_shared_board_Situation.defaultStarting();
	}
	,imitateEvent: function(encodedEvent) {
		throw haxe_Exception.thrown("Not overriden");
	}
	,onDialogShown: function() {
	}
	,onDialogHidden: function() {
	}
	,getComponent: function() {
		throw haxe_Exception.thrown("Not overriden");
	}
	,rebuildComponent: function() {
		throw haxe_Exception.thrown("Not overriden");
	}
	,output: function(message) {
		gfx_Dialogs.alertRaw(message,"output");
	}
	,update: function() {
		this.removeAllComponents();
		this.rebuildComponent();
		var compGfx = this.getComponent();
		switch(compGfx._hx_index) {
		case 0:
			var component = compGfx.component;
			var minWidth = compGfx.minWidth;
			var maxWidth = compGfx.maxWidth;
			var minHeight = compGfx.minHeight;
			var maxHeight = compGfx.maxHeight;
			this.addComponent(new tests_ui_utils_components_AdjustableContentBox(component,minWidth,maxWidth,minHeight,maxHeight));
			break;
		case 1:
			var component = compGfx.component;
			component.set_horizontalAlign("center");
			component.set_verticalAlign("center");
			this.addComponent(component);
			break;
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new tests_ui_TestedComponent();
	}
	,__class__: tests_ui_TestedComponent
});
var tests_ui_analysis_TAnalysisScreen = function() {
	tests_ui_TestedComponent.call(this);
};
$hxClasses["tests.ui.analysis.TAnalysisScreen"] = tests_ui_analysis_TAnalysisScreen;
tests_ui_analysis_TAnalysisScreen.__name__ = "tests.ui.analysis.TAnalysisScreen";
tests_ui_analysis_TAnalysisScreen.__super__ = tests_ui_TestedComponent;
tests_ui_analysis_TAnalysisScreen.prototype = $extend(tests_ui_TestedComponent.prototype,{
	getComponent: function() {
		throw new haxe_exceptions_NotImplementedException(null,null,{ fileName : "src/tests/ui/analysis/TAnalysisScreen.hx", lineNumber : 9, className : "tests.ui.analysis.TAnalysisScreen", methodName : "getComponent"});
	}
	,rebuildComponent: function() {
		throw new haxe_exceptions_NotImplementedException(null,null,{ fileName : "src/tests/ui/analysis/TAnalysisScreen.hx", lineNumber : 14, className : "tests.ui.analysis.TAnalysisScreen", methodName : "rebuildComponent"});
	}
	,registerBehaviours: function() {
		tests_ui_TestedComponent.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = tests_ui_TestedComponent.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new tests_ui_analysis_TAnalysisScreen();
	}
	,__class__: tests_ui_analysis_TAnalysisScreen
});
var tests_ui_utils_FieldNaming = function() { };
$hxClasses["tests.ui.utils.FieldNaming"] = tests_ui_utils_FieldNaming;
tests_ui_utils_FieldNaming.__name__ = "tests.ui.utils.FieldNaming";
tests_ui_utils_FieldNaming.initParamField = function(paramOwnName) {
	return "_initparam_" + paramOwnName;
};
tests_ui_utils_FieldNaming.initParamValuesField = function(paramOwnName) {
	return "_paramvalues_" + paramOwnName;
};
tests_ui_utils_FieldNaming.initParamLabelsField = function(paramOwnName) {
	return "_paramlabels_" + paramOwnName;
};
tests_ui_utils_FieldNaming.fieldPrefixByType = function(type) {
	switch(type._hx_index) {
	case 0:
		return "_act_";
	case 1:
		return "_seq_";
	case 2:
		return "_provide_";
	case 3:
		return "_initparam_";
	case 4:
		return "_paramvalues_";
	case 5:
		return "_paramlabels_";
	}
};
tests_ui_utils_FieldNaming.fieldTypeByPrefix = function(namePrefix) {
	switch(namePrefix) {
	case "_act_":
		return tests_ui_FieldType.ActionEndpoint;
	case "_initparam_":
		return tests_ui_FieldType.InitParameter;
	case "_paramlabels_":
		return tests_ui_FieldType.InitParameterLabels;
	case "_paramvalues_":
		return tests_ui_FieldType.InitParameterValues;
	case "_provide_":
		return tests_ui_FieldType.Provision;
	case "_seq_":
		return tests_ui_FieldType.SequenceEndpoint;
	default:
		return null;
	}
};
tests_ui_utils_FieldNaming.getFieldPrefix = function(name) {
	return "_" + name.split("_")[1] + "_";
};
var tests_ui_utils_HistorySliceState = $hxEnums["tests.ui.utils.HistorySliceState"] = { __ename__:"tests.ui.utils.HistorySliceState",__constructs__:null
	,Consistent: {_hx_name:"Consistent",_hx_index:0,__enum__:"tests.ui.utils.HistorySliceState",toString:$estr}
	,NotLeadingInit: {_hx_name:"NotLeadingInit",_hx_index:1,__enum__:"tests.ui.utils.HistorySliceState",toString:$estr}
	,InterruptedSequence: {_hx_name:"InterruptedSequence",_hx_index:2,__enum__:"tests.ui.utils.HistorySliceState",toString:$estr}
};
tests_ui_utils_HistorySliceState.__constructs__ = [tests_ui_utils_HistorySliceState.Consistent,tests_ui_utils_HistorySliceState.NotLeadingInit,tests_ui_utils_HistorySliceState.InterruptedSequence];
tests_ui_utils_HistorySliceState.__empty_constructs__ = [tests_ui_utils_HistorySliceState.Consistent,tests_ui_utils_HistorySliceState.NotLeadingInit,tests_ui_utils_HistorySliceState.InterruptedSequence];
var tests_ui_utils_components_ActionPromptDialog = function(prompts,currentSituation,onConfirmed) {
	this.inputBoards = new haxe_ds_StringMap();
	this.inputTextfields = new haxe_ds_StringMap();
	var _gthis = this;
	haxe_ui_containers_dialogs_Dialog.call(this);
	this.currentSituation = currentSituation;
	this.onConfirmed = onConfirmed;
	this.prompts = prompts;
	this.set_title("Input Action Parameters");
	this.set_percentWidth(75);
	var totalPlyPrompts = 0;
	var _g = 0;
	while(_g < prompts.length) {
		var prompt = prompts[_g];
		++_g;
		if(prompt.type == tests_ui_ArgumentType.APly) {
			++totalPlyPrompts;
		}
	}
	if(totalPlyPrompts > 0) {
		this.set_percentHeight(90);
	}
	var _g = 0;
	while(_g < prompts.length) {
		var prompt = prompts[_g];
		++_g;
		if(prompt.type == tests_ui_ArgumentType.APly) {
			this.addComponent(this.constructPlyInput(prompt,totalPlyPrompts));
		} else {
			this.addComponent(this.constructNormalInput(prompt));
		}
	}
	this.buttons = "{{apply}}";
	this.set_onDialogClosed(function(e) {
		var larr = haxe_ui_containers_dialogs_DialogButton.toString(e.button).split("|");
		if(larr.indexOf(haxe_ui_containers_dialogs_DialogButton.toString("{{apply}}")) != -1) {
			var args = _gthis.retrieveArguments();
			if(args != null) {
				onConfirmed(args);
			} else {
				gfx_Dialogs.alertRaw("Action execution aborted with reason 'Failed to collect arguments: some values are not provided or invalid'","TestEnv Warning");
			}
		}
	});
};
$hxClasses["tests.ui.utils.components.ActionPromptDialog"] = tests_ui_utils_components_ActionPromptDialog;
tests_ui_utils_components_ActionPromptDialog.__name__ = "tests.ui.utils.components.ActionPromptDialog";
tests_ui_utils_components_ActionPromptDialog.__super__ = haxe_ui_containers_dialogs_Dialog;
tests_ui_utils_components_ActionPromptDialog.prototype = $extend(haxe_ui_containers_dialogs_Dialog.prototype,{
	onConfirmed: null
	,prompts: null
	,currentSituation: null
	,inputTextfields: null
	,inputBoards: null
	,retrieveArguments: function() {
		var $arguments = [];
		var _g = 0;
		var _g1 = this.prompts;
		while(_g < _g1.length) {
			var prompt = _g1[_g];
			++_g;
			switch(prompt.type._hx_index) {
			case 0:
				var inputTextfield = this.inputTextfields.h[prompt.displayName];
				if(inputTextfield == null) {
					throw haxe_Exception.thrown("inputTextfields has no mapping for prompt " + prompt.displayName);
				} else {
					var value = Std.parseInt(inputTextfield.get_text());
					if(value == null) {
						return null;
					} else {
						$arguments.push(new tests_ui_utils_data_EndpointArgument(prompt.type,value));
					}
				}
				break;
			case 1:
				var inputTextfield1 = this.inputTextfields.h[prompt.displayName];
				if(inputTextfield1 == null) {
					throw haxe_Exception.thrown("inputTextfields has no mapping for prompt " + prompt.displayName);
				} else {
					var value1 = parseFloat(inputTextfield1.get_text());
					if(value1 == null) {
						return null;
					} else {
						$arguments.push(new tests_ui_utils_data_EndpointArgument(prompt.type,value1));
					}
				}
				break;
			case 2:case 3:
				var inputTextfield2 = this.inputTextfields.h[prompt.displayName];
				if(inputTextfield2 == null) {
					throw haxe_Exception.thrown("inputTextfields has no mapping for prompt " + prompt.displayName);
				} else {
					var tmp;
					if(prompt.type == tests_ui_ArgumentType.AEnumerable) {
						var _this = prompt.defaultValues;
						var result = new Array(_this.length);
						var _g2 = 0;
						var _g3 = _this.length;
						while(_g2 < _g3) {
							var i = _g2++;
							result[i] = _this[i].value;
						}
						tmp = result.indexOf(inputTextfield2.get_text()) == -1;
					} else {
						tmp = false;
					}
					if(tmp) {
						return null;
					} else {
						$arguments.push(new tests_ui_utils_data_EndpointArgument(prompt.type,inputTextfield2.get_text()));
					}
				}
				break;
			case 4:
				var inputBoard = this.inputBoards.h[prompt.displayName];
				if(inputBoard == null) {
					throw haxe_Exception.thrown("inputTextfields has no mapping for prompt " + prompt.displayName);
				} else {
					var value2 = inputBoard.getAnyDrawnArrow();
					if(value2 == null) {
						return null;
					} else {
						$arguments.push(new tests_ui_utils_data_EndpointArgument(prompt.type,net_shared_board_RawPly.construct(value2.from,value2.to)));
					}
				}
				break;
			}
		}
		return $arguments;
	}
	,constructDefaultValuesBox: function(prompt) {
		var _gthis = this;
		var promptKey = prompt.displayName;
		var hbox = new haxe_ui_containers_HBox();
		hbox.set_percentWidth(100);
		var btnPercentWidth = 100 / prompt.defaultValues.length;
		var _g = 0;
		var _g1 = prompt.defaultValues;
		while(_g < _g1.length) {
			var arg = [_g1[_g]];
			++_g;
			var btn = [new haxe_ui_components_Button()];
			btn[0].set_text(arg[0].getDisplayText(this.currentSituation));
			btn[0].set_percentWidth(btnPercentWidth);
			btn[0].set_verticalAlign("center");
			btn[0].set_onClick((function(btn,arg) {
				return function(e) {
					if(prompt.type == tests_ui_ArgumentType.APly) {
						if(Object.prototype.hasOwnProperty.call(_gthis.inputBoards.h,promptKey)) {
							var ply = js_Boot.__cast(arg[0].value , net_shared_board_RawPly);
							_gthis.inputBoards.h[promptKey].drawArrow(ply.from,ply.to);
						} else {
							throw haxe_Exception.thrown("inputBoards has no mapping for prompt " + promptKey);
						}
					} else if(Object.prototype.hasOwnProperty.call(_gthis.inputTextfields.h,promptKey)) {
						_gthis.inputTextfields.h[promptKey].set_text(btn[0].get_text());
					} else {
						throw haxe_Exception.thrown("inputTextfields has no mapping for prompt " + promptKey);
					}
				};
			})(btn,arg));
			hbox.addComponent(btn[0]);
		}
		return hbox;
	}
	,constructNormalInput: function(prompt) {
		var label = new haxe_ui_components_Label();
		label.set_text(prompt.displayName + ":");
		label.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,18,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
		label.set_verticalAlign("center");
		var inputField = new haxe_ui_components_TextField();
		inputField.set_percentWidth(100);
		inputField.set_height(22);
		inputField.set_verticalAlign("center");
		if(prompt.type == tests_ui_ArgumentType.AInt) {
			inputField.set_restrictChars("0-9");
		} else if(prompt.type == tests_ui_ArgumentType.AFloat) {
			inputField.set_restrictChars("0-9.");
		}
		this.inputTextfields.h[prompt.displayName] = inputField;
		var inputRow = new haxe_ui_containers_HBox();
		inputRow.set_percentWidth(100);
		inputRow.addComponent(label);
		inputRow.addComponent(inputField);
		var vbox = new haxe_ui_containers_VBox();
		vbox.set_percentWidth(100);
		vbox.addComponent(inputRow);
		if(!Lambda.empty(prompt.defaultValues)) {
			vbox.addComponent(this.constructDefaultValuesBox(prompt));
		}
		return vbox;
	}
	,constructPlyInput: function(prompt,totalPlyInputs) {
		var label = new haxe_ui_components_Label();
		label.set_percentWidth(100);
		label.set_text(prompt.displayName + ":");
		label.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,18,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
		var vbox = new haxe_ui_containers_VBox();
		vbox.set_percentWidth(100);
		vbox.set_percentHeight(100 / totalPlyInputs);
		var inputBoard = new gameboard_SelectableBoard(this.currentSituation,gameboard_SelectionMode.EnsureSingle,gameboard_SelectionMode.Disabled,net_shared_PieceColor.White,gameboard_util_Marking.None);
		inputBoard.set_percentWidth(100);
		inputBoard.set_percentHeight(100);
		this.inputBoards.h[prompt.displayName] = inputBoard;
		vbox.addComponent(label);
		vbox.addComponent(inputBoard);
		if(!Lambda.empty(prompt.defaultValues)) {
			vbox.addComponent(this.constructDefaultValuesBox(prompt));
		}
		return vbox;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_dialogs_Dialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_dialogs_Dialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_prompts: null
	,_constructorParam_currentSituation: null
	,_constructorParam_onConfirmed: null
	,self: function() {
		return new tests_ui_utils_components_ActionPromptDialog(this._constructorParam_prompts,this._constructorParam_currentSituation,this._constructorParam_onConfirmed);
	}
	,__class__: tests_ui_utils_components_ActionPromptDialog
});
var tests_ui_utils_components_AddMacroDialog = function(onMacroAdded) {
	var _gthis = this;
	haxe_ui_containers_dialogs_Dialog.call(this);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_containers_HBox();
	c1.set_percentWidth(100.);
	var c2 = new haxe_ui_components_Label();
	c2.set_text("Name:");
	c2.set_styleString("font-size:16px;font-bold:true");
	c2.set_verticalAlign("center");
	c1.addComponent(c2);
	var c3 = new haxe_ui_components_TextField();
	c3.set_id("nameInputField");
	c3.set_percentWidth(100.);
	c3.set_placeholder("Enter macro name...");
	c1.addComponent(c3);
	c0.addComponent(c1);
	var c4 = new haxe_ui_containers_ScrollView();
	c4.set_percentWidth(100.);
	c4.set_percentHeight(100.);
	c4.set_percentContentWidth(100.);
	var c5 = new haxe_ui_containers_VBox();
	c5.set_id("historyVBox");
	c5.set_percentWidth(100.);
	c4.addComponent(c5);
	c0.addComponent(c4);
	this.addComponent(c0);
	this.set_percentWidth(50.);
	this.set_percentHeight(50.);
	this.set_title("Add Macro");
	this.bindingRoot = true;
	this.nameInputField = c3;
	this.historyVBox = c5;
	this.entryIDs = [];
	this.historySlice = tests_UITest.getHistory();
	var _g_current = 0;
	var _g_array = this.historySlice;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		var i = _g1_key;
		var macroStep = _g1_value;
		var stepName = tests_ui_utils_data_MacroStep_macroStepDisplayText(macroStep);
		var entry = new tests_ui_utils_components_HistorySliceEntry(stepName,(function(_g,id) {
			return function() {
				_g[0](id[0]);
			};
		})([$bind(this,this.onDropBefore)],[i]),(function(_g,id) {
			return function() {
				_g[0](id[0]);
			};
		})([$bind(this,this.onDropOne)],[i]),(function(_g,id) {
			return function() {
				_g[0](id[0]);
			};
		})([$bind(this,this.onDropAfter)],[i]));
		this.entryIDs.push(i);
		this.historyVBox.addComponent(entry);
	}
	this.buttons = "{{apply}}";
	this.set_onDialogClosed(function(e) {
		var larr = haxe_ui_containers_dialogs_DialogButton.toString(e.button).split("|");
		if(larr.indexOf(haxe_ui_containers_dialogs_DialogButton.toString("{{apply}}")) != -1) {
			if(_gthis.nameInputField.get_text() == "") {
				gfx_Dialogs.alertRaw("Failed to add macro: name not specified","TestEnv Warning");
			} else if(tests_ui_DataKeeper.getAllMacroNames().indexOf(_gthis.nameInputField.get_text()) != -1) {
				gfx_Dialogs.alertRaw("Failed to add macro: a macro with this name already exists","TestEnv Warning");
			} else {
				var historySliceState = _gthis.checkHistorySliceConsistensy();
				if(historySliceState != tests_ui_utils_HistorySliceState.Consistent) {
					var tmp = "Slice is inconsistent: " + $hxEnums[historySliceState.__enum__].__constructs__[historySliceState._hx_index]._hx_name + ", save macro anyway?";
					var name = _gthis.nameInputField.get_text();
					var historySlice = _gthis.historySlice;
					var onMacroAdded1 = onMacroAdded;
					gfx_Dialogs.confirmRaw(tmp,"Warning: Inconsistensy Detected",function() {
						tests_ui_utils_components_AddMacroDialog.addMacro(name,historySlice,onMacroAdded1);
					},function() {
					});
				} else {
					tests_ui_utils_components_AddMacroDialog.addMacro(_gthis.nameInputField.get_text(),_gthis.historySlice,onMacroAdded);
				}
			}
		}
	});
};
$hxClasses["tests.ui.utils.components.AddMacroDialog"] = tests_ui_utils_components_AddMacroDialog;
tests_ui_utils_components_AddMacroDialog.__name__ = "tests.ui.utils.components.AddMacroDialog";
tests_ui_utils_components_AddMacroDialog.addMacro = function(name,historySlice,onMacroAdded) {
	var m = new tests_ui_utils_data_Macro(name,historySlice);
	tests_ui_DataKeeper.getCurrent().descriptor.addMacro(m);
	onMacroAdded(m);
};
tests_ui_utils_components_AddMacroDialog.__super__ = haxe_ui_containers_dialogs_Dialog;
tests_ui_utils_components_AddMacroDialog.prototype = $extend(haxe_ui_containers_dialogs_Dialog.prototype,{
	entryIDs: null
	,historySlice: null
	,onDropBefore: function(id) {
		var index = this.entryIDs.indexOf(id);
		this.entryIDs.splice(0,index);
		this.historySlice.splice(0,index);
		var _g = 0;
		var _g1 = index;
		while(_g < _g1) {
			var i = _g++;
			this.historyVBox.removeComponentAt(0);
		}
	}
	,onDropOne: function(id) {
		var index = this.entryIDs.indexOf(id);
		this.entryIDs.splice(index,1);
		this.historySlice.splice(index,1);
		this.historyVBox.removeComponentAt(index);
	}
	,onDropAfter: function(id) {
		var index = this.entryIDs.indexOf(id);
		var totalElementsToRemove = this.entryIDs.length - index - 1;
		this.entryIDs = this.entryIDs.slice(0,index + 1);
		this.historySlice = this.historySlice.slice(0,index + 1);
		var _g = 0;
		var _g1 = totalElementsToRemove;
		while(_g < _g1) {
			var i = _g++;
			this.historyVBox.removeComponentAt(index + 1);
		}
	}
	,checkHistorySliceConsistensy: function() {
		var _g = 0;
		var _g1 = this.historySlice.slice(1);
		while(_g < _g1.length) {
			var step = _g1[_g];
			++_g;
			if(step._hx_index == 2) {
				var _g2 = step.paramValueIndexes;
				return tests_ui_utils_HistorySliceState.NotLeadingInit;
			}
		}
		return tests_ui_utils_HistorySliceState.Consistent;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_dialogs_Dialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_dialogs_Dialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_onMacroAdded: null
	,self: function() {
		return new tests_ui_utils_components_AddMacroDialog(this._constructorParam_onMacroAdded);
	}
	,nameInputField: null
	,historyVBox: null
	,__class__: tests_ui_utils_components_AddMacroDialog
});
var tests_ui_utils_components_Dimension = $hxEnums["tests.ui.utils.components.Dimension"] = { __ename__:"tests.ui.utils.components.Dimension",__constructs__:null
	,Width: {_hx_name:"Width",_hx_index:0,__enum__:"tests.ui.utils.components.Dimension",toString:$estr}
	,Height: {_hx_name:"Height",_hx_index:1,__enum__:"tests.ui.utils.components.Dimension",toString:$estr}
};
tests_ui_utils_components_Dimension.__constructs__ = [tests_ui_utils_components_Dimension.Width,tests_ui_utils_components_Dimension.Height];
tests_ui_utils_components_Dimension.__empty_constructs__ = [tests_ui_utils_components_Dimension.Width,tests_ui_utils_components_Dimension.Height];
var tests_ui_utils_components_AdjustableContentBox = function(component,minWidth,maxWidth,minHeight,maxHeight) {
	haxe_ui_containers_VBox.call(this);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_height(30.);
	c0.set_percentWidth(100.);
	c0.set_styleString("border-bottom:2px;border-color:#dddddd");
	var c1 = new haxe_ui_containers_HBox();
	c1.set_percentWidth(80.);
	c1.set_percentHeight(100.);
	c1.set_horizontalAlign("center");
	var c2 = new haxe_ui_components_Label();
	c2.set_text("Width");
	c2.set_styleString("font-size:16px");
	c2.set_verticalAlign("center");
	c1.addComponent(c2);
	var c3 = new haxe_ui_components_HorizontalSlider();
	c3.set_id("widthSlider");
	c3.set_percentWidth(20.);
	c3.set_verticalAlign("center");
	c1.addComponent(c3);
	var c4 = new haxe_ui_components_Label();
	c4.set_id("widthLabel");
	c4.set_text("");
	c4.set_styleString("font-size:16px");
	c4.set_verticalAlign("center");
	c1.addComponent(c4);
	var c5 = new haxe_ui_components_Spacer();
	c5.set_percentWidth(60.);
	c5.set_verticalAlign("center");
	c1.addComponent(c5);
	var c6 = new haxe_ui_components_Label();
	c6.set_text("Height");
	c6.set_styleString("font-size:16px");
	c6.set_verticalAlign("center");
	c1.addComponent(c6);
	var c7 = new haxe_ui_components_HorizontalSlider();
	c7.set_id("heightSlider");
	c7.set_percentWidth(20.);
	c7.set_verticalAlign("center");
	c1.addComponent(c7);
	var c8 = new haxe_ui_components_Label();
	c8.set_id("heightLabel");
	c8.set_text("");
	c8.set_styleString("font-size:16px");
	c8.set_verticalAlign("center");
	c1.addComponent(c8);
	c0.addComponent(c1);
	this.addComponent(c0);
	var c9 = new haxe_ui_containers_Box();
	c9.set_percentWidth(100.);
	c9.set_percentHeight(100.);
	var c10 = new haxe_ui_containers_Box();
	c10.set_id("componentContainer");
	c10.set_verticalAlign("center");
	c10.set_horizontalAlign("center");
	c9.addComponent(c10);
	this.addComponent(c9);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.widthSlider = c3;
	this.widthLabel = c4;
	this.heightSlider = c7;
	this.heightLabel = c8;
	this.componentContainer = c10;
	this.initAdjuster(tests_ui_utils_components_Dimension.Width,minWidth,maxWidth);
	this.initAdjuster(tests_ui_utils_components_Dimension.Height,minHeight,maxHeight);
	this.componentContainer.addComponent(component);
	var c = this.widthSlider;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onWidthChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "widthSlider" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "tests.ui.utils.components.AdjustableContentBox", methodName : "new"});
	}
	var c = this.heightSlider;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onHeightChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "heightSlider" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "tests.ui.utils.components.AdjustableContentBox", methodName : "new"});
	}
};
$hxClasses["tests.ui.utils.components.AdjustableContentBox"] = tests_ui_utils_components_AdjustableContentBox;
tests_ui_utils_components_AdjustableContentBox.__name__ = "tests.ui.utils.components.AdjustableContentBox";
tests_ui_utils_components_AdjustableContentBox.__super__ = haxe_ui_containers_VBox;
tests_ui_utils_components_AdjustableContentBox.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	setDimension: function(dim,value) {
		switch(dim._hx_index) {
		case 0:
			if(value != null) {
				this.componentContainer.set_width(value);
				this.widthLabel.set_text(Std.string(Math.round(value)));
			} else {
				this.widthLabel.set_text("#");
			}
			break;
		case 1:
			if(value != null) {
				this.componentContainer.set_height(value);
				this.heightLabel.set_text(Std.string(Math.round(value)));
			} else {
				this.heightLabel.set_text("#");
			}
			break;
		}
	}
	,onWidthChanged: function(e) {
		if(this.widthLabel.get_text() != "#") {
			this.setDimension(tests_ui_utils_components_Dimension.Width,this.widthSlider.get_pos());
		}
	}
	,onHeightChanged: function(e) {
		if(this.heightLabel.get_text() != "#") {
			this.setDimension(tests_ui_utils_components_Dimension.Height,this.heightSlider.get_pos());
		}
	}
	,initAdjuster: function(dimension,minValue,maxValue) {
		var slider = dimension == tests_ui_utils_components_Dimension.Width ? this.widthSlider : this.heightSlider;
		if(minValue > 0 && maxValue > minValue) {
			var initialValue = (minValue + maxValue) / 2;
			slider.set_min(minValue);
			slider.set_max(maxValue);
			slider.set_pos(initialValue);
			this.setDimension(dimension,initialValue);
		} else {
			slider.set_min(0);
			slider.set_max(100);
			slider.set_pos(50);
			this.setDimension(dimension,null);
			slider.set_disabled(true);
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_component: null
	,_constructorParam_minWidth: null
	,_constructorParam_maxWidth: null
	,_constructorParam_minHeight: null
	,_constructorParam_maxHeight: null
	,self: function() {
		return new tests_ui_utils_components_AdjustableContentBox(this._constructorParam_component,this._constructorParam_minWidth,this._constructorParam_maxWidth,this._constructorParam_minHeight,this._constructorParam_maxHeight);
	}
	,widthSlider: null
	,widthLabel: null
	,heightSlider: null
	,heightLabel: null
	,componentContainer: null
	,__class__: tests_ui_utils_components_AdjustableContentBox
});
var tests_ui_utils_components_HistorySliceEntry = function(stepName,dropBeforeCallback,dropThisCallback,dropAfterCallback) {
	haxe_ui_containers_HBox.call(this);
	var c0 = new haxe_ui_components_Button();
	c0.set_id("dropBeforeBtn");
	c0.set_width(25.);
	c0.set_height(25.);
	c0.set_text("⤝");
	c0.set_styleString("padding: 0 0 0 0;font-size:20px");
	c0.set_tooltip("Drop all preceeding entries");
	this.addComponent(c0);
	var c1 = new haxe_ui_components_Button();
	c1.set_id("dropThisBtn");
	c1.set_width(25.);
	c1.set_height(25.);
	c1.set_text("✖");
	c1.set_styleString("padding: 0 0 0 0;font-size:20px;color:#DD0000");
	c1.set_tooltip("Drop this entry");
	this.addComponent(c1);
	var c2 = new haxe_ui_components_Button();
	c2.set_id("dropAfterBtn");
	c2.set_width(25.);
	c2.set_height(25.);
	c2.set_text("⤞");
	c2.set_styleString("padding: 0 0 0 0;font-size:20px");
	c2.set_tooltip("Drop all successive entries");
	this.addComponent(c2);
	var c3 = new haxe_ui_components_Label();
	c3.set_id("stepLabel");
	c3.set_percentWidth(100.);
	c3.set_styleString("font-size:21px");
	c3.set_verticalAlign("center");
	this.addComponent(c3);
	this.set_percentWidth(100.);
	this.bindingRoot = true;
	this.stepLabel = c3;
	this.dropThisBtn = c1;
	this.dropBeforeBtn = c0;
	this.dropAfterBtn = c2;
	this.stepLabel.set_text(stepName);
	this.dropBeforeBtn.set_onClick(function(e) {
		dropBeforeCallback();
	});
	this.dropThisBtn.set_onClick(function(e) {
		dropThisCallback();
	});
	this.dropAfterBtn.set_onClick(function(e) {
		dropAfterCallback();
	});
};
$hxClasses["tests.ui.utils.components.HistorySliceEntry"] = tests_ui_utils_components_HistorySliceEntry;
tests_ui_utils_components_HistorySliceEntry.__name__ = "tests.ui.utils.components.HistorySliceEntry";
tests_ui_utils_components_HistorySliceEntry.__super__ = haxe_ui_containers_HBox;
tests_ui_utils_components_HistorySliceEntry.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_stepName: null
	,_constructorParam_dropBeforeCallback: null
	,_constructorParam_dropThisCallback: null
	,_constructorParam_dropAfterCallback: null
	,self: function() {
		return new tests_ui_utils_components_HistorySliceEntry(this._constructorParam_stepName,this._constructorParam_dropBeforeCallback,this._constructorParam_dropThisCallback,this._constructorParam_dropAfterCallback);
	}
	,stepLabel: null
	,dropThisBtn: null
	,dropBeforeBtn: null
	,dropAfterBtn: null
	,__class__: tests_ui_utils_components_HistorySliceEntry
});
var tests_ui_utils_components_InitParameterEntry = function(nameLabel,valueLabels) {
	haxe_ui_containers_HBox.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        #paramValuesDropdown {\r\n            clip: true;\r\n        }\r\n        #paramValuesDropdown .label {\r\n            word-wrap: false;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_components_Label();
	c0.set_id("paramName");
	c0.set_percentWidth(50.);
	c0.set_styleString("font-size: 16px;text-align: center");
	c0.set_verticalAlign("center");
	this.addComponent(c0);
	var c1 = new haxe_ui_components_OptionStepper();
	c1.set_id("paramValuesDropdown");
	c1.set_height(25.);
	c1.set_percentWidth(50.);
	c1.set_text("Select...");
	c1.set_verticalAlign("center");
	var ds1 = new haxe_ui_data_ArrayDataSource();
	ds1.add({ text : "Test item", id : "item"});
	c1.set_dataSource(ds1);
	this.addComponent(c1);
	this.set_percentWidth(100.);
	this.bindingRoot = true;
	this.paramValuesDropdown = c1;
	this.paramName = c0;
	this.paramName.set_text(nameLabel + ":");
	this.paramValuesDropdown.set_dataSource(haxe_ui_data_ArrayDataSource.fromArray(valueLabels));
};
$hxClasses["tests.ui.utils.components.InitParameterEntry"] = tests_ui_utils_components_InitParameterEntry;
tests_ui_utils_components_InitParameterEntry.__name__ = "tests.ui.utils.components.InitParameterEntry";
tests_ui_utils_components_InitParameterEntry.__super__ = haxe_ui_containers_HBox;
tests_ui_utils_components_InitParameterEntry.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	getSelected: function() {
		return this.paramValuesDropdown.get_selectedIndex();
	}
	,setSelected: function(index) {
		return this.paramValuesDropdown.set_selectedIndex(index);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_nameLabel: null
	,_constructorParam_valueLabels: null
	,self: function() {
		return new tests_ui_utils_components_InitParameterEntry(this._constructorParam_nameLabel,this._constructorParam_valueLabels);
	}
	,paramValuesDropdown: null
	,paramName: null
	,__class__: tests_ui_utils_components_InitParameterEntry
});
var tests_ui_utils_components_MacroListEntry = function(macroName,includeCallback,excludeCallback) {
	haxe_ui_containers_HBox.call(this);
	var c0 = new haxe_ui_components_Button();
	c0.set_id("includeBtn");
	c0.set_width(25.);
	c0.set_height(25.);
	c0.set_text("➕");
	c0.set_styleString("padding: 0 0 0 0;font-size:20px");
	c0.set_tooltip("Include macro into proposal");
	c0.set_hidden(true);
	this.addComponent(c0);
	var c1 = new haxe_ui_components_Button();
	c1.set_id("excludeBtn");
	c1.set_width(25.);
	c1.set_height(25.);
	c1.set_text("✖");
	c1.set_styleString("padding: 0 0 0 0;font-size:20px;color:#DD0000");
	c1.set_tooltip("Exclude macro from proposal");
	this.addComponent(c1);
	var c2 = new haxe_ui_components_Label();
	c2.set_id("macroNameLabel");
	c2.set_percentWidth(100.);
	c2.set_styleString("font-size:25px;color:#333333");
	this.addComponent(c2);
	this.set_percentWidth(100.);
	this.bindingRoot = true;
	this.macroNameLabel = c2;
	this.includeBtn = c0;
	this.excludeBtn = c1;
	this.includeCallback = includeCallback;
	this.excludeCallback = excludeCallback;
	this.macroNameLabel.set_text(macroName);
	var c = this.excludeBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.exclude));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "excludeBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "tests.ui.utils.components.MacroListEntry", methodName : "new"});
	}
	var c = this.includeBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.include));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "includeBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "tests.ui.utils.components.MacroListEntry", methodName : "new"});
	}
};
$hxClasses["tests.ui.utils.components.MacroListEntry"] = tests_ui_utils_components_MacroListEntry;
tests_ui_utils_components_MacroListEntry.__name__ = "tests.ui.utils.components.MacroListEntry";
tests_ui_utils_components_MacroListEntry.__super__ = haxe_ui_containers_HBox;
tests_ui_utils_components_MacroListEntry.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	includeCallback: null
	,excludeCallback: null
	,exclude: function(e) {
		this.excludeBtn.set_hidden(true);
		this.includeBtn.set_hidden(false);
		this.macroNameLabel.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,11184810,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,25,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
		this.excludeCallback();
	}
	,include: function(e) {
		this.excludeBtn.set_hidden(false);
		this.includeBtn.set_hidden(true);
		this.macroNameLabel.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3355443,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,25,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
		this.includeCallback();
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_macroName: null
	,_constructorParam_includeCallback: null
	,_constructorParam_excludeCallback: null
	,self: function() {
		return new tests_ui_utils_components_MacroListEntry(this._constructorParam_macroName,this._constructorParam_includeCallback,this._constructorParam_excludeCallback);
	}
	,macroNameLabel: null
	,includeBtn: null
	,excludeBtn: null
	,__class__: tests_ui_utils_components_MacroListEntry
});
var tests_ui_utils_components_MainView = function(component,fieldData,storedData) {
	this.actionEndpointPrompts = new haxe_ds_StringMap();
	this.initParamEntries = new haxe_ds_StringMap();
	haxe_ui_containers_HBox.call(this);
	var c0 = new haxe_ui_containers_Box();
	c0.set_id("testedComponentBox");
	c0.set_percentWidth(60.);
	c0.set_percentHeight(100.);
	c0.set_styleString("padding:2px");
	this.addComponent(c0);
	var c1 = new haxe_ui_containers_VBox();
	c1.set_percentWidth(40.);
	c1.set_percentHeight(100.);
	var c2 = new haxe_ui_containers_HBox();
	c2.set_percentWidth(100.);
	var c3 = new haxe_ui_components_Label();
	c3.set_id("componentNameLabel");
	c3.set_percentWidth(100.);
	c3.set_styleString("text-align:center;font-size:20px");
	c2.addComponent(c3);
	c1.addComponent(c2);
	var c4 = new haxe_ui_containers_HBox();
	c4.set_percentWidth(100.);
	var c5 = new haxe_ui_components_Button();
	c5.set_id("selectTestCaseBtn");
	c5.set_percentWidth(50.);
	c5.set_text("Select Test Case");
	c5.set_disabled(true);
	c4.addComponent(c5);
	var c6 = new haxe_ui_components_Button();
	c6.set_id("manageCookiesBtn");
	c6.set_percentWidth(50.);
	c6.set_text("Manage Cookie Data");
	c6.set_disabled(true);
	c4.addComponent(c6);
	c1.addComponent(c4);
	var c7 = new haxe_ui_containers_HBox();
	c7.set_percentWidth(100.);
	c7.set_percentHeight(70.);
	var c8 = new haxe_ui_containers_ScrollView();
	c8.set_percentWidth(50.);
	c8.set_percentHeight(100.);
	c8.set_percentContentWidth(100.);
	var c9 = new haxe_ui_containers_VBox();
	c9.set_percentWidth(100.);
	var c10 = new haxe_ui_components_SectionHeader();
	c10.set_text("Init Options");
	c9.addComponent(c10);
	var c11 = new haxe_ui_containers_VBox();
	c11.set_id("initParamsVBox");
	c11.set_percentWidth(100.);
	c9.addComponent(c11);
	var c12 = new haxe_ui_components_Button();
	c12.set_id("initializeBtn");
	c12.set_percentWidth(100.);
	c12.set_text("Initialize");
	c9.addComponent(c12);
	var c13 = new haxe_ui_components_SectionHeader();
	c13.set_text("Special");
	c9.addComponent(c13);
	var c14 = new haxe_ui_containers_HBox();
	c14.set_percentWidth(100.);
	var c15 = new haxe_ui_components_Button();
	c15.set_id("traceStateBtn");
	c15.set_percentWidth(50.);
	c15.set_text("Trace State");
	c15.set_disabled(true);
	c14.addComponent(c15);
	var c16 = new haxe_ui_components_Button();
	c16.set_id("executeCustomBtn");
	c16.set_percentWidth(50.);
	c16.set_text("Execute Custom");
	c16.set_disabled(true);
	c14.addComponent(c16);
	c9.addComponent(c14);
	var c17 = new haxe_ui_components_SectionHeader();
	c17.set_text("Actions");
	c9.addComponent(c17);
	var c18 = new haxe_ui_containers_VBox();
	c18.set_id("actionsVBox");
	c18.set_percentWidth(100.);
	c9.addComponent(c18);
	var c19 = new haxe_ui_components_SectionHeader();
	c19.set_text("Sequences");
	c9.addComponent(c19);
	var c20 = new haxe_ui_components_Link();
	c20.set_id("addMacroLink");
	c20.set_text("➕ Add Macro");
	c9.addComponent(c20);
	var c21 = new haxe_ui_containers_VBox();
	c21.set_id("sequencesVBox");
	c21.set_percentWidth(100.);
	c9.addComponent(c21);
	c8.addComponent(c9);
	c7.addComponent(c8);
	var c22 = new haxe_ui_containers_ScrollView();
	c22.set_percentWidth(50.);
	c22.set_percentHeight(100.);
	c22.set_percentContentWidth(100.);
	var c23 = new haxe_ui_containers_VBox();
	c23.set_id("checksVBox");
	c23.set_percentWidth(100.);
	c22.addComponent(c23);
	c7.addComponent(c22);
	c1.addComponent(c7);
	var c24 = new haxe_ui_containers_HBox();
	c24.set_percentWidth(100.);
	var c25 = new haxe_ui_components_Button();
	c25.set_id("proposeMacrosBtn");
	c25.set_percentWidth(33.3);
	c25.set_text("Propose Macros");
	c24.addComponent(c25);
	var c26 = new haxe_ui_components_Button();
	c26.set_id("reportBugBtn");
	c26.set_percentWidth(33.3);
	c26.set_text("Report Bug");
	c26.set_disabled(true);
	c24.addComponent(c26);
	var c27 = new haxe_ui_components_Button();
	c27.set_id("proposeChecksBtn");
	c27.set_percentWidth(33.3);
	c27.set_text("Propose Checks");
	c27.set_disabled(true);
	c24.addComponent(c27);
	c1.addComponent(c24);
	var c28 = new haxe_ui_containers_HBox();
	c28.set_percentWidth(100.);
	c28.set_percentHeight(30.);
	var c29 = new haxe_ui_containers_ScrollView();
	c29.set_percentWidth(50.);
	c29.set_percentHeight(100.);
	c29.set_percentContentWidth(100.);
	var c30 = new haxe_ui_components_Label();
	c30.set_percentWidth(100.);
	c30.set_text("History");
	c30.set_styleString("font-size:20px;font-bold:true;");
	c29.addComponent(c30);
	var c31 = new haxe_ui_containers_VBox();
	c31.set_id("historyVBox");
	c31.set_percentWidth(100.);
	c29.addComponent(c31);
	c28.addComponent(c29);
	var c32 = new haxe_ui_containers_Box();
	c32.set_id("boardContainer");
	c32.set_percentWidth(50.);
	c32.set_percentHeight(100.);
	c28.addComponent(c32);
	c1.addComponent(c28);
	this.addComponent(c1);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.set_styleString("padding:5px");
	this.bindingRoot = true;
	this.traceStateBtn = c15;
	this.testedComponentBox = c0;
	this.sequencesVBox = c21;
	this.selectTestCaseBtn = c5;
	this.reportBugBtn = c26;
	this.proposeMacrosBtn = c25;
	this.proposeChecksBtn = c27;
	this.manageCookiesBtn = c6;
	this.initializeBtn = c12;
	this.initParamsVBox = c11;
	this.historyVBox = c31;
	this.executeCustomBtn = c16;
	this.componentNameLabel = c3;
	this.checksVBox = c23;
	this.boardContainer = c32;
	this.addMacroLink = c20;
	this.actionsVBox = c18;
	this.component = component;
	this.initParams = fieldData.initParameters;
	this.testedComponentBox.addComponent(component);
	this.componentNameLabel.set_htmlText("<b>Test Case: <i>" + tests_UITest.getCurrentTestCase() + "</i></b>");
	var _g = 0;
	var _g1 = this.initParams;
	while(_g < _g1.length) {
		var param = _g1[_g];
		++_g;
		var paramEntry = new tests_ui_utils_components_InitParameterEntry(param.displayName,param.labels);
		this.initParamEntries.h[param.identifier] = paramEntry;
		this.initParamsVBox.addComponent(paramEntry);
	}
	var _g = 0;
	var _g1 = fieldData.endpoints;
	while(_g < _g1.length) {
		var endpoint = _g1[_g];
		++_g;
		switch(endpoint._hx_index) {
		case 0:
			var fieldName = endpoint.fieldName;
			var displayName = endpoint.displayName;
			var splitterValues = endpoint.splitterValues;
			var prompts = endpoint.prompts;
			this.actionEndpointPrompts.h[fieldName] = prompts;
			if(splitterValues == null) {
				this.actionsVBox.addComponent(tests_ui_utils_components_SimpleComponents.fullActionBtn(displayName,(function(fieldName,_g) {
					return function() {
						_g[0](fieldName[0]);
					};
				})([fieldName],[$bind(this,this.onActionBtnPressed)])));
			} else {
				var buttonBar = new haxe_ui_containers_HorizontalButtonBar();
				buttonBar.set_percentWidth(100);
				buttonBar.set_toggle(false);
				var _g2 = 0;
				while(_g2 < splitterValues.length) {
					var splitterValue = splitterValues[_g2];
					++_g2;
					buttonBar.addComponent(tests_ui_utils_components_SimpleComponents.splittedActionBtn(splitterValue,splitterValues.length,(function(fieldName,_g) {
						return function(splitterValue) {
							_g[0](fieldName[0],splitterValue);
						};
					})([fieldName],[$bind(this,this.onActionBtnPressed)])));
				}
				this.actionsVBox.addComponent(buttonBar);
			}
			break;
		case 1:
			var fieldName1 = endpoint.fieldName;
			var displayName1 = endpoint.displayName;
			var iterations = endpoint.iterations;
			var widget = new tests_ui_utils_components_SequenceWidget(displayName1,iterations,(function(fieldName,_g) {
				return function(step) {
					_g[0](fieldName[0],step);
				};
			})([fieldName1],[$bind(this,this.onSequenceStep)]));
			this.sequencesVBox.addComponent(widget);
			break;
		}
	}
	var _g = 0;
	var _g1 = storedData.descriptor.allMacros();
	while(_g < _g1.length) {
		var storedMacro = _g1[_g];
		++_g;
		this.addMacroWidget(storedMacro);
	}
	if(js_Cookie.exists("_" + tests_UITest.getCurrentTestCase())) {
		var shortTermMacrosStr = js_Cookie.get("_" + tests_UITest.getCurrentTestCase());
		var currentIndex = 0;
		while(currentIndex < shortTermMacrosStr.length) {
			var lbIndex = shortTermMacrosStr.indexOf("[",currentIndex);
			var rbIndex = shortTermMacrosStr.indexOf("]",lbIndex + 1);
			var m = tests_ui_utils_data_Macro.compactDeserialize(shortTermMacrosStr.substring(currentIndex,lbIndex),shortTermMacrosStr.substring(lbIndex + 1,rbIndex));
			tests_ui_DataKeeper.getCurrent().descriptor.addMacro(m,false);
			this.addMacroWidget(m,false);
			currentIndex = rbIndex + 1;
		}
	}
	var h = storedData.descriptor.checks.h;
	var _g6_h = h;
	var _g6_keys = Object.keys(h);
	var _g6_length = _g6_keys.length;
	var _g6_current = 0;
	while(_g6_current < _g6_length) {
		var key = _g6_keys[_g6_current++];
		var _g7_key = key;
		var _g7_value = _g6_h[key];
		var moduleName = _g7_key;
		var checkModule = _g7_value;
		var header = new haxe_ui_components_SectionHeader();
		var converted = "";
		var i = 0;
		var letter = $iterator(utils_StringUtils)(moduleName);
		while(letter.hasNext()) {
			var letter1 = letter.next();
			if(i == 0) {
				converted += letter1.toUpperCase();
			} else if(letter1 == "_") {
				converted += " ";
			} else if(letter1.charCodeAt(0) >= 65 && letter1.charCodeAt(0) <= 90) {
				converted += " " + letter1.toLowerCase();
			} else {
				converted += letter1;
			}
			++i;
		}
		header.set_text(converted);
		this.checksVBox.addComponent(header);
		switch(checkModule._hx_index) {
		case 0:
			var checklist = checkModule.checklist;
			var _g = 0;
			while(_g < checklist.length) {
				var check = checklist[_g];
				++_g;
				this.checksVBox.addComponent(tests_ui_utils_components_SimpleComponents.checkbox(moduleName,check,storedData));
			}
			break;
		case 1:
			var checks = checkModule.checks;
			var _g1 = 0;
			var _g2 = checks.commonChecks;
			while(_g1 < _g2.length) {
				var check1 = _g2[_g1];
				++_g1;
				this.checksVBox.addComponent(tests_ui_utils_components_SimpleComponents.checkbox(moduleName,check1,storedData));
			}
			var _g3 = 0;
			var _g4 = checks.checkedStepsOrdered;
			while(_g3 < _g4.length) {
				var step = _g4[_g3];
				++_g3;
				var stepHeader = new haxe_ui_components_Label();
				stepHeader.set_text("Step " + step);
				stepHeader.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,true,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
				this.checksVBox.addComponent(stepHeader);
				var _g5 = 0;
				var _g6 = checks.stepChecks.h[step];
				while(_g5 < _g6.length) {
					var check2 = _g6[_g5];
					++_g5;
					this.checksVBox.addComponent(tests_ui_utils_components_SimpleComponents.checkbox(moduleName,check2,storedData));
				}
			}
			break;
		}
	}
	this.board = new gameboard_SelectableBoard(net_shared_board_Situation.defaultStarting(),gameboard_SelectionMode.Disabled,gameboard_SelectionMode.Disabled,net_shared_PieceColor.White,gameboard_util_Marking.None);
	this.board.set_percentHeight(100);
	this.board.set_percentWidth(100);
	this.boardContainer.addComponent(this.board);
	var timer = new haxe_Timer(1000);
	timer.run = $bind(this,this.timerRun);
	var c = this.initializeBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.reinitializeComponent));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "initializeBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "tests.ui.utils.components.MainView", methodName : "new"});
	}
	var c = this.traceStateBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.traceComponentState));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "traceStateBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "tests.ui.utils.components.MainView", methodName : "new"});
	}
	var c = this.addMacroLink;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.addMacro));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "addMacroLink" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "tests.ui.utils.components.MainView", methodName : "new"});
	}
	var c = this.proposeMacrosBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.proposeMacros));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "proposeMacrosBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "tests.ui.utils.components.MainView", methodName : "new"});
	}
};
$hxClasses["tests.ui.utils.components.MainView"] = tests_ui_utils_components_MainView;
tests_ui_utils_components_MainView.__name__ = "tests.ui.utils.components.MainView";
tests_ui_utils_components_MainView.__super__ = haxe_ui_containers_HBox;
tests_ui_utils_components_MainView.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	component: null
	,initParams: null
	,initParamEntries: null
	,actionEndpointPrompts: null
	,board: null
	,appendToHistory: function(step) {
		var label = new haxe_ui_components_Label();
		label.set_text(tests_ui_utils_data_MacroStep_macroStepDisplayText(step));
		this.historyVBox.addComponent(label);
	}
	,reinitializeComponent: function(e) {
		var paramValueIndexes = new haxe_ds_StringMap();
		var _g = 0;
		var _g1 = this.initParams;
		while(_g < _g1.length) {
			var parameter = _g1[_g];
			++_g;
			var selectedIndex = this.initParamEntries.h[parameter.identifier].getSelected();
			var selectedValue = parameter.possibleValues[selectedIndex];
			this.component[parameter.fieldName] = selectedValue;
			paramValueIndexes.h[parameter.identifier] = selectedIndex;
		}
		this.component.update();
		if(e != null) {
			tests_UITest.logStep(tests_ui_utils_data_MacroStep.Initialization(paramValueIndexes));
		}
	}
	,traceComponentState: function(e) {
		throw new haxe_exceptions_NotImplementedException(null,null,{ fileName : "src/tests/ui/utils/components/MainView.hx", lineNumber : 73, className : "tests.ui.utils.components.MainView", methodName : "traceComponentState"});
	}
	,addMacro: function(e) {
		if(!Lambda.empty(tests_UITest.getHistory())) {
			var _g = $bind(this,this.addMacroWidget);
			var immutable = false;
			new tests_ui_utils_components_AddMacroDialog(function(m) {
				_g(m,immutable);
			}).showDialog(true);
		} else {
			gfx_Dialogs.alertRaw("History is empty","TestEnv Warning");
		}
	}
	,proposeMacros: function(e) {
		var untrackedMacroNames = tests_ui_DataKeeper.getUntrackedMacroNames();
		if(!Lambda.empty(untrackedMacroNames)) {
			new tests_ui_utils_components_ProposeMacrosDialog(untrackedMacroNames).showDialog(true);
		} else {
			gfx_Dialogs.alertRaw("No untracked macros detected","TestEnv Warning");
		}
	}
	,timerRun: function() {
		this.board.setShownSituation(this.component._provide_situation());
	}
	,onActionBtnPressed: function(fieldName,splitterValue) {
		var _gthis = this;
		var prompts = this.actionEndpointPrompts.h[fieldName];
		if(Lambda.empty(prompts)) {
			if(splitterValue != null) {
				tests_UITest.logEndpointCall(fieldName,[new tests_ui_utils_data_EndpointArgument(tests_ui_ArgumentType.AString,splitterValue)]);
				var o = this.component;
				this.getMethod(fieldName).apply(o,[splitterValue]);
			} else {
				tests_UITest.logEndpointCall(fieldName,[]);
				var o = this.component;
				this.getMethod(fieldName).apply(o,[]);
			}
			return;
		}
		var dialog = new tests_ui_utils_components_ActionPromptDialog(prompts,this.component._provide_situation(),function(promptArgs) {
			var args = promptArgs;
			if(splitterValue != null) {
				args.unshift(new tests_ui_utils_data_EndpointArgument(tests_ui_ArgumentType.AString,splitterValue));
			}
			tests_UITest.logEndpointCall(fieldName,args);
			var o = _gthis.component;
			var func = _gthis.getMethod(fieldName);
			var result = new Array(args.length);
			var _g = 0;
			var _g1 = args.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = args[i].value;
			}
			func.apply(o,result);
			_gthis.component.onDialogHidden();
		});
		this.component.onDialogShown();
		dialog.showDialog();
	}
	,onSequenceStep: function(fieldName,step) {
		var endpointArgs = [new tests_ui_utils_data_EndpointArgument(tests_ui_ArgumentType.AInt,step)];
		tests_UITest.logEndpointCall(fieldName,endpointArgs);
		var o = this.component;
		this.getMethod(fieldName).apply(o,[step]);
	}
	,onMacroStep: function(step) {
		tests_UITest.logStep(step);
		switch(step._hx_index) {
		case 0:
			var endpointName = step.endpointName;
			var $arguments = step.$arguments;
			var o = this.component;
			var func = this.getMethod(endpointName);
			var result = new Array($arguments.length);
			var _g = 0;
			var _g1 = $arguments.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = $arguments[i].value;
			}
			func.apply(o,result);
			break;
		case 1:
			var serializedEvent = step.serializedEvent;
			this.component.imitateEvent(serializedEvent);
			break;
		case 2:
			var paramValueIndexes = step.paramValueIndexes;
			var _g = 0;
			var _g1 = this.initParams;
			while(_g < _g1.length) {
				var parameter = _g1[_g];
				++_g;
				var selectedIndex = paramValueIndexes.h[parameter.identifier];
				this.initParamEntries.h[parameter.identifier].setSelected(selectedIndex);
			}
			this.reinitializeComponent(null);
			break;
		}
	}
	,getMethod: function(fieldName) {
		var method = Reflect.field(this.component,fieldName);
		if(method == null) {
			throw haxe_Exception.thrown("Field not found: " + fieldName);
		} else if(!Reflect.isFunction(method)) {
			throw haxe_Exception.thrown("Field is not a function: " + fieldName);
		} else {
			return method;
		}
	}
	,addMacroWidget: function(m,immutable) {
		if(immutable == null) {
			immutable = true;
		}
		var _gthis = this;
		var stepCallback = function(step) {
			var macroStep = m.getStep(step);
			_gthis.onMacroStep(macroStep);
		};
		var widget = new tests_ui_utils_components_SequenceWidget(m.name,m.totalSteps(),stepCallback);
		var removeCallback = function() {
			tests_ui_DataKeeper.getCurrent().descriptor.removeMacro(m);
			return _gthis.sequencesVBox.removeComponent(widget);
		};
		var renameCallback = function(newName) {
			tests_ui_DataKeeper.getCurrent().descriptor.renameMacro(m,newName);
		};
		if(!immutable) {
			widget.makeEditable(removeCallback,renameCallback);
		}
		this.sequencesVBox.addComponent(widget);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_component: null
	,_constructorParam_fieldData: null
	,_constructorParam_storedData: null
	,self: function() {
		return new tests_ui_utils_components_MainView(this._constructorParam_component,this._constructorParam_fieldData,this._constructorParam_storedData);
	}
	,traceStateBtn: null
	,testedComponentBox: null
	,sequencesVBox: null
	,selectTestCaseBtn: null
	,reportBugBtn: null
	,proposeMacrosBtn: null
	,proposeChecksBtn: null
	,manageCookiesBtn: null
	,initializeBtn: null
	,initParamsVBox: null
	,historyVBox: null
	,executeCustomBtn: null
	,componentNameLabel: null
	,checksVBox: null
	,boardContainer: null
	,addMacroLink: null
	,actionsVBox: null
	,__class__: tests_ui_utils_components_MainView
});
var tests_ui_utils_components_ProposeMacrosDialog = function(macroNames) {
	var _gthis = this;
	haxe_ui_containers_dialogs_Dialog.call(this);
	var c0 = new haxe_ui_containers_ScrollView();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	c0.set_percentContentWidth(100.);
	var c1 = new haxe_ui_containers_VBox();
	c1.set_id("macrolistVBox");
	c1.set_percentWidth(100.);
	c0.addComponent(c1);
	this.addComponent(c0);
	this.set_percentWidth(50.);
	this.set_percentHeight(50.);
	this.set_title("Propose Macros");
	this.bindingRoot = true;
	this.macrolistVBox = c1;
	this.excludedMacros = [];
	this.totalPending = macroNames.length;
	var _g = 0;
	while(_g < macroNames.length) {
		var macroName = macroNames[_g];
		++_g;
		var includeCallback = (function(_g,name) {
			return function() {
				_g[0](name[0]);
			};
		})([$bind(this,this.onMacroIncluded)],[macroName]);
		var excludeCallback = (function(_g,name) {
			return function() {
				_g[0](name[0]);
			};
		})([$bind(this,this.onMacroExcluded)],[macroName]);
		var macroEntry = new tests_ui_utils_components_MacroListEntry(macroName,includeCallback,excludeCallback);
		this.macrolistVBox.addComponent(macroEntry);
	}
	this.buttons = "{{apply}}";
	this.set_onDialogClosed(function(e) {
		var larr = haxe_ui_containers_dialogs_DialogButton.toString(e.button).split("|");
		if(larr.indexOf(haxe_ui_containers_dialogs_DialogButton.toString("{{apply}}")) != -1) {
			if(_gthis.excludedMacros.length < _gthis.totalPending) {
				tests_ui_DataKeeper.proposeMacros(_gthis.excludedMacros);
			}
		}
	});
};
$hxClasses["tests.ui.utils.components.ProposeMacrosDialog"] = tests_ui_utils_components_ProposeMacrosDialog;
tests_ui_utils_components_ProposeMacrosDialog.__name__ = "tests.ui.utils.components.ProposeMacrosDialog";
tests_ui_utils_components_ProposeMacrosDialog.__super__ = haxe_ui_containers_dialogs_Dialog;
tests_ui_utils_components_ProposeMacrosDialog.prototype = $extend(haxe_ui_containers_dialogs_Dialog.prototype,{
	excludedMacros: null
	,totalPending: null
	,onMacroExcluded: function(name) {
		this.excludedMacros.push(name);
	}
	,onMacroIncluded: function(name) {
		HxOverrides.remove(this.excludedMacros,name);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_dialogs_Dialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_dialogs_Dialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_macroNames: null
	,self: function() {
		return new tests_ui_utils_components_ProposeMacrosDialog(this._constructorParam_macroNames);
	}
	,macrolistVBox: null
	,__class__: tests_ui_utils_components_ProposeMacrosDialog
});
var tests_ui_utils_components_SequenceWidget = function(sequenceName,totalSteps,stepCallback) {
	haxe_ui_containers_VBox.call(this);
	var c0 = new haxe_ui_containers_HBox();
	c0.set_height(20.);
	c0.set_percentWidth(100.);
	var c1 = new haxe_ui_components_Button();
	c1.set_id("removeBtn");
	c1.set_width(20.);
	c1.set_height(20.);
	c1.set_text("✖");
	c1.set_styleString("padding:0 0 0 0;font-size:20px;color:#DD0000");
	c1.set_verticalAlign("center");
	c1.set_hidden(true);
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_Button();
	c2.set_id("editBtn");
	c2.set_width(20.);
	c2.set_height(20.);
	c2.set_text("✎");
	c2.set_styleString("padding:0 0 0 0;font-size:20px");
	c2.set_verticalAlign("center");
	c2.set_hidden(true);
	c0.addComponent(c2);
	var c3 = new haxe_ui_components_Label();
	c3.set_id("macroNameLabel");
	c3.set_height(20.);
	c3.set_percentWidth(100.);
	c3.set_styleString("font-size:18px;font-bold:true");
	c3.set_verticalAlign("center");
	c0.addComponent(c3);
	var c4 = new haxe_ui_components_Label();
	c4.set_id("macroStepLabel");
	c4.set_height(20.);
	c4.set_styleString("font-size:18px");
	c4.set_verticalAlign("center");
	c0.addComponent(c4);
	this.addComponent(c0);
	var c5 = new haxe_ui_containers_HBox();
	c5.set_height(20.);
	c5.set_percentWidth(100.);
	var c6 = new haxe_ui_components_Label();
	c6.set_id("sliderPosLabel");
	c6.set_height(20.);
	c6.set_styleString("font-size:18px;text-align:center");
	c6.set_verticalAlign("center");
	c5.addComponent(c6);
	var c7 = new haxe_ui_components_HorizontalSlider();
	c7.set_id("intervalSlider");
	c7.set_height(20.);
	c7.set_percentWidth(100.);
	c7.set_verticalAlign("center");
	c7.set_pos(500.);
	c7.set_min(100.);
	c7.set_max(5000.);
	c5.addComponent(c7);
	var c8 = new haxe_ui_components_Button();
	c8.set_id("playBtn");
	c8.set_width(20.);
	c8.set_height(20.);
	c8.set_text("▶");
	c8.set_styleString("padding:0 0 0 0;font-size:14px");
	c8.set_verticalAlign("center");
	c5.addComponent(c8);
	var c9 = new haxe_ui_components_Button();
	c9.set_id("stepBtn");
	c9.set_width(20.);
	c9.set_height(20.);
	c9.set_text("⭲");
	c9.set_styleString("padding:0 0 0 0;font-size:20px");
	c9.set_verticalAlign("center");
	c5.addComponent(c9);
	this.addComponent(c5);
	this.set_height(40.);
	this.set_percentWidth(100.);
	this.bindingRoot = true;
	this.stepBtn = c9;
	this.sliderPosLabel = c6;
	this.removeBtn = c1;
	this.playBtn = c8;
	this.macroStepLabel = c4;
	this.macroNameLabel = c3;
	this.intervalSlider = c7;
	this.editBtn = c2;
	this.currentStep = 0;
	this.totalSteps = totalSteps;
	this.stepCallback = stepCallback;
	this.macroNameLabel.set_text(sequenceName);
	this.macroNameLabel.set_tooltip(sequenceName);
	this.updateStepLabel();
	this.updateSliderPosLabel();
	var c = this.stepBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onStep));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "stepBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "tests.ui.utils.components.SequenceWidget", methodName : "new"});
	}
	var c = this.playBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onPlay));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "playBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "tests.ui.utils.components.SequenceWidget", methodName : "new"});
	}
	var c = this.removeBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onRemove));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "removeBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "tests.ui.utils.components.SequenceWidget", methodName : "new"});
	}
	var c = this.editBtn;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onRename));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "editBtn" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "tests.ui.utils.components.SequenceWidget", methodName : "new"});
	}
	var c = this.intervalSlider;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onSpeedChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "intervalSlider" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 405, className : "tests.ui.utils.components.SequenceWidget", methodName : "new"});
	}
};
$hxClasses["tests.ui.utils.components.SequenceWidget"] = tests_ui_utils_components_SequenceWidget;
tests_ui_utils_components_SequenceWidget.__name__ = "tests.ui.utils.components.SequenceWidget";
tests_ui_utils_components_SequenceWidget.__super__ = haxe_ui_containers_VBox;
tests_ui_utils_components_SequenceWidget.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	currentStep: null
	,totalSteps: null
	,playTimer: null
	,stepCallback: null
	,removeCallback: null
	,renameCallback: null
	,updateStepLabel: function() {
		this.macroStepLabel.set_text("" + this.currentStep + "/" + this.totalSteps);
	}
	,updateSliderPosLabel: function() {
		var msInt = Math.round(this.intervalSlider.get_pos());
		if(this.intervalSlider.get_pos() < 1000) {
			this.sliderPosLabel.set_text("Interval: 0." + msInt + "s");
		} else {
			var sStr = msInt == null ? "null" : "" + msInt;
			this.sliderPosLabel.set_text("Interval: " + sStr.substring(0,sStr.length - 3) + "." + sStr.substring(sStr.length - 3) + "s");
		}
	}
	,step: function() {
		this.stepCallback(this.currentStep);
		this.currentStep = (this.currentStep + 1) % this.totalSteps;
		this.updateStepLabel();
	}
	,playTimerCallback: function() {
		this.step();
		if(this.currentStep == 0) {
			this.playTimer.stop();
			this.playTimer = null;
			this.removeBtn.set_disabled(false);
			this.editBtn.set_disabled(false);
			this.playBtn.set_disabled(false);
			this.stepBtn.set_disabled(false);
		}
	}
	,onStep: function(e) {
		this.step();
	}
	,onPlay: function(e) {
		this.removeBtn.set_disabled(true);
		this.editBtn.set_disabled(true);
		this.playBtn.set_disabled(true);
		this.stepBtn.set_disabled(true);
		this.playTimer = new haxe_Timer(Math.round(this.intervalSlider.get_pos()));
		this.playTimer.run = $bind(this,this.playTimerCallback);
	}
	,onRemove: function(e) {
		this.removeCallback();
	}
	,onRename: function(e) {
		var response = window.prompt("Enter the new macro name:");
		if(response != null && response != "") {
			if(tests_ui_DataKeeper.getAllMacroNames().indexOf(response) != -1) {
				gfx_Dialogs.alertRaw("Failed to add macro: a macro with this name already exists","TestEnv Warning");
			} else {
				this.macroNameLabel.set_text(response);
				this.renameCallback(response);
			}
		}
	}
	,onSpeedChanged: function(e) {
		this.updateSliderPosLabel();
	}
	,makeEditable: function(removeCallback,renameCallback) {
		this.removeCallback = removeCallback;
		this.renameCallback = renameCallback;
		this.removeBtn.set_hidden(false);
		this.editBtn.set_hidden(false);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,_constructorParam_sequenceName: null
	,_constructorParam_totalSteps: null
	,_constructorParam_stepCallback: null
	,self: function() {
		return new tests_ui_utils_components_SequenceWidget(this._constructorParam_sequenceName,this._constructorParam_totalSteps,this._constructorParam_stepCallback);
	}
	,stepBtn: null
	,sliderPosLabel: null
	,removeBtn: null
	,playBtn: null
	,macroStepLabel: null
	,macroNameLabel: null
	,intervalSlider: null
	,editBtn: null
	,__class__: tests_ui_utils_components_SequenceWidget
});
var tests_ui_utils_components_SimpleComponents = function() { };
$hxClasses["tests.ui.utils.components.SimpleComponents"] = tests_ui_utils_components_SimpleComponents;
tests_ui_utils_components_SimpleComponents.__name__ = "tests.ui.utils.components.SimpleComponents";
tests_ui_utils_components_SimpleComponents.checkbox = function(moduleName,checkText,storedData) {
	var checkbox = new haxe_ui_components_CheckBox();
	checkbox.set_text(checkText);
	checkbox.set_selected(storedData.getCheck(moduleName,checkText));
	checkbox.set_onChange(function(e) {
		storedData.setCheck(moduleName,checkText,checkbox.get_selected());
	});
	return checkbox;
};
tests_ui_utils_components_SimpleComponents.fullActionBtn = function(text,callback) {
	var btn = new haxe_ui_components_Button();
	btn.set_percentWidth(100);
	btn.set_text(text);
	btn.set_onClick(function(e) {
		callback();
	});
	return btn;
};
tests_ui_utils_components_SimpleComponents.splittedActionBtn = function(splitterValue,totalSplitters,callback) {
	var btn = new haxe_ui_components_Button();
	btn.set_percentWidth(100 / totalSplitters);
	btn.set_text(splitterValue);
	btn.set_onClick(function(e) {
		callback(splitterValue);
	});
	return btn;
};
var tests_ui_utils_data_ActionEndpointPrompt = function(displayName,type,defaultValues) {
	this.displayName = displayName;
	this.type = type;
	if(defaultValues == null) {
		this.defaultValues = [];
		if(type == tests_ui_ArgumentType.AEnumerable) {
			throw haxe_Exception.thrown("Action endpoint requires AEnumerable prompt \"" + displayName + "\", yet defaultValues is null");
		}
	} else {
		this.defaultValues = defaultValues;
		this.checkConsistensy();
	}
};
$hxClasses["tests.ui.utils.data.ActionEndpointPrompt"] = tests_ui_utils_data_ActionEndpointPrompt;
tests_ui_utils_data_ActionEndpointPrompt.__name__ = "tests.ui.utils.data.ActionEndpointPrompt";
tests_ui_utils_data_ActionEndpointPrompt.prototype = {
	displayName: null
	,type: null
	,defaultValues: null
	,checkConsistensy: function() {
		var _g = 0;
		var _g1 = this.defaultValues;
		while(_g < _g1.length) {
			var arg = _g1[_g];
			++_g;
			if(arg.type != this.type) {
				throw haxe_Exception.thrown("Action endpoint prompt \"" + this.displayName + "\" is inconsistent: one of default values has type " + Std.string(arg.type) + ", which differs from the prompt type " + Std.string(this.type));
			}
		}
	}
	,__class__: tests_ui_utils_data_ActionEndpointPrompt
};
function tests_ui_utils_data_CheckList_construct(moduleJson,testCaseName,moduleName) {
	var checklist = moduleJson;
	return checklist;
}
var tests_ui_utils_data_CheckMap = function() {
	this.checkedStepsOrdered = [];
	this.stepChecks = new haxe_ds_IntMap();
	this.commonChecks = [];
};
$hxClasses["tests.ui.utils.data.CheckMap"] = tests_ui_utils_data_CheckMap;
tests_ui_utils_data_CheckMap.__name__ = "tests.ui.utils.data.CheckMap";
tests_ui_utils_data_CheckMap.construct = function(moduleJson,testCaseName,moduleName) {
	var checkMap = new tests_ui_utils_data_CheckMap();
	var _g = 0;
	var _g1 = Reflect.fields(moduleJson);
	while(_g < _g1.length) {
		var step = _g1[_g];
		++_g;
		var checklist = Reflect.field(moduleJson,step);
		var intStep = Std.parseInt(step);
		if(step == "common") {
			checkMap.commonChecks = checklist;
		} else if(intStep == null || intStep < 0) {
			throw haxe_Exception.thrown("Invalid step '" + step + "' in module " + moduleName + " of test case " + testCaseName);
		} else {
			checkMap.stepChecks.h[intStep] = checklist;
			checkMap.checkedStepsOrdered.push(intStep);
		}
	}
	checkMap.checkedStepsOrdered.sort(function(x,y) {
		return x - y;
	});
	return checkMap;
};
tests_ui_utils_data_CheckMap.prototype = {
	commonChecks: null
	,stepChecks: null
	,checkedStepsOrdered: null
	,getCheckIndex: function(checkText) {
		var checksBefore = 0;
		var indexInList = this.commonChecks.indexOf(checkText);
		if(indexInList != -1) {
			return indexInList;
		}
		checksBefore += this.commonChecks.length;
		var _g = 0;
		var _g1 = this.checkedStepsOrdered;
		while(_g < _g1.length) {
			var step = _g1[_g];
			++_g;
			var checklist = this.stepChecks.h[step];
			var indexInList = checklist.indexOf(checkText);
			if(indexInList != -1) {
				return checksBefore + indexInList;
			}
			checksBefore += checklist.length;
		}
		return -1;
	}
	,__class__: tests_ui_utils_data_CheckMap
};
var tests_ui_utils_data_CheckModule = $hxEnums["tests.ui.utils.data.CheckModule"] = { __ename__:"tests.ui.utils.data.CheckModule",__constructs__:null
	,Normal: ($_=function(checklist) { return {_hx_index:0,checklist:checklist,__enum__:"tests.ui.utils.data.CheckModule",toString:$estr}; },$_._hx_name="Normal",$_.__params__ = ["checklist"],$_)
	,Stepwise: ($_=function(checks) { return {_hx_index:1,checks:checks,__enum__:"tests.ui.utils.data.CheckModule",toString:$estr}; },$_._hx_name="Stepwise",$_.__params__ = ["checks"],$_)
};
tests_ui_utils_data_CheckModule.__constructs__ = [tests_ui_utils_data_CheckModule.Normal,tests_ui_utils_data_CheckModule.Stepwise];
tests_ui_utils_data_CheckModule.__empty_constructs__ = [];
function tests_ui_utils_data_CheckModule_constructCheckModule(moduleJson,testCaseName,moduleName) {
	if(!Object.prototype.hasOwnProperty.call(moduleJson,"steps")) {
		throw haxe_Exception.thrown("Module " + moduleName + " in test case " + testCaseName + " doesn't have attribute 'steps'");
	}
	if(!Object.prototype.hasOwnProperty.call(moduleJson,"content")) {
		throw haxe_Exception.thrown("Module " + moduleName + " in test case " + testCaseName + " doesn't have attribute 'content'");
	}
	var steps = Reflect.field(moduleJson,"steps");
	var content = Reflect.field(moduleJson,"content");
	if(steps) {
		return tests_ui_utils_data_CheckModule.Stepwise(tests_ui_utils_data_CheckMap.construct(content,testCaseName,moduleName));
	} else {
		return tests_ui_utils_data_CheckModule.Normal(tests_ui_utils_data_CheckList_construct(content,testCaseName,moduleName));
	}
}
function tests_ui_utils_data_CheckModule_getCheckIndex(module,checkText) {
	switch(module._hx_index) {
	case 0:
		var checklist = module.checklist;
		return checklist.indexOf(checkText);
	case 1:
		var checks = module.checks;
		return checks.getCheckIndex(checkText);
	}
}
var tests_ui_utils_data_EndpointArgument = function(type,value) {
	this.type = type;
	this.value = value;
};
$hxClasses["tests.ui.utils.data.EndpointArgument"] = tests_ui_utils_data_EndpointArgument;
tests_ui_utils_data_EndpointArgument.__name__ = "tests.ui.utils.data.EndpointArgument";
tests_ui_utils_data_EndpointArgument.construct = function(json,testCaseName,macroName,endpointName) {
	if(!Object.prototype.hasOwnProperty.call(json,"value")) {
		throw haxe_Exception.thrown("Macro " + macroName + " in test case " + testCaseName + " has an 'endpointcall' step which argument has no attribute 'value' (endpoint: " + endpointName + ")");
	}
	if(!Object.prototype.hasOwnProperty.call(json,"type")) {
		throw haxe_Exception.thrown("Macro " + macroName + " in test case " + testCaseName + " has an 'endpointcall' step which argument has no attribute 'type' (endpoint: " + endpointName + ")");
	}
	var argValue = Std.string(Reflect.field(json,"value"));
	var argTypeStr = js_Boot.__cast(Reflect.field(json,"type") , String);
	var argType = Type.createEnum(tests_ui_ArgumentType,argTypeStr,null);
	return tests_ui_utils_data_EndpointArgument.fromSerialized(argValue,argType);
};
tests_ui_utils_data_EndpointArgument.fromSerialized = function(serializedValue,type) {
	var value;
	switch(type._hx_index) {
	case 0:
		value = Std.parseInt(serializedValue);
		break;
	case 1:
		value = parseFloat(serializedValue);
		break;
	case 2:
		value = serializedValue;
		break;
	case 3:
		value = serializedValue;
		break;
	case 4:
		value = net_shared_board_RawPly.deserialize(serializedValue);
		break;
	}
	return new tests_ui_utils_data_EndpointArgument(type,value);
};
tests_ui_utils_data_EndpointArgument.prototype = {
	value: null
	,type: null
	,asString: function() {
		switch(this.type._hx_index) {
		case 0:case 1:case 2:case 3:
			return Std.string(this.value);
		case 4:
			return (js_Boot.__cast(this.value , net_shared_board_RawPly)).serialize();
		}
	}
	,getDisplayText: function(currentSituation) {
		switch(this.type._hx_index) {
		case 0:case 1:case 2:case 3:
			return Std.string(this.value);
		case 4:
			return (js_Boot.__cast(this.value , net_shared_board_RawPly)).toNotation(currentSituation);
		}
	}
	,__class__: tests_ui_utils_data_EndpointArgument
};
var tests_ui_utils_data_Macro = function(name,sequence) {
	this.name = name;
	this.sequence = sequence;
};
$hxClasses["tests.ui.utils.data.Macro"] = tests_ui_utils_data_Macro;
tests_ui_utils_data_Macro.__name__ = "tests.ui.utils.data.Macro";
tests_ui_utils_data_Macro.construct = function(json,testCaseName) {
	if(!Object.prototype.hasOwnProperty.call(json,"name")) {
		throw haxe_Exception.thrown("Test case " + testCaseName + " has a macro without a name");
	}
	var macroName = Reflect.field(json,"name");
	if(!Object.prototype.hasOwnProperty.call(json,"sequence")) {
		throw haxe_Exception.thrown("Macro " + macroName + " in test case " + testCaseName + " doesn't have attribute 'sequence'");
	}
	var macroSequence = js_Boot.__cast(Reflect.field(json,"sequence") , Array);
	var constructedMacroSequence = [];
	var _g = 0;
	while(_g < macroSequence.length) {
		var macroStep = macroSequence[_g];
		++_g;
		var constructedStep = tests_ui_utils_data_MacroStep_constructMacroStep(macroStep,testCaseName,macroName);
		constructedMacroSequence.push(constructedStep);
	}
	return new tests_ui_utils_data_Macro(macroName,constructedMacroSequence);
};
tests_ui_utils_data_Macro.compactDeserialize = function(macroName,bracketContent) {
	var stepStrs = bracketContent.split(";");
	var sequence = [];
	var _g = 0;
	while(_g < stepStrs.length) {
		var stepStr = stepStrs[_g];
		++_g;
		if(stepStr.charAt(0) == "c") {
			var args = HxOverrides.substr(stepStr,1,null).split("|");
			var endpointName = args.shift();
			var endpointArgumentsEntry = [];
			var _g1 = 0;
			while(_g1 < args.length) {
				var arg = args[_g1];
				++_g1;
				var typeLetter = arg.charAt(0);
				var argType;
				switch(typeLetter) {
				case "e":
					argType = tests_ui_ArgumentType.AEnumerable;
					break;
				case "f":
					argType = tests_ui_ArgumentType.AFloat;
					break;
				case "i":
					argType = tests_ui_ArgumentType.AInt;
					break;
				case "p":
					argType = tests_ui_ArgumentType.APly;
					break;
				case "s":
					argType = tests_ui_ArgumentType.AString;
					break;
				default:
					throw haxe_Exception.thrown("Letter does not correspond to any of the possible argument types: " + typeLetter);
				}
				var constructedArgument = tests_ui_utils_data_EndpointArgument.fromSerialized(HxOverrides.substr(arg,1,null),argType);
				endpointArgumentsEntry.push(constructedArgument);
			}
			sequence.push(tests_ui_utils_data_MacroStep.EndpointCall(endpointName,endpointArgumentsEntry));
		} else if(stepStr.charAt(0) == "e") {
			sequence.push(tests_ui_utils_data_MacroStep.Event(HxOverrides.substr(stepStr,1,null)));
		} else if(stepStr.charAt(0) == "i") {
			var paramValueIndexes = new haxe_ds_StringMap();
			var pairs = HxOverrides.substr(stepStr,1,null).split("|");
			var _g2 = 0;
			while(_g2 < pairs.length) {
				var pair = pairs[_g2];
				++_g2;
				var kv = pair.split(":");
				paramValueIndexes.h[kv[0]] = Std.parseInt(kv[1]);
			}
			sequence.push(tests_ui_utils_data_MacroStep.Initialization(paramValueIndexes));
		}
	}
	return new tests_ui_utils_data_Macro(macroName,sequence);
};
tests_ui_utils_data_Macro.prototype = {
	name: null
	,sequence: null
	,getStep: function(step) {
		return this.sequence[step];
	}
	,totalSteps: function() {
		return this.sequence.length;
	}
	,iterator: function() {
		return new haxe_iterators_ArrayIterator(this.sequence);
	}
	,compactSerialize: function() {
		var s = "";
		s += this.name;
		s += "[";
		var steps = [];
		var _g = 0;
		var _g1 = this.sequence;
		while(_g < _g1.length) {
			var step = _g1[_g];
			++_g;
			var stepStr = "";
			switch(step._hx_index) {
			case 0:
				var endpointName = step.endpointName;
				var $arguments = step.$arguments;
				stepStr += "c";
				stepStr += endpointName;
				var _g2 = 0;
				var _g3 = $arguments;
				while(_g2 < _g3.length) {
					var arg = _g3[_g2];
					++_g2;
					stepStr += "|";
					switch(arg.type._hx_index) {
					case 0:
						stepStr += "i" + js_Boot.__cast(arg.value , Int);
						break;
					case 1:
						stepStr += "f" + js_Boot.__cast(arg.value , Float);
						break;
					case 2:
						stepStr += "s" + js_Boot.__cast(arg.value , String);
						break;
					case 3:
						stepStr += "e" + js_Boot.__cast(arg.value , String);
						break;
					case 4:
						stepStr += "p" + (js_Boot.__cast(arg.value , net_shared_board_RawPly)).serialize();
						break;
					}
				}
				break;
			case 1:
				var serializedEvent = step.serializedEvent;
				stepStr += "e";
				stepStr += serializedEvent;
				break;
			case 2:
				var paramValueIndexes = step.paramValueIndexes;
				stepStr += "i";
				var paramEntries = [];
				var h = paramValueIndexes.h;
				var _g_h = h;
				var _g_keys = Object.keys(h);
				var _g_length = _g_keys.length;
				var _g_current = 0;
				while(_g_current < _g_length) {
					var key = _g_keys[_g_current++];
					var _g1_key = key;
					var _g1_value = _g_h[key];
					var key1 = _g1_key;
					var value = _g1_value;
					paramEntries.push(key1 + ":" + value);
				}
				stepStr += paramEntries.join("|");
				break;
			}
			steps.push(stepStr);
		}
		s += steps.join(";");
		s += "]";
		return s;
	}
	,serialize: function() {
		var sequenceJson = [];
		var _g = 0;
		var _g1 = this.sequence;
		while(_g < _g1.length) {
			var step = _g1[_g];
			++_g;
			switch(step._hx_index) {
			case 0:
				var endpointName = step.endpointName;
				var $arguments = step.$arguments;
				var argsJson = [];
				var _g2 = 0;
				var _g3 = $arguments;
				while(_g2 < _g3.length) {
					var arg = _g3[_g2];
					++_g2;
					var value = arg.type._hx_index == 4 ? (js_Boot.__cast(arg.value , net_shared_board_RawPly)).serialize() : arg.value;
					argsJson.push(value);
				}
				sequenceJson.push({ type : "endpointcall", endpoint : endpointName, args : argsJson});
				break;
			case 1:
				var serializedEvent = step.serializedEvent;
				sequenceJson.push({ type : "event", eventstr : serializedEvent});
				break;
			case 2:
				var paramValueIndexes = step.paramValueIndexes;
				var paramMapJson = { };
				var h = paramValueIndexes.h;
				var _g_h = h;
				var _g_keys = Object.keys(h);
				var _g_length = _g_keys.length;
				var _g_current = 0;
				while(_g_current < _g_length) {
					var key = _g_keys[_g_current++];
					var _g1_key = key;
					var _g1_value = _g_h[key];
					var key1 = _g1_key;
					var value1 = _g1_value;
					paramMapJson[key1] = value1;
				}
				sequenceJson.push({ type : "init", params : paramMapJson});
				break;
			}
		}
		var json = { name : this.name, sequence : sequenceJson};
		return JSON.stringify(json,null,"    ");
	}
	,__class__: tests_ui_utils_data_Macro
};
var tests_ui_utils_data_MacroStep = $hxEnums["tests.ui.utils.data.MacroStep"] = { __ename__:"tests.ui.utils.data.MacroStep",__constructs__:null
	,EndpointCall: ($_=function(endpointName,$arguments) { return {_hx_index:0,endpointName:endpointName,$arguments:$arguments,__enum__:"tests.ui.utils.data.MacroStep",toString:$estr}; },$_._hx_name="EndpointCall",$_.__params__ = ["endpointName","$arguments"],$_)
	,Event: ($_=function(serializedEvent) { return {_hx_index:1,serializedEvent:serializedEvent,__enum__:"tests.ui.utils.data.MacroStep",toString:$estr}; },$_._hx_name="Event",$_.__params__ = ["serializedEvent"],$_)
	,Initialization: ($_=function(paramValueIndexes) { return {_hx_index:2,paramValueIndexes:paramValueIndexes,__enum__:"tests.ui.utils.data.MacroStep",toString:$estr}; },$_._hx_name="Initialization",$_.__params__ = ["paramValueIndexes"],$_)
};
tests_ui_utils_data_MacroStep.__constructs__ = [tests_ui_utils_data_MacroStep.EndpointCall,tests_ui_utils_data_MacroStep.Event,tests_ui_utils_data_MacroStep.Initialization];
tests_ui_utils_data_MacroStep.__empty_constructs__ = [];
function tests_ui_utils_data_MacroStep_constructEndpointCall(stepJson,testCaseName,macroName) {
	if(!Object.prototype.hasOwnProperty.call(stepJson,"endpoint")) {
		throw haxe_Exception.thrown("Macro " + macroName + " in test case " + testCaseName + " has an 'endpointcall' step lacking attribute 'endpoint'");
	}
	if(!Object.prototype.hasOwnProperty.call(stepJson,"args")) {
		throw haxe_Exception.thrown("Macro " + macroName + " in test case " + testCaseName + " has an 'endpointcall' step lacking attribute 'args'");
	}
	var endpoint = js_Boot.__cast(Reflect.field(stepJson,"endpoint") , String);
	var endpointArgs = js_Boot.__cast(Reflect.field(stepJson,"args") , Array);
	var endpointArgumentsEntry = [];
	var _g = 0;
	while(_g < endpointArgs.length) {
		var arg = endpointArgs[_g];
		++_g;
		var constructedArgument = tests_ui_utils_data_EndpointArgument.construct(arg,testCaseName,macroName,endpoint);
		endpointArgumentsEntry.push(constructedArgument);
	}
	return tests_ui_utils_data_MacroStep.EndpointCall(endpoint,endpointArgumentsEntry);
}
function tests_ui_utils_data_MacroStep_constructEventEntry(stepJson,testCaseName,macroName) {
	if(!Object.prototype.hasOwnProperty.call(stepJson,"eventstr")) {
		throw haxe_Exception.thrown("Macro " + macroName + " in test case " + testCaseName + " has an 'event' step having no 'eventstr' associated");
	}
	var eventstr = js_Boot.__cast(Reflect.field(stepJson,"eventstr") , String);
	return tests_ui_utils_data_MacroStep.Event(eventstr);
}
function tests_ui_utils_data_MacroStep_constructInitialization(stepJson,testCaseName,macroName) {
	if(!Object.prototype.hasOwnProperty.call(stepJson,"params")) {
		throw haxe_Exception.thrown("Macro " + macroName + " in test case " + testCaseName + " has an 'init' step having no 'params' associated");
	}
	var paramsJson = Reflect.field(stepJson,"params");
	var paramValueIndexes = new haxe_ds_StringMap();
	var _g = 0;
	var _g1 = Reflect.fields(paramsJson);
	while(_g < _g1.length) {
		var paramIdentifier = _g1[_g];
		++_g;
		paramValueIndexes.h[paramIdentifier] = js_Boot.__cast(Reflect.field(paramsJson,paramIdentifier) , Int);
	}
	return tests_ui_utils_data_MacroStep.Initialization(paramValueIndexes);
}
function tests_ui_utils_data_MacroStep_constructMacroStep(stepJson,testCaseName,macroName) {
	if(!Object.prototype.hasOwnProperty.call(stepJson,"type")) {
		throw haxe_Exception.thrown("Macro " + macroName + " in test case " + testCaseName + " has a step without a type");
	}
	var macroType = js_Boot.__cast(Reflect.field(stepJson,"type") , String);
	if(macroType == "endpointcall") {
		return tests_ui_utils_data_MacroStep_constructEndpointCall(stepJson,testCaseName,macroName);
	} else if(macroType == "event") {
		return tests_ui_utils_data_MacroStep_constructEventEntry(stepJson,testCaseName,macroName);
	} else if(macroType == "init") {
		return tests_ui_utils_data_MacroStep_constructInitialization(stepJson,testCaseName,macroName);
	} else {
		throw haxe_Exception.thrown("Macro " + macroName + " in test case " + testCaseName + " has a step with invalid type '" + macroType + "'");
	}
}
function tests_ui_utils_data_MacroStep_macroStepDisplayText(step) {
	switch(step._hx_index) {
	case 0:
		var endpointName = step.endpointName;
		var $arguments = step.$arguments;
		var tmp = endpointName + "(";
		var _g = [];
		var _g1 = 0;
		var _g2 = $arguments;
		while(_g1 < _g2.length) {
			var arg = _g2[_g1];
			++_g1;
			_g.push(arg.asString());
		}
		return tmp + _g.join(", ") + ")";
	case 1:
		var serializedEvent = step.serializedEvent;
		return serializedEvent;
	case 2:
		var paramValueIndexes = step.paramValueIndexes;
		var _g = [];
		var h = paramValueIndexes.h;
		var i_h = h;
		var i_keys = Object.keys(h);
		var i_length = i_keys.length;
		var i_current = 0;
		while(i_current < i_length) {
			var i = i_h[i_keys[i_current++]];
			_g.push(i);
		}
		return "INIT<" + _g.join(", ") + ">";
	}
}
var tests_ui_utils_data_MaterializedEndpoint = $hxEnums["tests.ui.utils.data.MaterializedEndpoint"] = { __ename__:"tests.ui.utils.data.MaterializedEndpoint",__constructs__:null
	,Action: ($_=function(fieldName,displayName,splitterValues,prompts) { return {_hx_index:0,fieldName:fieldName,displayName:displayName,splitterValues:splitterValues,prompts:prompts,__enum__:"tests.ui.utils.data.MaterializedEndpoint",toString:$estr}; },$_._hx_name="Action",$_.__params__ = ["fieldName","displayName","splitterValues","prompts"],$_)
	,Sequence: ($_=function(fieldName,displayName,iterations) { return {_hx_index:1,fieldName:fieldName,displayName:displayName,iterations:iterations,__enum__:"tests.ui.utils.data.MaterializedEndpoint",toString:$estr}; },$_._hx_name="Sequence",$_.__params__ = ["fieldName","displayName","iterations"],$_)
};
tests_ui_utils_data_MaterializedEndpoint.__constructs__ = [tests_ui_utils_data_MaterializedEndpoint.Action,tests_ui_utils_data_MaterializedEndpoint.Sequence];
tests_ui_utils_data_MaterializedEndpoint.__empty_constructs__ = [];
var tests_ui_utils_data_MaterializedInitParameter = function(fieldName,identifier,displayName,possibleValues,labels) {
	this.fieldName = fieldName;
	this.displayName = displayName;
	this.identifier = identifier;
	this.possibleValues = possibleValues;
	this.labels = labels;
};
$hxClasses["tests.ui.utils.data.MaterializedInitParameter"] = tests_ui_utils_data_MaterializedInitParameter;
tests_ui_utils_data_MaterializedInitParameter.__name__ = "tests.ui.utils.data.MaterializedInitParameter";
tests_ui_utils_data_MaterializedInitParameter.prototype = {
	identifier: null
	,fieldName: null
	,displayName: null
	,possibleValues: null
	,labels: null
	,__class__: tests_ui_utils_data_MaterializedInitParameter
};
var tests_ui_utils_data_TestCaseDescriptor = function() {
	this.untrackedMacros = new haxe_ds_StringMap();
	this.macros = [];
	this.checks = new haxe_ds_StringMap();
};
$hxClasses["tests.ui.utils.data.TestCaseDescriptor"] = tests_ui_utils_data_TestCaseDescriptor;
tests_ui_utils_data_TestCaseDescriptor.__name__ = "tests.ui.utils.data.TestCaseDescriptor";
tests_ui_utils_data_TestCaseDescriptor.constructCheckModuleMap = function(json,testCaseName) {
	var map = new haxe_ds_StringMap();
	var _g = 0;
	var _g1 = Reflect.fields(json);
	while(_g < _g1.length) {
		var checkModuleName = _g1[_g];
		++_g;
		var moduleJson = Reflect.field(json,checkModuleName);
		var module = tests_ui_utils_data_CheckModule_constructCheckModule(moduleJson,testCaseName,checkModuleName);
		map.h[checkModuleName] = module;
	}
	return map;
};
tests_ui_utils_data_TestCaseDescriptor.construct = function(json,testCaseName) {
	var testCaseDescriptor = new tests_ui_utils_data_TestCaseDescriptor();
	if(Object.prototype.hasOwnProperty.call(json,"checks")) {
		var checks = Reflect.field(json,"checks");
		testCaseDescriptor.checks = tests_ui_utils_data_TestCaseDescriptor.constructCheckModuleMap(checks,testCaseName);
	}
	if(Object.prototype.hasOwnProperty.call(json,"macros")) {
		var macros = js_Boot.__cast(Reflect.field(json,"macros") , Array);
		var _g = 0;
		while(_g < macros.length) {
			var macroObj = macros[_g];
			++_g;
			var constructedMacro = tests_ui_utils_data_Macro.construct(macroObj,testCaseName);
			testCaseDescriptor.macros.push(constructedMacro);
		}
	}
	return testCaseDescriptor;
};
tests_ui_utils_data_TestCaseDescriptor.empty = function() {
	return new tests_ui_utils_data_TestCaseDescriptor();
};
tests_ui_utils_data_TestCaseDescriptor.prototype = {
	checks: null
	,macros: null
	,untrackedMacros: null
	,allMacros: function() {
		return this.macros.slice();
	}
	,getMacro: function(name) {
		return Lambda.find(this.macros,function(m) {
			return m.name == name;
		});
	}
	,removeMacro: function(m) {
		var requestedMacro = this.untrackedMacros.h[m.name];
		if(requestedMacro != null) {
			HxOverrides.remove(this.macros,requestedMacro);
			var key = m.name;
			var _this = this.untrackedMacros;
			if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
				delete(_this.h[key]);
			}
			this.updateUntrackedMacrosCookie();
		} else {
			throw haxe_Exception.thrown("Attempting to remove published macro " + m.name);
		}
	}
	,getUntrackedMacroNames: function() {
		var _g = [];
		var h = this.untrackedMacros.h;
		var m_h = h;
		var m_keys = Object.keys(h);
		var m_length = m_keys.length;
		var m_current = 0;
		while(m_current < m_length) {
			var m = m_h[m_keys[m_current++]];
			_g.push(m.name);
		}
		return _g;
	}
	,getAllMacroNames: function() {
		var _this = this.macros;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = _this[i].name;
		}
		return result;
	}
	,addMacro: function(m,updateCookie) {
		if(updateCookie == null) {
			updateCookie = true;
		}
		this.macros.push(m);
		this.untrackedMacros.h[m.name] = m;
		if(updateCookie) {
			this.updateUntrackedMacrosCookie();
		}
	}
	,renameMacro: function(m,newName) {
		if(!Object.prototype.hasOwnProperty.call(this.untrackedMacros.h,m.name)) {
			throw haxe_Exception.thrown("Attempting to rename published macro " + m.name);
		}
		var key = m.name;
		var _this = this.untrackedMacros;
		if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
			delete(_this.h[key]);
		}
		this.untrackedMacros.h[newName] = m;
		m.name = newName;
		this.updateUntrackedMacrosCookie();
	}
	,updateUntrackedMacrosCookie: function() {
		var s = "";
		var h = this.untrackedMacros.h;
		var um_h = h;
		var um_keys = Object.keys(h);
		var um_length = um_keys.length;
		var um_current = 0;
		while(um_current < um_length) {
			var um = um_h[um_keys[um_current++]];
			s += um.compactSerialize();
		}
		js_Cookie.set("_" + tests_UITest.getCurrentTestCase(),s,172800);
	}
	,proposeMacros: function(exclude) {
		var h = this.untrackedMacros.h;
		var m_h = h;
		var m_keys = Object.keys(h);
		var m_length = m_keys.length;
		var m_current = 0;
		while(m_current < m_length) {
			var m = m_h[m_keys[m_current++]];
			if(exclude.indexOf(m.name) != -1) {
				continue;
			}
			var message = "A new macro was proposed:\n```\n" + m.serialize() + "\n```";
			Telegram.notifyAdmin(message);
		}
	}
	,__class__: tests_ui_utils_data_TestCaseDescriptor
};
var tests_ui_utils_data_TestCaseInfo = function(testCase,descriptor,passedChecksByModule) {
	this.testCase = testCase;
	this.descriptor = descriptor;
	this.passedChecksByModule = passedChecksByModule;
	var h = descriptor.checks.h;
	var moduleName_h = h;
	var moduleName_keys = Object.keys(h);
	var moduleName_length = moduleName_keys.length;
	var moduleName_current = 0;
	while(moduleName_current < moduleName_length) {
		var moduleName = moduleName_keys[moduleName_current++];
		if(!Object.prototype.hasOwnProperty.call(passedChecksByModule.h,moduleName)) {
			passedChecksByModule.h[moduleName] = [];
		}
	}
};
$hxClasses["tests.ui.utils.data.TestCaseInfo"] = tests_ui_utils_data_TestCaseInfo;
tests_ui_utils_data_TestCaseInfo.__name__ = "tests.ui.utils.data.TestCaseInfo";
tests_ui_utils_data_TestCaseInfo.constructPassedChecks = function(testCaseName) {
	var testCasePassedChecks = new haxe_ds_StringMap();
	var cookieStr = js_Cookie.get(testCaseName);
	if(cookieStr == null) {
		return testCasePassedChecks;
	}
	var moduleName = "";
	var checkNum = 0;
	var char = $iterator(utils_StringUtils)(cookieStr);
	while(char.hasNext()) {
		var char1 = char.next();
		if(char1 == "0" || char1 == "1") {
			if(!Object.prototype.hasOwnProperty.call(testCasePassedChecks.h,moduleName)) {
				testCasePassedChecks.h[moduleName] = [];
			}
			if(char1 == "1") {
				testCasePassedChecks.h[moduleName].push(checkNum);
			}
			++checkNum;
		} else {
			if(checkNum > 0) {
				moduleName = "";
				checkNum = 0;
			}
			moduleName += char1;
		}
	}
	return testCasePassedChecks;
};
tests_ui_utils_data_TestCaseInfo.construct = function(json,testCaseName) {
	var descriptor = tests_ui_utils_data_TestCaseDescriptor.construct(json,testCaseName);
	var passedChecksMap = tests_ui_utils_data_TestCaseInfo.constructPassedChecks(testCaseName);
	return new tests_ui_utils_data_TestCaseInfo(testCaseName,descriptor,passedChecksMap);
};
tests_ui_utils_data_TestCaseInfo.empty = function(testCaseName) {
	return new tests_ui_utils_data_TestCaseInfo(testCaseName,tests_ui_utils_data_TestCaseDescriptor.empty(),new haxe_ds_StringMap());
};
tests_ui_utils_data_TestCaseInfo.prototype = {
	testCase: null
	,descriptor: null
	,passedChecksByModule: null
	,savePassedChecks: function() {
		var cookieStr = "";
		var h = this.passedChecksByModule.h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g1_key = key;
			var _g1_value = _g_h[key];
			var moduleName = _g1_key;
			var checkNums = _g1_value;
			var checksPart = "";
			var checkPassed = [];
			var _g = 0;
			while(_g < checkNums.length) {
				var checkNum = checkNums[_g];
				++_g;
				checkPassed[checkNum] = true;
			}
			var _g1 = 0;
			while(_g1 < checkPassed.length) {
				var flag = checkPassed[_g1];
				++_g1;
				if(flag == true) {
					checksPart += "1";
				} else {
					checksPart += "0";
				}
			}
			if(checksPart != "") {
				cookieStr += moduleName + checksPart;
			}
		}
		js_Cookie.set(this.testCase,cookieStr);
	}
	,setCheck: function(moduleName,checkText,passed) {
		var module = this.descriptor.checks.h[moduleName];
		var index = tests_ui_utils_data_CheckModule_getCheckIndex(module,checkText);
		if(index == -1) {
			throw haxe_Exception.thrown("Check \"" + checkText + "\" not found in module " + moduleName + " of test case " + this.testCase);
		}
		if(passed) {
			if(this.passedChecksByModule.h[moduleName].indexOf(index) == -1) {
				this.passedChecksByModule.h[moduleName].push(index);
			}
		} else {
			HxOverrides.remove(this.passedChecksByModule.h[moduleName],index);
		}
		this.savePassedChecks();
	}
	,getCheck: function(moduleName,checkText) {
		var module = this.descriptor.checks.h[moduleName];
		var index = tests_ui_utils_data_CheckModule_getCheckIndex(module,checkText);
		if(index == -1) {
			throw haxe_Exception.thrown("Check \"" + checkText + "\" not found in module " + moduleName + " of test case " + this.testCase);
		}
		return this.passedChecksByModule.h[moduleName].indexOf(index) != -1;
	}
	,__class__: tests_ui_utils_data_TestCaseInfo
};
var utils_CallbackTools = function() { };
$hxClasses["utils.CallbackTools"] = utils_CallbackTools;
utils_CallbackTools.__name__ = "utils.CallbackTools";
utils_CallbackTools.expand = function(func) {
	return function(arg) {
		func();
	};
};
utils_CallbackTools.combineVoid = function(f1,f2) {
	return function() {
		f1();
		f2();
	};
};
utils_CallbackTools.combineFirst = function(f1,f2) {
	return function(t) {
		f1(t);
		f2();
	};
};
utils_CallbackTools.combineSecond = function(f1,f2) {
	return function(t) {
		f1();
		f2(t);
	};
};
var utils__$Changelog_Entry = function(date) {
	this.date = date;
	this.descMap = new haxe_ds_EnumValueMap();
};
$hxClasses["utils._Changelog.Entry"] = utils__$Changelog_Entry;
utils__$Changelog_Entry.__name__ = "utils._Changelog.Entry";
utils__$Changelog_Entry.prototype = {
	date: null
	,descMap: null
	,getLength: function() {
		return this.date.length + 2 + this.descMap.get(Preferences.language.get()).length;
	}
	,format: function() {
		return "<b>" + this.date + ".</b> " + this.descMap.get(Preferences.language.get());
	}
	,__class__: utils__$Changelog_Entry
};
var utils_Changelog = function() { };
$hxClasses["utils.Changelog"] = utils_Changelog;
utils_Changelog.__name__ = "utils.Changelog";
utils_Changelog.init = function() {
	var raw = JSON.parse(haxe_Resource.getString("changelog"));
	var _g = 0;
	var _g1 = js_Boot.__cast(raw , Array);
	while(_g < _g1.length) {
		var rawEntry = _g1[_g];
		++_g;
		var entry = new utils__$Changelog_Entry(Reflect.field(rawEntry,"date"));
		var _g2 = 0;
		var _g3 = dict_Language.__empty_constructs__.slice();
		while(_g2 < _g3.length) {
			var language = _g3[_g2];
			++_g2;
			entry.descMap.set(language,Reflect.field(rawEntry,$hxEnums[language.__enum__].__constructs__[language._hx_index]._hx_name));
		}
		utils_Changelog.changelog.push(entry);
	}
};
utils_Changelog.getFirstLength = function() {
	return utils_Changelog.changelog[0].getLength();
};
utils_Changelog.getFirst = function() {
	return utils_Changelog.changelog[0].format();
};
utils_Changelog.getAll = function() {
	var _this = utils_Changelog.changelog;
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = _this[i].format();
	}
	return result.join("\n");
};
var utils_FileLoader = function() { };
$hxClasses["utils.FileLoader"] = utils_FileLoader;
utils_FileLoader.__name__ = "utils.FileLoader";
utils_FileLoader.loadText = function(path,callback) {
	var req = new XMLHttpRequest();
	req.onload = function() {
		callback(req.responseText);
	};
	req.open("GET",path,false);
	req.send();
};
var utils_YamlNode = $hxEnums["utils.YamlNode"] = { __ename__:"utils.YamlNode",__constructs__:null
	,BoolVal: ($_=function(value) { return {_hx_index:0,value:value,__enum__:"utils.YamlNode",toString:$estr}; },$_._hx_name="BoolVal",$_.__params__ = ["value"],$_)
	,IntVal: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"utils.YamlNode",toString:$estr}; },$_._hx_name="IntVal",$_.__params__ = ["value"],$_)
	,FloatVal: ($_=function(value) { return {_hx_index:2,value:value,__enum__:"utils.YamlNode",toString:$estr}; },$_._hx_name="FloatVal",$_.__params__ = ["value"],$_)
	,StringVal: ($_=function(value) { return {_hx_index:3,value:value,__enum__:"utils.YamlNode",toString:$estr}; },$_._hx_name="StringVal",$_.__params__ = ["value"],$_)
};
utils_YamlNode.__constructs__ = [utils_YamlNode.BoolVal,utils_YamlNode.IntVal,utils_YamlNode.FloatVal,utils_YamlNode.StringVal];
utils_YamlNode.__empty_constructs__ = [];
var utils_PlainYamlDict = function() {
	this.map = new haxe_ds_StringMap();
};
$hxClasses["utils.PlainYamlDict"] = utils_PlainYamlDict;
utils_PlainYamlDict.__name__ = "utils.PlainYamlDict";
utils_PlainYamlDict.prototype = {
	map: null
	,getNode: function(key) {
		return this.map.h[key];
	}
	,getBool: function(key) {
		var node = this.map.h[key];
		if(node == null) {
			return null;
		} else if(node._hx_index == 0) {
			var value = node.value;
			return value;
		} else {
			return null;
		}
	}
	,getInt: function(key) {
		var node = this.map.h[key];
		if(node == null) {
			return null;
		} else if(node._hx_index == 1) {
			var value = node.value;
			return value;
		} else {
			return null;
		}
	}
	,getFloat: function(key) {
		var node = this.map.h[key];
		if(node == null) {
			return null;
		} else {
			switch(node._hx_index) {
			case 1:
				var value = node.value;
				return value;
			case 2:
				var value = node.value;
				return value;
			default:
				return null;
			}
		}
	}
	,getString: function(key) {
		var node = this.map.h[key];
		if(node == null) {
			return null;
		} else {
			switch(node._hx_index) {
			case 0:
				var value = node.value;
				if(value == null) {
					return "null";
				} else {
					return "" + value;
				}
				break;
			case 1:
				var value = node.value;
				if(value == null) {
					return "null";
				} else {
					return "" + value;
				}
				break;
			case 2:
				var value = node.value;
				if(value == null) {
					return "null";
				} else {
					return "" + value;
				}
				break;
			case 3:
				var value = node.value;
				return value;
			}
		}
	}
	,set: function(key,rawValue) {
		if(rawValue == "true") {
			this.map.h[key] = utils_YamlNode.BoolVal(true);
		} else if(rawValue == "false") {
			this.map.h[key] = utils_YamlNode.BoolVal(false);
		} else if(new EReg("[\\s\\S]*[^\\d\\.][\\s\\S]*","g").match(rawValue) || hx_strings_Strings.countMatches(rawValue,".") > 1) {
			this.map.h[key] = utils_YamlNode.StringVal(rawValue);
		} else if(Std.parseInt(rawValue) != null) {
			this.map.h[key] = utils_YamlNode.IntVal(Std.parseInt(rawValue));
		} else {
			var f = parseFloat(rawValue);
			if(!isNaN(f)) {
				var this1 = this.map;
				var value = utils_YamlNode.FloatVal(parseFloat(rawValue));
				this1.h[key] = value;
			} else {
				this.map.h[key] = utils_YamlNode.StringVal(rawValue);
			}
		}
	}
	,__class__: utils_PlainYamlDict
};
var utils_PlainYamlParser = function() { };
$hxClasses["utils.PlainYamlParser"] = utils_PlainYamlParser;
utils_PlainYamlParser.__name__ = "utils.PlainYamlParser";
utils_PlainYamlParser.parse = function(text) {
	var dict = new utils_PlainYamlDict();
	var lines = text.split("\n");
	var _g = 0;
	while(_g < lines.length) {
		var line = lines[_g];
		++_g;
		var splitted = line.split(":");
		dict.set(StringTools.trim(splitted[0]),StringTools.trim(splitted.slice(1).join(":")));
	}
	return dict;
};
var utils_CharIterator = function(s) {
	this.s = s;
	this.length = s.length;
	this.i = 0;
};
$hxClasses["utils.CharIterator"] = utils_CharIterator;
utils_CharIterator.__name__ = "utils.CharIterator";
utils_CharIterator.prototype = {
	s: null
	,length: null
	,i: null
	,hasNext: function() {
		return this.i < this.length;
	}
	,next: function() {
		return this.s.charAt(this.i++);
	}
	,__class__: utils_CharIterator
};
var utils_StringUtils = function() { };
$hxClasses["utils.StringUtils"] = utils_StringUtils;
utils_StringUtils.__name__ = "utils.StringUtils";
utils_StringUtils.iterator = function(s) {
	return new utils_CharIterator(s);
};
utils_StringUtils.isAlpha = function(char) {
	if(!(char.charCodeAt(0) >= 97 && char.charCodeAt(0) <= 122)) {
		if(char.charCodeAt(0) >= 65) {
			return char.charCodeAt(0) <= 90;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
utils_StringUtils.isNumeric = function(char) {
	if(char.charCodeAt(0) >= 48) {
		return char.charCodeAt(0) <= 57;
	} else {
		return false;
	}
};
utils_StringUtils.isAlphaNumeric = function(char) {
	if(!(char.charCodeAt(0) >= 48 && char.charCodeAt(0) <= 57)) {
		if(!(char.charCodeAt(0) >= 97 && char.charCodeAt(0) <= 122)) {
			if(char.charCodeAt(0) >= 65) {
				return char.charCodeAt(0) <= 90;
			} else {
				return false;
			}
		} else {
			return true;
		}
	} else {
		return true;
	}
};
utils_StringUtils.isLowerCase = function(char) {
	if(char.charCodeAt(0) >= 97) {
		return char.charCodeAt(0) <= 122;
	} else {
		return false;
	}
};
utils_StringUtils.isUpperCase = function(char) {
	if(char.charCodeAt(0) >= 65) {
		return char.charCodeAt(0) <= 90;
	} else {
		return false;
	}
};
utils_StringUtils.asFrankenstein = function(str) {
	var converted = "";
	var letter = $iterator(utils_StringUtils)(str.toLowerCase());
	while(letter.hasNext()) {
		var letter1 = letter.next();
		if(letter1.charCodeAt(0) >= 48 && letter1.charCodeAt(0) <= 57 || (letter1.charCodeAt(0) >= 97 && letter1.charCodeAt(0) <= 122 || letter1.charCodeAt(0) >= 65 && letter1.charCodeAt(0) <= 90)) {
			converted += letter1;
		}
	}
	return converted;
};
utils_StringUtils.asPhrase = function(str) {
	var converted = "";
	var i = 0;
	var letter = $iterator(utils_StringUtils)(str);
	while(letter.hasNext()) {
		var letter1 = letter.next();
		if(i == 0) {
			converted += letter1.toUpperCase();
		} else if(letter1 == "_") {
			converted += " ";
		} else if(letter1.charCodeAt(0) >= 65 && letter1.charCodeAt(0) <= 90) {
			converted += " " + letter1.toLowerCase();
		} else {
			converted += letter1;
		}
		++i;
	}
	return converted;
};
utils_StringUtils.capitalize = function(str) {
	return str.charAt(0).toUpperCase() + HxOverrides.substr(str,1,null).toLowerCase();
};
utils_StringUtils.clean = function(orig,maxChars,isLegalChar) {
	var formerText = StringTools.trim(orig);
	var text = "";
	var newLength = formerText.length;
	if(maxChars != null && maxChars < newLength) {
		newLength = maxChars;
	}
	var _g = 0;
	var _g1 = newLength;
	while(_g < _g1) {
		var index = _g++;
		if(isLegalChar == null) {
			if(utils_StringUtils.isLegalForChat(HxOverrides.cca(formerText,index))) {
				text += formerText.charAt(index);
			}
		} else if(isLegalChar(formerText.charAt(index))) {
			text += formerText.charAt(index);
		}
	}
	return text;
};
utils_StringUtils.isLegalForChat = function(code) {
	if(code == 35 || code == 59 || code == 47 || code == 92 || code == 124) {
		return false;
	} else if(code < 32) {
		return false;
	} else if(code > 126 && code < 161) {
		return false;
	} else {
		return true;
	}
};
utils_StringUtils.shorten = function(orig,maxChars,addDots) {
	if(addDots == null) {
		addDots = true;
	}
	if(maxChars == null) {
		maxChars = 10;
	}
	if(orig.length > maxChars) {
		if(addDots) {
			return HxOverrides.substr(orig,0,maxChars - 3) + "...";
		} else {
			return HxOverrides.substr(orig,0,maxChars);
		}
	} else {
		return orig;
	}
};
utils_StringUtils.eloToStr = function(value) {
	switch(value._hx_index) {
	case 0:
		return "−";
	case 1:
		var elo = value.elo;
		return "" + elo + "?";
	case 2:
		var elo = value.elo;
		return "" + elo;
	}
};
var utils_TimeControl = function(startSecs,bonusSecs) {
	this.startSecs = startSecs;
	this.bonusSecs = bonusSecs;
};
$hxClasses["utils.TimeControl"] = utils_TimeControl;
utils_TimeControl.__name__ = "utils.TimeControl";
utils_TimeControl.numRep = function(v) {
	if(v < 10) {
		return "0" + v;
	} else {
		return "" + v;
	}
};
utils_TimeControl.secsToString = function(secs) {
	var secsRounded = Math.floor(secs);
	var secsLeft = secsRounded % 60;
	var minsLeft = (secsRounded - secsLeft) / 60;
	var minRepresentation = minsLeft < 10 ? "0" + minsLeft : "" + minsLeft;
	var secRepresentation = secsLeft < 10 ? "0" + secsLeft : "" + secsLeft;
	var str = "" + minRepresentation + ":" + secRepresentation;
	if(secs < 10) {
		var hundredths = "" + Math.floor((secs - secsRounded) * 100);
		while(hundredths.length < 2) hundredths += "0";
		str += "." + hundredths;
	}
	return str;
};
utils_TimeControl.correspondence = function() {
	return new utils_TimeControl(0,0);
};
utils_TimeControl.normal = function(startMins,bonusSecs) {
	return new utils_TimeControl(Math.round(startMins * 60),bonusSecs);
};
utils_TimeControl.prototype = {
	startSecs: null
	,bonusSecs: null
	,toString: function() {
		if(this.startSecs == 0 && this.bonusSecs == 0) {
			return dict_Dictionary.getPhrase(dict_Phrase.CORRESPONDENCE_TIME_CONTROL_NAME);
		} else if(this.startSecs % 60 == 0) {
			var startMins = Math.round(this.startSecs / 60);
			return "" + startMins + "+" + this.bonusSecs;
		} else {
			return "" + this.startSecs + ("s+" + this.bonusSecs);
		}
	}
	,getType: function() {
		var determinant = this.startSecs + 40 * this.bonusSecs;
		if(determinant == 0) {
			return net_shared_TimeControlType.Correspondence;
		} else if(determinant < 60) {
			return net_shared_TimeControlType.Hyperbullet;
		} else if(determinant < 180) {
			return net_shared_TimeControlType.Bullet;
		} else if(determinant < 600) {
			return net_shared_TimeControlType.Blitz;
		} else if(determinant < 3600) {
			return net_shared_TimeControlType.Rapid;
		} else {
			return net_shared_TimeControlType.Classic;
		}
	}
	,__class__: utils_TimeControl
};
var utils_exceptions_AlreadyInitializedException = function(message,previous,pos) {
	if(message == null) {
		message = "Already initialized";
	}
	haxe_exceptions_PosException.call(this,message,previous,pos);
};
$hxClasses["utils.exceptions.AlreadyInitializedException"] = utils_exceptions_AlreadyInitializedException;
utils_exceptions_AlreadyInitializedException.__name__ = "utils.exceptions.AlreadyInitializedException";
utils_exceptions_AlreadyInitializedException.__super__ = haxe_exceptions_PosException;
utils_exceptions_AlreadyInitializedException.prototype = $extend(haxe_exceptions_PosException.prototype,{
	__class__: utils_exceptions_AlreadyInitializedException
});
function $iterator(o) { if( o instanceof Array ) return function() { return new haxe_iterators_ArrayIterator(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
function $getIterator(o) { if( o instanceof Array ) return new haxe_iterators_ArrayIterator(o); else return o.iterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
$hxClasses["Math"] = Math;
js_Boot.__toStr = ({ }).toString;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = "String";
$hxClasses["Array"] = Array;
Array.__name__ = "Array";
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_Resource.content = [{ name : "haxeui-core/styles/shared/down-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAYAAABCxiV9AAAEHnpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja1VZbkuw2CP3XKrIEAUJIy9GzKjvI8nMk2337WTM3mXzEahs1RoA4gOzGX39O9wcuMmIX1FLMMXpcIYfMBZPkj6vsJ/mwn8dlJ6VHvtt/1sVgCagcf1M85S8+3RQcpGCmd4pSO1/Uxxf5NMDpSdFpSJZHjEk/FeVTkfDxgk4F5diWjznZ/RbqOOi5/ghDWlvDo15cPYWf/gdD9LrCjjAPIfF4soTDAVk3Oyl7UvCaliBokSCCpwqfniAg7+Lk77xyL6hcsydUMr8HReIh4cB4DGa80bd80vfBdzvEd5alnTN+5Md+RewxyOuesyc35zh2V0JESOO5qWuLewbBipDLXhYxDLdibntkjOSQvQ2Qd998xWiUiQHLpECdCk0amzZqcDHwYANlbkBl8ZIYZ27iHVAKa9BkkyxdEpBrgFfA5ZsvtO3mba5RguFOkGSCMjrg558ZHxXNuVKeaAUz844V/OKVBHBjIbeekAIgNK880h3gazxfC1cBgrrDnLDB4uuhoiqdubXySDbQAkEFPWqNrJ8KECLYVjiD3A/kI4lSJG/MRoQ4JuBToCihaLgCAlLlDi8ZBRIBTuJlG2uMtiwrH2z0LAChEsUATZYCrAIaG/LHQkIOFRUNqhrVNGnWEiWGqDFGi6v5FRMLphbNLFm2kiSFpCkmS8mlnErmLGiOmmO2nHLOpcBogeaC1QUCpVSuUkPVGqvVVHMtDenTQtMWm7XkWm6lc5eOPtFjt5567mXQQCqNMHTEYSONPMpEqk2ZYeqM02aaeZYbauQOWF/G91GjCzXeSC1Bu6GGpWaXClrtRBdmQIwDAXFbCCCheWHmE4XAbkG3MEPWoSqU4aUucDotxIBgGMQ66YbdL+QecHMh/Cvc+ELOLeh+Ajm3oPuA3Ctub1Dr67RpXtxGaJXhCqoXlJ8WToXrSGn6tqaprOPtC+q+K/i/URTHmLGImavIhsWxeHJuDCTIhmxaMV1nueL3kbqvBN7QpBWfBPgo6D3iE8OWcXK19pLrkpC6Ob8Yx1K0tg0jlrTaR145MmYYJTzYcL/nzCeKhBw1TFSCKcIStumcvG4R/0LH4UsayOGp8AllpcGyjOpQZ7N0f8dS9gM1dNvR96jbk0wV9SpsK3ocVpVtk7842+ewmbe1D66793u40ZCkeOyl4ARHU/rslvvwgqiO0YXz6NNizjfl7UNuum8k8eENWtbwDUcbPkKgsHcU9Lo9deSIOfNFva3vwfoKLhM+czrHsSFDVGpNyLSEt1yt9xJVUsXXSQZqX/n8TeruGVkNDU657ByR8VygYn2snhln7UiXB9PuZ5rIi6J/7tN/19i2TwswHMRPMApyayo/toSLuq8qSSZOiozM/RuoEB6Ee3ucrwAAAYNpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNAHMVfU6WiFQcziDhkqE4tiIo4ShWLYKG0FVp1MLn0C5oYkhQXR8G14ODHYtXBxVlXB1dBEPwAcXRyUnSREv+XFFrEeHDcj3f3HnfvAKFRZZrVNQ5oum2mE3Epl1+RQq8Q0IcwRERlZhnJzEIWvuPrHgG+3sV4lv+5P0e/WrAYEJCIZ5lh2sTrxNObtsF5n1hkZVklPieOmnRB4keuKx6/cS65LPBM0cym54hFYqnUwUoHs7KpEU8RR1RNp3wh57HKeYuzVq2x1j35C8MFfTnDdZojSGARSaQgQUENFVRhI0arToqFNO3HffzDrj9FLoVcFTByzGMDGmTXD/4Hv7u1ipMTXlI4DnS/OM7HKBDaBZp1x/k+dpzmCRB8Bq70tn+jAcx8kl5va5EjYGAbuLhua8oecLkDDD0Zsim7UpCmUCwC72f0TXlg8BboXfV6a+3j9AHIUldLN8DBITBWouw1n3f3dPb275lWfz9tXXKl4mmg1AAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6Yjk3ZjI0MDgtNjFiYi00MDJkLWEyYzctM2M2NjAzOTJlZWZlIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjQ1OTBhZjNmLWY0N2EtNDY2NC04MjM1LWJmYjJiNTI3OWUwYSIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjUwOWE1NTk1LTIyNDItNDg3NS1hN2Y1LWE0MmZjMTVhOWUwNSIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQ0NjEyMjM0MTE1MDA0IgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YWRlZmY5MDctMjQ2NC00YTg2LTljMTMtMTliMTg2NzZkZWY4IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAyLTExVDIxOjQzOjU0Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/Ps+fDsgAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfmAgsUKzYD7eUCAAAAKUlEQVQI12MM7TrynwEHYGRgYGDApmB1mQ0jI4yDrGB1mQ0jhjHoJgAAJK4NSNCarJ8AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/left-arrow-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAANklEQVQImWN8K6PCwMDAwMBwfMYEJjiLgYGBCc5iYGBg3LJlCwMMMFlmFCA4DAwMcD7UAAgfAK7lDFY1UPqoAAAAAElFTkSuQmCC"},{ name : "styles/default/main.css", data : "LmJ1dHRvbiwgLmxhYmVsLCAudGV4dGFyZWEsIC50ZXh0ZmllbGQgew0KICAgIGZvbnQtbmFtZTogIkFyaWFsIjsNCiAgICBfX2ZvbnQtc2l6ZTogMTNweDsNCn0NCg0KLmNvbXBvbmVudDpkaXNhYmxlZCB7DQogICAgY3Vyc29yOiBub3QtYWxsb3dlZDsNCn0"},{ name : "haxeui-core/styles/global.css", data : ""},{ name : "haxeui-core/styles/shared/maximize-button-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsEAAA7BAbiRa+0AAABLSURBVChTY/z//z8DKYBxwqINLz+8fSEG5eMFAsISr5iIVQwCYLUN/TOIdhNILROUTTQYkRoY+xeuf/bx3UtJKB8vAEUciUmDgQEAx9IepVPk2PsAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/sortable-arrows-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAA0UlEQVQIHQHGADn/Ae0cJAAAAAAAAIdYUHmosAAAAAAAAAIAAAAAAACHWFAAAACJWlIAAAAAAAACAAAAh1hQAgICAgICAAAAjV5WAAAAAe0cJAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAI1eVgAAAAAAAAAAAAMDA3CfpwIAAABzoqoAAAADAwMDAwNwn6cAAAACAAAAAAAAc6KqAAAAcJ+nAAAAAAAA2WwUSXgyq8MAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/buttons.css", data : ""},{ name : "haxeui-core/styles/default/tabs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogVEFCQkFSIChUT1ApDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnRhYmJhciB7DQogICAgcGFkZGluZy1sZWZ0OiAwcHg7DQogICAgcGFkZGluZy1yaWdodDogMHB4Ow0KICAgIGhlaWdodDogYXV0bzsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLXRvcC13aWR0aDogMHB4Ow0KICAgIGNsaXA6IHRydWU7DQp9DQoNCi50YWJiYXIgPiAudGFiYmFyLWNvbnRlbnRzIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4Ow0KICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi50YWJiYXItYnV0dG9uIHsNCiAgICBib3JkZXItcmFkaXVzOiAwcHg7DQogICAgYmFja2dyb3VuZDogJHNvbGlkLWJhY2tncm91bmQtY29sb3ItZG93biAkc29saWQtYmFja2dyb3VuZC1jb2xvci1kb3duIHZlcnRpY2FsOw0KICAgIHBhZGRpbmc6IDdweCA4cHg7DQogICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTsNCiAgICBib3JkZXItbGVmdC13aWR0aDogMHB4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLnRhYmJhci1idXR0b24gLmljb24gew0KICAgIHBvaW50ZXItZXZlbnRzOiBub25lOw0KfQ0KDQoudGFiYmFyLWJ1dHRvbi5maXJzdCB7DQogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDFweDsNCn0NCg0KLnRhYmJhci1idXR0b246aG92ZXIgew0KICAgIGJhY2tncm91bmQ6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yIHZlcnRpY2FsOw0KICAgIGJvcmRlci1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7DQp9DQoNCi50YWJiYXItYnV0dG9uOmRvd24gew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KfQ0KDQoudGFiYmFyLWJ1dHRvbjphY3RpdmUgew0KICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLWxlZnQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAwcHg7DQp9DQoNCi50YWJiYXItYnV0dG9uLXNlbGVjdGVkLmZpcnN0OmFjdGl2ZSB7DQogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDFweDsNCn0NCg0KLnRhYmJhci1idXR0b24tc2VsZWN0ZWQgew0KICAgIGJvcmRlci1yYWRpdXM6IDBweDsNCg0KICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDFweDsNCiAgICBib3JkZXItYm90dG9tLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAwcHg7DQogICAgDQogICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICRhY2NlbnQtY29sb3I7DQp9DQoNCi50YWJiYXItYnV0dG9uLXNlbGVjdGVkLmZpcnN0IHsNCiAgICBib3JkZXItbGVmdC13aWR0aDogMXB4Ow0KfQ0KDQoudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZDphY3RpdmUgew0KICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLnRhYmJhci1zY3JvbGwtbGVmdCB7DQogICAgaWNvbjogJGFycm93LWxlZnQ7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBwYWRkaW5nOiA1cHg7DQp9DQoNCi50YWJiYXItc2Nyb2xsLXJpZ2h0IHsNCiAgICBpY29uOiAkYXJyb3ctcmlnaHQ7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBwYWRkaW5nOiA1cHg7DQp9DQoNCi50YWJiYXItYnV0dG9uLXNlbGVjdGVkIC5sYWJlbCB7DQp9DQoNCi50YWJiYXItYnV0dG9uLXNlbGVjdGVkIC5pY29uIHsNCn0NCg0KLnRhYmJhci1idXR0b24gLnRhYi1jbG9zZS1idXR0b24gew0KICAgIHJlc291cmNlOiAkY2xvc2U7DQogICAgdmVydGljYWwtYWxpZ246ICJjZW50ZXIiOw0KICAgIGN1cnNvcjogInBvaW50ZXIiOw0KICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOw0KICAgIHBhZGRpbmc6IDNweDsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQp9DQoNCi50YWJiYXItYnV0dG9uIC50YWItY2xvc2UtYnV0dG9uOmhvdmVyIHsNCiAgICByZXNvdXJjZTogJGNsb3NlLWhvdmVyOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLnRhYmJhciAudGFiYmFyLWJ1dHRvbjpkaXNhYmxlZCB7DQogICAgYm9yZGVyLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCn0NCg0KLnRhYmJhciAudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZDpkaXNhYmxlZCB7DQogICAgYm9yZGVyLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItYm90dG9tLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIFRBQkJBUiAoQk9UVE9NKQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi50YWJiYXI6Ym90dG9tIHsNCiAgICBwYWRkaW5nLWxlZnQ6IDBweDsNCiAgICBwYWRkaW5nLXJpZ2h0OiAwcHg7DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDBweDsNCiAgICBib3JkZXItdG9wLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLXRvcC1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgY2xpcDogdHJ1ZTsNCn0NCg0KLnRhYmJhcjpib3R0b20gLnRhYmJhci1jb250ZW50cyB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDBweDsNCiAgICBib3JkZXItdG9wLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLXRvcC1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgc3BhY2luZzogMDsNCn0NCg0KLnRhYmJhci1idXR0b246Ym90dG9tIHsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOw0KICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAwcHg7DQp9DQoNCi50YWJiYXItYnV0dG9uLmZpcnN0IHsNCiAgICBib3JkZXItbGVmdC13aWR0aDogMXB4Ow0KfQ0KDQoudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZDpib3R0b20gew0KICAgIGJvcmRlci1yYWRpdXM6IDBweDsNCg0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci10b3Atd2lkdGg6IDFweDsNCiAgICBib3JkZXItdG9wLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAwcHg7DQogICAgDQogICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICRhY2NlbnQtY29sb3I7DQp9DQoNCi50YWJiYXI6Ym90dG9tIC50YWJiYXItYnV0dG9uOmFjdGl2ZSB7DQogICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICRhY2NlbnQtY29sb3I7DQogICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci1sZWZ0LWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCn0NCg0KLnRhYmJhcjpib3R0b20gLnRhYmJhci1idXR0b24tc2VsZWN0ZWQ6YWN0aXZlIHsNCiAgICBib3JkZXItdG9wLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi50YWJiYXItYnV0dG9uLXNlbGVjdGVkLmZpcnN0IHsNCiAgICBib3JkZXItbGVmdC13aWR0aDogMXB4Ow0KfQ0KDQoudGFiYmFyOmJvdHRvbSAudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZDpkaXNhYmxlZCB7DQogICAgYm9yZGVyLWNvbG9yOiAkZGlzYWJsZWQtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci10b3AtY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBUQUJCQVIgLSBST1VOREVEIFRBQlMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoucm91bmRlZC10YWJzIC50YWJiYXItYnV0dG9uLmZpcnN0IHsNCiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA0cHg7DQp9DQoucm91bmRlZC10YWJzIC50YWJiYXItYnV0dG9uLmxhc3Qgew0KICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA0cHg7DQp9DQoNCi5yb3VuZGVkLXRhYnMgLnRhYmJhcjpib3R0b20gLnRhYmJhci1idXR0b24gew0KICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDBweDsNCiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMHB4Ow0KfQ0KDQoucm91bmRlZC10YWJzIC50YWJiYXI6Ym90dG9tIC50YWJiYXItYnV0dG9uLmZpcnN0IHsNCiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiA0cHg7DQp9DQoucm91bmRlZC10YWJzIC50YWJiYXI6Ym90dG9tIC50YWJiYXItYnV0dG9uLmxhc3Qgew0KICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiA0cHg7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIFRBQlZJRVcNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoudGFidmlldyB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCn0NCg0KLnRhYnZpZXcgPiAudGFidmlldy10YWJzIHsNCiAgICBtYXJnaW4tdG9wOiAxcHg7DQp9DQoNCi50YWJ2aWV3OmJvdHRvbSA+IC50YWJ2aWV3LXRhYnMgew0KICAgIG1hcmdpbi10b3A6IDBweDsNCn0NCg0KLnRhYnZpZXcgPiAudGFidmlldy1jb250ZW50IHsNCiAgICBib3JkZXI6ICRub3JtYWwtYm9yZGVyLXNpemUgc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgcGFkZGluZzogOHB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLnRhYnZpZXctY29udGVudDpkaXNhYmxlZCB7DQogICAgYm9yZGVyLWNvbG9yOiAkZGlzYWJsZWQtYm9yZGVyLWNvbG9yOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBUQUJWSUVXIEFMVCBTVFlMRVMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY29sbGFwc2libGUtbGFiZWxzIC50YWJiYXItYnV0dG9uIC5sYWJlbCB7DQogICAgaGlkZGVuOiB0cnVlOw0KfQ0KDQouY29sbGFwc2libGUtbGFiZWxzIC50YWJiYXItYnV0dG9uLXNlbGVjdGVkIC5sYWJlbCB7DQogICAgaGlkZGVuOiBmYWxzZTsNCn0NCg0KLmZ1bGwtd2lkdGgtYnV0dG9ucyAudGFiYmFyLWJ1dHRvbiwgLmZ1bGwtd2lkdGgtYnV0dG9ucyAudGFiYmFyID4gLnRhYmJhci1jb250ZW50cyB7DQogICAgd2lkdGg6IDEwMCU7DQp9"},{ name : "haxeui_classmap", data : ""},{ name : "haxeui-core/styles/shared/down-arrow-square-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCgAGYMIUYGBgYt2zZgkWtZUYBmpBlRgEThEIWQpgL4cClGbG6AQAStwro4kB3hAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/maximize-button-white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsEAAA7BAbiRa+0AAAA+SURBVChTY/z//z8DKYAJiPuBGKSLGNwPsgHEIB6QogGkFmYDI0SIIPgP8gNJYLhoaABiWMQQwhNITBoMDAC+tC0XTMGbOQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/minimize-button-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAtSURBVChTY/z//z8DKYAJShMNRjUQA2ivAR7TM3bcxhvlGR6qjCCaxKTBwAAA44UNDW2qEosAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/check-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAC7npUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7ZZRktsgDIbfOUWPYEkIieNgMDO9QY/fH7DdTXZ3Zjvdl87EJEAU+AX6BEk4fv3s4QceyhZDVPOUU9rwxBwzF3R8W0+ZNW1x1uupZ0uP9nB/wTAJWlkfPZ3jLzvdAqsp6OkbIT+FaH/8IsdT35+ETkcyVsTotFMon0LC6ws6Bcra1pay29st7Mdqz/krDD62hqpfMbHVPH+Ohug1hR9hPoRkQ80S1wJkvDlIQSfOmnmaZt9Qk9C5EgTkozhtb1YV3lG5evSJ/QmKpGUPMDwGM93th3bSj4MfZojfeJZ6e36wm9wuHoI8Y9ybh96PtbsSE0Kazk1dW5k9DNwRcpnTEorhrejbLBnFA7K3AnlDYu4olTIxsHSK1KhQp2O2lSqWGPlgQ8tcWabNxThzlS2ATRyFOptkaeLgVoFXYOV7LTT95umuksNxI4xkghgt/Pw95VOh3kfKE21+xwrr4nEosIxBbtQYBSDUrzzSGeCrPD+Dq4CgzjA7Nli2fUnsSmdujTySCVowUNGus0bWTgGECL4Vi0GmR9oSiVKizZiNCHF08CkQchwa3oGAVLlhlRxFEuA4D9+YYzTHsvIy484CCJWEg+QAVMBqXGzIH4uOHCoqGlU1qalr1pIkxaQpJUvj8ismFk0tmZlbtuLi0dWTm3vw7CVzFlyOmlO27DnnUuC0QLlgdsGAUnbeZY+77mm33fe8l4r0qbFqTdWqh5pradyk4Z5oqVnzlls56EAqHfHQIx12+JGP0pFqXXrs2lO37j33clOjsLC+K1+nRhc1nqTGQLupYarZJUHjOtHBDMQ4EojbIICE5sFsc4qRw0A3mG2ZcSqUsUodcBoNYiAYD2LtdLP7Q+6BW4jxn7jxRS4MdN9BLgx0n5B7z+0Daq3MH00Jk9A4hiOom+D4YVBhxwu/SV9vw99OeAm9hF5CL6GX0EvoJfTfCEnHn4eMP+m/Abqro1P5gvhwAAABg2lDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV/TlopUHMwg4pChOlkQFXGUKhbBQmkrtOpgcukXNDEkKS6OgmvBwY/FqoOLs64OroIg+AHi6OSk6CIl/i8ptIjx4Lgf7+497t4BQrPGNCs0Dmi6bWaSCSlfWJEirwhBgIgwYjKzjFR2IQff8XWPAF/v4jzL/9yfo08tWgwISMSzzDBt4nXi6U3b4LxPLLKKrBKfE4+ZdEHiR64rHr9xLrss8EzRzGXmiEViqdzFSheziqkRTxHHVE2nfCHvscp5i7NWq7P2PfkLo0V9Oct1msNIYhEppCFBQR1V1GAjTqtOioUM7Sd8/EOuP00uhVxVMHLMYwMaZNcP/ge/u7VKkxNeUjQBhF8c52MEiOwCrYbjfB87TusECD4DV3rHv9EEZj5Jb3S02BHQvw1cXHc0ZQ+43AEGnwzZlF0pSFMolYD3M/qmAjBwC/Suer2193H6AOSoq6Ub4OAQGC1T9prPu3u6e/v3TLu/HzZ7co91pPc1AAANGGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDplNzljMjQ3Zi00OWY1LTRhZDktODI0ZS02ODI5NDY4ZWVmMDYiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MDIyZmM3MTctMWE3Yi00YWYyLWI0ZDMtZDUwMDRjZjU0YmU5IgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6ZjVlZTBmMGQtODAxZC00NTVmLWI2ZTYtNzllMTZiZGJhZTBmIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NDg5MzAwMzIyNzQxNDkiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpjN2RiNzZkOS1mNDJiLTQ3MmItYWI1YS0xOTVjZGU2MTk1MzUiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDQtMDJUMjI6MDc6MTIiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+zJcIJwAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YEAhQHDA6Y7TQAAAClSURBVCjPjdExToJBEIbhIQj5o4lHoKCgsJZCK09BbbgHtS0lgYLSA1hyCgq10Ct4AELgoWASkITsfs1mZ993MpONqAgGeEX3pgK+j4hVRPSisvvMMRs8lOAX7FOYlOBb/CS8RrckTBPe4vH8YYg/LNHO2hN2Kbxddho5ZYEGX3n/RnMptDA/kz7z3OH52rxtvPufaWnJDj4S/sVdzSc1GKN/jTkAigfW4fXHmp4AAAAASUVORK5CYII"},{ name : "haxeui-core/locale/de/std-strings.properties", data : "c2F2ZT1TcGVpY2hlcm4NCnllcz1KYQ0Kbm89TmVpbg0KY2xvc2U9U2NobGllc3Nlbg0Kb2s9T0sNCmNhbmNlbD1BYmJyZWNoZW4NCmFwcGx5PUFud2VuZGVuDQpzZWFyY2g9U3VjaGUNCg0KcmVkPVJvdA0KZ3JlZW49R3LDvG4NCmJsdWU9QmxhdQ0KaHVlPUZhcmJ0b24NCnNhdHVyYXRpb249U8OkdHRpZ3VuZw0KYnJpZ2h0bmVzcz1IZWxsaWdrZWl0DQo"},{ name : "haxeui-core/styles/default/main.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogR0VORVJBTA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5jb21wb25lbnQgew0KfQ0KDQouYWJzb2x1dGUgew0KICAgIGNsaXA6IHRydWU7DQp9DQoNCi5jdXN0b20tY29tcG9uZW50LCAuYW5pbWF0aW9uIHsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBoZWlnaHQ6IGF1dG87DQp9DQoNCi5tb2RhbC1iYWNrZ3JvdW5kIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbW9kYWwtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBvcGFjaXR5OiAwLjc1Ow0KfQ0KDQoubW9kYWwtY29tcG9uZW50IHsNCiAgICBmaWx0ZXI6IGJsdXIoMSk7DQp9DQoNCi5wb3B1cCB7DQogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygyLCA0NSwgIzAwMDAwMCwgMC4xNSwgNiwgMSwgMzAsIDM1LCBmYWxzZSk7DQp9DQoNCkBrZXlmcmFtZXMgYW5pbWF0aW9uRmFkZUluIHsNCiAgICAwJSB7DQogICAgICAgIG9wYWNpdHk6IDA7DQogICAgfQ0KICAgIDEwMCUgew0KICAgICAgICBvcGFjaXR5OiAxOw0KICAgIH0NCn0NCg0KLmZhZGUtaW4gew0KICAgIGFuaW1hdGlvbjogYW5pbWF0aW9uRmFkZUluIDAuMXMgbGluZWFyIDBzIDE7DQp9DQoNCi5mYWRlLW91dCB7DQogICAgYW5pbWF0aW9uOiBhbmltYXRpb25GYWRlSW4gMC4xcyBsaW5lYXIgMHMgMSByZXZlcnNlOw0KfQ0KDQouZGVmYXVsdC1iYWNrZ3JvdW5kIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQouZGVmYXVsdC1iYWNrZ3JvdW5kLXNvbGlkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogR0VORVJBTA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi50ZXh0LXRpbnkgew0KICAgIGZvbnQtc2l6ZTogMTBweDsNCn0NCg0KLnRleHQtc21hbGwgew0KICAgIGZvbnQtc2l6ZTogMTFweDsNCn0NCg0KLnRleHQtbm9ybWFsIHsNCiAgICBmb250LXNpemU6IDEzcHg7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIENPTlRBSU5FUlMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouYm94LCAudmJveCwgLmhib3gsIC5hYnNvbHV0ZSwgLmNvbnRpbnVvdXNoYm94LCAuaGdyaWQsIC52Z3JpZCwgLmdyaWQgew0KICAgIHNwYWNpbmc6IDVweCA1cHg7DQp9DQoNCi5ib3gsIC52Ym94LCAuaGJveCwgLmNvbnRpbnVvdXNoYm94LCAuaGdyaWQsIC52Z3JpZCwgLmdyaWQgew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTEFCRUwNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoubGFiZWwgew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBjb250ZW50LXR5cGU6IGF1dG87DQogICAgY29sb3I6ICRub3JtYWwtdGV4dC1jb2xvcjsNCn0NCiAgICANCi5sYWJlbDpkaXNhYmxlZCB7DQogICAgY29sb3I6ICRkaXNhYmxlZC10ZXh0LWNvbG9yOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBMSU5LDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmxpbmsgew0KICAgIGNvbG9yOiAkYWNjZW50LWNvbG9yLWRhcmtlcjsNCiAgICBmb250LXVuZGVybGluZTogdHJ1ZTsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgcG9pbnRlci1ldmVudHM6IHRydWU7DQp9DQoNCi5saW5rOmhvdmVyIHsNCiAgICBjb2xvcjogJGFjY2VudC1jb2xvcjsNCn0NCg0KLmxpbms6ZG93biB7DQogICAgY29sb3I6ICRhY2NlbnQtY29sb3ItZGFya2VyOw0KfQ0KICAgIA0KLmxpbms6ZGlzYWJsZWQgew0KICAgIGNvbG9yOiAkZGlzYWJsZWQtdGV4dC1jb2xvcjsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogSU1BR0UNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouaW1hZ2Ugew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQouaW1hZ2U6ZGlzYWJsZWQgew0KICAgIGZpbHRlcjogZ3JheXNjYWxlOw0KICAgIG9wYWNpdHk6IC4zOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBEUkFHICYgRFJPUA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5kcmFnZ2FibGUgew0KICAgIGN1cnNvcjogbW92ZTsNCn0NCg0KLmRyYWdnaW5nIHsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogSVRFTSBSRU5ERVJFUlMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouYmFzaWNpdGVtcmVuZGVyZXIgew0KICAgIHdpZHRoOiAxMDAlOw0KfQ0KDQouYmFzaWMtcmVuZGVyZXItY29udGFpbmVyIHsNCiAgICB3aWR0aDogMTAwJTsNCn0NCg0KLmJhc2ljLXJlbmRlcmVyLWxhYmVsIHsNCiAgICB3aWR0aDogMTAwJTsNCn0NCg0KLmJhc2ljaXRlbXJlbmRlcmVyLmF1dG8tc2l6ZSB7DQogICAgd2lkdGg6IGF1dG87DQp9DQoNCi5iYXNpY2l0ZW1yZW5kZXJlci5hdXRvLXNpemUgLmJhc2ljLXJlbmRlcmVyLWNvbnRhaW5lciB7DQogICAgd2lkdGg6IGF1dG87DQp9DQoNCi5iYXNpY2l0ZW1yZW5kZXJlci5hdXRvLXNpemUgLmJhc2ljLXJlbmRlcmVyLWxhYmVsIHsNCiAgICB3aWR0aDogYXV0bzsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU0VDVElPTiBIRUFERVJTDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnNlY3Rpb24taGVhZGVyIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBwYWRkaW5nLWJvdHRvbTogNXB4Ow0KICAgIHBhZGRpbmctdG9wOiAxNXB4Ow0KfQ0KDQouc2VjdGlvbi1oZWFkZXIgLmxhYmVsIHsNCiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOw0KfQ0KDQouc2VjdGlvbi1oZWFkZXIgLmxpbmUgew0KICAgIGhlaWdodDogMXB4Ow0KICAgIHdpZHRoOiAxMDAlOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KfQ0KDQouc2VjdGlvbi1oZWFkZXIuZmlyc3Qgew0KICAgIHBhZGRpbmctdG9wOiAwcHg7DQogICANCn0"},{ name : "haxeui-core/styles/shared/close-button-white.png", data : ""},{ name : "haxeui-core/styles/shared/search.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIw1AUhv+mig8qDnYoIpKhOlkoKuIoVSyChdJWaNXB5KYvaNKQpLg4Cq4FBx+LVQcXZ10dXAVB8AHi6OSk6CIlnpsUWsR44HI//nv+n3vPBYRGhalmVxRQNctIxWNiNrcq9rzChxD6MIqoxEw9kV7MwLO+7qmb6i7Cs7z7/qwBJW8ywCcSzzHdsIg3iGc2LZ3zPnGQlSSF+Jx4wqALEj9yXXb5jXPRYYFnBo1Map44SCwWO1juYFYyVOJp4rCiapQvZF1WOG9xVis11ronf2Egr62kuU5rBHEsIYEkRMiooYwKLERo10gxkaLzmId/2PEnySWTqwxGjgVUoUJy/OB/8Hu2ZmFq0k0KxIDuF9v+GAN6doFm3ba/j227eQL4n4Erre2vNoDZT9LrbS18BAxuAxfXbU3eAy53gNCTLhmSI/lpCYUC8H5G35QDhm6B/jV3bq1znD4AGZrV8g1wcAiMFyl73ePdvZ1z+7enNb8fpuZyvNk619AAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmARgJIBu0NNI+AAABNElEQVQ4y82SzUpCURSFv31uFDqRhr1E9QASBYXjoGewgZIJWsYlrxrSrRwkRuWoXqJRBPYG/cx6ihqUCnZ2ExG7eQ1HtUaHfc75WKy94K8lwUGx1kiIalLRhf7oAXGalVz69ldA8aTuAusgnnl37gGI9uIquFa5OdjJ+KGAYq2RQG3VTNnVUjb7OvzI95uxD6dzh9W9yu72NydmQFJNgnjBzwCFwuYbSFmMSQbvzNB5fmB7hDq23RrKZSRgrKLtiAh0QwGKPhLtxcMAvYhdVpXncAfiNFVwfb8Z+5HB4fmsEeMZYy/HrnH/uF4QYQOk3LHtFsA0MytGjIfonMFcl/JpF0TDi3R0utZPe1GVLvCkcCGiS0AqCJFJatsvWkpErsq5LXeiLQBU8pmqqp7pp77wb/QFm09xUl2IdBcAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/sortable-asc-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAA0UlEQVQIHQHGADn/Ae0cJAAAAAAAANannypZYQAAAAAAAAIAAAAAAADWp58AAADWp58AAAAAAAACAAAA1qefAAAAAAAAAAAA1qefAAAAAe0cJAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAI1eVgAAAAAAAAAAAAMDA3CfpwIAAABzoqoAAAADAwMDAwNwn6cAAAACAAAAAAAAc6KqAAAAcJ+nAAAAAAAAAnQX2cErsvcAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/right-square-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADq3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VZbcuwoDP1nFbMES0JILAfzqJodzPLngN1OutOZSm567tc1ZSQDlsQ54hH6P3+P8Bce3nQLUc1TTmnDE3PMXKD4djxl1bTFVZ8f2025aw9XB6NJIOX49HSOv7XTdmeJCjR9Z8jr2bHfd+R42vcHQ6cjmRExlHYayqch4aODTgPlmNaWstv7Kez9kO02Ez/eMKtxw8QO8fgdDeg1hR9h7kKyoWaJRwAyXw5SllLQDThQC3QWXbWdkQCQZzht76IKj6xcGn3S/kCKpKM9oOEezHTJp+2kz8EPC+J3nqVenu/a65uLO5AXxqN5GKMfsysxAdJ0Tuo2laVh4A7IZf2WUAyvQrdVMooHZG8F5Q0ud5RKmRi0DIrUqNCgvmSlihAjdzZI5sqy2lyMM1fZAniKs9BgkyxNHGxV0Cto5SsWWn7zclfJ4bgRRjLBGB3082vKp4bGmClPtPmFFeLiuSgQxmRu1hgFQmjc8kgXwLfy+ExeBQzqgtkxwbLth4ld6cytmUeyiBYMVMhjrZG10wAggm9FMMj9SFsiUUq0GbMRAUcHPwWGHIuGd1BAqtwQJUeRBHKcp2/8Y7TGsvLRjD0LRKgkMVCTpYCriI0N+WPRkUNFRaOqJjV1zVqSpJg0pWRpbn7FxKKpJTNzy1ZcPLp6cnMPnr1kzoLNUXPKlj3nXAqcFlgu+LtgQCk777LHXfe02+573ktF+tRYtaZq1UPNtTRu0rBPtNSsecutdOpIpR679tSte8+9DKTakBGHjjRs+MijXKxROGj9UL7OGt1Y48XUHGgXa/jV7GaC5naikzMwxpHAuE0GkNA8OducYuQwqZucbZmxKpQRpU5yGk3GwGDsxDro4u6NuTveQow/4o1vzIVJ3SuYC5O6T5j7yNsT1lpZu56ExdBchhPUTbD8MKB7YS/zUPuyDN/94Y+hVxsaSOqlQpEq0q3ML967+bCn9sKLAnpuCHGUMyCcvJGO9sT/FdlvjWhbUeCMXzI7DamNopJCsT1NNQadlzQoP5XPDOEkakudR1LH3Xd1bJfMqxPH2HvIwkj1FRB5+C5Eb/JMtbld9Glo/pCH4NbxyQ9fk+Fjh3RP59Qd96RPZ6TXeDvon1jVH0MVvg3RLc83eNeD3Ip7XWj+yO6vyfChgwZuGkfe4sx0v8+ylT35bcFdiISXLLSnhn5l6f/vEX13d5wyvCigP4Z+hyFcbHL4F54nyj1078dQAAABg2lDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TpaIVBzOIOGSoTi2IijhKFYtgobQVWnUwufQLmhiSFBdHwbXg4Mdi1cHFWVcHV0EQ/ABxdHJSdJES/5cUWsR4cNyPd/ced+8AoVFlmtU1Dmi6baYTcSmXX5FCrxDQhzBERGVmGcnMQha+4+seAb7exXiW/7k/R79asBgQkIhnmWHaxOvE05u2wXmfWGRlWSU+J46adEHiR64rHr9xLrks8EzRzKbniEViqdTBSgezsqkRTxFHVE2nfCHnscp5i7NWrbHWPfkLwwV9OcN1miNIYBFJpCBBQQ0VVGEjRqtOioU07cd9/MOuP0UuhVwVMHLMYwMaZNcP/ge/u7WKkxNeUjgOdL84zscoENoFmnXH+T52nOYJEHwGrvS2f6MBzHySXm9rkSNgYBu4uG5ryh5wuQMMPRmyKbtSkKZQLALvZ/RNeWDwFuhd9Xpr7eP0AchSV0s3wMEhMFai7DWfd/d09vbvmVZ/P21dcqXiaaDUAAANGGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDoxMGUxMWRlMi0wNTI1LTQwM2ItOTZhYi1jODYxZDZmMTlhMGEiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6NjIzZTNmZWMtYzg5Yi00MGVhLTljNjktMzFjYTgwODgwMGMyIgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MmM0NTNkMzQtNmI5Mi00NDJjLTlhY2ItMTgyNWYyNzQ0NjFhIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NDQ1ODIzMjkxMjA3NDQiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpiM2YwMzU2NS0xNWQzLTQ4MGEtOGUxYi1kMmZlZTM3NDZmMmMiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjU6MjkiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+OWQ6JAAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YCCwwZHVAUuvsAAAB7SURBVDjLY2AYviCq75gyMeqYcEkwMjIcjeo7Zky2AQwMDOKMjAwHY/qPe5JrAAMDAwP3f4b/G6L7jkWRawADAwMDGwMjw5LYCcfLyTUAL2AhQs0vhv8MiYsLLZeRY8BXRgbG0CVFltvJccHL//8ZvJcWWZ6laUIaBgAAEBYdvIFAlrEAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/close-button-blue.png", data : ""},{ name : "haxeui-core/styles/shared/right-arrow-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAM0lEQVQImWP8////O1lVBgYGBgYGJgYGBqHHtxEcOJ/x////DDDABGe9k1VlgrOgMnDTADWiDmfiE8U7AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/restore-button-white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAEaXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VhtcispDPzPKfYII4EQHIcvVe0N9vjbYiZ+juO8ivP+7FZliAEzmqZRCw1OWP/8beEvXCy1hCRacs35wJVqqtzQKcd5tV3TkXZ9XuNq6f14uN1gDEW08fxa8mX/Nk43gLNp6MkdULmAqL+/UdOFXx6AromiM2J05gVUL6DI5w26ANq5rCPXovdL6Otsr+dPNxRfGqrVL7Pr7uP3pPDeFMwTmVekeKCOkU8C0T8cYsMNQs1RYQgj9GOsqFPUiwkc8sxPt6uCkTnV9NTovVpvPXo+Hh7VSnyZxAcn51v7dDyQPFdlu/5u5lSuHr8fn3pGXTgevO8fs1lsrxmraCnD1fla1NtSdg92HVP41CWAWj4UHwGE7lJRCqJ6IBQmArajDKrEUMIo0aRGRmu3gwYoJl6BoRUzD457sEC7yiO6fskLGSs0nLFA17FlT5FvXGhPW48R9mwFM0+CKRPAyOPi1RJefcDMtwLRUW6+Ai9mdzZouHJewwyKkF1Ole3gt/J4ua4RCop72bdIhWP7CdGFfmWCuIWOMBS05x4knRcAXISpBWSwMxJBNYpCmQ5lViI4skCgBuocE3coQCI8QZJTjBnaFPap8YjSNmVhDAeMI5lBCYk5KrTBLoNYKQniR1NBDDWJkkQki0qRKi3HnLLknDV7UmwaNQUVzapatGorsaQiJRctpdTSKteIpCk1V62l1toa5mxAbni6waC1zj321CX03LWXXnsbCJ+Rhow8dJRRR5s840T+mHnqLLPOtmghlFZasvLSVVZdzRBqFoMlE8umVqxau6l2yfqhvKAaXarxVsoN9aYaRlXfIMjTibhmEIxDIiiuLgECml2zo1BK7Mq5Zkdl7AphkBTXbJIrBgXTIhajN+0Cn4q6cn+kW9D0Tjf+rnLBpXtRuY+6PVNttv02jVsh34Xu1CNi98GmccEf3lUf2/DZjVfbH6D/C1AcapbLMvNjDWtt6t1ZJEcEEiEh6hgkCDFbk6YZJ4vJbawfbWxrxLc0q2XjWtPgg1mR9TdiUXO8/RAQSW6IOOyMFb11VDm856jVEKYoeItYvlFd33dT+NTAzgV/lW34Hd17tjfWJVrp4N5m6kPrIuky2ULqdU2murjjTsm5N814ATUinFhibshuS4Zmg29pmBXnSE7vSD1tGkivyEdm1HwdqziDigkXVSSRjCUl4rl5QuEB9QZwceJZFLVw32nTsNqFXBSmsPaECKiYc4FoQ+6pFbkWKXLQHA3pr6Y4++Tex7tVrnzcGIZHiifDe1r+bt7EduA5MdSgtqrdwYXnK34dLtzT+xO4YB9W+z248HG134MLnznvVbjwey2+Dhe+Iu1X4MLXI+X3cOHVwPsMLnwvjj/ChV/0DIm2pHkliEM9QeDVb5I8P+S6pE8cESR3nDqyHA1nKfziUG4V+SEg5Vhqy9g3/96M32vDnwL8AP0A/QD9AP03gQyHWf/31r+LdBObE5asEgAAAYVpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNAHMVfU6VaKw528GvIUJ0siIo4ShWLYKG0FVp1MLn0C5o0JCkujoJrwcGPxaqDi7OuDq6CIPgB4ujkpOgiJf4vLbSI8eC4H+/uPe7eAUKtxFSzYwJQNctIRCNiOrMq+l7Rg2F0w49BiZl6LLmYguv4uoeHr3dhnuV+7s/Rq2RNBnhE4jmmGxbxBvHMpqVz3icOsoKkEJ8Tjxt0QeJHrssNfuOcd1jgmUEjlZgnDhKL+TaW25gVDJV4mjikqBrlC+kGK5y3OKulCmvek78wkNVWklynOYIolhBDHCJkVFBECRbCtGqkmEjQfsTFP+T44+SSyVUEI8cCylAhOX7wP/jdrZmbmmwkBSJA54ttf4wCvl2gXrXt72Pbrp8A3mfgSmv5yzVg9pP0aksLHQF928DFdUuT94DLHWDgSZcMyZG8NIVcDng/o2/KAP23gH+t0VtzH6cPQIq6Wr4BDg6BsTxlr7u8u6u9t3/PNPv7AVx6cp6IJdMnAAANdmlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDo0NjIyMTgzNS0wMDgzLTQ2ZDEtYTBmMy0yOTExNzNkNjZlZTkiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6YTJkOTdhM2ItNmYzNS00ZjQ0LTllNzgtYjcwM2UwYmNjNDJiIgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MDExNGJhMjEtODdkNi00MTc5LTk5NGQtMzBmMWYxYWM2MGM1IgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2Njk1NDE5ODg1MjQ0ODUiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4zMiIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiCiAgIHhtcDpNZXRhZGF0YURhdGU9IjIwMjI6MTE6MjdUMTA6Mzk6NDcrMDE6MDAiCiAgIHhtcDpNb2RpZnlEYXRlPSIyMDIyOjExOjI3VDEwOjM5OjQ3KzAxOjAwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6ODZjZDAzOTMtYjE2Ny00YTJjLTgwYzQtZmNlYjUxOWQyNjc4IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTExLTI3VDEwOjM5OjQ4Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/PuV9NlcAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsEAAA7BAbiRa+0AAAAHdElNRQfmCxsJJzAPzAr2AAAAPklEQVQoz2NgIBf8//+//z9h0M+IpOE/qTb8J0YNE6lOZyLVKaTbQHMNLEjsBiL8M4Hk8GchxmRGRkZ4BAMAMd5EhARLMlcAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/info-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABUElEQVQ4jaWSu05CQRRF15m5FBZgYWHjKyQan4U91laKpbGgNT7iB/gfvloJsZToD1j4BWqCMSTKD1BAYbwXzrG4YhQuinF3M5m9Zs0D/hlJmpw4bc4HannEzQBg+tQ2Kdf20pUfAdmz+rBq6kSMzQS4GVwErXCnejDS6AFkz+rD1k7dAou/ON/7KMx1IK4zr5o66S6PZxxjafcdYCy1g9TRN4OJ0+a8Vx66tc/XhgAoXL92e5gaC7W9dCUA8GobID0Xenjz1vcg3lkeqDgAETedtGo161nN+kSCatwJANSwpPdcHu2Uo14FweDjEgWt9nPtF5G442IDuYSYOGBUHeV4849MHTdLAluD9a34vJspfBoABK1wB+F+gPadb0X7ncEnoHow0vBRmMMokXwcBSv6VriS+JW/ZvKoOSdi607cLICqVgi4etnOPA5g+Le8A2uUcuHpLgzCAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/minimize-button-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAuSURBVChTY/z//z8DKYAJShMNRjUQA2ivAR7T9V0TGsAMHKCxrAAsT2LSYGAAAMFlDQ2rsh18AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/haxeui_tiny.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAwFBMVEUAAAA+drJml8uevd7K2+1Ee7c1aaBcjsWfv99RhsA7cKqfvt/J2e01aaHJ3Ow1Z56kweGsxuM5cKxzoM9PhMCnxOJBd7SBqdSTtNp6otG90ui2zeetx+RFerM1a6Rllsiow+JDe7qhvt9jlsqfvt9dj8SzzOaoxeJCd7A5bqhVicKAqdOev95ik8SsyOOivuCmw99ThcJ4pNCnv99kl8tomc1+p9RRiMSUtts8drV0oNFdkcibu96IrtdOhL9Cerg7AHaNAAAANXRSTlMASfTz8fHx5uTh4d/T00RE9PLy8fHw5+bl4uHh4eHh39bW0NC/v7m5ubm4tVROSkpIR0ZAQIt9oOEAAACUSURBVBjTRc1FEsMwEETRjpkdZmZmS5FD979VRjVVce/e3zS8MGyMz6DdpuV2x0X/QTPn++uu9pRSDtAl0wRJL4DFzjIuDqIXm8snRlJhc7FTYMnmsgZwZHMpUTjlRZA6rET+t9oAiSl0YatqiugtqLBpMSyyLmzloCe4sNUQnpaxOFy29S+FAK2Rb0/0G+4zw/WbP+FUKshItzNPAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/transparent_px.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAIAAACQd1PeAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAADElEQVQImWN4K6MCAAMnAS7qrFRjAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/sortable-arrows-blue.png", data : ""},{ name : "haxeui-core/styles/default/dialogs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogRElBTE9HUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5kaWFsb2cgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGZpbHRlcjogJGRpYWxvZy1zaGFkb3c7DQogICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIHBhZGRpbmc6IDJweDsNCn0NCg0KLmRpYWxvZy1jb250YWluZXIgew0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi5kaWFsb2ctdGl0bGUgew0KICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7DQogICAgcGFkZGluZzogMTBweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBib3JkZXI6IG5vbmU7DQp9DQoNCi5kaWFsb2ctdGl0bGUtbGFiZWwgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgY29sb3I6ICRkaWFsb2ctdGl0bGUtY29sb3I7DQogICAgdmVydGljYWwtYWxpZ246ICJjZW50ZXIiOw0KfQ0KDQouZGlhbG9nLWNvbnRlbnQgew0KICAgIHBhZGRpbmc6IDEwcHg7DQp9DQoNCi5kaWFsb2ctY29udGVudC1wYWRkaW5nIHsNCiAgICBwYWRkaW5nOiAxMHB4Ow0KfQ0KDQouZGlhbG9nLm5vLXBhZGRpbmcgLmRpYWxvZy1jb250ZW50IHsNCiAgICBwYWRkaW5nOiAwcHg7DQp9DQoNCi5kaWFsb2ctZm9vdGVyLWNvbnRhaW5lciB7DQogICAgcGFkZGluZzogNXB4Ow0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQouZGlhbG9nLWZvb3RlciB7DQogICAgcGFkZGluZzogNXB4Ow0KICAgIGhvcml6b250YWwtYWxpZ246IHJpZ2h0Ow0KfQ0KDQouZGlhbG9nLWNsb3NlLWJ1dHRvbiB7DQogICAgcmVzb3VyY2U6ICRjbG9zZTsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogImNlbnRlciI7DQogICAgY3Vyc29yOiAicG9pbnRlciI7DQogICAgcG9pbnRlci1ldmVudHM6IHRydWU7DQogICAgcGFkZGluZzogM3B4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCn0NCg0KLmRpYWxvZy1jbG9zZS1idXR0b246aG92ZXIgew0KICAgIHJlc291cmNlOiAkY2xvc2UtaG92ZXI7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQouZGlhbG9nLW1pbmltaXplLWJ1dHRvbiB7DQogICAgcmVzb3VyY2U6ICRjb2xsYXBzZTsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogImNlbnRlciI7DQogICAgY3Vyc29yOiAicG9pbnRlciI7DQogICAgcG9pbnRlci1ldmVudHM6IHRydWU7DQogICAgcGFkZGluZzogM3B4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCn0NCg0KLmRpYWxvZy1taW5pbWl6ZS1idXR0b246aG92ZXIgew0KICAgIHJlc291cmNlOiAkY29sbGFwc2UtaG92ZXI7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQouZGlhbG9nLW1heGltaXplLWJ1dHRvbiB7DQogICAgcmVzb3VyY2U6ICRleHBhbmQ7DQogICAgdmVydGljYWwtYWxpZ246ICJjZW50ZXIiOw0KICAgIGN1cnNvcjogInBvaW50ZXIiOw0KICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOw0KICAgIHBhZGRpbmc6IDNweDsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQp9DQoNCi5kaWFsb2ctbWF4aW1pemUtYnV0dG9uOmhvdmVyIHsNCiAgICByZXNvdXJjZTogJGV4cGFuZC1ob3ZlcjsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi5kaWFsb2cgI2ljb25JbWFnZS5pbmZvIHsNCiAgICByZXNvdXJjZTogJGluZm8tbGFyZ2U7DQp9DQoNCi5kaWFsb2cgI2ljb25JbWFnZS5xdWVzdGlvbiB7DQogICAgcmVzb3VyY2U6ICRxdWVzdGlvbi1sYXJnZTsNCn0NCg0KLmRpYWxvZyAjaWNvbkltYWdlLnllc25vIHsNCiAgICByZXNvdXJjZTogJHF1ZXN0aW9uLWxhcmdlOw0KfQ0KDQouZGlhbG9nICNpY29uSW1hZ2Uud2FybmluZyB7DQogICAgcmVzb3VyY2U6ICR3YXJuaW5nLWxhcmdlOw0KfQ0KDQouZGlhbG9nICNpY29uSW1hZ2UuZXJyb3Igew0KICAgIHJlc291cmNlOiAkZXJyb3ItbGFyZ2U7DQp9DQoNCi5tZXNzYWdlYm94IHsNCiAgICBpbml0aWFsLXdpZHRoOiAzMDBweDsNCn0"},{ name : "haxeui-core/styles/default/scrollview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU0NST0xMVklFVw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5zY3JvbGx2aWV3IHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgcGFkZGluZzogMHB4Ow0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGVydGlhcnktYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLnNjcm9sbHZpZXcgLnNjcm9sbHZpZXctY29udGVudHMgew0KICAgIGhlaWdodDogYXV0bzsNCiAgICBzcGFjaW5nOiA1cHg7DQogICAgcGFkZGluZzogNXB4Ow0KICAgIGJvcmRlcjogbm9uZTsNCn0NCg0KLnNjcm9sbHZpZXcubm8tcGFkZGluZyAuc2Nyb2xsdmlldy1jb250ZW50cyB7DQogICAgcGFkZGluZzogMHB4Ow0KfQ0KDQouc2Nyb2xsdmlldy5uby1ib3JkZXIgew0KICAgIGJvcmRlcjogbm9uZTsNCn0NCg0KLnNjcm9sbHZpZXcubm8tYm9yZGVyIC5zY3JvbGwgew0KICAgIGJvcmRlcjogbm9uZTsNCn0NCg0KLnNjcm9sbHZpZXc6YWN0aXZlIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBNT0JJTEUgVkFSSUFOVFMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouc2Nyb2xsdmlldzptb2JpbGUgew0KICAgIG1vZGU6IG1vYmlsZTsNCn0NCg"},{ name : "haxeui-core/styles/shared/warning-medium.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAACB0lEQVRYhe2WP2gUQRTGf+/udibFCbmL8exUjGiiFqlMZdBG8E9rYaWNggqipQRRRBCEJKWljY1gJ2n1LhCbNHIggorWIijkEHYvuWeT083u7GZ3L2JzX7W89+Z7H2/mm1kYYoj/DCm6UF9QpmHmUJRvwSO5yEYRnkpRAeyxt4D7CLDXroG/UISm0AR0hTrdkY+g9c3QT3rmkJxa+56Xq1REAF37MNQcYJRS8KAIVe4JaMtMofKO+PZtgE7LbNDOw5d/AirzjuYAZZDFvHS5BOgbewE4k1JyWpft+TycmbdAV/Ho2DbCYYD3X6o8fjYBwN0rnziyv9Nn/EzHPypn8bPwZp/AL3uz3xzAVHp/UsbTkFIOUrXXs9JmEqAr1FGZC8fCTb2QmE0R9/T1rt07JsBhuy1NjdeLrshsy20FaMtMAVej8XBThwCAa9o0xwcWkGQ7U1HndwiZbJkqIM12XtoZ+IttbZkoQFfxgCdJ+fDYvXKiAFAWdQmblE68B7Rlb6PMJzPngHBHTrpfS6cAx2sXr1F4264hAjPHfiDpV1ria+n+H3DYLooPX6s8fbkPgNFql8kDnbTyvi1vRBOxM6BNM4nDdlE0xnzGawHjtYDGWKZb12nL2OC0aV8B57IwFsCSzPpbuB0u0Jl/1BzQE9FI/AyU5DIql5y5wbAOPN9hziGGGBy/AQa5lYKywFiuAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/sortable-desc-blue.png", data : ""},{ name : "haxeui-core/locale/ru/std-strings.properties", data : "c2F2ZT3QodC+0YXRgNCw0L3QuNGC0YwNCnllcz3QlNCwDQpubz3QndC10YINCmNsb3NlPdCX0LDQutGA0YvRgtGMDQpvaz1PSw0KY2FuY2VsPdCe0YLQvNC10L3QsA0KYXBwbHk90J/RgNC40LzQtdC90LjRgtGMDQpzZWFyY2g90J/QvtC40YHQug0KDQpyZWQ90JrRgNCw0YHQvdGL0LkNCmdyZWVuPdCX0LXQu9C10L3Ri9C5DQpibHVlPdCh0LjQvdC40LkNCmh1ZT3QptCy0LXRgtC+0LLQvtC5INGC0L7QvQ0Kc2F0dXJhdGlvbj3QndCw0YHRi9GJ0LXQvdC90L7RgdGC0YwNCmJyaWdodG5lc3M90K/RgNC60L7RgdGC0YwNCg"},{ name : "haxeui-core/styles/shared/minimize-button-white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAnSURBVChTY/z//z8DKYAJShMNRjUQA2ivATmmCUU5I5ggLWkwMAAA9hYKDVhEBNAAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/sliders.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU0xJREVSUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5ob3Jpem9udGFsLXNsaWRlciB7DQogICAgcGFkZGluZy1sZWZ0OiA1cHg7DQogICAgcGFkZGluZy1yaWdodDogNXB4Ow0KICAgIHBhZGRpbmctdG9wOiAzcHg7DQogICAgcGFkZGluZy1ib3R0b206IDNweDsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgaW5pdGlhbC13aWR0aDogMTUwcHg7DQogICAgYm9yZGVyLXJhZGl1czogJG5vcm1hbC1ib3JkZXItcmFkaXVzOw0KfQ0KDQouaG9yaXpvbnRhbC1zbGlkZXI6YWN0aXZlIC5idXR0b24gew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7DQp9DQoNCi5ob3Jpem9udGFsLXNsaWRlcjphY3RpdmUgLnJhbmdlIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOw0KfQ0KDQouaG9yaXpvbnRhbC1zbGlkZXIgLnNsaWRlci12YWx1ZSB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgaGVpZ2h0OiA4cHg7DQogICAgYm9yZGVyLXJhZGl1czogMXB4Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQouaG9yaXpvbnRhbC1zbGlkZXIud2l0aC1jZW50ZXIgLnJhbmdlLXZhbHVlIHsNCiAgICBib3JkZXItcmFkaXVzOiAwcHg7DQp9DQoNCi5ob3Jpem9udGFsLXNsaWRlciAubWlub3ItdGljayB7DQogICAgbWFyZ2luLXRvcDogMTBweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICB3aWR0aDogMXB4Ow0KICAgIGhlaWdodDogNHB4Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi5ob3Jpem9udGFsLXNsaWRlciAubWFqb3ItdGljayB7DQogICAgbWFyZ2luLXRvcDogMTJweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICB3aWR0aDogMXB4Ow0KICAgIGhlaWdodDogOHB4Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi5ob3Jpem9udGFsLXNsaWRlciAuYnV0dG9uIHsNCiAgICB3aWR0aDogMTFweDsNCiAgICBoZWlnaHQ6IDIwcHg7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgZmlsdGVyOiBub25lOw0KfQ0KICAgIA0KLnZlcnRpY2FsLXNsaWRlciB7DQogICAgcGFkZGluZy10b3A6IDVweDsNCiAgICBwYWRkaW5nLWJvdHRvbTogNXB4Ow0KICAgIHBhZGRpbmctbGVmdDogM3B4Ow0KICAgIHBhZGRpbmctcmlnaHQ6IDNweDsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBpbml0aWFsLWhlaWdodDogMTUwcHg7DQp9DQoNCi52ZXJ0aWNhbC1zbGlkZXI6YWN0aXZlIC5idXR0b24gew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7DQp9DQoNCi52ZXJ0aWNhbC1zbGlkZXI6YWN0aXZlIC5yYW5nZSB7DQogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsNCn0NCg0KLnZlcnRpY2FsLXNsaWRlciAuc2xpZGVyLXZhbHVlIHsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgd2lkdGg6IDhweDsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLnZlcnRpY2FsLXNsaWRlci53aXRoLWNlbnRlciAucmFuZ2UtdmFsdWUgew0KICAgIGJvcmRlci1yYWRpdXM6IDBweDsNCn0NCg0KLnZlcnRpY2FsLXNsaWRlciAubWlub3ItdGljayB7DQogICAgbWFyZ2luLWxlZnQ6IDEwcHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgd2lkdGg6IDRweDsNCiAgICBoZWlnaHQ6IDFweDsNCiAgICBob3Jpem9udGFsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi52ZXJ0aWNhbC1zbGlkZXIgLm1ham9yLXRpY2sgew0KICAgIG1hcmdpbi1sZWZ0OiAxMnB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIHdpZHRoOiA4cHg7DQogICAgaGVpZ2h0OiAxcHg7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoudmVydGljYWwtc2xpZGVyIC5idXR0b24gew0KICAgIHdpZHRoOiAyMHB4Ow0KICAgIGhlaWdodDogMTFweDsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOw0KICAgIGZpbHRlcjogbm9uZTsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogVkFSSUFOVCAtIFNJTVBMRQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5zbGlkZXIuc2ltcGxlLXNsaWRlciAuYnV0dG9uIHsNCiAgICBoZWlnaHQ6IDEycHg7DQogICAgd2lkdGg6IDEycHg7DQp9DQoNCi5zbGlkZXIuc2ltcGxlLXNsaWRlciAucmFuZ2UtdmFsdWUgew0KICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7DQp9DQoNCg"},{ name : "haxeui-core/styles/default/windows.css", data : ""},{ name : "haxeui-core/styles/shared/warning-large.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAANZnpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja3ZlZlhu9DYXfuYosgSQ4LofjOdlBlp8PrJLc6sn+bb8kLbdKXWKRIHBxcUGb9Z9/b/MvfkIsyYSYS6opWX5CDdU3PhR7/bTz7mw47+dH7q/4++W+eX7huSU/RpZ0j3/cd88JrkvjU3wzURn3F/31ixru+cu7ifxtmVqkn+c9Ub0nEn994e4J2rUtm2rJb7fQ13Wdj52U69foWyivZn/4O+O9GVlHvF/ixPLuJVwGiP56I+180PfCQMer8SvnvdyT4ZDP/GTfWGXeR+X5yX1x/11QJF33DTdenZme10/vu/ju/j2hOS5+i5PxXPnlfsvuw3Yev3vPYvZe1+5aSLg03Zt6bOV8YmDH5XIeS7wyv5HP+bwqr2JA7yDk0w7beQ1XnScs2wU3XXPbrXMdbmBi8Mtnrt4PL+dekeyrHwKynQR9ue2zVJlSiOEgvMJd/7TFnXXrWW64wsLTMdI7JnNX+P3feX050d4KeedsefoKu7wmBWZo5PSdUQTE7QeO4nHw4/X+R+MqRDAeNxc22Gy/pujR3dhSHMkJtDAwcr1yzeV5T4CLWDtiDKgPziYn0SVns/fZOfxYiE9jokLS+E4IXIx+YqUPIongkDGszTPZnbE++us2nEUgoiTJhKZKI1YBYgM/ORQw1KLEEGNMMccSa2xJUkgxpZSTkl/LkkOOOeWcS665FSmhwI4ll2JKLa36KpBjrKnmWmqtrbFoY+bG040BrXXfpYcee+q5l157G8BnhBFHGnkUM+po00+Z8MRMM88y62zLLaC0woorrbzKqqttoLZlhx132nmXXXd7Rs2ZK6wfXr8eNfeImj+R0oH5GTUezfkxhVM6iRozIuaDI+JZIwCgvcbMFheCNxo6jZmtnqyIHiujBmc6jRgRDMv5uN0zdj8i9xI3E8Ifxc0/Imc0dH8jckZD90XkPsbtk6hNrTbDijkR0jRUp1oh/RiwSvOlaVH75av5pw/8H0+0eiZ/dolr9BFr22ODzu3NHCG7kFObSkwgNU0KgAXYmbiUmVvMe/gat1182Gs10sPavJPodUmORNabLXlIcmCl+9bm3NOu2mIJrcYkY7pZtsWgzld7udB2ybKZM8eoE/XdnV7Ndr1tCbtgrGOybevq2wLsEnomt6KPrQ1Qt0aL3EmZuTFkRRdgy2MHJhg1JBxDPOThW/SFeXvSDPLHkiC1/Nx55o/DxVKePZuFaWP6PGJvNgB9XmzRje7mhM2hkFUcORuDzBnIEXFtpYF/yRqX6u6x9e4Me9F/3a9Y1sq9UXlriC7umjzuXjVcy0NqowjalTCO4PF5b7g27ED92MtQnf1GPqTQNValzmnbmjgM7xXSlTlX6nG3imtdDtvFQKqS5MADRoAf+DdM93NcS64qYo+DUSr/+Gq+HyAJMG7FxdwuATZ/4SJtdeLwKXk4L9nejXLwLI49JPaw5rY782zuywmQyGgdvDXXtXk0rjJuOZsv0osbe8B8cRs795A6Vcq4BsU1KHXDqNOP7gOQQ8eikGpO1bt+3OYJOZS5mWV2KZt8WNUQ+d37lAZ9yuxYS+mWCCIevts2rPXca/WPJDibpYhcmzXXbicGnCwYBzL5zW6dLMBu+1wa6yhlqddIluojRrqT6+JMnC10y5KkoocVWlm9ovwiO97TQxW5NdADkz+AOhAmFLwcbS92DPBUVzYrSVys4GpnXx1MQBOZe7XNsfyIoGe23dEpBeA8toszxgtYzO+h5v11daOxJuQScVZalY0jmiPcd/hO3AV2qAJ/K2dVCATXjRpz73u4eOjNBQNEMo+iavVGiOMQHvW5t86EBJqSiBukZUs6sCCoHGWHfLEMxCirWG++4IetLotO4YmtkF2tDtLaU22tLlSxhWx1c/S0vCvb5OgotqAIWbAzBXTCoN6nWdVCNRXbg25lIQ53o/SqtYB7CKQRhR0KmzLkMoqwqb052ZsU5ZdI8eVqvhyAF3bxp2J4wR71pMzLk6gX8nJjZy6RnF6kiGhyhhWoBuCrzwuvYqsTSE7hCtxGk7qhuxwhptpX2oU9sLtwYpG6F7OK2Iuc6iZP87270ZE0gJX90kyit9SSuC8LUX4x1zaWaDXB2lqXEVhhIqbPAArocbGFhsdMq8C2jppIfvQU7PkOqG1JuU7Nf0xKrpJS02gR6MMOKN2Hea87r3XbzLUjgMZoeIhECRUqKCOVLtygbGQUkGdzQvg3Kc8DDPd7pBw6zI83ANGCL3IJeaSmE1c32qDaDrcONJr4oIhpOHhEczDHSodIH5hbQ9Fgy4U5mnM2W4CmwIcjUTPxvtYAwlNRnPBlMilrxUWHoiKuijQoX8eohZYYuM3pn2z526v5ZoCSIL1OhblpFtHNbGy8ZiWKhITHKclQMefM6yb55aU06fEm+aBJv5TkwcHZlDK8e6iNVLt/qA2jciOMq6zQZnUc/FQbGj/kUxmN8sy6fZceUm5ABk9n7Kj0tu0gz3RQtdMzMVYmSIpBCHAjhK2mLOoJwurbQU2Kg71I8qlBpltoKH5GotgOFib7na0UtDdEx1Y2kn13mEcBSWdxIqZVX9Kw2gls5QqtSmCAbseArn2hCycS5QSkd0D99ZqOxDt4JtiaCvRNZfqEBY3wqq2xiSBgejXYSD3BbPBy4kUDQ8tgT+giE6nepEL5jtt7oAoqD/zgqBw3WYSqPbEjdGPSpL8NXS2BzLGD5omOa/yI3PAZTsyXrvWZdUjVZJwGRrkzta7nRtB7Uj5VmqMcK3eQZBQ+8TVrtNNRVkIHg9YNvSJxMurQ+Is2Vh1Ix99VgCSZUeV1lyMQRlF4oXjkN9lmpV9maim4KV7ViBYRSj2N4mpGpW0+MrBuMp+sS5S0mvDX5XvcUh6eTxZIWiiilb5X7+UHe5lJudGyQEgR+1vk8J1v0B0966GLNQ4/3ricyWIBcUMjlL1S6uhyb42KmgAxLIuJy6eKtMgJ8C6QmC7ao990yMRDsxHpeNgMBO8mdsx1lsEiEDXGEatU1iRhVF3tagwUoTXlhdduwNGA5pv6SJj12DSyBsm6nT01pc2LCuxdUpBn/JtRZRvtsCWlqXjUlNPv6Nr4cIpKhWjC8MjwpAWeBLyqu6D6VPzadGkYGBEl/L0mMZ8o2ayMsVzsa7u86L/h6JaHStnwkLKL2hG1h48AHPSQa6plVdjgEZ7PbBvPpExYolU5G59ytiOEEyUzRsgTJbpimCcVHWxt0DtCXPAvqnHf1UG0OrAwCpbowrSlO9p9NCwViGbe0YodDkPwhNUkXa0o1CPzg+gX1wceQ+7CWJuo02+KhqYpUpZWOnTY1lrWUi6mFIC6FRto572C8hH0xTxZy1cc5aB0U6OtTKcMV9ByPhWvTd/ZA+jftKI3Z3U4C968sMx6lQoO45EUMN2o1wMseMaLinjGr+d4ow8oyRF2vFSiXk7MKSH9g0iiqC4whSag0aDyQWl+pJEiYrScslif7UmxZZGxp6hqesgIRBINsK02HZQYqBgo+ECLgbTTw1sfs7HQxRxWGzP1hOsWCWuVB2VJKJMq4zouO1F9U/MR9jyXEIowIg0NJTsejaIJyI6pVLSb9Wa7SQswfq2vNdqN/Y2+1mhj+8t97afm0HhVO0zCuVAQZC+xSFMSzXo0poelmX2hCW0i1x0AomeZ4Nth/9KzLVtrmCFntCHI7nQIwAw8kgI1lRVwo23OdrjZ4lTdKARTEJK0RT7YQWOADoudZG1KlhaoGSJJEI7DsPPzHfykUz+NuvkLnfpp1M1PO/VfbLQNLPxXGm1DHforjbah0/6HjfaHvVPe3DAUVFjGHbmyYn7oM9quZKenn6GwkVAq8YVvkDzaWtI+oPgYsemTSVQbKJCR5+qE3maBEDYbKbUF35IwTlC1sM2kAehUXPZOqQsYvE5vTUn2BHClbGIXizqoV3MiC1mHvkSfBj2ao8u5yuqg35ywLp6jqGES1kYWAfT0FLCGWZO+i0HLNTiygxNokr2ryBU2Q4defBZcsSGjumMqCmc+nMLr0PdI/nQdjUHZxPlrZ35xivFyiGH+4BTj5RDD/MEpxsshhvmDU4yX/ZvV130SQJ1a7bdlpPluQD1Ce9zKL69ekBJftlnuaAiLb1GCVETV+Ss2PYVXVtO/qVhHdj2H3AMQYmcITxeztNtU4nF0FshLt8ZeWzrrb+0aeaxEOhVt1mhH6ZfIIxRcOEvSaZ6JCk3NNeZ1BN+Tu+yOKEaq3k7QbSGIq58NPK2rT+vMW/OuHTxGfLrFY354azy0vmcSM09rrs1Jvg6qR9eD6q6tyjkZog/eH77Wc+zLb6C76YG3ufYYkZoy6SuQBXD00EMmGHa1+1xdO5XTdKGqrnP1qkn9ZoA5I67vl5yznaCHD02R32Wzyx9eV6d+5VNTfhaVb73+hE01P8dN/RQ37/1u3jj++u+Bb936id/vsJgTl/P/DCz1qc9VNr/z+tOnPzxuvojJ917/xKvmI9h/D+vmZy79Vaybj2B/i3Va/8+wbreeKb14zfwUijc/5rD8d/3RXzr0/Z+ZCK/tWSH0/wJbsY++8g8MMwAAAYVpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNAHMVfU7UiFQcriDhkqE4WREUEF6liESyUtkKrDiaXfkGThiTFxVFwLTj4sVh1cHHW1cFVEAQ/QBydnBRdpMT/JYUWMR4c9+PdvcfdO0Col5lqdowDqmYZyVhUzGRXxcArBAQwgFl0SczU46nFNDzH1z18fL2L8Czvc3+OXiVnMsAnEs8x3bCIN4inNy2d8z5xiBUlhficeMygCxI/cl12+Y1zwWGBZ4aMdHKeOEQsFtpYbmNWNFTiKeKwomqUL2RcVjhvcVbLVda8J39hMKetpLhOcxgxLCGOBETIqKKEMixEaNVIMZGk/aiHf8jxJ8glk6sERo4FVKBCcvzgf/C7WzM/OeEmBaNA54ttf4wAgV2gUbPt72PbbpwA/mfgSmv5K3Vg5pP0WksLHwF928DFdUuT94DLHWDwSZcMyZH8NIV8Hng/o2/KAv23QM+a21tzH6cPQJq6Wr4BDg6B0QJlr3u8u7u9t3/PNPv7AXylcqvSRSQ9AAANGGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDoxY2JiZjhkYS1iMzk4LTQ2MmItODllZS03YjA2ZTVmZjc5ODIiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6OGMxNWEwOGItNTVlYS00ZjVlLWI3YzktNThiMTYyZWU2Y2I5IgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6YmYxMjk3ZWItYjQ3My00MGI3LWIyZmItNmJmOWZjOWIyMzgzIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NDQzMTUxOTg4MzU2NDEiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDplYzBmNzFmZC1lY2RkLTQzZmUtODg2ZS1jY2E2ZWE3NzIxYjQiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMDhUMTE6MTM6MTgiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+r+VeFwAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB+YCCAoNEvg9o2MAAAI2SURBVGje7Zg/SxxBHIafWW9375RwnCIpNVhYpEuQQCDoETAiKUMqv0CaBPI5AoHYxI9gYxMJpIoKudQWtqm0EIMWh8F4Ziddsllvd2ZnZnGPzFst92f3985788zLgZeXl5fX/yxR1Y3lTjyH4CkAifgguhffqnhOUMnwPVoI8QzoAB0C+Vx+vjU+MgYYxI9BtlKvNBm77I6EAbkXTQP3rr/Bfbkb3a5/AlKs5Nw3ALFSawNyN54H5go+ckfuxPO1NCAPGAOWNZ74RH6kUb8EvscPgCm1UyYZjxdqZUD2aIF4VOL0WXSFVTcJXMemSs6wan0Sy71oGileZBfj1Zu7nPVDAKbaA96+Psh+NQG5IRYvj282gRxsho3kz3UUJlSFVSsDRdiMQjnUjGusGhtQYTO96mkzrrFqnoACm2Hj79BRfgLWWDUyoIPNfxNIKsOqWQIa2EwPHaoMWGC1tIHctpk1kKZQQ2rc2Kytlk8gv22a7QFLrJYyoNE2zfaABVa1DWi3TbM9YIxV/QR02+aQoUOdPWCIVa0uJHu0GDRflixsNrogid6Jbv+HmwTKt01baWNVaUAXm1kdnTR5vzXDxtYMRydNg9NSD6vqBDSxmdX65iy9/Q5f9jusb84anlFqrAausJlV/zwcel1SSqwGrrCZ1drqIe2JK9oTV6ytHtr05UKsioLVf2hjwO1/TXwSSz+/lv0JLVAXBfmzBIy4goLYthGc3viEglN+iW28vLy8vLyG6DeNja+iTRf7RwAAAABJRU5ErkJggg"},{ name : "haxeui-core/locale/en/formats.properties", data : "Zm9ybWF0cy5kYXRlLnNob3J0PSVkLyVtLyVZDQpmb3JtYXRzLmRlY2ltYWwuc2VwZXJhdG9yPS4NCg"},{ name : "haxeui-core/styles/default/accordion.css", data : "LmFjY29yZGlvbiB7DQogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgc3BhY2luZzogMDsNCiAgICBwYWRkaW5nOiAxcHg7DQogICAgcGFkZGluZy1ib3R0b206IDBweDsNCn0NCg0KLmFjY29yZGlvbi1idXR0b24gew0KICAgIGJvcmRlci1yYWRpdXM6IDA7DQogICAgYm9yZGVyOiAwcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgd2lkdGg6IDEwMCU7DQogICAgdGV4dC1hbGlnbjogbGVmdDsNCiAgICBpY29uOiAkYXJyb3ctcmlnaHQtc3F1YXJlOw0KICAgIGljb24tcG9zaXRpb246IGxlZnQ7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJvcmRlci1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4Ow0KICAgIHBhZGRpbmc6IDZweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLmFjY29yZGlvbi1idXR0b246aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOw0KfQ0KDQouYWNjb3JkaW9uLWJ1dHRvbjpkb3duIHsNCiAgICBpY29uOiAkYXJyb3ctZG93bi1zcXVhcmU7DQp9DQoNCi5hY2NvcmRpb24tcGFnZSB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgd2lkdGg6IDEwMCU7DQogICAgYm9yZGVyLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7DQogICAgb3BhY2l0eTogMTsNCiAgICBwYWRkaW5nOiA1cHg7DQp9DQoNCi5hY2NvcmRpb24tcGFnZTpleHBhbmRlZCB7DQogICAgYW5pbWF0aW9uOiBhY2NvcmRpb25BbmltYXRlRXhwYW5kIDAuM3MgZWFzZSAwcyAxOw0KfQ0KDQouYWNjb3JkaW9uLXBhZ2U6Y29sbGFwc2VkIHsNCiAgICBhbmltYXRpb246IGFjY29yZGlvbkFuaW1hdGVDb2xscGFzZSAwLjNzIGVhc2UgMHMgMTsNCn0NCg0KQGtleWZyYW1lcyBhY2NvcmRpb25BbmltYXRlRXhwYW5kIHsNCiAgICAwJSB7DQogICAgICAgIG9wYWNpdHk6IDA7DQogICAgICAgIGhlaWdodDogMCU7DQogICAgfQ0KICAgIDEwMCUgew0KICAgICAgICBvcGFjaXR5OiAxOw0KICAgICAgICBoZWlnaHQ6IDEwMCU7DQogICAgfQ0KfQ0KDQpAa2V5ZnJhbWVzIGFjY29yZGlvbkFuaW1hdGVDb2xscGFzZSB7DQogICAgMCUgew0KICAgICAgICBvcGFjaXR5OiAxOw0KICAgICAgICBoZWlnaHQ6IDEwMCU7DQogICAgfQ0KICAgIDEwMCUgew0KICAgICAgICBvcGFjaXR5OiAwOw0KICAgICAgICBoZWlnaHQ6IDAlOw0KICAgIH0NCn0NCg0KLmFjY29yZGlvbi1wYWdlIC5zY3JvbGx2aWV3IHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgcGFkZGluZy10b3A6IDA7DQogICAgcGFkZGluZy1yaWdodDogMDsNCiAgICBwYWRkaW5nLWxlZnQ6IDA7DQogICAgcGFkZGluZy1ib3R0b206IDA7DQp9DQo"},{ name : "haxeui-core/styles/default/tableview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogSEVBREVSDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmhlYWRlciB7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi5oZWFkZXIgLmNvbHVtbiB7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBpY29uLXBvc2l0aW9uOiBmYXItcmlnaHQ7DQogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDA7DQogICAgdGV4dC1hbGlnbjogbGVmdDsNCiAgICBwYWRkaW5nOiA2cHg7DQogICAgYm9yZGVyLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCn0NCg0KLmhlYWRlciAuY29sdW1uLmxhc3Qgew0KICAgIGJvcmRlci1yaWdodC13aWR0aDogMDsNCn0NCg0KLyoNCi5oZWFkZXIuc2Nyb2xsaW5nIC5jb2x1bW4ubGFzdCB7DQogICAgYm9yZGVyLXJpZ2h0LXdpZHRoOiAxcHg7DQp9DQoqLw0KDQouY29sdW1uLnNvcnRhYmxlIHsNCiAgICBpY29uOiAkYXJyb3ctdXAtZG93bjsNCiAgICBpY29uLXBvc2l0aW9uOiBmYXItcmlnaHQ7DQp9DQoNCi5jb2x1bW4uc29ydC1hc2Mgew0KICAgIGljb246ICRzb3J0LWFzYzsNCn0NCg0KLmNvbHVtbi5zb3J0LWRlc2Mgew0KICAgIGljb246ICRzb3J0LWRlc2M7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIFRBQkxFVklFVw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi50YWJsZXZpZXcgew0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi50YWJsZXZpZXcgLnRhYmxldmlldy1jb250ZW50cyB7DQogICAgc3BhY2luZzogMDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBwYWRkaW5nOiAwcHg7DQp9DQoNCi50YWJsZXZpZXcgLmV2ZW4gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLnRhYmxldmlldyAub2RkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvci1hbHQ7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoudGFibGV2aWV3IC5jb21wb3VuZGl0ZW1yZW5kZXJlciA+IC5pdGVtcmVuZGVyZXIgew0KICAgIGhlaWdodDogYXV0bzsNCiAgICBwYWRkaW5nOiA2cHg7DQp9DQoNCi50YWJsZXZpZXcgLmV2ZW46aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsNCn0NCg0KLnRhYmxldmlldyAub2RkOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3ItaG92ZXI7DQp9DQoNCi50YWJsZXZpZXcgLmNvbXBvdW5kaXRlbXJlbmRlcmVyIC5sYWJlbCB7DQogICAgY29sb3I6ICRub3JtYWwtdGV4dC1jb2xvcjsNCn0NCg0KLnRhYmxldmlldzpkaXNhYmxlZCAubGFiZWwgew0KICAgIGNvbG9yOiAkZGlzYWJsZWQtdGV4dC1jb2xvcjsNCn0NCg0KLnRhYmxldmlldyAuY29tcG91bmRpdGVtcmVuZGVyZXI6c2VsZWN0ZWQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvcjsNCiAgICBjb2xvcjogJHNlbGVjdGlvbi10ZXh0LWNvbG9yOw0KfQ0KDQoudGFibGV2aWV3IC5jb21wb3VuZGl0ZW1yZW5kZXJlcjpzZWxlY3RlZCAubGFiZWwgew0KICAgIGNvbG9yOiAkc2VsZWN0aW9uLXRleHQtY29sb3I7DQp9DQo"},{ name : "haxeui-core/styles/default/textinputs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogVEVYVCBGSUVMRA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi50ZXh0ZmllbGQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7DQogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIHBhZGRpbmc6IDZweCA4cHg7DQogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsNCiAgICBpbml0aWFsLXdpZHRoOiAxNTBweDsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgc3BhY2luZzogNXB4Ow0KICAgIGljb24tcG9zaXRpb246IHJpZ2h0Ow0KICAgIGNvbnRlbnQtdHlwZTogYXV0bzsNCn0NCg0KLnRleHRmaWVsZC5pbnZhbGlkLXZhbHVlIHsNCiAgICBjb2xvcjogJGVycm9yLXRleHQtY29sb3I7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGVycm9yLWJhY2tncm91bmQtY29sb3I7DQogICAgYm9yZGVyLWNvbG9yOiAkZXJyb3ItdGV4dC1jb2xvcjsNCn0NCg0KLnRleHRmaWVsZDphY3RpdmUgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7DQp9DQoNCi50ZXh0ZmllbGQ6ZW1wdHkgew0KICAgIGNvbG9yOiAkbGlnaHRlci10ZXh0LWNvbG9yOw0KfQ0KDQoudGV4dGZpZWxkOmRpc2FibGVkIHsNCiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7DQogICAgY29sb3I6ICRkaXNhYmxlZC10ZXh0LWNvbG9yOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBURVhUIEFSRUENCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoudGV4dGFyZWEgew0KICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7DQogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIHBhZGRpbmc6IDFweDsNCiAgICBmaWx0ZXI6ICRub3JtYWwtaW5uZXItc2hhZG93Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGluaXRpYWwtd2lkdGg6IDE1MHB4Ow0KICAgIGluaXRpYWwtaGVpZ2h0OiAxMDBweDsNCiAgICBjb250ZW50LXR5cGU6IGF1dG87DQp9DQoNCi50ZXh0YXJlYS5pbnZhbGlkLXZhbHVlIHsNCiAgICBjb2xvcjogJGVycm9yLXRleHQtY29sb3I7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGVycm9yLWJhY2tncm91bmQtY29sb3I7DQogICAgYm9yZGVyLWNvbG9yOiAkZXJyb3ItdGV4dC1jb2xvcjsNCn0NCg0KLnRleHRhcmVhOmFjdGl2ZSB7DQogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsNCn0NCg0KLnRleHRhcmVhOmVtcHR5IHsNCiAgICBjb2xvcjogJGxpZ2h0ZXItdGV4dC1jb2xvcjsNCn0NCg0KLnRleHRhcmVhOmRpc2FibGVkIHsNCiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7DQogICAgY29sb3I6ICRkaXNhYmxlZC10ZXh0LWNvbG9yOw0KfQ"},{ name : "haxeui-core/styles/default/steppers.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogVU5BVFRBQ0hFRCBTVEVQUEVSDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnN0ZXBwZXIgew0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi5zdGVwcGVyLWJ1dHRvbiB7DQogICAgcGFkZGluZzogM3B4Ow0KICAgIHBhZGRpbmctdG9wOiA0cHg7DQogICAgcGFkZGluZy1ib3R0b206IDRweDsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQouc3RlcHBlci1idXR0b246aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOw0KfQ0KDQouc3RlcHBlci1idXR0b246ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3ItZG93bjsNCn0NCg0KLnN0ZXBwZXItYnV0dG9uOmRpc2FibGVkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvci1kaXNhYmxlZDsNCn0NCg0KLnN0ZXBwZXItaW5jIHsNCiAgICBpY29uOiAkYXJyb3ctdXA7DQp9DQoNCi5zdGVwcGVyLWRlaW5jIHsNCiAgICBpY29uOiAkYXJyb3ctZG93bjsNCn0NCg0KLnN0ZXBwZXItaW5jOmRvd24gew0KICAgIGljb246ICRhcnJvdy11cDsNCn0NCg0KLnN0ZXBwZXItZGVpbmM6ZG93biB7DQogICAgaWNvbjogJGFycm93LWRvd247DQp9DQoNCi5zdGVwcGVyLXN0ZXAgLnN0ZXBwZXItaW5jLCAuc3RlcHBlci1zdGVwIC5zdGVwcGVyLWRlaW5jIHsNCiAgICBoZWlnaHQ6IDUwJTsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTlVNQkVSIFNURVBQRVIgLSBTVEFOREFSRCBMQVlPVVQNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoubnVtYmVyLXN0ZXBwZXIgew0KICAgIHBhZGRpbmc6IDBweDsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgaW5pdGlhbC13aWR0aDogODBweDsNCiAgICBib3JkZXI6ICRub3JtYWwtYm9yZGVyLXNpemUgc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogJG5vcm1hbC1ib3JkZXItcmFkaXVzOw0KICAgIGZpbHRlcjogJG5vcm1hbC1pbm5lci1zaGFkb3c7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHRlcnRpYXJ5LWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi5udW1iZXItc3RlcHBlciAuc3RlcHBlci12YWx1ZSB7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOw0KICAgIGZpbHRlcjogbm9uZTsNCiAgICBtYXJnaW4tdG9wOiAwcHg7DQp9DQoNCi5udW1iZXItc3RlcHBlciAuc3RlcHBlci1kZWluYyB7DQogICAgaWNvbjogJGFycm93LWxlZnQ7DQogICAgcGFkZGluZy1sZWZ0OiA0cHg7DQogICAgcGFkZGluZy1yaWdodDogNHB4Ow0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQoubnVtYmVyLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmM6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYnV0dG9uLWNvbG9yOw0KICAgIGljb246ICRhcnJvdy1sZWZ0Ow0KfQ0KDQoubnVtYmVyLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmM6ZGlzYWJsZWQgew0KICAgIG9wYWNpdHk6IDAuNTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi5udW1iZXItc3RlcHBlciAuc3RlcHBlci1pbmMgew0KICAgIGljb246ICRhcnJvdy1yaWdodDsNCiAgICBwYWRkaW5nLWxlZnQ6IDRweDsNCiAgICBwYWRkaW5nLXJpZ2h0OiA0cHg7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYmFja2dyb3VuZC1jb2xvcjsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KICAgIG9wYWNpdHk6IDE7DQp9DQoNCi5udW1iZXItc3RlcHBlciAuc3RlcHBlci1pbmM6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWluYzpkb3duIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJ1dHRvbi1jb2xvcjsNCiAgICBpY29uOiAkYXJyb3ctcmlnaHQ7DQp9DQoNCi5udW1iZXItc3RlcHBlciAuc3RlcHBlci1pbmM6ZGlzYWJsZWQgew0KICAgIG9wYWNpdHk6IDAuNTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi5udW1iZXItc3RlcHBlci5pbnZhbGlkLXZhbHVlIHsNCiAgICBjb2xvcjogJGVycm9yLXRleHQtY29sb3I7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGVycm9yLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi5udW1iZXItc3RlcHBlcjphY3RpdmUgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIE5VTUJFUiBTVEVQUEVSIC0gQ0xBU1NJQyBMQVlPVVQNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoubnVtYmVyLXN0ZXBwZXIuY2xhc3NpYy1zdGVwcGVyIHsNCiAgICBsYXlvdXQ6IGNsYXNzaWM7DQp9DQoNCi5udW1iZXItc3RlcHBlci5jbGFzc2ljLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmMgew0KICAgIGljb246ICRhcnJvdy1kb3duOw0KfQ0KDQoubnVtYmVyLXN0ZXBwZXIuY2xhc3NpYy1zdGVwcGVyIC5zdGVwcGVyLWluYyB7DQogICAgaWNvbjogJGFycm93LXVwOw0KfQ0KDQoubnVtYmVyLXN0ZXBwZXIuY2xhc3NpYy1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jOmRvd24gew0KICAgIGljb246ICRhcnJvdy1kb3duOw0KfQ0KDQoubnVtYmVyLXN0ZXBwZXIuY2xhc3NpYy1zdGVwcGVyIC5zdGVwcGVyLWluYzpkb3duIHsNCiAgICBpY29uOiAkYXJyb3ctdXA7DQp9DQoNCi5udW1iZXItc3RlcHBlci5jbGFzc2ljLXN0ZXBwZXIgLnN0ZXBwZXItdmFsdWUgew0KICAgIHRleHQtYWxpZ246IGxlZnQ7DQogICAgbWFyZ2luLXRvcDogMHB4Ow0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBPUFRJT04gU1RFUFBFUg0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5vcHRpb24tc3RlcHBlciB7DQogICAgcGFkZGluZzogMHB4Ow0KICAgIGhlaWdodDogYXV0bzsNCiAgICBpbml0aWFsLXdpZHRoOiAxMDBweDsNCiAgICBib3JkZXI6ICRub3JtYWwtYm9yZGVyLXNpemUgc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogJG5vcm1hbC1ib3JkZXItcmFkaXVzOw0KICAgIGZpbHRlcjogJG5vcm1hbC1pbm5lci1zaGFkb3c7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHRlcnRpYXJ5LWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi5vcHRpb24tc3RlcHBlciAuc3RlcHBlci12YWx1ZSB7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOw0KICAgIGZpbHRlcjogbm9uZTsNCiAgICBtYXJnaW4tdG9wOiAwcHg7DQogICAgcGFkZGluZzogNnB4Ow0KfQ0KDQoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmMgew0KICAgIGljb246ICRhcnJvdy1sZWZ0Ow0KICAgIHBhZGRpbmctbGVmdDogNHB4Ow0KICAgIHBhZGRpbmctcmlnaHQ6IDRweDsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGJvcmRlci1yYWRpdXM6IDA7DQogICAgb3BhY2l0eTogMTsNCn0NCg0KLm9wdGlvbi1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi5vcHRpb24tc3RlcHBlciAuc3RlcHBlci1kZWluYzpkb3duIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJ1dHRvbi1jb2xvcjsNCiAgICBpY29uOiAkYXJyb3ctbGVmdDsNCn0NCg0KLm9wdGlvbi1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jOmRpc2FibGVkIHsNCiAgICBvcGFjaXR5OiAwLjU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItaW5jIHsNCiAgICBpY29uOiAkYXJyb3ctcmlnaHQ7DQogICAgcGFkZGluZy1sZWZ0OiA0cHg7DQogICAgcGFkZGluZy1yaWdodDogNHB4Ow0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItaW5jOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi5vcHRpb24tc3RlcHBlciAuc3RlcHBlci1pbmM6ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1idXR0b24tY29sb3I7DQogICAgaWNvbjogJGFycm93LXJpZ2h0Ow0KfQ0KDQoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItaW5jOmRpc2FibGVkIHsNCiAgICBvcGFjaXR5OiAwLjU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQoub3B0aW9uLXN0ZXBwZXIuaW52YWxpZC12YWx1ZSB7DQogICAgY29sb3I6IHJlZDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZXJyb3ItYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLm9wdGlvbi1zdGVwcGVyOmFjdGl2ZSB7DQogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsNCn0NCg"},{ name : "haxeui-core/styles/shared/left-square-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADqXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VZZliMpDPznFHMEJAESxyFZ3psb9PEnIJeyXa7umi53fXVig1CSkogQi+s//h3uHzzso3chqqWckscTcshcIJjfn7Jq8mHVR8efwp3eXS8YKkEre9fSMf7Uk7+zRAVSvDFk9Xix3b/I4bBvD4YORzIjYgjtMJQPQ8L7CzoMlH1aPmXT2ylsfW/bORPb/25W48RE9+axHxTotQg/wtyFxKNmCXsAMv/spEBQ1CwJAzEIskhetR6RAJBnOPmbqNwjK5dEH+gfSJG06x0U92Cmq32qp/gcfLcgvvEs9fJ8p69vLu5AXhiPZm6Mvs+uhARI0zGpcypLwsANkMv6LKEo/hGyrpJRzCF7KyhvcLmhVMrEQHxQoEaFBvXVVqoIMXBnRctcWZbORDlzFe/AU5iFBiu4amLgr4JegZavWGj5zctdJYPjRhjJBGO008+vKR8aGmOmPJG3CyvExXNRIIzJ3KwxCoTQOPMoLoDP8vhMXgUMxgWzYYLFb7uJLdKRWzOPZBEtGBjR7muNtB0GABF8RwRDAgZ8IomUyCuzEgFHAz8FhgyLhjdQQDFyQ5QcBKtF2Xj6xjdKayxH3tXYs0BElISlZXMxgauAjQ35o8GQQyVKDDHGFDVazLEkSSHFlJKmufkVFQ0aNamqadZiYsGiJVMzZ9lK5izYHGNOWbPlnEuB0wLLBV8XDChl4022sMUtbbrZlrdSkT411FhT1Wqu5loaN2nYJ1pq2qzlVjp1pFIPPfbUtVvPvQyk2pARRhxp6LCRR7lYI7fT+q58njU6WePF1ByoF2v4VPU0QXM7iZMzMMaBwLhOBpDQPDnzRiGwm9RNznxmrIrIiDJOchpNxsBg6MRx0MXdG3N3vLkQvsQbn8y5Sd0rmHOTug+Ye8/bE9ZaWbueuMXQXIYTVC9YfhjQrbCVeah9unX/94O/hr7L0ECyLxGCVJGuZfZ46+ps6CsCYvcbgRydMCPKV0R1pPrHI0IA5S2S4Jf37HESBPywn0ltU4xDutMtLXWcl7UvtO7JC5xE2xIh5M5HB0fjisiu9hai6l4Ekbl7SPoBCa5JgX5JZu4HmXmIw23jIeLfa93tlE2PKRvuR7h6/dzAHUTDvQii4n6Vx+HM4/fk1iE7uRVouWZHevmvte7DATRw49jzNjCOGnrIpnuIcIq8BiLc2F6x9L83ok/sjnNzdC8K6K+h7zCEi012/wGpjcqgKzcemgAAAYVpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNAHMVfU6VFKg4WkeKQoepiQVTEUapYBAulrdCqg8mlH0KThiTFxVFwLTj4sVh1cHHW1cFVEAQ/QBydnBRdpMT/JYUWMR4c9+PdvcfdO0BoVJhqdo0DqmYZ6URczOVXxMArAoggiFEMSMzUk5mFLDzH1z18fL2L8Szvc3+OXqVgMsAnEs8y3bCI14mnNy2d8z5xmJUlhficeMygCxI/cl12+Y1zyWGBZ4aNbHqOOEwsljpY7mBWNlTiKeKoomqUL+RcVjhvcVYrNda6J39hqKAtZ7hOcwgJLCKJFETIqGEDFViI0aqRYiJN+3EPf8Txp8glk2sDjBzzqEKF5PjB/+B3t2ZxcsJNCsWB7hfb/hgGArtAs27b38e23TwB/M/Aldb2VxvAzCfp9bYWPQL6toGL67Ym7wGXO8Dgky4ZkiP5aQrFIvB+Rt+UB/pvgZ5Vt7fWPk4fgCx1tXQDHBwCIyXKXvN4d7Czt3/PtPr7AY5OcrLdt8TMAAAN92lUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDoxMGUxMWRlMi0wNTI1LTQwM2ItOTZhYi1jODYxZDZmMTlhMGEiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6Yzc0ZjNmMmQtNjZhMS00MmFjLWEwYzktODgwYzdmNDkzMjU5IgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MmM0NTNkMzQtNmI5Mi00NDJjLTlhY2ItMTgyNWYyNzQ0NjFhIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NTg4MjQ3Nzg5MDA2ODkiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpiM2YwMzU2NS0xNWQzLTQ4MGEtOGUxYi1kMmZlZTM3NDZmMmMiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjU6MjkiLz4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6ZGNkOTA2MjMtOTYzMi00OGY2LWI3NjYtMzk3NTE1NTY5Nzg2IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTA3LTI2VDEwOjM5OjM4Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/PpOuRqEAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmBxoIJyaHll/0AAAAgklEQVQ4y2NgGBkgqu+YMi45JiI0GzMyMhwly4CY/uOejIwMBxkYGMRJNiC671jUf4b/GxgYGLjxWYLVgNgJx8sZGBmWMDAwsBHyIhOlAYzVgMUFlp0M/xliGBgYfpHtgqVFVssYGRgDGBgYvpLthSWFltv//2ewZ2BgeEmzhDQMAADp6x1bXTBTSgAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/collapsed-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5AoNCwocG2BobAAAAHlJREFUOMtjYBi+YP36bcrEqGPCLfP36Pr1W4zJN4CBQZyB6f/B9Zs2eZJrAAMDAwM3w3/GDRs2bI4i1wAGBgYGtv+MDEs2bNpSTq4BeAELEWp+Mf5nSAzw91lGjgFfGRj/hwb4+20nxwUvGf4xegcG+p6laUIaBgAAk1kg6zuyVSkAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/maximize-button-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsEAAA7BAbiRa+0AAABLSURBVChTY/z//z8DKYBx/YnH5168/24I5eMFEoKc55mIVQwCYLXTt98i2k0gtUxQNtFgRGpgXHPs0fHXH39YQPl4ASjiSEwaDAwA374gqW1irpsAAAAASUVORK5CYII"},{ name : "styles/main.css", data : ""},{ name : "haxeui-core/styles/shared/folder-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADX3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7ZdRlusmDIbfWUWXgCRAYjkYzDndQZffH7DdydzkNHOdt9aMERZYCH0CZ9z+15/d/YGLvXgXolrKKXlcIYfMBQ3z6yqzJh9mfTz4s/Ggd1cHQyWQsh4tHeNPPfkHS1TQil8MWT06tseOHA779s3QMZEMjxiNdhjKhyHh1UGHgbKW5VM2/bqEbV+ynSuxdbtR9TMmusT356CIXouYR5h3IfGoWcJyQMbNTgoahJok82gZ2gG6gu58eIKAPIuT/+KV+07latEL/TcokpbeQfEYzHTJp3qKz4PvZoi/zCz1mvlBX7Zriocgzxj3Zq73fa2uhISQpmNR51JmCwM3hFzmawlFcUe0dZaMYg7ZW4G8+eo3lEqZGFg6BWpUqNM+ZaUKFwPvrJDMlWXqTJQzV2wRcAqjUGeVLA3UWCrwCrR8+UJz3jynq2SYuBFGMsEYLfz8mfLSUO8j5Ym8XbGCXzw2BdwY5EaNUQBC/cyjOAN8lu/X4CogGGeYDQssflsmtkhHbo08kglaMDBCrr1G2g4DCBHmjnCGBAR8IomUyCuzEiGOBj4FhgybhjcgoBi5wUsOIglwjMfceEdpjuXIS40zCyCiJFGgyVLAKuBgQ/5oMORQiRJDjDFFjRZzLElSSDGlpGkcfkVFg0ZNqmqatZhYsGjJ1MxZtpI5Cw7HmFPWbDnnUjBpgeWCtwsGlLLxJlvY4pY23WzLW6lInxpqrKlqNVdzLY2bNJwTLTVt1nIrO+1IpT3scU+77rbnvXSkWpceeuypa7eee7mokVtYfynvU6OTGk9SY6Be1PCq6mmCxnESBzMQ40AgroMAEpoHM28UAruBbjDzmbErIsPLOOA0GsRAMOzEsdPF7h9yD9xcCLe48UnODXSfIOcGuhfkfuX2hFobX5vqxU1CYxuOoHrB9sOA3QpbGR+1t6X76Qv/G3pT9pLTbLZQD6V7NTp5jhTw52vPaWGsodkr2+4DzryxtDAEZ3vDKfcBZ35vaW/HCIsoaxHW6lu+/Au1n0p335cl3YcSexm658uS7jPMenb3fflQHp1hcfd9uZ1Hj4jcfV9u5NGzdHH3ffmtPHqduu6+Lz/Mo6e+/Jc/kB0/V/BvqPsb0xrN2E54p04AAAGFaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDUBSFT1OlIhWRdhBxyFA7WRAVcZQqFsFCaSu06mDy0j9o0pCkuDgKrgUHfxarDi7Oujq4CoLgD4ijk5Oii5R4X1JoEeOFx/s4757De/cBQrPKVLNnAlA1y0gn4mIuvyoGXuFDCEOIQpCYqSczi1l41tc9dVPdxXiWd9+fNaAUTAb4ROI5phsW8QbxzKalc94nDrOypBCfE48bdEHiR67LLr9xLjks8MywkU3PE4eJxVIXy13MyoZKPE0cUVSN8oWcywrnLc5qtc7a9+QvDBa0lQzXaY0igSUkkYIIGXVUUIWFGO0aKSbSdB738I84/hS5ZHJVwMixgBpUSI4f/A9+z9YsTk26ScE40Pti2x9jQGAXaDVs+/vYtlsngP8ZuNI6/loTmP0kvdHRIkfA4DZwcd3R5D3gcgcYftIlQ3IkPy2hWATez+ib8kDoFuhfc+fWPsfpA5ClWS3fAAeHQLRE2ese7+7rntu/Pe35/QBP4XKZ9Ef7VwAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6NmIwMzEyYjItZDE5YS00NTc2LTlkYjAtYjVhNTNmZDRmMjA1IgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOmEyMTJiNWZhLWNjNjgtNDBiZS1hZTA5LTA3NmExZjU5NGY4NiIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjIwMmRiNTQzLTYwMGMtNGUyYi1hNDM4LTcxOTZjMjI4ZWNlZSIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQyNjE0MDI5ODk2ODExIgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YmQ3YTVjZTUtNjE4Yy00MTE0LTg5ZWYtNTg5ZmMxM2Q2OTJlIgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAxLTE5VDE4OjQwOjI5Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/PhbZGncAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmARMRKB1QuojKAAAARUlEQVQ4y2NgGPKAkYGBgWHWig1n0ISfM/z/Py8tMmA9IQOYsAv/l2RgZKietXxjKpkuIA6kRQSYMFEaBqMGDAsDBh4AAD+qEAAUuqhbAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/help-large.png", data : ""},{ name : "haxeui-core/styles/shared/down-arrow-square-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCgAGYMIUYGBhYkk10sKide+YKmtDcM1eYIBSyEMJcCAcuzYjVDQAFcxCadfC9sQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/window-collapse-white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpVorDnbwa8hQnSyIijhKFYtgobQVWnUwufQLmjQkKS6OgmvBwY/FqoOLs64OroIg+AHi6OSk6CIl/i8ttIjx4Lgf7+497t4BQq3EVLNjAlA1y0hEI2I6syr6XtGDYXTDj0GJmXosuZiC6/i6h4evd2Ge5X7uz9GrZE0GeETiOaYbFvEG8cympXPeJw6ygqQQnxOPG3RB4keuyw1+45x3WOCZQSOVmCcOEov5NpbbmBUMlXiaOKSoGuUL6QYrnLc4q6UKa96TvzCQ1VaSXKc5giiWEEMcImRUUEQJFsK0aqSYSNB+xMU/5Pjj5JLJVQQjxwLKUCE5fvA/+N2tmZuabCQFIkDni21/jAK+XaBete3vY9uunwDeZ+BKa/nLNWD2k/RqSwsdAX3bwMV1S5P3gMsdYOBJlwzJkbw0hVwOeD+jb8oA/beAf63RW3Mfpw9AirpavgEODoGxPGWvu7y7q723f880+/sBXHpynoD2GeAAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmCxsJHA1rFqnfAAAAg0lEQVQoz8XRrQoCYRBG4S/slWzbYrII2zabjKa1Gjd4C9a9gb06wSBYDKKoj2VEEX+2iC9MmMOBYWZS+kuQI+8rF1hhjcE3eYiNe7YYvZMr7EJsowSrnuUx9iEsH/gi2AGTG5ziiAuaF5PnOOOEWUIXTf1htzqcLiFD2eN6JbLfP/UK7emlPChzsBQAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/rules.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogUlVMRQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5ydWxlIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCn0NCg0KLmhvcml6b250YWwtcnVsZSB7DQogICAgaGVpZ2h0OiAxcHg7DQogICAgd2lkdGg6IDEwMCU7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogImNlbnRlciI7DQp9DQoNCi52ZXJ0aWNhbC1ydWxlIHsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgd2lkdGg6IDFweDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogImNlbnRlciI7DQp9"},{ name : "haxeui-core/styles/shared/down-square-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADc3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7ZdbktwqDIbfWUWWYEkIieVgLlVnB1l+fmzamb7koWdOHlI1ptrCAktCH2A69J//jfADF2+cQlTzlFPacMUcMxdUfDuvctxpi8d9PWy3yp0+XA0MlUDK+ehp9b/pabuzRAU1/WDI62rY7xtyXPb9wdByJDMiRqUtQ3kZEj4baBko57C2lN0+DmHvp2y3kfj5C/M2bjmxUzw+R0P2msKPMHch2XAX4TMAmT8OUtDAuLNkdCR0mJp8aGhFgoS8ytN1ZUQ0ZqjxZac7KleNXuvDI63Iq4s8JDld8qU+kL6mcqT+g+foq8b3+ryfpsL2kP0j+aP5OMaMUZSYkOq0BnUbylFDvx0upmsPsJdAJ2EOOeQsGcUxqyumQtvqtqNUysTANShSo0KD+iErVYQYuQc2VJgrEE2li3HmKpNfnIUGGxg2cVCsB/YofMVCh9u81XB4c3huhK5MMDanw9slvPvCGHMpEG1+5QpxMc9kI4xJbt7RDURorKTqkeBbebwmVwFBnVmeSyQjsftpYlf6vRPIAVrQUSHPNUjWlgGkCK4VwZCAAKiRKCXajNmIkEgHoILQWSLvIECq3BAkR5EENs7TNV4xOrqyMtQBemxmIKGSxMAGqwywYlTMH4uOOVRUNKpqUlPXrCVJiklTSpbmplhMLAZTS2bmlq24eHT15Obu2UvmLNg0Nads2XPOpcBngeWCtws6lLLzLnvcNexpt933vJeK6VNj1ZqqVa+5lsZNGvaPlpo1b7mVTh1TqceuPXXr3nMvA1NtSBhx6EjDho88ykVtYX0qb1CjRY0PUrOjXdSgNbuZoLmd6GQGYBwigbhNBJjQPJltTjHyJDeZbZmxKpQRpE5mjSYxEIydWAfd2AU+iU5yX+IWLN5x48+SCxPdm+Seub2i1uZnqB7EzlU4k7oJVh/auxf2Mj92TzL8qeFd+W3o29A/bGhgBzmqqEiV9YAPbuEwqzjo8VuSTsuJpVs5dHvo5sPeHstzaOGK7bOhrEjCF9OMiMpRDUds8fSIM6VS1HlCfi0rNqW+xpS74GhzRRz4U9l+lNKD6xqqx4EzwWNkeQrFgeIuJ6k+DTV8fSreG0Kq+uK5XTmbIZvfAqmvArlk+J8C+jb0behvGMJpZP6t/AWjs8C1IYxOjAAAAYRpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNQFIVPU6UiFUE7iChkqJ0siIo4ShWLYKG0FVp1MHnpHzRpSFJcHAXXgoM/i1UHF2ddHVwFQfAHxNHJSdFFSrwvKbSI8cHlfZz3zuG++wChUWGq2TUBqJplpOIxMZtbFQOvCGKUagARiZl6Ir2Ygef6uoeP73dRnuV978/Vp+RNBvhE4jmmGxbxBvHMpqVz3icOsZKkEJ8TjxvUIPEj12WX3zgXHRZ4ZsjIpOaJQ8RisYPlDmYlQyWeJg4rqkb5QtZlhfMWZ7VSY60++QuDeW0lzXWqEcSxhASSECGjhjIqsBClXSPFRIrOYx7+YcefJJdMrjIYORZQhQrJ8YP/we/ZmoWpSTcpGAO6X2z7YwwI7ALNum1/H9t28wTwPwNXWttfbQCzn6TX21r4COjfBi6u25q8B1zuAENPumRIjuSnEgoF4P2MvikHDN4CvWvu3FrnOH0AMjSr5Rvg4BCIFCl73ePdPZ1z+/dOa34/n9lyuQWiUawAAA80aVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOjEwZTExZGUyLTA1MjUtNDAzYi05NmFiLWM4NjFkNmYxOWEwYSIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDplMjljM2RmNi0wYzllLTQ2MDMtYmJiYi0zNGRiYmY0NWI1ODIiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDoyYzQ1M2QzNC02YjkyLTQ0MmMtOWFjYi0xODI1ZjI3NDQ2MWEiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICBHSU1QOkFQST0iMi4wIgogICBHSU1QOlBsYXRmb3JtPSJXaW5kb3dzIgogICBHSU1QOlRpbWVTdGFtcD0iMTY3MjMxNjM2MjY4NDI2OCIKICAgR0lNUDpWZXJzaW9uPSIyLjEwLjMyIgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCIKICAgeG1wOk1ldGFkYXRhRGF0ZT0iMjAyMjoxMjoyOVQxMzoxOToyMSswMTowMCIKICAgeG1wOk1vZGlmeURhdGU9IjIwMjI6MTI6MjlUMTM6MTk6MjErMDE6MDAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpiM2YwMzU2NS0xNWQzLTQ4MGEtOGUxYi1kMmZlZTM3NDZmMmMiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjU6MjkiLz4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6ZGNkOTA2MjMtOTYzMi00OGY2LWI3NjYtMzk3NTE1NTY5Nzg2IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTA3LTI2VDEwOjM5OjM4Ii8+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmRjNDliZjU0LTYyMGYtNGQ4Ny1hYzEzLTQyYWZhNDI5ZGJlOSIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChXaW5kb3dzKSIKICAgICAgc3RFdnQ6d2hlbj0iMjAyMi0xMi0yOVQxMzoxOToyMiIvPgogICAgPC9yZGY6U2VxPgogICA8L3htcE1NOkhpc3Rvcnk+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz497WXVAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5gwdDBMW92s92wAAAItJREFUOMtjYBgFAw8YkTlRfceUGRkZjjIwMIjjUP/y/38G62VFVndhAkzIssuKrO7+/8/gzcDA8BWL5q///zN4I2vGMABqyFlGBsZQBgaGX0jCvxgZGEOXFVmdRVfPhM2dSwottzP8Z0hkYGD4z8DA8J/hP0PikkLL7SQHUOyE4+WxE46XjyYVGgMAMSgm4G3z+p8AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/up-arrow-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAK0lEQVQImWN8K6PCwMDAwMBwfMYEy4wCCJsJLgQnoaJwDpzNuGXLFgYMAADK0A4MJuH53gAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/left-arrow-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAANklEQVQImWN8K6PCwMDAwMAg9Pg2E5zFwMDABGcxMDAw/v//nwEGmN7JqiI4DAwMcD7UAAgfAMkKDTd2MVgoAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/propertygrids.css", data : "LnByb3BlcnR5LWdyaWQgew0KfQ0KDQoucHJvcGVydHktZ3JpZCAuc2Nyb2xsdmlldy1jb250ZW50cyB7DQogICAgcGFkZGluZzogMDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cC1oZWFkZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOw0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHBhZGRpbmc6IDVweDsNCiAgICBib3JkZXItY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDFweDsNCiAgICBib3JkZXItYm90dG9tLXNpemU6IDFweDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cC1oZWFkZXIuc2Nyb2xsaW5nIHsNCiAgICBib3JkZXItcmlnaHQtd2lkdGg6IDBweDsNCiAgICBib3JkZXItcmlnaHQtc2l6ZTogMHB4Ow0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaGVhZGVyOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsNCn0NCg0KLnByb3BlcnR5LWdyb3VwLWhlYWRlci1pY29uIHsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaGVhZGVyOmV4cGFuZGVkIC5wcm9wZXJ0eS1ncm91cC1oZWFkZXItaWNvbiB7DQogICAgcmVzb3VyY2U6ICRhcnJvdy1kb3duLXNxdWFyZTsNCn0NCg0KLnByb3BlcnR5LWdyb3VwLWhlYWRlcjpjb2xsYXBzZWQgLnByb3BlcnR5LWdyb3VwLWhlYWRlci1pY29uIHsNCiAgICByZXNvdXJjZTogJGFycm93LXJpZ2h0LXNxdWFyZTsNCn0NCg0KLnByb3BlcnR5LWdyb3VwLWhlYWRlci1sYWJlbCB7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICB3aWR0aDogMTAwJTsNCn0NCg0KLnByb3BlcnR5LWdyb3VwLWNvbnRlbnRzIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBzcGFjaW5nOiAxOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIHBhZGRpbmctYm90dG9tOiAxcHg7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cC5sYXN0IC5wcm9wZXJ0eS1ncm91cC1jb250ZW50cy5zY3JvbGxpbmcgew0KICAgIHBhZGRpbmctYm90dG9tOiAwcHg7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cC1jb250ZW50cy5zY3JvbGxpbmcgew0KICAgIHBhZGRpbmctcmlnaHQ6IDBweDsNCn0NCg0KLnByb3BlcnR5LWdyb3VwLWl0ZW0tbGFiZWwtY29udGFpbmVyIHsNCiAgICB3aWR0aDogNTAlOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgcGFkZGluZy1sZWZ0OiA1cHg7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cC1pdGVtLWVkaXRvci1jb250YWluZXIgew0KICAgIHdpZHRoOiA1MCU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KfSAgICAgICAgDQoNCi5wcm9wZXJ0eS1ncm91cC1pdGVtLWxhYmVsIHsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaXRlbS1lZGl0b3Igew0KICAgIHdpZHRoOiAxMDAlOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAgLnRleHRmaWVsZCB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGZpbHRlcjogbm9uZTsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAgLmNoZWNrYm94IHsNCiAgICBwYWRkaW5nOiA1cHg7DQogICAgcGFkZGluZy1sZWZ0OiA0cHg7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cCAubnVtYmVyLXN0ZXBwZXIgew0KICAgIHBhZGRpbmc6IDA7DQogICAgYm9yZGVyOiBub25lOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAgLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLXZhbHVlIHsNCiAgICBmaWx0ZXI6IG5vbmU7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cCAubnVtYmVyLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmMgew0KICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAgLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWluYyB7DQogICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCn0NCg0KLnByb3BlcnR5LWdyb3VwIC5kcm9wZG93biB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJvcmRlci1yYWRpdXM6IG5vbmU7DQp9DQo"},{ name : "haxeui-core/styles/shared/left-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAYAAAAvZezQAAAEOHpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjazVZbkuwmDP1nFVkCkhCC5YCBquwgy88Rdnd6+nFnbiUfMW2kxlivIwmH+defK/yBi4xSSGol15wjrlRT5QamxPNqe6aY9nxe6aL0dT1Eux4wlgRUzr8lX/tv63QXcJIGTh8EleN60L8+qJdmLk+CLkXiFjGYcQmqlyDh8wFdAtrpVsy12KMLfZ70ev8MQ3HXMPXbql6bn/4nQ/SGQo8wTyGJmFnSaYD4zUHaZnwu2EhSwcueWW4xQUDexSk+WBWeUan8HpU79wSK5HM9YOFrMPOdvl0nfR/8sEP8oFmOu+Yv63ndIvY1yH6vNUpYa57etZQR0nw5dY+OM9jYEXLZr2UMw63gbY+KUQKy9wDkIx6xYxxUiQHLokSDGi2amx50wMTEkw2U+WDZa0WMKx8SA3BKPmixAashBWgdgFewyndbaOutW91BBYoHYScThNEJP/8346OgtTzliWI544S0gF3syQEzHDmfsQuA0Lrlke4A38bz5bgKENQd5gIHW+yniK505ZbnkWygBRsV9Kw1snEJQIigW2EMCRCImUQpUzRmI0IcC/BpEFRQNNwBAanygJWcRDLAQcVAN94x2ntZ+VxGzwIQKlkM0KCYgJU3NuSPpYIcaiqaVDWradGqLUtOWXPOlr35NRNLppbNrFi1VqSkoiUXKyWUWlrlKmiOWnO1WmqtrUFpg+SGtxs2tNa5S09de+7WS6+9HUifIx165MOOEo56tMFDBvrEyMNGGXW0SROpNNPUmafNMutsC6m2ZKWlKy9bZdXV7qhR2GVHL+PnqNENNd5I+Ua7o4ZXzW4iyNuJOmZAjBMBcXMEkNDsmMVCKXFw6BwzZByqQhlWqoMzyBEDgmkS66I7dv8g9wW3kNK/wo1vyAWH7r9ALjh0H5B7xe0NasNPmyNK2Ah5GXpQo6D8slJS0pUyzmBnk/op9Q0NqfWR4ZcajEJGfNiIIDqD0mtc8Huh4fWB6uweeFeANvvhRZxgztQStwMJCXkyD1R6XgQpXTlOII1jdfQJV8eyZnvPudAIzbvmgjBxcPHOPNEyN5M/B+XUAmBrtASLyosM/g3ZUq0P6VFGgOWEcwK9JlpTZO/EdwhWUpEW/SAfP9Jyd+1F3akLadjHrBD7najwS090tFxwA5ualOcQRNy/Qm7iG7pv31rCz+LzPf2/Cco5oDB7ynuuXgJkRkub7Dl5DtPRUkUiip7hf5PCoOF54Q319HDmuBtgvHP8UXT4pYifi9aATEdxWYQj3j/wzTNxhLi3Ph/bt9WL94aB5rjrorzpAeFntf3GtjP1y2z4kMLZED42mN+UHR6FVyDWcDQhpzOAdDDT7ki19oKaw3mB//OtpvAjN54pt50buwUiquMD/K+YfEurBofj0rB9ertx4bRAtoS/AceHGj2Vzz6UAAABhWlDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TtSIVByuIOGSoThZERQQXqWIRLJS2QqsOJpd+QZOGJMXFUXAtOPixWHVwcdbVwVUQBD9AHJ2cFF2kxP8lhRYxHhz34929x907QKiXmWp2jAOqZhnJWFTMZFfFwCsEBDCAWXRJzNTjqcU0PMfXPXx8vYvwLO9zf45eJWcywCcSzzHdsIg3iKc3LZ3zPnGIFSWF+Jx4zKALEj9yXXb5jXPBYYFnhox0cp44RCwW2lhuY1Y0VOIp4rCiapQvZFxWOG9xVstV1rwnf2Ewp62kuE5zGDEsIY4ERMioooQyLERo1UgxkaT9qId/yPEnyCWTqwRGjgVUoEJy/OB/8LtbMz854SYFo0Dni21/jACBXaBRs+3vY9tunAD+Z+BKa/krdWDmk/RaSwsfAX3bwMV1S5P3gMsdYPBJlwzJkfw0hXweeD+jb8oC/bdAz5rbW3Mfpw9AmrpavgEODoHRAmWve7y7u723f880+/sBfKVyq9JFJD0AAA0YaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOjk2N2IxNTgzLWYyOWUtNDY2ZS04Yjc4LWJjZGFjZDFkNWZkNCIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo5MzBjOGE4NS02OTVkLTRmZTYtOGVmZC0xOTFlMzIzNzRmYTAiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDo3ODQyMjBkOC0wZTAyLTQ5ZDUtYjVmYS0zNzZiZWViYTNlYTEiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICBHSU1QOkFQST0iMi4wIgogICBHSU1QOlBsYXRmb3JtPSJXaW5kb3dzIgogICBHSU1QOlRpbWVTdGFtcD0iMTY0NDM0NTU2MTU2MTg1NSIKICAgR0lNUDpWZXJzaW9uPSIyLjEwLjI0IgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCI+CiAgIDx4bXBNTTpIaXN0b3J5PgogICAgPHJkZjpTZXE+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjhmMDUxYzAzLTBlNmItNDgwYy1iYjMzLTljMzc0OTY1YjM3MCIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChXaW5kb3dzKSIKICAgICAgc3RFdnQ6d2hlbj0iMjAyMi0wMi0wOFQxOTozOToyMSIvPgogICAgPC9yZGY6U2VxPgogICA8L3htcE1NOkhpc3Rvcnk+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz6o2UKgAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJTUUH5gIIEicVGwcIIAAAAChJREFUCNdjYEACoV1H/jMicxgYGBgYkTkMDAwMjMgc7CrQzWBAtwUAMwgSdDGUjZQAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/checkboxes.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ0hFQ0tCT1gNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY2hlY2tib3ggew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBob3Jpem9udGFsLXNwYWNpbmc6IDRweDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgY29sb3I6ICRub3JtYWwtdGV4dC1jb2xvcjsNCn0NCg0KLmNoZWNrYm94OmhvdmVyIHsNCn0NCg0KLmNoZWNrYm94OmRpc2FibGVkIHsNCiAgICBjdXJzb3I6IGRlZmF1bHQ7DQogICAgY29sb3I6ICRkaXNhYmxlZC10ZXh0LWNvbG9yOw0KICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsNCn0NCg0KLmNoZWNrYm94LXZhbHVlIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGVydGlhcnktYmFja2dyb3VuZC1jb2xvcjsNCiAgICB3aWR0aDogMThweDsNCiAgICBoZWlnaHQ6IDE4cHg7DQogICAgdmVydGljYWwtYWxpZ246IHRvcDsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgaWNvbjogbm9uZTsNCiAgICBmaWx0ZXI6ICRub3JtYWwtaW5uZXItc2hhZG93Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLmNoZWNrYm94LXZhbHVlOmhvdmVyIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOw0KfQ0KDQouY2hlY2tib3gtdmFsdWU6YWN0aXZlIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOw0KfQ0KDQouY2hlY2tib3gtdmFsdWU6c2VsZWN0ZWQgew0KICAgIGljb246ICRjaGVjay1zZWxlY3RlZDsNCn0NCg0KLmNoZWNrYm94LXZhbHVlOmRpc2FibGVkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvci1kaXNhYmxlZDsNCiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7DQogICAgY3Vyc29yOiBkZWZhdWx0Ow0KfQ0KDQouY2hlY2tib3gtbGFiZWwgew0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQouY2hlY2tib3gtaWNvbiB7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KICAgIG9wYWNpdHk6IDE7DQp9DQoNCi5jaGVja2JveC1pY29uOmRpc2FibGVkIHsNCiAgICBjdXJzb3I6IGRlZmF1bHQ7DQogICAgb3BhY2l0eTogMC41Ow0KfQ0K"},{ name : "haxeui-core/styles/default/scrollbars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU0NST0xMDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnNjcm9sbCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsNCiAgICBwYWRkaW5nOiAwcHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQouc2Nyb2xsIC5idXR0b24gew0KICAgIHdpZHRoOiA3cHg7DQogICAgaGVpZ2h0OiA3cHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1idXR0b24tY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgZmlsdGVyOiBub25lOw0KICAgIG9wYWNpdHk6IDAuNjsNCn0NCg0KLnNjcm9sbCAuYnV0dG9uOmhvdmVyIHsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQouc2Nyb2xsOmRpc2FibGVkIC5idXR0b24gew0KICAgIG9wYWNpdHk6IC4zOw0KfQ0KDQoudmVydGljYWwtc2Nyb2xsIHsNCiAgICB3aWR0aDogOHB4Ow0KICAgIHBhZGRpbmctbGVmdDogMXB4Ow0KICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQp9DQoNCi5ob3Jpem9udGFsLXNjcm9sbCB7DQogICAgaGVpZ2h0OiA4cHg7DQogICAgcGFkZGluZy10b3A6IDFweDsNCiAgICBib3JkZXItdG9wOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIEJPUkRFUkxFU1MgVkFSSUFOVFMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouc2Nyb2xsdmlldy5ib3JkZXJsZXNzID4gLnNjcm9sbCAuYnV0dG9uLCAudGV4dGFyZWEuYm9yZGVybGVzcyA+IC5zY3JvbGwgLmJ1dHRvbiB7DQogICAgd2lkdGg6IDhweDsNCiAgICBoZWlnaHQ6IDhweDsNCn0NCg0KLnNjcm9sbHZpZXcuYm9yZGVybGVzcyA+IC52ZXJ0aWNhbC1zY3JvbGwsIC50ZXh0YXJlYS5ib3JkZXJsZXNzID4gLnZlcnRpY2FsLXNjcm9sbCB7DQogICAgcGFkZGluZy1sZWZ0OiAwcHg7DQogICAgYm9yZGVyLWxlZnQ6IG5vbmU7DQp9DQoNCi5zY3JvbGx2aWV3LmJvcmRlcmxlc3MgPiAuaG9yaXpvbnRhbC1zY3JvbGwsIC50ZXh0YXJlYS5ib3JkZXJsZXNzID4gLmhvcml6b250YWwtc2Nyb2xsIHsNCiAgICBwYWRkaW5nLXRvcDogMHB4Ow0KICAgIGJvcmRlci10b3A6IG5vbmU7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIENMQVNTSUMgVkFSSUFOVFMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwsDQouc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0U5RTlFOTsNCiAgICBib3JkZXI6bm9uZTsNCiAgICBwYWRkaW5nOiAwOw0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLmJ1dHRvbiwNCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5idXR0b257DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0U5RTlFOTsNCiAgICBwYWRkaW5nOiAwOw0KICAgIGZpbHRlcjogbm9uZTsNCiAgICBoaWRkZW46IGZhbHNlOw0KICAgIHdpZHRoOiAxN3B4Ow0KICAgIGhlaWdodDogMTdweDsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLmJ1dHRvbjpob3ZlciwNCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5idXR0b246aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNEN0Q3RDc7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLnNjcm9sbCAuYnV0dG9uOmRvd24sDQouc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuYnV0dG9uOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICM1MjUyNTI7DQogICAgZmlsdGVyOiBub25lOw0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLnRodW1iLA0KLnNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLnRodW1iIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQzZDNkM2Ow0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLnRodW1iOmhvdmVyLA0KLnNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLnRodW1iOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQUFBQUFBOw0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLnRodW1iOmRvd24sDQouc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAudGh1bWI6ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzUyNTI1MjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAuc2Nyb2xsIC50aHVtYjpkaXNhYmxlZCwNCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC50aHVtYjpkaXNhYmxlZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0RERERERDsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAudmVydGljYWwtc2Nyb2xsLA0KLnZlcnRpY2FsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgew0KICAgIHdpZHRoOiAxN3B4Ow0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC52ZXJ0aWNhbC1zY3JvbGwgLmRlaW5jLA0KLnZlcnRpY2FsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmRlaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC91cC1hcnJvdy1kYXJrLnBuZyI7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLnZlcnRpY2FsLXNjcm9sbCAuZGVpbmM6ZG93biwNCi52ZXJ0aWNhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5kZWluYzpkb3duIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC91cC1hcnJvdy1icmlnaHQucG5nIjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAudmVydGljYWwtc2Nyb2xsIC5pbmMsDQoudmVydGljYWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9kb3duLWFycm93LWRhcmsucG5nIjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAudmVydGljYWwtc2Nyb2xsIC5pbmM6ZG93biwNCi52ZXJ0aWNhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5pbmM6ZG93biB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9zaGFyZWQvZG93bi1hcnJvdy1icmlnaHQucG5nIjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAuaG9yaXpvbnRhbC1zY3JvbGwsDQouaG9yaXpvbnRhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIHsNCiAgICBoZWlnaHQ6IDE3cHg7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLmhvcml6b250YWwtc2Nyb2xsIC5kZWluYywNCi5ob3Jpem9udGFsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmRlaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9sZWZ0LWFycm93LWRhcmsucG5nIjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAuaG9yaXpvbnRhbC1zY3JvbGwgLmRlaW5jOmRvd24sDQouaG9yaXpvbnRhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5kZWluYzpkb3duIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9sZWZ0LWFycm93LWJyaWdodC5wbmciOw0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC5ob3Jpem9udGFsLXNjcm9sbCAuaW5jLA0KLmhvcml6b250YWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9yaWdodC1hcnJvdy1kYXJrLnBuZyI7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLmhvcml6b250YWwtc2Nyb2xsIC5pbmM6ZG93biwNCi5ob3Jpem9udGFsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmluYzpkb3duIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9yaWdodC1hcnJvdy1icmlnaHQucG5nIjsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTU9CSUxFIFZBUklBTlRTDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnNjcm9sbDptb2JpbGUgLmluYywgLnNjcm9sbDptb2JpbGUgLmRlaW5jIHsNCiAgICBoaWRkZW46IHRydWU7DQp9DQoNCi5ob3Jpem9udGFsLXNjcm9sbDptb2JpbGUgew0KICAgIG9wYWNpdHk6IC41Ow0KICAgIGhlaWdodDogOHB4Ow0KICAgIHBhZGRpbmc6IDJweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOw0KICAgIGJvcmRlcjogbm9uZTsNCn0NCg0KLmhvcml6b250YWwtc2Nyb2xsOm1vYmlsZSAudGh1bWIgew0KICAgIGhlaWdodDogNHB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCn0NCg0KLnZlcnRpY2FsLXNjcm9sbDptb2JpbGUgew0KICAgIG9wYWNpdHk6IC41Ow0KICAgIHdpZHRoOiA4cHg7DQogICAgcGFkZGluZzogMnB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7DQogICAgYm9yZGVyOiBub25lOw0KfQ0KDQoudmVydGljYWwtc2Nyb2xsOm1vYmlsZSAudGh1bWIgew0KICAgIHdpZHRoOiA0cHg7DQogICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KfQ0K"},{ name : "haxeui-core/styles/shared/expanded-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5AoNCwkgHyJHKAAAAJBJREFUOMtjYBgFAw8YkTlrt2xRYv77/+h/BgYJHOpf///LZBMU5H0LJsCELBvs43OPkeGfOwMDw0csmj8z/GP0RNaMYQADAwODv7//JSYGxkAGBoafSMK/Gf8zhgYG+pxFV8+EzZ3+/j77/zMwJjAwMPxjYGD4/5+BMTUgwGcnyQG0fuOW4vUbtxSPJhUaAwCz8idCJS/GkgAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/down-arrow-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWP8//8/AwZgeieriib0TlaVCUIhCzEwMDAhc+DSAPKbCiUI9YmvAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/down-arrow-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWMMCAhgwABMc89cQROae+YKE4RCFmJgYGBC5sClAQxaDmYcnISCAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/help-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABsklEQVQ4ja2TS2tTURSFv3POTapoWjAqiFgkotRAin8gcx1IOxQEHTiItFL8B/ojBJuJAx+dWjpxoLOAU7UKiZJBMlBI0YJJqTfXe/d2kJ6Yx0UHukdnr73XOmufB/xjmDRwfr1XDESXMPYCACqfEjWb7dVc/Y8CherunEjmoVGupYgryoZLopXmWr47JVCo7s6pZGoopb+43nZxVPYigUcPdh6Si8cdV845LPCqFfOmI760mASZB8CNoYP59V7RCR98fvKI4dnVw7S7QpQoF/OO61shX/aGIqpOi63KbMMCONHl0XGOHTK8/pxwvxZRfRvjLJzOjZ+dFZYBLIAx9vxotfFNuFfrs7MvVC4FtL4L73dkTEFkwAkARNG0+7xZynDqqOX2i5AwGa8Zg/52gDRT+IQxPNr+SWdfp2rGDDh24MA8B6a6vv5QOnsyCR9MwOZQoL2aq6NsTHZdLjjKZ4JJGNCnrcpsA0begUuilSTIloBFj9192Z+2Be+yM/07PrF+0VzLd10clUGf+HEmyAL6ODsTlj/eOtHzYOpnOlvtLpCwZI1dGAwsdQK2vO3/Gr8AlhyqPdEFcaYAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/ranges.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogUkFOR0UNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoucmFuZ2Ugew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIHBhZGRpbmc6IDFweDsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsNCn0NCg0KLnJhbmdlLXZhbHVlIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLXJhZGl1czogMXB4Ow0KfQ0KDQouaG9yaXpvbnRhbC1yYW5nZSB7DQogICAgYmFja2dyb3VuZDogJG5vcm1hbC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCAkbm9ybWFsLWJhY2tncm91bmQtY29sb3Itc3RhcnQgdmVydGljYWw7DQogICAgaW5pdGlhbC13aWR0aDogMTUwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDhweDsNCn0gICAgDQoNCi5ob3Jpem9udGFsLXJhbmdlIC5yYW5nZS12YWx1ZSB7DQogICAgYmFja2dyb3VuZDokYWNjZW50LWdyYWRpZW50LXN0YXJ0ICRhY2NlbnQtZ3JhZGllbnQtZW5kIHZlcnRpY2FsOw0KICAgIGhlaWdodDogMTAwJTsNCn0NCg0KLmhvcml6b250YWwtcmFuZ2U6ZGlzYWJsZWQgew0KICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsNCn0NCg0KLmhvcml6b250YWwtcmFuZ2U6ZGlzYWJsZWQgLnJhbmdlLXZhbHVlIHsNCiAgICBiYWNrZ3JvdW5kOiAkZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvci1zdGFydCAkZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvci1lbmQgdmVydGljYWw7DQp9DQoNCi52ZXJ0aWNhbC1yYW5nZSB7DQogICAgYmFja2dyb3VuZDogJG5vcm1hbC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCAkbm9ybWFsLWJhY2tncm91bmQtY29sb3Itc3RhcnQgaG9yaXpvbnRhbDsNCiAgICBpbml0aWFsLXdpZHRoOiA4cHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDE1MHB4Ow0KfQ0KDQoudmVydGljYWwtcmFuZ2UgLnJhbmdlLXZhbHVlIHsNCiAgICBiYWNrZ3JvdW5kOiAkYWNjZW50LWdyYWRpZW50LXN0YXJ0ICRhY2NlbnQtZ3JhZGllbnQtZW5kIGhvcml6b250YWw7DQogICAgd2lkdGg6IDEwMCU7DQp9DQoNCi52ZXJ0aWNhbC1yYW5nZTpkaXNhYmxlZCAucmFuZ2UtdmFsdWUgew0KICAgIGJhY2tncm91bmQ6ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCBob3Jpem9udGFsOw0KfQ0KDQoudmVydGljYWwtcmFuZ2U6ZGlzYWJsZWQgew0KICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsNCn0NCg"},{ name : "haxeui-core/styles/shared/right-arrow-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAOElEQVQImWPYsmXLWxkVCGJiYGA4PmMCAwMDAwMDE4SC8Bm3bNnCAANMcJZlRgETnAWVgbAYGBgAg4cO3PCuD3sAAAAASUVORK5CYII"},{ name : "haxeui-core/locale/it/std-strings.properties", data : "c2F2ZT1TYWx2YQ0KeWVzPVPDrA0Kbm89Tm8NCmNsb3NlPUNoaXVkaQ0Kb2s9T0sNCmNhbmNlbD1Bbm51bGxhDQphcHBseT1BcHBsaWNhDQpzZWFyY2g9Q2VyY2hpDQoNCnJlZD1Sb3Nzbw0KZ3JlZW49VmVyZGUNCmJsdWU9Qmx1ZQ0KaHVlPVRvbmFsaXTDoA0Kc2F0dXJhdGlvbj1TYXR1cmF6aW9uZQ0KYnJpZ2h0bmVzcz1MdW1pbm9zaXTDoA0K"},{ name : "haxeui-core/styles/shared/info-large.png", data : ""},{ name : "haxeui-core/styles/shared/window-expand-white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpVorDnbwa8hQnSyIijhKFYtgobQVWnUwufQLmjQkKS6OgmvBwY/FqoOLs64OroIg+AHi6OSk6CIl/i8ttIjx4Lgf7+497t4BQq3EVLNjAlA1y0hEI2I6syr6XtGDYXTDj0GJmXosuZiC6/i6h4evd2Ge5X7uz9GrZE0GeETiOaYbFvEG8cympXPeJw6ygqQQnxOPG3RB4keuyw1+45x3WOCZQSOVmCcOEov5NpbbmBUMlXiaOKSoGuUL6QYrnLc4q6UKa96TvzCQ1VaSXKc5giiWEEMcImRUUEQJFsK0aqSYSNB+xMU/5Pjj5JLJVQQjxwLKUCE5fvA/+N2tmZuabCQFIkDni21/jAK+XaBete3vY9uunwDeZ+BKa/nLNWD2k/RqSwsdAX3bwMV1S5P3gMsdYOBJlwzJkbw0hVwOeD+jb8oA/beAf63RW3Mfpw9AirpavgEODoGxPGWvu7y7q723f880+/sBXHpynoD2GeAAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmCxsJICvK6FXdAAAAg0lEQVQoz8XQrQoCYRCF4S/slWyzmCzCts0mo2mtRoO3YN0b2KsTDILFIIr6GBxRFn+2iC9MObwzDCeln4MMRQevQJbQ4ITqg1yF0yRMcMQF8xfyDOdYmN7DEfZuLJ/kRWQHjNuXSuxCqGNEVr77dYCNB1sMv7XRwwpr9LtWnSNPf+EK5KylPDiubigAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/restore-button-blue.png", data : ""},{ name : "haxeui-core/styles/shared/maximize-button-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsEAAA7BAbiRa+0AAAA/SURBVChTY2QAgv///4MoogBjXWe/A5AGYWLAASYgQaxiEHBgANrQAOUQBCC1IBtIAiNSA8kRR1LSYGRkZAAA0DsQaJvlZUMAAAAASUVORK5CYII"},{ name : "haxeui-core/locale/es/std-strings.properties", data : "c2F2ZT1HdWFyZGFyDQp5ZXM9U2kNCm5vPU5vDQpjbG9zZT1DZXJyYXINCm9rPU9LDQpjYW5jZWw9Q2FuY2VsYXINCmFwcGx5PUFwbGljYXINCnNlYXJjaD1CdXNjYQ0KDQpyZWQ9Um9qYQ0KZ3JlZW49VmVyZGUNCmJsdWU9QXp1bA0KaHVlPU1hdGl6DQpzYXR1cmF0aW9uPVNhdHVyYWNpw7NuDQpicmlnaHRuZXNzPUx1bWlub3NpZGFkDQo"},{ name : "haxeui-core/styles/shared/close-button-dark.png", data : ""},{ name : "haxeui-core/locale/fr/std-strings.properties", data : "c2F2ZT1TYXV2ZWdhcmRlcg0KeWVzPU91aQ0Kbm89Tm9uDQpjbG9zZT1GZXJtZXINCm9rPU9LDQpjYW5jZWw9QW5udWxlcg0KYXBwbHk9QXBwbGlxdWVyDQpzZWFyY2g9Q2hlcmNoZQ0KDQpyZWQ9Um91Z2UNCmdyZWVuPVZlcnQNCmJsdWU9QmxldQ0KaHVlPVRlaW50ZQ0Kc2F0dXJhdGlvbj1TYXR1cmF0aW9uDQpicmlnaHRuZXNzPUx1bWlub3NpdMOpDQo"},{ name : "haxeui-core/styles/default/dropdowns.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogRFJPUERPV05TDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmRyb3Bkb3duIHsNCiAgICBpY29uOiAkYXJyb3ctdXAtZG93bjsNCiAgICBpY29uLXBvc2l0aW9uOiBmYXItcmlnaHQ7DQogICAgdGV4dC1hbGlnbjogbGVmdDsNCiAgICBwYWRkaW5nOiA2cHggOHB4Ow0KfQ0KDQouZHJvcGRvd24gLml0ZW1yZW5kZXJlciAubGFiZWwgew0KICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQouZHJvcGRvd246ZG93biB7DQogICAgYm9yZGVyLWNvbG9yOiAkYWNjZW50LWNvbG9yOw0KfQ0KDQouZHJvcGRvd24tcG9wdXAgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7DQogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsNCiAgICBib3JkZXItdG9wLWNvbG9yOiAkZG93bi1ib3JkZXItY29sb3I7DQogICAgcGFkZGluZzogMXB4Ow0KfQ0KDQouZHJvcGRvd24tcG9wdXAucG9wdXAtZnJvbS1ib3R0b20gew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7DQogICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogJGRvd24tYm9yZGVyLWNvbG9yOw0KfQ0KDQouZHJvcGRvd24tcG9wdXAgLmxpc3R2aWV3IC5pdGVtcmVuZGVyZXIgew0KICAgIHBhZGRpbmc6IDZweCA4cHg7DQp9DQoNCi5kcm9wZG93bi1wb3B1cCA+IC5zY3JvbGx2aWV3LA0KLmRyb3Bkb3duLXBvcHVwID4gLnNjcm9sbHZpZXc6YWN0aXZlLA0KLmRyb3Bkb3duLXBvcHVwID4gLmRyb3Bkb3duLXNlYXJjaC1jb250YWluZXIgPiAuc2Nyb2xsdmlldywNCi5kcm9wZG93bi1wb3B1cCA+IC5kcm9wZG93bi1zZWFyY2gtY29udGFpbmVyID4gLnNjcm9sbHZpZXc6YWN0aXZlICB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJvcmRlci1yYWRpdXM6IDBweDsNCn0NCg0KLmRyb3Bkb3duLWZpbGxlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGFjY2VudC1jb2xvcjsNCiAgICBoZWlnaHQ6IDFweDsNCn0NCg0KLmRyb3Bkb3duLXNlYXJjaC1jb250YWluZXIgew0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi5kcm9wZG93bi1zZWFyY2gtZmllbGQtY29udGFpbmVyIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBwYWRkaW5nOiAwcHg7DQp9DQoNCi5kcm9wZG93bi1zZWFyY2gtZmllbGQgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBib3JkZXItcmFkaXVzOiAwcHg7DQogICAgaWNvbjogJHNlYXJjaDsNCn0NCg0KLmRyb3Bkb3duLXNlYXJjaC1maWVsZC1zZXBhcmF0b3Igew0KICAgIGhlaWdodDogMXB4Ow0KICAgIHdpZHRoOiAxMDAlOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRkb3duLWJvcmRlci1jb2xvcjsNCn0NCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIE1PQklMRSBWQVJJQU5UUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5kcm9wZG93bjptb2JpbGUgew0KICAgIG1vZGU6IG1vYmlsZTsNCn0NCg0KLmRyb3Bkb3duLXBvcHVwOm1vYmlsZSB7DQogICAgd2lkdGg6IDc1JTsNCn0NCg"},{ name : "haxeui-core/styles/shared/window-expand-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpVorDnbwa8hQnSyIijhKFYtgobQVWnUwufQLmjQkKS6OgmvBwY/FqoOLs64OroIg+AHi6OSk6CIl/i8ttIjx4Lgf7+497t4BQq3EVLNjAlA1y0hEI2I6syr6XtGDYXTDj0GJmXosuZiC6/i6h4evd2Ge5X7uz9GrZE0GeETiOaYbFvEG8cympXPeJw6ygqQQnxOPG3RB4keuyw1+45x3WOCZQSOVmCcOEov5NpbbmBUMlXiaOKSoGuUL6QYrnLc4q6UKa96TvzCQ1VaSXKc5giiWEEMcImRUUEQJFsK0aqSYSNB+xMU/5Pjj5JLJVQQjxwLKUCE5fvA/+N2tmZuabCQFIkDni21/jAK+XaBete3vY9uunwDeZ+BKa/nLNWD2k/RqSwsdAX3bwMV1S5P3gMsdYOBJlwzJkbw0hVwOeD+jb8oA/beAf63RW3Mfpw9AirpavgEODoGxPGWvu7y7q723f880+/sBXHpynoD2GeAAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmCxsJIBEM5IxvAAAA7UlEQVQoz8WQIUtDUQBGz3dnWDCKA9cG+rQbDDaDe4hgtq3pJhaDNqtWcVcZ+gcEwfDceyBjC4OZTd63brBYhInhXYNTw1CTeOLH4QsH/hrtt9tjky9TC7Uw6P4k1mO3+Jh/uDWFQbEh1LFJWvlOtklaEeoUBsWGEWoBGZ7zk8TtjMquhucMQKgrgHqzvyr5CyCP/GG1HOwB2GZ/F/kD4FVifbM8c6mPp+PYLRl0BYx7OHp/ZBt4zvBrW2HQGm5fnF7fz2fGxMDEcHoyaGUjnO59VhqpEaVzynEDPgd+uRrO3v3a2kauZCNX4l94AwHMSZhOXSBeAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/check-blue.png", data : ""},{ name : "haxeui-core/styles/shared/check-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5QITChsNaCG5cQAAAS5JREFUKM+NkDFLw1AUhb/3DG0Q6pBOdSgI4tBRsaCTP0EcHeSBEpAQkt2lggiKUGg6WMRVhGziILg4CRUnh+KibiVLl06lmPdcglRsrXe5nMP9uJwj+Md4nrckpVwvFotX1rRj3/fnhBD3QLnX6yGnAVLKU6AMDIGnP4EwDDeMMW4mj6Io6kwEXNedTdP0AhDAi+M4JwATM9i2fQwsAp9a691arTYEsIIgWDXG3Akhbrrd7l4cx2kYhmtaaz9jz5rN5vN3JmPMAuAYY1SpVDpXStla60tAAq/9fv9w9PNMu93uVKvVeSHECrCcz+e3gAqggc1Wq/XxozXAJEmyD1xnXiXbUaPRePxVM0Acx+lgMNgBbjP/LZfLHYwrQ4wKpZRdKBS2Lct6qNfr7+OAL7OwYq6nyWzXAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/minimize-button-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAtSURBVChTY/z//z8DKYAJShMNRjUQA2ivAR7TjRNm4o3y+oJ0RhBNYtJgYAAA02UNDbDaPdYAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/right-arrow-square-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCwMCQbKIz98wVBhhggrOSTXSwiCJLoIjCJdBFIaYzYQqhiCK7AQAMqA07hk2gSAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/tooltips.css", data : "LnRvb2x0aXAgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICR0b29sdGlwLWJhY2tncm91bmQtY29sb3I7DQogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzAwMDAwMCwgMC4wNSwgNiwgMSwgMzAsIDM1LCBmYWxzZSk7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIHBhZGRpbmc6IDRweCA1cHg7DQogICAgbWFyZ2luLWxlZnQ6IDBweDsNCiAgICBtYXJnaW4tdG9wOiAzMHB4Ow0KfQ0K"},{ name : "haxeui-core/styles/shared/collapsed-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADq3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VZbcuwoDP1nFbMES0JILAfzqJodzPLngN1OutOZSm567tc1ZSQDlsQ54hH6P3+P8Bce3nQLUc1TTmnDE3PMXKD4djxl1bTFVZ8f2025aw9XB6NJIOX49HSOv7XTdmeJCjR9Z8jr2bHfd+R42vcHQ6cjmRExlHYayqch4aODTgPlmNaWstv7Kez9kO02Ez/eMKtxw8QO8fgdDeg1hR9h7kKyoWaJRwAyXw5SllLQDThQC3QWXbWdkQCQZzht76IKj6xcGn3S/kCKpKM9oOEezHTJp+2kz8EPC+J3nqVenu/a65uLO5AXxqN5GKMfsysxAdJ0Tuo2laVh4A7IZf2WUAyvQrdVMooHZG8F5Q0ud5RKmRi0DIrUqNCgvmSlihAjdzZI5sqy2lyMM1fZAniKs9BgkyxNHGxV0Cto5SsWWn7zclfJ4bgRRjLBGB3082vKp4bGmClPtPmFFeLiuSgQxmRu1hgFQmjc8kgXwLfy+ExeBQzqgtkxwbLth4ld6cytmUeyiBYMVMhjrZG10wAggm9FMMj9SFsiUUq0GbMRAUcHPwWGHIuGd1BAqtwQJUeRBHKcp2/8Y7TGsvLRjD0LRKgkMVCTpYCriI0N+WPRkUNFRaOqJjV1zVqSpJg0pWRpbn7FxKKpJTNzy1ZcPLp6cnMPnr1kzoLNUXPKlj3nXAqcFlgu+LtgQCk777LHXfe02+573ktF+tRYtaZq1UPNtTRu0rBPtNSsecutdOpIpR679tSte8+9DKTakBGHjjRs+MijXKxROGj9UL7OGt1Y48XUHGgXa/jV7GaC5naikzMwxpHAuE0GkNA8OducYuQwqZucbZmxKpQRpU5yGk3GwGDsxDro4u6NuTveQow/4o1vzIVJ3SuYC5O6T5j7yNsT1lpZu56ExdBchhPUTbD8MKB7YS/zUPuyDN/94Y+hVxsaSOqlQpEq0q3ML967+bCn9sKLAnpuCHGUMyCcvJGO9sT/FdlvjWhbUeCMXzI7DamNopJCsT1NNQadlzQoP5XPDOEkakudR1LH3Xd1bJfMqxPH2HvIwkj1FRB5+C5Eb/JMtbld9Glo/pCH4NbxyQ9fk+Fjh3RP59Qd96RPZ6TXeDvon1jVH0MVvg3RLc83eNeD3Ip7XWj+yO6vyfChgwZuGkfe4sx0v8+ylT35bcFdiISXLLSnhn5l6f/vEX13d5wyvCigP4Z+hyFcbHL4F54nyj1078dQAAABg2lDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TpaIVBzOIOGSoTi2IijhKFYtgobQVWnUwufQLmhiSFBdHwbXg4Mdi1cHFWVcHV0EQ/ABxdHJSdJES/5cUWsR4cNyPd/ced+8AoVFlmtU1Dmi6baYTcSmXX5FCrxDQhzBERGVmGcnMQha+4+seAb7exXiW/7k/R79asBgQkIhnmWHaxOvE05u2wXmfWGRlWSU+J46adEHiR64rHr9xLrks8EzRzKbniEViqdTBSgezsqkRTxFHVE2nfCHnscp5i7NWrbHWPfkLwwV9OcN1miNIYBFJpCBBQQ0VVGEjRqtOioU07cd9/MOuP0UuhVwVMHLMYwMaZNcP/ge/u7WKkxNeUjgOdL84zscoENoFmnXH+T52nOYJEHwGrvS2f6MBzHySXm9rkSNgYBu4uG5ryh5wuQMMPRmyKbtSkKZQLALvZ/RNeWDwFuhd9Xpr7eP0AchSV0s3wMEhMFai7DWfd/d09vbvmVZ/P21dcqXiaaDUAAANGGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDoxMGUxMWRlMi0wNTI1LTQwM2ItOTZhYi1jODYxZDZmMTlhMGEiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6NjIzZTNmZWMtYzg5Yi00MGVhLTljNjktMzFjYTgwODgwMGMyIgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MmM0NTNkMzQtNmI5Mi00NDJjLTlhY2ItMTgyNWYyNzQ0NjFhIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NDQ1ODIzMjkxMjA3NDQiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpiM2YwMzU2NS0xNWQzLTQ4MGEtOGUxYi1kMmZlZTM3NDZmMmMiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjU6MjkiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+OWQ6JAAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YCCwwZHVAUuvsAAAB7SURBVDjLY2AYviCq75gyMeqYcEkwMjIcjeo7Zky2AQwMDOKMjAwHY/qPe5JrAAMDAwP3f4b/G6L7jkWRawADAwMDGwMjw5LYCcfLyTUAL2AhQs0vhv8MiYsLLZeRY8BXRgbG0CVFltvJccHL//8ZvJcWWZ6laUIaBgAAEBYdvIFAlrEAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/info-medium.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAACr0lEQVRYhe2XPUxTURiGn+/ctkKkQAxJERu1QkxcUJnAXVYSjG51UpEGTZx0kcQQBzcNFCW44axhddDERRYRFwfDryk/AhILJMLtvfc4SKG/cCkti77TyXd+njffPefc78C/Lilk0tmB1ZqErepESdB20IatY5vizM12Vf4smYH6aLxBiwpraAPO5xk2Jpph5bGHxjuqJ4piIDS4HsDS3WhuAl6XfhNoBpSiZ6LTv1iwgVMvVluUI6+BWpfgTC3jcGWqy/8h3wCVryP0fO2acuT9AeAANSjehvrXruYbkDMD9dHVS47IO+DIAeCpMnG4nCsTWQZCg+sBTP0FIVAkeFILhkXj+F3/Umow+xNYutsNvMInPGjxcb/Zx1Gvq8NUa3t4mBlMm1kfjTc4or7iYrc/aPFx64IPgIHPJk9GTDcmTBv73PdI9WQykJYBB3XdDRxAazejsuRTYoRTA560bqHN7Up9nxI523tJNG3Aox3klv5er7KUc1ZxpRM+pyZ2o2oFUjJgWioo4j6vtRVCU8AAYPSHzcK667niNY0gsAIpe0CLHHdNB5oCBn2tZfS1lm0bcSutqUu2tw2ILnBbFSKF3mkmDRjMHxrfYi7LgGk5sUPia7Pcns0ysFVMjB2CgdHkCUgzACCa4ZLjJZ2RZkB57CHA1Z1aoEzHsl+l+8lQKLrWi9BVCrrA08mI/15qLOtvqBQ9wEIJ+PMeQz/O4mUGJjr9i47S7cBmEeEbGqf9W0fl8p4GAGZuV34EwkUysYEmPB2pGsnVuWslcbo/3iyoNxReF85rnPZ8cNilKAWYjlSNGBaNQC/7Ox2mCM+8hm7cDQ77eJic7P91RokR3vqfX8y5mDDqaIa1bQ/N3KmecrNuQU+z4Mv4Md9v44RtSBDAsHXMLLdnU2+4/3KrPzu548SSV/k0AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/haxeui.png", data : "iVBORw0KGgoAAAANSUhEUgAAAIgAAACICAMAAAALZFNgAAAC7lBMVEUAAACxubtjcotcaIKYmKs9RWc9Sl9jcYuutME+SGKstMPHyNhhcIrBxdNCT2esssBgbIiGiaLAwM56hZ5jb4zGydqyt8V7hJs6SF9hbYlfaYTGxtatssGmrb09SWB/iJ5/h56/wdFha4g+TWRhbIe0uMdhbYhue5dibonDxNXGx9lfbIU+TGOwtcM/TWXM1+h8hZy5vMumq7vBw9RvfJezuMfGyNaAiJ+Bi6NhbYhvfJfGx9g8S2Cpr71DUGh9h501Xotli7iiqbp8hZ2ytsV2gZg+TGNJdq55g5p/h569v89vfJZsdpLK1OWxtsRtepU8S2M7SmE9TGQ8SmHKyt26vs1+iJ5jb4tRXXU4V3s9VnZhbIfExddhbIdIVW3DxNWjqbtwfJWkqrtwe5ZgbIWkqbmmq7yCi6Ccss3N2OmrscBOW3M9TGO4u8uytsWus8JbZ4FKV298hZtWY3uqxOB7hZujqLlQXXW3vMtSXnU8Wn49S2KsscBseJTHyNnIyNifpbZve5VkibREUmp/iqGtssHHyNlGU2pkd5d/iqCkqrpRX3dib4mswdrEx9ebo7PFxtc+XYNufZmQmK2uv9S4vc+1uclUYXk6SWGxtsSutcNteZRebIW4u8tDd7JYe6k3VXmAjqWKk6iAiaBWY3uOl6pAdrSswdqtwdubsMuIlKtjboeQmKydtM+ZrclRd6dJYYGnr8B8h51UYnlJV3CmuNCPl6u+zeHM1uZjb4dga4Q+aZjG1OeWsM9mjbtTf7ONqMlNerBvkbtNaY9Yc5mUna+nv9qlu9Y4UHCLpMKKpMNomc08drVRiMR+p9OUttszZp2pxOLP3u9nmMxtnM5BerlckMlyoNBSh8Gbut3G2OyRtNqGrNbO3e5wns99ptJQhsCYuNxUicJ9ptOStdujwOBYjcdKgbxnl8tgksg6c7A1aJ+4z+edvN5kk8c2a6NEebM8cKiwyeRLgb03b6qbu944bqhMgryyyuWdu96j3pigAAAAy3RSTlMAAwQHBQUNCQcJDw8NBRULEAoJEBgLGRgfFCMYJBcRMCNrMSxYMSkkQTEjHFBEPfFEIyBWMisUFA5rQz8ZFGU+8vEsHWtYJPFsTkQsIOJWVUg4MSoeHVY3KsGjY19RUE46bFVNR0MyKvHwa2VZV049PDs3Nf5jTUs/HcBhVj02KGFg625rYC0fl3hpQy7vhHdGuHof1IliXkE1emZMN/7TvJdlXlU6/vLw7JVvSPDp1ayVi3Fb0VTx24V29/T09PTy7unBjYn06pPnxN39F5cAAAyOSURBVHjarNl5bIthHAdw64oqdZQ56xpzz2zUXWSOOOY29zGjc2/DzFBMGHHf9xFn3OK+ibhFHBUhrSORGH+0oo2I+M/v97zv26ft8x71vv3+tWTp+sn393vfvutTgiZGPiVUJQaj0+ligqPDiP1NqtCbTCZ9aEwQvSoLvCO+qV40aMHfizhMBoPBbDZXCI8ZAr8CzX9Z4F2IIbaSWEqXjoWQYsIYegMSjMEpC+F+ijMix0ApymUQBb5le0xlJuXKlUMMUoIr1BsMqLDZamOqhqW2zWYzGgEDvVCKAiMWqgBBO0g1kdRohxikUAk6KlUw2kCQArGEJBmSnp4OmrZljXEVzCZCUW6DKIDQvXv3eiFpjElLS2vevEqNithKSUGCY4E2UGFJTU3NwiSExGq1WiyAqW0jtSBFnmEABijQMGXKlLrBaUPSr1+/Ro3TOAp2wr/SUAnqQEVWRkaOHZNIUwDJ2b8bNMnQi60sS2HbIAxQgGHOnK6QVjQdMYsXLx4Rv65RzeYggenE0ELAAQy7PT8/MzPTkenADBCSnZ0Nnv0JVpgSQ5FkoAIEffr0GU7SU8hAyKRJk5uMiOckMBwdeTXvyLADorBwDWQ6SQ8hO3YUzRqQ3bdg/26GIs1ABRiOHJk3r/eKFb0DmQjZu3fZsoHjgIISHE4MvtxkNtqqguPKk8ePj68XcpzkBMn6E+u37dkBlsSc3WRCdFfkGKCYd+rc1KlnSaaG5c6de/cfxjdKqwKVEIiOFJKaZV//6tWXv8XFTvHkbdvTo4inWAiFXEEYVIgx5q04dTLPKZ4vL99+e/HiQW48VIKz4SdT1WLNyL/2iuTLj2IlCl5D9AoiChFGb2BIIzDfN0+e22hB+YowG4DAqsJksuyZt38Dg8EoUAwGPSY2NpTRU4rx5SMghBzYvC93ZM3yFctwEFiRFGtGoiPJiQaK+V0sSpkeoHD3lUpcKiOjcT/KUEBgfm4+unZuzeYAgSWBXYUVsebkFyV5qYI2I0pxcJSUFLj5G9tD8B6axjDkEBgPQkYuqFEqGJJdlOSmAhkMpWSlpqakbK1ta4d3cmC0mdO14yRgHApjuAiCzffXm3fOpxC9GXY1IccxPenNb0bBjEmgrCly5NszgGLZunUr3EORsRgYyyYiQxmBOfB64c75s0cuKF+qDFw25KJJTkhECF0SpWaQUpgJFLCQT5M2czpOIoxzSggaPwdZFYCURcgAgLBLwmIoZSNSztiPHTvWtSvMZGDPvUGM34hQiOf1whkMpGBAj6Q3zJLIYvKuAKXw6tUz+GnScxky8njEZzkEXRGAjJ/dIACJI40ghFkSeQxSNh4+fBg/TibybbgUEXRFxCGzAMIsiQIGKY9WY7YAg0EoxM9DqlNIreSmfRHCLokyJu/KqYsXD91jEMrxEEhLBlIfIMySRIJxPbvLLGZEKwKQLmGQZjzkjUuF5MPndy9UxAeQUcEQUzDEqcbx/LkaiV8C0ppAvKocqiQeAmkhAXGrcaiQ4IrIQCAuFQ5VEp80ZBpCnCocqiR+CUgnHuJV4VAl8ShA3CocKiS4IghZFAQxUAjGpcKhQuITgZhDIE4VDhUSvwAZjJBYMppQiFeFQ4XEQyAHFw0aPBQhOh4ybGWnCWM5iDtCx3sGwUiUVoSFtBUgGFekDi0SHw+ZCZDOdYTRxLUdtnRJAOKMcC6aJP4AZEgvgJQsSf7ljGubvnTJprHX30S6JF/BoU3i4SBPW+xCCFw0CBFuJBs+RbgkX2EuGiR0RboJVy9C6LYKlbg0OahEeUVG44ogRAcQfklwNnwlTmWHVomfK6TLTDIZoRFcEu5O0p8uiez1olni4Qohk4EVoV9dcbPhK3ErOTRLvnOFLBcmUzIGHEGzESpxyTu0S3xCIcGTCVw3tBKnvEO7xB9aCDpEK/HKO7RLPKSQLnwhsRTCPwoIlbhlHdolf8ILoRDyeUMrcck5tEt8oYWgQ6ISp5xDu8QfVAh/7UpU4pVzaJd4uEJa0kLCK1lZMGHHdqjELePQLvklFNKAFsJU0ncWqcQl7dAu8UkXItxek4VKnNIO7RI/FnJZZENoJenW/fA9CVTiZT/noifxQCEzxosWQitJKMjGStyMI3qSP6SQ+bNpIUwlRlqJi3FETeIjhaylhYhVUhUrKYJKnIxDs4SuSLdLWMgqelMVrwS+ce1Pl4RxaJZ45AuhleRgJW7GES3JHyiEft9MIWwluxMdUImLOqIpwRU5PwPOJMhzCJ6gSVZiycrJXHPhk5M6oivxYyG5MoUgRE9OTDLyCzf291JHdCWe8x3IIQ19MGODD0jkVA0qcVNHVCW/bt0cMy43npyfUQi7JXDgiZDCjddcxBF1yYHzN8fsyxXOaCQhenLyirO5UIyO6Etu3TjdkBxtliPP7tKzESCP7oAj+vn2gIfAYa8uMsg/Vu1gtYEQisLwpg/WR+8DyGEWs6ggpKU7N4JI18VFMOkfxzAn5wXyMeMYvfd+7P7PMl+ALF/N9w8lviPg1SwXaxIlviP8PrVY324+X4kS3xHyOz7fRzvr2NCqeiDxHD3b4YY2TtC9Bdy3+ChIfEdPwRZ//KeXBInv6Gk3f3p8JDwGSJD4jp6MY8DhwagKEtdxzTgp9pLV7IFcT89xQPDteI5QcFQ8OjwnQeI5RhoOz0fXCQkSzzGSeZ2YX7CqXij5DPfZcMGaXzmj7nPZbcdIwZVzfglPgsR9LyMNl/B5WUJyJcOBZJQlpoWaKkMCB7LhkcxKV1GGBA6koHQ1K+YlGRI4kIZi3qy8KRkSOJCM8uak4FtlSPjdMhsLviyBY4lgZ7MdoaAEzgeCJQKJ7wiNTYGHbRLJk9DBRcI2CRtHVZaEDmZD4witNCwRZrcdoaCV9qi5mGRK6OAiYXOR7VbJktDBZLZb2YCuMiV0MBsa0GzJRzFcsZ4jFLTkOaSQZEjgmKRhSIFjG5IhgWOSjLENDLJUGRI4pgEEoz1RT+ayG45Q/o32cNgp6YQEjmXaFTId/5JOSOBYJq8gVSckdKyzLUYEo05I6FinLIYmk05K/kq5Y5A2ojAO4FAjdugQaUAiFCWEJJDBUoRUoYgN0hYD2ZohZKgX6HpYQqcOEQcLtyQZDRUsdakgONilKIpQKEEECe0gUlyqKWqxJbVbv+9L7l5evjtfLv0LBjKcv7x3qHDv/x1X3KV+LYRuEfcS7lCndj3kcq8rCXeoI0HYUeOzva4k3KHOBUIcD18f7nUjAYf7/CaI03H0LhhH5ztbf6ruITVxHJ0f0L90izj99nNpfX19YfL8+JdbzL44oM8qC2fuENUKMLCwUCwuzJ0cnLrDXIjKAitxHHb4l/foHBCVypul1/PzuVwuD1WS90g5cIOpNyF2tZbOEF/pRxFj+e1TKLVoWjKYTzconWNqHGI2jq5UiC+EsBiouDsxMQsV0Ug5ExSUzjD77UUf7GAR5EyNkBigmB0amoYYqVQkC5QxQUHM92sxF1L1iZ6x0pOAEedbRCCq8FVZAUauwXg+PJyAhENGgFFUmLpUBjPrcTNQj+sEgYziY4sRjw8MxPw+XzQxGGIUxTbVWD2u8fhs5MoZUcUvel1ZA8aUBozp8HB8IEY9c6/X7/cxihKzX2g8urEgDxAy8/GvMwJiMp7lp7TxidEm4/6t/j4IWXxRW4rzNv2QKpSiVHpovx1iQYiR1MZfASNMjP6+Hg/8Cw4jAMCioHBMvfBSlEqpZkt788FEHEsIfIVIjFA47ovdxrK9B8YUUFQUkRMLUyvAzpg1W1E8/iQQEIGhb8hYbGH4sfTvAYBZPFZROAauXpCKx7g3uCSfd7a2trcf2WetmE+2MdqmIHBKORhM785NOmRzc257F54A++gWscrppXsP362ubmwsQ+YxZpEcm+SLeVLQvcEYEuWGoBgpHX7dgiWdHmNJp4PBTFZ/IcrptCT9TQlQVp9siG59shlNQ0UKGDRzgDGcKAGwZMvlTAY8UuCdcjaiB9BBD4BvmAMMYHNKJSipUkG0ZdCANW0AFAqG3QahJaXrER5dZwMM6C6BNYndKYn5C6OtMWD+QogUjKGgRBOIMYxAewwjFBocFCMdxJALrJZDqbtUMidRiCQgUVLgTAqPYCgpYCGMXRqXxM/Va13PHEsBFsBY8VnxI4IWQ6yGgiIsftDw0CXF2A9pEApaANMaL4aGlsBa9OFmSgwVBS0YLwsi2AezKJ6bPTi0xS44xgXibjQMWVBjEz4aRkjMwTY9UgjABtt0uiyYXhLJobclBrPY5b/HB7Hw8UH/AM3ZIm9FzQVkAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/sortable-asc-blue.png", data : ""},{ name : "haxeui-core/styles/shared/blank.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4QIKDCIwjMBeawAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAAHElEQVQ4y2P8//8/AyWAiYFCMGrAqAGjBgwWAwBjmgMd7D3zQQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/right-arrow-square-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAYAAADEUlfTAAAEqXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjarVdZlsMoDPzXKeYIlkAgjsP63txgjj8FttNZOp30YtoWLWMhVCVBqP/376B/cAmnjbxGCymEDZdPPklGx7b9yuvJm1/P/YqH5Fs9XV4IVA7S7f9aOMafer4Y2EVGT68MWT1elNsXyR/27c7QMZGbHgk67TCUDkNO9hd8GMj7sraQLF4vofRdHt/vYbC5NDzKqdVj8N3/PiJ6TTGPE+mO3YanOL874OYt5PLq5PUafruEvnNx6ePhCQLyWZy2K6/oAZWzx0/0d6C4sOsJittghov8VM/6efBphfhqZlcvM9/ofbkQ5SbI8x6jGY3R99VlHxDScCzqXMrqYWCBKbc+C2gRt6IfV0toRmBvBeRtq1tBq5xYEPfBnhtnHtyXrFzhopcuEVKkils6c1GSVLcR0PKz8ZAIxJozYFgBr4NWLr7wmjet6SobJm6MkcIwxjv88jftqaExJuWZN7vECn7JTAq4MZGbT4wCIDxOHukK8NnuL15M9Rg1w2xYYN7KbqIoH9yaPHILaIeBCrnnGsd2GECIMLfCGXZAYAvslANvUSQyI44GfDIMGZJGCiBgVWnwUrxzAeCYzLnxTeQ1VlR2NWoWgFAXkEg2UwpYeRQ28Cd6A4eyOvWqGjSqadIcXPBBQwgxzOKXo4s+agwxRospZnPmTS1YNCNLlpMkh+KoKaSYLKWUMybNsJzxdcaAnIsUV3zREkosVlLJFfSpvmoNNVajmmpu0lxDnWihxWYttdy5g0rdd+2hx2499TxAteGGHzrCiMNGGvmCGtMO60N7HzU+UZOF1BwYL6jh0xhPEzzLiU7MgJh4BuJxIgBCy8RsM/ZeaEI3MduSICtU4KVOcBpPxICg7yw6+ILdB3I3uJH3v8JNTuRoQvcXyNGE7glyj7h9glqbu03dHC2EZhrOoG4O6ReUvbIOH7AHz67XuUvdSZWt2/Q5bdGzR2ETy/iDscSldzgmLrY5z27Q148RX0l6NeArmVFFN0X04R0BSWyEa27I3RtF/R6lQFHnJ5LsY8QzSa8GvJLeXN6yddrdQ+Fbc2NvyR58lRSm8yE05+c95itOxTfG7fp8aYAbBE1a+lAhdVc2fiHpRrGgVG67v357Cv4hHS9vVEqk1sHe8PKTl5JeEe0lCZC40xnKCdW/CQ5uw88IIo6PmphQZ6Ll8Dyi9I2QfhlBemP9W8wMpqDoYKNGwTlZdJM89POkuM2Jd5nN3cJCAHGbNO3z1Ju8Sl/90GiKitORpBgSRoHXP0oVOnPlMVW+J+lDAUJojg1szTgey7eqUYahLwL4HUnXiuUMgmatBST7Pteb6UM/Sot7CSwJYGKzKH5c2FaKjYy6M5+ywqStxhZwhKztqUv0pc/fcJWe+upWVu3ZcaL8RfGmt4vyC6JdZX+1oRkHWkTD2ojYxLEU/6HFCmfh7h6luoeUbmlGf7KpgX70mm8Ve1ybR5XdzSdxoj/Z1OAdPQbQS1w/ibGzTY75eQNGYJaKTX7NH6pHEHHoCjv56Zebx0XSS+q9eUihXxxGnhp6Xk/eOKTQj/DCz6uGieh/0DPsUZQQ03EAAAGFaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1O1IhUHK4g4ZKhOFkRFBBepYhEslLZCqw4ml35Bk4YkxcVRcC04+LFYdXBx1tXBVRAEP0AcnZwUXaTE/yWFFjEeHPfj3b3H3TtAqJeZanaMA6pmGclYVMxkV8XAKwQEMIBZdEnM1OOpxTQ8x9c9fHy9i/As73N/jl4lZzLAJxLPMd2wiDeIpzctnfM+cYgVJYX4nHjMoAsSP3JddvmNc8FhgWeGjHRynjhELBbaWG5jVjRU4inisKJqlC9kXFY4b3FWy1XWvCd/YTCnraS4TnMYMSwhjgREyKiihDIsRGjVSDGRpP2oh3/I8SfIJZOrBEaOBVSgQnL84H/wu1szPznhJgWjQOeLbX+MAIFdoFGz7e9j226cAP5n4Epr+St1YOaT9FpLCx8BfdvAxXVLk/eAyx1g8EmXDMmR/DSFfB54P6NvygL9t0DPmttbcx+nD0Caulq+AQ4OgdECZa97vLu7vbd/zzT7+wF8pXKr0kUkPQAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6YTJjZmUzZWYtMzE5Yi00YTlkLThlZGEtMzJhNDYzZjMwNmZlIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjgxY2EwNjczLTJlODEtNGM3Mi1hNTM2LTg2MTJkYjc4YWY3NiIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOmI0OGNmYzRiLTMxOGItNDEzNy1iMmZlLTEzYWZjM2E0ZTExZCIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQ0NDgyMjI4NDI1Mjg0IgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6ZWFmMzkzYzAtOGRlNy00NTlmLTg4MzItYWE2MGYyYTc0NWJlIgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAyLTEwVDA5OjM3OjA4Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/Pj16UaAAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfmAgoIJQjxj+hWAAAAMklEQVQI12NggILQriP/GdAAEzIHXQETumpkBRiSyAqwSq4us2HEKgmTYMDnGAYGBgYAozYP8SPzNcgAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/sortable-desc-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAA0UlEQVQIHQHGADn/Ae0cJAAAAAAAAIdYUHmosAAAAAAAAAIAAAAAAACHWFAAAACJWlIAAAAAAAACAAAAh1hQAgICAgICAAAAjV5WAAAAAe0cJAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAANannwAAAAAAAAAAAAAAACpZYQIAAAAqWWEAAAAAAAAAAAAqWWEAAAACAAAAAAAAKllhAAAAKllhAAAAAAAAmeIQ3V5WWXgAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/treeviews.css", data : "LnRyZWV2aWV3IC5zY3JvbGx2aWV3LWNvbnRlbnRzIHsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoudHJlZXZpZXdub2RlIHsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoudHJlZXZpZXdub2RlIC5pdGVtcmVuZGVyZXIgew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIHBhZGRpbmc6IDVweDsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoudHJlZXZpZXcgLml0ZW1yZW5kZXJlcjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOw0KfQ0KDQoudHJlZXZpZXcgLml0ZW1yZW5kZXJlcjpub2RlLXNlbGVjdGVkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi50cmVldmlldyAuaXRlbXJlbmRlcmVyOm5vZGUtc2VsZWN0ZWQgLmxhYmVsIHsNCiAgICBjb2xvcjogJHNlbGVjdGlvbi10ZXh0LWNvbG9yOw0KfQ0KDQoudHJlZXZpZXdub2RlIC5iYXNpYy1yZW5kZXJlci1jb250YWluZXIgew0KICAgIHdpZHRoOiBhdXRvOw0KfQ0KICAgIA0KLnRyZWV2aWV3bm9kZSAuYmFzaWMtcmVuZGVyZXItbGFiZWwgew0KICAgIHdpZHRoOiBhdXRvOw0KfQ0KICAgIA0KLnRyZWVub2RlLWNvbnRhaW5lciB7DQogICAgc3BhY2luZzogMDsNCn0NCiAgICANCi50cmVlbm9kZS1jaGlsZC1jb250YWluZXIgew0KICAgIHBhZGRpbmctbGVmdDogMTZweDsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KICAgIA0KLnRyZWVub2RlLWV4cGFuZC1jb2xsYXBzZS1pY29uIHsNCiAgICByZXNvdXJjZTogbm9uZTsNCn0NCg0KLnRyZWVub2RlLWV4cGFuZC1jb2xsYXBzZS1pY29uIHsNCiAgICByZXNvdXJjZTogJGJsYW5rOw0KICAgIGN1cnNvcjogbm9uZTsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KICAgIA0KLnRyZWVub2RlLWV4cGFuZC1jb2xsYXBzZS1pY29uLm5vZGUtZXhwYW5kZWQgew0KICAgIHJlc291cmNlOiAkY29sbGFwc2VkOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCiAgICANCi50cmVlbm9kZS1leHBhbmQtY29sbGFwc2UtaWNvbi5ub2RlLWNvbGxhcHNlZCB7DQogICAgcmVzb3VyY2U6ICRleHBhbmRlZDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi50cmVldmlldy5mdWxsLXdpZHRoIC5pdGVtcmVuZGVyZXIgew0KICAgIHdpZHRoOiAxMDAlOw0KfQ0KDQoudHJlZXZpZXcuZnVsbC13aWR0aCAuc2Nyb2xsdmlldy1jb250ZW50cyB7DQogICAgd2lkdGg6IDEwMCU7DQp9DQoNCi50cmVldmlldy5mdWxsLXdpZHRoIC50cmVldmlld25vZGUgew0KICAgIHdpZHRoOiAxMDAlOw0KfQ0KDQoudHJlZXZpZXcuZnVsbC13aWR0aCAudHJlZW5vZGUtY29udGFpbmVyIHsNCiAgICB3aWR0aDogMTAwJQ0KfQ0KDQoudHJlZXZpZXcuZnVsbC13aWR0aCAudHJlZW5vZGUtY2hpbGQtY29udGFpbmVyIHsNCiAgICB3aWR0aDogMTAwJTsNCn0"},{ name : "haxeui-core/locale/fr/formats.properties", data : "Zm9ybWF0cy5kYXRlLnNob3J0PSVkLyVtLyVZDQpmb3JtYXRzLmRlY2ltYWwuc2VwZXJhdG9yPSwNCg"},{ name : "haxeui-core/locale/it/formats.properties", data : "Zm9ybWF0cy5kYXRlLnNob3J0PSVkLyVtLyVZDQpmb3JtYXRzLmRlY2ltYWwuc2VwZXJhdG9yPSwNCg"},{ name : "haxeui-core/styles/shared/check-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5QEaCTskh/mOvAAAAS5JREFUKM+NkbtKA2EQhb/ZrLIGL2BnExDEIr2FguADBLMo/IWFCF7AwiewEkRQ7GwUkXRiY4LZGASLtbIQK4tgo7VWgmBMdrM7FokQxBinO2fmzAczwj8qn78cFzuaCmu1U7vbcLlcHqyH0TUqqR7HweoWqDXiPSAFBBLHd38SCgVvBtW1ppJt13UrHQme5yWxOAZE4SGsV3cBOhIaMTvAGNBIEC/PGRMA2OfF4oSFXBFLMQyqK8aYKO95k8RsAIiwn53N3n8vsiwYRRlGdMl2+g5zvu+IcgJYAo9vA/1b7WRRVbkolo4UVltWBTQNxKIy7bqZ2/aAJSIa1D/XBc6alqZbvYOfw0DzD8aY6PVlZBEotfynpNO7+dsxpF3kfN8Zev9Y0AQ385nM82+BL3sbaMn2+wKIAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/sidebars.css", data : "LnNpZGViYXItbW9kYWwtYmFja2dyb3VuZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJG1vZGFsLWJhY2tncm91bmQtY29sb3I7DQogICAgb3BhY2l0eTogMC42MDsNCn0NCg0KLnNpZGViYXIgew0KICAgIG1hcmdpbjogNTBweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBwYWRkaW5nOiA1cHg7DQogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzAwMDAwMCwgMC4xLCAzMCwgMiwgMSwgMywgZmFsc2UpOw0KfQ0KICAgIA0KLnNpZGViYXI6bGVmdCB7DQogICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQp9DQoNCi5zaWRlYmFyOnJpZ2h0IHsNCiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KfQ0KDQouc2lkZWJhcjp0b3Agew0KICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCn0NCg0KLnNpZGViYXI6Ym90dG9tIHsNCiAgICBib3JkZXItdG9wOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQp9DQoNCg0KLnNpZGViYXI6bGVmdCAjY2xvc2VTaWRlQmFyIHsNCiAgICByZXNvdXJjZTogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L2xlZnRfYXJyb3dfY2lyY2xlZC5wbmcgIjsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi5zaWRlYmFyOnJpZ2h0ICNjbG9zZVNpZGVCYXIgew0KICAgIHJlc291cmNlOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvcmlnaHRfYXJyb3dfY2lyY2xlZC5wbmcgIjsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi5zaWRlYmFyOnRvcCAjY2xvc2VTaWRlQmFyIHsNCiAgICByZXNvdXJjZTogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L3VwX2Fycm93X2NpcmNsZWQucG5nICI7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQouc2lkZWJhcjpib3R0b20gI2Nsb3NlU2lkZUJhciB7DQogICAgcmVzb3VyY2U6ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9kb3duX2Fycm93X2NpcmNsZWQucG5nICI7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi8qIEFOSU1BVElPTlMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqLw0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoNCi5zaWRlQmFyTW9kaWZ5Q29udGVudCB7DQogICAgYW5pbWF0aW9uOiBzaWRlQmFyTW9kaWZ5Q29udGVudCAwLjNzIGVhc2UgMHMgMTsNCn0NCg0KLnNpZGVCYXJSZXN0b3JlQ29udGVudCB7DQogICAgYW5pbWF0aW9uOiBzaWRlQmFyUmVzdG9yZUNvbnRlbnQgMC4zcyBlYXNlIDBzIDE7DQp9DQoNCiAgICANCkBrZXlmcmFtZXMgc2lkZUJhck1vZGlmeUNvbnRlbnQgew0KICAgIDAlIHsNCiAgICB9DQogICAgMTAwJSB7DQogICAgfQ0KfQ0KICAgIA0KQGtleWZyYW1lcyBzaWRlQmFyUmVzdG9yZUNvbnRlbnQgew0KICAgIDAlIHsNCiAgICB9DQogICAgMTAwJSB7DQogICAgfQ0KfQ0KICAgIA0KLnNob3dTaWRlQmFyTGVmdCB7DQogICAgYW5pbWF0aW9uOiBzaG93U2lkZUJhckxlZnQgMC4zcyBlYXNlIDBzIDE7DQp9DQouaGlkZVNpZGVCYXJMZWZ0IHsNCiAgICBhbmltYXRpb246IHNob3dTaWRlQmFyTGVmdCAwLjNzIGVhc2UgMHMgMSByZXZlcnNlIGJhY2t3YXJkczsNCn0NCiAgICANCkBrZXlmcmFtZXMgc2hvd1NpZGVCYXJMZWZ0IHsNCiAgICAwJSB7DQogICAgfQ0KICAgIDEwMCUgew0KICAgIH0NCn0NCg0KLnNob3dTaWRlQmFyUmlnaHQgew0KICAgIGFuaW1hdGlvbjogc2hvd1NpZGVCYXJSaWdodCAwLjNzIGVhc2UgMHMgMTsNCn0NCg0KLmhpZGVTaWRlQmFyUmlnaHQgew0KICAgIGFuaW1hdGlvbjogc2hvd1NpZGVCYXJSaWdodCAwLjNzIGVhc2UgMHMgMSByZXZlcnNlIGJhY2t3YXJkczsNCn0NCiAgICANCkBrZXlmcmFtZXMgc2hvd1NpZGVCYXJSaWdodCB7DQogICAgMCUgew0KICAgIH0NCiAgICAxMDAlIHsNCiAgICB9DQp9DQogICAgDQouc2hvd1NpZGVCYXJUb3Agew0KICAgIGFuaW1hdGlvbjogc2hvd1NpZGVCYXJUb3AgMC4zcyBlYXNlIDBzIDE7DQp9DQouaGlkZVNpZGVCYXJUb3Agew0KICAgIGFuaW1hdGlvbjogc2hvd1NpZGVCYXJUb3AgMC4zcyBlYXNlIDBzIDEgcmV2ZXJzZSBiYWNrd2FyZHM7DQp9DQogICAgDQpAa2V5ZnJhbWVzIHNob3dTaWRlQmFyVG9wIHsNCiAgICAwJSB7DQogICAgfQ0KICAgIDEwMCUgew0KICAgIH0NCn0NCiAgICANCi5zaG93U2lkZUJhckJvdHRvbSB7DQogICAgYW5pbWF0aW9uOiBzaG93U2lkZUJhckJvdHRvbSAwLjNzIGVhc2UgMHMgMTsNCn0NCi5oaWRlU2lkZUJhckJvdHRvbSB7DQogICAgYW5pbWF0aW9uOiBzaG93U2lkZUJhckJvdHRvbSAwLjNzIGVhc2UgMHMgMSByZXZlcnNlIGJhY2t3YXJkczsNCn0NCiAgICANCkBrZXlmcmFtZXMgc2hvd1NpZGVCYXJCb3R0b20gew0KICAgIDAlIHsNCiAgICB9DQogICAgMTAwJSB7DQogICAgfQ0KfQ0K"},{ name : "haxeui-core/styles/shared/error-large.png", data : ""},{ name : "haxeui-core/styles/shared/gripper-horizontal.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAECAIAAAA4WjmaAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWN8K6PCgBswMTAwTEqOnpQcjZXBhEcrAwMDI37DARkxCkFtOZfXAAAAAElFTkSuQmCC"},{ name : "haxeui-core/locale/ru/formats.properties", data : "Zm9ybWF0cy5kYXRlLnNob3J0PSVkLSVtLSVZDQpmb3JtYXRzLmRlY2ltYWwuc2VwZXJhdG9yPSwNCg"},{ name : "haxeui-core/styles/default/menus.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTUVOVUJBUg0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5tZW51YmFyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBwYWRkaW5nOiA2cHg7DQogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4Ow0KICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGZpbHRlcjogJG1lbnUtc2hhZG93Ow0KfQ0KDQoubWVudWJhci1idXR0b24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi5tZW51YmFyLWJ1dHRvbjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGNvbG9yOiAkc2VsZWN0aW9uLXRleHQtY29sb3I7DQp9DQoNCi8qDQoubWVudWJhci1idXR0b246YWN0aXZlIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3ItaG92ZXI7DQogICAgY29sb3I6ICRob3Zlci10ZXh0LWNvbG9yOw0KfQ0KKi8NCg0KLm1lbnViYXItYnV0dG9uOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjsNCiAgICBjb2xvcjogJGRvd24tdGV4dC1jb2xvcjsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAwcHg7DQogICAgYm9yZGVyLWJvdHRvbS1zaXplOiAwcHg7DQp9DQoNCi5tZW51YmFyLWJ1dHRvbi1uby1jaGlsZHJlbiB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3I7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLm1lbnViYXItYnV0dG9uLW5vLWNoaWxkcmVuOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7DQogICAgY29sb3I6ICRzZWxlY3Rpb24tdGV4dC1jb2xvcjsNCn0NCg0KLm1lbnViYXItYnV0dG9uLW5vLWNoaWxkcmVuOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjsNCiAgICBjb2xvcjogJGRvd24tdGV4dC1jb2xvcjsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTUVOVQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5tZW51IHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7DQogICAgcGFkZGluZzogMXB4Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGZpbHRlcjogJG1lbnUtc2hhZG93Ow0KICAgIHNwYWNpbmc6IDA7DQogICAgaW5pdGlhbC13aWR0aDogMjAwcHg7DQp9DQoNCi5tZW51LmV4cGFuZGVkIHsNCiAgICBib3JkZXItdG9wLXdpZHRoOiAwcHg7DQogICAgYm9yZGVyLXRvcC1zaXplOiAwcHg7DQp9DQoNCi5tZW51LWZpbGxlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgaGVpZ2h0OiAxcHg7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIE1FTlVJVEVNUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5tZW51aXRlbSB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHBhZGRpbmc6IDZweDsNCiAgICBwYWRkaW5nLWxlZnQ6IDEycHg7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoubWVudWl0ZW0tbGFiZWwsIC5tZW51aXRlbS1jaGVja2JveCwgLm1lbnVpdGVtLW9wdGlvbmJveCwgLm1lbnVpdGVtLXNob3J0Y3V0LWxhYmVsIHsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoubWVudWl0ZW0tbGFiZWw6ZGlzYWJsZWQsIC5tZW51aXRlbS1zaG9ydGN1dC1sYWJlbDpkaXNhYmxlZCB7DQogICAgY29sb3I6ICRkaXNhYmxlZC10ZXh0LWNvbG9yOw0KfQ0KDQoubWVudWl0ZW0tc2hvcnRjdXQtbGFiZWwgew0KICAgIHRleHQtYWxpZ246IHJpZ2h0Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogcmlnaHQ7DQp9DQoNCi5tZW51aXRlbS1pY29uIHsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoubWVudWl0ZW06aG92ZXIsIC5tZW51aXRlbTpzZWxlY3RlZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQoubWVudWl0ZW0gLmxhYmVsOmhvdmVyLCAubWVudWl0ZW0gLmxhYmVsOnNlbGVjdGVkLA0KLm1lbnVpdGVtLWNoZWNrYm94OmhvdmVyLCAubWVudWl0ZW0tY2hlY2tib3g6c2VsZWN0ZWQsDQoubWVudWl0ZW0tb3B0aW9uYm94OmhvdmVyLCAubWVudWl0ZW0tb3B0aW9uYm94OnNlbGVjdGVkIHsNCiAgICBjb2xvcjogJHNlbGVjdGlvbi10ZXh0LWNvbG9yOw0KfQ0KDQoubWVudWl0ZW0tZXhwYW5kYWJsZSB7DQogICAgcmVzb3VyY2U6ICRhcnJvdy1yaWdodDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogImNlbnRlciI7DQp9DQoNCi5tZW51c2VwYXJhdG9yIHsNCiAgICBoZWlnaHQ6IDFweDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBob3Jpem9udGFsLWFsaWduOiAiY2VudGVyIjsNCn0NCg"},{ name : "haxeui-core/styles/shared/expanded-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADaXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VZbciQpDPznFHsEJCEkjkNBEbE32ONvQj3G3W47POv52QgXXUjFQ0qUgibs//w9wl94OBKHpOa55BzxpJIKVygej6eummJa9fkRL+WhPdwdMBsFUo5Pz+f4q53igyWq0PSNIW9nx/bYUdJp358MnY5kImIo/TRUTkPCRwedBuqxrJiL29slbPsh+7USP94wq3HFxA7x/J0M0esKP8K8C0lEzZIOADJfDlKXUtGNcKAW6CwZdZJrSQjIqzjFN6jCMyu3Rh+0P5Ei+WgPaHgMZr7ly3bS18EPK8RvPEu7PT+0l3q7eAjyivHoHsbYj9XVlBHSfC7qWsrSMHBDyGVNyyiGV6HbKgXFA7K3gfIeW9xQGhVi0DIoUadKg/YlGzVATLyzQTI3ltXmYly4SQzgKc1Cg02KdHFw1kCvoJVvLLT8luWukcNxJ4xkgjE66Oc/Uz40NMZMeaLod6yAi+emAIzJ3KwxCoTQuPJIV4Cv8vxMXgUM6gqzY4E1boeJTenMrZlHsogWDFTIY6+R9dMAQgTfCjDI/UQxkyhlisZsRIijg58KQ45NwxsoIFXuQMnYGhnkOE/fmGO0xrLy0YwzC0QotpGBmiIVXCUcbMgfS44cqiqaVDWrqWvRmiWnrDlny/PwqyaWTC2bmVux6uLJ1bObe/DitXARHI5acrHipZRa4bTCcsXsigG1brzJljbd8mabb2WrDenTUtOWmzUPrbTauUvHOdFzt+699LrTjlTa06573m33vex1INWGjDR05GHDRxn1Zo3CQeu78nXW6GKNF1NzoN2sYarZZYLmcaKTMzDGicC4TQaQ0Dw5i04pcZjUTc5iYewKZaDUSU6nyRgYTDuxDrq5+8XcA28hpW/xxhdzYVL3J5gLk7oPmHvP2wvW+vy3aVHCYmhuwxnUKNh+GLB7Za/zT+3LMvzuhB9DP4b+x4ZGpWOXjIpbBf5BjvZESfGb17p3MnzUsaTkZSGz7LZNjbfdfNgLSOFzzIBWf0FLcRnDRea9DC87zrUsJPVzJF9E9AIZ3chKjLqCMGW4lAdJQ1qfqo4ZnfxJkL8W7GeJC0Ff6rwZ7PzWf/gmkFuG3wH0GbDwTSC3DP8B0I+hH0N/0pDhLlLCvwJpjAM7CC1lAAABg2lDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TpaIVBzOIOGSoTi2IijhKFYtgobQVWnUwufQLmhiSFBdHwbXg4Mdi1cHFWVcHV0EQ/ABxdHJSdJES/5cUWsR4cNyPd/ced+8AoVFlmtU1Dmi6baYTcSmXX5FCrxDQhzBERGVmGcnMQha+4+seAb7exXiW/7k/R79asBgQkIhnmWHaxOvE05u2wXmfWGRlWSU+J46adEHiR64rHr9xLrks8EzRzKbniEViqdTBSgezsqkRTxFHVE2nfCHnscp5i7NWrbHWPfkLwwV9OcN1miNIYBFJpCBBQQ0VVGEjRqtOioU07cd9/MOuP0UuhVwVMHLMYwMaZNcP/ge/u7WKkxNeUjgOdL84zscoENoFmnXH+T52nOYJEHwGrvS2f6MBzHySXm9rkSNgYBu4uG5ryh5wuQMMPRmyKbtSkKZQLALvZ/RNeWDwFuhd9Xpr7eP0AchSV0s3wMEhMFai7DWfd/d09vbvmVZ/P21dcqXiaaDUAAANGGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDo3YzhmNGQ2ZC05Mjk0LTQ2ZWQtYmRhOS1hNDA1MDVlZjNmOTAiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MTFhMGRlODctY2RlYi00YmMxLWIwNGQtZmY4ZmY4NmZmN2RjIgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6ZDNjOTZmYzktYWZlMy00YTJjLWIwNzgtNmUwM2QxZmQ1ZWEzIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NDQ1ODI0MDQ3ODc2NjUiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDplMTE5ZmRkMC04ODgwLTQ0NDQtYTg4MC02ODRlNTg4MGEzM2YiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjY6NDQiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+QhhreAAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YCCwwaLCrn6QIAAACQSURBVDjLY2AYBQMPGJE5cROOK/37///ofwYGCRzqX//7999mebH1LZgAE7LsogLLewwMDO4MDAwfsWj+/P8/gyeyZgwDGBgYGJYUWl1iZGAMZGBg+Ikk/JuBgSF0WZHVWXT1TNjcuaTQcj8DA0MCAwPDPwYGhv8MDAypSwutdpIcQDH9x4pj+o8VjyYVGgMAhMInzjvMAn0AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/up-down-arrows-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAARElEQVQImWN8K6PCwMDAwMBwfMYEy4wCCJsJLgQnoaJwDpzNuGXLFgYMwAg3F0UUq1omuL1wYJlRwAShkIUQLoNw4NIA3UcXw9uo6KsAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/dark/scrollbars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ0xBU1NJQyBWQVJJQU5UUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5jbGFzc2ljLXNjcm9sbHMgLnNjcm9sbCwNCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmMyZjMwOw0KICAgIGJvcmRlcjpub25lOw0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLmJ1dHRvbiwNCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5idXR0b257DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzJjMmYzMDsNCiAgICBib3JkZXI6bm9uZTsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAuc2Nyb2xsIC50aHVtYiwNCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC50aHVtYiB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzNkNDA0MjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAuc2Nyb2xsIC50aHVtYjpob3ZlciwNCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC50aHVtYjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzQ1NDg0YTsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAuc2Nyb2xsIC50aHVtYjpkb3duLA0KLnNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLnRodW1iOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICM0NTQ4NGE7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLnNjcm9sbCAudGh1bWI6ZGlzYWJsZWQsDQouc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAudGh1bWI6ZGlzYWJsZWQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM3Mzg7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLnZlcnRpY2FsLXNjcm9sbCAuZGVpbmMsDQoudmVydGljYWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuZGVpbmMgew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvc2hhcmVkL3VwLWFycm93LWxpZ2h0LnBuZyI7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLnZlcnRpY2FsLXNjcm9sbCAuZGVpbmM6ZG93biwNCi52ZXJ0aWNhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5kZWluYzpkb3duIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC91cC1hcnJvdy1icmlnaHQucG5nIjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAudmVydGljYWwtc2Nyb2xsIC5pbmMsDQoudmVydGljYWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9kb3duLWFycm93LWxpZ2h0LnBuZyI7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLnZlcnRpY2FsLXNjcm9sbCAuaW5jOmRvd24sDQoudmVydGljYWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuaW5jOmRvd24gew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvc2hhcmVkL2Rvd24tYXJyb3ctYnJpZ2h0LnBuZyI7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLmhvcml6b250YWwtc2Nyb2xsIC5kZWluYywNCi5ob3Jpem9udGFsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmRlaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9sZWZ0LWFycm93LWxpZ2h0LnBuZyI7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLmhvcml6b250YWwtc2Nyb2xsIC5kZWluYzpkb3duLA0KLmhvcml6b250YWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuZGVpbmM6ZG93biB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9zaGFyZWQvbGVmdC1hcnJvdy1icmlnaHQucG5nIjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAuaG9yaXpvbnRhbC1zY3JvbGwgLmluYywNCi5ob3Jpem9udGFsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmluYyB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9zaGFyZWQvcmlnaHQtYXJyb3ctbGlnaHQucG5nIjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAuaG9yaXpvbnRhbC1zY3JvbGwgLmluYzpkb3duLA0KLmhvcml6b250YWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuaW5jOmRvd24gew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvc2hhcmVkL3JpZ2h0LWFycm93LWJyaWdodC5wbmciOw0KfQ0K"},{ name : "haxeui-core/styles/default/optionboxes.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogT1BUSU9OQk9YDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLm9wdGlvbmJveCB7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIGhvcml6b250YWwtc3BhY2luZzogNHB4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOw0KfQ0KDQoub3B0aW9uYm94OmhvdmVyIHsNCn0NCg0KLm9wdGlvbmJveDpkaXNhYmxlZCB7DQogICAgY3Vyc29yOiBkZWZhdWx0Ow0KICAgIGNvbG9yOiAkZGlzYWJsZWQtdGV4dC1jb2xvcjsNCiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7DQp9DQoNCi5vcHRpb25ib3gtdmFsdWUgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIHdpZHRoOiAxOHB4Ow0KICAgIGhlaWdodDogMThweDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOw0KICAgIGJvcmRlci1yYWRpdXM6IDlweDsNCiAgICBpY29uOiBub25lOw0KICAgIGZpbHRlcjogJG5vcm1hbC1pbm5lci1zaGFkb3c7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoub3B0aW9uYm94LXZhbHVlOmhvdmVyIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOw0KfQ0KDQoub3B0aW9uYm94LXZhbHVlOmFjdGl2ZSB7DQogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsNCn0NCg0KLm9wdGlvbmJveC12YWx1ZTpzZWxlY3RlZCB7DQogICAgaWNvbjogJG9wdGlvbi1zZWxlY3RlZDsNCn0NCg0KLm9wdGlvbmJveC12YWx1ZTpkaXNhYmxlZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3ItZGlzYWJsZWQ7DQogICAgYm9yZGVyLWNvbG9yOiAkZGlzYWJsZWQtYm9yZGVyLWNvbG9yOw0KICAgIGN1cnNvcjogZGVmYXVsdDsNCn0NCg0KLm9wdGlvbmJveC1sYWJlbCB7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi5vcHRpb25ib3gtaWNvbiB7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KICAgIG9wYWNpdHk6IDE7DQp9DQoNCi5vcHRpb25ib3gtaWNvbjpkaXNhYmxlZCB7DQogICAgY3Vyc29yOiBkZWZhdWx0Ow0KICAgIG9wYWNpdHk6IDAuNTsNCn0NCg"},{ name : "haxeui-core/styles/shared/gripper-vertical.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAKCAIAAAAcmWhZAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAH0lEQVQImWN8K6PCAANMDAwMk5KjJyVHQzlwwEg7ZQCDgwyl+MMKdgAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/option-blue.png", data : ""},{ name : "haxeui-core/styles/default/calendars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ0FMRU5EQVINCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY2FsZW5kYXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7DQogICAgcGFkZGluZzogNXB4Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci1yYWRpdXM6IDFweDsNCn0NCg0KLmNhbGVuZGFyIC5idXR0b24gew0KICAgIHBhZGRpbmc6IDhweDsNCn0NCg0KLmNhbGVuZGFyIC5jYWxlbmRhci1vZmYtZGF5IHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBjdXJzb3I6IGRlZmF1bHQ7DQp9DQoNCi5jYWxlbmRhciAuY2FsZW5kYXItZGF5IHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGFjY2VudC1jb2xvci1saWdodGVyOw0KfQ0KDQouY2FsZW5kYXIgLmNhbGVuZGFyLWRheTpob3ZlciB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsNCn0NCg0KLmNhbGVuZGFyIC5jYWxlbmRhci1kYXktc2VsZWN0ZWQgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7DQogICAgY29sb3I6ICRzZWxlY3Rpb24tdGV4dC1jb2xvcjsNCn0NCg0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBDQUxFTkRBUlZJRVcNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY2FsZW5kYXItdmlldyB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBwYWRkaW5nOiA1cHg7DQogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogMXB4Ow0KfQ0KDQouZHJvcGRvd24tcG9wdXAgPiAuY2FsZW5kYXItdmlldyB7DQogICAgYm9yZGVyOiBub25lOw0KfQ0KDQouY2FsZW5kYXItdmlldyAuY2FsZW5kYXIgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBwYWRkaW5nOiAwcHg7DQp9DQoNCi5jYWxlbmRhci12aWV3IC5oYm94IHsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQouY2FsZW5kYXItdmlldyAjcHJldi1tb250aCB7DQogICAgaWNvbjogJGFycm93LWxlZnQ7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLmNhbGVuZGFyLXZpZXcgI25leHQtbW9udGggew0KICAgIGljb246ICRhcnJvdy1yaWdodDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQouY2FsZW5kYXItdmlldyAjY3VycmVudC1tb250aCB7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLmNhbGVuZGFyLXZpZXcgI2N1cnJlbnQteWVhciB7DQogICAgdGV4dC1hbGlnbjogcmlnaHQ7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgcGFkZGluZy10b3A6IDFweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KLmNhbGVuZGFyLXZpZXcgI2N1cnJlbnQteWVhciAuYnV0dG9uIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGJvcmRlcjogbm9uZTsNCn0NCg"},{ name : "haxeui_rtti", data : ""},{ name : "haxeui-core/styles/default/splitters.css", data : "LnNwbGl0dGVyIHsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoudmVydGljYWwtc3BsaXR0ZXItZ3JpcHBlciB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgaGVpZ2h0OiA2cHg7DQogICAgY3Vyc29yOiByb3ctcmVzaXplOw0KICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOw0KfQ0KDQoudmVydGljYWwtc3BsaXR0ZXItZ3JpcHBlcjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi52ZXJ0aWNhbC1zcGxpdHRlci1ncmlwcGVyOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWRvd247DQp9DQoNCi52ZXJ0aWNhbC1zcGxpdHRlci1ncmlwcGVyIC5pbWFnZSB7DQogICAgcmVzb3VyY2U6ICRncmlwcGVyLWhvcml6b250YWw7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi5ob3Jpem9udGFsLXNwbGl0dGVyLWdyaXBwZXIgew0KICAgIHdpZHRoOiA2cHg7DQogICAgaGVpZ2h0OiAxMDAlOw0KICAgIGN1cnNvcjogY29sLXJlc2l6ZTsNCiAgICBwb2ludGVyLWV2ZW50czogdHJ1ZTsNCn0NCg0KLmhvcml6b250YWwtc3BsaXR0ZXItZ3JpcHBlcjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi5ob3Jpem9udGFsLXNwbGl0dGVyLWdyaXBwZXI6ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3ItZG93bjsNCn0NCg0KLmhvcml6b250YWwtc3BsaXR0ZXItZ3JpcHBlciAuaW1hZ2Ugew0KICAgIHJlc291cmNlOiAkZ3JpcHBlci12ZXJ0aWNhbDsNCiAgICBob3Jpem9udGFsLWFsaWduOiBjZW50ZXI7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg"},{ name : "haxeui-core/locale/en_US/formats.properties", data : "Zm9ybWF0cy5kYXRlLnNob3J0PSVtLyVkLyVZDQo"},{ name : "haxeui-core/locale/es/formats.properties", data : "Zm9ybWF0cy5kYXRlLnNob3J0PSVkLyVtLyVZDQpmb3JtYXRzLmRlY2ltYWwuc2VwZXJhdG9yPSwNCg"},{ name : "haxeui-core/styles/shared/up-arrow-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAKklEQVQImWN8K6PCwMDAwMCQbKIz98wVCJsJLgQnoaJwDpzNGBAQwIABAOGNCDDIObJsAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/listview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTElTVFZJRVcNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoubGlzdHZpZXcgLmxpc3R2aWV3LWNvbnRlbnRzIHsNCiAgICBzcGFjaW5nOiAwOw0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHBhZGRpbmc6IDBweDsNCn0NCg0KLmxpc3R2aWV3IC5saXN0dmlldy1jb250ZW50cyA+IC5pdGVtcmVuZGVyZXIgew0KICAgIGN1cnNvcjogcG9pbnRlcjsgIA0KfQ0KDQoubGlzdHZpZXcgLmxpc3R2aWV3LWNvbnRlbnRzID4gLml0ZW1yZW5kZXJlciAubGFiZWwgew0KICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoubGlzdHZpZXcgLmV2ZW4gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQoubGlzdHZpZXcgLmV2ZW46aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsNCn0NCg0KLmxpc3R2aWV3IC5vZGQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWFsdDsNCn0NCg0KLmxpc3R2aWV3IC5vZGQ6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsNCn0NCg0KLmxpc3R2aWV3IC5saXN0dmlldy1jb250ZW50cyA+IC5pdGVtcmVuZGVyZXIgew0KICAgIGhlaWdodDogYXV0bzsNCiAgICBwYWRkaW5nOiA2cHg7DQp9DQoNCi5saXN0dmlldyAubGlzdHZpZXctY29udGVudHMgPiAuaXRlbXJlbmRlcmVyOnNlbGVjdGVkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7DQogICAgY29sb3I6ICRzZWxlY3Rpb24tdGV4dC1jb2xvcjsNCn0NCg0KLmxpc3R2aWV3IC5saXN0dmlldy1jb250ZW50cyA+IC5pdGVtcmVuZGVyZXI6c2VsZWN0ZWQgLmxhYmVsIHsNCiAgICBjb2xvcjogJHNlbGVjdGlvbi10ZXh0LWNvbG9yOw0KfQ0KDQoubGlzdHZpZXc6ZGlzYWJsZWQgLmxhYmVsIHsNCiAgICBjb2xvcjogJGRpc2FibGVkLXRleHQtY29sb3I7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIExJU1QgVklFVyAtIExFRlQgTUVOVSBBTFRFUk5BVEUNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoNCi5saXN0dmlldy5sZWZ0LW1lbnUgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBwYWRkaW5nOiAwcHg7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBtb2RlOiBtb2JpbGU7DQogICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQp9DQoNCi5saXN0dmlldy5sZWZ0LW1lbnUgLnZlcnRpY2FsLXNjcm9sbCAuZGVpbmMsIC5saXN0dmlldy5sZWZ0LW1lbnUgLnZlcnRpY2FsLXNjcm9sbCAuaW5jIHsNCiAgICBoaWRkZW46IHRydWU7DQp9DQoNCi5saXN0dmlldy5sZWZ0LW1lbnUgLnZlcnRpY2FsLXNjcm9sbCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsNCiAgICB3aWR0aDogOXB4Ow0KICAgIHBhZGRpbmc6IDJweDsNCn0NCg0KLmxpc3R2aWV3LmxlZnQtbWVudSAudmVydGljYWwtc2Nyb2xsIC50aHVtYiB7DQogICAgYmFja2dyb3VuZC1vcGFjaXR5OiAuMzsNCiAgICB3aWR0aDogNXB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCn0NCg0KLmxpc3R2aWV3LmxlZnQtbWVudSAubGlzdHZpZXctY29udGVudHMgew0KfQ0KICAgICAgICANCi5saXN0dmlldy5sZWZ0LW1lbnUgLmV2ZW4gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICANCiAgICBwYWRkaW5nLXRvcDogOHB4Ow0KICAgIHBhZGRpbmctYm90dG9tOiA4cHg7DQp9DQoNCi5saXN0dmlldy5sZWZ0LW1lbnUgLmV2ZW46aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOw0KICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIA0KICAgIHBhZGRpbmctdG9wOiA4cHg7DQogICAgcGFkZGluZy1ib3R0b206IDhweDsNCn0NCg0KLmxpc3R2aWV3LmxlZnQtbWVudSAub2RkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgDQogICAgcGFkZGluZy10b3A6IDhweDsNCiAgICBwYWRkaW5nLWJvdHRvbTogOHB4Ow0KfQ0KDQoubGlzdHZpZXcubGVmdC1tZW51IC5vZGQ6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOw0KICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIA0KICAgIHBhZGRpbmctdG9wOiA4cHg7DQogICAgcGFkZGluZy1ib3R0b206IDhweDsNCn0NCg0KLmxpc3R2aWV3LmxlZnQtbWVudSAubGlzdHZpZXctY29udGVudHMgPiAuaXRlbXJlbmRlcmVyOnNlbGVjdGVkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7DQogICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KDQoubGlzdHZpZXcubGVmdC1tZW51IC5saXN0dmlldy1jb250ZW50cyA+IC5pdGVtcmVuZGVyZXI6c2VsZWN0ZWQgLmxhYmVsIHsNCiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOw0KfQ0KICAgIA0KLmxpc3R2aWV3LmxlZnQtbWVudSAudmVydGljYWwtc2Nyb2xsIHsNCiAgICBvcGFjaXR5OiAuNTsNCiAgICB3aWR0aDogOHB4Ow0KICAgIHBhZGRpbmc6IDJweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOw0KICAgIGJvcmRlcjogbm9uZTsNCn0NCg"},{ name : "haxeui-core/styles/default/colorpickers.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ09MT1IgUElDS0VSDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmNvbG9yLXBpY2tlciB7DQogICAgcGFkZGluZzogMDsNCiAgICBib3JkZXItcmFkaXVzOiAkbm9ybWFsLWJvcmRlci1yYWRpdXM7DQogICAgaW5pdGlhbC13aWR0aDogMjcwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDMwMHB4Ow0KfQ0KDQouY29sb3ItcGlja2VyIC5jb250cm9scy1jb250YWluZXIgew0KICAgIGJvcmRlcjogJG5vcm1hbC1ib3JkZXItc2l6ZSBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBwYWRkaW5nOiA1cHggMnB4Ow0KICAgIGJvcmRlci1yYWRpdXM6ICRub3JtYWwtYm9yZGVyLXJhZGl1czsNCiAgICBzcGFjaW5nOiAycHg7DQp9DQoNCi5jb2xvci1waWNrZXIgLmNvbnRyb2xzLWNvbnRhaW5lciAjcHJldkNvbnRyb2xzIHsNCiAgICByZXNvdXJjZTogaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9sZWZ0LXNxdWFyZS1hcnJvdy1ibHVlLnBuZzsNCn0NCg0KLmNvbG9yLXBpY2tlciAuY29udHJvbHMtY29udGFpbmVyICNuZXh0Q29udHJvbHMgew0KICAgIHJlc291cmNlOiBoYXhldWktY29yZS9zdHlsZXMvc2hhcmVkL3JpZ2h0LXNxdWFyZS1hcnJvdy1ibHVlLnBuZzsNCn0NCg0KLmNvbG9yLXBpY2tlciAuY29udHJvbHMtY29udGFpbmVyIC50ZXh0ZmllbGQsIC5jb2xvci1waWNrZXIgI2lucHV0SGV4IHsNCiAgICB3aWR0aDogMjVweDsNCiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGZpbHRlcjogbm9uZTsNCiAgICBib3JkZXItcmFkaXVzOiAwcHg7DQogICAgYm9yZGVyLWJvdHRvbTogJG5vcm1hbC1ib3JkZXItc2l6ZSBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBwYWRkaW5nOiAwcHg7DQogICAgcGFkZGluZy1ib3R0b206IDFweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi5jb2xvci1waWNrZXIgI2lucHV0SGV4IHsNCiAgICB3aWR0aDogMTAwJTsNCn0NCg0KLmNvbG9yLXBpY2tlciAuY29udHJvbHMtY29udGFpbmVyIC5sYWJlbCB7DQogICAgd2lkdGg6IDU1cHg7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLmNvbG9yLXBpY2tlciAuY29udHJvbHMtY29udGFpbmVyIC5zbGlkZXIgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi8qIHNhdHVyYXRpb24gLyB2YWx1ZSAqLw0KLmNvbG9yLXBpY2tlciAjc2F0dXJhdGlvblZhbHVlQ29udGFpbmVyIHsNCiAgICBib3JkZXI6ICRub3JtYWwtYm9yZGVyLXNpemUgc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgcGFkZGluZzogMXB4Ow0KICAgIGJvcmRlci1yYWRpdXM6ICRub3JtYWwtYm9yZGVyLXJhZGl1czsNCn0NCg0KLmNvbG9yLXBpY2tlciAjc2F0dXJhdGlvblZhbHVlSW5kaWNhdG9yIHsNCiAgICB3aWR0aDogMTBweDsNCiAgICBoZWlnaHQ6IDEwcHg7DQogICAgYm9yZGVyOiAycHggc29saWQgd2hpdGU7DQogICAgYm9yZGVyLW9wYWNpdHk6IC43Ow0KICAgIGJvcmRlci1yYWRpdXM6MTBweDsNCn0NCg0KLyogaHVlICovDQouY29sb3ItcGlja2VyICNodWVDb250YWluZXIgew0KICAgIGJvcmRlcjogJG5vcm1hbC1ib3JkZXItc2l6ZSBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBwYWRkaW5nOjFweCAycHg7DQogICAgYm9yZGVyLXJhZGl1czogJG5vcm1hbC1ib3JkZXItcmFkaXVzOw0KfQ0KDQouY29sb3ItcGlja2VyICNodWVJbmRpY2F0b3Igew0KICAgIGJvcmRlci1yYWRpdXM6MnB4Ow0KICAgIHBvaW50ZXItZXZlbnRzOm5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjp3aGl0ZTsNCiAgICBmaWx0ZXI6ZHJvcC1zaGFkb3coMiwgNDUsICM4ODg4ODgsIDAuMSwgNCwgMSwgMzAsIDM1LCBmYWxzZSk7DQp9DQoNCi8qIHByZXZpZXcgKi8NCi5jb2xvci1waWNrZXIgI2NvbG9yUHJldmlld0NvbnRhaW5lciB7DQogICAgYm9yZGVyOiAkbm9ybWFsLWJvcmRlci1zaXplIHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIHBhZGRpbmc6IDJweDsNCiAgICBib3JkZXItcmFkaXVzOiAkbm9ybWFsLWJvcmRlci1yYWRpdXM7DQogICAgb3BhY2l0eTogMTsNCiAgICBmaWx0ZXI6IG5vbmU7DQp9DQoNCi5jb2xvci1waWNrZXI6ZGlzYWJsZWQgI2NvbG9yUHJldmlld0NvbnRhaW5lciB7DQogICAgZmlsdGVyOiBncmF5c2NhbGU7DQogICAgb3BhY2l0eTogLjM7DQp9DQoNCi5jb2xvci1waWNrZXIgI3NhdHVyYXRpb25WYWx1ZUdyYXBoIHsNCiAgICBvcGFjaXR5OiAxOw0KICAgIGZpbHRlcjogbm9uZTsNCn0NCg0KLmNvbG9yLXBpY2tlcjpkaXNhYmxlZCAjc2F0dXJhdGlvblZhbHVlR3JhcGggew0KICAgIGZpbHRlcjogZ3JheXNjYWxlOw0KICAgIG9wYWNpdHk6IC4zOw0KfQ0KDQouY29sb3ItcGlja2VyICNodWVHcmFwaCB7DQogICAgb3BhY2l0eTogMTsNCiAgICBmaWx0ZXI6IG5vbmU7DQp9DQoNCi5jb2xvci1waWNrZXI6ZGlzYWJsZWQgI2h1ZUdyYXBoIHsNCiAgICBmaWx0ZXI6IGdyYXlzY2FsZTsNCiAgICBvcGFjaXR5OiAuMzsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ09MT1IgUElDS0VSIFBPUFVQDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmNvbG9yLXBpY2tlci1wb3B1cCB7DQogICAgcGFkZGluZy10b3A6IDRweDsNCiAgICBwYWRkaW5nLWJvdHRvbTogNHB4Ow0KICAgIHBhZGRpbmctbGVmdDogNHB4Ow0KICAgIHBhZGRpbmctcmlnaHQ6IDZweDsNCn0NCg0KLmNvbG9yLXBpY2tlci1wb3B1cCAjc2VsZWN0ZWRDb2xvclByZXZpZXdDb250YWluZXIgew0KICAgIHBhZGRpbmc6IDJweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29udHJhc3QtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgb3BhY2l0eTogMTsNCiAgICBmaWx0ZXI6IG5vbmU7DQp9DQoNCi5jb2xvci1waWNrZXItcG9wdXA6ZGlzYWJsZWQgI3NlbGVjdGVkQ29sb3JQcmV2aWV3Q29udGFpbmVyIHsNCiAgICBmaWx0ZXI6IGdyYXlzY2FsZTsNCiAgICBvcGFjaXR5OiAuMzsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ09MT1IgUElDS0VSIFZBUklBTlQgLSBOTyBTTElERVJTDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmNvbG9yLXBpY2tlci5uby1zbGlkZXJzIC5zbGlkZXIgew0KICAgIGhpZGRlbjogdHJ1ZTsNCn0NCg0KLmNvbG9yLXBpY2tlci5uby1zbGlkZXJzICNjb250cm9sc1N0YWNrIC5sYWJlbCB7DQogICAgd2lkdGg6IDEwMCU7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIENPTE9SIFBJQ0tFUiBWQVJJQU5UIC0gTk8gVEVYVCBJTlBVVFMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY29sb3ItcGlja2VyLm5vLXRleHQtaW5wdXRzIC50ZXh0ZmllbGQgew0KICAgIGhpZGRlbjogdHJ1ZTsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ09MT1IgUElDS0VSIFZBUklBTlQgLSBOTyBDT05UUk9MUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5jb2xvci1waWNrZXIubm8tY29udHJvbHMgLmNvbnRyb2xzLXByZXZpZXctY29udGFpbmVyIHsNCiAgICBoaWRkZW46IHRydWU7DQp9DQo"},{ name : "haxeui-core/styles/default/last.css", data : "LmNvbXBvbmVudDphY3RpdmUgew0KICAgIF9fYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsNCn0NCg0KLmNvbXBvbmVudDphY3RpdmF0YWJsZSB7DQogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsNCn0NCg0K"},{ name : "haxeui-core/styles/shared/down-arrow-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWPcsmULAwZgsswoQBOyzChgglDIQgwMDEzIHLg0AIkLCIq+gFfgAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/left-arrow-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAANklEQVQImWN8K6PCwMDAwMCQbKLDBGcxMDAwwVkMDAzMt5zsGGCAae6ZKwgOAwMDnA81AMIHAN2yC5bbbdIbAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/right-arrow-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAL0lEQVQImWMMCAiYe+YKAwMDAwMDEwMDQ7KJDoID50M5ED6CM/fMFSY4C6oMbhoAEcwMOy/jUHEAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/right-arrow-square-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCwMBwfMYEy4wCBhhggrOOz5iARRRZAkUULoEuCjGdCVMIRRTZDQD4NA07+SZ5fAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/up-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAYAAABCxiV9AAAEAXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja5VZZdsUmDP1nFV0CkhCC5TCe0x10+b1g++VNSdMmfzXHFhZC0xWDG3/9Od0feMh8ckEtxRyjxxNyyFzQSf54yv6SD/t7PHZSeuS7/bMeBktA5fhN8ZS/+HRTcJCCnt4pSu0cqI8D+TTA6UnRaUiWR4xOPxXlU5HwMUCngnKE5WNOdh9CHQc95x9pSCs0fOrF1VP46T8YstcVdoR5CInHlyUcDsh62UnZnYJhWoKgRQJaEZErVCTkXZ78nVfuBZWr94RK5vegSDwkHBiPyYw3+pZP+j75bqf4zrK0s8eP/JivjD0meb1z9uTmHEd0JUSkNJ5BXSHuHgQrUi57WkQzvIq+7ZbRkkP1NkDeffMVrVEmBiyTAnUqNGls2qjBxcCDDZS5AZXFS2KcuYl3QGlhFGiySZYuCcg1wCvg8s0X2nbzNtcowXAnSDJBGR3w8++0TxXNuUqeaCUz884V/OJVBHBjIbe+kAIgNK860p3gqz0/C1cBgrrTnBBg8fVQUZXO2lp1JBtogaCCHmuNrJ8KkCLYVjiD2g/kI4lSJG/MRoQ8JuBToChh0XAFBKTKHV5yEIkAJ/GyjTlGW5aVDzb2LAChEsUATZYCrAI2NtSPhYQaKioaVDWqadKsJUoMUWOMFtfmV0wsmFo0s2TZSpIUkqaYLCWXciqZs2Bz1Byz5ZRzLgVGCzQXzC4QKKVylRqq1litpppraSifFpq22Kwl13Irnbt07BM9duup514GDZTSCENHHDbSyKNMlNqUGabOOG2mmWe5oUbugPWlfR81ulDjjdQStBtqmGp2qaC1nejCDIhxICBuCwEUNC/MfKIQ2C3oFmaourWTMbzUBU6nhRgQDINYJ92w+0DuATcXwo9w4ws5t6D7DeTcgu4T5F5xe4NaX6dN8+I2QmsZrqR6wfKLSkFJZ4g4g1c36Dql/oG6UGqPiEsNTqEingSE6piK1VGtDwQaP1Pl/Ldtfk2Xol/xyf3Il9FrM8DaQ8JJ6wsK2+KsnZbR3Lcfm8FJG6EAcJPw+NxTsI0RwzXH3Sbda/FleFgKxcDsJd7ckBeFF3WfDXzQ7G0tMLh/eP8+Uvd5ClgOb6TXMbrclOfkd6Vhdd9R98y4KCp6htH8xBG87jUacqKxjmIrum46yn5gqW2J74X2lGQ6/EMCcWwADniOVRnc1vjA2hxsEIpVFL4IZtPDcaxrN60sL/+tYy/UvQxsX6yjoAtugHyYbn4Pl3U5LQoI0npx8t7+3PpVq11KphAZ25H/NI6vqPtSYLslI6+7U1/XvA93kLcclJH3EPECtXnk87/58UHdTxX8rxXhNtYBgfsbkBUChqlTc0oAAAGDaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1OlohUHM4g4ZKhOLYiKOEoVi2ChtBVadTC59AuaGJIUF0fBteDgx2LVwcVZVwdXQRD8AHF0clJ0kRL/lxRaxHhw3I939x537wChUWWa1TUOaLptphNxKZdfkUKvENCHMEREZWYZycxCFr7j6x4Bvt7FeJb/uT9Hv1qwGBCQiGeZYdrE68TTm7bBeZ9YZGVZJT4njpp0QeJHrisev3EuuSzwTNHMpueIRWKp1MFKB7OyqRFPEUdUTad8IeexynmLs1atsdY9+QvDBX05w3WaI0hgEUmkIEFBDRVUYSNGq06KhTTtx338w64/RS6FXBUwcsxjAxpk1w/+B7+7tYqTE15SOA50vzjOxygQ2gWadcf5Pnac5gkQfAau9LZ/owHMfJJeb2uRI2BgG7i4bmvKHnC5Aww9GbIpu1KQplAsAu9n9E15YPAW6F31emvt4/QByFJXSzfAwSEwVqLsNZ9393T29u+ZVn8/bV1ypeJpoNQAAA0YaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOjIyYzQ2ODgwLTQzNDktNDFjMS05NWJjLWZkZGNmYTk0OWIxMyIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDowNmYyYWY4Ni1jNjA4LTRlZTItOTUwMy1lM2QwOWY3MWRhNjgiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDoxMDAxNDQzZC1kM2RkLTQ2YmQtYjYzMi0xMWE5ODk4MTYyOWYiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICBHSU1QOkFQST0iMi4wIgogICBHSU1QOlBsYXRmb3JtPSJXaW5kb3dzIgogICBHSU1QOlRpbWVTdGFtcD0iMTY0NDYxMjI3NzAwMjQxNyIKICAgR0lNUDpWZXJzaW9uPSIyLjEwLjI0IgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCI+CiAgIDx4bXBNTTpIaXN0b3J5PgogICAgPHJkZjpTZXE+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjQwN2YyZDllLWYyYzUtNDY2My04YzEyLTRkNjcyMGZhZDM0MSIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChXaW5kb3dzKSIKICAgICAgc3RFdnQ6d2hlbj0iMjAyMi0wMi0xMVQyMTo0NDozNyIvPgogICAgPC9yZGY6U2VxPgogICA8L3htcE1NOkhpc3Rvcnk+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz7T4nLNAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJTUUH5gILFCwkvxUCjQAAACNJREFUCNdjYEACoV1H/iPzGbFJrC6zYYRLouuAKWDEJgEDACRXDUjpoGrXAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/up-arrow-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAK0lEQVQImWN8K6PCwMDAwMAg9Pj2O1lVCJsJLgQnoaJwDpzN+P//fwYMAADCtw5xBtAKnQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/cards.css", data : "LmNhcmQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMCwgNDUsICMwMDAwMDAsIDAuMSwgNSwgMSwgMSwgMywgZmFsc2UpOw0KICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgICBwYWRkaW5nOiAxNXB4Ow0KfQ0KDQouY2FyZC10aXRsZS1sYWJlbCB7DQogICAgZm9udC1zaXplOiAxNnB4Ow0KICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7DQogICAgZm9udC1ib2xkOiB0cnVlOw0KfQ0KDQouY2FyZC10aXRsZS1jb250YWluZXIgew0KICAgIHBhZGRpbmctYm90dG9tOiA1cHg7DQogICAgd2lkdGg6IDEwMCU7DQp9DQoNCi5jYXJkLXRpdGxlLWxpbmUgew0KICAgIGhlaWdodDogMXB4Ow0KICAgIHdpZHRoOiAxMDAlOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KfQ0K"},{ name : "haxeui-core/styles/default/progressbars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogUFJPR1JFU1MNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQpAa2V5ZnJhbWVzIGluZGV0ZXJtaW5hdGUgew0KICAgIDAlIHsNCiAgICAgICAgc3RhcnQ6IDA7DQogICAgICAgIGVuZDogMjU7DQogICAgfQ0KICAgIDUwJSB7DQogICAgICAgIHN0YXJ0OiA3NTsNCiAgICAgICAgZW5kOiAxMDA7DQogICAgfQ0KICAgIDEwMCUgew0KICAgICAgICBzdGFydDogMDsNCiAgICAgICAgZW5kOiAyNTsNCiAgICB9DQp9DQoNCi5wcm9ncmVzczppbmRldGVybWluYXRlIHsNCiAgICBhbmltYXRpb246IGluZGV0ZXJtaW5hdGUgMXMgZWFzZSAwcyBpbmZpbml0ZTsNCn0NCg0KLnByb2dyZXNzLXZhbHVlIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLXJhZGl1czogMXB4Ow0KfQ0KDQouaG9yaXpvbnRhbC1wcm9ncmVzcyB7DQogICAgYmFja2dyb3VuZDogJG5vcm1hbC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCAkbm9ybWFsLWJhY2tncm91bmQtY29sb3Itc3RhcnQgdmVydGljYWw7DQogICAgaW5pdGlhbC13aWR0aDogMTUwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDhweDsNCn0NCg0KLmhvcml6b250YWwtcHJvZ3Jlc3MgLnByb2dyZXNzLXZhbHVlIHsNCiAgICBiYWNrZ3JvdW5kOiAkYWNjZW50LWdyYWRpZW50LXN0YXJ0ICRhY2NlbnQtZ3JhZGllbnQtZW5kIHZlcnRpY2FsOw0KICAgIGhlaWdodDogMTAwJTsNCn0NCg0KLmhvcml6b250YWwtcHJvZ3Jlc3M6ZGlzYWJsZWQgew0KICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsNCn0NCg0KLmhvcml6b250YWwtcHJvZ3Jlc3M6ZGlzYWJsZWQgLnByb2dyZXNzLXZhbHVlIHsNCiAgICBiYWNrZ3JvdW5kOiAkZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvci1zdGFydCAkZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvci1lbmQgdmVydGljYWw7DQp9DQoNCi52ZXJ0aWNhbC1wcm9ncmVzcyB7DQogICAgYmFja2dyb3VuZDogJG5vcm1hbC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCAkbm9ybWFsLWJhY2tncm91bmQtY29sb3Itc3RhcnQgaG9yaXpvbnRhbDsNCiAgICBpbml0aWFsLXdpZHRoOiA4cHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDE1MHB4Ow0KfQ0KDQoudmVydGljYWwtcHJvZ3Jlc3MgLnByb2dyZXNzLXZhbHVlIHsNCiAgICBiYWNrZ3JvdW5kOiAkYWNjZW50LWdyYWRpZW50LXN0YXJ0ICRhY2NlbnQtZ3JhZGllbnQtZW5kIGhvcml6b250YWw7DQogICAgd2lkdGg6IDEwMCU7DQp9DQoNCi52ZXJ0aWNhbC1wcm9ncmVzczpkaXNhYmxlZCAucHJvZ3Jlc3MtdmFsdWUgew0KICAgIGJhY2tncm91bmQ6ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCBob3Jpem9udGFsOw0KfQ0KDQoudmVydGljYWwtcHJvZ3Jlc3M6ZGlzYWJsZWQgew0KICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsNCn0NCg"},{ name : "haxeui-core/styles/shared/up-square-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADc3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7ZddcuwoDIXfWcUsAUmAxHIwP1Wzg7v8OWDspDs9VZPkTtV9iEkDFrI46AN3x/Vffw/3Fy72nFyIaimn5HGFHDIXdMyfV1k1+bDqfeOvzoPd3QMMk6CV89bS9r/s5B8iUUEvvgtkdQ8cjwM57Pj2FGhPJFMRo9N2oLwDCZ8DtAOUc1k+ZdP3Szj62bZrJXZ+3KzGlRM9m+f7oMhei5hHmLuQeNQifAqQ+WEnBQOMmiXDkeAwLRn1uQo6E/IqT/eVoWhMqeGl0wOVu0ev7e6ZVuDtIk9JTnf70u4ovqayUv9u5mC7x4/2fJyhnH/K/kr+aDbWmrGKEhJSnfai7qwtKKMdmGJObQ7xEugk7CFDO0tGMezqiq3QfPUHSqVMDFyDAjUqNKivtlKFxMDdsaLDXFmW0UQ5c5XJL8xCgxUMmxi41oU9CN9aaE2bfXVrNsPMjeDKhGBzO3y6uM8+MMY8CkTe7lxBF/NMNmRMcrOGG4jQ2EmNK8FXeb4mVwHBOLM8j0hGYo8zxBHp7U0gC7TAMaI9zyBp2wGQIkwdIYYEBECNJFIir8xKhEQaABVIZwl8gADFyA0iOYgksDGeU+MRpeXKkWF2sONlBhJRkijY4JQBVggR+0eDYQ+VKDHEGFPUaDHHkiSFFFNKmuZLsahocBo1qapp1mJiwaIlUzPLVjJnwUsz5pQ1W865FMxZELng6QKHUg4+5AhHdEc69LAjH6Vi+9RQY01Vq9VcS+MmDe+Plpo2a7mVTh1bqYcee+raredeBrbaEDfCiCMNHTbyKDe1jfVD+QQ12tR4kZqOelODVfUKQfN1EiczAGMXCMR1IsCG5snMG4XAk9xk5jPjVESGyDiZNZrEQDB04jjoYuf4JDrJfYub0/DAjb9Kzk10nyT3kdsram1+DdVF7DyFM6lecPow3q2wlfll96F1/zbw2fYn0E+g/y/QKHRu4lE8jowva8BL12Xlo2sdqb5/zP0mQY+BICRtIQQh+ybg52DEH/zi6lUcu15Ox9wFX97ouin5kv6d1p1rt7TXbmHQVvim5HUrM2f5ypmzp6R9pZ0pcW85kSsn8l+XRGekxJDmyqXNhn5JylbiviTlhTR3a/uWtB3od2zJn0A/gf7kQPg1Mv+t/AfTYMCLM/OUnAAAAYRpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNQFIVPU6UiFUE7iChkqJ0siIo4ShWLYKG0FVp1MHnpHzRpSFJcHAXXgoM/i1UHF2ddHVwFQfAHxNHJSdFFSrwvKbSI8cHlfZz3zuG++wChUWGq2TUBqJplpOIxMZtbFQOvCGKUagARiZl6Ir2Ygef6uoeP73dRnuV978/Vp+RNBvhE4jmmGxbxBvHMpqVz3icOsZKkEJ8TjxvUIPEj12WX3zgXHRZ4ZsjIpOaJQ8RisYPlDmYlQyWeJg4rqkb5QtZlhfMWZ7VSY60++QuDeW0lzXWqEcSxhASSECGjhjIqsBClXSPFRIrOYx7+YcefJJdMrjIYORZQhQrJ8YP/we/ZmoWpSTcpGAO6X2z7YwwI7ALNum1/H9t28wTwPwNXWttfbQCzn6TX21r4COjfBi6u25q8B1zuAENPumRIjuSnEgoF4P2MvikHDN4CvWvu3FrnOH0AMjSr5Rvg4BCIFCl73ePdPZ1z+/dOa34/n9lyuQWiUawAAA80aVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOjEwZTExZGUyLTA1MjUtNDAzYi05NmFiLWM4NjFkNmYxOWEwYSIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo5MGEwOTc1MC1iZDZlLTQxMTYtODExZS01MDdmZGQ5MjczNmYiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDoyYzQ1M2QzNC02YjkyLTQ0MmMtOWFjYi0xODI1ZjI3NDQ2MWEiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICBHSU1QOkFQST0iMi4wIgogICBHSU1QOlBsYXRmb3JtPSJXaW5kb3dzIgogICBHSU1QOlRpbWVTdGFtcD0iMTY3MjMxNjM0MjAyMzA4OCIKICAgR0lNUDpWZXJzaW9uPSIyLjEwLjMyIgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCIKICAgeG1wOk1ldGFkYXRhRGF0ZT0iMjAyMjoxMjoyOVQxMzoxOTowMCswMTowMCIKICAgeG1wOk1vZGlmeURhdGU9IjIwMjI6MTI6MjlUMTM6MTk6MDArMDE6MDAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpiM2YwMzU2NS0xNWQzLTQ4MGEtOGUxYi1kMmZlZTM3NDZmMmMiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjU6MjkiLz4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6ZGNkOTA2MjMtOTYzMi00OGY2LWI3NjYtMzk3NTE1NTY5Nzg2IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTA3LTI2VDEwOjM5OjM4Ii8+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmE4NDgwNTk0LWViYWQtNGE1OC04MmYwLTEyNDJiMzcyODdmZCIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChXaW5kb3dzKSIKICAgICAgc3RFdnQ6d2hlbj0iMjAyMi0xMi0yOVQxMzoxOTowMiIvPgogICAgPC9yZGY6U2VxPgogICA8L3htcE1NOkhpc3Rvcnk+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz5nBDHtAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5gwdDBMC7bHppgAAAIRJREFUOMtjYBgFtAWxE46Xx044Xo5PDSMuiei+Y1EMjAxLGBgYGBj+M8QsLbJaRrQBMf3HPf8z/N/AwMDABhX6xcjAGLCk0HI7QQOi+o4ZMzIyHGRgYOBGk/r6/z+D/bIiq7M4DYjqO6bMyMhwlIGBQRyHz17+/89gvazI6u5oChlMAABStSJbN0BoiAAAAABJRU5ErkJggg"},{ name : "haxeui-core/locale/de/formats.properties", data : "Zm9ybWF0cy5kYXRlLnNob3J0PSVkLyVtLyVZDQpmb3JtYXRzLmRlY2ltYWwuc2VwZXJhdG9yPSwNCg"},{ name : "haxeui-core/styles/shared/option-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAMAAAC67D+PAAAAQlBMVEVYWGzW/9EAAACYtdLCqYPP6PTU////9KxYWFhUVlhXVVJ4rthXkMHs1Kxsj6lSYXvElmdYWGeefViUXFhfUVNWUk58LX/QAAAACHRSTlMnCADr69QWFksN2hQAAAA8SURBVAjXY2BiZxDi5OBjYGNiYGTh4OTg4BJkZmTgFeEAA35WBgFOCFOUm0EYyuTiQWYiFCBrQxiGZAUAvXcDb/w8amgAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/down-arrow-square-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAYAAADEUlfTAAAEK3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VdZkuQoDP3nFHMEJCEQx8EsEX2DOf482U53ZVZld23z0RNjwoCFEEJPCDnMv3+s8BcepppC0mK55hzxpJoqN3QsHk/ba4ppr4+nnC3d08M1wCAJWjk+LZ/8NzpdAo6moacvBFk/B7b7gZpO+fYg6FxIXCNGZ5yC6ilI+BigU0A7thVztfJyC9s82nP+YQbzraHablQ9mR++U4H1hmIdYZ5CElGzpEMB8ZeDtL3T9mHoLRV9kbLXN5vAIG/ZKb7QKrxC5dajJ/QHUCQf9ADCvTHz1b5JJ33b+GE38YuVpV8r39HTuhzlzsj+rjUsrDWP3bWUYdJ8buqyjnfAuEGU7NMySsGr6Je9VBQL8N4OyEfscUPpVIlh90WJBjVaNPe2U4eKiScXtMydZaeZFK7cJQaglbzQ4gLEhhgw7IBXQOVLF9rXrftynQwLDwInE4TRAT9/T3kqaC13eaJol62gF/uhgBqOnNfgAiC0bn6ku4Fv5fGh3VMTuNzMhg22uB0iNqXTt9yPZAdawKhoj7NGZZwCYCKsrVCGBAjETKKUKRbmQgQ7GvBpEGQ4NLwBAlLlAS05iWSAY+xrY06hnZeVDzJiFoBQyThI5kcKWHlgg/+UZPChpqJJVbMWNa3asuSUNedcsge/VqSkoiWXUqzU0kwsmVq2YhasWqtcBcFRa66lWq21NSzaILlhdgNDaxtvsqVNt7yVzba6tQ736alrz710C732NnjIQJwYeZRho442acKVZpo68yzTZp1twdWWrLR05VWWrbrahRqFA9ZX5f2o0Q013pFyxnKhhqml3ESQhxN1zIAYJwLixRGAQ7NjFo1S4uDQOWaxMk6FMrRUB2eQIwYE0yTWRRd2P5G7wy2k9CXc+IZccOi+A7ng0D1B7jVub6A2/LbpUcKOkB9DN2oUHL+slJR0pYw72LtJ/Zb6TRvey/i/oD9LUKpG02+80hRXkcBRU48redIwkPUclPCa9DnKHycoNrb2rja8l/HjgqqUuLQdNbK/Nyk46ghP/5pGiVN8uvY95QgxMOM+31l0bmm1zAHjZfDXVQqvBhDQXbbQ1pAl86MKj+1NpcDfpFKIX1UpUleeMwg0q3488eH9PB8pi4bfJzWWRMmeCQzPV4J/50PsEqSMuPpwRW+22qC95l1RHb2MXP2nZnwuACGkTPupaniq669URc42kpVGzeZp3sDV4mHP+PFWkOcZ9YFcIjTkH7WSmzmV5pbQ+Ehp28KljTTocXs/uSTQNpfy68nqvyUVSfm+Xvut4uEzO+K2xvT8Qtc2QFjNt4aYcLH07CNIbwb2Uj9kvvBZO9+0gmP7/2X1MOJu5x4Nty1wqj56Nn8RNQ4FCUlZUvnleQvfE9b+c4JkIfUD6OEf4i71AujO6WgAAAGFaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1O1IhUHK4g4ZKhOFkRFBBepYhEslLZCqw4ml35Bk4YkxcVRcC04+LFYdXBx1tXBVRAEP0AcnZwUXaTE/yWFFjEeHPfj3b3H3TtAqJeZanaMA6pmGclYVMxkV8XAKwQEMIBZdEnM1OOpxTQ8x9c9fHy9i/As73N/jl4lZzLAJxLPMd2wiDeIpzctnfM+cYgVJYX4nHjMoAsSP3JddvmNc8FhgWeGjHRynjhELBbaWG5jVjRU4inisKJqlC9kXFY4b3FWy1XWvCd/YTCnraS4TnMYMSwhjgREyKiihDIsRGjVSDGRpP2oh3/I8SfIJZOrBEaOBVSgQnL84H/wu1szPznhJgWjQOeLbX+MAIFdoFGz7e9j226cAP5n4Epr+St1YOaT9FpLCx8BfdvAxXVLk/eAyx1g8EmXDMmR/DSFfB54P6NvygL9t0DPmttbcx+nD0Caulq+AQ4OgdECZa97vLu7vbd/zzT7+wF8pXKr0kUkPQAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6ZWY5MjY4YzktNTgwYy00MjQ0LTgyODktYTAwYzk2N2E0YmFjIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjRiZDVmMGQ1LWNkMWUtNDViYi1iNmQ5LWE4YzVlNDkyM2U3MSIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOmVhMTQ5N2M5LTAxMzktNDk4ZS1hZDYwLTk5NTI1NzhlOWIxYyIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQ0NDgyMjUxMTA2NTgwIgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6OWVhYTkyOTYtOTI0NC00ZTU4LThkYmUtZWNhODMxMTJkZDE2IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAyLTEwVDA5OjM3OjMxIi8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/PjAYwf0AAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfmAgoIJR9yXG2RAAAALUlEQVQI12NgIBcwhnYd+Y9TkoGBgQGbgtVlNoyMMA6ygtVlNowYxuCzAgMAAKYfDUgzMsMOAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/help-medium.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAADpElEQVRYhe2X32scVRTHP/fOZtMFs7tJC4np1mS7RQjC2oJg7ZMKPvShBBR9MopiqYbaP0CwL0VQ30SyGtsnow9SUGMViw8WBGlebBWjlJgf/ZFNQo2Jm0SSzM6914fJbmayO7OTRJ/0+zRz5n7P97tnzpx7F/7rEDsh3T+4tK+sZKeQIqM0xlJmel3omeLp5B//moHcQOmQEbLPQC/wYMCyH4VhWMbU0Pip9MQ/YiB7fqUdx5zFcBJoiui3jGFQSs5NvNJyd8cGut5fekRq8SnQEVF4K+bRPDV1uuW7oAUy6EH2veVnpBZXdiEOsA/JN9nC8tNBC+pWIDewdEwL8S3QvAtxL2w0T9SrRI2B7PmVdmzzE4L2sIwHkpIDLQJbGWZWYHZFY8JNzFkO+fEzLb97g7GaZY45GybelZK8dqyJnr2WL357SfPWSJmf76ogaoeK8Tpwxhv0VSA3UDqkhfyVgG5PxgUfnthDW6J+7646hucvrTH3V2AtbIXqud2fnqwEfE2okc8FiQMcz1lV8TtLmv7L67z41RpjCxqARExwPFdbVA/iUlh93oD/KxD0hrFzrZtlv3jDYXReMb6o+XzMqcYzycAPy5Uwfo2qXXe8kg8jfzHmcLXoio3O62q81fNKFlcbtCIczlwotU2/lFrwGbAdmREinDw6r2DeH+vZa/HsA24apeHrSacO0wfRZFsZYAE8r8AIcW8j5lZ0pyVvPx4nEXMrULhmM7GoG7DAGDor11UDwpiGtfMibsGbj8ZJNbvig9fLXLzR8NdXVM3mZcWAxex2DBzdb9F5j0v/ctzh41/KkbnSYabGgO3o6e0Y6E5tdvul3wKHTz0YO6GKlRvfRMkWlq8Dh6NkOdgq6Uq69JGiZtWJ/AZ/mOpveahy45sawjBsRDQDk4sapSXLttmOOAiGvbe+qSFjagiwo+R5Id/E0Ik9fNKbqNkXQmBrR30UaGD8VHoCwwdRMj3c6VKbY3CkI3z6VSCgcOvV9FSgAQApOQfMNUp2eVKhDCyuGb6/E6kJZ2OWeaOOqVpsHMWu0OBA0hwDR7sTsAHWDPqxm/2pka0P6tbu1svJq0AfsB6Wdd2JJo6hr544NDiUdhdKRwXyM3Z+Lpw16CeDxCHkUApwsz81YjnkgXeJ+HVswBaCd5oskw8Th238Mbmv8OdBKay+jf38SN1kgmvaMGyUGtra7bs24EXmQqktvmrtV5bIAFjKTNsJVazs8f9jO/gbuERJ498j87cAAAAASUVORK5CYII"},{ name : "haxeui-core/locale/en/std-strings.properties", data : "c2F2ZT1TYXZlDQp5ZXM9WWVzDQpubz1Obw0KY2xvc2U9Q2xvc2UNCm9rPU9LDQpjYW5jZWw9Q2FuY2VsDQphcHBseT1BcHBseQ0Kc2VhcmNoPVNlYXJjaA0KDQpyZWQ9UmVkDQpncmVlbj1HcmVlbg0KYmx1ZT1CbHVlDQpodWU9SHVlDQpzYXR1cmF0aW9uPVNhdHVyYXRpb24NCmJyaWdodG5lc3M9QnJpZ2h0bmVzcw0K"},{ name : "haxeui-core/styles/shared/option-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAgAAAAICAYAAADED76LAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5QEaCgw0CA+AtQAAAINJREFUGNN9zDEKwlAQRdE781egfdYQV6FgM0WWYpNNSPYRm2ktsgfb9LYSsE7+WAQE4ccDr7rwBMDdqyB1CEcAgkElt2Y2irtXoelBsOfXJLHUGqSuEAF2SLrq97Yg4KT8F0owbHe5q0pugalQX3nWi5rZKLHUAjfgvU76PKdD05yfH881KnTRsBd3AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/window-collapse-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpVorDnbwa8hQnSyIijhKFYtgobQVWnUwufQLmjQkKS6OgmvBwY/FqoOLs64OroIg+AHi6OSk6CIl/i8ttIjx4Lgf7+497t4BQq3EVLNjAlA1y0hEI2I6syr6XtGDYXTDj0GJmXosuZiC6/i6h4evd2Ge5X7uz9GrZE0GeETiOaYbFvEG8cympXPeJw6ygqQQnxOPG3RB4keuyw1+45x3WOCZQSOVmCcOEov5NpbbmBUMlXiaOKSoGuUL6QYrnLc4q6UKa96TvzCQ1VaSXKc5giiWEEMcImRUUEQJFsK0aqSYSNB+xMU/5Pjj5JLJVQQjxwLKUCE5fvA/+N2tmZuabCQFIkDni21/jAK+XaBete3vY9uunwDeZ+BKa/nLNWD2k/RqSwsdAX3bwMV1S5P3gMsdYOBJlwzJkbw0hVwOeD+jb8oA/beAf63RW3Mfpw9AirpavgEODoGxPGWvu7y7q723f880+/sBXHpynoD2GeAAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmCxsJGShdZYndAAAA5klEQVQoz8WRoW7CUBiFv/8WMYFZshCyOQTNzBQCElwNFVOTkyNLtgrUkrlpxExDC46XKL1kpgvZkj0Cl3oETzDFPw0hOLIjzzmfOQf+RWnmGmnmGocys28k2eoaTxZ4fKd2eXMUmMyWLfFYAFcgdTCfE1t2DgIj64KtMQVwoRArxMD5Fv0YWRfsAEle3hokA6qIDqOwOYjC5gCVV6BqkHw8X90ByDgv71V0ClRE9OWp57/vDDB3ESoxoKLyaBQNAIPwsF8GeO75CUIfQNGuvBVFpfZ72Y5C/+vY1Il13c3Z+uf0p/4Bt0VKdw++nJwAAAAASUVORK5CYII"},{ name : "changelog", data : "Ww0KICAgIHsiZGF0ZSI6ICJYWC5ZWS4yMDIyIiwgIkVOIjoiTmV3IE1pbGVzdG9uZSBVcGRhdGUiLCAiUlUiOiLQntCx0L3QvtCy0LvQtdC90LjQtSDCq9Cd0L7QstCw0Y8g0LLQtdGF0LDCuyJ9LA0KICAgIHsiZGF0ZSI6ICIwNC4xMS4yMDIxIiwgIkVOIjoiTG93LW9uLXRpbWUgYWxlcnRzIiwgIlJVIjoi0J/RgNC10LTRg9C/0YDQtdC20LTQtdC90LjQtSDQv9GA0Lgg0YbQtdC50YLQvdC+0YLQtSJ9LA0KICAgIHsiZGF0ZSI6ICIyOS4xMC4yMDIxIiwgIkVOIjoiU29tZSBRb0wgYWRkaXRpb25zIiwgIlJVIjoiUW9MLdC90L7QstC+0LLQstC10LTQtdC90LjRjyJ9LA0KICAgIHsiZGF0ZSI6ICIyNi4xMC4yMDIxIiwgIkVOIjoiQnVnZml4ZXMiLCAiUlUiOiLQmNGB0L/RgNCw0LLQu9C10L3QuNGPINCx0LDQs9C+0LIifSwNCiAgICB7ImRhdGUiOiAiMjUuMTAuMjAyMSIsICJFTiI6IkFuYWx5c2lzIGJvYXJkIDIuMCwgU3R1ZGllcywgRXhwbG9yZSBwb3NpdGlvbiIsICJSVSI6ItCU0L7RgdC60LAg0LDQvdCw0LvQuNC30LAgMi4wLCDQodGC0YPQtNC40LgsINCQ0L3QsNC70LjQtyDQsiDQvdCw0LHQu9GO0LTQtdC90LjQuCJ9LA0KICAgIHsiZGF0ZSI6ICIxMS4wOS4yMDIxIiwgIkVOIjoiQnVnZml4ZXMiLCAiUlUiOiLQmNGB0L/RgNCw0LLQu9C10L3QuNGPINCx0LDQs9C+0LIifSwNCiAgICB7ImRhdGUiOiAiMTEuMDguMjAyMSIsICJFTiI6IlBsYXllciBwcm9maWxlIHBhZ2UiLCAiUlUiOiLQn9GA0L7RhNC40LvRjCDQuNCz0YDQvtC60LAifSwNCiAgICB7ImRhdGUiOiAiMDguMDguMjAyMSIsICJFTiI6IlJldmlzaXRpbmcgZ2FtZXMsIFNwZWN0YXRpb24gZW5oYW5jZW1lbnRzLCBDaGF0IGhpc3RvcnkiLCAiUlUiOiLQn9GA0L7RgdC80L7RgtGAINC/0YDQvtGI0LXQtNGI0LjRhSDQuNCz0YAsINC40YHRgtC+0YDQuNGPINGH0LDRgtCwLCDRg9C70YPRh9GI0LXQvdC40Y8g0L3QsNCx0LvRjtC00LXQvdC40Y8ifSwNCiAgICB7ImRhdGUiOiAiMDUuMDguMjAyMSIsICJFTiI6IkNvbG9yIHNlbGVjdGlvbiIsICJSVSI6ItCS0YvQsdC+0YAg0YbQstC10YLQsCJ9LA0KICAgIHsiZGF0ZSI6ICIwMy4wOC4yMDIxIiwgIkVOIjoiQnVnZml4ZXMiLCAiUlUiOiLQmNGB0L/RgNCw0LLQu9C10L3QuNGPINCx0LDQs9C+0LIifSwNCiAgICB7ImRhdGUiOiAiMjcuMDcuMjAyMSIsICJFTiI6Ik5vdyB5b3UgY2FuIHNjcm9sbCB0aGUgZ2FtZSBhZnRlciBpdCBoYXMgZW5kZWQuIEFsc28gYnVnZml4ZXMiLCAiUlUiOiLQn9GA0L7RgdC80L7RgtGAINC/0LDRgNGC0LjQuCDQv9C+0YHQu9C1INC+0LrQvtC90YfQsNC90LjRjyDQuCDQuNGB0L/RgNCw0LLQu9C10L3QuNGPINCx0LDQs9C+0LIifSwNCiAgICB7ImRhdGUiOiAiMjUuMDcuMjAyMSIsICJFTiI6IlNvZGl1bSDOsSIsICJSVSI6IlNvZGl1bSDOsSJ9LA0KICAgIHsiZGF0ZSI6ICIxOC4wNy4yMDIxIiwgIkVOIjoiQnVnZml4ZXMiLCAiUlUiOiLQmNGB0L/RgNCw0LLQu9C10L3QuNGPINCx0LDQs9C+0LIifSwNCiAgICB7ImRhdGUiOiAiMTYuMDcuMjAyMSIsICJFTiI6IkV4dGVuZGVkIHNpZGUgYm94IGZ1bmN0aW9uYWxpdHkiLCAiUlUiOiLQndC+0LLRi9C1INGE0YPQvdC60YbQuNC4INCx0L7QutC+0LLQvtC5INC/0LDQvdC10LvQuCJ9LA0KICAgIHsiZGF0ZSI6ICIxOS4wNi4yMDIxIiwgIkVOIjoiQnVnZml4ZXMgJiBOb3RhdGlvbiB1cGRhdGUiLCAiUlUiOiLQmNGB0L/RgNCw0LLQu9C10L3QuNGPINCx0LDQs9C+0LIg0Lgg0L7QsdC90L7QstC70LXQvdC40LUg0L3QvtGC0LDRhtC40LgifSwNCiAgICB7ImRhdGUiOiAiMDguMDYuMjAyMSIsICJFTiI6IkJ1Z2ZpeGVzIiwgIlJVIjoi0JjRgdC/0YDQsNCy0LvQtdC90LjRjyDQsdCw0LPQvtCyIn0sDQogICAgeyJkYXRlIjogIjAxLjA2LjIwMjEiLCAiRU4iOiJUZXh0IGRpc3BsYXkgYnVnIGZpeGVkIiwgIlJVIjoi0JjRgdC/0YDQsNCy0LvQtdC90LAg0L7RiNC40LHQutCwINC+0YLQvtCx0YDQsNC20LXQvdC40Y8g0YLQtdC60YHRgtCwIn0sDQogICAgeyJkYXRlIjogIjE5LjA1LjIwMjEvMiIsICJFTiI6Ikxhbmd1YWdlIHNlbGVjdCBhbmQgUnVzc2lhbiB0cmFuc2xhdGlvbiIsICJSVSI6ItCS0YvQsdC+0YAg0Y/Qt9GL0LrQsCDQuCDRgNGD0YHRgdC60LjQuSDQv9C10YDQtdCy0L7QtCJ9LA0KICAgIHsiZGF0ZSI6ICIxOS4wNS4yMDIxLzEiLCAiRU4iOiJTZWN1cmUgd2Vic29ja2V0IGNvbm5lY3Rpb24iLCAiUlUiOiLQodC+0LXQtNC40L3QtdC90LjQtSDQv9C+INC/0YDQvtGC0L7QutC+0LvRgyB3c3M6Ly8ifSwNCiAgICB7ImRhdGUiOiAiMDQuMDQuMjAyMS8yIiwgIkVOIjoiUmVjb25uZWN0IHRvIGEgZ2FtZSwgU3BlY3RhdGUgYnkgbGluaywgRGlzY29ubmVjdGlvbiBoYW5kbGluZyIsICJSVSI6ItCf0LXRgNC10L/QvtC00LrQu9GO0YfQtdC90LjQtSDQuiDQuNCz0YDQtSwg0L3QsNCx0LvRjtC00LXQvdC40LUg0L/QviDRgdGB0YvQu9C60LUsINC+0LHRgNCw0LHQvtGC0LrQsCDQvtGI0LjQsdC+0Log0YHQvtC10LTQuNC90LXQvdC40Y8ifSwNCiAgICB7ImRhdGUiOiAiMDQuMDQuMjAyMS8xIiwgIkVOIjoiUk1CIGFjdGlvbnMgKGhleCBzZWxlY3Rpb24gJiBhcnJvdyBkcmF3aW5nKSIsICJSVSI6ItCS0YvQtNC10LvQtdC90LjQtSDQs9C10LrRgdC+0LIg0Lgg0YHRgtGA0LXQu9C+0YfQutC4In0sDQogICAgeyJkYXRlIjogIjI3LjAzLjIwMjEiLCAiRU4iOiJNYXJrcyAmIFNldHRpbmdzIG1lbnUiLCAiUlUiOiLQnNC10YLQutC4INC4INC80LXQvdGOINC90LDRgdGC0YDQvtC10LoifSwNCiAgICB7ImRhdGUiOiAiMjUuMDMuMjAyMSIsICJFTiI6IlNwZWN0YXRpb24iLCAiUlUiOiLQndCw0LHQu9GO0LTQtdC90LjQtSJ9LA0KICAgIHsiZGF0ZSI6ICIyMy4wMy4yMDIxIiwgIkVOIjoiVGhyZWVmb2xkIHJlcGV0aXRpb24gJiAxMDAgbW92ZSBydWxlIiwgIlJVIjoi0KLRgNC+0LXQutGA0LDRgtC90L7QtSDQv9C+0LLRgtC+0YDQtdC90LjQtSDQuCDQv9GA0LDQstC40LvQviAxMDAg0YXQvtC00L7QsiJ9LA0KICAgIHsiZGF0ZSI6ICIyMi4wMy4yMDIxIiwgIkVOIjoiQWRkaXRpb25hbCBmdW5jdGlvbmFsaXR5IGFuZCBidWdmaXhlcyBmb3IgYW5hbHlzaXMgYm9hcmQuIE5ldyBvcGVuaW5ncyIsICJSVSI6ItCd0L7QstGL0LUg0YTQuNGH0Lgg0Lgg0LHQsNCz0YTQuNC60YHRiyDQtNC70Y8g0LTQvtGB0LrQuCDQsNC90LDQu9C40LfQsC4g0J3QvtCy0YvQtSDQtNC10LHRjtGC0YsifSwNCiAgICB7ImRhdGUiOiAiMjEuMDMuMjAyMS8yIiwgIkVOIjoiQWRkZWQgc2ltcGxlIGFuYWx5c2lzIGJvYXJkIiwgIlJVIjoi0KPQv9GA0L7RidC10L3QvdCw0Y8g0LTQvtGB0LrQsCDQsNC90LDQu9C40LfQsCJ9LA0KICAgIHsiZGF0ZSI6ICIyMS4wMy4yMDIxLzEiLCAiRU4iOiJBZGRlZCAnUmVtZW1iZXIgbWUnIG9wdGlvbiBhbmQgbG9nb3V0IGJ1dHRvbiIsICJSVSI6ItCe0L/RhtC40Y8gJ9CX0LDQv9C+0LzQvdC40YLRjCDQvNC10L3Rjycg0Lgg0LLRi9GF0L7QtCDQuNC3INCw0LrQutCw0YPQvdGC0LAifSwNCiAgICB7ImRhdGUiOiAiMjAuMDMuMjAyMSIsICJFTiI6IkFkZGVkIGdhbWUgaW5mbyBhbmQgb3BlbmluZyBkYXRhYmFzZSIsICJSVSI6ItCh0LLQvtC00LrQsCDQvtCxINC40LPRgNC1INC4INCx0LDQt9CwINC00LXQsdGO0YLQvtCyIn0sDQogICAgeyJkYXRlIjogIjE5LjAzLjIwMjEiLCAiRU4iOiJBZGRlZCBpbi1nYW1lIGNoYXQsIG9wZW4gY2hhbGxlbmdlcyBhbmQgYXJiaXRyYXJ5IHRpbWUgY29udHJvbCIsICJSVSI6ItCS0L3Rg9GC0YDQuNC40LPRgNC+0LLQvtC5INGH0LDRgiwg0L7RgtC60YDRi9GC0YvQtSDQstGL0LfQvtCy0Ysg0Lgg0L/RgNC+0LjQt9Cy0L7Qu9GM0L3Ri9C5INC60L7QvdGC0YDQvtC70Ywg0LLRgNC10LzQtdC90LgifSwNCiAgICB7ImRhdGUiOiAiMTcuMDMuMjAyMSIsICJFTiI6IkFkZGVkIGNoYW5nZWxvZyIsICJSVSI6ItCU0L7QsdCw0LLQu9C10L0g0YHQv9C40YHQvtC6INC40LfQvNC10L3QtdC90LjQuSJ9DQpd"},{ name : "haxeui-core/styles/default/switches.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU1dJVENIIChERUZBVUxUKQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5zd2l0Y2ggew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBob3Jpem9udGFsLXNwYWNpbmc6IDVweDsNCn0NCg0KLnN3aXRjaC1sYWJlbCB7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLnN3aXRjaC1idXR0b24tc3ViIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgcGFkZGluZzogMHB4Ow0KICAgIGluaXRpYWwtd2lkdGg6IDQwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDIwcHg7DQp9DQoNCi5zd2l0Y2gtYnV0dG9uLXN1YjpkaXNhYmxlZCB7DQogICAgYm9yZGVyLWNvbG9yOiAkZGlzYWJsZWQtYm9yZGVyLWNvbG9yOw0KfQ0KDQouc3dpdGNoLWJ1dHRvbi1zdWIgLmJ1dHRvbiB7DQogICAgaGVpZ2h0OiAxMDAlOw0KICAgIHdpZHRoOiA1MCU7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIGZpbHRlcjogbm9uZTsNCn0NCg0KLnN3aXRjaC1idXR0b24tc3ViIC5idXR0b246ZGlzYWJsZWQgew0KICAgIGJhY2tncm91bmQ6ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCB2ZXJ0aWNhbDsNCiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7DQp9DQoNCi5zd2l0Y2gtYnV0dG9uLXN1Yi1leHRyYSB7DQogICAgaGVpZ2h0OiAwOw0KICAgIHdpZHRoOiAwOw0KICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGZpbHRlcjogbm9uZTsNCn0NCg0KQGtleWZyYW1lcyBzd2l0Y2hBbmltYXRlU2VsZWN0ZWQgew0KICAgIDAlIHsNCiAgICAgICAgcG9zOiAwOw0KICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgcG9zOiAxMDA7DQogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsNCiAgICB9DQp9DQoNCi5zd2l0Y2gtYnV0dG9uLXN1YjpzZWxlY3RlZCB7DQogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlU2VsZWN0ZWQgMC4ycyBlYXNlIDBzIDE7DQp9DQoNCi5zd2l0Y2gtYnV0dG9uLXN1Yjp1bnNlbGVjdGVkIHsNCiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVTZWxlY3RlZCAwLjJzIGVhc2UgMHMgMSByZXZlcnNlIGJhY2t3YXJkczsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU1dJVENIIChDSVJDTEUpDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmNpcmNsZS1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgZmlsdGVyOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICBwYWRkaW5nOiAwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDIwcHg7DQogICAgaW5pdGlhbC13aWR0aDogNDBweDsNCn0NCg0KLmNpcmNsZS1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViLWV4dHJhIHsNCiAgICBoZWlnaHQ6IDE0cHg7DQogICAgd2lkdGg6IDEwMCU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7DQogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsNCn0NCg0KLmNpcmNsZS1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViLWV4dHJhOmRpc2FibGVkIHsNCiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7ICAgIA0KfQ0KDQouY2lyY2xlLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWIgLmJ1dHRvbiB7DQogICAgd2lkdGg6IDIwcHg7DQogICAgaGVpZ2h0OiAyMHB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7DQp9DQoNCkBrZXlmcmFtZXMgc3dpdGNoQW5pbWF0ZVNlbGVjdGVkQ2lyY2xlIHsNCiAgICAwJSB7DQogICAgICAgIHBvczogMDsNCiAgICB9DQogICAgMTAwJSB7DQogICAgICAgIHBvczogMTAwOw0KICAgIH0NCn0NCg0KLmNpcmNsZS1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViOnNlbGVjdGVkIHsNCiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVTZWxlY3RlZENpcmNsZSAwLjJzIGVhc2UgMHMgMTsNCn0NCiANCi5jaXJjbGUtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1Yjp1bnNlbGVjdGVkIHsNCiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVTZWxlY3RlZENpcmNsZSAwLjJzIGVhc2UgMHMgMSByZXZlcnNlIGJhY2t3YXJkczsNCn0NCg0KDQpAa2V5ZnJhbWVzIHN3aXRjaEFuaW1hdGVFeHRyYVNlbGVjdGVkQ2lyY2xlIHsNCiAgICAwJSB7DQogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7DQogICAgfQ0KICAgIDEwMCUgew0KICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7DQogICAgfQ0KfQ0KDQouY2lyY2xlLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWItZXh0cmE6c2VsZWN0ZWQgew0KICAgIGFuaW1hdGlvbjogc3dpdGNoQW5pbWF0ZUV4dHJhU2VsZWN0ZWRDaXJjbGUgMC4ycyBlYXNlIDBzIDE7DQp9DQoNCi5jaXJjbGUtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1Yi1leHRyYTp1bnNlbGVjdGVkIHsNCiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVFeHRyYVNlbGVjdGVkQ2lyY2xlIDAuMnMgZWFzZSAwcyAxIHJldmVyc2UgYmFja3dhcmRzOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBTV0lUQ0ggKFBJTEwpDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnBpbGwtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1YiB7DQogICAgYm9yZGVyLXJhZGl1czogMjBweDsNCiAgICBpbml0aWFsLXdpZHRoOiA0MHB4Ow0KICAgIGluaXRpYWwtaGVpZ2h0OiAyMHB4Ow0KICAgIHBhZGRpbmc6IDBweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICBmaWx0ZXI6ICRub3JtYWwtaW5uZXItc2hhZG93Ow0KfQ0KDQoucGlsbC1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViOmRpc2FibGVkIHsNCiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7IA0KfQ0KDQoucGlsbC1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViIC5idXR0b24gew0KICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7DQogICAgd2lkdGg6IDIwcHg7DQogICAgaGVpZ2h0OiAyMHB4Ow0KICAgIGZpbHRlcjogbm9uZTsNCn0NCg0KLnBpbGwtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1Yi1leHRyYSB7DQogICAgaGVpZ2h0OiAwOw0KICAgIHdpZHRoOiAwOw0KICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGZpbHRlcjogbm9uZTsNCn0NCg0KQGtleWZyYW1lcyBzd2l0Y2hBbmltYXRlU2VsZWN0ZWRQaWxsIHsNCiAgICAwJSB7DQogICAgICAgIHBvczogMDsNCiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICB9DQogICAgMTAwJSB7DQogICAgICAgIHBvczogMTAwOw0KICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7DQogICAgfQ0KfQ0KDQoucGlsbC1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViOnNlbGVjdGVkIHsNCiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVTZWxlY3RlZFBpbGwgMC4ycyBlYXNlIDBzIDE7DQp9DQoNCi5waWxsLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWI6dW5zZWxlY3RlZCB7DQogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlU2VsZWN0ZWRQaWxsIDAuMnMgZWFzZSAwcyAxIHJldmVyc2UgYmFja3dhcmRzOw0KfQ0K"},{ name : "haxeui-core/styles/shared/right-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAYAAAAvZezQAAAEJXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjazVZbkiQnDPznFD4CkhASx+FRRPgGPr4Tqrp3ph+zs+v9cBENtIpKRKYEhOOfv2f4Cw8Zx5DUPJecI55UUuGKjsfzqbummHZ9Pulq6bM9RLteMEyCVs6/nq/xNzvdAc6moqcfgLxfL9rnF+Wamf0B6JpIlkeMzriAygUkfL6gC6Cey4q5uH1cQjvO9vr+pMHX0lC1m1WvwQ//k4G9oZhHmA8hiahZ0umArB8HqbuzasdAkoK+iKNWscsTEPKKp/jBq/CoSuHXqtx7D6JIPu0Bhs9k5nv70k76mvywKf4ws/T7zJ/spjfGPpO8fnMOD3Me5+pqyqA0X4u6LWX3MLCBctmfZRTDT9G3XQqKB0Rvh+Qj9thQOhViyDIp0aBKk47ddupwMfHBSAdm7izb5mJcuEsM0CmtQpMNig3oxdIhr8DKd19oz1v2dJ0cEw/CSCaA0Sk//5nyFmjOFfJE0U+eEBbwi1dwwI2l3KoxCoLQvMWRboJv5fFZugoU1E2zY4E1thOiKV2xteJIttASl8Dp2ibIxgUAijC3whkSKBAziVKmaMxGBB4d+lQAOZKGGyQgVR7wkpNIhjjIGMyNb4z2WFY+zdizIIRKFoM0SClolbCxIX4sOWKoqmhS1aymrkVrlpyy5pwtr82vmlgytWxmbsWqiydXz27uwYvXwkWwOWrJxYqXUmrFpBXIFV9XDKi1cZOWmrbcrHkrrXaET09de+7WPfTS6+AhA/vEyMOGjzLqQQdC6UiHHvmww49y1IlQmzLT1JmnTZ9l1rtqFHba0VP5vmp0U423Umug3VXDp2Y3CFrbiS7NoBgnguK2FEBA89IsOqXEYUm3NEPEISuU4aUucQYtxaBgOoh10l27H8p90i2k9J9045tyYUn3J5QLS7o3yj3r9kK1sU6bHiVshVYaLlKjIP20slduh/uMfXUdY+FDrnlIaQ3UYFfcg4ojd5KuIyzcOj9pQfjueHwDHZ6xfw86ADtB+FSajaOMhB1eLM826NEg1gbUIJD1Ym3h+2t5anGQQp4LO7wi7neww2dwHEdWdZ/2morT8coyMvW14LxhcJAu9KDx7Oi+Z60OXy76N1pIl6ohH1qoT9i/Bx0esBGaZdHSQZrlUgW/HBc5rSUomXDjuf/DuHny+/2A/Gn7PwBah39ce8PiBEBpdBvZd10243wg61vKuy6L88ui/EU0hVche2tLHYORJSMf65I73gTuhg5fZ0HBNRLue5+67p5zdNnuoy7bWZkWp+JuFThiOeMHfn9CK2cnPUXZvV3JFrCRpvuM77C+gR02+7gI27oCG1zroy/nkcw0zz2jrJfpjpNfuha+zAgC27W0hG0blH8JFd4s+5ehw1sG37Q2cXKs3PoX/YUPPAIScFcAAAGFaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1O1IhUHK4g4ZKhOFkRFBBepYhEslLZCqw4ml35Bk4YkxcVRcC04+LFYdXBx1tXBVRAEP0AcnZwUXaTE/yWFFjEeHPfj3b3H3TtAqJeZanaMA6pmGclYVMxkV8XAKwQEMIBZdEnM1OOpxTQ8x9c9fHy9i/As73N/jl4lZzLAJxLPMd2wiDeIpzctnfM+cYgVJYX4nHjMoAsSP3JddvmNc8FhgWeGjHRynjhELBbaWG5jVjRU4inisKJqlC9kXFY4b3FWy1XWvCd/YTCnraS4TnMYMSwhjgREyKiihDIsRGjVSDGRpP2oh3/I8SfIJZOrBEaOBVSgQnL84H/wu1szPznhJgWjQOeLbX+MAIFdoFGz7e9j226cAP5n4Epr+St1YOaT9FpLCx8BfdvAxXVLk/eAyx1g8EmXDMmR/DSFfB54P6NvygL9t0DPmttbcx+nD0Caulq+AQ4OgdECZa97vLu7vbd/zzT7+wF8pXKr0kUkPQAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6ZjA2MTJiMDQtMmJkZC00N2E3LTgyOGQtYzkzNWMwOTU5OTZlIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjVhODNkZjU5LTk2NGUtNDI5Zi05ZmEyLTg5ZDNmYWY4ZTc1ZiIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjExMjg5YWQzLTA2ZTEtNGU4Ni1hMTkyLTQ0ZWVhNjRkZDkzNiIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQ0MzQ1NTM4NjkyMjYyIgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YTI2YzU1ZDUtMDYxMi00NDZhLTgzZGEtYjZiNjA5NGI5ZjY5IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAyLTA4VDE5OjM4OjU4Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/Pj86b/sAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfmAggSJjqpzQQ4AAAALklEQVQI12MI7TrynwEJMDEwMDAgCzLBGDBBRqxaYGB1mQ0jEzKHAd1ABgYGBgAWuA/w/oe0hAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/native/main.css", data : "KiB7DQogICAgbmF0aXZlOiB0cnVlOw0KfQ0KDQouaHNsaWRlcjpuYXRpdmUsIC52c2xpZGVyOm5hdGl2ZSwgLmhwcm9ncmVzczpuYXRpdmUsIC52cHJvZ3Jlc3M6bmF0aXZlIHsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgYmFja2dyb3VuZDogbm9uZTsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLXJhZGl1czogbm9uZTsNCn0NCg0KLmJ1dHRvbjpuYXRpdmUsIC5kcm9wZG93bjpuYXRpdmUgew0KICAgIGJhY2tncm91bmQ6IG5vbmU7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJvcmRlci1yYWRpdXM6IG5vbmU7DQogICAgY29sb3I6IG5vbmU7DQp9DQoNCi50ZXh0ZmllbGQ6bmF0aXZlLCAudGV4dGFyZWE6bmF0aXZlIHsNCiAgICBiYWNrZ3JvdW5kOiBub25lOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBib3JkZXItcmFkaXVzOiBub25lOw0KICAgIGNvbG9yOiBub25lOw0KICAgIGZpbHRlcjogbm9uZTsNCn0NCg0KLmRpYWxvZzpuYXRpdmUgew0KICAgIHBhZGRpbmctdG9wOiAwcHg7DQp9"},{ name : "haxeui-core/styles/shared/warning-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABCUlEQVQ4jc2RPUoDURSFvzvzfgKKoCmSKmijSLSzF7ERrd1CIOIeBBcgLiCLCGg/jIq1rW5ABUFQUsSR92x8zkxw4tiIp3vvnnvOuRz41/BpY8knjcVpHKlcTlCIvQEUs+N12SD7jhdVSsf2EKGLsMLIHvwqgb9mgczcgTQ/ac84vSxbr0/1EmT2GKQ5GHYYDDuAnyd6O6p1gk/NKtAD0MphtAujvk/M2s8JRE4ADWB0SSAmktOpAv7C7uHZCW+jHToXANj2qd0t+X0th9qEbvh7GSkA5mbeCy7cFmvNE4TaCji7bHF+1Zo4sVxrniC1D8AEuxKPsjluA6g8muyDa9da9/F9TaM/wAcSz0RlELj/AwAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/haxeui_small.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAMAAABg3Am1AAAC91BMVEUAAABgbY0+U25ga4QwSGe/wMy2ucI8SWC1t8OGj6Sana+zuMd3gppicY1ibYm0ucUzZZvH0ODExdZ8hZw/TGQ+TGPFxth/hp+vtMJNXHLExNI/TmVlhq5hbYi6vc2pr75veZI0ZpyrvdTK0+Q7WoC0t8d/iZ/Gx9ezuMaorb3Gx9dmc49OWm+DiaOpw+CVqMJUe6uwtcGprr5gbIdteZRaZn11gJpgbIhiborM1+g/XoM4WH2zusw8S2RhaYFCUGVuepdyfJVLWG9UYHjDxdZhbYg8SmGeprfKytmSmKw6bqZnjryTqseXq8RQd6mmrb58iaF4g5m2uMd4gZiorrx3gZeKkqZmco5smMg0Y5fP3e5ol8rS3+4+drUzZZs0ZJhPe67AzN7J0+RTeKc5X4o3WoNCYog6WoKuv9ZihK7M1ea+ydyht9JBX4U2V35ieZzAxtd7h59ldZPIzt9je6BBVHBYZoDBwtNMWHCco7Rea4KYqsRWcJZxeI6/wtJSXXTEw9O6vc08RVicpLU5SV7Ly904Rl19h55KVm43RFpLf7lFerOZuNqcudpIeK48bqWftdGftdGZsc6OqsuswdlLd62qv9l2lrxjh7NlibRJbpumudBcga6svtWnutJdg7GKoL6svdZylL1uj7ZSeahJbJREZZCGlKyOm7OZorNgboyxtcNwfJmKkqWhprSHjaB5fJBmc4yor7ylp7Vomc08drVRiMSUttt+p9OStdt9p9M9d7bQ3+9nmMypxOGBqdQ6dbRtnc9gk8qsxuN6pdJ1odFwntBtnM1pms1SicVQh8RHfrs8draqxeKhvuCaut5yoNBilctajsZYjMSXuNxOhcBBerg0aJ8zZ52nwuGdvN6Vt9yOstlklcpckMZNhcM5b6o3a6TR4PDL2+7K2u23zuejwOBekchSisZZjcRVicI6c7EyZZvT4fHF2OzC1eu+0umkweGJr9dfkspik8hWi8VMg75Lgr1Bdq85cq+yyuWEq9VFe7VNUsNiAAAAtHRSTlMABQIDBAYDEgUFAhYWChcK/ac7OzYuFxQTDQwJpjsgDw/9p6aXOjQyMisTExIL+KenPDc0MiciGxXQlpVyXUdCPDk1MSIiHhwVD/7Tx6SkcG1dR0dGLCsq+/r5+Pb29vDMxL28vLerqKOhoKCXj454dnV1cXBpaGdiXldVTUlIQkE8OzYzKiYgHhz9/fz48fHW087OzMzKysjCwLu7t6Cgn5eXlJSFhXl4bm1jY11FRUM4IQf95cbSAAAEV0lEQVRIx32WZZwSQRjGF1ZQMMAEG+zE7u7u7u7u7u7u7m4WdlkQFEwEFOG48+70zu5u/eAE7C6s+nzgA7/3P888O/PODAEkTwclk4EfuZKIllQpV2BJJCRJoHKFKr82PZY2vyqaIRWlm2k0GZBK6jJKpOA/Rf4mxReULwdUuHCx4vm0KlkEUYJyzZLORbJC1atXsUuVnICQq5rMGLm7ANLQoTXLFeMQWF65yNmjrVqVgWq198DMKhkBkL/4vkCiz3vRcxHIsPFEe4woLsDyDm3XGsDfHqfXnvzFdKhSTpJIpy0/ImA2M0zg3tOEBI/n4q6aHYud1zbTZahccdaRlhedzqe+pNv+Bw9umoKjGpRKQ8jSF878lDEjJQZ83gSnYXOb0ws6d6o3a9w6g9Nntz37cvOmCejGiur1w8ATBGAxifc+JOw4dqrduJbepKs3wMARPW9evX5aAOSYl/lREg9Axuxb1bJF1zuCauSgL5QNAVkyW++ZY8RcvWOKlVsdAQpanUxM/RWj8VNM/Y3veh54z8SMbwSK9WiurwGBdE0B8DYQMz7S5aj6YKq+xkIIlCg63PpIGIK5bTOGCWHobyH96OxpwcLlWjShu/WDsB7Wij1+x/eutRistFKVb24160+Gnw8cX0zcSIkfNH9ZbikB5zTF+pbh8/ISJn8e6lYrO4gA+iFXw9n93yRG5xV7fH09pE5jaEAoZU2Lju3pwRYgr4i4iVehzyRgAABk0b7ae0aYV+zxPHUgNAAAtChRrOYjOD6XV0wE9VOxAbbI17GfNyqvKLl78JylKAG2SF++jYHPK9Yn0+rJoHkiAGzTaeuF44s9BkyH7SkENlz6H3B/OwKEU1pJ/8fiLrUGT0kQOommr/2r3k9RP/jQ+LM+pmna8vdZXb9LUZRDjT8rt3BPXP8kXrAAYENo4fit4bPQUNfE4/sdFARS8NbgNp8dVCMPcV6sV9zmQ9v7nYv+O3GfCouNx9sbN9BDj4UWEThvRLdScQPhFn1opjlZBDn8LMUp5TVqUXwIPP5IC3QpOm8kRLwaHgL4mHmHMvOz4r8nL0dIDY8ZfJA9wRH4WfF5eaWqa3AnnxcBQg8uL5+6uZo7jB9+xIDQA48v1A8I4OP+sUtYbLdbrnXd0ne5m3I4oggI4AvFKQDsruRg3M627dqN35rs/8YKEDYELhQMmC3h2tvX77odvfq2PVOkU6dztce36HH92Ut3HBsOkQKvLHQp/oLzuPI56I67dYsdMLFDkSUanS5Towq1x2yzGW3Jz158jYOzewUvRdieI2nXtZewlmV7bTrZoWJlTWkJmUaSsSpAjrfoYQMyfn7pZqnDoE3Rxb5/T1mo1q1bT6xbsXLJjBLUvSRGxgzLgzXsILrYCUWzJuh1ULduXfg6gOXhVpQipEuFvFgVKqGnAyGH748MQJkyVS2pQ6PzAoiuZNVMSJHHiRQgCgkWSSqlMc8fKUlKsPDz5w9agXK/G5FNrAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/error-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABGklEQVQ4jYWSPUrEUBRGz3sTbHQ2ohi1yE9hkwmCS7AQsVBEEMWViI0wiI1YuInUGi0EFyCDW5g4MMHkWgxqJr4bb/n4zrn3gwcd85EGwSSJo66M1eHwSDB5beuHcRqcajnjhAfhgRiGjQUC5nwpyy//FTjg73FK5gRteGHvEIDy9lqVWA0GsCs+dnm1tVAuijQ6mxOoZ5dTKEtH7V+JV2wF61I7OyPlFETazz+SSRI/eohXQeUKzba7BbMFyKcBGKfRjkHugF4z0PM3AKheX/6wgpz0s+crC9DP8nvB7NI6pRdv4qXbKgyN3i5J/T6iHr2pMDg+klbHBTsFisQJqwKAYhDsY8wNYAwcL2ZPQy2rTpFGfpGEa12ZLwdajcanz1XAAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/error-medium.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAACJElEQVRYhcXXzWsTQRjH8e8zSUprmv4JohTEm4fS9CJKbRUsePAFFPGkgVoE/xqxFnyDHvTmzZONUBAlkYCIF0GrnsRLS2uEJO4+HrRh1ybZecZin9OwJM/vszOzOyzscUnoH5vTUxPq9CaIi+Poztjz1y/+G2BrdvKcqDwGCn8uRahWRqv1h9ZebhfCAXKI3G/OlOet/Uwz0Cc8WSqwUFypLe06wCM8COEFMISbEZmAgHATYiBgULg7OI7bfwCA+Msn4rUPQYh8SDhA/vgMhSvXAOgs36PdGyAKi82ZMv0QPR9Dn2nXdjsxbvX7WRLR8xHdAfBe81YidDBgICIFsGy45F1rKxPQF9EFmHd7YglSYyPCAXyfLh8RlUfe4ZBeAr8ZSCJub85OHe0CJEcFGLJ0SS1BxwQAcE6Z7wIU/WntkNp4thn4XRJ3uoBYZRH4YQME7YHt6kicu9UFjK3U3qvqaaDp20HX14kaNaJGDd3YMIU75WKx+qoBf72Kt05MHhORp0DR0tEavq9ae7J9YcdZ4IuQUonC1QVkeIT2gyX021dzOPR4E5aq9VVVnSNjOQoXLlM4c578yTmGKjeCwnsCfBHx57XE+GNQOGQdxxnL4cYPIcMjRO/eBIVnAnwQAyoz3AsQiPAK9wYYEd7hJoAnwhRuBmQgzOEQ8GVUqtZXQc6SPjvaKnrJGg7/8HG6eWrisIvcdXCCuLujz16+De21p/ULbmcp8bwvNP8AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/close-button-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TS0UrDnaQ4pChOlnwC3GUKhbBQmkrtOpgcumH0KQhSXFxFFwLDn4sVh1cnHV1cBUEwQ8QNzcnRRcp8X9JoUWMB8f9eHfvcfcOEBoVpppdY4CqWUY6ERdz+RUx+IpeBBBEBOMSM/VkZiELz/F1Dx9f72I8y/vcn6NPKZgM8InEs0w3LOJ14ulNS+e8TxxmZUkhPiceNeiCxI9cl11+41xyWOCZYSObniMOE4ulDpY7mJUNlXiKOKqoGuULOZcVzluc1UqNte7JXxgqaMsZrtMcQgKLSCIFETJq2EAFFmK0aqSYSNN+3MMfcfwpcsnk2gAjxzyqUCE5fvA/+N2tWZyccJNCcSDwYtsfw0BwF2jWbfv72LabJ4D/GbjS2v5qA5j5JL3e1qJHQP82cHHd1uQ94HIHGHzSJUNyJD9NoVgE3s/om/LAwC3Qs+r21trH6QOQpa6WboCDQ2CkRNlrHu/u7uzt3zOt/n4AgVdyrUq8E1wAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQflCwUHHhl/NmAoAAABNElEQVQ4y92QsU4CQRCG/9nbdb2jsFHvBUh4A2NrjDEhhkeAWNNySnkl5HgHPR8BExpotbbS8AqExoS7y3Jkx+IguRAusdWpdnbnn3+/H/jzReXmcTA40UI3U9qMR0GQlN96UVTzWLaMNZNhv/+9uxflIS10E4yGa1WnF0W1sti1qgNGQwvdLGtkuUlpM/Yg28Tsu1bdPwyHsRXCeizbAJ8zaOmk6rUSoexGhWBRDBXnTOTxPhodCmbL2wbDBwAGLZ1MPYdhd7U/K36bduquDpo51QjwCwRKCHzmQNYvbq8/36fTvHLB7utb8dLJVJxq86Eg6gT4kp3G5c3V19tstj6I4LFsgQvnTORPYdhdjYIgSWnzwqAFgU+P6eiuMgNjzQSE+X7aoyBIMpHHIMyNNRP8r/oB7XSENXBA5j4AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/frames.css", data : "LmZyYW1lIHsNCiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KfQ0KDQouZnJhbWUtYm9yZGVyIHsNCiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCn0NCg0KLmZyYW1lLWNvbnRlbnRzIHsNCiAgICBwYWRkaW5nOiAxMHB4Ow0KICAgIHBhZGRpbmctdG9wOiAxNXB4Ow0KfQ0KDQouZnJhbWUtdGl0bGUgew0KICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7DQp9DQoNCi5mcmFtZS1sZWZ0LWxpbmUsIC5mcmFtZS1yaWdodC1saW5lIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBoZWlnaHQ6IDFweDsNCn0NCg0KLmZyYW1lIC5oZWFkZXIgew0KICAgIGhvcml6b250YWwtYWxpZ246IHJpZ2h0Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgbWFyZ2luLXJpZ2h0OiAxMHB4Ow0KICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQogICAgc3BhY2luZzogNXB4Ow0KfQ0KDQouZnJhbWUubGVmdC1oZWFkZXIgLmhlYWRlciB7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogbGVmdDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIG1hcmdpbi1yaWdodDogMTBweDsNCiAgICBtYXJnaW4tbGVmdDogMTBweDsNCiAgICBzcGFjaW5nOiA1cHg7DQogICAgcGFkZGluZy1yaWdodDogNXB4Ow0KfQ0KDQouZnJhbWUuY29sbGFwc2libGUgLmhlYWRlciB7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogbGVmdDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIF9tYXJnaW4tcmlnaHQ6IDEwcHg7DQogICAgbWFyZ2luLWxlZnQ6IDEwcHg7DQogICAgcGFkZGluZy1yaWdodDogMHB4Ow0KfQ0KDQouZnJhbWUuY29sbGFwc2libGUgLmZyYW1lLXRpdGxlLCAuZnJhbWUuY29sbGFwc2libGUgLmZyYW1lLWljb24gew0KICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOw0KfQ0KDQouZnJhbWUuY29sbGFwc2libGUgLmZyYW1lLWNvbnRlbnRzLmV4cGFuZGVkLCAuZnJhbWUuY29sbGFwc2libGUgLmZyYW1lLWJvcmRlci5leHBhbmRlZCB7DQogICAgaGlkZGVuOiBmYWxzZTsNCn0NCg0KLmZyYW1lLmNvbGxhcHNpYmxlIC5mcmFtZS1jb250ZW50cy5jb2xsYXBzZWQsIC5mcmFtZS5jb2xsYXBzaWJsZSAuZnJhbWUtYm9yZGVyLmNvbGxhcHNlZCB7DQogICAgaGlkZGVuOiB0cnVlOw0KfQ0KDQouZnJhbWUtY29sbGFwc2UtZXhwYW5kLWljb24uZXhwYW5kZWQgew0KICAgIHJlc291cmNlOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9leHBhbmRlZC1ibHVlLnBuZyI7DQogICAgcG9pbnRlci1ldmVudHM6IHRydWU7DQp9DQoNCi5mcmFtZS1jb2xsYXBzZS1leHBhbmQtaWNvbi5jb2xsYXBzZWQgew0KICAgIHJlc291cmNlOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9jb2xsYXBzZWQtYmx1ZS5wbmciOw0KICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOw0KfQ"}];
haxe_ds_ObjectMap.count = 0;
DateTools.DAY_SHORT_NAMES = ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];
DateTools.DAY_NAMES = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];
DateTools.MONTH_SHORT_NAMES = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
DateTools.MONTH_NAMES = ["January","February","March","April","May","June","July","August","September","October","November","December"];
GlobalBroadcaster.observers = [];
Networker.eventQueue = new net_EventProcessingQueue();
Networker.doNotReconnect = false;
Networker.reconnectionToken = "not_set";
Networker.sid = -1;
Networker.isConnected = false;
Networker.ignoreEmitCalls = false;
_$Preferences_Preference.FIVE_YEARS = 157680000;
Preferences.language = new _$Preferences_Preference(PreferenceName.Language,dict_Language.EN,true);
Preferences.marking = new _$Preferences_Preference(PreferenceName.Marking,gameboard_util_Marking.Over);
Preferences.premoveEnabled = new _$Preferences_Preference(PreferenceName.Premoves,false);
Preferences.branchingTabType = new _$Preferences_Preference(PreferenceName.BranchingType,BranchingTabType.Tree);
Preferences.branchingTurnColorIndicators = new _$Preferences_Preference(PreferenceName.BranchingShowTurnColor,true);
Preferences.silentChallenges = new _$Preferences_Preference(PreferenceName.SilentChallenges,false);
Preferences.autoScrollOnMove = new _$Preferences_Preference(PreferenceName.AutoScrollOnMoveReceived,AutoScrollType.OwnGameOnly);
browser_Blinker.specialTitleDisplayed = false;
browser_CredentialCookies.LOGIN_COOKIE = "saved_login";
browser_CredentialCookies.PASSWORD_COOKIE = "saved_password";
ds_IntHashSet.VAL_ABSENT = -2147483648;
ds_IntHashSet.EMPTY_SLOT = -1;
ds_IntHashSet.NULL_POINTER = -1;
ds_Printf.DEFAULT_PRECISION = 6;
ds_Printf.DEFAULT_NUM_EXP_DIGITS = 2;
ds_Printf._initialized = false;
ds_Printf.PAD_0 = 0;
ds_Printf.PAD_SPACE = 20;
ds_tools_GrowthRate.FIXED = 0;
ds_tools_GrowthRate.MILD = -1;
ds_tools_GrowthRate.NORMAL = -2;
ds_tools_GrowthRate.DOUBLE = -3;
haxe_ui_core_ComponentEvents.INTERACTIVE_EVENTS = ["mousemove","mouseover","mouseout","mousedown","mouseup","mousewheel","click","doubleclick","keydown","keyup"];
haxe_ui_core_ComponentBounds.__meta__ = { fields : { percentWidth : { clonable : null, bindable : null}, percentHeight : { clonable : null, bindable : null}, width : { bindable : null}, height : { bindable : null}}};
haxe_ui_backend_ComponentImpl.elementToComponent = new haxe_ds_ObjectMap();
haxe_ui_backend_ComponentImpl._stylesAdded = false;
haxe_ui_core_Component.__meta__ = { fields : { styleNames : { clonable : null}, styleString : { clonable : null}}};
gfx_Dialogs.queue = new gfx_utils_DialogQueue();
gfx_Scene.isPlayerInGame = false;
gfx_SceneManager.resizeHandlers = [];
gfx_analysis_Arrow.ARROW_THICKNESS = 2;
gfx_analysis_Arrow.ARROW_TRIANGLE_SIDE = 12;
gfx_analysis_Arrow.STRAIGHT_ARROW_SEGMENT_SIZE = 5;
var gfx_analysis_VariantPlainText_DEFAULT_STYLE = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3355443,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,false,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
gfx_analysis_VariantTree.BLOCK_INTERVAL_X = 15;
gfx_analysis_VariantTree.PERIOD_Y = 50;
haxe_ui_core_ItemRenderer.__meta__ = { fields : { allowHover : { clonable : null}}};
gfx_popups_ChallengeParamsDialog.MAX_START_SECS_ALLOWED = 21600;
gfx_popups_ChallengeParamsDialog.MAX_BONUS_SECS_ALLOWED = 120;
gfx_popups_StudyParamsDialog.MAX_TAG_COUNT = 10;
gfx_profile_complex_$components_PastGamesTab.GAMES_PAGE_SIZE = 10;
gfx_profile_complex_$components_StudiesTab.STUDIES_PAGE_SIZE = 10;
gfx_screens_LiveGame.MIN_SIDEBARS_WIDTH = 200;
gfx_screens_LiveGame.MAX_SIDEBARS_WIDTH = 350;
gfx_utils_Colors.border = 6701350;
gfx_utils_Colors.arrow = 16711680;
gfx_utils_Colors.variantTreeBackground = 15658734;
gfx_utils_Colors.variantTreeUnselectedArrow = 3355443;
gfx_utils_Colors.variantTreeSelectedArrow = 16711680;
haxe_Serializer.USE_CACHE = false;
haxe_Serializer.USE_ENUM_INDEX = false;
haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_ui_backend_BackendImpl.id = "html5";
haxe_ui_util_GenericConfig.cache = new haxe_ds_StringMap();
haxe_ui_Toolkit.styleSheet = new haxe_ui_styles_CompositeStyleSheet();
haxe_ui_Toolkit.properties = new haxe_ds_StringMap();
haxe_ui_Toolkit.nativeConfig = new haxe_ui_util_GenericConfig();
haxe_ui_Toolkit._theme = "default";
haxe_ui_Toolkit._backendProperties = new haxe_ui_util_Properties();
haxe_ui_Toolkit._built = false;
haxe_ui_Toolkit._backendBuilt = false;
haxe_ui_Toolkit._initialized = false;
haxe_ui_Toolkit.pixelsPerRem = 16;
haxe_ui_Toolkit.roundScale = true;
haxe_ui_Toolkit.autoScale = true;
haxe_ui_Toolkit._scaleX = 0;
haxe_ui_Toolkit._scaleY = 0;
haxe_ui_backend_PlatformBase.KEY_CODE_TAB = 9;
haxe_ui_backend_PlatformBase.KEY_CODE_UP = 38;
haxe_ui_backend_PlatformBase.KEY_CODE_DOWN = 40;
haxe_ui_backend_PlatformBase.KEY_CODE_LEFT = 37;
haxe_ui_backend_PlatformBase.KEY_CODE_RIGHT = 39;
haxe_ui_backend_PlatformBase.KEY_CODE_SPACE = 32;
haxe_ui_backend_PlatformBase.KEY_CODE_ENTER = 13;
haxe_ui_backend_PlatformBase.KEY_CODE_ESCAPE = 27;
haxe_ui_backend_PlatformBase.MOBILE_REGEXP = new EReg("(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino","gi");
haxe_ui_backend_PlatformImpl._vscrollWidth = -1;
haxe_ui_backend_PlatformImpl._hscrollHeight = -1;
haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["mousemove"] = "mousemove";
	_g.h["mouseover"] = "mouseover";
	_g.h["mouseout"] = "mouseout";
	_g.h["mousedown"] = "mousedown";
	_g.h["mouseup"] = "mouseup";
	_g.h["click"] = "click";
	_g.h["doubleclick"] = "dblclick";
	_g.h["rightmousedown"] = "mousedown";
	_g.h["rightmouseup"] = "mouseup";
	_g.h["rightclick"] = "contextmenu";
	_g.h["change"] = "change";
	_g.h["keydown"] = "keydown";
	_g.h["keyup"] = "keyup";
	_g.h["scrollchange"] = "scroll";
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["mousemove"] = "mousemove";
	_g.h["mouseover"] = "mouseover";
	_g.h["mouseout"] = "mouseout";
	_g.h["mousedown"] = "mousedown";
	_g.h["mouseup"] = "mouseup";
	_g.h["touchmove"] = "mousemove";
	_g.h["touchstart"] = "mousedown";
	_g.h["touchend"] = "mouseup";
	_g.h["click"] = "click";
	_g.h["contextmenu"] = "rightclick";
	_g.h["dblclick"] = "doubleclick";
	_g.h["change"] = "change";
	_g.h["keydown"] = "keydown";
	_g.h["keyup"] = "keyup";
	_g.h["scroll"] = "scrollchange";
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["mousemove"] = "touchmove";
	_g.h["mousedown"] = "touchstart";
	_g.h["mouseup"] = "touchend";
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_EventMapper.TOUCH_TO_MOUSE = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["touchmove"] = "mousemove";
	_g.h["touchstart"] = "mouseout";
	_g.h["touchend"] = "mousedown";
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_HtmlUtils._divHelpers = new haxe_ds_ObjectMap();
haxe_ui_backend_html5_HtmlUtils._divHelpersId = new haxe_ds_StringMap();
haxe_ui_backend_html5_HtmlUtils._dpi = 0;
haxe_ui_backend_html5_util_FontDetect._initialized = false;
haxe_ui_backend_html5_util_FontDetect._aFallbackFonts = ["serif","sans-serif","monospace","cursive","fantasy"];
haxe_ui_events_UIEvent.READY = "ready";
haxe_ui_events_UIEvent.DESTROY = "destroy";
haxe_ui_events_UIEvent.RESIZE = "resize";
haxe_ui_events_UIEvent.CHANGE = "change";
haxe_ui_events_UIEvent.BEFORE_CHANGE = "beforechange";
haxe_ui_events_UIEvent.MOVE = "move";
haxe_ui_events_UIEvent.INITIALIZE = "initialize";
haxe_ui_events_UIEvent.RENDERER_CREATED = "renderercreated";
haxe_ui_events_UIEvent.RENDERER_DESTROYED = "rendererdestroyed";
haxe_ui_events_UIEvent.HIDDEN = "hidden";
haxe_ui_events_UIEvent.SHOWN = "shown";
haxe_ui_events_UIEvent.ENABLED = "enabled";
haxe_ui_events_UIEvent.DISABLED = "disabled";
haxe_ui_events_UIEvent.BEFORE_CLOSE = "beforeclose";
haxe_ui_events_UIEvent.CLOSE = "close";
haxe_ui_events_UIEvent.PROPERTY_CHANGE = "propertychange";
haxe_ui_events_UIEvent.COMPONENT_ADDED = "componentadded";
haxe_ui_events_UIEvent.COMPONENT_REMOVED = "componentremoved";
haxe_ui_events_UIEvent.COMPONENT_ADDED_TO_PARENT = "componentaddedtoparent";
haxe_ui_events_UIEvent.COMPONENT_REMOVED_FROM_PARENT = "componentremovedfromparent";
haxe_ui_components_CalendarEvent.DATE_CHANGE = "datechange";
haxe_ui_components_DropDownBuilder.HANDLER_MAP = new haxe_ds_StringMap();
haxe_ui_components__$TabBar_Builder.SCROLL_INCREMENT = 20;
haxe_ui_containers_CalendarView.MONTH_NAMES = ["January","Febuary","March","April","May","June","July","August","September","October","November","December"];
haxe_ui_containers_CalendarView.DATE_FORMAT = "%Y-%m-%d";
haxe_ui_containers_ScrollViewEvents.INERTIAL_TIME_CONSTANT = 325;
haxe_ui_containers_dialogs_DialogButton.SAVE = "{{save}}";
haxe_ui_containers_dialogs_DialogButton.YES = "{{yes}}";
haxe_ui_containers_dialogs_DialogButton.NO = "{{no}}";
haxe_ui_containers_dialogs_DialogButton.CLOSE = "{{close}}";
haxe_ui_containers_dialogs_DialogButton.OK = "{{ok}}";
haxe_ui_containers_dialogs_DialogButton.CANCEL = "{{cancel}}";
haxe_ui_containers_dialogs_DialogButton.APPLY = "{{apply}}";
haxe_ui_containers_dialogs_DialogEvent.DIALOG_CLOSED = "dialogClosed";
haxe_ui_containers_dialogs_MessageBoxType.TYPE_INFO = "info";
haxe_ui_containers_dialogs_MessageBoxType.TYPE_QUESTION = "question";
haxe_ui_containers_dialogs_MessageBoxType.TYPE_WARNING = "warning";
haxe_ui_containers_dialogs_MessageBoxType.TYPE_ERROR = "error";
haxe_ui_containers_dialogs_MessageBoxType.TYPE_YESNO = "yesno";
haxe_ui_containers_menus_MenuEvent.MENU_SELECTED = "menuselected";
haxe_ui_containers_menus_MenuEvent.MENU_OPENED = "menuopened";
haxe_ui_containers_menus_MenuEvent.MENU_CLOSED = "menuclosed";
haxe_ui_core_Platform.METRIC_VSCROLL_WIDTH = "patform.metrics.vscroll.width";
haxe_ui_core_Platform.METRIC_HSCROLL_HEIGHT = "patform.metrics.hscroll.height";
haxe_ui_events_ActionEvent.ACTION_START = "actionstart";
haxe_ui_events_ActionEvent.ACTION_END = "actionend";
haxe_ui_events_AnimationEvent.LOADED = "animationloaded";
haxe_ui_events_AnimationEvent.START = "animationstart";
haxe_ui_events_AnimationEvent.END = "animationend";
haxe_ui_events_AnimationEvent.FRAME = "animationframe";
haxe_ui_events_DragEvent.DRAG_START = "dragstart";
haxe_ui_events_DragEvent.DRAG = "drag";
haxe_ui_events_DragEvent.DRAG_END = "dragend";
haxe_ui_events_FocusEvent.FOCUS_IN = "focusin";
haxe_ui_events_FocusEvent.FOCUS_OUT = "focusout";
haxe_ui_events_ItemEvent.COMPONENT_EVENT = "itemcomponentevent";
haxe_ui_events_KeyboardEvent.KEY_DOWN = "keydown";
haxe_ui_events_KeyboardEvent.KEY_PRESS = "keypress";
haxe_ui_events_KeyboardEvent.KEY_UP = "keyup";
haxe_ui_events_MouseEvent.MOUSE_MOVE = "mousemove";
haxe_ui_events_MouseEvent.MOUSE_OVER = "mouseover";
haxe_ui_events_MouseEvent.MOUSE_OUT = "mouseout";
haxe_ui_events_MouseEvent.MOUSE_DOWN = "mousedown";
haxe_ui_events_MouseEvent.MOUSE_UP = "mouseup";
haxe_ui_events_MouseEvent.MOUSE_WHEEL = "mousewheel";
haxe_ui_events_MouseEvent.CLICK = "click";
haxe_ui_events_MouseEvent.DBL_CLICK = "doubleclick";
haxe_ui_events_MouseEvent.RIGHT_CLICK = "rightclick";
haxe_ui_events_MouseEvent.RIGHT_MOUSE_DOWN = "rightmousedown";
haxe_ui_events_MouseEvent.RIGHT_MOUSE_UP = "rightmouseup";
haxe_ui_events_ScrollEvent.CHANGE = "scrollchange";
haxe_ui_events_ScrollEvent.START = "scrollstart";
haxe_ui_events_ScrollEvent.STOP = "scrollstop";
haxe_ui_events_ScrollEvent.SCROLL = "scrollscroll";
haxe_ui_events_SortEvent.SORT_CHANGED = "sortchanged";
haxe_ui_events_ThemeEvent.THEME_CHANGED = "themechanged";
haxe_ui_events_ValidationEvent.START = "validationstart";
haxe_ui_events_ValidationEvent.STOP = "validationstop";
haxe_ui_locale_LocaleEvent.LOCALE_CHANGED = "localeChanged";
haxe_ui_locale_LocaleManager._registeredComponents = new haxe_ds_ObjectMap();
haxe_ui_styles_Parser.cssKeyframesRegex = new EReg("@keyframes\\s*(\\w+?)\\s*\\{([\\s\\S]*?\\}\\s*?)\\}","gi");
haxe_ui_styles_Parser.cssKeyframeSelectorRegex = new EReg("([\\w%]+)\\s*\\{\\s*([\\s\\S]*?)\\s*\\}","gi");
haxe_ui_styles_Parser.combinedCSSMediaRegex = new EReg("((\\s*?(?:/\\*[\\s\\S]*?\\*/)?\\s*?@media[\\s\\S]*?)\\{([\\s\\S]*?)\\}\\s*?\\})|(([\\s\\S]*?)\\{([\\s\\S]*?)\\})","gi");
haxe_ui_styles_Parser.cssCommentsRegex = new EReg("(/\\*[\\s\\S]*?\\*/)","gi");
haxe_ui_styles_Parser.cssImportStatementRegex = new EReg("@import .*?;","gi");
haxe_ui_styles_Parser.newlineRegex = new EReg("\n+","g");
haxe_ui_styles_ValueTools.timeEReg = new EReg("^(-?\\d+(?:\\.\\d+)?)(s|ms)$","gi");
haxe_ui_styles_ValueTools.colors = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["black"] = 0;
	_g.h["red"] = 16711680;
	_g.h["lime"] = 65280;
	_g.h["blue"] = 255;
	_g.h["white"] = 16777215;
	_g.h["aqua"] = 65535;
	_g.h["fuchsia"] = 16711935;
	_g.h["yellow"] = 16776960;
	_g.h["maroon"] = 8388608;
	_g.h["green"] = 32768;
	_g.h["navy"] = 128;
	_g.h["olive"] = 8421376;
	_g.h["purple"] = 8388736;
	_g.h["teal"] = 32896;
	_g.h["silver"] = 12632256;
	_g.h["gray"] = 8421504;
	_g.h["grey"] = 8421504;
	$r = _g;
	return $r;
}(this));
haxe_ui_styles_animation_AnimationOptions.DEFAULT_DURATION = 0;
haxe_ui_styles_animation_AnimationOptions.DEFAULT_DELAY = 0;
haxe_ui_styles_animation_AnimationOptions.DEFAULT_ITERATION_COUNT = 1;
haxe_ui_styles_animation_AnimationOptions.DEFAULT_EASING_FUNCTION = haxe_ui_styles_EasingFunction.EASE;
haxe_ui_styles_animation_AnimationOptions.DEFAULT_DIRECTION = "normal";
haxe_ui_styles_animation_AnimationOptions.DEFAULT_FILL_MODE = "forwards";
haxe_ui_themes_Theme.DEFAULT = "default";
haxe_ui_themes_Theme.DARK = "dark";
haxe_ui_tooltips_ToolTipManager.defaultDelay = 500;
haxe_ui_tooltips_ToolTipManager.fade = true;
haxe_ui_util_MathUtil.MAX_INT = 2147483647;
haxe_ui_util_MathUtil.MIN_INT = -2147483648;
haxe_ui_util_StyleUtil.style2ComponentEReg = new EReg("-(\\w)","g");
haxe_ui_util_StyleUtil.component2StyleEReg = new EReg("([A-Z])","g");
haxe_ui_util_html5_ReadMode.None = "none";
haxe_ui_util_html5_ReadMode.Text = "text";
haxe_ui_util_html5_ReadMode.Binary = "binary";
hx_strings_Char.CHAR_CASE_MAPPER = new hx_strings__$Char_CharCaseMapper();
hx_strings_Char.BACKSPACE = 8;
hx_strings_Char.TAB = 9;
hx_strings_Char.LF = 10;
hx_strings_Char.CR = 13;
hx_strings_Char.ESC = 27;
hx_strings_Char.SPACE = 32;
hx_strings_Char.EXCLAMATION_MARK = 33;
hx_strings_Char.DOUBLE_QUOTE = 34;
hx_strings_Char.HASH = 35;
hx_strings_Char.DOLLAR = 36;
hx_strings_Char.AMPERSAND = 38;
hx_strings_Char.SINGLE_QUOTE = 39;
hx_strings_Char.BRACKET_ROUND_LEFT = 40;
hx_strings_Char.BRACKET_ROUND_RIGHT = 41;
hx_strings_Char.ASTERISK = 42;
hx_strings_Char.PLUS = 43;
hx_strings_Char.COMMA = 44;
hx_strings_Char.MINUS = 45;
hx_strings_Char.DOT = 46;
hx_strings_Char.SLASH = 47;
hx_strings_Char.ZERO = 48;
hx_strings_Char.ONE = 49;
hx_strings_Char.TWO = 50;
hx_strings_Char.TRHEE = 51;
hx_strings_Char.FOUR = 52;
hx_strings_Char.FIVE = 53;
hx_strings_Char.SIX = 54;
hx_strings_Char.SEVEN = 55;
hx_strings_Char.EIGHT = 56;
hx_strings_Char.NINE = 57;
hx_strings_Char.COLON = 58;
hx_strings_Char.SEMICOLON = 59;
hx_strings_Char.LOWER_THAN = 60;
hx_strings_Char.EQUALS = 61;
hx_strings_Char.GREATER_THAN = 62;
hx_strings_Char.QUESTION_MARK = 63;
hx_strings_Char.BRACKET_SQUARE_LEFT = 91;
hx_strings_Char.BACKSLASH = 92;
hx_strings_Char.BRACKET_SQUARE_RIGHT = 93;
hx_strings_Char.CARET = 94;
hx_strings_Char.UNDERSCORE = 95;
hx_strings_Char.BRACKET_CURLY_LEFT = 123;
hx_strings_Char.PIPE = 124;
hx_strings_Char.BRACKET_CURLY_RIGHT = 125;
hx_strings__$CharIterator_NullCharIterator.INSTANCE = new hx_strings__$CharIterator_NullCharIterator();
hx_strings_Pattern.__meta__ = { obj : { immutable : null, threadSafe : null}};
hx_strings_Matcher.__meta__ = { obj : { notThreadSafe : null}};
hx_strings_StringBuilder.__meta__ = { obj : { notThreadSafe : null}};
hx_strings_internal_OS.isNodeJS = (typeof process !== 'undefined') && (typeof process.release !== 'undefined') && (process.release.name === 'node');
hx_strings_internal_OS.isWindows = (function($this) {
	var $r;
	var os = hx_strings_internal_OS.isNodeJS ? process.platform : $global.navigator.platform;
	$r = new EReg("win","i").match(os);
	return $r;
}(this));
hx_strings_Strings.REGEX_ANSI_ESC = (function($this) {
	var $r;
	var this1 = hx_strings_internal__$Either3__$Either3.b("g");
	$r = hx_strings_Pattern.compile(String.fromCodePoint(27) + "\\[[;\\d]*m",this1);
	return $r;
}(this));
hx_strings_Strings.REGEX_HTML_UNESCAPE = (function($this) {
	var $r;
	var this1 = hx_strings_internal__$Either3__$Either3.b("g");
	$r = hx_strings_Pattern.compile("&(#\\d+|amp|nbsp|apos|lt|gt|quot);",this1);
	return $r;
}(this));
hx_strings_Strings.REGEX_SPLIT_LINES = (function($this) {
	var $r;
	var this1 = hx_strings_internal__$Either3__$Either3.b("g");
	$r = hx_strings_Pattern.compile("\\r?\\n",this1);
	return $r;
}(this));
hx_strings_Strings.REGEX_REMOVE_XML_TAGS = (function($this) {
	var $r;
	var this1 = hx_strings_internal__$Either3__$Either3.b("g");
	$r = hx_strings_Pattern.compile("<[!a-zA-Z\\/][^>]*>",this1);
	return $r;
}(this));
hx_strings_Strings.POS_NOT_FOUND = -1;
hx_strings_Strings.NEW_LINE_NIX = "\n";
hx_strings_Strings.NEW_LINE_WIN = "\r\n";
hx_strings_Strings.NEW_LINE = hx_strings_internal_OS.isWindows ? "\r\n" : "\n";
net_shared_Constants.msAddedByOpponent = 15000;
net_shared_Constants.minutesBeforeRematchExpires = 10;
net_shared_board_Situation.defaultStartingHash = net_shared_board_Situation.defaultStarting().getHash();
net_shared_utils_MathUtils.HALF_SQRT3 = Math.sqrt(3) / 2;
struct_ChallengeParams.cookieName = "lastChallengeParams";
tests_Interceptor.handlers = new haxe_ds_IntMap();
tests_UITest.history = [];
utils_Changelog.changelog = [];
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
